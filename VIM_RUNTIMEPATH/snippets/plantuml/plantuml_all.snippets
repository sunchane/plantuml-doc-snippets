snippet 10_TIMING_DIAGRAM_10.10Hidden_state " Hidden state"
	It is also possible to hide some state.
	
	@startuml
	concise "Web User" as WU
	
	@0
	WU is {-}
	
	@100
	WU is A1
	
	@200
	WU is {-}
	
	@300
	WU is {hidden}
	
	@400
	WU is A3
	
	@500
	WU is {-}
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.11Hide_time_axis " Hide time axis"
	It is possible to hide time axis.
	
	@startuml
	hide time-axis
	concise "Web User" as WU
	
	WU is Absent
	
	@WU
	0 is Waiting
	+500 is ok
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.12Using_Time_and_Date " Using Time and Date"
	It is possible to use time or date.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@2019/07/02
	WU is Idle
	
	WB is Idle
	
	@2019/07/04
	WU is Waiting : some note
	WB is Processing : some other note
	
	@2019/07/05
	WB is Waiting
	@enduml
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@1:15:00
	WU is Idle
	WB is Idle
	
	@1:16:30
	WU is Waiting : some note
	WB is Processing : some other note
	
	@1:17:30
	WB is Waiting
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.13Adding_constraint " Adding constraint"
	It is possible to display time constraints on the diagrams.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	WB is Initializing
	WU is Absent
	
	@WB
	0 is idle
	+200 is Processing
	
	+100 is Waiting
	WB@0 <-> @50 : {50 ms lag}
	
	@WU
	0 is Waiting
	+500 is ok
	@200 <-> @+150 : {150 ms}
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.14Highlighted_period " Highlighted period"
	You can higlight a part of diagram.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@0
	WU is Idle
	WB is Idle
	
	@100
	WU -> WB : URL
	WU is Waiting #LightCyan;line:Aqua
	
	@200
	WB is Proc.
	
	@300
	WU -> WB@350 : URL2
	WB is Waiting
	
	@+200
	WU is ok
	
	@+200
	WB is Idle
	
	highlight 200 to 450 #Gold;line:DimGrey : This is my caption
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.15Adding_texts " Adding texts"
	You can optionally add a title, a header, a footer, a legend and a caption:
	
	@startuml
	Title This is my title
	header: some header
	footer: some footer
	legend
	        Some legend
	        end legend
	        caption some caption
	
	        robust "Web Browser" as WB
	        concise "Web User" as WU
	
	        @0
	        WU is Idle
	        WB is Idle
	
	        @100
	        WU is Waiting
	        WB is Processing
	
	        @300
	        WB is Waiting
	        @enduml
	
snippet 10_TIMING_DIAGRAM_10.16Complete_example " Complete example"
	Thanks to Adam Rosien for this example.
	
	@startuml
	concise "Client" as Client
	concise "Server" as Server
	
	concise "Response freshness" as Cache
	
	Server is idle
	Client is idle
	
	@Client
	0 is send
	Client -> Server@+25 : GET
	+25 is await
	+75 is recv
	+25 is idle
	+25 is send
	Client -> Server@+25 : GET\nIf-Modified-Since: 150
	+25 is await
	+50 is recv
	+25 is idle
	@100 <-> @275 : no need to re-request from server
	
	@Server
	25 is recv
	+25 is work
	+25 is send
	Server -> Client@+25 : 200 OK\nExpires: 275
	+25 is idle
	+75 is recv
	+25 is send
	Server -> Client@+25 : 304 Not Modified
	+25 is idle
	
	@Cache
	75 is fresh
	+200 is stale
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.17Digital_Example " Digital Example"
	
	@startuml
	scale 5 as 150 pixels
	
	clock clk with period 1
	binary "enable" as en
	binary "R/W" as rw
	binary "data Valid" as dv
	concise "dataBus" as db
	concise "address bus" as addr
	
	@6 as :write_beg
	@10 as :write_end
	
	@15 as :read_beg
	@19 as :read_end
	
	@0
	en is low
	db is "0x0"
	addr is "0x03f"
	rw is low
	dv is 0
	
	@:write_beg-3
	en is high
	@:write_beg-2
	db is "0xDEADBEEF"
	@:write_beg-1
	dv is 1
	@:write_beg
	rw is high
	
	@:write_end
	rw is low
	dv is low
	@:write_end+1
	rw is low
	db is "0x0"
	addr is "0x23"
	
	@12
	dv is high
	@13
	db is "0xFFFF"
	
	@20
	en is low
	dv is low
	@21
	db is "0x0"
	
	highlight :write_beg to :write_end #Gold:Write
	highlight :read_beg to :read_end #lightBlue:Read
	
	db@:write_beg-1 <-> @:write_end : setup time
	db@:write_beg-1 -> addr@:write_end+1 : hold
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.18Adding_color " Adding color"
	You can add color.
	
	@startuml
	concise "LR" as LR
	concise "ST" as ST
	
	LR is AtPlace #palegreen
	ST is AtLoad #gray
	
	@LR
	0 is Lowering
	100 is Lowered #pink
	350 is Releasing
	
	@ST
	200 is Moving
	@enduml
	
	[Ref. QA-5776]
snippet 10_TIMING_DIAGRAM_10.1_Declaring_participant " Declaring participant"
	You declare participant using the following keywords, depending on how you want them to be drawn.
	• concise: A simplified signal designed to show the movement of data (great for messages).
	• robust: A complex line signal designed to show the transition from one state to another (can have
	many states).
	• clock: A ’clocked’ signal that repeatedly transitions from high to low
	• binary: A specific signal restricted to only 2 states (binary).
	You define state change using the @ notation, and the is verb.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@0
	WU is Idle
	WB is Idle
	
	@100
	WU is Waiting
	WB is Processing
	
	@300
	WB is Waiting
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.2_Binary_and_Clock " Binary and Clock"
	It’s also possible to have binary and clock signal, using the following keywords:
	• binary
	• clock
	
	@startuml
	clock clk with period 1
	binary "Enable" as EN
	
	@0
	EN is low
	
	@5
	EN is high
	
	@10
	
	EN is low
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.3_Adding_message " Adding message"
	You can add message using the following syntax.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@0
	WU is Idle
	WB is Idle
	
	@100
	WU -> WB : URL
	WU is Waiting
	WB is Processing
	
	@300
	WB is Waiting
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.4_Relative_time " Relative time"
	It is possible to use relative time with @.
	
	@startuml
	robust "DNS Resolver" as DNS
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@0
	WU is Idle
	WB is Idle
	DNS is Idle
	
	@+100
	WU -> WB : URL
	WU is Waiting
	WB is Processing
	
	@+200
	WB is Waiting
	
	WB -> DNS@+50 : Resolve URL
	
	@+100
	DNS is Processing
	
	@+300
	DNS is Idle
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.5_Anchor_Points " Anchor Points"
	Instead of using absolute or relative time on an absolute time you can define a time as an anchor point
	by using the as keyword and starting the name with a :.
	@XX as :<anchor point name>
	
	@startuml
	clock clk with period 1
	binary "enable" as EN
	concise "dataBus" as db
	
	@0 as :start
	@5 as :en_high
	@10 as :en_low
	
	@:start
	EN is low
	db is "0x0000"
	
	@:en_high
	EN is high
	
	@:en_low
	EN is low
	
	@:en_high-2
	db is "0xf23a"
	
	@:en_high+6
	db is "0x0000"
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.6_Participant_oriented " Participant oriented"
	Rather than declare the diagram in chronological order, you can define it by participant.
	
	@startuml
	robust "Web Browser" as WB
	concise "Web User" as WU
	
	@WB
	0 is idle
	+200 is Proc.
	+100 is Waiting
	
	@WU
	0 is Waiting
	+500 is ok
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.7_Setting_scale " Setting scale"
	You can also set a specific scale.
	
	@startuml
	concise "Web User" as WU
	scale 100 as 50 pixels
	
	@WU
	0 is Waiting
	+500 is ok
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.8_Initial_state " Initial state"
	You can also define an inital state.
	
	@startuml
	robust "Web Browser" as WB
	
	concise "Web User" as WU
	
	WB is Initializing
	WU is Absent
	
	@WB
	0 is idle
	+200 is Processing
	+100 is Waiting
	
	@WU
	0 is Waiting
	+500 is ok
	@enduml
	
snippet 10_TIMING_DIAGRAM_10.9_Intricated_state " Intricated state"
	A signal could be in some undefined state.
	
	@startuml
	robust "Signal1" as S1
	robust "Signal2" as S2
	S1 has 0,1,2,hello
	S2 has 0,1,2
	@0
	S1 is 0
	S2 is 0
	@100
	S1 is {0,1} #SlateGrey
	S2 is {0,1}
	@200
	S1 is 1
	S2 is 0
	@300
	S1 is hello
	S2 is {0,2}
	@enduml
	
snippet 10_TIMING_DIAGRAM_10_Timing_Diagram " TIMING DIAGRAM"
	
	10 Timing Diagram
	This is still under construction. You can propose new features if you need some.
	
snippet 1_SEQUENCE_DIAGRAM_1.10_Splitting_diagrams " Splitting diagrams"
	The newpage keyword is used to split a diagram into several images.
	You can put a title for the new page just after the newpage keyword. This title overrides the previously
	specified title if any.
	This is very handy with Word to print long diagram on several pages.
	(Note: this really does work. Only the first page is shown below, but it is a display artifact.)
	
	@startuml
	
	Alice -> Bob : message 1
	Alice -> Bob : message 2
	
	newpage
	
	Alice -> Bob : message 3
	Alice -> Bob : message 4
	
	newpage A title for the\nlast page
	
	Alice -> Bob : message 5
	Alice -> Bob : message 6
	@enduml
	
snippet 11_DISPLAY_JSON_DATA_11.1_Complex_example " Complex example"
	You can use complex JSON structure.
	
	@startjson
	{
	        "firstName": "John",
	        "lastName": "Smith",
	        "isAlive": true,
	        "age": 27,
	        "address": {
	                "streetAddress": "21 2nd Street",
	                "city": "New York",
	                "state": "NY",
	                "postalCode": "10021-3100"
	                },
	                "phoneNumbers": [
	                {
	                        "type": "home",
	                        "number": "212 555-1234"
	                        },
	                        {
	                                "type": "office",
	                                "number": "646 555-4567"
	                        }
	                        ],
	                        "children": [],
	                        "spouse": null
	                }
	                @endjson
	
snippet 1_SEQUENCE_DIAGRAM_1.11_Grouping_message " Grouping message"
	It is possible to group messages together using the following keywords:
	• alt/else
	• opt
	• loop
	• par
	• break
	• critical
	• group, followed by a text to be displayed
	It is possible to add a text that will be displayed into the header (for group, see next paragraph ’Secondary
	group label’).
	        The end keyword is used to close the group.
	        Note that it is possible to nest groups.
	
	        @startuml
	        Alice -> Bob: Authentication Request
	
	        alt successful case
	
	                Bob -> Alice: Authentication Accepted
	
	        else some kind of failure
	
	                Bob -> Alice: Authentication Failure
	                group My own label
	                        Alice -> Log : Log attack start
	                        loop 1000 times
	                                Alice -> Bob: DNS Attack
	                        end
	                        Alice -> Log : Log attack end
	                end
	
	        else Another type of failure
	
	                Bob -> Alice: Please repeat
	
	        end
	        @enduml
	
snippet 11_DISPLAY_JSON_DATA_11.2_Highlight_parts " Highlight parts"
	@startjson
	#highlight "lastName"
	#highlight "address" / "city"
	#highlight "phoneNumbers" / "0" / "number"
	{
	        "firstName": "John",
	        "lastName": "Smith",
	        "isAlive": true,
	        "age": 28,
	        "address": {
	                "streetAddress": "21 2nd Street",
	                "city": "New York",
	                "state": "NY",
	                "postalCode": "10021-3100"
	                },
	                "phoneNumbers": [
	                {
	                        "type": "home",
	                        "number": "212 555-1234"
	                        },
	                        {
	                                "type": "office",
	                                "number": "646 555-4567"
	                        }
	                        ],
	                        "children": [],
	                        "spouse": null
	                }
	                @endjson
	
snippet 1_SEQUENCE_DIAGRAM_1.12_Secondary_group_label " Secondary group label"
	For group, it is possible to add, between[ and ], a secondary text or label that will be displayed into the
	header.
	
	@startuml
	Alice -> Bob: Authentication Request
	Bob -> Alice: Authentication Failure
	group My own label [My own label 2]
	        Alice -> Log : Log attack start
	        loop 1000 times
	                Alice -> Bob: DNS Attack
	        end
	        Alice -> Log : Log attack end
	end
	@enduml
	
	[Ref. QA-2503]
	
snippet 11_DISPLAY_JSON_DATA_11.3.1_Synthesis_of_all_JSON_basic_element " Synthesis of all JSON basic element"
	@startjson
	{
	        "null": null,
	        "true": true,
	        "false": false,
	        "JSON_Number": [-1, -1.1, "<color:green>TBC"],
	        "JSON_String": "a\nb\rc\td <color:green>TBC...",
	        "JSON_Object": {
	                "{}": {},
	                "k_int": 123,
	                "k_str": "abc",
	                "k_obj": {"k": "v"}
	                },
	                "JSON_Array" : [
	                [],
	                [true, false],
	                [-1, 1],
	                ["a", "b", "c"],
	                ["mix", null, true, 1, {"k": "v"}]
	                ]
	        }
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.3_JSON_basic_element " JSON basic element"
	
snippet 1_SEQUENCE_DIAGRAM_1.13_Notes_on_messages " Notes on messages"
	It is possible to put notes on message using the note leftor note rightkeywords just after the message.
	You can have a multi-line note using the end note keywords.
	
	@startuml
	Alice->Bob : hello
	note left: this is a first note
	
	Bob->Alice : ok
	note right: this is another note
	
	Bob->Bob : I am thinking
	note left
	        a note
	        can also be defined
	        on several lines
	end note
	@enduml
	
snippet 11_DISPLAY_JSON_DATA_11.4.1_Array_type " Array type"
	
	@startjson
	{
	        "Numeric": [1, 2, 3],
	        "String ": ["v1a", "v2b", "v3c"],
	        "Boolean": [true, false, true]
	}
	
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.4.2_Minimal_array_or_table " Minimal array or table"
	
snippet 11_DISPLAY_JSON_DATA_11.4.3_Number_array " Number array"
	
	@startjson
	[1, 2, 3]
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.4.4_String_array " String array"
	
	@startjson
	["1a", "2b", "3c"]
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.4.5_Boolean_array " Boolean array"
	@startjson
	[true, false, true]
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.4_JSON_array_or_table " JSON array or table"
	
snippet 1_SEQUENCE_DIAGRAM_1.14_Some_other_notes " Some other notes"
	It is also possible to place notes relative to participant with note left of , note right of or note
	over keywords.
	It is possible to highlight a note by changing its background color.
	You can also have a multi-line note using the end note keywords.
	
	@startuml
	participant Alice
	participant Bob
	note left of Alice #aqua
	        This is displayed
	        left of Alice.
	end note
	
	note right of Alice: This is displayed right of Alice.
	
	note over Alice: This is displayed over Alice.
	
	note over Alice, Bob #FFAAAA: This is displayed\n over Bob and Alice.
	
	note over Bob, Alice
	        This is yet another
	        example of
	        a long note.
	
	end note
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.15_Changing_notes_shape " Changing notes shape [hnote, rnote]"
	You can use hnote and rnote keywords to change note shapes :
	• hnote for hexagonal note;
	• rnote for rectangle note.
	
	@startuml
	caller -> server : conReq
	hnote over caller : idle
	caller <- server : conConf
	rnote over server
	        "r" as rectangle
	        "h" as hexagon
	endrnote
	rnote over server
	        this is
	        on several
	        lines
	endrnote
	hnote over caller
	        this is
	        on several
	        lines
	endhnote
	@enduml
	
	[Ref. QA-1765]
	
snippet 11_DISPLAY_JSON_DATA_11.5_JSON_numbers " JSON numbers"
	
	@startjson
	{
	        "DecimalNumber": [-1, 0, 1],
	        "DecimalNumber . Digits": [-1.1, 0.1, 1.1],
	        "DecimalNumber ExponentPart": [1E5]
	}
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.6.1_JSON_Unicode " JSON Unicode"
	On JSON you can use Unicode directly or by using escaped form like .
	
	@startjson
	{
	        "<color:blue><b>code": "<color:blue><b>value",
	        "a\\u005Cb": "a\u005Cb",
	        "\\uD83D\\uDE10": "\uD83D\uDE10",
	        "￿": "￿"
	}
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.6.2_JSON_two-character_escape_sequence " JSON two-character escape sequence"
	
	@startjson
	{
	        "**legend**: character name": ["**two-character escape sequence**", "example (between 'a' and 'b')"],
	        "quotation mark character (U+0022)": ["\\\"", "a\"b"],
	        "reverse solidus character (U+005C)": ["\\\\", "a\\b"],
	        "solidus character (U+002F)": ["\\\/", "a\/b"],
	        "backspace character (U+0008)": ["\\b", "a\bb"],
	        "form feed character (U+000C)": ["\\f", "a\fb"],
	        "line feed character (U+000A)": ["\\n", "a\nb"],
	        "carriage return character (U+000D)": ["\\r", "a\rb"],
	        "character tabulation character (U+0009)": ["\\t", "a\tb"]
	}
	@endjson
	
	TODO: FIXME FIXME or not ￿, on the same item as management in PlantUML ￿ TODO: FIXME
	@startjson
	[
	"\\\\",
	"\\n",
	"\\r",
	"\\t"
	]
	@endjson
	
snippet 11_DISPLAY_JSON_DATA_11.6_JSON_strings " JSON strings"
	
snippet 1_SEQUENCE_DIAGRAM_1.16_Note_over_all_participants " Note over all participants [across]"
	You can directly make a note over all participants, with the syntax:
	• note across: note_description
	
	@startuml
	Alice->Bob:m1
	Bob->Charlie:m2
	note over Alice, Charlie: Old method for note over all part. with:\n ""note over //FirstPart, LastPart//"".
	note across: New method with:\n""note across""
	Bob->Alice
	hnote across:Note across all part.
	@enduml
	
	[Ref. QA-9738]
	
snippet 11_DISPLAY_JSON_DATA_11.7_Minimal_JSON_examples " Minimal JSON examples"
	
	@startjson
	"Hello world!"
	@endjson
	
	@startjson
	
	42
	@endjson
	
	@startjson
	true
	@endjson
	
	(Examples come from STD 90 - Examples)
	
snippet 1_SEQUENCE_DIAGRAM_1.17_Several_notes_aligned_at_the_same_level " Several notes aligned at the same level [/]"
	You can make several notes aligned at the same level, with the syntax /:
	• without / (by default, the notes are not aligned)
	
	@startuml
	note over Alice : initial state of Alice
	note over Bob : initial state of Bob
	Bob -> Alice : hello
	@enduml
	
	• with / (the notes are aligned)
	
	@startuml
	note over Alice : initial state of Alice
	/ note over Bob : initial state of Bob
	Bob -> Alice : hello
	@enduml
	
	[Ref. QA-354]
	
snippet 11_DISPLAY_JSON_DATA_11.8.1_Without_style " Without style (by default)"
	
	@startjson
	#highlight "1" / "hr"
	[
	{
	        "name": "Mark McGwire",
	        "hr": 65,
	        "avg": 0.278
	        },
	        {
	                "name": "Sammy Sosa",
	                "hr": 63,
	                "avg": 0.288
	        }
	        ]
	        @endjson
	
	﻿11.8.2 With style
	You can use style to change rendering of elements.
	@startjson
	<style>
	jsonDiagram {
	        node {
	                BackGroundColor Khaki
	                LineColor lightblue
	                FontName Helvetica
	                FontColor red
	                FontSize 18
	                FontStyle bold
	                RoundCorner 0
	                LineThickness 2
	                LineStyle 10;5
	
	                separator {
	                        LineThickness 0.5
	                        LineColor black
	                        LineStyle 1;5
	                }
	
	        }
	        arrow {
	                BackGroundColor lightblue
	                LineColor green
	                LineThickness 2
	                LineStyle 2;5
	        }
	        highlight {
	                BackGroundColor red
	                FontColor white
	                FontStyle italic
	        }
	
	}
	</style>
	#highlight "1" / "hr"
	[
	{
	        "name": "Mark McGwire",
	        "hr": 65,
	        "avg": 0.278
	        },
	        {
	                "name": "Sammy Sosa",
	                "hr": 63,
	                "avg": 0.288
	        }
	        ]
	        @endjson
	
	        [Adapted from QA-13123 and QA-13288]
snippet 1_SEQUENCE_DIAGRAM_1.18_Creole_and_HTML " Creole and HTML"
	It is also possible to use creole formatting:
	
	@startuml
	participant Alice
	participant "The **Famous** Bob" as Bob
	
	Alice -> Bob : hello --there--
	... Some ~~long delay~~ ...
	Bob -> Alice : ok
	note left
	        This is **bold**
	        This is //italics//
	        This is ""monospaced""
	        This is --stroked--
	        This is __underlined__
	        This is ~~waved~~
	end note
	
	Alice -> Bob : A //well formatted// message
	note right of Alice
	        This is <back:cadetblue><size:18>displayed</size></back>
	        __left of__ Alice.
	
	end note
	note left of Bob
	        <u:red>This</u> is <color #118888>displayed</color>
	        **<color purple>left of</color> <s:red>Alice</strike> Bob**.
	end note
	note over Alice, Bob
	        <w:#FF33FF>This is hosted</w> by <img sourceforge.jpg>
	end note
	@enduml
	
snippet 11_DISPLAY_JSON_DATA_11.8_Using_style " Using (global) style"
	
snippet 1_SEQUENCE_DIAGRAM_1.19_Divider_or_separator " Divider or separator"
	If you want, you can split a diagram using == separator to divide your diagram into logical steps.
	
	@startuml
	
	== Initialization ==
	
	Alice -> Bob: Authentication Request
	Bob --> Alice: Authentication Response
	
	== Repetition ==
	
	Alice -> Bob: Another authentication Request
	Alice <-- Bob: another authentication Response
	
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.1_Basic_examples " Basic examples"
	The sequence -> is used to draw a message between two participants. Participants do not have to be
	explicitly declared.
	To have a dotted arrow, you use -->
	It is also possible to use <- and <--. That does not change the drawing, but may improve readability.
	Note that this is only true for sequence diagrams, rules are different for the other diagrams.
	
	@startuml
	Alice -> Bob: Authentication Request
	Bob --> Alice: Authentication Response
	
	Alice -> Bob: Another authentication Request
	Alice <-- Bob: Another authentication Response
	@enduml
	
snippet 11_DISPLAY_JSON_DATA_11_Display_JSON_Data " DISPLAY JSON DATA"
	
	11 Display JSON Data
	JSON format is widely used in software.
	You can use PlantUML to visualize your data.
	To activate this feature, the diagram must:
	• begin with @startjson keyword
	• end with @endjson keyword.
	
	@startjson
	{
	        "fruit":"Apple",
	        "size":"Large",
	        "color":"Red"
	}
	@endjson
	
snippet 1_SEQUENCE_DIAGRAM_1.20_Reference " Reference"
	You can use reference in a diagram, using the keyword ref over.
	
	@startuml
	participant Alice
	actor Bob
	
	ref over Alice, Bob : init
	
	Alice -> Bob : hello
	
	ref over Bob
	        This can be on
	        several lines
	end ref
	@enduml
	
snippet 12_DISPLAY_YAML_DATA_12.1_Complex_example " Complex example"
	
	@startyaml
	doe: "a deer, a female deer"
	ray: "a drop of golden sun"
	pi: 3.14159
	xmas: true
	french-hens: 3
	calling-birds:
	- huey
	- dewey
	- louie
	- fred
	xmas-fifth-day:
	calling-birds: four
	french-hens: 3
	golden-rings: 5
	partridges:
	count: 1
	location: "a pear tree"
	turtle-doves: two
	@endyaml
	
snippet 1_SEQUENCE_DIAGRAM_1.21_Delay " Delay"
	You can use ... to indicate a delay in the diagram. And it is also possible to put a message with this
	delay.
	
	@startuml
	
	Alice -> Bob: Authentication Request
	...
	Bob --> Alice: Authentication Response
	...5 minutes later...
	Bob --> Alice: Good Bye !
	
	@enduml
	
snippet 12_DISPLAY_YAML_DATA_12.2_Specific_key " Specific key (with symbols or unicode)"
	
	@startyaml
	@fruit: Apple
	$size: Large
	&color: Red
	￿: Heart
	‰: Per mille
	@endyaml
	
	[Ref. QA-13376]
	
snippet 1_SEQUENCE_DIAGRAM_1.22_Text_wrapping " Text wrapping"
	To break long messages, you can manually add in your text.
	Another option is to use maxMessageSize setting:
	
	@startuml
	skinparam maxMessageSize 50
	participant a
	participant b
	a -> b :this\nis\nmanually\ndone
	a -> b :this is a very long message on several words
	@enduml
	
snippet 12_DISPLAY_YAML_DATA_12.3.1_Normal_style " Normal style"
	
	@startyaml
	#highlight "french-hens"
	#highlight "xmas-fifth-day" / "partridges"
	
	doe: "a deer, a female deer"
	ray: "a drop of golden sun"
	pi: 3.14159
	xmas: true
	french-hens: 3
	calling-birds:
	- huey
	- dewey
	- louie
	- fred
	xmas-fifth-day:
	calling-birds: four
	french-hens: 3
	golden-rings: 5
	partridges:
	count: 1
	location: "a pear tree"
	turtle-doves: two
	@endyaml
	
snippet 12_DISPLAY_YAML_DATA_12.3.2_Customised_style " Customised style"
	
	@startyaml
	<style>
	yamlDiagram {
	        highlight {
	                BackGroundColor red
	                FontColor white
	                FontStyle italic
	        }
	}
	</style>
	#highlight "french-hens"
	#highlight "xmas-fifth-day" / "partridges"
	
	doe: "a deer, a female deer"
	ray: "a drop of golden sun"
	pi: 3.14159
	xmas: true
	french-hens: 3
	calling-birds:
	- huey
	- dewey
	- louie
	- fred
	xmas-fifth-day:
	calling-birds: four
	french-hens: 3
	golden-rings: 5
	partridges:
	count: 1
	location: "a pear tree"
	turtle-doves: two
	@endyaml
	
	[Ref. QA-13288]
	
snippet 12_DISPLAY_YAML_DATA_12.3_Highlight_parts " Highlight parts"
	
snippet 1_SEQUENCE_DIAGRAM_1.23_Space " Space"
	You can use ||| to indicate some spacing in the diagram.
	It is also possible to specify a number of pixel to be used.
	
	@startuml
	
	Alice -> Bob: message 1
	Bob --> Alice: ok
	|||
	Alice -> Bob: message 2
	Bob --> Alice: ok
	||45||
	Alice -> Bob: message 3
	Bob --> Alice: ok
	
	@enduml
	
snippet 12_DISPLAY_YAML_DATA_12.4.1_Without_style " Without style (by default)"
	
	@startyaml
	-
	name: Mark McGwire
	hr: 65
	avg: 0.278
	
	-
	
	name: Sammy Sosa
	hr: 63
	avg: 0.288
	@endyaml
	
snippet 12_DISPLAY_YAML_DATA_12.4.2_With_style " With style"
	You can use style to change rendering of elements.
	
	@startyaml
	<style>
	yamlDiagram {
	        node {
	                BackGroundColor lightblue
	                LineColor lightblue
	                FontName Helvetica
	                FontColor red
	                FontSize 18
	                FontStyle bold
	                BackGroundColor Khaki
	                RoundCorner 0
	                LineThickness 2
	                LineStyle 10;5
	                separator {
	                        LineThickness 0.5
	                        LineColor black
	                        LineStyle 1;5
	                }
	        }
	        arrow {
	                BackGroundColor lightblue
	                LineColor green
	                LineThickness 2
	                LineStyle 2;5
	        }
	}
	</style>
	-
	name: Mark McGwire
	hr: 65
	avg: 0.278
	-
	name: Sammy Sosa
	hr: 63
	avg: 0.288
	@endyaml
	
	[Ref. QA-13123]
snippet 1_SEQUENCE_DIAGRAM_1.24_Lifeline_Activation_and_Destruction " Lifeline Activation and Destruction"
	The activate and deactivate are used to denote participant activation.
	Once a participant is activated, its lifeline appears.
	The activate and deactivate apply on the previous message.
	The destroy denote the end of the lifeline of a participant.
	
	@startuml
	participant User
	
	User -> A: DoWork
	activate A
	
	        A -> B: << createRequest >>
	        activate B
	
	                B -> C: DoWork
	                activate C
	                        C --> B: WorkDone
	                        destroy C
	
	                        B --> A: RequestCreated
	                deactivate B
	
	                A -> User: Done
	        deactivate A
	
	        @enduml
	
	        Nested lifeline can be used, and it is possible to add a color on the lifeline.
	
	        @startuml
	        participant User
	
	        User -> A: DoWork
	        activate A #FFBBBB
	
	                A -> A: Internal call
	                activate A #DarkSalmon
	
	                        A -> B: << createRequest >>
	                        activate B
	
	                                B --> A: RequestCreated
	                        deactivate B
	                deactivate A
	                A -> User: Done
	        deactivate A
	
	        @enduml
	
	        Autoactivation is possible and works with the return keywords:
	
	        @startuml
	        autoactivate on
	        alice -> bob : hello
	        bob -> bob : self call
	        bill -> bob #005500 : hello from thread 2
	        bob -> george ** : create
	        return done in thread 2
	
	        return rc
	        bob -> george !! : delete
	        return success
	
	        @enduml
	
snippet 12_DISPLAY_YAML_DATA_12.4_Using_style " Using (global) style"
	
snippet 1_SEQUENCE_DIAGRAM_1.25_Return " Return"
	Command return generates a return message with optional text label.
	The return point is that which caused the most recent life-line activation.
	The syntax is return label where label if provided is any string acceptable for conventional messages.
	
	@startuml
	Bob -> Alice : hello
	activate Alice
	        Alice -> Alice : some action
	        return bye
	        @enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.26_Participant_creation " Participant creation"
	You can use the create keyword just before the first reception of a message to emphasize the fact that
	this message is actually creating this new object.
	
	@startuml
	Bob -> Alice : hello
	
	create Other
	Alice -> Other : new
	
	create control String
	Alice -> String
	note right : You can also put notes!
	
	Alice --> Bob : ok
	
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.27_Shortcut_syntax_for_activation,_deactivation,_creation " Shortcut syntax for activation, deactivation, creation"
	Immediately after specifying the target participant, the following syntax can be used:
	• ++ Activate the target (optionally a #color may follow this)
	• -- Deactivate the source
	• ** Create an instance of the target
	• !! Destroy an instance of the target
	
	@startuml
	alice -> bob ++ : hello
	bob -> bob ++ : self call
	bob -> bib ++ #005500 : hello
	bob -> george ** : create
	return done
	return rc
	bob -> george !! : delete
	return success
	@enduml
	
	Then you can mix activation and deactivation, on same line:
	
	@startuml
	alice -> bob ++ : hello1
	bob -> charlie --++ : hello2
	charlie --> alice -- : ok
	@enduml
	
	@startuml
	
	@startuml
	alice -> bob --++ #gold: hello
	bob -> alice --++ #gold: you too
	alice -> bob --: step1
	alice -> bob : step2
	@enduml
	@enduml
	
	[Ref. QA-4834, QA-9573 and QA-13234]
	
snippet 1_SEQUENCE_DIAGRAM_1.28_Incoming_and_outgoing_messages " Incoming and outgoing messages"
	You can use incoming or outgoing arrows if you want to focus on a part of the diagram.
	Use square brackets to denote the left ”[” or the right ”]” side of the diagram.
	
	@startuml
	[-> A: DoWork
	
	activate A
	
	        A -> A: Internal call
	        activate A
	
	                A ->] : << createRequest >>
	
	                A<--] : RequestCreated
	        deactivate A
	        [<- A: Done
	deactivate A
	@enduml
	
	You can also have the following syntax:
	
	@startuml
	participant Alice
	participant Bob #lightblue
	Alice -> Bob
	Bob -> Carol
	...
	[-> Bob
	[o-> Bob
	[o->o Bob
	[x-> Bob
	...
	[<- Bob
	[x<- Bob
	...
	Bob ->]
	Bob ->o]
	Bob o->o]
	Bob ->x]
	...
	Bob <-]
	
	Bob x<-]
	
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.29_Short_arrows_for_incoming_and_outgoing_messages " Short arrows for incoming and outgoing messages"
	You can have short arrows with using ?.
	
	@startuml
	?-> Alice : ""?->""\n**short** to actor1
	[-> Alice : ""[->""\n**from start** to actor1
	[-> Bob : ""[->""\n**from start** to actor2
	?-> Bob : ""?->""\n**short** to actor2
	Alice ->] : ""->]""\nfrom actor1 **to end**
	Alice ->? : ""->?""\n**short** from actor1
	Alice -> Bob : ""->"" \nfrom actor1 to actor2
	@enduml
	
	[Ref. QA-310]
	
snippet 1_SEQUENCE_DIAGRAM_1.2_Declaring_participant " Declaring participant"
	If the keyword participant is used to declare a participant, more control on that participant is possible.
	The order of declaration will be the (default) order of display.
	Using these other keywords to declare participants will change the shape of the participant represen-
	tation:
	• actor
	• boundary
	• control
	• entity
	• database
	• collections
	• queue
	
	@startuml
	participant participant as Foo
	actor actor as Foo1
	boundary boundary as Foo2
	control control as Foo3
	entity entity as Foo4
	database database as Foo5
	collections collections as Foo6
	queue queue as Foo7
	Foo -> Foo1 : To actor
	Foo -> Foo2 : To boundary
	Foo -> Foo3 : To control
	Foo -> Foo4 : To entity
	Foo -> Foo5 : To database
	Foo -> Foo6 : To collections
	Foo -> Foo7: To queue
	@enduml
	
	Rename a participant using the as keyword.
	You can also change the background color of actor or participant.
	
	@startuml
	actor Bob #red
	' The only difference between actor
	'and participant is the drawing
	participant Alice
	participant "I have a really\nlong name" as L #99FF99
	/' You can also declare:
	participant L as "I have a really\nlong name" #99FF99
	'/
	
	Alice->Bob: Authentication Request
	Bob->Alice: Authentication Response
	Bob->L: Log transaction
	@enduml
	
snippet 12_DISPLAY_YAML_DATA_12_Display_YAML_Data " DISPLAY YAML DATA"
	
	12 Display YAML Data
	YAML format is widely used in software.
	You can use PlantUML to visualize your data.
	To activate this feature, the diagram must:
	• begin with @startyaml keyword
	• end with @endyaml keyword.
	@startyaml
	fruit: Apple
	size: Large
	color: Red
	@endyaml
	
snippet 1_SEQUENCE_DIAGRAM_1.30_Anchors_and_Duration " Anchors and Duration"
	With teoz usage it is possible to add anchors to the diagram and use the anchors to specify duration
	time.
	
	@startuml
	!pragma teoz true
	
	{start} Alice -> Bob : start doing things during duration
	Bob -> Max : something
	Max -> Bob : something else
	{end} Bob -> Alice : finish
	
	{start} <-> {end} : some time
	
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.10Add_title,_caption,_header,_footer_or_legend_on_network_diagram " Add title, caption, header, footer or legend on network diagram"
	
	TODO: FIXME [Ref. Issue#408 and QA-12655] TODO: Not totally fixed
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.11Change_width_of_the_networks " Change width of the networks"
	You can change the width of the networks, especially in order to have the same full width for only some
	or all networks.
	Here are some examples, with all the possibilities:
	• without
	
	@startuml
	nwdiag {
	        network NETWORK_BASE {
	                dev_A [address = "dev_A" ]
	                dev_B [address = "dev_B" ]
	        }
	        network IntNET1 {
	                dev_B [address = "dev_B1" ]
	                dev_M [address = "dev_M1" ]
	        }
	        network IntNET2 {
	                dev_B [address = "dev_B2" ]
	                dev_M [address = "dev_M2" ]
	        }
	}
	@enduml
	
	• only the first
	
	@startuml
	
	nwdiag {
	        network NETWORK_BASE {
	                width = full
	                dev_A [address = "dev_A" ]
	                dev_B [address = "dev_B" ]
	        }
	        network IntNET1 {
	                dev_B [address = "dev_B1" ]
	                dev_M [address = "dev_M1" ]
	        }
	        network IntNET2 {
	                dev_B [address = "dev_B2" ]
	                dev_M [address = "dev_M2" ]
	        }
	}
	@enduml
	
	• the first and the second
	
	@startuml
	nwdiag {
	        network NETWORK_BASE {
	                width = full
	                dev_A [address = "dev_A" ]
	                dev_B [address = "dev_B" ]
	        }
	        network IntNET1 {
	                width = full
	                dev_B [address = "dev_B1" ]
	                dev_M [address = "dev_M1" ]
	        }
	        network IntNET2 {
	                dev_B [address = "dev_B2" ]
	                dev_M [address = "dev_M2" ]
	        }
	}
	@enduml
	
	• all the network (with same full width)
	
	@startuml
	nwdiag {
	        network NETWORK_BASE {
	                width = full
	                dev_A [address = "dev_A" ]
	                dev_B [address = "dev_B" ]
	        }
	        network IntNET1 {
	                width = full
	                dev_B [address = "dev_B1" ]
	                dev_M [address = "dev_M1" ]
	        }
	        network IntNET2 {
	                width = full
	                dev_B [address = "dev_B2" ]
	                dev_M [address = "dev_M2" ]
	        }
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.12Other_internal_networks " Other internal networks"
	You can define other internal networks (TCP/IP, USB, SERIAL,...).
	
	• Without adress or type
	
	@startuml
	nwdiag {
	        network LAN1 {
	                a [address = "a1"];
	        }
	        network LAN2 {
	                a [address = "a2"];
	                switch;
	        }
	        switch -- equip;
	        equip -- printer;
	}
	@enduml
	
	• With adress or type
	
	@startuml
	nwdiag {
	        network LAN1 {
	                a [address = "a1"];
	        }
	        network LAN2 {
	                a [address = "a2"];
	                switch [address = "s2"];
	        }
	        switch -- equip;
	        equip [address = "e3"];
	        equip -- printer;
	        printer [address = "USB"];
	}
	@enduml
	
	[Ref. QA-12824]
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.1_Simple_diagram " Simple diagram"
	
	@startuml
	nwdiag {
	        network dmz {
	                address = "210.x.x.x/24"
	
	                web01 [address = "210.x.x.1"];
	                web02 [address = "210.x.x.2"];
	
	        }
	        network internal {
	                address = "172.x.x.x/24";
	
	                web01 [address = "172.x.x.1"];
	                web02 [address = "172.x.x.2"];
	                db01;
	                db02;
	
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.31_Stereotypes_and_Spots " Stereotypes and Spots"
	It is possible to add stereotypes to participants using << and >>.
	In the stereotype, you can add a spotted character in a colored circle using the syntax (X,color).
	
	@startuml
	
	participant "Famous Bob" as Bob << Generated >>
	participant Alice << (C,#ADD1B2) Testable >>
	
	Bob->Alice: First message
	
	@enduml
	
	By default, the guillemet character is used to display the stereotype. You can change this behavious
	using the skinparam guillemet:
	
	@startuml
	
	skinparam guillemet false
	participant "Famous Bob" as Bob << Generated >>
	participant Alice << (C,#ADD1B2) Testable >>
	
	Bob->Alice: First message
	
	@enduml
	
	@startuml
	
	participant Bob << (C,#ADD1B2) >>
	participant Alice << (C,#ADD1B2) >>
	
	Bob->Alice: First message
	
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.2_Define_multiple_addresses " Define multiple addresses"
	
	@startuml
	nwdiag {
	        network dmz {
	                address = "210.x.x.x/24"
	
	                // set multiple addresses (using comma)
	                web01 [address = "210.x.x.1, 210.x.x.20"];
	                web02 [address = "210.x.x.2"];
	
	        }
	        network internal {
	                address = "172.x.x.x/24";
	
	                web01 [address = "172.x.x.1"];
	                web02 [address = "172.x.x.2"];
	                db01;
	
	                db02;
	
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.32_More_information_on_titles " More information on titles"
	You can use creole formatting in the title.
	
	@startuml
	
	title __Simple__ **communication** example
	
	Alice -> Bob: Authentication Request
	Bob -> Alice: Authentication Response
	
	@enduml
	
	You can add newline using in the title description.
	
	@startuml
	
	title __Simple__ communication example\non several lines
	
	Alice -> Bob: Authentication Request
	Bob -> Alice: Authentication Response
	
	@enduml
	
	You can also define title on several lines using title and end title keywords.
	
	@startuml
	
	title
	        <u>Simple</u> communication example
	        on <i>several</i> lines and using <font color=red>html</font>
	        This is hosted by <img:sourceforge.jpg>
	end title
	
	Alice -> Bob: Authentication Request
	Bob -> Alice: Authentication Response
	
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3.1_Define_group_inside_network_definitions " Define group inside network definitions"
	
	@startuml
	nwdiag {
	        network Sample_front {
	                address = "192.168.10.0/24";
	
	                // define group
	                group web {
	                        web01 [address = ".1"];
	                        web02 [address = ".2"];
	                }
	
	        }
	        network Sample_back {
	                address = "192.168.20.0/24";
	                web01 [address = ".1"];
	                web02 [address = ".2"];
	                db01 [address = ".101"];
	                db02 [address = ".102"];
	
	                // define network using defined nodes
	                group db {
	                        db01;
	                        db02;
	                }
	
	        }
	
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3.2_Define_group_outside_of_network_definitions " Define group outside of network definitions"
	
	@startuml
	nwdiag {
	        // define group outside of network definitions
	        group {
	                color = "#FFAAAA";
	
	                web01;
	                web02;
	                db01;
	
	        }
	
	        network dmz {
	                web01;
	                web02;
	        }
	        network internal {
	                web01;
	                web02;
	                db01;
	                db02;
	        }
	
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3.3_Define_several_groups_on_same_network " Define several groups on same network"
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3.4_Example_with_2_group " Example with 2 group"
	
	@startuml
	nwdiag {
	        group {
	
	                color = "#FFaaaa";
	                web01;
	                db01;
	
	        }
	        group {
	                color = "#aaaaFF";
	                web02;
	                db02;
	        }
	        network dmz {
	                address = "210.x.x.x/24"
	
	                web01 [address = "210.x.x.1"];
	                web02 [address = "210.x.x.2"];
	
	        }
	        network internal {
	                address = "172.x.x.x/24";
	
	                web01 [address = "172.x.x.1"];
	                web02 [address = "172.x.x.2"];
	                db01 ;
	                db02 ;
	
	        }
	
	}
	@enduml
	
	[Ref. QA-12663]
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3.5_Example_with_3_groups " Example with 3 groups"
	
	@startuml
	nwdiag {
	        group {
	                color = "#FFaaaa";
	                web01;
	                db01;
	        }
	        group {
	                color = "#aaFFaa";
	                web02;
	                db02;
	        }
	        group {
	                color = "#aaaaFF";
	                web03;
	                db03;
	
	        }
	
	        network dmz {
	                web01;
	                web02;
	                web03;
	        }
	        network internal {
	                web01;
	                db01 ;
	                web02;
	                db02 ;
	                web03;
	                db03;
	        }
	
	}
	@enduml
	
	[Ref. QA-13138]
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.3_Grouping_nodes " Grouping nodes"
	
snippet 1_SEQUENCE_DIAGRAM_1.33_Participants_encompass " Participants encompass"
	It is possible to draw a box around some participants, using box and end box commands.
	You can add an optional title or a optional background color, after the box keyword.
	
	@startuml
	
	box "Internal Service" #LightBlue
	        participant Bob
	        participant Alice
	end box
	participant Other
	
	Bob -> Alice : hello
	Alice -> Other : hello
	
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.4.1_Network " Network"
	For network or network’s component, you can add or change:
	• addresses (separated by comma ,);
	• color;
	• description;
	• shape.
	
	@startuml
	nwdiag {
	        network Sample_front {
	                address = "192.168.10.0/24"
	                color = "red"
	
	                // define group
	                group web {
	                        web01 [address = ".1, .2", shape = "node"]
	                        web02 [address = ".2, .3"]
	                }
	
	        }
	        network Sample_back {
	                address = "192.168.20.0/24"
	                color = "palegreen"
	                web01 [address = ".1"]
	
	                web02 [address = ".2"]
	                db01 [address = ".101", shape = database ]
	                db02 [address = ".102"]
	
	                // define network using defined nodes
	                group db {
	                        db01;
	                        db02;
	                }
	
	        }
	
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.4.2_Group " Group"
	For a group, you can add or change:
	• color;
	• description.
	
	@startuml
	nwdiag {
	        group {
	                color = "#CCFFCC";
	                description = "Long group description";
	
	                web01;
	                web02;
	                db01;
	
	        }
	
	        network dmz {
	                web01;
	                web02;
	        }
	        network internal {
	                web01;
	                web02;
	                db01 [address = ".101", shape = database];
	        }
	
	}
	@enduml
	
	[Ref. QA-12056]
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.4_Extended_Syntax " Extended Syntax (for network or group)"
	
snippet 1_SEQUENCE_DIAGRAM_1.34_Removing_Foot_Boxes " Removing Foot Boxes"
	You can use the hide footbox keywords to remove the foot boxes of the diagram.
	
	@startuml
	
	hide footbox
	title Foot Box removed
	
	Alice -> Bob: Authentication Request
	Bob --> Alice: Authentication Response
	
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.35_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command:
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	You can also change other rendering parameter, as seen in the following examples:
	
	@startuml
	skinparam sequenceArrowThickness 2
	skinparam roundcorner 20
	skinparam maxmessagesize 60
	skinparam sequenceParticipant underline
	
	actor User
	participant "First Class" as A
	participant "Second Class" as B
	participant "Last Class" as C
	
	User -> A: DoWork
	activate A
	
	        A -> B: Create Request
	        activate B
	
	                B -> C: DoWork
	                activate C
	                        C --> B: WorkDone
	                        destroy C
	
	                        B --> A: Request Created
	                deactivate B
	
	                A --> User: Done
	        deactivate A
	
	        @enduml
	
	        @startuml
	        skinparam backgroundColor #EEEBDC
	        skinparam handwritten true
	
	        skinparam sequence {
	                ArrowColor DeepSkyBlue
	                ActorBorderColor DeepSkyBlue
	                LifeLineBorderColor blue
	                LifeLineBackgroundColor #A9DCDF
	
	                ParticipantBorderColor DeepSkyBlue
	                ParticipantBackgroundColor DodgerBlue
	                ParticipantFontName Impact
	                ParticipantFontSize 17
	                ParticipantFontColor #A9DCDF
	
	                ActorBackgroundColor aqua
	                ActorFontColor DeepSkyBlue
	                ActorFontSize 17
	                ActorFontName Aapex
	        }
	
	        actor User
	        participant "First Class" as A
	        participant "Second Class" as B
	        participant "Last Class" as C
	
	        User -> A: DoWork
	        activate A
	
	                A -> B: Create Request
	                activate B
	
	                        B -> C: DoWork
	                        activate C
	                                C --> B: WorkDone
	                                destroy C
	
	                                B --> A: Request Created
	                        deactivate B
	
	                        A --> User: Done
	                deactivate A
	
	                @enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.5_Using_Sprites " Using Sprites"
	You can use all sprites (icons) from the Standard Library or any other library.
	Use the notation <$sprite> to use a sprite, to make a new line, or any other Creole syntax.
	
	@startuml
	!include <office/Servers/application_server>
	!include <office/Servers/database_server>
	
	nwdiag {
	        network dmz {
	                address = "210.x.x.x/24"
	
	                // set multiple addresses (using comma)
	                web01 [address = "210.x.x.1, 210.x.x.20", description = "<$application_server>\n web01"]
	                web02 [address = "210.x.x.2", description = "<$application_server>\n web02"];
	
	        }
	        network internal {
	                address = "172.x.x.x/24";
	
	                web01 [address = "172.x.x.1"];
	                web02 [address = "172.x.x.2"];
	                db01 [address = "172.x.x.100", description = "<$database_server>\n db01"];
	                db02 [address = "172.x.x.101", description = "<$database_server>\n db02"];
	
	        }
	
	}
	@enduml
	
	[Ref. QA-11862]
	
snippet 1_SEQUENCE_DIAGRAM_1.36_Changing_padding " Changing padding"
	It is possible to tune some padding settings.
	
	@startuml
	skinparam ParticipantPadding 20
	skinparam BoxPadding 10
	
	box "Foo1"
	        participant Alice1
	        participant Alice2
	end box
	box "Foo2"
	        participant Bob1
	        participant Bob2
	end box
	Alice1 -> Bob1 : hello
	Alice1 -> Out : out
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.6_Using_OpenIconic " Using OpenIconic"
	You can also use the icons from OpenIconic in network or node descriptions.
	Use the notation <&icon> to make an icon, <&icon*n> to multiply the size by a factor n, and to make
	a newline:
	
	@startuml
	
	nwdiag {
	        group nightly {
	                color = "#FFAAAA";
	                description = "<&clock> Restarted nightly <&clock>";
	                web02;
	                db01;
	        }
	        network dmz {
	                address = "210.x.x.x/24"
	
	                user [description = "<&person*4.5>\n user1"];
	                // set multiple addresses (using comma)
	                web01 [address = "210.x.x.1, 210.x.x.20", description = "<&cog*4>\nweb01"]
	                web02 [address = "210.x.x.2", description = "<&cog*4>\nweb02"];
	
	        }
	        network internal {
	                address = "172.x.x.x/24";
	
	                web01 [address = "172.x.x.1"];
	                web02 [address = "172.x.x.2"];
	                db01 [address = "172.x.x.100", description = "<&spreadsheet*4>\n db01"];
	                db02 [address = "172.x.x.101", description = "<&spreadsheet*4>\n db02"];
	                ptr [address = "172.x.x.110", description = "<&print*4>\n ptr01"];
	
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37.1_Normal_arrow " Normal arrow"
	
	@startuml
	participant Alice as a
	participant Bob as b
	a -> b : ""-> ""
	a ->> b : ""->> ""
	a -\ b : ""-\ ""
	a -\\ b : ""-\\\\""
	a -/ b : ""-/ ""
	a -// b : ""-// ""
	a ->x b : ""->x ""
	a x-> b : ""x-> ""
	a o-> b : ""o-> ""
	a ->o b : ""->o ""
	a o->o b : ""o->o ""
	a <-> b : ""<-> ""
	a o<->o b : ""o<->o""
	a x<->x b : ""x<->x""
	a ->>o b : ""->>o ""
	a -\o b : ""-\o ""
	a -\\o b : ""-\\\\o""
	a -/o b : ""-/o ""
	a -//o b : ""-//o ""
	a x->o b : ""x->o ""
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37.2_Incoming_and_outgoing_messages " Incoming and outgoing messages (with ’[’, ’]’)"
	
snippet 1_SEQUENCE_DIAGRAM_1.37.3_Incoming_messages " Incoming messages (with ’[’)"
	
	@startuml
	participant Alice as a
	participant Bob as b
	[-> b : ""[-> ""
	[->> b : ""[->> ""
	[-\ b : ""[-\ ""
	[-\\ b : ""[-\\\\""
	[-/ b : ""[-/ ""
	[-// b : ""[-// ""
	[->x b : ""[->x ""
	[x-> b : ""[x-> ""
	[o-> b : ""[o-> ""
	[->o b : ""[->o ""
	[o->o b : ""[o->o ""
	[<-> b : ""[<-> ""
	[o<->o b : ""[o<->o""
	[x<->x b : ""[x<->x""
	[->>o b : ""[->>o ""
	[-\o b : ""[-\o ""
	[-\\o b : ""[-\\\\o""
	[-/o b : ""[-/o ""
	[-//o b : ""[-//o ""
	[x->o b : ""[x->o ""
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37.4_Outgoing_messages " Outgoing messages (with ’]’)"
	
	@startuml
	participant Alice as a
	participant Bob as b
	a ->] : ""->] ""
	a ->>] : ""->>] ""
	a -\] : ""-\] ""
	a -\\] : ""-\\\\]""
	a -/] : ""-/] ""
	a -//] : ""-//] ""
	a ->x] : ""->x] ""
	a x->] : ""x->] ""
	a o->] : ""o->] ""
	a ->o] : ""->o] ""
	a o->o] : ""o->o] ""
	a <->] : ""<->] ""
	a o<->o] : ""o<->o]""
	a x<->x] : ""x<->x]""
	a ->>o] : ""->>o] ""
	a -\o] : ""-\o] ""
	a -\\o] : ""-\\\\o]""
	a -/o] : ""-/o] ""
	a -//o] : ""-//o] ""
	a x->o] : ""x->o] ""
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37.5_Short_incoming_and_outgoing_messages " Short incoming and outgoing messages (with ’?’)"
	
snippet 1_SEQUENCE_DIAGRAM_1.37.6_Short_incoming " Short incoming (with ’?’)"
	
	@startuml
	participant Alice as a
	participant Bob as b
	a -> b : //Long long label//
	?-> b : ""?-> ""
	?->> b : ""?->> ""
	?-\ b : ""?-\ ""
	?-\\ b : ""?-\\\\""
	?-/ b : ""?-/ ""
	?-// b : ""?-// ""
	?->x b : ""?->x ""
	?x-> b : ""?x-> ""
	?o-> b : ""?o-> ""
	?->o b : ""?->o ""
	?o->o b : ""?o->o ""
	?<-> b : ""?<-> ""
	?o<->o b : ""?o<->o""
	?x<->x b : ""?x<->x""
	?->>o b : ""?->>o ""
	?-\o b : ""?-\o ""
	?-\\o b : ""?-\\\\o ""
	?-/o b : ""?-/o ""
	?-//o b : ""?-//o ""
	?x->o b : ""?x->o ""
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37.7_Short_outgoing " Short outgoing (with ’?’)"
	
	@startuml
	participant Alice as a
	participant Bob as b
	a -> b : //Long long label//
	a ->? : ""->? ""
	a ->>? : ""->>? ""
	a -\? : ""-\? ""
	a -\\? : ""-\\\\?""
	a -/? : ""-/? ""
	a -//? : ""-//? ""
	a ->x? : ""->x? ""
	a x->? : ""x->? ""
	a o->? : ""o->? ""
	a ->o? : ""->o? ""
	a o->o? : ""o->o? ""
	a <->? : ""<->? ""
	a o<->o? : ""o<->o?""
	a x<->x? : ""x<->x?""
	a ->>o? : ""->>o? ""
	a -\o? : ""-\o? ""
	a -\\o? : ""-\\\\o?""
	a -/o? : ""-/o? ""
	a -//o? : ""-//o? ""
	a x->o? : ""x->o? ""
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.37_Appendix_Examples_of_all_arrow_type " Appendix: Examples of all arrow type"
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.7_Same_nodes_on_more_than_two_networks " Same nodes on more than two networks"
	You can use same nodes on different networks (more than two networks); nwdiag use in this case ’jump
	line’ over networks.
	
	@startuml
	nwdiag {
	        // define group at outside network definitions
	        group {
	                color = "#7777FF";
	
	                web01;
	                web02;
	                db01;
	
	        }
	
	        network dmz {
	                color = "pink"
	
	                web01;
	                web02;
	
	        }
	
	        network internal {
	                web01;
	                web02;
	                db01 [shape = database ];
	        }
	
	        network internal2 {
	                color = "LightBlue";
	
	                web01;
	                web02;
	                db01;
	
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.38.1_By_default " By default"
	
	@startuml
	Bob -> Alice : hello
	Alice -> Bob : ok
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.38.2_LifelineStrategy " LifelineStrategy"
	• nosolid (by default)
	
	@startuml
	skinparam lifelineStrategy nosolid
	Bob -> Alice : hello
	Alice -> Bob : ok
	@enduml
	
	[Ref. QA-9016]
	• solid
	In order to have solid life line in sequence diagrams, you can use: skinparam lifelineStrategy solid
	
	@startuml
	skinparam lifelineStrategy solid
	Bob -> Alice : hello
	Alice -> Bob : ok
	@enduml
	
	[Ref. QA-2794]
	
snippet 1_SEQUENCE_DIAGRAM_1.38.3_style_strictuml " style strictuml"
	To be conform to strict UML (for arrow style: emits triangle rather than sharp arrowheads), you can use:
	• skinparam style strictuml
	
	@startuml
	skinparam style strictuml
	Bob -> Alice : hello
	Alice -> Bob : ok
	@enduml
	
	[Ref. QA-1047]
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.8_Peer_networks " Peer networks"
	Peer networks are simple connections between two nodes, for which we don’t use a horizontal ”busbar”
	network
	
	@startuml
	nwdiag {
	        inet [shape = cloud];
	        inet -- router;
	
	        network {
	                router;
	                web01;
	                web02;
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.38_Specific_SkinParameter " Specific SkinParameter"
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.9.1_Without_group " Without group"
	
	@startuml
	nwdiag {
	        internet [ shape = cloud];
	        internet -- router;
	
	        network proxy {
	                router;
	                app;
	        }
	        network default {
	                app;
	                db;
	        }
	
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.9.2_Group_on_first " Group on first"
	
	@startuml
	nwdiag {
	        internet [ shape = cloud];
	        internet -- router;
	
	        group {
	                color = "pink";
	                app;
	                db;
	        }
	
	        network proxy {
	                router;
	                app;
	        }
	
	        network default {
	                app;
	                db;
	        }
	
	}
	@enduml
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.9.3_Group_on_second " Group on second"
	
	@startuml
	nwdiag {
	        internet [ shape = cloud];
	        internet -- router;
	
	        network proxy {
	                router;
	                app;
	        }
	
	        group {
	                color = "pink";
	                app;
	                db;
	        }
	
	        network default {
	                app;
	                db;
	        }
	
	}
	@enduml
	
	TODO: FIXME Why the line on proxy for ’db’? (’db’ must be only on ’default network’) [See example
	without group]
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.9.4_Group_on_third " Group on third"
	
	@startuml
	nwdiag {
	        internet [ shape = cloud];
	        internet -- router;
	
	        network proxy {
	                router;
	                app;
	        }
	        network default {
	                app;
	                db;
	        }
	        group {
	                color = "pink";
	                app;
	                db;
	        }
	
	}
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.39_Hide_unlinked_participant " Hide unlinked participant"
	By default, all participants are displayed.
	
	@startuml
	participant Alice
	participant Bob
	participant Carol
	
	Alice -> Bob : hello
	@enduml
	
	But you can hide unlinked participant.
	
	@startuml
	hide unlinked
	participant Alice
	participant Bob
	participant Carol
	
	Alice -> Bob : hello
	@enduml
	
	[Ref. QA-4247]
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13.9_Peer_networks_and_group " Peer networks and group"
	
	
snippet 13_NETWORK_DIAGRAM_(NWDIAG)_13_Network_diagram " NETWORK DIAGRAM (NWDIAG)"
	
	13 Network diagram (nwdiag)
	nwdiag has been created by Takeshi Komiya and allows to quickly draw network diagrams. So we thank
	him for his creation!
	Since the syntax is clear and simple, this has been integrated within PlantUML. We reuse here the
	examples that Takeshi has documented.
	
snippet 1_SEQUENCE_DIAGRAM_1.3_Use_non-letters_in_participants " Use non-letters in participants 1 SEQUENCE DIAGRAM"
	
	You can use the order keyword to customize the display order of participants.
	
	@startuml
	participant Last order 30
	participant Middle order 20
	participant First order 10
	@enduml
	
	You can use quotes to define participants. And you can use the as keyword to give an alias to those
	participants.
	
	@startuml
	Alice -> "Bob()" : Hello
	"Bob()" -> "This is very\nlong" as Long
	' You can also declare:
	' "Bob()" -> Long as "This is very\nlong"
	Long --> "Bob()" : ok
	@enduml
	
snippet 14_SALT_(WIREFRAME)_14.10_Advanced_table " Advanced table"
	You can use two special notations for table :
	• * to indicate that a cell with span with left
	• . to denotate an empty cell
	
	@startsalt
	{#
	. | Column 2 | Column 3
	Row header 1 | value 1 | value 2
	Row header 2 | A long cell | *
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.11_Scroll_Bars " Scroll Bars [S, SI, S-]"
	You can use {S notation for scroll bar like in following examples:
	• {S: for horizontal and vertical scrollbars
	@startsalt
	{S
	Message
	.
	.
	.
	.
	}
	@endsalt
	
	• {SI : for vertical scrollbar only
	
	@startsalt
	{SI
	
	Message
	.
	.
	.
	.
	}
	@endsalt
	
	• {S- : for horizontal scrollbar only
	@startsalt
	{S-
	Message
	.
	.
	.
	.
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.12_Colors " Colors"
	It is possible to change text color of widget.
	
	@startsalt
	{
	        <color:Blue>Just plain text
	        [This is my default button]
	        [<color:green>This is my green button]
	        [<color:#9a9a9a>This is my disabled button]
	        [] <color:red>Unchecked box
	        [X] <color:green>Checked box
	        "Enter text here "
	        ^This is a droplist^
	        ^<color:#9a9a9a>This is a disabled droplist^
	        ^<color:red>This is a red droplist^
	}
	@endsalt
	
	[Ref. QA-12177]
	
snippet 14_SALT_(WIREFRAME)_14.13_Pseudo_sprite " Pseudo sprite [«, »]"
	Using << and >> you can define a pseudo-sprite or sprite-like drawing and reusing it latter.
	
	@startsalt
	{
	        [X] checkbox|[] checkbox
	        () radio | (X) radio
	        This is a text|[This is my button]|This is another text
	        "A field"|"Another long Field"|[A button]
	        <<folder
	        ............
	        .XXXXX......
	        .X...X......
	        .XXXXXXXXXX.
	        .X........X.
	        .X........X.
	        .X........X.
	        .X........X.
	        .XXXXXXXXXX.
	        ............
	        >>|<color:blue>other folder|<<folder>>
	        ^Droplist^
	}
	@endsalt
	
	[Ref. QA-5849]
	
snippet 14_SALT_(WIREFRAME)_14.14_OpenIconic " OpenIconic"
	OpenIconic is a very nice open source icon set. Those icons have been integrated into the creole parser,
	so you can use them out-of-the-box. You can use the following syntax: <&ICON_NAME>.
	@startsalt
	{
	        Login<&person> | "MyName "
	        Password<&key> | "**** "
	        [Cancel <&circle-x>] | [OK <&account-login>]
	}
	
	@endsalt
	
	The complete list is available on OpenIconic Website, or you can use the following special diagram:
	
	@startuml
	listopeniconic
	@enduml
	
snippet 14_SALT_(WIREFRAME)_14.15_Include_Salt_”on_activity_diagram” " Include Salt ”on activity diagram”"
	You can read the following explanation.
	
	@startuml
	(*) --> "
	{{
	        salt
	        {+
	        <b>an example
	        choose one option
	        ()one
	        ()two
	        [ok]
	}
	}}
	" as choose
	
	choose -right-> "
	{{
	        salt
	        {+
	        <b>please wait
	
	        operation in progress
	        <&clock>
	        [cancel]
	}
	}}
	" as wait
	wait -right-> "
	{{
	        salt
	        {+
	        <b>success
	        congratulations!
	        [ok]
	}
	}}
	" as success
	
	wait -down-> "
	{{
	        salt
	        {+
	        <b>error
	        failed, sorry
	        [ok]
	}
	}}
	"
	@enduml
	
	It can also be combined with define macro.
	
	@startuml
	!unquoted procedure SALT($x)
	"{{
	        salt
	        %invoke_procedure("_"+$x)
	        }}" as $x
	        !endprocedure
	
	        !procedure _choose()
	        {+
	        <b>an example
	
	        choose one option
	        ()one
	        ()two
	        [ok]
	}
	!endprocedure
	
	!procedure _wait()
	{+
	<b>please wait
	operation in progress
	<&clock>
	[cancel]
	}
	!endprocedure
	
	!procedure _success()
	{+
	<b>success
	congratulations!
	[ok]
	}
	!endprocedure
	
	!procedure _error()
	{+
	<b>error
	failed, sorry
	[ok]
	}
	!endprocedure
	
	(*) --> SALT(choose)
	-right-> SALT(wait)
	wait -right-> SALT(success)
	wait -down-> SALT(error)
	@enduml
	
snippet 14_SALT_(WIREFRAME)_14.16_Include_salt_”on_while_condition_of_activity_diagram” " Include salt ”on while condition of activity diagram”"
	You can include salt on while condition of activity diagram.
	
	@startuml
	start
	while (\n{{\nsalt\n{+\nPassword | "**** "\n[Cancel] | [ OK ]}\n}}\n) is (Incorrect)
	        :log attempt;
	        :attempt_count++;
	        if (attempt_count > 4) then (yes)
	                :increase delay timer;
	                :wait for timer to expire;
	        else (no)
	        endif
	endwhile (correct)
	:log request;
	:disable service;
	@enduml
	
	[Ref. QA-8547]
snippet 14_SALT_(WIREFRAME)_14.1_Basic_widgets " Basic widgets"
	A window must start and end with brackets. You can then define:
	• Button using [ and ].
	• Radio button using ( and ).
	• Checkbox using [ and ].
	• User text area using ".
	• Droplist using ^.
	@startsalt
	{
	        Just plain text
	        [This is my button]
	        () Unchecked radio
	        (X) Checked radio
	        [] Unchecked box
	        [X] Checked box
	        "Enter text here "
	        ^This is a droplist^
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.2_Using_grid " Using grid [|]"
	A table is automatically created when you use an opening bracket {. And you have to use | to separate
	columns.
	For example:
	
	@startsalt
	{
	        Login | "MyName "
	        Password | "**** "
	        [Cancel] | [ OK ]
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.3_Group_box " Group box [^] 14 SALT (WIREFRAME)"
	
	Just after the opening bracket, you can use a character to define if you want to draw lines or columns of
	the grid :
	Symbol Result
	# To display all vertical and horizontal lines
	! To display all vertical lines
	- To display all horizontal lines
	+ To display external lines
	
	@startsalt
	{+
	Login | "MyName "
	Password | "**** "
	[Cancel] | [ OK ]
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.4_Using_separator " Using separator [.., ==, ~~, –]"
	You can use several horizontal lines as separator.
	
	@startsalt
	{
	        Text1
	        ..
	        "Some field"
	        ==
	        Note on usage
	        ~~
	        Another text
	        --
	        [Ok]
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.5_Tree_widget " Tree widget [T]"
	To have a Tree, you have to start with {T and to use + to denote hierarchy.
	
	@startsalt
	{
	        {T
	        + World
	        ++ America
	        +++ Canada
	        +++ USA
	        ++++ New York
	        ++++ Boston
	        +++ Mexico
	        ++ Europe
	        +++ Italy
	        +++ Germany
	        ++++ Berlin
	        ++ Africa
	}
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.6_Tree_table " Tree table [T]"
	You can combine trees with tables.
	
	@startsalt
	{
	        {T
	        +Region | Population | Age
	        + World | 7.13 billion | 30
	        ++ America | 964 million | 30
	        +++ Canada | 35 million | 30
	        +++ USA | 319 million | 30
	        ++++ NYC | 8 million | 30
	        ++++ Boston | 617 thousand | 30
	        +++ Mexico | 117 million | 30
	        ++ Europe | 601 million | 30
	        +++ Italy | 61 million | 30
	        +++ Germany | 82 million | 30
	        ++++ Berlin | 3 million | 30
	
	        ++ Africa | 1 billion | 30
	}
	}
	@endsalt
	
	And add lines.
	
	@startsalt
	{
	..
	== with T!
	{T!
	+Region | Population | Age
	+ World | 7.13 billion | 30
	++ America | 964 million | 30
	}
	..
	== with T-
	{T-
	+Region | Population | Age
	+ World | 7.13 billion | 30
	++ America | 964 million | 30
	}
	..
	== with T+
	{T+
	+Region | Population | Age
	+ World | 7.13 billion | 30
	++ America | 964 million | 30
	}
	..
	== with T#
	{T#
	+Region | Population | Age
	+ World | 7.13 billion | 30
	++ America | 964 million | 30
	}
	..
	}
	@endsalt
	
	[Ref. QA-1265]
	
snippet 14_SALT_(WIREFRAME)_14.7_Enclosing_brackets " Enclosing brackets [{, }]"
	You can define subelements by opening a new opening bracket.
	
	@startsalt
	{
	        Name | " "
	        Modifiers: | { (X) public | () default | () private | () protected
	        [] abstract | [] final | [] static }
	        Superclass: | { "java.lang.Object " | [Browse...] }
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.8_Adding_tabs " Adding tabs [/]"
	You can add tabs using {/ notation. Note that you can use HTML code to have bold text.
	
	@startsalt
	{+
	{/ <b>General | Fullscreen | Behavior | Saving }
	{
	        { Open image in: | ^Smart Mode^ }
	        [X] Smooth images when zoomed
	        [X] Confirm image deletion
	        [ ] Show hidden images
	}
	[Close]
	}
	@endsalt
	
	Tab could also be vertically oriented:
	
	@startsalt
	{+
	{/ <b>General
	Fullscreen
	Behavior
	Saving } |
	{
	{ Open image in: | ^Smart Mode^ }
	[X] Smooth images when zoomed
	[X] Confirm image deletion
	[ ] Show hidden images
	[Close]
	}
	}
	@endsalt
	
snippet 14_SALT_(WIREFRAME)_14.9_Using_menu " Using menu [*]"
	You can add a menu by using {* notation.
	
	@startsalt
	{+
	{* File | Edit | Source | Refactor }
	{/ General | Fullscreen | Behavior | Saving }
	{
	        { Open image in: | ^Smart Mode^ }
	        [X] Smooth images when zoomed
	        [X] Confirm image deletion
	        [ ] Show hidden images
	}
	[Close]
	}
	@endsalt
	
	It is also possible to open a menu:
	
	@startsalt
	{+
	{* File | Edit | Source | Refactor
	Refactor | New | Open File | - | Close | Close All }
	{/ General | Fullscreen | Behavior | Saving }
	{
	{ Open image in: | ^Smart Mode^ }
	
	[X] Smooth images when zoomed
	[X] Confirm image deletion
	[ ] Show hidden images
	}
	[Close]
	}
	@endsalt
	
snippet 1_SEQUENCE_DIAGRAM_1.4_Message_to_Self " Message to Self"
	A participant can send a message to itself.
	It is also possible to have multi-line using .
	
	@startuml
	Alice->Alice: This is a signal to self.\nIt also demonstrates\nmultiline \ntext
	@enduml
	
snippet 14_SALT_(WIREFRAME)_14_Salt " SALT (WIREFRAME)"
	
	14 Salt (Wireframe)
	Salt is a subproject included in PlantUML that may help you to design graphical interface or Website
	Wireframe or Page Schematic or Screen Blueprint.
	The goal of this tool is to discuss about simple and sample windows.
	You can use either @startsalt keyword, or @startuml followed by a line with salt keyword.
	
snippet 15_ARCHIMATE_DIAGRAM_15.1_Archimate_keyword " Archimate keyword"
	You can use the archimate keyword to define an element. Stereotype can optionally specify an ad-
	ditional icon. Some colors (Business, Application, Motivation, Strategy, Technology, Physical,
	Implementation) are also available.
	
	@startuml
	archimate #Technology "VPN Server" as vpnServerA <<technology-device>>
	
	rectangle GO #lightgreen
	rectangle STOP #red
	rectangle WAIT #orange
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.5.1_Text_of_response_message_below_the_arrow " Text of response message below the arrow"
	You can put the text of the response message below the arrow, with the skinparam responseMessageBelowArrow
	true command.
	
	@startuml
	skinparam responseMessageBelowArrow true
	Bob -> Alice : hello
	Alice -> Bob : ok
	@enduml
	
	TODO: TODO Link to Text Alignment on skinparam page.
	
snippet 15_ARCHIMATE_DIAGRAM_15.2_Defining_Junctions " Defining Junctions"
	Using the circle keyword and the preprocessor, you can also create junctions.
	
	@startuml
	!define Junction_Or circle #black
	!define Junction_And circle #whitesmoke
	
	Junction_And JunctionAnd
	Junction_Or JunctionOr
	
	archimate #Technology "VPN Server" as vpnServerA <<technology-device>>
	
	rectangle GO #lightgreen
	rectangle STOP #red
	rectangle WAIT #orange
	GO -up-> JunctionOr
	STOP -up-> JunctionOr
	STOP -down-> JunctionAnd
	WAIT -down-> JunctionAnd
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.3_Example_1 " Example 1"
	
	@startuml
	skinparam rectangle<<behavior>> {
	        roundCorner 25
	}
	sprite $bProcess jar:archimate/business-process
	sprite $aService jar:archimate/application-service
	sprite $aComponent jar:archimate/application-component
	
	rectangle "Handle claim" as HC <<$bProcess>><<behavior>> #Business
	rectangle "Capture Information" as CI <<$bProcess>><<behavior>> #Business
	rectangle "Notify\nAdditional Stakeholders" as NAS <<$bProcess>><<behavior>> #Business
	rectangle "Validate" as V <<$bProcess>><<behavior>> #Business
	rectangle "Investigate" as I <<$bProcess>><<behavior>> #Business
	rectangle "Pay" as P <<$bProcess>><<behavior>> #Business
	
	HC *-down- CI
	HC *-down- NAS
	HC *-down- V
	HC *-down- I
	HC *-down- P
	
	CI -right->> NAS
	NAS -right->> V
	V -right->> I
	I -right->> P
	
	rectangle "Scanning" as scanning <<$aService>><<behavior>> #Application
	rectangle "Customer admnistration" as customerAdministration <<$aService>><<behavior>> #Application
	rectangle "Claims admnistration" as claimsAdministration <<$aService>><<behavior>> #Application
	rectangle Printing <<$aService>><<behavior>> #Application
	rectangle Payment <<$aService>><<behavior>> #Application
	
	scanning -up-> CI
	customerAdministration -up-> CI
	claimsAdministration -up-> NAS
	claimsAdministration -up-> V
	claimsAdministration -up-> I
	Payment -up-> P
	
	Printing -up-> V
	Printing -up-> P
	
	rectangle "Document\nManagement\nSystem" as DMS <<$aComponent>> #Application
	rectangle "General\nCRM\nSystem" as CRM <<$aComponent>> #Application
	rectangle "Home & Away\nPolicy\nAdministration" as HAPA <<$aComponent>> #Application
	rectangle "Home & Away\nFinancial\nAdministration" as HFPA <<$aComponent>> #Application
	
	DMS .up.|> scanning
	DMS .up.|> Printing
	CRM .up.|> customerAdministration
	HAPA .up.|> claimsAdministration
	HFPA .up.|> Payment
	
	legend left
	        Example from the "Archisurance case study" (OpenGroup).
	        See
	        ====
	        <$bProcess> :business process
	        ====
	        <$aService> : application service
	        ====
	        <$aComponent> : application component
	endlegend
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.4_Example_2 " Example 2"
	
	@startuml
	skinparam roundcorner 25
	rectangle "Capture Information" as CI <<$archimate/business-process>> #Business
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.5_List_possible_sprites " List possible sprites"
	You can list all possible sprites for Archimate using the following diagram:
	
	@startuml
	listsprite
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.6.1_Archimate_Macros_and_Library " Archimate Macros and Library"
	A list of Archimate macros are defined Archimate-PlantUML here which simplifies the creation of Archi-
	Mate diagrams, and Archimate is natively on the Standard Library of PlantUML.
	
snippet 15_ARCHIMATE_DIAGRAM_15.6.2_Archimate_elements " Archimate elements"
	Using the macros, creation of ArchiMate elements are done using the following format: Category_ElementName(nameOfTheElement,
	"description")
	For example:
	• To define a Stakeholder element, which is part of Motivation category, the syntax will be Motivation_Stakeholder(StakeholderElement,
	"Stakeholder Description"):
	
	@startuml
	!include <archimate/Archimate>
	Motivation_Stakeholder(StakeholderElement, "Stakeholder Description")
	@enduml
	
	• To define a Business Service element, Business_Service(BService, "Business Service"):
	
	@startuml
	!include <archimate/Archimate>
	Business_Service(BService, "Business Service")
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.6.3_Archimate_relationships " Archimate relationships"
	The ArchiMate relationships are defined with the following pattern: Rel_RelationType(fromElement,
	toElement, "description")and to define the direction/orientation of the two elements: Rel_RelationType_Direction(fromElement,
	toElement, "description")
	The RelationTypes supported are:
	• Access
	• Aggregation
	• Assignment
	• Association
	• Composition
	• Flow
	• Influence
	• Realization
	• Serving
	• Specialization
	• Triggering
	The Directions supported are:
	• Up
	• Down
	• Left
	• Right
	For example:
	• To denote a composition relationship between the Stakeholder and Business Service defined above,
	the syntax will be
	Rel_Composition(StakeholderElement, BService, "Description for the relationship")
	
	@startuml
	!include <archimate/Archimate>
	Motivation_Stakeholder(StakeholderElement, "Stakeholder Description")
	
	Business_Service(BService, "Business Service")
	Rel_Composition(StakeholderElement, BService, "Description for the relationship")
	@enduml
	
	• Unordered List ItemTo orient the two elements in top - down position, the syntax will be
	Rel_Composition_Down(StakeholderElement, BService, "Description for the relationship")
	
	@startuml
	!include <archimate/Archimate>
	Motivation_Stakeholder(StakeholderElement, "Stakeholder Description")
	Business_Service(BService, "Business Service")
	Rel_Composition_Down(StakeholderElement, BService, "Description for the relationship")
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.6.4_Appendice_Examples_of_all_Archimate_RelationTypes " Appendice: Examples of all Archimate RelationTypes"
	
	@startuml
	left to right direction
	!include <archimate/Archimate>
	Rel_Triggering(i15, j15, Triggering)
	Rel_Specialization(i14, j14, Specialization)
	Rel_Serving(i13, j13, Serving)
	Rel_Realization(i12, j12, Realization)
	Rel_Influence(i11, j11, Influence)
	Rel_Flow(i10, j10, Flow)
	Rel_Composition(i9, j9, Composition)
	'Rel_Association_dir(i8, j8, Association_dir)
	Rel_Association(i7, j7, Association)
	Rel_Assignment(i6, j6, Assignment)
	Rel_Aggregation(i5, j5, Aggregation)
	Rel_Access_w(i4, j4, Access_w)
	Rel_Access_rw(i3, j3, Access_rw)
	Rel_Access_r(i2, j2, Access_r)
	Rel_Access(i1, j1, Access)
	@enduml
	
snippet 15_ARCHIMATE_DIAGRAM_15.6_ArchiMate_Macros " ArchiMate Macros"
	
snippet 15_ARCHIMATE_DIAGRAM_15_Archimate_Diagram " ARCHIMATE DIAGRAM"
	
	15 Archimate Diagram
	This is only a proposal and subject to change.
	You are very welcome to create a new discussion on this future syntax. Your feedbacks, ideas and
	suggestions help us to find the right solution.
	
snippet 1_SEQUENCE_DIAGRAM_1.5_Text_alignment " Text alignment"
	
snippet 16_GANTT_DIAGRAM_16.10Coloring_days " Coloring days"
	It is possible to add colors to some days.
	@startgantt
	Project starts the 2020/09/01
	
	2020/09/07 is colored in salmon
	2020/09/13 to 2020/09/16 are colored in lightblue
	
	[Prototype design] as [TASK1] lasts 22 days
	[TASK1] is colored in Lavender/LightBlue
	[Prototype completed] happens at [TASK1]'s end
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.11.1_Daily " Daily (by default)"
	
	@startuml
	saturday are closed
	sunday are closed
	
	Project starts the 1st of january 2021
	[Prototype design end] as [TASK1] lasts 19 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 14 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.11.2_Weekly " Weekly"
	
	@startuml
	printscale weekly
	saturday are closed
	sunday are closed
	
	Project starts the 1st of january 2021
	[Prototype design end] as [TASK1] lasts 19 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 14 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	@enduml
	
	@startgantt
	printscale weekly
	Project starts the 20th of september 2020
	[Prototype design] as [TASK1] lasts 130 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 20 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.11.3_Monthly " Monthly"
	
	@startgantt
	projectscale monthly
	Project starts the 20th of september 2020
	[Prototype design] as [TASK1] lasts 130 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 20 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.11Changing_scale " Changing scale"
	You can change scale for very long project, with one of those parameters:
	• printscale
	• ganttscale
	• projectscale
	and one of the values:
	• daily (by default)
	• weekly
	• monthly
	(See QA-11272, QA-9041 and QA-10948)
	
snippet 16_GANTT_DIAGRAM_16.1.1_Duration " Duration"
	Their durations are defined using the last verb:
	
	@startgantt
	[Prototype design] lasts 15 days
	[Test prototype] lasts 10 days
	-- All example --
	[Task 1 (1 day)] lasts 1 day
	[T2 (5 days)] lasts 5 days
	[T3 (1 week)] lasts 1 week
	[T4 (1 week and 4 days)] lasts 1 week and 4 days
	[T5 (2 weeks)] lasts 2 weeks
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.12Close_day " Close day"
	It is possible to close some day.
	
	@startgantt
	project starts the 2018/04/09
	saturday are closed
	sunday are closed
	2018/05/01 is closed
	2018/04/17 to 2018/04/19 is closed
	[Prototype design] lasts 14 days
	[Test prototype] lasts 4 days
	[Test prototype] starts at [Prototype design]'s end
	[Prototype design] is colored in Fuchsia/FireBrick
	[Test prototype] is colored in GreenYellow/Green
	@endgantt
	
	Then it is possible to open some closed day.
	
	@startgantt
	2020-07-07 to 2020-07-17 is closed
	2020-07-13 is open
	
	Project starts the 2020-07-01
	[Prototype design] lasts 10 days
	Then [Test prototype] lasts 10 days
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.1.2_Start " Start"
	Their beginning are defined using the start verb:
	
	@startuml
	[Prototype design] lasts 15 days
	[Test prototype] lasts 10 days
	
	Project starts 2020-07-01
	[Prototype design] starts 2020-07-01
	[Test prototype] starts 2020-07-16
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.1.3_End " End"
	Their ending are defined using the end verb:
	
	@startuml
	[Prototype design] lasts 15 days
	[Test prototype] lasts 10 days
	
	Project starts 2020-07-01
	[Prototype design] ends 2020-07-15
	
	[Test prototype] ends 2020-07-25
	
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.13Simplified_task_succession " Simplified task succession"
	It’s possible to use the then keyword to denote consecutive tasks.
	
	@startgantt
	[Prototype design] lasts 14 days
	then [Test prototype] lasts 4 days
	then [Deploy prototype] lasts 6 days
	@endgantt
	
	You can also use arrow ->
	
	@startgantt
	[Prototype design] lasts 14 days
	[Build prototype] lasts 4 days
	[Prepare test] lasts 6 days
	[Prototype design] -> [Build prototype]
	[Prototype design] -> [Prepare test]
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.14Separator " Separator"
	You can use -- to separate sets of tasks.
	
	@startgantt
	[Task1] lasts 10 days
	then [Task2] lasts 4 days
	-- Phase Two --
	then [Task3] lasts 5 days
	then [Task4] lasts 6 days
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.1.4_Start_End " Start/End"
	It is possible to define both absolutely, by specifying dates:
	
	@startuml
	
	Project starts 2020-07-01
	[Prototype design] starts 2020-07-01
	[Test prototype] starts 2020-07-16
	[Prototype design] ends 2020-07-15
	[Test prototype] ends 2020-07-25
	
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.15Working_with_resources " Working with resources"
	You can affect tasks on resources using the on keyword and brackets for resource name.
	
	@startgantt
	[Task1] on {Alice} lasts 10 days
	
snippet 16_GANTT_DIAGRAM_16.16Complex_example " Complex example 16 GANTT DIAGRAM"
	
	[Task2] on {Bob:50%} lasts 2 days
	then [Task3] on {Alice:25%} lasts 1 days
	@endgantt
	
	Multiple resources can be assigned to a task:
	
	@startgantt
	[Task1] on {Alice} {Bob} lasts 20 days
	@endgantt
	
	Resources can be marked as off on specific days:
	
	@startgantt
	project starts on 2020-06-19
	[Task1] on {Alice} lasts 10 days
	{Alice} is off on 2020-06-24 to 2020-06-26
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.17Comments " Comments"
	As is mentioned on Common Commands page: ￿blockquote￿￿ Everything that starts with simple quote
	' is a comment.
	You can also put comments on several lines using /' to start and '/ to end. ￿blockquote￿￿ (i.e.: the first
	character (except space character) of a comment line must be a simple quote ')
	
	@startgantt
	' This is a comment
	
	[T1] lasts 3 days
	
	/' this comment
	is on several lines '/
	
	[T2] starts at [T1]'s end and lasts 1 day
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.18.1_Without_style " Without style (by default)"
	
	@startuml
	[Task1] lasts 20 days
	note bottom
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	[Task2] lasts 4 days
	[Task1] -> [Task2]
	-- Separator title --
	[M1] happens on 5 days after [Task1]'s end
	-- end --
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.18.2_With_style " With style"
	You can use style to change rendering of elements.
	
	@startuml
	<style>
	ganttDiagram {
	        task {
	                FontName Helvetica
	                FontColor red
	                FontSize 18
	
	                FontStyle bold
	                BackGroundColor GreenYellow
	                LineColor blue
	        }
	        milestone {
	                FontColor blue
	                FontSize 25
	                FontStyle italic
	                BackGroundColor yellow
	                LineColor red
	        }
	        note {
	                FontColor DarkGreen
	                FontSize 10
	                LineColor OrangeRed
	        }
	        arrow {
	                FontName Helvetica
	                FontColor red
	                FontSize 18
	                FontStyle bold
	                BackGroundColor GreenYellow
	                LineColor blue
	        }
	        separator {
	                LineColor red
	                BackGroundColor green
	                FontSize 16
	                FontStyle bold
	                FontColor purple
	        }
	}
	</style>
	[Task1] lasts 20 days
	note bottom
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	[Task2] lasts 4 days
	[Task1] -> [Task2]
	-- Separator title --
	[M1] happens on 5 days after [Task1]'s end
	-- end --
	@enduml
	
	[Ref. QA-10835, QA-12045, QA-11877 and PR-438]
	TODO: TODO Awaiting style for Separator and all style for Arrow (thickness...)
	
snippet 16_GANTT_DIAGRAM_16.18Using_style " Using style"
	
snippet 16_GANTT_DIAGRAM_16.19Add_notes " Add notes"
	
	@startgantt
	[task01] lasts 15 days
	note bottom
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	
	[task01] -> [task02]
	
	@endgantt
	
	Example with overlap.
	
	@startgantt
	[task01] lasts 15 days
	note bottom
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	
	[task01] -> [task02]
	[task03] lasts 5 days
	
	@endgantt
	
	@startgantt
	
	-- test01 --
	
	[task01] lasts 4 days
	note bottom
	        'note left
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	
	[task02] lasts 8 days
	[task01] -> [task02]
	note bottom
	
	        'note left
	        memo1 ...
	        memo2 ...
	        explanations1 ...
	        explanations2 ...
	end note
	-- test02 --
	
	[task03] as [t3] lasts 7 days
	[t3] -> [t4]
	@endgantt
	
	TODO: DONE Thanks for correction (of #386 on v1.2020.18) when overlapping
	
	@startgantt
	
	Project starts 2020-09-01
	
	[taskA] starts 2020-09-01 and lasts 3 days
	[taskB] starts 2020-09-10 and lasts 3 days
	[taskB] displays on same row as [taskA]
	
	[task01] starts 2020-09-05 and lasts 4 days
	
	then [task02] lasts 8 days
	note bottom
	        note for task02
	        more notes
	end note
	
	then [task03] lasts 7 days
	note bottom
	        note for task03
	        more notes
	end note
	
	-- separator --
	
	[taskC] starts 2020-09-02 and lasts 5 days
	[taskD] starts 2020-09-09 and lasts 5 days
	[taskD] displays on same row as [taskC]
	
	[task 10] starts 2020-09-05 and lasts 5 days
	then [task 11] lasts 5 days
	note bottom
	        note for task11
	
	        more notes
	end note
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.1_Declaring_tasks " Declaring tasks"
	Tasks defined using square bracket.
	
snippet 16_GANTT_DIAGRAM_16.20Pause_tasks " Pause tasks"
	
	@startgantt
	Project starts the 5th of december 2018
	saturday are closed
	sunday are closed
	2018/12/29 is opened
	[Prototype design] lasts 17 days
	[Prototype design] pauses on 2018/12/13
	[Prototype design] pauses on 2018/12/14
	[Prototype design] pauses on monday
	[Test prototype] starts at [Prototype design]'s end and lasts 2 weeks
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.21Change_link_colors " Change link colors"
	
	@startgantt
	[T1] lasts 4 days
	[T2] lasts 4 days and starts 3 days after [T1]'s end with blue dotted link
	[T3] lasts 4 days and starts 3 days after [T2]'s end with green bold link
	[T4] lasts 4 days and starts 3 days after [T3]'s end with green dashed link
	@endgantt
	
	@startuml
	Links are colored in blue
	[Prototype design] lasts 14 days
	[Build prototype] lasts 4 days
	[Prepare test] lasts 6 days
	
	[Prototype design] -[#FF00FF]-> [Build prototype]
	[Prototype design] -[dotted]-> [Prepare test]
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.22Tasks_or_Milestones_on_the_same_line " Tasks or Milestones on the same line"
	
	@startgantt
	[Prototype design] lasts 13 days
	[Test prototype] lasts 4 days and 1 week
	[Test prototype] starts 1 week and 2 days after [Prototype design]'s end
	[Test prototype] displays on same row as [Prototype design]
	[r1] happens on 5 days after [Prototype design]'s end
	[r2] happens on 5 days after [r1]'s end
	[r3] happens on 5 days after [r2]'s end
	[r2] displays on same row as [r1]
	[r3] displays on same row as [r1]
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.23Highlight_today " Highlight today"
	
	@startgantt
	Project starts the 20th of september 2018
	sunday are close
	2018/09/21 to 2018/09/23 are colored in salmon
	2018/09/21 to 2018/09/30 are named [Vacation in the Bahamas]
	
	today is 30 days after start and is colored in #AAF
	[Foo] happens 40 days after start
	[Dummy] lasts 10 days and starts 10 days after start
	
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.24Task_between_two_milestones " Task between two milestones"
	@startgantt
	project starts on 2020-07-01
	[P_start] happens 2020-07-03
	[P_end] happens 2020-07-13
	[Prototype design] occurs from [P_start] to [P_end]
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.25Grammar_and_verbal_form " Grammar and verbal form"
	Verbal form Example
	[T] starts
	[M] happens
	
snippet 16_GANTT_DIAGRAM_16.26Add_title_header_footer_caption_or_legend_on_gantt_diagram " Add title, header, footer, caption or legend on gantt diagram"
	
	@startuml
	
	header some header
	
	footer some footer
	
	title My title
	
	[Prototype design] lasts 13 days
	
	legend
	        The legend
	        end legend
	
	        caption This is caption
	
	        @enduml
	
	        (See also: Common commands)
	
snippet 16_GANTT_DIAGRAM_16.27Removing_Foot_Boxes " Removing Foot Boxes"
	You can use the hide footbox keywords to remove the foot boxes of the gantt diagram (as for sequence
	diagram).
	Examples on:
	• daily scale (without project start)
	
	@startgantt
	
	hide footbox
	title Foot Box removed
	
	[Prototype design] lasts 15 days
	[Test prototype] lasts 10 days
	
	@endgantt
	
	• daily scale
	
	@startgantt
	
	Project starts the 20th of september 2017
	[Prototype design] as [TASK1] lasts 13 days
	[TASK1] is colored in Lavender/LightBlue
	
	hide footbox
	@endgantt
	
	• weekly scale
	
	@startgantt
	hide footbox
	
	printscale weekly
	saturday are closed
	sunday are closed
	
	Project starts the 1st of january 2021
	[Prototype design end] as [TASK1] lasts 19 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 14 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	@endgantt
	
	• monthly scale
	
	@startgantt
	
	hide footbox
	
	projectscale monthly
	Project starts the 20th of september 2020
	[Prototype design] as [TASK1] lasts 130 days
	[TASK1] is colored in Lavender/LightBlue
	[Testing] lasts 20 days
	[TASK1]->[Testing]
	
	2021-01-18 to 2021-01-22 are named [End's committee]
	2021-01-18 to 2021-01-22 are colored in salmon
	
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.2_One-line_declaration " One-line declaration (with the and conjunction)"
	It is possible to combine declaration on one line with the and conjunction.
	
	@startuml
	Project starts 2020-07-01
	[Prototype design] starts 2020-07-01 and ends 2020-07-15
	[Test prototype] starts 2020-07-16 and lasts 10 days
	@enduml
	
snippet 16_GANTT_DIAGRAM_16.3_Adding_constraints " Adding constraints"
	It is possible to add constraints between tasks.
	@startgantt
	[Prototype design] lasts 15 days
	[Test prototype] lasts 10 days
	[Test prototype] starts at [Prototype design]'s end
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.4_Short_names " Short names 16 GANTT DIAGRAM"
	
	@startgantt
	[Prototype design] lasts 10 days
	[Code prototype] lasts 10 days
	[Write tests] lasts 5 days
	[Code prototype] starts at [Prototype design]'s end
	[Write tests] starts at [Code prototype]'s start
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.5_Customize_colors " Customize colors"
	It is also possible to customize colors with is colored in.
	
	@startgantt
	[Prototype design] lasts 13 days
	[Test prototype] lasts 4 days
	[Test prototype] starts at [Prototype design]'s end
	[Prototype design] is colored in Fuchsia/FireBrick
	[Test prototype] is colored in GreenYellow/Green
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.6_Completion_status " Completion status"
	You can set the completion status of a task.
	
	@startgantt
	[foo] lasts 21 days
	[foo] is 40% completed
	[bar] lasts 30 days and is 10% complete
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.7.1_Relative_milestone " Relative milestone (use of constraints)"
	
	@startgantt
	[Test prototype] lasts 10 days
	[Prototype completed] happens at [Test prototype]'s end
	[Setup assembly line] lasts 12 days
	[Setup assembly line] starts at [Test prototype]'s end
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.7.2_Absolute_milestone " Absolute milestone (use of fixed date)"
	
	@startgantt
	Project starts 2020-07-01
	[Test prototype] lasts 10 days
	[Prototype completed] happens 2020-07-10
	[Setup assembly line] lasts 12 days
	[Setup assembly line] starts at [Test prototype]'s end
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.7.3_Milestone_of_maximum_end_of_tasks " Milestone of maximum end of tasks"
	
	@startgantt
	[Task1] lasts 4 days
	then [Task1.1] lasts 4 days
	[Task1.2] starts at [Task1]'s end and lasts 7 days
	
	[Task2] lasts 5 days
	then [Task2.1] lasts 4 days
	
	[MaxTaskEnd] happens at [Task1.1]'s end
	[MaxTaskEnd] happens at [Task1.2]'s end
	[MaxTaskEnd] happens at [Task2.1]'s end
	
	@endgantt
	
	[Ref. QA-10764]
	
snippet 16_GANTT_DIAGRAM_16.7_Milestone " Milestone"
	You can define Milestones using the happen verb.
	
snippet 16_GANTT_DIAGRAM_16.8_Hyperlinks " Hyperlinks"
	You can add hyperlinks to tasks.
	
	@startgantt
	[task1] lasts 10 days
	[task1] links to [[http://plantuml.com]]
	@endgantt
	
snippet 16_GANTT_DIAGRAM_16.9_Calendar " Calendar"
	You can specify a starting date for the whole project. By default, the first task starts at this date.
	
	@startgantt
	Project starts the 20th of september 2017
	[Prototype design] as [TASK1] lasts 13 days
	[TASK1] is colored in Lavender/LightBlue
	@endgantt
	
snippet 1_SEQUENCE_DIAGRAM_1.6_Change_arrow_style " Change arrow style"
	You can change arrow style by several ways:
	• add a final x to denote a lost message
	• use \ or / instead of < or > to have only the bottom or top part of the arrow
	• repeat the arrow head (for example, >> or //) head to have a thin drawing
	• use -- instead of - to have a dotted arrow
	• add a final ”o” at arrow head
	• use bidirectional arrow <->
	
	@startuml
	Bob ->x Alice
	Bob -> Alice
	Bob ->> Alice
	Bob -\ Alice
	Bob \\- Alice
	Bob //-- Alice
	
	Bob ->o Alice
	Bob o\\-- Alice
	
	Bob <-> Alice
	Bob <->o Alice
	@enduml
	
snippet 16_GANTT_DIAGRAM_16_Gantt_Diagram " GANTT DIAGRAM"
	
	16 Gantt Diagram
	The Gantt is described in natural language, using very simple sentences (subject-verb-complement).
	
snippet 17_MINDMAP_17.10Word_Wrap " Word Wrap"
	Using MaximumWidth setting you can control automatic word wrap. Unit used is pixel.
	
	@startmindmap
	
	<style>
	node {
	        Padding 12
	        Margin 3
	        HorizontalAlignment center
	        LineColor blue
	        LineThickness 3.0
	        BackgroundColor gold
	        RoundCorner 40
	        MaximumWidth 100
	}
	
	rootNode {
	        LineStyle 8.0;3.0
	        LineColor red
	        BackgroundColor white
	        LineThickness 1.0
	        RoundCorner 0
	        Shadowing 0.0
	}
	
	leafNode {
	        LineColor gold
	        RoundCorner 0
	        Padding 3
	}
	
	arrow {
	        LineStyle 4
	        LineThickness 0.5
	        LineColor green
	}
	</style>
	
	* Hi =)
	** sometimes i have node in wich i want to write a long text
	*** this results in really huge diagram
	**** of course, i can explicit split with a\nnew line
	**** but it could be cool if PlantUML was able to split long lines, maybe with an option
	
	@endmindmap
snippet 17_MINDMAP_17.1_OrgMode_syntax " OrgMode syntax"
	This syntax is compatible with OrgMode
	
	@startmindmap
	* Debian
	** Ubuntu
	*** Linux Mint
	*** Kubuntu
	*** Lubuntu
	*** KDE Neon
	** LMDE
	** SolydXK
	** SteamOS
	** Raspbian with a very long name
	*** <s>Raspmbc</s> => OSMC
	*** <s>Raspyfi</s> => Volumio
	@endmindmap
	
snippet 17_MINDMAP_17.2_Markdown_syntax " Markdown syntax"
	This syntax is compatible with Markdown
	
	@startmindmap
	* root node
	* some first level node
	* second level node
	* another second level node
	* another first level node
	@endmindmap
	
snippet 17_MINDMAP_17.3_Arithmetic_notation " Arithmetic notation"
	You can use the following notation to choose diagram side.
	
	@startmindmap
	+ OS
	++ Ubuntu
	+++ Linux Mint
	+++ Kubuntu
	+++ Lubuntu
	+++ KDE Neon
	++ LMDE
	++ SolydXK
	++ SteamOS
	++ Raspbian
	-- Windows 95
	-- Windows 98
	-- Windows NT
	--- Windows 8
	--- Windows 10
	@endmindmap
	
snippet 17_MINDMAP_17.4_Multilines " Multilines"
	You can use : and ; to have multilines box.
	
	@startmindmap
	* Class Templates
	**:Example 1
	<code>
	template <typename T>
	class cname{
	        void f1()<U+003B>
	        ...
	}
	</code>
	;
	**:Example 2
	<code>
	other template <typename T>
	class cname{
	        ...
	        </code>
	        ;
	        @endmindmap
	
snippet 17_MINDMAP_17.5.1_With_inline_color " With inline color"
	• OrgMode syntax mindmap
	
	@startmindmap
	*[#Orange] Colors
	**[#lightgreen] Green
	**[#FFBBCC] Rose
	**[#lightblue] Blue
	@endmindmap
	
	• Arithmetic notation syntax mindmap
	
	@startmindmap
	+[#Orange] Colors
	++[#lightgreen] Green
	++[#FFBBCC] Rose
	--[#lightblue] Blue
	@endmindmap
	
	• Markdown syntax mindmap
	@startmindmap
	*[#Orange] root node
	*[#lightgreen] some first level node
	*[#FFBBCC] second level node
	*[#lightblue] another second level node
	*[#lightgreen] another first level node
	@endmindmap
	
snippet 17_MINDMAP_17.5.2_With_style_color " With style color"
	• OrgMode syntax mindmap
	
	@startmindmap
	<style>
	mindmapDiagram {
	        .green {
	                BackgroundColor lightgreen
	        }
	        .rose {
	                BackgroundColor #FFBBCC
	        }
	        .your_style_name {
	                BackgroundColor lightblue
	        }
	}
	</style>
	* Colors
	** Green <<green>>
	** Rose <<rose>>
	** Blue <<your_style_name>>
	@endmindmap
	
	• Arithmetic notation syntax mindmap
	
	@startmindmap
	<style>
	mindmapDiagram {
	        .green {
	                BackgroundColor lightgreen
	        }
	        .rose {
	                BackgroundColor #FFBBCC
	        }
	        .your_style_name {
	                BackgroundColor lightblue
	        }
	}
	</style>
	+ Colors
	++ Green <<green>>
	++ Rose <<rose>>
	-- Blue <<your_style_name>>
	@endmindmap
	
	• Markdown syntax mindmap
	@startmindmap
	<style>
	mindmapDiagram {
	        .green {
	                BackgroundColor lightgreen
	        }
	        .rose {
	                BackgroundColor #FFBBCC
	        }
	        .your_style_name {
	                BackgroundColor lightblue
	        }
	}
	</style>
	* root node
	* some first level node <<green>>
	* second level node <<rose>>
	* another second level node <<your_style_name>>
	* another first level node <<green>>
	@endmindmap
	
snippet 17_MINDMAP_17.5_Colors " Colors"
	It is possible to change node color.
	
snippet 17_MINDMAP_17.6_Removing_box " Removing box"
	You can remove the box drawing using an underscore.
	
	@startmindmap
	* root node
	** some first level node
	***_ second level node
	***_ another second level node
	***_ foo
	***_ bar
	***_ foobar
	** another first level node
	@endmindmap
	
	@startmindmap
	*_ root node
	**_ some first level node
	***_ second level node
	***_ another second level node
	***_ foo
	***_ bar
	***_ foobar
	**_ another first level node
	@endmindmap
	
	@startmindmap
	+ root node
	++ some first level node
	+++_ second level node
	+++_ another second level node
	+++_ foo
	+++_ bar
	+++_ foobar
	++_ another first level node
	-- some first right level node
	--_ another first right level node
	@endmindmap
	
snippet 17_MINDMAP_17.7_Changing_diagram_direction " Changing diagram direction"
	It is possible to use both sides of the diagram.
	
	@startmindmap
	* count
	** 100
	*** 101
	*** 102
	** 200
	
	left side
	
	** A
	*** AA
	*** AB
	** B
	@endmindmap
	
snippet 17_MINDMAP_17.8_Complete_example " Complete example"
	
	@startmindmap
	caption figure 1
	title My super title
	
	* <&flag>Debian
	** <&globe>Ubuntu
	*** Linux Mint
	*** Kubuntu
	*** Lubuntu
	*** KDE Neon
	** <&graph>LMDE
	** <&pulse>SolydXK
	** <&people>SteamOS
	** <&star>Raspbian with a very long name
	*** <s>Raspmbc</s> => OSMC
	*** <s>Raspyfi</s> => Volumio
	
	header
	        My super header
	endheader
	
	center footer My super footer
	
	legend right
	        Short
	        legend
	        endlegend
	        @endmindmap
	
snippet 17_MINDMAP_17.9.1_node_depth " node, depth"
	
	@startmindmap
	<style>
	mindmapDiagram {
	        node {
	                BackgroundColor lightGreen
	        }
	        :depth(1) {
	                BackGroundColor white
	        }
	
	}
	</style>
	* Linux
	** NixOS
	** Debian
	*** Ubuntu
	**** Linux Mint
	**** Kubuntu
	**** Lubuntu
	**** KDE Neon
	@endmindmap
	
snippet 17_MINDMAP_17.9.2_boxless " boxless"
	
	@startmindmap
	<style>
	mindmapDiagram {
	        node {
	                BackgroundColor lightGreen
	        }
	        boxless {
	                FontColor darkgreen
	        }
	}
	</style>
	* Linux
	** NixOS
	** Debian
	***_ Ubuntu
	**** Linux Mint
	**** Kubuntu
	**** Lubuntu
	**** KDE Neon
	@endmindmap
	
snippet 17_MINDMAP_17.9_Changing_style " Changing style"
	
snippet 1_SEQUENCE_DIAGRAM_1.7_Change_arrow_color " Change arrow color"
	You can change the color of individual arrows using the following notation:
	
	@startuml
	Bob -[#red]> Alice : hello
	Alice -[#0000FF]->Bob : ok
	@enduml
	
snippet 17_MINDMAP_17_MindMap " MINDMAP"
	
	17 MindMap
	MindMap diagram are still in beta: the syntax may change without notice.
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.1_OrgMode_syntax " OrgMode syntax"
	This syntax is compatible with OrgMode
	
	@startwbs
	* Business Process Modelling WBS
	** Launch the project
	*** Complete Stakeholder Research
	*** Initial Implementation Plan
	** Design phase
	*** Model of AsIs Processes Completed
	**** Model of AsIs Processes Completed1
	**** Model of AsIs Processes Completed2
	*** Measure AsIs performance metrics
	*** Identify Quick Wins
	** Complete innovate phase
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.2_Change_direction "Change direction"
	You can change direction using < and >
	
	@startwbs
	* Business Process Modelling WBS
	** Launch the project
	*** Complete Stakeholder Research
	*** Initial Implementation Plan
	** Design phase
	*** Model of AsIs Processes Completed
	****< Model of AsIs Processes Completed1
	****> Model of AsIs Processes Completed2
	***< Measure AsIs performance metrics
	***< Identify Quick Wins
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.3_Arithmetic_notation " Arithmetic notation"
	You can use the following notation to choose diagram side.
	
	@startwbs
	+ New Job
	++ Decide on Job Requirements
	+++ Identity gaps
	+++ Review JDs
	++++ Sign-Up for courses
	++++ Volunteer
	++++ Reading
	++- Checklist
	+++- Responsibilities
	+++- Location
	++ CV Upload Done
	+++ CV Updated
	++++ Spelling & Grammar
	++++ Check dates
	---- Skills
	+++ Recruitment sites chosen
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.1_Boxless_on_Arithmetic_notation " Boxless on Arithmetic notation"
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.2_Several_boxless_node " Several boxless node"
	
	@startwbs
	+ Project
	+ Part One
	+ Task 1.1
	- LeftTask 1.2
	+ Task 1.3
	+ Part Two
	+ Task 2.1
	+ Task 2.2
	-_ Task 2.2.1 To the left boxless
	-_ Task 2.2.2 To the Left boxless
	+_ Task 2.2.3 To the right boxless
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.3_All_boxless_node " All boxless node"
	
	@startwbs
	+_ Project
	+_ Part One
	+_ Task 1.1
	-_ LeftTask 1.2
	+_ Task 1.3
	+_ Part Two
	+_ Task 2.1
	+_ Task 2.2
	-_ Task 2.2.1 To the left boxless
	-_ Task 2.2.2 To the Left boxless
	+_ Task 2.2.3 To the right boxless
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.4_Boxless_on_OrgMode_syntax " Boxless on OrgMode syntax"
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.5_Several_boxless_node " Several boxless node"
	@startwbs
	* World
	** America
	***_ Canada
	***_ Mexico
	***_ USA
	** Europe
	***_ England
	***_ Germany
	***_ Spain
	@endwbs
	
	[Ref. QA-13297]
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4.6_All_boxless_node " All boxless node"
	
	@startwbs
	*_ World
	**_ America
	***_ Canada
	***_ Mexico
	***_ USA
	**_ Europe
	***_ England
	***_ Germany
	***_ Spain
	@endwbs
	
	[Ref. QA-13355]
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.4_Removing_box " Removing box"
	You can use underscore _ to remove box drawing.
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.5_Colors " Colors (with inline or style color)"
	It is possible to change node color:
	• with inline color
	
	@startwbs
	*[#SkyBlue] this is the partner workpackage
	**[#pink] this is my workpackage
	** this is another workpackage
	@endwbs
	
	@startwbs
	+[#SkyBlue] this is the partner workpackage
	++[#pink] this is my workpackage
	++ this is another workpackage
	@endwbs
	
	[Ref. QA-12374, only from v1.2020.20]
	• with style color
	
	@startwbs
	<style>
	wbsDiagram {
	        .pink {
	                BackgroundColor pink
	        }
	        .your_style_name {
	                BackgroundColor SkyBlue
	        }
	}
	</style>
	* this is the partner workpackage <<your_style_name>>
	** this is my workpackage <<pink>>
	** this is another workpackage
	@endwbs
	
	@startwbs
	<style>
	wbsDiagram {
	        .pink {
	                BackgroundColor pink
	        }
	        .your_style_name {
	                BackgroundColor SkyBlue
	        }
	}
	</style>
	+ this is the partner workpackage <<your_style_name>>
	++ this is my workpackage <<pink>>
	++ this is another workpackage
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.6_Using_style " Using style"
	It is possible to change diagram style.
	
	@startwbs
	<style>
	wbsDiagram {
	        // all lines (meaning connector and borders, there are no other lines in WBS) are black by default
	        Linecolor black
	        arrow {
	                // note that connector are actually "arrow" even if they don't look like as arrow
	                // This is to be consistent with other UML diagrams. Not 100% sure that it's a good idea
	                // So now connector are green
	                LineColor green
	        }
	        :depth(0) {
	                // will target root node
	                BackgroundColor White
	                RoundCorner 10
	                LineColor red
	                // Because we are targetting depth(0) for everything, border and connector for level 0 will be red
	        }
	        arrow {
	                :depth(2) {
	
	                        // Targetting only connector between Mexico-Chihuahua and USA-Texas
	                        LineColor blue
	                        LineStyle 4
	                        LineThickness .5
	
	                }
	
	        }
	        node {
	                :depth(2) {
	                        LineStyle 2
	                        LineThickness 2.5
	                }
	        }
	        boxless {
	                // will target boxless node with '_'
	                FontColor darkgreen
	        }
	
	}
	</style>
	* World
	** America
	*** Canada
	*** Mexico
	**** Chihuahua
	*** USA
	**** Texas
	***< New York
	** Europe
	***_ England
	***_ Germany
	***_ Spain
	@endwbs
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18.7_Word_Wrap " Word Wrap"
	Using MaximumWidth setting you can control automatic word wrap. Unit used is pixel.
	
	@startwbs
	
	<style>
	node {
	        Padding 12
	        Margin 3
	        HorizontalAlignment center
	        LineColor blue
	        LineThickness 3.0
	        BackgroundColor gold
	        RoundCorner 40
	        MaximumWidth 100
	}
	
	rootNode {
	        LineStyle 8.0;3.0
	        LineColor red
	        BackgroundColor white
	        LineThickness 1.0
	        RoundCorner 0
	        Shadowing 0.0
	}
	
	leafNode {
	        LineColor gold
	        RoundCorner 0
	        Padding 3
	}
	
	arrow {
	        LineStyle 4
	        LineThickness 0.5
	        LineColor green
	}
	</style>
	
	* Hi =)
	** sometimes i have node in wich i want to write a long text
	*** this results in really huge diagram
	**** of course, i can explicit split with a\nnew line
	**** but it could be cool if PlantUML was able to split long lines, maybe with an option who specify the maximum width of a node
	
	@endwbs
snippet 1_SEQUENCE_DIAGRAM_1.8_Message_sequence_numbering " Message sequence numbering"
	The keyword autonumber is used to automatically add number to messages.
	
	@startuml
	autonumber
	Bob -> Alice : Authentication Request
	Bob <- Alice : Authentication Response
	@enduml
	
	You can specify a startnumber with autonumber //start// , and also an increment with autonumber
	//start// //increment//.
	
	@startuml
	autonumber
	Bob -> Alice : Authentication Request
	
	Bob <- Alice : Authentication Response
	
	autonumber 15
	Bob -> Alice : Another authentication Request
	Bob <- Alice : Another authentication Response
	
	autonumber 40 10
	Bob -> Alice : Yet another authentication Request
	Bob <- Alice : Yet another authentication Response
	
	@enduml
	
	You can specify a format for your number by using between double-quote.
	The formatting is done with the Java class DecimalFormat (0 means digit, # means digit and zero if
	absent).
	You can use some html tag in the format.
	
	@startuml
	autonumber "<b>[000]"
	Bob -> Alice : Authentication Request
	Bob <- Alice : Authentication Response
	
	autonumber 15 "<b>(<u>##</u>)"
	Bob -> Alice : Another authentication Request
	Bob <- Alice : Another authentication Response
	
	autonumber 40 10 "<font color=red><b>Message 0 "
	Bob -> Alice : Yet another authentication Request
	Bob <- Alice : Yet another authentication Response
	
	@enduml
	
	You can also use autonumber stop and autonumber resume //increment// //format// to respec-
	tively pause and resume automatic numbering.
	
	@startuml
	autonumber 10 10 "<b>[000]"
	Bob -> Alice : Authentication Request
	Bob <- Alice : Authentication Response
	
	autonumber stop
	Bob -> Alice : dummy
	
	autonumber resume "<font color=red><b>Message 0 "
	Bob -> Alice : Yet another authentication Request
	Bob <- Alice : Yet another authentication Response
	
	autonumber stop
	Bob -> Alice : dummy
	
	autonumber resume 1 "<font color=blue><b>Message 0 "
	Bob -> Alice : Yet another authentication Request
	Bob <- Alice : Yet another authentication Response
	@enduml
	
snippet 18_WORK_BREAKDOWN_STRUCTURE_(WBS)_18_Work_Breakdown_Structure " WORK BREAKDOWN STRUCTURE (WBS)"
	
	18 Work Breakdown Structure (WBS)
	WBS diagram are still in beta: the syntax may change without notice.
	
snippet 19_Maths_19.1_Standalone_diagram " Standalone diagram"
	You can also use @startmath/@endmath to create standalone AsciiMath formula.
	
	@startmath
	f(t)=(a_0)/2 + sum_(n=1)^ooa_ncos((npit)/L)+sum_(n=1)^oo b_n\ sin((npit)/L)
	@endmath
	
	Or use @startlatex/@endlatex to create standalone JLaTeXMath formula.
	
	@startlatex
	\sum_{i=0}^{n-1} (a_i + b_i^2)
	@endlatex
	
snippet 19_Maths_19.2_How_is_this_working " How is this working?"
	To draw those formulas, PlantUML uses two open source projects:
	• AsciiMath that converts AsciiMath notation to LaTeX expression;
	• JLatexMath that displays mathematical formulas written in LaTeX. JLaTeXMath is the best Java
	library to display LaTeX code.
	ASCIIMathTeXImg.js is small enough to be integrated into PlantUML standard distribution.
	PlantUML relies on the Java Scripting API (specifically: new ScriptEngineManager().getEngineByName("JavaScript");)
	to load a JavaScript engine and execute JavaScript code. Java 8 includes a JavaScript engine called
	Nashorn but it was deprecated in Java 11.
	If you are using AsciiMath in Java 11 you see the following warnings:
	Warning: Nashorn engine is planned to be removed from a future JDK release
	Nashorn was removed in Java 15. Fortunately, you can use the GraalVM JavaScript Engine instead by
	adding the following dependencies:
	<dependency>
	<groupId>org.graalvm.js</groupId>
	<artifactId>js</artifactId>
	<version>20.2.0</version>
	</dependency>
	<dependency>
	<groupId>org.graalvm.js</groupId>
	<artifactId>js-scriptengine</artifactId>
	<version>20.2.0</version>
	</dependency>
	You can even use the GraalVM JavaScript Engine in Java 11 to get rid of the warning messages.
	Since JLatexMath is bigger, you have to download it separately, then unzip the 4 jar files (batik-all-1.7.jar,
	jlatexmath-minimal-1.0.3.jar, jlm_cyrillic.jar and jlm_greek.jar) in the same folder as PlantUML.jar.﻿
	
snippet 19_Maths_19_Maths " Maths"
	You can use AsciiMath or JLaTeXMath notation within PlantUML:
	
	@startuml
	:<math>int_0^1f(x)dx</math>;
	:<math>x^2+y_1+z_12^34</math>;
	note right
	        Try also
	        <math>d/dxf(x)=lim_(h->0)(f(x+h)-f(x))/h</math>
	        <latex>P(y|\mathbf{x}) \mbox{ or } f(\mathbf{x})+\epsilon</latex>
	end note
	@enduml
	
	or:
	
	@startuml
	Bob -> Alice : Can you solve: <math>ax^2+bx+c=0</math>
	Alice --> Bob: <math>x = (-b+-sqrt(b^2-4ac))/(2a)</math>
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1.9_Page_Title,_Header_and_Footer " Page Title, Header and Footer"
	The title keyword is used to add a title to the page.
	
	Pages can display headers and footers using header and footer.
	
	@startuml
	
	header Page Header
	footer Page %page% of %lastpage%
	
	title Example Title
	
	Alice -> Bob : message 1
	Alice -> Bob : message 2
	
	@enduml
	
snippet 1_SEQUENCE_DIAGRAM_1_Sequence_Diagram " SEQUENCE DIAGRAM"
	
	1 Sequence Diagram
	
snippet 20_ENTITY_RELATIONSHIP_DIAGRAM_20.1_Information_Engineering_Relations " Information Engineering Relations"
	Type Symbol
	Zero or One |o--
	Exactly One ||--
	Zero or Many }o--
	One or Many }|--
	Examples:
	
	@startuml
	Entity01 }|..|| Entity02
	Entity03 }o..o| Entity04
	Entity05 ||--o{ Entity06
	Entity07 |o--|| Entity08
	@enduml
	
snippet 20_ENTITY_RELATIONSHIP_DIAGRAM_20.2_Entities " Entities"
	
	@startuml
	entity Entity01 {
	        * identifying_attribute
	        --
	        * mandatory_attribute
	        optional_attribute
	}
	@enduml
	
	Again, this is the normal class diagram syntax (aside from use of entity instead of class). Anything
	that you can do in a class diagram can be done here.
	The * visibility modifier can be used to identify mandatory attributes. A space can be used after the
	modifier character to avoid conflicts with the creole bold:
	
	@startuml
	entity Entity01 {
	        optional attribute
	        **optional bold attribute**
	        * **mandatory bold attribute**
	}
	@enduml
	
snippet 20_ENTITY_RELATIONSHIP_DIAGRAM_20.3_Complete_Example " Complete Example"
	
	@startuml
	
	' hide the spot
	hide circle
	
	' avoid problems with angled crows feet
	skinparam linetype ortho
	
	entity "Entity01" as e01 {
	        *e1_id : number <<generated>>
	        --
	        *name : text
	        description : text
	}
	
	entity "Entity02" as e02 {
	        *e2_id : number <<generated>>
	        --
	        *e1_id : number <<FK>>
	        other_details : text
	}
	
	entity "Entity03" as e03 {
	        *e3_id : number <<generated>>
	        --
	        e1_id : number <<FK>>
	        other_details : text
	}
	
	e01 ||..o{ e02
	e01 |o..o{ e03
	
	@enduml
	
	Currently the crows feet do not look very good when the relationship is drawn at an angle to the entity.
	This can be avoided by using the linetype ortho skinparam.
	
	
snippet 20_ENTITY_RELATIONSHIP_DIAGRAM_20_Entity_Relationship_Diagram " ENTITY RELATIONSHIP DIAGRAM"
	
	20 Entity Relationship Diagram
	Based on the Information Engineering notation.
	This is an extension to the existing Class Diagram. This extension adds:
	• Additional relations for the Information Engineering notation.
	• An entity alias that maps to the class diagram class.
	• An additional visibility modifier * to identify mandatory attributes.
	Otherwise, the syntax for drawing diagrams is the same as for class diagrams. All other features of class
	diagrams are also supported.
	
snippet 2_USE_CASE_DIAGRAM_2.10_Changing_arrows_direction " Changing arrows direction"
	By default, links between classes have two dashes -- and are vertically oriented. It is possible to use
	horizontal link by putting a single dash (or dot) like this:
	
	@startuml
	:user: --> (Use case 1)
	:user: -> (Use case 2)
	@enduml
	
	You can also change directions by reversing the link:
	
	@startuml
	(Use case 1) <.. :user:
	(Use case 2) <- :user:
	@enduml
	
	It is also possible to change arrow direction by adding left, right, up or down keywords inside the arrow:
	
	@startuml
	:user: -left-> (dummyLeft)
	:user: -right-> (dummyRight)
	:user: -up-> (dummyUp)
	:user: -down-> (dummyDown)
	@enduml
	
	You can shorten the arrow by using only the first character of the direction (for example, -d- instead of
	-down-) or the two first characters (-do-).
	Please note that you should not abuse this functionality : Graphviz gives usually good results without
	tweaking.
	And with the left to right direction parameter:
	
	@startuml
	left to right direction
	:user: -left-> (dummyLeft)
	:user: -right-> (dummyRight)
	:user: -up-> (dummyUp)
	:user: -down-> (dummyDown)
	@enduml
	
snippet 21_COMMON_COMMANDS_21.1_Comments " Comments"
	Everything that starts with simple quote ' is a comment.
	You can also put comments on several lines using /' to start and '/ to end.
	
snippet 2_USE_CASE_DIAGRAM_2.11_Splitting_diagrams " Splitting diagrams"
	The newpage keywords to split your diagram into several pages or images.
	
	@startuml
	:actor1: --> (Usecase1)
	newpage
	:actor2: --> (Usecase2)
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.12_Left_to_right_direction " Left to right direction"
	The general default behavior when building diagram is top to bottom.
	
	@startuml
	'default
	top to bottom direction
	user1 --> (Usecase 1)
	user2 --> (Usecase 2)
	
	@enduml
	
	You may change to left to right using the left to right direction command. The result is often
	better with this direction.
	
	@startuml
	
	left to right direction
	user1 --> (Usecase 1)
	user2 --> (Usecase 2)
	
	@enduml
	
snippet 21_COMMON_COMMANDS_21.2_Zoom " Zoom"
	You can use the scale command to zoom the generated image.
	You can use either a number or a fraction to define the scale factor. You can also specify either width
	or height (in pixel). And you can also give both width and height : the image is scaled to fit inside the
	specified dimension.
	• scale 1.5
	• scale 2/3
	• scale 200 width
	• scale 200 height
	• scale 200*100
	• scale max 300*200
	• scale max 1024 width
	• scale max 800 height
	
	@startuml
	scale 180*90
	Bob->Alice : hello
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.13_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command :
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	You can define specific color and fonts for stereotyped actors and usecases.
	
	@startuml
	skinparam handwritten true
	
	skinparam usecase {
	        BackgroundColor DarkSeaGreen
	        BorderColor DarkSlateGray
	
	        BackgroundColor<< Main >> YellowGreen
	        BorderColor<< Main >> YellowGreen
	
	        ArrowColor Olive
	        ActorBorderColor black
	        ActorFontName Courier
	
	        ActorBackgroundColor<< Human >> Gold
	}
	
	User << Human >>
	:Main Database: as MySql << Application >>
	(Start) << One Shot >>
	(Use the application) as (Use) << Main >>
	
	User -> (Start)
	User --> (Use)
	
	MySql --> (Use)
	
	@enduml
	
snippet 21_COMMON_COMMANDS_21.3_Title " Title"
	The title keywords is used to put a title. You can add newline using in the title description.
	Some skinparam settings are available to put borders on the title.
	
	@startuml
	skinparam titleBorderRoundCorner 15
	skinparam titleBorderThickness 2
	skinparam titleBorderColor red
	skinparam titleBackgroundColor Aqua-CadetBlue
	
	title Simple communication\nexample
	
	Alice -> Bob: Authentication Request
	Bob --> Alice: Authentication Response
	
	@enduml
	
	You can use creole formatting in the title.
	You can also define title on several lines using title and end title keywords.
	
	@startuml
	
	title
	        <u>Simple</u> communication example
	        on <i>several</i> lines and using <back:cadetblue>creole tags</back>
	end title
	
	Alice -> Bob: Authentication Request
	Bob -> Alice: Authentication Response
	
	@enduml
	
snippet 21_COMMON_COMMANDS_21.4_Caption " Caption"
	There is also a caption keyword to put a caption under the diagram.
	
	@startuml
	
	caption figure 1
	Alice -> Bob: Hello
	
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.14_Complete_example " Complete example"
	
	@startuml
	left to right direction
	skinparam packageStyle rectangle
	actor customer
	actor clerk
	rectangle checkout {
	        customer -- (checkout)
	        (checkout) .> (payment) : include
	        (help) .> (checkout) : extends
	        (checkout) -- clerk
	}
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.15.1_Business_Usecase " Business Usecase"
	
	@startuml
	
	(First usecase)/
	(Another usecase)/ as (UC2)
	usecase/ UC3
	usecase/ (Last\nusecase) as UC4
	
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.15.2_Business_Actor " Business Actor"
	
	@startuml
	
	:First Actor:/
	:Another\nactor:/ as Man2
	actor/ Woman3
	actor/ :Last actor: as Person1
	
	@enduml
	
	[Ref. QA-12179]
	
snippet 2_USE_CASE_DIAGRAM_2.15_Business_Use_Case " Business Use Case"
	You can add / to make Business Use Case.
	
snippet 21_COMMON_COMMANDS_21.5_Footer_and_header " Footer and header"
	You can use the commands header or footer to add a footer or a header on any generated diagram.
	You can optionally specify if you want a center, left or right footer/header, by adding a keyword.
	As with title, it is possible to define a header or a footer on several lines.
	It is also possible to put some HTML into the header or footer.
	
	@startuml
	Alice -> Bob: Authentication Request
	
	header
	        <font color=red>Warning:</font>
	        Do not use in production.
	endheader
	
	center footer Generated for demonstration
	
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.16_Change_arrow_color_and_style " Change arrow color and style (inline style)"
	You can change the color or style of individual arrows using the inline following notation:
	• #color;line.[bold|dashed|dotted];text:color
	
	@startuml
	actor foo
	foo --> (bar) : normal
	foo --> (bar1) #line:red;line.bold;text:red : red bold
	foo --> (bar2) #green;line.dashed;text:green : green dashed
	foo --> (bar3) #blue;line.dotted;text:blue : blue dotted
	@enduml
	
	[Ref. QA-3770 and QA-3816] [See similar feature on deployment-diagram or class diagram]
	
snippet 21_COMMON_COMMANDS_21.6_Legend_the_diagram " Legend the diagram"
	The legend and end legend are keywords is used to put a legend.
	You can optionally specify to have left, right, top, bottom or center alignment for the legend.
	
	@startuml
	Alice -> Bob : Hello
	legend right
	        Short
	        legend
	        endlegend
	        @enduml
	
	        @startuml
	        Alice -> Bob : Hello
	        legend top left
	                Short
	                legend
	                endlegend
	
	                @enduml
	
snippet 21_COMMON_COMMANDS_21.7.10_State " State"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        [*] --> State1
	        State1 -> State2
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.11_Timing " Timing"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        robust "Web Browser" as WB
	        concise "Web User" as WU
	
	        @0
	        WU is Idle
	        WB is Idle
	
	        @100
	        WU is Waiting
	        WB is Processing
	
	        @300
	        WB is Waiting
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.12_Work_Breakdown_Structure " Work Breakdown Structure (WBS)"
	
	@startwbs
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        * r
	        ** d1
	        ** d2
	
	        @endwbs
	
	        TODO: DONE [Corrected on V1.2020.17]
	
snippet 21_COMMON_COMMANDS_21.7.13_Wireframe " Wireframe (SALT)"
	
	@startsalt
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        {+
	
	        Login | "MyName "
	        Password | "**** "
	        [Cancel] | [ OK ]
	
	}
	@endsalt
	
	TODO: DONE [Corrected on V1.2020.18]
	
snippet 21_COMMON_COMMANDS_21.7.1_Activity " Activity"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        start
	        :Hello world;
	        :This is defined on
	        several **lines**;
	        stop
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.2_Archimate " Archimate"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        archimate #Technology "VPN Server" as vpnServerA <<technology-device>>
	
	        rectangle GO #lightgreen
	        rectangle STOP #red
	        rectangle WAIT #orange
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.3_Class " Class"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        a -- b
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.4_Component_Deployment_Use-Case " Component, Deployment, Use-Case"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        node n
	        (u) -> [c]
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.5_Gantt_project_planning " Gantt project planning"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	
	        end legend
	
	        [t] lasts 5 days
	
	        @enduml
	
	        TODO: DONE [(Header, footer) corrected on V1.2020.18]
	
snippet 21_COMMON_COMMANDS_21.7.6_Object " Object"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        object user {
	                name = "Dummy"
	                id = 123
	        }
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.7_MindMap " MindMap"
	
	@startmindmap
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        * r
	        ** d1
	        ** d2
	
	        @endmindmap
	
snippet 21_COMMON_COMMANDS_21.7.8_Network " Network (nwdiag)"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        nwdiag {
	                network inet {
	                        web01 [shape = cloud]
	                }
	        }
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7.9_Sequence " Sequence"
	
	@startuml
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        a->b
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.7_Appendix_Examples_on_all_diagram " Appendix: Examples on all diagram"
	
snippet 2_USE_CASE_DIAGRAM_2.17_Change_element_color_and_style " Change element color and style (inline style)"
	You can change the color or style of individual element using the following notation:
	• #[color|back:color];line:color;line.[bold|dashed|dotted];text:color
	
	@startuml
	actor a
	actor b #pink;line:red;line.bold;text:red
	usecase c #palegreen;line:green;line.dashed;text:green
	usecase d #aliceblue;line:blue;line.dotted;text:blue
	@enduml
	
	[Ref. QA-5340 and adapted from QA-6852]
snippet 21_COMMON_COMMANDS_21.8.10_State " State"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        [*] --> State1
	        State1 -> State2
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.11_Timing " Timing"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        robust "Web Browser" as WB
	        concise "Web User" as WU
	
	        @0
	        WU is Idle
	        WB is Idle
	
	        @100
	        WU is Waiting
	        WB is Processing
	
	        @300
	        WB is Waiting
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.12_Work_Breakdown_Structure " Work Breakdown Structure (WBS)"
	
	@startwbs
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        * r
	        ** d1
	        ** d2
	
	        @endwbs
	
snippet 21_COMMON_COMMANDS_21.8.13_Wireframe " Wireframe (SALT)"
	TODO: FIXME Fix all (title, caption, legend, header, footer) for salt. TODO: FIXME
	
	@startsalt
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	@startsalt
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        {+
	
	        Login | "MyName "
	        Password | "**** "
	        [Cancel] | [ OK ]
	
	}
	@endsalt
	
snippet 21_COMMON_COMMANDS_21.8.1_Activity " Activity"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        start
	        :Hello world;
	        :This is defined on
	        several **lines**;
	        stop
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.2_Archimate " Archimate"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        archimate #Technology "VPN Server" as vpnServerA <<technology-device>>
	
	        rectangle GO #lightgreen
	        rectangle STOP #red
	        rectangle WAIT #orange
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.3_Class " Class"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        a -- b
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.4_Component_Deployment_Use-Case " Component, Deployment, Use-Case"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        node n
	        (u) -> [c]
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.5_Gantt_project_planning " Gantt project planning"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        [t] lasts 5 days
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.6_Object " Object"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        object user {
	                name = "Dummy"
	                id = 123
	        }
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.7_MindMap " MindMap"
	
	@startmindmap
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        * r
	        ** d1
	        ** d2
	
	        @endmindmap
	
snippet 21_COMMON_COMMANDS_21.8.8_Network " Network (nwdiag)"
	
	@startuml
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        nwdiag {
	                network inet {
	                        web01 [shape = cloud]
	                }
	        }
	
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8.9_Sequence " Sequence"
	
	@startuml
	<style>
	title {
	
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	        FontColor red
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	header some header
	
	footer some footer
	
	title My title
	
	caption This is caption
	
	legend
	        The legend
	        end legend
	
	        a->b
	        @enduml
	
snippet 21_COMMON_COMMANDS_21.8_Appendix_Examples_on_all_diagram_with_style " Appendix: Examples on all diagram with style"
	
	TODO: DONE
	FYI:
	• all is only good for Sequence diagram
	• title, caption and legend are good for all diagrams except for salt diagram
	TODO: FIXME ￿
	• Now (test on 1.2020.18-19) header, footer are not good for all other diagrams except only for
	Sequence diagram.
	To be fix; Thanks
	TODO: FIXME
	Here are tests of title, header, footer, caption or legend on all the diagram with the debug style:
	<style>
	title {
	        HorizontalAlignment right
	        FontSize 24
	        FontColor blue
	}
	
	header {
	        HorizontalAlignment center
	        FontSize 26
	        FontColor purple
	}
	
	footer {
	        HorizontalAlignment left
	        FontSize 28
	
	        FontColor red
	
	}
	
	legend {
	        FontSize 30
	        BackGroundColor yellow
	        Margin 30
	        Padding 50
	}
	
	caption {
	        FontSize 32
	}
	</style>
	
snippet 21_COMMON_COMMANDS_21_Common_commands " COMMON COMMANDS"
	
	21 Common commands
	
snippet 2_USE_CASE_DIAGRAM_2.1_Usecases " Usecases"
	Use cases are enclosed using between parentheses (because two parentheses looks like an oval).
	You can also use the usecase keyword to define a usecase. And you can define an alias, using the as
	keyword. This alias will be used later, when defining relations.
	
	@startuml
	
	(First usecase)
	(Another usecase) as (UC2)
	usecase UC3
	usecase (Last\nusecase) as UC4
	
	@enduml
	
snippet 22_CREOLE_22.10Special_characters " Special characters"
	It’s possible to use any unicode character, either directly or with syntax &#XXX or <U+XXXX>:
	
	@startuml
	usecase direct as "this is ∞ long"
	usecase ampHash as "this is also &#8734; long"
	usecase angleBrackets as "this is also <U+221E> long"
	@enduml
	
snippet 22_CREOLE_22.11OpenIconic " OpenIconic"
	OpenIconic is a very nice open-source icon set. Those icons are integrated in the creole parser, so you
	can use them out-of-the-box.
	Use the following syntax: <&ICON_NAME>.
	
	@startuml
	title: <size:20><&heart>Use of OpenIconic<&heart></size>
	class Wifi
	note left
	        Click on <&wifi>
	end note
	@enduml
	
	The complete list is available at the OpenIconic Website, or you can use the following special command
	to list them:
	
	@startuml
	listopeniconic
	@enduml
	
snippet 22_CREOLE_22.12.10State " State"
	N/A (or on note or common commands)
	
snippet 22_CREOLE_22.12.1_Activity " Activity"
	
	@startuml
	start
	:**test list 1**
	* Bullet list
	* Second item
	** Sub item
	*** Sub sub item
	* Third item
	----
	**test list 2**
	# Numbered list
	# Second item
	## Sub item
	## Another sub item
	# Third item;
	stop
	@enduml
	
snippet 22_CREOLE_22.12.2_Class " Class"
	TODO: FIXME ￿
	• Sub item
	• Sub sub item
	TODO: FIXME
	
	@startuml
	
	class a {
	        **test list 1**
	        * Bullet list
	        * Second item
	        ** Sub item
	        *** Sub sub item
	        * Third item
	        ----
	        **test list 2**
	        # Numbered list
	        # Second item
	        ## Sub item
	        ## Another sub item
	        # Third item
	}
	
	a -- b
	
	@enduml
	
snippet 22_CREOLE_22.12.3_Component_Deployment_Use-Case " Component, Deployment, Use-Case"
	
	@startuml
	node n [
	**test list 1**
	* Bullet list
	* Second item
	** Sub item
	*** Sub sub item
	* Third item
	----
	**test list 2**
	# Numbered list
	# Second item
	## Sub item
	## Another sub item
	# Third item
	]
	
	file f as "
	**test list 1**
	* Bullet list
	* Second item
	** Sub item
	*** Sub sub item
	* Third item
	----
	**test list 2**
	# Numbered list
	# Second item
	## Sub item
	## Another sub item
	# Third item
	"
	@enduml
	
	TODO: DONE [Corrected in V1.2020.18]
	
snippet 22_CREOLE_22.12.4_Gantt_project_planning " Gantt project planning"
	N/A
	
snippet 22_CREOLE_22.12.5_Object " Object"
	TODO: FIXME ￿
	• Sub item
	• Sub sub item
	TODO: FIXME
	
	@startuml
	object user {
	        **test list 1**
	        * Bullet list
	        * Second item
	        ** Sub item
	        *** Sub sub item
	        * Third item
	        ----
	        **test list 2**
	        # Numbered list
	        # Second item
	        ## Sub item
	        ## Another sub item
	        # Third item
	}
	
	@enduml
	
snippet 22_CREOLE_22.12.6_MindMap " MindMap"
	
	@startmindmap
	
	* root
	** d1
	**:**test list 1**
	* Bullet list
	* Second item
	** Sub item
	*** Sub sub item
	* Third item
	----
	**test list 2**
	# Numbered list
	# Second item
	## Sub item
	## Another sub item
	# Third item;
	
	@endmindmap
	
snippet 22_CREOLE_22.12.7_Network " Network (nwdiag)"
	N/A
	
snippet 22_CREOLE_22.12.8_Note " Note"
	
	@startuml
	note as n
	**test list 1**
	* Bullet list
	* Second item
	** Sub item
	*** Sub sub item
	* Third item
	----
	**test list 2**
	# Numbered list
	# Second item
	## Sub item
	## Another sub item
	# Third item
	end note
	@enduml
	
snippet 22_CREOLE_22.12.9_Sequence " Sequence"
	N/A (or on note or common commands)
	
snippet 22_CREOLE_22.12Appendix_Examples_of_Creole_List_on_all_diagrams " Appendix: Examples of ”Creole List” on all diagrams"
	
snippet 22_CREOLE_22.13.10State " State"
	N/A (or on note or common commands)
	
snippet 22_CREOLE_22.13.1_Activity " Activity"
	TODO: FIXME ￿ strong line ____ TODO: FIXME
	
	@startuml
	start
	:You can have horizontal line
	----
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	Or dotted title
	//and title... //
	==Title==
	Or double-line title
	--Another title--
	Or single-line title
	Enjoy!;
	stop
	@enduml
	
snippet 22_CREOLE_22.13.2_Class " Class"
	
	@startuml
	
	class a {
	        You can have horizontal line
	        ----
	        Or double line
	        ====
	        Or strong line
	        ____
	        Or dotted line
	        ..My title..
	        Or dotted title
	        //and title... //
	        ==Title==
	        Or double-line title
	        --Another title--
	        Or single-line title
	        Enjoy!
	}
	
	a -- b
	
	@enduml
	
snippet 22_CREOLE_22.13.3_Component,_Deployment,_Use-Case " Component, Deployment, Use-Case"
	
	@startuml
	node n [
	You can have horizontal line
	----
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	//and title... //
	==Title==
	--Another title--
	Enjoy!
	]
	
	file f as "
	You can have horizontal line
	----
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	//and title... //
	==Title==
	--Another title--
	Enjoy!
	"
	@enduml
	
snippet 22_CREOLE_22.13.4_Gantt_project_planning " Gantt project planning"
	N/A
	
snippet 22_CREOLE_22.13.5_Object " Object"
	
	@startuml
	object user {
	        You can have horizontal line
	        ----
	        Or double line
	        ====
	        Or strong line
	        ____
	        Or dotted line
	        ..My title..
	        //and title... //
	        ==Title==
	        --Another title--
	        Enjoy!
	}
	
	@enduml
	
	TODO: DONE [Corrected on V1.2020.18]
	
snippet 22_CREOLE_22.13.6_MindMap " MindMap"
	TODO: FIXME ￿ strong line ____ TODO: FIXME
	
	@startmindmap
	
	* root
	** d1
	**:You can have horizontal line
	----
	
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	//and title... //
	==Title==
	--Another title--
	Enjoy!;
	
	@endmindmap
	
snippet 22_CREOLE_22.13.7_Network " Network (nwdiag)"
	N/A
	
snippet 22_CREOLE_22.13.8_Note " Note"
	
	@startuml
	note as n
	You can have horizontal line
	----
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	//and title... //
	==Title==
	--Another title--
	Enjoy!
	end note
	@enduml
	
snippet 22_CREOLE_22.13.9_Sequence " Sequence"
	N/A (or on note or common commands)
	
snippet 22_CREOLE_22.13Appendix_Examples_of_Creole_horizontal_lines_on_all_diagrams " Appendix: Examples of ”Creole horizontal lines” on all diagrams"
	
snippet 22_CREOLE_22.14Style_equivalent " Style equivalent (between Creole and HTML)"
	Style Creole Legacy HTML like
	bold This is **bold** This is <b>bold</b>
	italics This is //italics// This is <i>italics</i>
	monospaced This is ""monospaced"" This is <font:monospaced>monospaced</font>
	stroked This is --stroked-- This is <s>stroked</s>
	underlined This is __underlined__ This is <u>underlined</u>
	waved This is ~~~ This is <w>waved</w>
	
	@startmindmap
	* Style equivalent\n(between Creole and HTML)
	**:**Creole**
	----
	<#silver>|= code|= output|
	| \n This is ""~**bold**""\n | \n This is **bold** |
	| \n This is ""~//italics//""\n | \n This is //italics// |
	| \n This is ""~""monospaced~"" ""\n | \n This is ""monospaced"" |
	| \n This is ""~--stroked--""\n | \n This is --stroked-- |
	| \n This is ""~__underlined__""\n | \n This is __underlined__ |
	| \n This is ""<U+007E><U+007E>waved<U+007E><U+007E>""\n | \n This is ~~waved~~ |;
	**:<b>Legacy HTML like
	----
	<#silver>|= code|= output|
	| \n This is ""~<b>bold</b>""\n | \n This is <b>bold</b> |
	| \n This is ""~<i>italics</i>""\n | \n This is <i>italics</i> |
	| \n This is ""~<font:monospaced>monospaced</font>""\n | \n This is <font:monospaced>monospaced</font> |
	| \n This is ""~<s>stroked</s>""\n | \n This is <s>stroked</s> |
	| \n This is ""~<u>underlined</u>""\n | \n This is <u>underlined</u> |
	| \n This is ""~<w>waved</w>""\n | \n This is <w>waved</w> |
	
	And color as a bonus...
	<#silver>|= code|= output|
	| \n This is ""~<s:""<color:green>""green""</color>"">stroked</s>""\n | \n This is <s:green>stroked</s> |
	| \n This is ""~<u:""<color:red>""red""</color>"">underlined</u>""\n | \n This is <u:red>underlined</u> |
	| \n This is ""~<w:""<color:#0000FF>""#0000FF""</color>"">waved</w>""\n | \n This is <w:#0000FF>waved</w> |;
	@endmindmap
	
snippet 22_CREOLE_22.1_Emphasized_text " Emphasized text"
	
	@startuml
	Alice -> Bob : hello --there-- here
	... Some ~~long delay~~ ...
	Bob -> Alice : ok
	note left
	        This is **bold**
	        This is //italics//
	        This is ""monospaced""
	        This is --stricken-out--
	        This is __underlined__
	        This is ~~wave-underlined~~
	end note
	@enduml
	
snippet 22_CREOLE_22.2_Lists " Lists"
	You can use numbered and bulleted lists in node text, notes, etc.
	TODO: FIXME ￿ You cannot quite mix numbers and bullets in a list and its sublist.
	
	@startuml
	object demo {
	        * Bullet list
	        * Second item
	}
	note left
	        * Bullet list
	        * Second item
	        ** Sub item
	end note
	
	legend
	        # Numbered list
	        # Second item
	
	        ## Sub item
	        ## Another sub item
	        * Can't quite mix
	        * Numbers and bullets
	        # Third item
	        end legend
	        @enduml
	
snippet 22_CREOLE_22.3_Escape_character " Escape character"
	You can use the tilde ~ to escape special creole characters.
	
	@startuml
	object demo {
	        This is not ~___underscored__.
	        This is not ~""monospaced"".
	}
	@enduml
	
snippet 22_CREOLE_22.4_Horizontal_lines " Horizontal lines"
	
	@startuml
	database DB1 as "
	You can have horizontal line
	----
	Or double line
	====
	Or strong line
	____
	Or dotted line
	..My title..
	Enjoy!
	"
	note right
	        This is working also in notes
	        You can also add title in all these lines
	        ==Title==
	        --Another title--
	end note
	
	@enduml
	
snippet 22_CREOLE_22.5_Headings " Headings"
	
	@startuml
	usecase UC1 as "
	= Extra-large heading
	Some text
	== Large heading
	Other text
	=== Medium heading
	Information
	....
	==== Small heading"
	@enduml
	
snippet 22_CREOLE_22.6_Legacy_HTML " Legacy HTML"
	You can mix Creole with the following HTML tags:
	• <b> for bold text
	• <u> or <u:#AAAAAA> or <u:[[color|colorName]]> for underline
	• <i> for italic
	• <s> or <s:#AAAAAA> or <s:[[color|colorName]]> for strike text
	• <w> or <w:#AAAAAA> or <w:[[color|colorName]]> for wave underline text
	• <color:#AAAAAA> or <color:[[color|colorName]]>
	• <back:#AAAAAA> or <back:[[color|colorName]]> for background color
	• <size:nn> to change font size
	• <img:file> : the file must be accessible by the filesystem
	• <img:http://plantuml.com/logo3.png> : the URL must be available from the Internet
	
	@startuml
	:* You can change <color:red>text color</color>
	* You can change <back:cadetblue>background color</back>
	* You can change <size:18>size</size>
	* You use <u>legacy</u> <b>HTML <i>tag</i></b>
	* You use <u:red>color</u> <s:green>in HTML</s> <w:#0000FF>tag</w>
	----
	* Use image : <img:http://plantuml.com/logo3.png>
	;
	@enduml
	
snippet 22_CREOLE_22.7_Code " Code"
	You can use <code> to display some programming code in your diagram (sorry, syntax highlighting is
	not yet supported).
	
	@startuml
	Alice -> Bob : hello
	note right
	        <code>
	        main() {
	                printf("Hello world");
	        }
	        </code>
	end note
	@enduml
	
	This is especially useful to illustrate some PlantUML code and the resulting rendering:
	
	@startuml
	Alice -> Bob : hello
	note left
	        <code>
	        This is **bold**
	        This is //italics//
	        This is ""monospaced""
	        This is --stricken-out--
	        This is __underlined__
	        This is ~~wave-underlined~~
	
	        --test Unicode and icons--
	        This is <U+221E> long
	        This is a <&code> icon
	        </code>
	end note
	note right
	        This is **bold**
	        This is //italics//
	        This is ""monospaced""
	        This is --stricken-out--
	        This is __underlined__
	        This is ~~wave-underlined~~
	        --test Unicode and icons--
	        This is <U+221E> long
	        This is a <&code> icon
	end note
	@enduml
	
snippet 22_CREOLE_22.8.1_Create_a_table " Create a table"
	It is possible to build table, with | separator.
	
	@startuml
	skinparam titleFontSize 14
	title
	        Example of simple table
	        |= |= table |= header |
	        | a | table | row |
	        | b | table | row |
	end title
	[*] --> State1
	@enduml
	
snippet 22_CREOLE_22.8.2_Add_color_on_rows_or_cells " Add color on rows or cells"
	You can specify background colors of rows and cells:
	
	@startuml
	start
	:Here is the result
	|= |= table |= header |
	| a | table | row |
	|<#FF8080> red |<#80FF80> green |<#8080FF> blue |
	<#yellow>| b | table | row |;
	@enduml
	
snippet 22_CREOLE_22.8.3_Add_color_on_border_and_text " Add color on border and text"
	You can also specify colors of text and borders.
	
	@startuml
	title
	        <#lightblue,#red>|= Step |= Date |= Name |= Status |= Link |
	        <#lightgreen>| 1.1 | TBD | plantuml news |<#Navy><color:OrangeRed><b> Unknown | [[https://plantuml.com/news plantuml news]] |
	end title
	@enduml
	
	[Ref. QA-7184]
	
snippet 22_CREOLE_22.8.4_No_border_or_same_color_as_the_background " No border or same color as the background"
	You can also set the border color to the same color as the background.
	
	@startuml
	node n
	note right of n
	        <#FBFB77,#FBFB77>|= Husky / Yorkie |= Foo |
	        | SourceTree1 | foo1 |
	        | ST2 | foo2 |
	end note
	@enduml
	
	[Ref. QA-12448]
	
snippet 22_CREOLE_22.8.5_Bold_header_or_not " Bold header or not"
	= as the first char of a cell indicates whether to make it bold (usually used for headers), or not.
	
	@startuml
	note as deepCSS0
	|<#white> Husky / Yorkie |
	|=<#gainsboro> SourceTree0 |
	endnote
	
	note as deepCSS1
	|= <#white> Husky / Yorkie |= Foo |
	|<#gainsboro><r> SourceTree1 | foo1 |
	endnote
	
	note as deepCSS2
	|= Husky / Yorkie |
	|<#gainsboro> SourceTree2 |
	endnote
	
	note as deepCSS3
	<#white>|= Husky / Yorkie |= Foo |
	|<#gainsboro> SourceTree1 | foo1 |
	endnote
	@enduml
	
	[Ref. QA-10923]
	
snippet 22_CREOLE_22.8_Table " Table"
	
snippet 22_CREOLE_22.9_Tree " Tree"
	You can use |_ characters to build a tree.
	On common commands, like title:
	
	@startuml
	skinparam titleFontSize 14
	title
	        Example of Tree
	        |_ First line
	        |_ **Bom (Model)**
	        |_ prop1
	        |_ prop2
	        |_ prop3
	        |_ Last line
	end title
	[*] --> State1
	@enduml
	
	On Class diagram.
	(Please note how we have to use an empty second compartment, else the parentheses in (Model) cause
	that text to be moved to a separate first compartment):
	
	@startuml
	class Foo {
	        **Bar (Model)**
	        |_ prop
	        |_ **Bom (Model)**
	        |_ prop2
	        |_ prop3
	        |_ prop3.1
	        |_ prop4 :(
	        --
	}
	@enduml
	
	[Ref. QA-3448]
	On Component or Deployement diagrams:
	
	@startuml
	[A] as A
	rectangle "Box B" {
	        component B [
	        Level 1
	        |_ Level 2a
	        |_ Level 3a
	        |_ Level 3b
	        |_ Level 3c
	        |_ Level 4a
	        |_ Level 3d
	        |_ Level 2b
	        |_ Level 3e
	
	        ]
	
	}
	A -> B
	@enduml
	
	[Ref. QA-11365]
	
snippet 2_USE_CASE_DIAGRAM_2.2_Actors " Actors"
	The name defining an actor is enclosed between colons.
	You can also use the actor keyword to define an actor. An alias can be assigned using the as keyword
	and can be used later instead of the actor’s name, e. g. when defining relations.
	You can see from the following examples, that the actor definitions are optional.
	
	@startuml
	
	:First Actor:
	:Another\nactor: as Man2
	actor Woman3
	actor :Last actor: as Person1
	
	@enduml
	
snippet 22_CREOLE_22_Creole " CREOLE"
	
	22 Creole
	Creole is a lightweight common markup language for various wikis. A light-weight Creole engine is
	integrated in PlantUML to have a standardized way to emit styled text.
	All diagrams support this syntax.
	Note that compatibility with HTML syntax is preserved.
	
snippet 23_DEFINING_AND_USING_SPRITES_23.1_Changing_colors " Changing colors"
	Although sprites are monochrome, it’s possible to change their color.
	
	@startuml
	sprite $foo1 {
	        FFFFFFFFFFFFFFF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        FFFFFFFFFFFFFFF
	}
	Alice -> Bob : Testing <$foo1,scale=3.4,color=orange>
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.3.1_Stick_man " Stick man (by default)"
	
	@startuml
	:User: --> (Use)
	"Main Admin" as Admin
	"Use the application" as (Use)
	Admin --> (Admin the application)
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.3.2_Awesome_man " Awesome man"
	
	@startuml
	skinparam actorStyle awesome
	:User: --> (Use)
	"Main Admin" as Admin
	"Use the application" as (Use)
	Admin --> (Admin the application)
	@enduml
	
	[Ref. QA-10493]
	
snippet 23_DEFINING_AND_USING_SPRITES_23.2_Encoding_Sprite " Encoding Sprite"
	To encode sprite, you can use the command line like:
	java -jar plantuml.jar -encodesprite 16z foo.png
	where foo.png is the image file you want to use (it will be converted to gray automatically).
	After -encodesprite, you have to specify a format: 4, 8, 16, 4z, 8z or 16z.
	The number indicates the gray level and the optional z is used to enable compression in sprite definition.
	
snippet 2_USE_CASE_DIAGRAM_2.3.3_Hollow_man " Hollow man"
	
	@startuml
	skinparam actorStyle Hollow
	:User: --> (Use)
	"Main Admin" as Admin
	"Use the application" as (Use)
	Admin --> (Admin the application)
	@enduml
	
	[Ref. PR#396]
	
snippet 23_DEFINING_AND_USING_SPRITES_23.3_Importing_Sprite " Importing Sprite"
	You can also launch the GUI to generate a sprite from an existing image.
	Click in the menubar then on File/Open Sprite Window.
	After copying an image into you clipboard, several possible definitions of the corresponding sprite will be
	displayed : you will just have to pickup the one you want.
	
snippet 23_DEFINING_AND_USING_SPRITES_23.4_Examples " Examples"
	
	@startuml
	sprite $printer [15x15/8z] NOtH3W0W208HxFz_kMAhj7lHWpa1XC716sz0Pq4MVPEWfBHIuxP3L6kbTcizR8tAhzaqFvXwvFfPEqm0
	start
	:click on <$printer> to print the page;
	@enduml
	
	@startuml
	sprite $bug [15x15/16z] PKzR2i0m2BFMi15p__FEjQEqB1z27aeqCqixa8S4OT7C53cKpsHpaYPDJY_12MHM-BLRyywPhrrlw3qumqNThmXgd1TOterAZmOW8sgiJafogofWRwtV3nCF
	sprite $printer [15x15/8z] NOtH3W0W208HxFz_kMAhj7lHWpa1XC716sz0Pq4MVPEWfBHIuxP3L6kbTcizR8tAhzaqFvXwvFfPEqm0
	sprite $disk {
	        444445566677881
	        436000000009991
	        43600000000ACA1
	        53700000001A7A1
	        53700000012B8A1
	        53800000123B8A1
	        63800001233C9A1
	        634999AABBC99B1
	        744566778899AB1
	        7456AAAAA99AAB1
	        8566AFC228AABB1
	        8567AC8118BBBB1
	        867BD4433BBBBB1
	        39AAAAABBBBBBC1
	}
	
	title Use of sprites (<$printer>, <$bug>...)
	
	class Example {
	        Can have some bug : <$bug>
	        Click on <$disk> to save
	}
	
	note left : The printer <$printer> is available
	
	@enduml
	
snippet 23_DEFINING_AND_USING_SPRITES_23.5_StdLib " StdLib"
	The PlantUML StdLib includes a number of ready icons in various IT areas such as architecture, cloud
	services, logos etc. It including AWS, Azure, Kubernetes, C4, product Logos and many others. To explore
	these libraries:
	• Browse the Github folders of PlantUML StdLib
	• Browse the source repos of StdLib collections that interest you. Eg if you are interested in logos
	you can find that it came from gilbarbara-plantuml-sprites, and quickly find its
	sprites-list. (The next section shows how to list selected sprites but unfortunately that’s in grayscale
	whereas this custom listing is in color.)
	• Study the in-depth Hitchhiker’s Guide to PlantUML, eg sections Standard Library Sprites and
	PlantUML Stdlib Overview
	
snippet 23_DEFINING_AND_USING_SPRITES_23.6_Listing_Sprites " Listing Sprites"
	You can use the listsprites command to show available sprites:
	• Used on its own, it just shows ArchiMate sprites
	• If you include some sprite libraries in your diagram, the command shows all these sprites, as
	explained in View all the icons with listsprites.
	(Example from Hitchhikers Guide to PlantUML)
	
	@startuml
	
	!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
	!include osaPuml/Common.puml
	!include osaPuml/User/all.puml
	
	listsprites
	@enduml
	
	Most collections have files called all that allow you to see a whole sub-collection at once. Else you
	need to find the sprites that interest you and include them one by one. Unfortunately, the version of
	a collection included in StdLib often does not have such all files, so as you see above we include the
	collection from github, not from StdLib.
	All sprites are in grayscale, but most collections define specific macros that include appropriate (vendor-
	specific) colors.
snippet 2_USE_CASE_DIAGRAM_2.3_Change_Actor_style " Change Actor style"
	You can change the actor style from stick man (by default) to:
	• an awesome man with the skinparam actorStyle awesome command;
	• a hollow man with the skinparam actorStyle hollow command.
	
snippet 23_DEFINING_AND_USING_SPRITES_23_Defining_and_using_sprites " DEFINING AND USING SPRITES"
	
	23 Defining and using sprites
	A Sprite is a small graphic element that can be used in diagrams.
	In PlantUML, sprites are monochrome and can have either 4, 8 or 16 gray level.
	To define a sprite, you have to use a hexadecimal digit between 0 and F per pixel.
	Then you can use the sprite using <$XXX> where XXX is the name of the sprite.
	
	@startuml
	sprite $foo1 {
	        FFFFFFFFFFFFFFF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        FFFFFFFFFFFFFFF
	}
	Alice -> Bob : Testing <$foo1>
	@enduml
	
	You can scale the sprite.
	
	@startuml
	sprite $foo1 {
	        FFFFFFFFFFFFFFF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        F0123456789ABCF
	        FFFFFFFFFFFFFFF
	}
	Alice -> Bob : Testing <$foo1{scale=3}>
	@enduml
	
snippet 24_SKINPARAM_COMMAND_24.10List_of_all_skinparam_parameters " List of all skinparam parameters"
	Since the documentation is not always up to date, you can have the complete list of parameters using
	this command:
	java -jar plantuml.jar -language
	Or you can generate a ”diagram” with a list of all the skinparam parameters using help skinparams.
	That will give you the following result, from this page (code of this command):
	• CommandHelpSkinparam.java
	
	@startuml
	
	help skinparams
	@enduml
	
	You can also view each skinparam parameters with its results displayed at the page All Skin Parameters
	of Ashley's PlantUML Doc:
	• https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html.
snippet 24_SKINPARAM_COMMAND_24.1_Usage " Usage"
	You can use this command :
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	
snippet 24_SKINPARAM_COMMAND_24.2_Nested " Nested"
	To avoid repetition, it is possible to nest definition. So the following definition :
	skinparam xxxxParam1 value1
	skinparam xxxxParam2 value2
	skinparam xxxxParam3 value3
	skinparam xxxxParam4 value4
	is strictly equivalent to:
	skinparam xxxx {
	        Param1 value1
	        Param2 value2
	        Param3 value3
	        Param4 value4
	}
	
snippet 24_SKINPARAM_COMMAND_24.3_Black_and_White " Black and White"
	You can force the use of a black&white output using skinparam monochrome true command.
	
	@startuml
	
	skinparam monochrome true
	
	actor User
	participant "First Class" as A
	participant "Second Class" as B
	participant "Last Class" as C
	
	User -> A: DoWork
	activate A
	
	        A -> B: Create Request
	        activate B
	
	                B -> C: DoWork
	                activate C
	                        C --> B: WorkDone
	                        destroy C
	
	                        B --> A: Request Created
	                deactivate B
	
	                A --> User: Done
	        deactivate A
	
	@enduml
	
snippet 24_SKINPARAM_COMMAND_24.4_Shadowing " Shadowing"
	You can disable the shadowing using the skinparam shadowing false command.
	
	@startuml
	
	left to right direction
	
	skinparam shadowing<<no_shadow>> false
	skinparam shadowing<<with_shadow>> true
	
	actor User
	(Glowing use case) <<with_shadow>> as guc
	(Flat use case) <<no_shadow>> as fuc
	User -- guc
	User -- fuc
	
	@enduml
	
snippet 24_SKINPARAM_COMMAND_24.5_Reverse_colors " Reverse colors"
	You can force the use of a black&white output using skinparam monochrome reverse command. This
	can be useful for black background environment.
	
	@startuml
	
	skinparam monochrome reverse
	
	actor User
	participant "First Class" as A
	participant "Second Class" as B
	participant "Last Class" as C
	
	User -> A: DoWork
	activate A
	
	        A -> B: Create Request
	        activate B
	
	                B -> C: DoWork
	                activate C
	                        C --> B: WorkDone
	                        destroy C
	
	                        B --> A: Request Created
	                deactivate B
	
	                A --> User: Done
	        deactivate A
	
	        @enduml
	
snippet 24_SKINPARAM_COMMAND_24.6_Colors " Colors"
	You can use either standard color name or RGB code.
	
	@startuml
	colors
	@enduml
	
	transparent can only be used for background of the image.
	
snippet 24_SKINPARAM_COMMAND_24.7_Font_color_name_and_size " Font color, name and size"
	You can change the font for the drawing using xxxFontColor, xxxFontSizeand xxxFontNameparameters.
	Example:
	skinparam classFontColor red
	skinparam classFontSize 10
	skinparam classFontName Aapex
	You can also change the default font for all fonts using skinparam defaultFontName.
	Example:
	skinparam defaultFontName Aapex
	Please note the fontname is highly system dependent, so do not over use it, if you look for portability.
	Helvetica and Courier should be available on all system.
	A lot of parameters are available. You can list them using the following command:
	java -jar plantuml.jar -language
	
snippet 24_SKINPARAM_COMMAND_24.8_Text_Alignment " Text Alignment"
	Text alignment can be set up to left, rightor center. You can also use directionor reverseDirection
	values for sequenceMessageAlign which align text depending on arrow direction.
	Param name Default value Comment
	sequenceMessageAlign left Used for messages in sequence diagrams
	sequenceReferenceAlign center Used for ref over in sequence diagrams
	
	@startuml
	skinparam sequenceMessageAlign center
	Alice -> Bob : Hi
	Alice -> Bob : This is very long
	@enduml
	
snippet 24_SKINPARAM_COMMAND_24.9_Examples " Examples"
	
	@startuml
	skinparam backgroundColor #EEEBDC
	skinparam handwritten true
	
	skinparam sequence {
	        ArrowColor DeepSkyBlue
	        ActorBorderColor DeepSkyBlue
	        LifeLineBorderColor blue
	        LifeLineBackgroundColor #A9DCDF
	
	        ParticipantBorderColor DeepSkyBlue
	        ParticipantBackgroundColor DodgerBlue
	        ParticipantFontName Impact
	        ParticipantFontSize 17
	        ParticipantFontColor #A9DCDF
	
	        ActorBackgroundColor aqua
	        ActorFontColor DeepSkyBlue
	        ActorFontSize 17
	        ActorFontName Aapex
	}
	
	actor User
	participant "First Class" as A
	participant "Second Class" as B
	participant "Last Class" as C
	
	User -> A: DoWork
	activate A
	
	        A -> B: Create Request
	        activate B
	
	                B -> C: DoWork
	                activate C
	                        C --> B: WorkDone
	                        destroy C
	
	                        B --> A: Request Created
	                deactivate B
	
	                A --> User: Done
	        deactivate A
	        @enduml
	
	        @startuml
	        skinparam handwritten true
	
	        skinparam actor {
	                BorderColor black
	                FontName Courier
	                BackgroundColor<< Human >> Gold
	}
	
	        skinparam usecase {
	                BackgroundColor DarkSeaGreen
	                BorderColor DarkSlateGray
	
	                BackgroundColor<< Main >> YellowGreen
	                BorderColor<< Main >> YellowGreen
	
	                ArrowColor Olive
	        }
	
	        User << Human >>
	        :Main Database: as MySql << Application >>
	        (Start) << One Shot >>
	        (Use the application) as (Use) << Main >>
	
	        User -> (Start)
	        User --> (Use)
	
	        MySql --> (Use)
	        @enduml
	
	        @startuml
	        skinparam roundcorner 20
	        skinparam class {
	                BackgroundColor PaleGreen
	                ArrowColor SeaGreen
	                BorderColor SpringGreen
	        }
	        skinparam stereotypeCBackgroundColor YellowGreen
	
	        Class01 "1" *-- "many" Class02 : contains
	
	        Class03 o-- Class04 : aggregation
	        @enduml
	
	        @startuml
	        skinparam interface {
	                backgroundColor RosyBrown
	                borderColor orange
	        }
	
	        skinparam component {
	                FontSize 13
	                BackgroundColor<<Apache>> LightCoral
	                BorderColor<<Apache>> #FF6655
	                FontName Courier
	                BorderColor black
	                BackgroundColor gold
	                ArrowFontName Impact
	                ArrowColor #FF6655
	                ArrowFontColor #777777
	        }
	
	        () "Data Access" as DA
	        [Web Server] << Apache >>
	
	        DA - [First Component]
	
	        [First Component] ..> () HTTP : use
	        HTTP - [Web Server]
	        @enduml
	
	        @startuml
	        [AA] <<static lib>>
	        [BB] <<shared lib>>
	        [CC] <<static lib>>
	
	        node node1
	        node node2 <<shared node>>
	        database Production
	
	        skinparam component {
	                backgroundColor<<static lib>> DarkKhaki
	                backgroundColor<<shared lib>> Green
	        }
	
	        skinparam node {
	                borderColor Green
	                backgroundColor Yellow
	                backgroundColor<<shared node>> Magenta
	        }
	        skinparam databaseBackgroundColor Aqua
	        @enduml
	
snippet 24_SKINPARAM_COMMAND_24_Skinparam_command " SKINPARAM COMMAND"
	
	24 Skinparam command
	You can change colors and font of the drawing using the skinparam command.
	Example:
	skinparam backgroundColor transparent
	
snippet 2_USE_CASE_DIAGRAM_2.4_Usecases_description " Usecases description"
	If you want to have a description spanning several lines, you can use quotes.
	You can also use the following separators:
	• -- (dashes)
	• .. (periods)
	• == (equals)
	• __ (underscores)
	By using them pairwise and enclosing text between them, you can created separators with titles.
	
	@startuml
	
	usecase UC1 as "You can use
	several lines to define your usecase.
	You can also use separators.
	--
	Several separators are possible.
	==
	And you can add titles:
	..Conclusion..
	This allows large description."
	
	@enduml
	
snippet 25_PREPROCESSING_25.10Keywords_arguments " Keywords arguments"
	Like in Python, you can use keywords arguments :
	
	@startuml
	
	!unquoted procedure $element($alias, $description="", $label="", $technology="", $size=12, $colour="green")
	rectangle $alias as "
	
	<color:$colour><<$alias>></color>
	==$label==
	//<size:$size>[$technology]</size>//
	
	$description"
	!endprocedure
	
	$element(myalias, "This description is %newline()on several lines", $size=10, $technology="Java")
	@enduml
	
snippet 25_PREPROCESSING_25.11Including_files_or_URL " Including files or URL [!include, !include_many, !include_once]"
	Use the !include directive to include file in your diagram. Using URL, you can also include file from
	Internet/Intranet.
	Imagine you have the very same class that appears in many diagrams. Instead of duplicating the descrip-
	tion of this class, you can define a file that contains the description.
	
	@startuml
	
	interface List
	List : int size()
	List : void clear()
	List <|.. ArrayList
	@enduml
	
	File List.iuml
	interface List
	List : int size()
	List : void clear()
	The file List.iuml can be included in many diagrams, and any modification in this file will change all
	diagrams that include it.
	You can also put several @startuml/@enduml text block in an included file and then specify which block
	you want to include adding !0 where 0 is the block number. The !0 notation denotes the first diagram.
	For example, if you use !include foo.txt!1, the second @startuml/@enduml block within foo.txt will
	be included.
	You can also put an id to some @startuml/@endumltext block in an included file using @startuml(id=MY_OWN_ID)
	syntax and then include the block adding !MY_OWN_ID when including the file, so using something like
	!include foo.txt!MY_OWN_ID.
	
	By default, a file can only be included once. You can use !include_many instead of !include if you
	want to include some file several times. Note that there is also a !include_once directive that raises an
	error if a file is included several times.
	
snippet 25_PREPROCESSING_25.12Including_Subpart " Including Subpart [!startsub, !endsub, !includesub]"
	You can also use !startsub NAME and !endsub to indicate sections of text to include from other files
	using !includesub. For example:
	file1.puml:
	
	@startuml
	
	A -> A : stuff1
	!startsub BASIC
	B -> B : stuff2
	!endsub
	C -> C : stuff3
	!startsub BASIC
	D -> D : stuff4
	!endsub
	@enduml
	
	file1.puml would be rendered exactly as if it were:
	
	@startuml
	
	A -> A : stuff1
	B -> B : stuff2
	C -> C : stuff3
	D -> D : stuff4
	@enduml
	
	However, this would also allow you to have another file2.puml like this:
	file2.puml
	
	@startuml
	
	title this contains only B and D
	!includesub file1.puml!BASIC
	@enduml
	
	This file would be rendered exactly as if:
	
	@startuml
	
	title this contains only B and D
	B -> B : stuff2
	D -> D : stuff4
	@enduml
	
snippet 25_PREPROCESSING_25.13Builtin_functions " Builtin functions [%]"
	Some functions are defined by default. Their name starts by %
	
	Name Description Example Return
	%date Retrieve current date. You can provide an optional format for the date %date("yyyy.MM.dd' at 'HH:mm") current date
	%dirpath Retrieve current dirpath %dirpath() current path
	%false Return always false %false() false
	%file_exists Check if a file exists on the local filesystem %file_exists("c:/foo/dummy.txt") true if the file exists
	%filename Retrieve current filename %filename() current filename
	%function_exists Check if a function exists %function_exists("$some_function") true if the function has been defined
	%get_variable_value Retrieve some variable value %get_variable_value("$my_variable") the value of the variable
	%getenv Retrieve environment variable value %getenv("OS") the value of OS variable
	%intval Convert a String to Int %intval("42") 42
	%lower Return a lowercase string %lower("Hello") hello in that example
	%newline Return a newline %newline() a newline
	%not Return the logical negation of an expression %not(2+2==4) false in that example
	%set_variable_value Set a global variable %set_variable_value("$my_variable", "some_value") an empty string
	%string Convert an expression to String %string(1 + 2) 3 in the example
	%strlen Calculate the length of a String %strlen("foo") 3 in the example
	%strpos Search a substring in a string %strpos("abcdef", "ef") 4 (position of ef)
	%substr Extract a substring. Takes 2 or 3 arguments %substr("abcdef", 3, 2) "de" in the example
	%true Return always true %true() true
	%upper Return an uppercase string %upper("Hello") HELLO in that example
	%variable_exists Check if a variable exists %variable_exists("$my_variable") true if the variable has been defined exists
	%version Return PlantUML current version %version() 1.2020.08 for example
	
snippet 25_PREPROCESSING_25.14Logging " Logging [!log]"
	You can use !log to add some log output when generating the diagram. This has no impact at all on
	the diagram itself. However, those logs are printed in the command line’s output stream. This could be
	useful for debug purpose.
	
	@startuml
	!function bold($text)
	!$result = "<b>"+ $text +"</b>"
	!log Calling bold function with $text. The result is $result
	!return $result
	!endfunction
	
	Alice -> Bob : This is bold("bold")
	Alice -> Bob : This is bold("a second call")
	@enduml
	
snippet 25_PREPROCESSING_25.15Memory_dump " Memory dump [!memory_dump]"
	You can use !memory_dump to dump the full content of the memory when generating the diagram. An
	optional string can be put after !memory_dump. This has no impact at all on the diagram itself. This
	could be useful for debug purpose.
	
	@startuml
	!function $inc($string)
	!$val = %intval($string)
	!log value is $val
	
	!dump_memory
	!return $val+1
	!endfunction
	
	Alice -> Bob : 4 $inc("3")
	!unused = "foo"
	!dump_memory EOF
	@enduml
	
snippet 25_PREPROCESSING_25.16Assertion " Assertion [!assert]"
	You can put assertions in your diagram.
	
	@startuml
	Alice -> Bob : Hello
	!assert %strpos("abcdef", "cd")==3 : "This always fails"
	@enduml
	
snippet 25_PREPROCESSING_25.17Building_custom_library " Building custom library [!import, !include]"
	It’s possible to package a set of included files into a single .zip or .jar archive. This single zip/jar can
	then be imported into your diagram using !import directive.
	Once the library has been imported, you can !include file from this single zip/jar.
	Example:
	
	@startuml
	
	!import /path/to/customLibrary.zip
	' This just adds "customLibrary.zip" in the search path
	
	!include myFolder/myFile.iuml
	
	' Assuming that myFolder/myFile.iuml is located somewhere
	' either inside "customLibrary.zip" or on the local filesystem
	
	...
	
snippet 25_PREPROCESSING_25.18Search_path " Search path"
	You can specify the java property plantuml.include.path in the command line.
	For example:
	java -Dplantuml.include.path="c:/mydir" -jar plantuml.jar atest1.txt
	Note the this -D option has to put before the -jar option. -D options after the -jar option will be used to
	define constants within plantuml preprocessor.
	
snippet 25_PREPROCESSING_25.19Argument_concatenation " Argument concatenation [##]"
	It is possible to append text to a macro argument using the ## syntax.
	
	@startuml
	!unquoted procedure COMP_TEXTGENCOMP(name)
	[name] << Comp >>
	interface Ifc << IfcType >> AS name##Ifc
	name##Ifc - [name]
	!endprocedure
	COMP_TEXTGENCOMP(dummy)
	@enduml
	
snippet 25_PREPROCESSING_25.1_Migration_notes " Migration notes"
	The current preprocessor is an update from some legacy preprocessor.
	Even if some legacy features are still supported with the actual preprocessor, you should not use them
	any more (they might be removed in some long term future).
	• You should not use !define and !definelong anymore. Use !function, !procedure or variable
	definition instead.
	– !define should be replaced by return !function
	– !definelong should be replaced by !procedure.
	• !include now allows multiple inclusions : you don’t have to use !include_many anymore
	• !include now accepts a URL, so you don’t need !includeurl
	• Some features (like %date%) have been replaced by builtin functions (for example %date())
	• When calling a legacy !definelong macro with no arguments, you do have to use parenthesis.
	You have to use my_own_definelong() because my_own_definelong without parenthesis is not
	recognized by the new preprocessor.
	Please contact us if you have any issues.
	
snippet 25_PREPROCESSING_25.20Dynamic_invocation " Dynamic invocation [%invoke_procedure(), %call_user_func()]"
	You can dynamically invoke a procedure using the special %invoke_procedure() procedure. This pro-
	cedure takes as first argument the name of the actual procedure to be called. The optional following
	arguments are copied to the called procedure.
	For example, you can have:
	
	@startuml
	!procedure $go()
	Bob -> Alice : hello
	!endprocedure
	
	!$wrapper = "$go"
	
	%invoke_procedure($wrapper)
	@enduml
	
	@startuml
	!procedure $go($txt)
	Bob -> Alice : $txt
	
	!endprocedure
	
	%invoke_procedure("$go", "hello from Bob...")
	@enduml
	
	For return functions, you can use the corresponding special function %call_user_func() :
	
	@startuml
	!function bold($text)
	!return "<b>"+ $text +"</b>"
	!endfunction
	
	Alice -> Bob : %call_user_func("bold", "Hello") there
	@enduml
	
snippet 25_PREPROCESSING_25.21Evaluation_of_addition_depending_of_data_types " Evaluation of addition depending of data types [+]"
	Evaluation of $a + $b depending of type of $a or $b
	
	@startuml
	title
	        <#LightBlue>|= |= $a |= $b |= <U+0025>string($a + $b)|
	        <#LightGray>| type | str | str | str (concatenation) |
	        | example |= "a" |= "b" |= %string("a" + "b") |
	        <#LightGray>| type | str | int | str (concatenation) |
	        | ex.|= "a" |= 2 |= %string("a" + 2) |
	        <#LightGray>| type | str | int | str (concatenation) |
	        | ex.|= 1 |= "b" |= %string(1 + "b") |
	        <#LightGray>| type | bool | str | str (concatenation) |
	        | ex.|= <U+0025>true() |= "b" |= %string(%true() + "b") |
	        <#LightGray>| type | str | bool | str (concatenation) |
	        | ex.|= "a" |= <U+0025>false() |= %string("a" + %false()) |
	        <#LightGray>| type | int | int | int (addition of int) |
	        | ex.|= 1 |= 2 |= %string(1 + 2) |
	        <#LightGray>| type | bool | int | int (addition) |
	        | ex.|= <U+0025>true() |= 2 |= %string(%true() + 2) |
	        <#LightGray>| type | int | bool | int (addition) |
	        | ex.|= 1 |= <U+0025>false() |= %string(1 + %false()) |
	        <#LightGray>| type | int | int | int (addition) |
	        | ex.|= 1 |= <U+0025>intval("2") |= %string(1 + %intval("2")) |
	end title
	@enduml
	
snippet 25_PREPROCESSING_25.22Preprocessing_JSON " Preprocessing JSON"
	You can extend the functionality of the current Preprocessing with JSON Preprocessing features:
	• JSON Variable definition
	• Access to JSON data
	• Loop over JSON array
	(See more details on Preprocessing-JSON page)
snippet 25_PREPROCESSING_25.2_Variable_definition " Variable definition"
	Although this is not mandatory, we highly suggest that variable names start with a $.
	There are two types of data:
	• Integer number (int);
	• String (str) - these must be surrounded by single quote or double quote.
	Variables created outside function are global, that is you can access them from everywhere (including
	from functions). You can emphasize this by using the optional global keyword when defining a variable.
	
	@startuml
	!$ab = "foo1"
	!$cd = "foo2"
	!$ef = $ab + $cd
	
	Alice -> Bob : $ab
	Alice -> Bob : $cd
	Alice -> Bob : $ef
	@enduml
	
snippet 25_PREPROCESSING_25.3.1_Boolean_represention " Boolean represention [0 is false]"
	There is not real boolean type, but PlantUML use this integer convention:
	• Integer 0 means false
	• and any non-null number (as 1) or any string (as "1", or even "0") means true.
	[Ref. QA-9702]
	
snippet 25_PREPROCESSING_25.3.2_Boolean_operation_and_operator " Boolean operation and operator [&&, ||, ()]"
	You can use boolean expression, in the test, with :
	• parenthesis ();
	• and operator &&;
	• or operator ||.
	(See next example, within if test.)
	
snippet 25_PREPROCESSING_25.3.3_Boolean_builtin_functions " Boolean builtin functions [%false(), %true(), %not(<exp>)]"
	For convenience, you can use those boolean builtin functions:
	• %false()
	• %true()
	• %not(<exp>)
	[See also Builtin functions]
	
snippet 25_PREPROCESSING_25.3_Boolean_expression " Boolean expression"
	
snippet 25_PREPROCESSING_25.4_Conditions " Conditions [!if, !else, !elseif, !endif]"
	• You can use expression in condition.
	• else and elseif are also implemented
	
	@startuml
	!$a = 10
	!$ijk = "foo"
	Alice -> Bob : A
	!if ($ijk == "foo") && ($a+10>=4)
	Alice -> Bob : yes
	!else
	Alice -> Bob : This should not appear
	!endif
	Alice -> Bob : B
	@enduml
	
snippet 25_PREPROCESSING_25.5_While_loop " While loop [!while, !endwhile]"
	You can use !while and !endwhile keywords to have repeat loops.
	
	@startuml
	!procedure $foo($arg)
	:procedure start;
	!while $arg!=0
	!$i=3
	#palegreen:arg=$arg;
	!while $i!=0
	:arg=$arg and i=$i;
	!$i = $i - 1
	!endwhile
	!$arg = $arg - 1
	!endwhile
	:procedure end;
	!endprocedure
	
	start
	$foo(2)
	end
	@enduml
	
	[Adapted from QA-10838]
	@startmindmap
	!procedure $foo($arg)
	!while $arg!=0
	!$i=3
	**[#palegreen] arg = $arg;
	!while $i!=0
	*** i = $i;
	!$i = $i - 1
	!endwhile
	!$arg = $arg - 1
	!endwhile
	!endprocedure
	
	*:While
	Loop;
	$foo(2)
	@endmindmap
	
snippet 25_PREPROCESSING_25.6_Procedure " Procedure [!procedure, !endprocedure]"
	• Procedure names should start with a $
	• Argument names should start with a $
	• Procedures can call other procedures
	Example:
	
	@startuml
	!procedure $msg($source, $destination)
	$source --> $destination
	!endprocedure
	
	!procedure $init_class($name)
	class $name {
	        $addCommonMethod()
	}
	!endprocedure
	
	!procedure $addCommonMethod()
	toString()
	hashCode()
	
	!endprocedure
	
	$init_class("foo1")
	$init_class("foo2")
	$msg("foo1", "foo2")
	@enduml
	
	Variables defined in procedures are local. It means that the variable is destroyed when the procedure
	ends.
	
snippet 25_PREPROCESSING_25.7_Return_function " Return function [!function, !endfunction]"
	A return function does not output any text. It just define a function that you can call:
	• directly in variable definition or in diagram text
	• from other return functions
	• from procedures
	• Function name should start with a $
	• Argument names should start with a $
	
	@startuml
	!function $double($a)
	!return $a + $a
	!endfunction
	
	Alice -> Bob : The double of 3 is $double(3)
	@enduml
	
	It is possible to shorten simple function definition in one line:
	
	@startuml
	!function $double($a) !return $a + $a
	
	Alice -> Bob : The double of 3 is $double(3)
	Alice -> Bob : $double("This work also for strings.")
	@enduml
	
	As in procedure (void function), variable are local by default (they are destroyed when the function is
	exited). However, you can access to global variables from function. However, you can use the local
	keyword to create a local variable if ever a global variable exists with the same name.
	
	@startuml
	!function $dummy()
	!local $ijk = "local"
	!return "Alice -> Bob : " + $ijk
	!endfunction
	
	!global $ijk = "foo"
	
	Alice -> Bob : $ijk
	$dummy()
	Alice -> Bob : $ijk
	@enduml
	
snippet 25_PREPROCESSING_25.8_Default_argument_value " Default argument value"
	In both procedure and return functions, you can define default values for arguments.
	
	@startuml
	!function $inc($value, $step=1)
	!return $value + $step
	!endfunction
	
	Alice -> Bob : Just one more $inc(3)
	Alice -> Bob : Add two to three : $inc(3, 2)
	@enduml
	
	Only arguments at the end of the parameter list can have default values.
	
	@startuml
	!procedure defaulttest($x, $y="DefaultY", $z="DefaultZ")
	note over Alice
	        x = $x
	        y = $y
	        z = $z
	end note
	!endprocedure
	
	defaulttest(1, 2, 3)
	defaulttest(1, 2)
	defaulttest(1)
	@enduml
	
snippet 25_PREPROCESSING_25.9_Unquoted_procedure_or_function " Unquoted procedure or function [!unquoted]"
	By default, you have to put quotes when you call a function or a procedure. It is possible to use the
	unquoted keyword to indicate that a function or a procedure does not require quotes for its arguments.
	
	@startuml
	!unquoted function id($text1, $text2="FOO") !return $text1 + $text2
	
	alice -> bob : id(aa)
	alice -> bob : id(ab,cd)
	@enduml
	
snippet 25_PREPROCESSING_25_Preprocessing " PREPROCESSING"
	
	25 Preprocessing
	Some preprocessing capabilities are included in PlantUML, and available for all diagrams.
	Those functionalities are very similar to the C language preprocessor, except that the special character
	# has been changed to the exclamation mark !.
	
snippet 2_USE_CASE_DIAGRAM_2.5_Use_package " Use package"
	You can use packages to group actors or use cases.
	
	@startuml
	left to right direction
	actor Guest as g
	package Professional {
	        actor Chef as c
	        actor "Food Critic" as fc
	}
	
	package Restaurant {
	        usecase "Eat Food" as UC1
	        usecase "Pay for Food" as UC2
	        usecase "Drink" as UC3
	        usecase "Review" as UC4
	}
	fc --> UC4
	g --> UC1
	g --> UC2
	g --> UC3
	@enduml
	
	You can use rectangle to change the display of the package.
	
	@startuml
	left to right direction
	actor "Food Critic" as fc
	rectangle Restaurant {
	        usecase "Eat Food" as UC1
	        usecase "Pay for Food" as UC2
	        usecase "Drink" as UC3
	}
	fc --> UC1
	fc --> UC2
	fc --> UC3
	@enduml
	
snippet 26_UNICODE_26.1_Examples " Examples"
	
	@startuml
	skinparam handwritten true
	skinparam backgroundColor #EEEBDC
	actor 使用者
	participant "頭等艙" as A
	participant "第二類" as B
	participant "最後一堂課" as 別的東西
	使用者 -> A: 完成這項工作
	activate A
	        A -> B: 創建請求
	        activate B
	                B -> 別的東西: 創建請求
	                activate 別的東西
	                        別的東西 --> B: 這項工作完成
	                        destroy 別的東西
	                        B --> A: 請求創建
	                deactivate B
	                A --> 使用者: 做完
	        deactivate A
	        @enduml
	
	        @startuml
	        (*) --> "膩平台"
	        --> === S1 ===
	        --> 鞠躬向公眾
	        --> === S2 ===
	        --> 這傢伙波武器
	        --> (*)
	
	        skinparam backgroundColor #AAFFFF
	        skinparam activityStartColor red
	        skinparam activityBarColor SaddleBrown
	        skinparam activityEndColor Silver
	        skinparam activityBackgroundColor Peru
	        skinparam activityBorderColor Peru
	        @enduml
	
	        @startuml
	
	        skinparam usecaseBackgroundColor DarkSeaGreen
	        skinparam usecaseArrowColor Olive
	        skinparam actorBorderColor black
	        skinparam usecaseBorderColor DarkSlateGray
	        使用者 << 人類 >>
	        "主數據庫" as 數據庫 << 應用程式 >>
	        (草創) << 一桿 >>
	        "主数据燕" as (贏余) << 基本的 >>
	        使用者 -> (草創)
	        使用者 --> (贏余)
	        數據庫 --> (贏余)
	        @enduml
	
	        @startuml
	        () ”Σ￿￿￿￿￿￿￿￿￿￿￿￿￿” as Σ￿￿￿￿￿￿￿
	        Σ￿￿￿￿￿￿￿ - [Π￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿]
	        [Π￿￿￿￿ ￿￿￿￿￿￿￿￿￿￿￿] ..> () Α￿￿￿￿ : Α￿￿￿￿ ￿￿ ￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿￿ ￿￿￿￿￿￿
	        @enduml
	
snippet 26_UNICODE_26.2_Charset " Charset"
	The default charset used when reading the text files containing the UML text description is system
	dependent.
	Normally, it should just be fine, but in some case, you may want to the use another charset. For example,
	with the command line:
	java -jar plantuml.jar -charset UTF-8 files.txt
	Or, with the ant task:
	<!-- Put images in c:/images directory -->
	<target name="main">
	<plantuml dir="./src" charset="UTF-8" />
	Depending of your Java installation, the following charset should be available: ISO-8859-1, UTF-8,
	UTF-16BE, UTF-16LE, UTF-16.
	
snippet 2_USE_CASE_DIAGRAM_2.6_Basic_example " Basic example"
	To link actors and use cases, the arrow --> is used.
	The more dashes - in the arrow, the longer the arrow. You can add a label on the arrow, by adding a :
	character in the arrow definition.
	In this example, you see that User has not been defined before, and is used as an actor.
	
	@startuml
	
	User -> (Start)
	User --> (Use the application) : A small label
	
	:Main Admin: ---> (Use the application) : This is\nyet another\nlabel
	
	@enduml
	
snippet 26_UNICODE_26_Unicode " UNICODE"
	
	26 Unicode
	The PlantUML language use letters to define actor, usecase and soon.
	But letters are not only A-Z latin characters, it could be any kind of letter from any language.
	
snippet 27_STANDARD_LIBRARY_27.10Google_Material_Icons " Google Material Icons [material]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/material
	• https://github.com/Templarian/MaterialDesign
	This library consists of a free Material style icons from Google and other artists.
	Use it by including the file that contains the sprite, eg: !include <material/ma_folder_move>. When
	imported, you can use the sprite as normally you would, using <$ma_sprite_name>. Notice that this
	library requires an ma_ prefix on sprites names, this is to avoid clash of names if multiple sprites have
	the same name on different libraries.
	You may also include the common.puml file, eg: !include <material/common>, which contains helper
	macros defined. With the common.pumlimported, you can use the MA_NAME_OF_SPRITE(parameters...)
	
	macro, note again the use of the prefix MA_.
	Example of usage:
	
	@startuml
	!include <material/common>
	' To import the sprite file you DON'T need to place a prefix!
	!include <material/folder_move>
	
	MA_FOLDER_MOVE(Red, 1, dir, rectangle, "A label")
	@enduml
	
	Notes:
	When mixing sprites macros with other elements you may get a syntax error if, for example, trying to
	add a rectangle along with classes. In those cases, add { and } after the macro to create the empty
	rectangle.
	Example of usage:
	
	@startuml
	!include <material/common>
	' To import the sprite file you DON'T need to place a prefix!
	!include <material/folder_move>
	
	MA_FOLDER_MOVE(Red, 1, dir, rectangle, "A label") {
	}
	
	class foo {
	        bar
	}
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.11Kubernetes " Kubernetes [kubernetes]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/kubernetes
	• https://github.com/michiel/plantuml-kubernetes-sprites
	
	@startuml
	!include <kubernetes/k8s-sprites-unlabeled-25pct>
	package "Infrastructure" {
	        component "<$master>\nmaster" as master
	        component "<$etcd>\netcd" as etcd
	        component "<$node>\nnode" as node
	}
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.12Logos " Logos [logos]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/logos
	• https://github.com/plantuml-stdlib/gilbarbara-plantuml-sprites
	This repository contains PlantUML sprites generated from Gil Barbara’s logos, which can easily be used
	in PlantUML diagrams for nice visual aid.
	
	@startuml
	!include <logos/flask.puml>
	!include <logos/kafka.puml>
	!include <logos/kotlin.puml>
	!include <logos/cassandra.puml>
	
	title Gil Barbara's logos example
	
	skinparam monochrome true
	
	rectangle "<$flask>\nwebapp" as webapp
	queue "<$kafka>" as kafka
	rectangle "<$kotlin>\ndaemon" as daemon
	database "<$cassandra>" as cassandra
	
	webapp -> kafka
	kafka -> daemon
	daemon --> cassandra
	@enduml
	
	@startuml
	scale 0.7
	!include <logos/apple-pay.puml>
	!include <logos/dinersclub.puml>
	!include <logos/discover.puml>
	!include <logos/google-pay.puml>
	!include <logos/jcb.puml>
	!include <logos/maestro.puml>
	!include <logos/mastercard.puml>
	!include <logos/paypal.puml>
	!include <logos/unionpay.puml>
	!include <logos/visaelectron.puml>
	!include <logos/visa.puml>
	' ...
	
	title Gil Barbara's logos example - **Payment Scheme**
	
	actor customer
	rectangle "<$apple-pay>" as ap
	rectangle "<$dinersclub>" as dc
	rectangle "<$discover>" as d
	rectangle "<$google-pay>" as gp
	rectangle "<$jcb>" as j
	rectangle "<$maestro>" as ma
	rectangle "<$mastercard>" as m
	rectangle "<$paypal>" as p
	rectangle "<$unionpay>" as up
	rectangle "<$visa>" as v
	rectangle "<$visaelectron>" as ve
	rectangle "..." as etc
	
	customer --> ap
	customer ---> dc
	customer --> d
	customer ---> gp
	customer --> j
	customer ---> ma
	customer --> m
	customer ---> p
	customer --> up
	customer ---> v
	customer --> ve
	customer ---> etc
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.13Oﬀice " Oﬀice [oﬀice]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/oﬀice
	• https://github.com/Roemer/plantuml-oﬀice
	There are sprites (*.puml) and colored png icons available. Be aware that the sprites are all only
	monochrome even if they have a color in their name (due to automatically generating the files). You can
	either color the sprites with the macro (see examples below) or directly use the fully colored pngs. See
	the following examples on how to use the sprites, the pngs and the macros.
	Example of usage:
	
	@startuml
	!include <tupadr3/common>
	
	!include <office/Servers/database_server>
	!include <office/Servers/application_server>
	!include <office/Concepts/firewall_orange>
	!include <office/Clouds/cloud_disaster_red>
	
	title Office Icons Example
	
	package "Sprites" {
	        OFF_DATABASE_SERVER(db,DB)
	        OFF_APPLICATION_SERVER(app,App-Server)
	        OFF_FIREWALL_ORANGE(fw,Firewall)
	        OFF_CLOUD_DISASTER_RED(cloud,Cloud)
	        db <-> app
	        app <--> fw
	        fw <.left.> cloud
	}
	@enduml
	
	@startuml
	!include <tupadr3/common>
	
	!include <office/servers/database_server>
	!include <office/servers/application_server>
	!include <office/Concepts/firewall_orange>
	!include <office/Clouds/cloud_disaster_red>
	
	' Used to center the label under the images
	skinparam defaultTextAlignment center
	
	title Extended Office Icons Example
	
	package "Use sprite directly" {
	        [Some <$cloud_disaster_red> object]
	}
	
	package "Different macro usages" {
	        OFF_CLOUD_DISASTER_RED(cloud1)
	        OFF_CLOUD_DISASTER_RED(cloud2,Default with text)
	        OFF_CLOUD_DISASTER_RED(cloud3,Other shape,Folder)
	        OFF_CLOUD_DISASTER_RED(cloud4,Even another shape,Database)
	        OFF_CLOUD_DISASTER_RED(cloud5,Colored,Rectangle, red)
	        OFF_CLOUD_DISASTER_RED(cloud6,Colored background) #red
	}
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.14Open_Security_Architecture " Open Security Architecture (OSA) [osa]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/osa
	• https://github.com/Crashedmind/PlantUML-opensecurityarchitecture-icons
	• https://www.opensecurityarchitecture.org
	
	@startuml
	'Adapted from https://github.com/Crashedmind/PlantUML-opensecurityarchitecture-icons/blob/master/all.puml
	scale .5
	!include <osa/arrow/green/left/left.puml>
	!include <osa/arrow/yellow/right/right.puml>
	!include <osa/awareness/awareness.puml>
	!include <osa/contract/contract.puml>
	!include <osa/database/database.puml>
	!include <osa/desktop/desktop.puml>
	!include <osa/desktop/imac/imac.puml>
	!include <osa/device_music/device_music.puml>
	!include <osa/device_scanner/device_scanner.puml>
	!include <osa/device_usb/device_usb.puml>
	!include <osa/device_wireless_router/device_wireless_router.puml>
	!include <osa/disposal/disposal.puml>
	!include <osa/drive_optical/drive_optical.puml>
	!include <osa/firewall/firewall.puml>
	!include <osa/hub/hub.puml>
	!include <osa/ics/drive/drive.puml>
	!include <osa/ics/plc/plc.puml>
	!include <osa/ics/thermometer/thermometer.puml>
	!include <osa/id/card/card.puml>
	!include <osa/laptop/laptop.puml>
	!include <osa/lifecycle/lifecycle.puml>
	!include <osa/lightning/lightning.puml>
	!include <osa/media_flash/media_flash.puml>
	!include <osa/media_optical/media_optical.puml>
	!include <osa/media_tape/media_tape.puml>
	!include <osa/mobile/pda/pda.puml>
	!include <osa/padlock/padlock.puml>
	!include <osa/printer/printer.puml>
	!include <osa/site_branch/site_branch.puml>
	!include <osa/site_factory/site_factory.puml>
	!include <osa/vpn/vpn.puml>
	!include <osa/wireless/network/network.puml>
	
	rectangle "OSA" {
	        rectangle "Left: <$left>"
	        rectangle "Right: <$right>"
	        rectangle "Awareness: <$awareness>"
	        rectangle "Contract: <$contract>"
	        rectangle "Database: <$database>"
	        rectangle "Desktop: <$desktop>"
	        rectangle "Imac: <$imac>"
	        rectangle "Device_music: <$device_music>"
	        rectangle "Device_scanner: <$device_scanner>"
	        rectangle "Device_usb: <$device_usb>"
	        rectangle "Device_wireless_router: <$device_wireless_router>"
	        rectangle "Disposal: <$disposal>"
	        rectangle "Drive_optical: <$drive_optical>"
	        rectangle "Firewall: <$firewall>"
	        rectangle "Hub: <$hub>"
	        rectangle "Drive: <$drive>"
	        rectangle "Plc: <$plc>"
	        rectangle "Thermometer: <$thermometer>"
	        rectangle "Card: <$card>"
	        rectangle "Laptop: <$laptop>"
	        rectangle "Lifecycle: <$lifecycle>"
	        rectangle "Lightning: <$lightning>"
	        rectangle "Media_flash: <$media_flash>"
	        rectangle "Media_optical: <$media_optical>"
	        rectangle "Media_tape: <$media_tape>"
	        rectangle "Pda: <$pda>"
	        rectangle "Padlock: <$padlock>"
	        rectangle "Printer: <$printer>"
	        rectangle "Site_branch: <$site_branch>"
	        rectangle "Site_factory: <$site_factory>"
	        rectangle "Vpn: <$vpn>"
	        rectangle "Network: <$network>"
	}
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.15Tupadr3_library " Tupadr3 library [tupadr3]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/tupadr3
	• https://github.com/tupadr3/plantuml-icon-font-sprites
	This library contains several libraries of icons (including Devicons and Font Awesome).
	Use it by including the file that contains the sprite, eg: !include <font-awesome/align_center>.
	When imported, you can use the sprite as normally you would, using <$sprite_name>.
	You may also include the common.puml file, eg: !include <font-awesome/common>, which contains
	helper macros defined. With the common.pumlimported, you can use the NAME_OF_SPRITE(parameters...)
	macro.
	Example of usage:
	
	@startuml
	!include <tupadr3/common>
	!include <tupadr3/font-awesome/server>
	!include <tupadr3/font-awesome/database>
	
	title Styling example
	
	FA_SERVER(web1,web1) #Green
	FA_SERVER(web2,web2) #Yellow
	FA_SERVER(web3,web3) #Blue
	FA_SERVER(web4,web4) #YellowGreen
	FA_DATABASE(db1,LIVE,database,white) #RoyalBlue
	FA_DATABASE(db2,SPARE,database) #Red
	
	db1 <--> db2
	
	web1 <--> db1
	web2 <--> db1
	web3 <--> db1
	web4 <--> db1
	@enduml
	
	@startuml
	!include <tupadr3/common>
	!include <tupadr3/devicons/mysql>
	
	DEV_MYSQL(db1)
	DEV_MYSQL(db2,label of db2)
	DEV_MYSQL(db3,label of db3,database)
	DEV_MYSQL(db4,label of db4,database,red) #DeepSkyBlue
	@enduml
snippet 27_STANDARD_LIBRARY_27.1_List_of_Standard_Library " List of Standard Library"
	You can list standard library folders using the special diagram:
	
	@startuml
	stdlib
	@enduml
	
	It is also possible to use the command line java -jar plantuml.jar -stdlib to display the same list.
	
	Finally, you can extract the full standard library sources using java -jar plantuml.jar -extractstdlib.
	All files will be extracted in the folder stdlib.
	Sources used to build oﬀicial PlantUML releases are hosted here https://github.com/plantuml/plantuml-
	stdlib. You can create Pull Request to update or add some library if you find it relevant.
	
snippet 27_STANDARD_LIBRARY_27.2_ArchiMate " ArchiMate [archimate]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/archimate
	• https://github.com/ebbypeter/Archimate-PlantUML
	This repository contains ArchiMate PlantUML macros and other includes for creating Archimate Dia-
	grams easily and consistantly.
	
	@startuml
	!include <archimate/Archimate>
	
	title Archimate Sample - Internet Browser
	
	' Elements
	Business_Object(businessObject, "A Business Object")
	Business_Process(someBusinessProcess,"Some Business Process")
	Business_Service(itSupportService, "IT Support for Business (Application Service)")
	
	Application_DataObject(dataObject, "Web Page Data \n 'on the fly'")
	Application_Function(webpageBehaviour, "Web page behaviour")
	Application_Component(ActivePartWebPage, "Active Part of the web page \n 'on the fly'")
	
	Technology_Artifact(inMemoryItem,"in memory / 'on the fly' html/javascript")
	Technology_Service(internetBrowser, "Internet Browser Generic & Plugin")
	Technology_Service(internetBrowserPlugin, "Some Internet Browser Plugin")
	Technology_Service(webServer, "Some web server")
	
	'Relationships
	Rel_Flow_Left(someBusinessProcess, businessObject, "")
	Rel_Serving_Up(itSupportService, someBusinessProcess, "")
	Rel_Specialization_Up(webpageBehaviour, itSupportService, "")
	Rel_Flow_Right(dataObject, webpageBehaviour, "")
	Rel_Specialization_Up(dataObject, businessObject, "")
	Rel_Assignment_Left(ActivePartWebPage, webpageBehaviour, "")
	Rel_Specialization_Up(inMemoryItem, dataObject, "")
	Rel_Realization_Up(inMemoryItem, ActivePartWebPage, "")
	Rel_Specialization_Right(inMemoryItem,internetBrowser, "")
	Rel_Serving_Up(internetBrowser, webpageBehaviour, "")
	Rel_Serving_Up(internetBrowserPlugin, webpageBehaviour, "")
	Rel_Aggregation_Right(internetBrowser, internetBrowserPlugin, "")
	Rel_Access_Up(webServer, inMemoryItem, "")
	Rel_Serving_Up(webServer, internetBrowser, "")
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.3_AWS_library " AWS library [aws]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/aws
	• https://github.com/milo-minderbinder/AWS-PlantUML
	The AWS library consists of Amazon AWS icons, it provides icons of two different sizes (normal and
	large).
	Use it by including the file that contains the sprite, eg: !include <aws/Storage/AmazonS3/AmazonS3>.
	When imported, you can use the sprite as normally you would, using <$sprite_name>.
	You may also include the common.puml file, eg: !include <aws/common>, which contains helper macros
	defined. With the common.puml imported, you can use the NAME_OF_SPRITE(parameters...) macro.
	Example of usage:
	
	@startuml
	!include <aws/common>
	!include <aws/Storage/AmazonS3/AmazonS3>
	
	AMAZONS3(s3_internal)
	AMAZONS3(s3_partner,"Vendor's S3")
	s3_internal <- s3_partner
	@enduml
	
	@startuml
	!include <aws/common>
	!include <aws/Storage/AmazonS3/AmazonS3>
	!include <aws/Storage/AmazonS3/AmazonS3_LARGE>
	
	skinparam nodeBackgroundColor White
	skinparam storage<<**AmazonS3**>> {
	        backgroundColor #F9DFDC
	}
	AMAZONS3(s3_internal,"Default S3")
	AMAZONS3(s3_internal2,"S3 as node",node)
	AMAZONS3_LARGE(s3_partner,"Large S3")
	
	s3_internal2 <-r- s3_partner
	s3_internal <-l- s3_partner
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.4_Amazon_Labs_AWS_Library " Amazon Labs AWS Library [awslib]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/awslib
	• https://github.com/awslabs/aws-icons-for-plantuml
	The Amazon Labs AWS library provides PlantUML sprites, macros, and other includes for Amazon Web
	Services (AWS) services and resources.
	Used to create PlantUML diagrams with AWS components. All elements are generated from the oﬀicial
	
	AWS Architecture Icons and when combined with PlantUML and the C4 model, are a great way to
	communicate your design, deployment, and topology as code.
	
	@startuml
	'Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
	'SPDX-License-Identifier: MIT (For details, see https://github.com/awslabs/aws-icons-for-plantuml/blob/master/LICENSE)
	
	!include <awslib/AWSCommon>
	
	' Uncomment the following line to create simplified view
	' !include <awslib/AWSSimplified>
	
	!include <awslib/General/Users>
	!include <awslib/Mobile/APIGateway>
	!include <awslib/SecurityIdentityAndCompliance/Cognito>
	!include <awslib/Compute/Lambda>
	!include <awslib/Database/DynamoDB>
	
	left to right direction
	
	Users(sources, "Events", "millions of users")
	APIGateway(votingAPI, "Voting API", "user votes")
	Cognito(userAuth, "User Authentication", "jwt to submit votes")
	Lambda(generateToken, "User Credentials", "return jwt")
	Lambda(recordVote, "Record Vote", "enter or update vote per user")
	DynamoDB(voteDb, "Vote Database", "one entry per user")
	
	sources --> userAuth
	sources --> votingAPI
	userAuth <--> generateToken
	votingAPI --> recordVote
	recordVote --> voteDb
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.5_Azure_library " Azure library [azure]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/azure
	• https://github.com/RicardoNiepel/Azure-PlantUML/
	The Azure library consists of Microsoft Azure icons.
	Use it by including the file that contains the sprite, eg: !include <azure/Analytics/AzureEventHub.puml>.
	When imported, you can use the sprite as normally you would, using <$sprite_name>.
	You may also include the AzureCommon.pumlfile, eg: !include <azure/AzureCommon.puml>, which con-
	tains helper macros defined. With the AzureCommon.pumlimported, you can use the NAME_OF_SPRITE(parameters...)
	macro.
	Example of usage:
	
	@startuml
	!include <azure/AzureCommon.puml>
	!include <azure/Analytics/AzureEventHub.puml>
	!include <azure/Analytics/AzureStreamAnalytics.puml>
	!include <azure/Databases/AzureCosmosDb.puml>
	
	left to right direction
	
	agent "Device Simulator" as devices #fff
	
	AzureEventHub(fareDataEventHub, "Fare Data", "PK: Medallion HackLicense VendorId; 3 TUs")
	
	AzureEventHub(tripDataEventHub, "Trip Data", "PK: Medallion HackLicense VendorId; 3 TUs")
	AzureStreamAnalytics(streamAnalytics, "Stream Processing", "6 SUs")
	AzureCosmosDb(outputCosmosDb, "Output Database", "1,000 RUs")
	
	devices --> fareDataEventHub
	devices --> tripDataEventHub
	fareDataEventHub --> streamAnalytics
	tripDataEventHub --> streamAnalytics
	streamAnalytics --> outputCosmosDb
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.6_C4_Library " C4 Library [C4]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/C4
	• https://github.com/plantuml-stdlib/C4-PlantUML
	
	@startuml
	!include <C4/C4_Container>
	
	Person(personAlias, "Label", "Optional Description")
	Container(containerAlias, "Label", "Technology", "Optional Description")
	System(systemAlias, "Label", "Optional Description")
	
	Rel(personAlias, containerAlias, "Label", "Optional Technology")
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.7_Cloud_Insight " Cloud Insight [cloudinsight]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/cloudinsight
	• https://github.com/rabelenda/cicon-plantuml-sprites
	This repository contains PlantUML sprites generated from Cloudinsight icons, which can easily be used
	in PlantUML diagrams for nice visual representation of popular technologies.
	
	@startuml
	!include <cloudinsight/tomcat>
	!include <cloudinsight/kafka>
	!include <cloudinsight/java>
	!include <cloudinsight/cassandra>
	
	title Cloudinsight sprites example
	
	skinparam monochrome true
	
	rectangle "<$tomcat>\nwebapp" as webapp
	queue "<$kafka>" as kafka
	rectangle "<$java>\ndaemon" as daemon
	database "<$cassandra>" as cassandra
	
	webapp -> kafka
	kafka -> daemon
	daemon --> cassandra
	@enduml
	
snippet 27_STANDARD_LIBRARY_27.8_Cloudogu " Cloudogu [cloudogu]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/cloudogu
	• https://github.com/cloudogu/plantuml-cloudogu-sprites
	• https://cloudogu.com
	The Cloudogu library provides PlantUML sprites, macros, and other includes for Cloudogu services and
	resources.
	
	@startuml
	!include <cloudogu/common.puml>
	!include <cloudogu/dogus/jenkins.puml>
	!include <cloudogu/dogus/cloudogu.puml>
	!include <cloudogu/dogus/scm.puml>
	!include <cloudogu/dogus/smeagol.puml>
	!include <cloudogu/dogus/nexus.puml>
	!include <cloudogu/tools/k8s.puml>
	
	node "Cloudogu Ecosystem" <<$cloudogu>> {
	        DOGU_JENKINS(jenkins, Jenkins) #ffffff
	        DOGU_SCM(scm, SCM-Manager) #ffffff
	        DOGU_SMEAGOL(smeagol, Smeagol) #ffffff
	        DOGU_NEXUS(nexus,Nexus) #ffffff
	}
	
	TOOL_K8S(k8s, Kubernetes) #ffffff
	
	actor developer
	
	developer --> smeagol : "Edit Slides"
	smeagol -> scm : Push
	scm -> jenkins : Trigger
	jenkins -> nexus : Deploy
	jenkins --> k8s : Deploy
	@enduml
	
	All cloudogu sprites
	See all possible cloudogu sprites on plantuml-cloudogu-sprites.
	
snippet 27_STANDARD_LIBRARY_27.9_Elastic_library " Elastic library [elastic]"
	• https://github.com/plantuml/plantuml-stdlib/tree/master/elastic
	• https://github.com/Crashedmind/PlantUML-Elastic-icons
	The Elastic library consists of Elastic icons. It is similar in use to the AWS and Azure libraries (it used
	the same tool to create them).
	Use it by including the file that contains the sprite, eg: !include elastic/elastic_search/elastic_search.puml>.
	When imported, you can use the sprite as normally you would, using <$sprite_name>.
	You may also include the common.puml file, eg: !include <elastic/common>, which contains helper
	macros defined. With the common.puml imported, you can use the NAME//OF//SPRITE(parameters...)
	macro.
	Example of usage:
	
	@startuml
	!include <elastic/common>
	!include <elastic/elasticsearch/elasticsearch>
	!include <elastic/logstash/logstash>
	!include <elastic/kibana/kibana>
	
	ELASTICSEARCH(ElasticSearch, "Search and Analyze",database)
	LOGSTASH(Logstash, "Parse and Transform",node)
	KIBANA(Kibana, "Visualize",agent)
	
	Logstash -right-> ElasticSearch: Transformed Data
	ElasticSearch -right-> Kibana: Data to View
	@enduml
	
	All Elastic Sprite Set
	
	@startuml
	'Adapted from https://github.com/Crashedmind/PlantUML-Elastic-icons/blob/master/All.puml
	
	'Elastic stuff here
	'================================
	
	!include <elastic/common.puml>
	!include <elastic/apm/apm.puml>
	!include <elastic/app_search/app_search.puml>
	!include <elastic/beats/beats.puml>
	!include <elastic/cloud/cloud.puml>
	!include <elastic/cloud_in_kubernetes/cloud_in_kubernetes.puml>
	!include <elastic/code_search/code_search.puml>
	!include <elastic/ece/ece.puml>
	!include <elastic/eck/eck.puml>
	' Beware of the difference between Crashedmind and plantuml-stdlib version: with '_' usage!
	!include <elastic/elasticsearch/elasticsearch.puml>
	!include <elastic/endpoint/endpoint.puml>
	!include <elastic/enterprise_search/enterprise_search.puml>
	!include <elastic/kibana/kibana.puml>
	!include <elastic/logging/logging.puml>
	!include <elastic/logstash/logstash.puml>
	!include <elastic/maps/maps.puml>
	!include <elastic/metrics/metrics.puml>
	!include <elastic/siem/siem.puml>
	!include <elastic/site_search/site_search.puml>
	!include <elastic/stack/stack.puml>
	!include <elastic/uptime/uptime.puml>
	
	skinparam agentBackgroundColor White
	
	APM(apm)
	APP_SEARCH(app_search)
	BEATS(beats)
	CLOUD(cloud)
	CLOUD_IN_KUBERNETES(cloud_in_kubernetes)
	CODE_SEARCH(code_search)
	ECE(ece)
	ECK(eck)
	ELASTICSEARCH(elastic_search)
	ENDPOINT(endpoint)
	ENTERPRISE_SEARCH(enterprise_search)
	KIBANA(kibana)
	LOGGING(logging)
	LOGSTASH(logstash)
	MAPS(maps)
	METRICS(metrics)
	SIEM(siem)
	SITE_SEARCH(site_search)
	STACK(stack)
	UPTIME(uptime)
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.7_Extension " Extension"
	If one actor/use case extends another one, you can use the symbol <|--.
	
	@startuml
	:Main Admin: as Admin
	(Use the application) as (Use)
	
	User <|-- Admin
	(Start) <|-- (Use)
	
	@enduml
	
snippet 27_STANDARD_LIBRARY_27_Standard_Library " STANDARD LIBRARY"
	
	27 Standard Library
	This page explains the oﬀicial Standard Library (stdlib) for PlantUML. This Standard Library is now
	included in oﬀicial releases of PlantUML. Including files follows the C convention for ”C standard library”.
	Contents of the library come from third party contributors. We thank them for their useful contribution!
	
snippet 2_USE_CASE_DIAGRAM_2.8_Using_notes " Using notes"
	You can use the note left of , note right of , note top of , note bottom of keywords to define
	notes related to a single object.
	A note can be also define alone with the note keywords, then linked to other objects using the .. symbol.
	
	@startuml
	:Main Admin: as Admin
	(Use the application) as (Use)
	
	User -> (Start)
	User --> (Use)
	
	Admin ---> (Use)
	
	note right of Admin : This is an example.
	
	note right of (Use)
	        A note can also
	        be on several lines
	end note
	
	note "This note is connected\nto several objects." as N2
	(Start) .. N2
	N2 .. (Use)
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2.9_Stereotypes " Stereotypes"
	You can add stereotypes while defining actors and use cases using << and >>.
	
	@startuml
	User << Human >>
	:Main Database: as MySql << Application >>
	(Start) << One Shot >>
	(Use the application) as (Use) << Main >>
	
	User -> (Start)
	User --> (Use)
	
	MySql --> (Use)
	
	@enduml
	
snippet 2_USE_CASE_DIAGRAM_2_Use_Case_Diagram " USE CASE DIAGRAM"
	
	2 Use Case Diagram
	Let’s have a few examples:
snippet 3_CLASS_DIAGRAM_3.10.1_Note_on_field_or_method " Note on field or method"
	
	@startuml
	class A {
	        {static} int counter
	        +void {abstract} start(int timeout)
	}
	note right of A::counter
	This member is annotated
	end note
	note right of A::start
	This method is now explained in a UML note
	end note
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.10.2_Note_on_method_with_the_same_name " Note on method with the same name"
	
	@startuml
	class A {
	        {static} int counter
	        +void {abstract} start(int timeoutms)
	        +void {abstract} start(Duration timeout)
	}
	note left of A::counter
	This member is annotated
	end note
	note right of A::"start(int timeoutms)"
	This method with int
	end note
	note right of A::"start(Duration timeout)"
	This method with Duration
	end note
	@enduml
	
	[Ref. QA-3474 and QA-5835]
	
snippet 3_CLASS_DIAGRAM_3.10_Note_on_field_or_method " Note on field (field, attribute, member) or method"
	It is possible to add a note on field (field, attribut, member) or on method.
	
snippet 3_CLASS_DIAGRAM_3.11_Note_on_links " Note on links"
	It is possible to add a note on a link, just after the link definition, using note on link.
	You can also use note left on link, note right on link, note top on link, note bottom on link
	if you want to change the relative position of the note with the label.
	
	@startuml
	
	class Dummy
	Dummy --> Foo : A link
	note on link #red: note that is red
	
	Dummy --> Foo2 : Another link
	note right on link #blue
	        this is my note on right link
	        and in blue
	end note
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.12_Abstract_class_and_interface " Abstract class and interface"
	You can declare a class as abstract using abstract or abstract class keywords.
	The class will be printed in italic.
	You can use the interface, annotation and enum keywords too.
	
	@startuml
	
	abstract class AbstractList
	abstract AbstractCollection
	interface List
	interface Collection
	
	List <|-- AbstractList
	Collection <|-- AbstractCollection
	
	Collection <|- List
	AbstractCollection <|- AbstractList
	
	AbstractList <|-- ArrayList
	
	class ArrayList {
	        Object[] elementData
	        size()
	}
	
	enum TimeUnit {
	        DAYS
	        HOURS
	        MINUTES
	}
	
	annotation SuppressWarnings
	
	annotation Annotation {
	        annotation with members
	        String foo()
	        String bar()
	}
	
	@enduml
	
	[Ref. ’Annotation with members’ Issue#458]
	
snippet 3_CLASS_DIAGRAM_3.13_Using_non-letters " Using non-letters"
	If you want to use non-letters in the class (or enum...) display, you can either :
	• Use the as keyword in the class definition
	• Put quotes "" around the class name
	
	@startuml
	class "This is my class" as class1
	class class2 as "It works this way too"
	
	class2 *-- "foo/dummy" : use
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.14_Hide_attributes,_methods... " Hide attributes, methods..."
	You can parameterize the display of classes using the hide/show command.
	The basic command is: hide empty members. This command will hide attributes or methods if they are
	empty.
	Instead of empty members, you can use:
	• empty fields or empty attributes for empty fields,
	• empty methods for empty methods,
	• fields or attributes which will hide fields, even if they are described,
	• methods which will hide methods, even if they are described,
	• members which will hide fields and methods, even if they are described,
	• circle for the circled character in front of class name,
	• stereotype for the stereotype.
	You can also provide, just after the hide or show keyword:
	• class for all classes,
	• interface for all interfaces,
	• enum for all enums,
	• <<foo1>> for classes which are stereotyped with foo1,
	• an existing class name.
	You can use several show/hide commands to define rules and exceptions.
	
	@startuml
	
	class Dummy1 {
	        +myMethods()
	}
	
	class Dummy2 {
	        +hiddenMethod()
	}
	
	class Dummy3 <<Serializable>> {
	        String name
	}
	
	hide members
	hide <<Serializable>> circle
	show Dummy1 methods
	show <<Serializable>> fields
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.15_Hide_classes " Hide classes"
	You can also use the show/hide commands to hide classes.
	This may be useful if you define a large !included file, and if you want to hide some classes after file
	inclusion.
	
	@startuml
	
	class Foo1
	class Foo2
	
	Foo2 *-- Foo1
	
	hide Foo2
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.16_Remove_classes " Remove classes"
	You can also use the remove commands to remove classes.
	This may be useful if you define a large !included file, and if you want to remove some classes after file
	inclusion.
	
	@startuml
	
	class Foo1
	class Foo2
	
	Foo2 *-- Foo1
	
	remove Foo2
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.17_Hide_or_Remove_unlinked_class " Hide or Remove unlinked class"
	By default, all classes are displayed:
	
	@startuml
	class C1
	class C2
	class C3
	C1 -- C2
	@enduml
	
	But you can:
	• hide @unlinked classes:
	
	@startuml
	class C1
	class C2
	class C3
	C1 -- C2
	
	hide @unlinked
	@enduml
	
	• or remove @unlinked classes:
	
	@startuml
	class C1
	class C2
	class C3
	C1 -- C2
	
	remove @unlinked
	@enduml
	
	[Adapted from QA-11052]
	
snippet 3_CLASS_DIAGRAM_3.18_Use_generics " Use generics"
	You can also use bracket < and > to define generics usage in a class.
	
	@startuml
	
	class Foo<? extends Element> {
	        int size()
	}
	Foo *- Element
	
	@enduml
	
	It is possible to disable this drawing using skinparam genericDisplay old command.
	
snippet 3_CLASS_DIAGRAM_3.19_Specific_Spot " Specific Spot"
	Usually, a spotted character (C, I, E or A) is used for classes, interface, enum and abstract classes.
	But you can define your own spot for a class when you define the stereotype, adding a single character
	and a color, like in this example:
	
	@startuml
	
	class System << (S,#FF7700) Singleton >>
	class Date << (D,orchid) >>
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.1_Declaring_element " Declaring element"
	
	@startuml
	abstract abstract
	abstract class "abstract class"
	annotation annotation
	circle circle
	() circle_short_form
	class class
	diamond diamond
	<> diamond_short_form
	entity entity
	enum enum
	interface interface
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.20_Packages " Packages"
	You can define a package using the package keyword, and optionally declare a background color for your
	package (Using a html color code or name).
	Note that package definitions can be nested.
	
	@startuml
	
	package "Classic Collections" #DDDDDD {
	        Object <|-- ArrayList
	}
	
	package net.sourceforge.plantuml {
	        Object <|-- Demo1
	        Demo1 *- Demo2
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.21_Packages_style " Packages style"
	There are different styles available for packages.
	You can specify them either by setting a default style with the command : skinparam packageStyle,
	or by using a stereotype on the package:
	
	@startuml
	scale 750 width
	package foo1 <<Node>> {
	        class Class1
	}
	
	package foo2 <<Rectangle>> {
	        class Class2
	}
	
	package foo3 <<Folder>> {
	        class Class3
	}
	
	package foo4 <<Frame>> {
	        class Class4
	}
	
	package foo5 <<Cloud>> {
	        class Class5
	}
	
	package foo6 <<Database>> {
	        class Class6
	}
	
	@enduml
	
	You can also define links between packages, like in the following example:
	
	@startuml
	
	skinparam packageStyle rectangle
	
	package foo1.foo2 {
	}
	
	package foo1.foo2.foo3 {
	        class Object
	}
	
	foo1.foo2 +-- foo1.foo2.foo3
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.22_Namespaces " Namespaces"
	In packages, the name of a class is the unique identifier of this class. It means that you cannot have two
	classes with the very same name in different packages.
	In that case, you should use namespaces instead of packages.
	You can refer to classes from other namespaces by fully qualify them. Classes from the default namespace
	are qualified with a starting dot.
	Note that you don’t have to explicitly create namespace : a fully qualified class is automatically put in
	the right namespace.
	
	@startuml
	
	class BaseClass
	
	namespace net.dummy #DDDDDD {
	        .BaseClass <|-- Person
	        Meeting o-- Person
	
	        .BaseClass <|- Meeting
	
	}
	
	namespace net.foo {
	
	        net.dummy.Person <|- Person
	        .BaseClass <|-- Person
	
	        net.dummy.Meeting o-- Person
	
	}
	
	BaseClass <|-- net.unused.Person
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.23_Automatic_namespace_creation " Automatic namespace creation"
	You can define another separator (other than the dot) using the command : set namespaceSeparator
	???.
	
	@startuml
	
	set namespaceSeparator ::
	class X1::X2::foo {
	        some info
	}
	
	@enduml
	
	You can disable automatic package creation using the command set namespaceSeparator none.
	
	@startuml
	
	set namespaceSeparator none
	class X1.X2.foo {
	        some info
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.24_Lollipop_interface " Lollipop interface"
	You can also define lollipops interface on classes, using the following syntax:
	• bar ()- foo
	• bar ()-- foo
	• foo -() bar
	
	@startuml
	class foo
	bar ()- foo
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.25_Changing_arrows_direction " Changing arrows direction"
	By default, links between classes have two dashes -- and are vertically oriented. It is possible to use
	horizontal link by putting a single dash (or dot) like this:
	
	@startuml
	Room o- Student
	Room *-- Chair
	@enduml
	
	You can also change directions by reversing the link:
	
	@startuml
	Student -o Room
	Chair --* Room
	@enduml
	
	It is also possible to change arrow direction by adding left, right, up or down keywords inside the arrow:
	
	@startuml
	foo -left-> dummyLeft
	foo -right-> dummyRight
	foo -up-> dummyUp
	foo -down-> dummyDown
	@enduml
	
	You can shorten the arrow by using only the first character of the direction (for example, -d- instead of
	-down-) or the two first characters (-do-).
	Please note that you should not abuse this functionality : Graphviz gives usually good results without
	tweaking.
	And with the left to right direction parameter:
	
	@startuml
	left to right direction
	foo -left-> dummyLeft
	foo -right-> dummyRight
	foo -up-> dummyUp
	foo -down-> dummyDown
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.26_Association_classes " Association classes"
	You can define association class after that a relation has been defined between two classes, like in this
	example:
	
	@startuml
	class Student {
	        Name
	}
	Student "0..*" - "1..*" Course
	(Student, Course) .. Enrollment
	
	class Enrollment {
	        drop()
	        cancel()
	}
	@enduml
	
	You can define it in another direction:
	
	@startuml
	class Student {
	        Name
	}
	Student "0..*" -- "1..*" Course
	(Student, Course) . Enrollment
	
	class Enrollment {
	        drop()
	        cancel()
	}
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.27_Association_on_same_classe " Association on same classe"
	
	@startuml
	class Station {
	        +name: string
	}
	
	class StationCrossing {
	        +cost: TimeInterval
	}
	
	<> diamond
	
	StationCrossing . diamond
	diamond - "from 0..*" Station
	
	diamond - "to 0..* " Station
	@enduml
	
	[Ref. Incubation: Associations]
	
snippet 3_CLASS_DIAGRAM_3.28_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command :
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	
	@startuml
	
	skinparam class {
	        BackgroundColor PaleGreen
	        ArrowColor SeaGreen
	        BorderColor SpringGreen
	}
	skinparam stereotypeCBackgroundColor YellowGreen
	
	Class01 "1" *-- "many" Class02 : contains
	
	Class03 o-- Class04 : aggregation
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.29_Skinned_Stereotypes " Skinned Stereotypes"
	You can define specific color and fonts for stereotyped classes.
	
	@startuml
	
	skinparam class {
	        BackgroundColor PaleGreen
	        ArrowColor SeaGreen
	        BorderColor SpringGreen
	        BackgroundColor<<Foo>> Wheat
	        BorderColor<<Foo>> Tomato
	}
	skinparam stereotypeCBackgroundColor YellowGreen
	skinparam stereotypeCBackgroundColor<< Foo >> DimGray
	
	Class01 <<Foo>>
	Class03 <<Foo>>
	Class01 "1" *-- "many" Class02 : contains
	
	Class03 o-- Class04 : aggregation
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.2_Relations_between_classes " Relations between classes"
	Relations between classes are defined using the following symbols :
	Type Symbol Drawing
	Extension <|--
	Composition *--
	Aggregation o--
	It is possible to replace -- by .. to have a dotted line.
	Knowing those rules, it is possible to draw the following drawings:
	
	@startuml
	Class01 <|-- Class02
	Class03 *-- Class04
	Class05 o-- Class06
	Class07 .. Class08
	Class09 -- Class10
	@enduml
	
	@startuml
	Class11 <|.. Class12
	Class13 --> Class14
	Class15 ..> Class16
	Class17 ..|> Class18
	Class19 <--* Class20
	@enduml
	
	@startuml
	Class21 #-- Class22
	Class23 x-- Class24
	Class25 }-- Class26
	Class27 +-- Class28
	Class29 ^-- Class30
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.30_Color_gradient " Color gradient"
	You can declare individual colors for classes, notes etc using the # notation.
	You can use standard color names or RGB codes in various notations, see Colors.
	You can also use color gradient for background colors, with the following syntax: two colors names
	separated either by:
	• |,
	• /,
	• \, or
	• -
	depending on the direction of the gradient.
	For example:
	
	@startuml
	
	skinparam backgroundcolor AntiqueWhite/Gold
	skinparam classBackgroundColor Wheat|CornflowerBlue
	
	class Foo #red-green
	note left of Foo #blue\9932CC
	this is my
	note on this class
	end note
	
	package example #GreenYellow/LightGoldenRodYellow {
	class Dummy
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.31_Help_on_layout " Help on layout"
	Sometimes, the default layout is not perfect...
	You can use together keyword to group some classes together : the layout engine will try to group them
	(as if they were in the same package).
	You can also use hidden links to force the layout.
	
	@startuml
	
	class Bar1
	class Bar2
	together {
	        class Together1
	        class Together2
	        class Together3
	}
	Together1 - Together2
	Together2 - Together3
	Together2 -[hidden]--> Bar1
	Bar1 -[hidden]> Bar2
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.32_Splitting_large_files " Splitting large files"
	Sometimes, you will get some very large image files.
	You can use the page (hpages)x(vpages) command to split the generated image into several files :
	hpagesis a number that indicated the number of horizontal pages, and vpagesis a number that indicated
	the number of vertical pages.
	You can also use some specific skinparam settings to put borders on splitted pages (see example).
	
	@startuml
	' Split into 4 pages
	page 2x2
	skinparam pageMargin 10
	skinparam pageExternalColor gray
	skinparam pageBorderColor black
	
	class BaseClass
	
	namespace net.dummy #DDDDDD {
	        .BaseClass <|-- Person
	        Meeting o-- Person
	
	        .BaseClass <|- Meeting
	
	}
	
	namespace net.foo {
	        net.dummy.Person <|- Person
	        .BaseClass <|-- Person
	
	        net.dummy.Meeting o-- Person
	
	}
	
	BaseClass <|-- net.unused.Person
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.33_Extends_and_implements " Extends and implements"
	It is also possible to use extends and implements keywords.
	
	@startuml
	class ArrayList implements List
	class ArrayList extends AbstractList
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.34.1_Line_style " Line style"
	It’s also possible to have explicitly bold, dashed, dotted, hidden or plain relation, links or arrows:
	
	• without label
	
	@startuml
	title Bracketed line style without label
	class foo
	class bar
	bar1 : [bold]
	bar2 : [dashed]
	bar3 : [dotted]
	bar4 : [hidden]
	bar5 : [plain]
	
	foo --> bar
	foo -[bold]-> bar1
	foo -[dashed]-> bar2
	foo -[dotted]-> bar3
	foo -[hidden]-> bar4
	foo -[plain]-> bar5
	@enduml
	
	• with label
	
	@startuml
	title Bracketed line style with label
	class foo
	class bar
	bar1 : [bold]
	bar2 : [dashed]
	bar3 : [dotted]
	bar4 : [hidden]
	bar5 : [plain]
	
	foo --> bar : ￿
	foo -[bold]-> bar1 : [bold]
	foo -[dashed]-> bar2 : [dashed]
	foo -[dotted]-> bar3 : [dotted]
	foo -[hidden]-> bar4 : [hidden]
	foo -[plain]-> bar5 : [plain]
	
	@enduml
	
	[Adapted from QA-4181]
	
snippet 3_CLASS_DIAGRAM_3.34.2_Line_color " Line color"
	
	@startuml
	
	title Bracketed line color
	class foo
	class bar
	bar1 : [#red]
	bar2 : [#green]
	bar3 : [#blue]
	
	foo --> bar
	foo -[#red]-> bar1 : [#red]
	foo -[#green]-> bar2 : [#green]
	foo -[#blue]-> bar3 : [#blue]
	'foo -[#blue;#yellow;#green]-> bar4
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.34.3_Line_thickness " Line thickness"
	
	@startuml
	title Bracketed line thickness
	class foo
	class bar
	bar1 : [thickness=1]
	bar2 : [thickness=2]
	bar3 : [thickness=4]
	bar4 : [thickness=8]
	bar5 : [thickness=16]
	
	foo --> bar : ￿
	foo -[thickness=1]-> bar1 : [1]
	foo -[thickness=2]-> bar2 : [2]
	foo -[thickness=4]-> bar3 : [4]
	foo -[thickness=8]-> bar4 : [8]
	foo -[thickness=16]-> bar5 : [16]
	
	@enduml
	
	[Ref. QA-4949]
	
snippet 3_CLASS_DIAGRAM_3.34.4_Mix " Mix"
	
	@startuml
	title Bracketed line style mix
	class foo
	class bar
	bar1 : [#red,thickness=1]
	bar2 : [#red,dashed,thickness=2]
	bar3 : [#green,dashed,thickness=4]
	bar4 : [#blue,dotted,thickness=8]
	bar5 : [#blue,plain,thickness=16]
	
	foo --> bar : ￿
	foo -[#red,thickness=1]-> bar1 : [#red,1]
	foo -[#red,dashed,thickness=2]-> bar2 : [#red,dashed,2]
	foo -[#green,dashed,thickness=4]-> bar3 : [#green,dashed,4]
	foo -[#blue,dotted,thickness=8]-> bar4 : [blue,dotted,8]
	foo -[#blue,plain,thickness=16]-> bar5 : [blue,plain,16]
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.34_Bracketed_relations_style " Bracketed relations (linking or arrow) style"
	
snippet 3_CLASS_DIAGRAM_3.35_Change_relation " Change relation (linking or arrow) color and style (inline style)"
	You can change the color or style of individual relation or arrows using the inline following notation:
	• #color;line.[bold|dashed|dotted];text:color
	
	@startuml
	class foo
	foo --> bar : normal
	foo --> bar1 #line:red;line.bold;text:red : red bold
	foo --> bar2 #green;line.dashed;text:green : green dashed
	foo --> bar3 #blue;line.dotted;text:blue : blue dotted
	@enduml
	
	[See similar feature on deployment]
	
snippet 3_CLASS_DIAGRAM_3.36_Change_class_color_and_style " Change class color and style (inline style)"
	You can change the color or style of individual class using the following notation:
	• #[color|back:color];header:color;line:color;line.[bold|dashed|dotted];text:color
	
	@startuml
	abstract abstract
	annotation annotation #pink;line:red;line.bold;text:red
	class class #palegreen;line:green;line.dashed;text:green
	interface interface #aliceblue;line:blue;line.dotted;text:blue
	@enduml
	
	First original example:
	
	@startuml
	class bar #line:green;back:lightblue
	class bar2 #lightblue;line:green
	
	class Foo1 #back:red;line:00FFFF
	class FooDashed #line.dashed:blue
	class FooDotted #line.dotted:blue
	class FooBold #line.bold
	class Demo1 #back:lightgreen|yellow;header:blue/red
	@enduml
	
	[Ref. QA-3770]
	
snippet 3_CLASS_DIAGRAM_3.37_Arrows_from_to_class_members " Arrows from/to class members"
	
	@startuml
	class Foo {
	        + field1
	        + field2
	}
	
	class Bar {
	        + field3
	        + field4
	}
	
	Foo::field1 --> Bar::field3 : foo
	Foo::field2 --> Bar::field4 : bar
	@enduml
	
	[Ref. QA-3636]
	
	@startuml
	left to right direction
	
	class User {
	        id : INTEGER
	        ..
	        other_id : INTEGER
	}
	
	class Email {
	        id : INTEGER
	        ..
	        user_id : INTEGER
	        address : INTEGER
	}
	
	User::id *-- Email::user_id
	@enduml
	
	[Ref. QA-5261]
snippet 3_CLASS_DIAGRAM_3.3_Label_on_relations " Label on relations"
	It is possible to add a label on the relation, using :, followed by the text of the label.
	For cardinality, you can use double-quotes "" on each side of the relation.
	
	@startuml
	
	Class01 "1" *-- "many" Class02 : contains
	
	Class03 o-- Class04 : aggregation
	
	Class05 --> "1" Class06
	
	@enduml
	
	You can add an extra arrow pointing at one object showing which object acts on the other object, using
	< or > at the begin or at the end of the label.
	
	@startuml
	class Car
	
	Driver - Car : drives >
	Car *- Wheel : have 4 >
	Car -- Person : < owns
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.4_Adding_methods " Adding methods"
	To declare fields and methods, you can use the symbol : followed by the field’s or method’s name.
	The system checks for parenthesis to choose between methods and fields.
	
	@startuml
	Object <|-- ArrayList
	
	Object : equals()
	ArrayList : Object[] elementData
	ArrayList : size()
	
	@enduml
	
	It is also possible to group between brackets {} all fields and methods.
	
	Note that the syntax is highly flexible about type/name order.
	
	@startuml
	class Dummy {
	        String data
	        void methods()
	}
	
	class Flight {
	        flightNumber : Integer
	        departureTime : Date
	}
	@enduml
	
	You can use {field} and {method} modifiers to override default behaviour of the parser about fields
	and methods.
	
	@startuml
	class Dummy {
	        {field} A field (despite parentheses)
	        {method} Some method
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.5_Defining_visibility " Defining visibility"
	When you define methods or fields, you can use characters to define the visibility of the corresponding
	item:
	Character Icon for field Icon for method Visibility
	- private
	# protected
	~ package private
	+ public
	
	@startuml
	
	class Dummy {
	        -field1
	        #field2
	        ~method1()
	        +method2()
	}
	
	@enduml
	
	You can turn off this feature using the skinparam classAttributeIconSize 0 command :
	
	@startuml
	skinparam classAttributeIconSize 0
	class Dummy {
	        -field1
	        #field2
	        ~method1()
	        +method2()
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.6_Abstract_and_Static " Abstract and Static"
	You can define static or abstract methods or fields using the {static} or {abstract} modifier.
	These modifiers can be used at the start or at the end of the line. You can also use {classifier} instead
	of {static}.
	
	@startuml
	class Dummy {
	        {static} String id
	        {abstract} void methods()
	}
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.7_Advanced_class_body " Advanced class body"
	By default, methods and fields are automatically regrouped by PlantUML. You can use separators to
	define your own way of ordering fields and methods. The following separators are possible : -- .. == __.
	You can also use titles within the separators:
	
	@startuml
	class Foo1 {
	        You can use
	        several lines
	        ..
	        as you want
	        and group
	        ==
	
	        things together.
	        __
	        You can have as many groups
	        as you want
	        --
	        End of class
	
	}
	
	class User {
	        .. Simple Getter ..
	        + getName()
	        + getAddress()
	        .. Some setter ..
	        + setName()
	        __ private data __
	        int age
	        -- encrypted --
	        String password
	}
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.8_Notes_and_stereotypes " Notes and stereotypes"
	Stereotypes are defined with the class keyword, << and >>.
	You can also define notes using note left of , note right of , note top of , note bottom of key-
	words.
	You can also define a note on the last defined class using note left, note right, note top, note
	bottom.
	A note can be also define alone with the note keywords, then linked to other objects using the .. symbol.
	
	@startuml
	class Object << general >>
	Object <|--- ArrayList
	
	note top of Object : In java, every class\nextends this one.
	
	note "This is a floating note" as N1
	note "This note is connected\nto several objects." as N2
	Object .. N2
	N2 .. ArrayList
	
	class Foo
	note left: On last defined class
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3.9_More_on_notes " More on notes"
	It is also possible to use few HTML tags (See Creole expression) like :
	• <b>
	• <u>
	• <i>
	• <s>, <del>, <strike>
	• <font color="#AAAAAA"> or <font color="colorName">
	• <color:#AAAAAA> or <color:colorName>
	• <size:nn> to change font size
	• <img src="file"> or <img:file>: the file must be accessible by the filesystem
	You can also have a note on several lines.
	You can also define a note on the last defined class using note left, note right, note top, note
	bottom.
	
	@startuml
	
	class Foo
	note left: On last defined class
	
	note top of Object
	        In java, <size:18>every</size> <u>class</u>
	        <b>extends</b>
	        <i>this</i> one.
	end note
	
	note as N1
	This note is <u>also</u>
	<b><color:royalBlue>on several</color>
	<s>words</s> lines
	And this is hosted by <img:sourceforge.jpg>
	end note
	
	@enduml
	
snippet 3_CLASS_DIAGRAM_3_Class_Diagram " CLASS DIAGRAM"
	
	3 Class Diagram
	
snippet 4_OBJECT_DIAGRAM_4.1_Definition_of_objects " Definition of objects"
		You define instance of objects using the object keywords.
		
		@startuml
		object firstObject
		object "My Second Object" as o2
		@enduml
		
snippet 4_OBJECT_DIAGRAM_4.2_Relations_between_objects " Relations between objects"
		Relations between objects are defined using the following symbols :
		Type Symbol Image
		Extension <|--
		Composition *--
		Aggregation o--
		It is possible to replace -- by .. to have a dotted line.
		Knowing those rules, it is possible to draw the following drawings.
		It is possible a add a label on the relation, using : followed by the text of the label.
		For cardinality, you can use double-quotes "" on each side of the relation.
		
		@startuml
		object Object01
		object Object02
		object Object03
		object Object04
		object Object05
		object Object06
		object Object07
		object Object08
		
		Object01 <|-- Object02
		Object03 *-- Object04
		Object05 o-- "4" Object06
		Object07 .. Object08 : some labels
		@enduml
		
snippet 4_OBJECT_DIAGRAM_4.3_Associations_objects " Associations objects"
		
		@startuml
		object o1
		object o2
		diamond dia
		
		object o3
		
		o1 --> dia
		o2 --> dia
		dia --> o3
		@enduml
		
snippet 4_OBJECT_DIAGRAM_4.4_Adding_fields " Adding fields"
		To declare fields, you can use the symbol : followed by the field’s name.
		
		@startuml
		
		object user
		
		user : name = "Dummy"
		user : id = 123
		
		@enduml
		
		It is also possible to group all fields between brackets {}.
		
		@startuml
		
		object user {
		        name = "Dummy"
		        id = 123
		}
		
		@enduml
		
snippet 4_OBJECT_DIAGRAM_4.5_Common_features_with_class_diagrams " Common features with class diagrams"
		• Hide attributes, methods...
		• Defines notes
		• Use packages
		• Skin the output
		
snippet 4_OBJECT_DIAGRAM_4.6_Map_table_or_associative_array " Map table or associative array"
		You can define a map table or associative array, with map keyword and => separator.
		
		@startuml
		map CapitalCity {
		        UK => London
		        USA => Washington
		        Germany => Berlin
		}
		@enduml
		
		@startuml
		map "Map **Contry => CapitalCity**" as CC {
		        UK => London
		        USA => Washington
		        Germany => Berlin
		}
		@enduml
		
		@startuml
		map "map: Map<Integer, String>" as users {
		        1 => Alice
		        2 => Bob
		        3 => Charlie
		}
		@enduml
		
		And add link with object.
		
		@startuml
		object London
		
		map CapitalCity {
		        UK *-> London
		        USA => Washington
		        Germany => Berlin
		}
		@enduml
		
		@startuml
		object London
		
		object Washington
		object Berlin
		object NewYork
		
		map CapitalCity {
		        UK *-> London
		        USA *--> Washington
		        Germany *---> Berlin
		}
		
		NewYork --> CapitalCity::USA
		@enduml
		
		[Ref. #307]
snippet 4_OBJECT_DIAGRAM_4_Object_Diagram " OBJECT DIAGRAM"
		
		4 Object Diagram
		
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.10_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command :
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	You can define specific color and fonts for stereotyped activities.
	
	@startuml
	
	skinparam backgroundColor #AAFFFF
	skinparam activity {
	        StartColor red
	        BarColor SaddleBrown
	        EndColor Silver
	        BackgroundColor Peru
	        BackgroundColor<< Begin >> Olive
	        BorderColor Peru
	        FontName Impact
	}
	
	(*) --> "Climbs on Platform" << Begin >>
	--> === S1 ===
	--> Bows
	--> === S2 ===
	--> WavesArmes
	--> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.11_Octagon " Octagon"
	You can change the shape of activities to octagon using the skinparam activityShape octagon com-
	mand.
	
	@startuml
	'Default is skinparam activityShape roundBox
	skinparam activityShape octagon
	
	(*) --> "First Action"
	"First Action" --> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.12_Complete_example " Complete example"
	
	@startuml
	title Servlet Container
	
	(*) --> "ClickServlet.handleRequest()"
	--> "new Page"
	
	if "Page.onSecurityCheck" then
	        ->[true] "Page.onInit()"
	
	        if "isForward?" then
	                ->[no] "Process controls"
	
	                if "continue processing?" then
	                        -->[yes] ===RENDERING===
	                else
	                        -->[no] ===REDIRECT_CHECK===
	                endif
	
	        else
	                -->[yes] ===RENDERING===
	        endif
	
	        if "is Post?" then
	                -->[yes] "Page.onPost()"
	                --> "Page.onRender()" as render
	                --> ===REDIRECT_CHECK===
	        else
	                -->[no] "Page.onGet()"
	                --> render
	        endif
	
	else
	        -->[false] ===REDIRECT_CHECK===
	endif
	
	if "Do redirect?" then
	        ->[yes] "redirect request"
	        --> ==BEFORE_DESTROY===
	else
	        if "Do Forward?" then
	                -left->[yes] "Forward request"
	                --> ==BEFORE_DESTROY===
	        else
	                -right->[no] "Render page template"
	                --> ==BEFORE_DESTROY===
	        endif
	endif
	
	--> "Page.onDestroy()"
	-->(*)
	
	@enduml
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.1_Simple_Action " Simple Action"
	You can use (*) for the starting point and ending point of the activity diagram.
	In some occasion, you may want to use (*top) to force the starting point to be at the top of the diagram.
	Use --> for arrows.
	
	@startuml
	
	(*) --> "First Action"
	"First Action" --> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.2_Label_on_arrows " Label on arrows"
	By default, an arrow starts at the last used activity.
	You can put a label on an arrow using brackets [ and ] just after the arrow definition.
	
	@startuml
	
	(*) --> "First Action"
	-->[You can put also labels] "Second Action"
	--> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.3_Changing_arrow_direction " Changing arrow direction"
	You can use -> for horizontal arrows. It is possible to force arrow’s direction using the following syntax:
	• -down-> (default arrow)
	• -right-> or ->
	• -left->
	• -up->
	
	@startuml
	
	(*) -up-> "First Action"
	-right-> "Second Action"
	--> "Third Action"
	-left-> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.4_Branches " Branches"
	You can use if/then/else keywords to define branches.
	
	@startuml
	(*) --> "Initialization"
	
	if "Some Test" then
	        -->[true] "Some Action"
	        --> "Another Action"
	        -right-> (*)
	else
	        ->[false] "Something else"
	        -->[Ending process] (*)
	endif
	
	@enduml
	
	Unfortunately, you will have to sometimes repeat the same activity in the diagram text:
	
	@startuml
	(*) --> "check input"
	If "input is verbose" then
	        --> [Yes] "turn on verbosity"
	        --> "run command"
	else
	        --> "run command"
	Endif
	-->(*)
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.5_More_on_Branches " More on Branches"
	By default, a branch is connected to the last defined activity, but it is possible to override this and to
	define a link with the if keywords.
	It is also possible to nest branches.
	
	@startuml
	
	(*) --> if "Some Test" then
	
	        -->[true] "action 1"
	
	        if "" then
	                -> "action 3" as a3
	        else
	                if "Other test" then
	                        -left-> "action 5"
	                else
	                        --> "action 6"
	                endif
	        endif
	
	else
	
	        ->[false] "action 2"
	
	endif
	
	a3 --> if "last test" then
	        --> "action 7"
	else
	        -> "action 8"
	endif
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.6_Synchronization " Synchronization"
	You can use === code === to display synchronization bars.
	
	@startuml
	
	(*) --> ===B1===
	--> "Parallel Action 1"
	--> ===B2===
	
	===B1=== --> "Parallel Action 2"
	--> ===B2===
	
	--> (*)
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.7_Long_action_description " Long action description"
	When you declare activities, you can span on several lines the description text. You can also add in the
	description.
	You can also give a short code to the activity with the as keyword. This code can be used latter in the
	diagram description.
	
	@startuml
	(*) -left-> "this <size:20>action</size>
	is <b>very</b> <color:red>long2</color>
	and defined on several lines
	that contains many <i>text</i>" as A1
	
	-up-> "Another action\n on several lines"
	
	A1 --> "Short action <img:sourceforge.jpg>"
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.8_Notes " Notes"
	You can add notes on a activity using the commands note left, note right, note topor note bottom,
	just after the description of the activity you want to note.
	If you want to put a note on the starting point, define the note at the very beginning of the diagram
	description.
	You can also have a note on several lines, using the endnote keywords.
	
	@startuml
	
	(*) --> "Some action"
	note right: This action has to be defined
	"Some action" --> (*)
	note left
	        This note is on
	        several lines
	end note
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5.9_Partition " Partition"
	You can define a partition using the partition keyword, and optionally declare a background color for
	your partition (Using a html color code or name)
	When you declare activities, they are automatically put in the last used partition.
	You can close the partition definition using a closing bracket }.
	
	@startuml
	
	partition Conductor {
	        (*) --> "Climbs on Platform"
	        --> === S1 ===
	        --> Bows
	}
	
	partition Audience #LightSkyBlue {
	        === S1 === --> Applauds
	}
	
	partition Conductor {
	        Bows --> === S2 ===
	        --> WavesArmes
	        Applauds --> === S2 ===
	}
	
	partition Orchestra #CCCCEE {
	        WavesArmes --> Introduction
	        --> "Play music"
	}
	
	@enduml
	
snippet 5_ACTIVITY_DIAGRAM_(LEGACY)_5_Activity_Diagram " ACTIVITY DIAGRAM (LEGACY)"
	
	5 Activity Diagram (legacy)
	This is the old Activity Diagram (legacy) syntax, to see the new current version see: Activity
	Diagram (new).
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.10_Notes " Notes"
	Text formatting can be done using creole wiki syntax.
	A note can be floating, using floating keyword.
	
	@startuml
	
	start
	:foo1;
	floating note left: This is a note
	:foo2;
	note right
	        This note is on several
	        //lines// and can
	        contain <b>HTML</b>
	        ====
	        * Calling the method ""foo()"" is prohibited
	end note
	stop
	
	@enduml
	
	You can add note on backward activity.
	
	@startuml
	start
	repeat :Enter data;
	:Submit;
	backward :Warning;
	note right: Note
	repeat while (Valid?) is (No) not (Yes)
	stop
	@enduml
	
	[Ref. QA-11788]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.11_Colors " Colors"
	You can specify a color for some activities.
	
	@startuml
	
	start
	:starting progress;
	#HotPink:reading configuration files
	These files should be edited at this point!;
	#AAAAAA:ending of the process;
	
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.12_Lines_without_arrows " Lines without arrows"
	You can use skinparam ArrowHeadColor none in order to connect activities using lines only, without
	arrows.
	
	@startuml
	skinparam ArrowHeadColor none
	start
	:Hello world;
	:This is on defined on
	several **lines**;
	stop
	@enduml
	
	@startuml
	skinparam ArrowHeadColor none
	start
	repeat :Enter data;
	:Submit;
	backward :Warning;
	repeat while (Valid?) is (No) not (Yes)
	stop
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.13_Arrows " Arrows"
	Using the -> notation, you can add texts to arrow, and change their color.
	It’s also possible to have dotted, dashed, bold or hidden arrows.
	
	@startuml
	:foo1;
	-> You can put text on arrows;
	if (test) then
	        -[#blue]->
	        :foo2;
	        -[#green,dashed]-> The text can
	        also be on several lines
	        and **very** long...;
	        :foo3;
	else
	        -[#black,dotted]->
	        :foo4;
	endif
	-[#gray,bold]->
	:foo5;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.14_Connector " Connector"
	You can use parentheses to denote connector.
	
	@startuml
	start
	:Some activity;
	(A)
	detach
	(A)
	:Other activity;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.15_Color_on_connector " Color on connector"
	You can add color on connector.
	
	@startuml
	start
	:The connector below
	wishes he was blue;
	#blue:(B)
	:This next connector
	feels that she would
	be better off green;
	#green:(G)
	stop
	@enduml
	
	[Ref. QA-10077]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.16_Grouping_or_partition " Grouping or partition"
	You can group activity together by defining partition:
	
	@startuml
	start
	partition Initialization {
	        :read config file;
	        :init internal variable;
	}
	partition Running {
	        :wait for user interaction;
	        :print information;
	}
	
	stop
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.17_Swimlanes " Swimlanes"
	Using pipe |, you can define swimlanes.
	It’s also possible to change swimlanes color.
	
	@startuml
	|Swimlane1|
	start
	:foo1;
	|#AntiqueWhite|Swimlane2|
	:foo2;
	:foo3;
	|Swimlane1|
	:foo4;
	|Swimlane2|
	:foo5;
	stop
	@enduml
	
	You can add if conditional or repeat or while loop within swimlanes.
	
	@startuml
	|#pink|Actor_For_red|
	start
	if (color?) is (red) then
	        #pink:**action red**;
	        :foo1;
	else (not red)
	        |#lightgray|Actor_For_no_red|
	        #lightgray:**action not red**;
	        :foo2;
	endif
	|Next_Actor|
	#lightblue:foo3;
	:foo4;
	|Final_Actor|
	#palegreen:foo5;
	stop
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.18_Detach_or_kill " Detach or kill [detach, kill]"
	It’s possible to remove an arrow using the detach or kill keyword:
	• detach
	
	@startuml
	:start;
	fork
	        :foo1;
	        :foo2;
	fork again
	        :foo3;
	        detach
	        endfork
	        if (foo4) then
	                :foo5;
	                detach
	        endif
	        :foo6;
	        detach
	        :foo7;
	        stop
	        @enduml
	
	        • kill
	
	        @startuml
	        :start;
	        fork
	                :foo1;
	                :foo2;
	        fork again
	                :foo3;
	                kill
	                endfork
	                if (foo4) then
	                        :foo5;
	                        kill
	                endif
	                :foo6;
	                kill
	                :foo7;
	                stop
	                @enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.19_SDL " SDL (Specification and Description Language)"
	By changing the final ; separator, you can set different rendering for the activity:
	• |
	• <
	• >
	• /
	• \\
	• ]
	• }
	
	@startuml
	:Ready;
	:next(o)|
	:Receiving;
	split
	        :nak(i)<
	        :ack(o)>
	split again
	        :ack(i)<
	        :next(o)
	        on several lines|
	        :i := i + 1]
	        :ack(o)>
	split again
	        :err(i)<
	        :nak(o)>
	split again
	        :foo/
	
	split again
	        :bar\\
	split again
	        :i > 5}
	        stop
	end split
	:finish;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.1_Simple_action " Simple action"
	Activities label starts with : and ends with ;.
	Text formatting can be done using creole wiki syntax.
	They are implicitly linked in their definition order.
	
	@startuml
	:Hello world;
	:This is defined on
	several **lines**;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.20_Complete_example " Complete example"
	
	@startuml
	
	start
	:ClickServlet.handleRequest();
	:new page;
	if (Page.onSecurityCheck) then (true)
	        :Page.onInit();
	        if (isForward?) then (no)
	                :Process controls;
	                if (continue processing?) then (no)
	                        stop
	                endif
	
	                if (isPost?) then (yes)
	                        :Page.onPost();
	                else (no)
	                        :Page.onGet();
	                endif
	                :Page.onRender();
	        endif
	else (false)
	endif
	
	if (do redirect?) then (yes)
	        :redirect process;
	else
	        if (do forward?) then (yes)
	                :Forward request;
	        else (no)
	                :Render page template;
	        endif
	endif
	
	stop
	
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.21.1_Inside_style " Inside style (by default)"
	
	@startuml
	skinparam conditionStyle inside
	start
	repeat
	        :act1;
	        :act2;
	repeatwhile (<b>end)
	:act3;
	@enduml
	
	@startuml
	start
	repeat
	        :act1;
	        :act2;
	repeatwhile (<b>end)
	:act3;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.21.2_Diamond_style " Diamond style"
	
	@startuml
	skinparam conditionStyle diamond
	start
	repeat
	        :act1;
	        :act2;
	repeatwhile (<b>end)
	:act3;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.21.3_InsideDiamond_style " InsideDiamond (or Foo1) style"
	
	@startuml
	skinparam conditionStyle InsideDiamond
	start
	repeat
	        :act1;
	        :act2;
	repeatwhile (<b>end)
	:act3;
	@enduml
	
	@startuml
	skinparam conditionStyle foo1
	start
	repeat
	        :act1;
	        :act2;
	repeatwhile (<b>end)
	:act3;
	@enduml
	
	[Ref. QA-1290 and #400]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.21_Condition_Style " Condition Style"
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.22.1_Diamond_style " Diamond style (by default)"
	• With one branch
	
	@startuml
	skinparam ConditionEndStyle diamond
	:A;
	if (decision) then (yes)
	        :B1;
	else (no)
	endif
	:C;
	@enduml
	
	• With two branchs (B1, B2)
	
	@startuml
	skinparam ConditionEndStyle diamond
	:A;
	if (decision) then (yes)
	        :B1;
	else (no)
	        :B2;
	endif
	:C;
	@enduml
	
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.22.2_Horizontal_line_style " Horizontal line (hline) style"
	• With one branch
	
	@startuml
	skinparam ConditionEndStyle hline
	:A;
	if (decision) then (yes)
	        :B1;
	else (no)
	endif
	:C;
	@enduml
	
	• With two branchs (B1, B2)
	
	@startuml
	skinparam ConditionEndStyle hline
	:A;
	if (decision) then (yes)
	        :B1;
	else (no)
	        :B2;
	endif
	:C;
	@enduml
	@enduml
	
	[Ref. QA-4015]
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.22_Condition_End_Style " Condition End Style"
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.2_Start_Stop_End " Start/Stop/End"
	You can use start and stop keywords to denote the beginning and the end of a diagram.
	
	@startuml
	start
	:Hello world;
	:This is defined on
	several **lines**;
	stop
	@enduml
	
	You can also use the end keyword.
	
	@startuml
	start
	:Hello world;
	:This is defined on
	
	several **lines**;
	end
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.3.1_Several_tests " Several tests (horizontal mode)"
	You can use the elseif keyword to have several tests (by default, it is the horizontal mode):
	
	@startuml
	start
	if (condition A) then (yes)
	        :Text 1;
	elseif (condition B) then (yes)
	        :Text 2;
	        stop
	elseif (condition C) then (yes)
	        :Text 3;
	elseif (condition D) then (yes)
	        :Text 4;
	else (nothing)
	        :Text else;
	endif
	stop
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.3.2_Several_tests " Several tests (vertical mode)"
	You can use the command !pragma useVerticalIf on to have the tests in vertical mode:
	
	@startuml
	!pragma useVerticalIf on
	start
	if (condition A) then (yes)
	        :Text 1;
	elseif (condition B) then (yes)
	        :Text 2;
	        stop
	elseif (condition C) then (yes)
	        :Text 3;
	elseif (condition D) then (yes)
	        :Text 4;
	else (nothing)
	        :Text else;
	endif
	stop
	@enduml
	
	[Ref. QA-3931]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.3_Conditional " Conditional"
	You can use if, then and else keywords to put tests in your diagram. Labels can be provided using
	parentheses.
	The 3 syntaxes are possible:
	• if (...) then (...)
	
	@startuml
	
	start
	
	if (Graphviz installed?) then (yes)
	        :process all\ndiagrams;
	else (no)
	        :process only
	        __sequence__ and __activity__ diagrams;
	endif
	
	stop
	
	@enduml
	
	• if (...) is (...) then
	
	@startuml
	if (color?) is (<color:red>red) then
	        :print red;
	else
	        :print not red;
	        @enduml
	
	        • if (...) equals (...) then
	
	        @startuml
	        if (counter?) equals (5) then
	                :print 5;
	        else
	                :print not 5;
	                @enduml
	
	                [Ref. QA-301]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.4_Conditional_with_stop_on_an_action " Conditional with stop on an action [kill, detach]"
	You can stop action on a if loop.
	
	@startuml
	if (condition?) then
	        :error;
	        stop
	endif
	#palegreen:action;
	@enduml
	
	But if you want to stop at an precise action, you can use the kill or detach keyword:
	• kill
	
	@startuml
	if (condition?) then
	        #pink:error;
	        kill
	endif
	#palegreen:action;
	@enduml
	
	[Ref. QA-265]
	• detach
	
	@startuml
	if (condition?) then
	        #pink:error;
	        detach
	endif
	#palegreen:action;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.5_Repeat_loop " Repeat loop"
	You can use repeat and repeatwhile keywords to have repeat loops.
	
	@startuml
	
	start
	
	repeat
	        :read data;
	        :generate diagrams;
	repeat while (more data?) is (yes)
	->no;
	stop
	
	@enduml
	
	It is also possible to use a full action as repeat target and insert an action in the return path using the
	backward keyword.
	
	@startuml
	
	start
	
	repeat :foo as starting label;
	:read data;
	:generate diagrams;
	backward:This is backward;
	repeat while (more data?)
	
	stop
	
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.6_Break_on_a_repeat_loop " Break on a repeat loop [break]"
	You can break after an action on a loop.
	
	@startuml
	start
	repeat
	        :Test something;
	        if (Something went wrong?) then (no)
	                #palegreen:OK;
	                break
	                endif
	                ->NOK;
	                :Alert "Error with long text";
	        repeat while (Something went wrong with long text?) is (yes) not (no)
	        ->//merged step//;
	        :Alert "Sucess";
	        stop
	        @enduml
	
	        [Ref. QA-6105]
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.7_While_loop " While loop"
	You can use while and end while keywords to have repeat loops.
	
	@startuml
	
	start
	
	while (data available?)
	        :read data;
	        :generate diagrams;
	endwhile
	
	stop
	
	@enduml
	
	It is possible to provide a label after the endwhile keyword, or using the is keyword.
	
	@startuml
	while (check filesize ?) is (not empty)
	        :read file;
	endwhile (empty)
	:close file;
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.8_Parallel_processing " Parallel processing"
	You can use fork, fork again and end fork keywords to denote parallel processing.
	
	@startuml
	
	start
	
	if (multiprocessor?) then (yes)
	        fork
	                :Treatment 1;
	        fork again
	                :Treatment 2;
	        end fork
	else (monoproc)
	        :Treatment 1;
	        :Treatment 2;
	endif
	
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.9.1_Split " Split"
	You can use split, split again and end split keywords to denote split processing.
	
	@startuml
	start
	split
	        :A;
	split again
	        :B;
	split again
	        :C;
	split again
	        :a;
	        :b;
	end split
	:D;
	end
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.9.2_Input_split " Input split (multi-start)"
	You can use hidden arrows to make an input split (multi-start):
	
	@startuml
	split
	        -[hidden]->
	        :A;
	split again
	        -[hidden]->
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.9.3_Output_split " Output split (multi-end)"
	You can use kill or detach to make an output split (multi-end):
	
	@startuml
	start
	split
	        :A;
	        kill
	split again
	        :B;
	        detach
	split again
	        :C;
	        kill
	end split
	@enduml
	
	@startuml
	start
	split
	        :A;
	        kill
	split again
	        :b;
	        :c;
	        detach
	split again
	        (Z)
	        detach
	split again
	end
	split again
	stop
	end split
	@enduml
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6.9_Split_processing " Split processing"
	
snippet 6_ACTIVITY_DIAGRAM_(NEW)_6_Activity_Diagram " ACTIVITY DIAGRAM (NEW)"
	
	6 Activity Diagram (new)
	Old syntax for activity diagram had several limitations and drawbacks (for example, it’s diﬀicult to
	maintain).
	So a completely new syntax and implementation is now available to users. Another advantage of this
	implementation is that it’s done without the need of having Graphviz installed (as for sequence diagrams).
	This syntax will replace the old legacy one. However, for compatibility reason, the old syntax will still
	be recognized, to ensure ascending compatibility.
	Users are simply encouraged to migrate to the new syntax.
	
snippet 7_COMPONENT_DIAGRAM_7.10_Long_description " Long description"
	It is possible to put description on several lines using square brackets.
	
	@startuml
	component comp1 [
	This component
	has a long comment
	on several lines
	]
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.11_Individual_colors " Individual colors"
	You can specify a color after component definition.
	
	@startuml
	component [Web Server] #Yellow
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.12_Using_Sprite_in_Stereotype " Using Sprite in Stereotype"
	
	You can use sprites within stereotype components.
	
	@startuml
	sprite $businessProcess [16x16/16] {
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFF0FFFFF
	        FFFFFFFFFF00FFFF
	        FF00000000000FFF
	        FF000000000000FF
	        FF00000000000FFF
	        FFFFFFFFFF00FFFF
	        FFFFFFFFFF0FFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	        FFFFFFFFFFFFFFFF
	}
	
	rectangle " End to End\nbusiness process" <<$businessProcess>> {
	        rectangle "inner process 1" <<$businessProcess>> as src
	        rectangle "inner process 2" <<$businessProcess>> as tgt
	        src -> tgt
	}
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.13_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command :
	• In the diagram definition, like any other commands;
	• In an included file;
	• In a configuration file, provided in the command line or the Ant task.
	You can define specific color and fonts for stereotyped components and interfaces.
	
	@startuml
	
	skinparam interface {
	        backgroundColor RosyBrown
	        borderColor orange
	}
	
	skinparam component {
	        FontSize 13
	        BackgroundColor<<Apache>> Red
	        BorderColor<<Apache>> #FF6655
	        FontName Courier
	        BorderColor black
	        BackgroundColor gold
	        ArrowFontName Impact
	        ArrowColor #FF6655
	        ArrowFontColor #777777
	}
	
	() "Data Access" as DA
	
	DA - [First Component]
	[First Component] ..> () HTTP : use
	HTTP - [Web Server] << Apache >>
	
	@enduml
	
	@startuml
	[AA] <<static lib>>
	[BB] <<shared lib>>
	[CC] <<static lib>>
	
	node node1
	node node2 <<shared node>>
	database Production
	
	skinparam component {
	        backgroundColor<<static lib>> DarkKhaki
	        backgroundColor<<shared lib>> Green
	}
	
	skinparam node {
	        borderColor Green
	        backgroundColor Yellow
	        backgroundColor<<shared node>> Magenta
	}
	skinparam databaseBackgroundColor Aqua
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.14.1_componentStyle " componentStyle"
	• By default (or with skinparam componentStyle uml2), you have an icon for component
	
	@startuml
	skinparam BackgroundColor transparent
	skinparam componentStyle uml2
	component A {
	        component "A.1" {
	        }
	        component A.44 {
	                [A4.1]
	
	        }
	
	        component "A.2"
	        [A.3]
	        component A.5 [
	        A.5]
	        component A.6 [
	        ]
	}
	[a]->[b]
	@enduml
	
	• If you want to suppress it, and to have only the rectangle, you can use skinparam componentStyle
	rectangle
	
	@startuml
	skinparam BackgroundColor transparent
	skinparam componentStyle rectangle
	component A {
	        component "A.1" {
	        }
	        component A.44 {
	                [A4.1]
	        }
	        component "A.2"
	        [A.3]
	        component A.5 [
	        A.5]
	        component A.6 [
	        ]
	}
	[a]->[b]
	@enduml
	
	[Ref. 10798]
	
snippet 7_COMPONENT_DIAGRAM_7.14_Specific_SkinParameter " Specific SkinParameter"
	
snippet 7_COMPONENT_DIAGRAM_7.15_Hide_or_Remove_unlinked_component " Hide or Remove unlinked component"
	By default, all components are displayed:
	
	@startuml
	component C1
	component C2
	component C3
	C1 -- C2
	@enduml
	
	But you can:
	• hide @unlinked components:
	
	@startuml
	component C1
	component C2
	component C3
	C1 -- C2
	
	hide @unlinked
	@enduml
	
	• or remove @unlinked components:
	
	@startuml
	component C1
	component C2
	component C3
	C1 -- C2
	
	remove @unlinked
	@enduml
	
	[Ref. QA-11052]
	
snippet 7_COMPONENT_DIAGRAM_7.1_Components " Components"
	Components must be bracketed.
	You can also use the component keyword to define a component. And you can define an alias, using the
	as keyword. This alias will be used later, when defining relations.
	
	@startuml
	
	[First component]
	[Another component] as Comp2
	component Comp3
	component [Last\ncomponent] as Comp4
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.2_Interfaces " Interfaces"
	Interface can be defined using the () symbol (because this looks like a circle).
	You can also use the interface keyword to define an interface. And you can define an alias, using the
	as keyword. This alias will be used latter, when defining relations.
	We will see latter that interface definition is optional.
	
	@startuml
	
	() "First Interface"
	() "Another interface" as Interf2
	interface Interf3
	interface "Last\ninterface" as Interf4
	
	[component]
	footer //Adding "component" to force diagram to be a **component diagram**//
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.3_Basic_example " Basic example"
	Links between elements are made using combinations of dotted line (..), straight line (--), and arrows
	(-->) symbols.
	
	@startuml
	
	DataAccess - [First Component]
	[First Component] ..> HTTP : use
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.4_Using_notes " Using notes"
	You can use the note left of , note right of , note top of , note bottom of keywords to define
	notes related to a single object.
	A note can be also define alone with the note keywords, then linked to other objects using the .. symbol.
	
	@startuml
	
	interface "Data Access" as DA
	
	DA - [First Component]
	[First Component] ..> HTTP : use
	
	note left of HTTP : Web Service only
	
	note right of [First Component]
	        A note can also
	        be on several lines
	end note
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.5_Grouping_Components " Grouping Components"
	You can use several keywords to group components and interfaces together:
	
	• package
	• node
	• folder
	• frame
	• cloud
	• database
	
	@startuml
	
	package "Some Group" {
	        HTTP - [First Component]
	        [Another Component]
	}
	
	node "Other Groups" {
	        FTP - [Second Component]
	        [First Component] --> FTP
	}
	
	cloud {
	        [Example 1]
	}
	
	database "MySql" {
	        folder "This is my folder" {
	                [Folder 3]
	        }
	        frame "Foo" {
	                [Frame 4]
	        }
	}
	
	[Another Component] --> [Example 1]
	[Example 1] --> [Folder 3]
	[Folder 3] --> [Frame 4]
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.6_Changing_arrows_direction " Changing arrows direction"
	By default, links between classes have two dashes -- and are vertically oriented. It is possible to use
	horizontal link by putting a single dash (or dot) like this:
	
	@startuml
	[Component] --> Interface1
	[Component] -> Interface2
	@enduml
	
	You can also change directions by reversing the link:
	
	@startuml
	Interface1 <-- [Component]
	Interface2 <- [Component]
	@enduml
	
	It is also possible to change arrow direction by adding left, right, up or down keywords inside the arrow:
	
	@startuml
	[Component] -left-> left
	[Component] -right-> right
	[Component] -up-> up
	[Component] -down-> down
	@enduml
	
	You can shorten the arrow by using only the first character of the direction (for example, -d- instead of
	-down-) or the two first characters (-do-).
	Please note that you should not abuse this functionality : Graphviz gives usually good results without
	tweaking.
	And with the left to right direction parameter:
	
	@startuml
	left to right direction
	[Component] -left-> left
	[Component] -right-> right
	[Component] -up-> up
	[Component] -down-> down
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.7_Use_UML2_notation " Use UML2 notation"
	By default (from v1.2020.13-14), UML2 notation is used.
	
	@startuml
	
	interface "Data Access" as DA
	
	DA - [First Component]
	[First Component] ..> HTTP : use
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.8_Use_UML1_notation " Use UML1 notation"
	The skinparam componentStyle uml1 command is used to switch to UML1 notation.
	
	@startuml
	skinparam componentStyle uml1
	
	interface "Data Access" as DA
	
	DA - [First Component]
	[First Component] ..> HTTP : use
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7.9_Use_rectangle_notation " Use rectangle notation (remove UML notation)"
	The skinparam componentStyle rectangle command is used to switch to rectangle notation (without
	any UML notation).
	
	@startuml
	skinparam componentStyle rectangle
	
	interface "Data Access" as DA
	
	DA - [First Component]
	[First Component] ..> HTTP : use
	
	@enduml
	
snippet 7_COMPONENT_DIAGRAM_7_Component_Diagram " COMPONENT DIAGRAM"
	
	7 Component Diagram
	Let’s have few examples.
	
snippet 8_DEPLOYMENT_DIAGRAM_8.10_Round_corner " Round corner"
	
	@startuml
	skinparam rectangle {
	        roundCorner<<Concept>> 25
	}
	
	rectangle "Concept Model" <<Concept>> {
	        rectangle "Example 1" <<Concept>> as ex1
	        rectangle "Another rectangle"
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.11.1_roundCorner " roundCorner"
	
	@startuml
	skinparam roundCorner 15
	actor actor
	agent agent
	
	artifact artifact
	boundary boundary
	card card
	circle circle
	cloud cloud
	collections collections
	component component
	control control
	database database
	entity entity
	file file
	folder folder
	frame frame
	hexagon hexagon
	interface interface
	label label
	node node
	package package
	queue queue
	rectangle rectangle
	stack stack
	storage storage
	usecase usecase
	@enduml
	
	[Ref. QA-5299, QA-6915, QA-11943]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.11_Specific_SkinParameter " Specific SkinParameter"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.12_Appendix_All_type_of_arrow_line " Appendix: All type of arrow line"
	
	@startuml
	left to right direction
	
	skinparam nodesep 5
	
	f3 ~~ b3 : ""~~""\n//dotted//
	f2 .. b2 : ""..""\n//dashed//
	f1 == b1 : ""==""\n//bold//
	f0 -- b0 : ""--""\n//plain//
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.13.1_Type_of_arrow_head " Type of arrow head"
	
	@startuml
	left to right direction
	skinparam nodesep 5
	
	f13 --0 b13 : ""--0""
	f12 --@ b12 : ""--@""
	f11 --:|> b11 : ""--:|>""
	f10 --||> b10 : ""--||>""
	f9 --|> b9 : ""--|>""
	f8 --^ b8 : ""--^ ""
	f7 --\\ b7 : ""--\\\\""
	f6 --# b6 : ""--# ""
	f5 --+ b5 : ""--+ ""
	f4 --o b4 : ""--o ""
	f3 --* b3 : ""--* ""
	f2 -->> b2 : ""-->>""
	f1 --> b1 : ""--> ""
	f0 -- b0 : ""-- ""
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.13.2_Type_of_0_arrow_or_circle_arrow " Type of ’0’ arrow or circle arrow"
	
	@startuml
	left to right direction
	skinparam nodesep 5
	
	f10 0--0 b10 : "" 0--0 ""
	f9 )--( b9 : "" )--(""
	f8 0)--(0 b8 : "" 0)--(0""
	f7 0)-- b7 : "" 0)-- ""
	f6 -0)- b6 : "" -0)-\n ""
	f5 -(0)- b5 : "" -(0)-\n""
	f4 -(0- b4 : "" -(0-\n ""
	f3 --(0 b3 : "" --(0 ""
	f2 --( b2 : "" --( ""
	f1 --0 b1 : "" --0 ""
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.13_Appendix_All_type_of_arrow_head_or_’0’_arrow " Appendix: All type of arrow head or ’0’ arrow"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.14.1_Simple_element " Simple element"
	
	@startuml
	actor actor #aliceblue;line:blue;line.dotted;text:blue
	actor/ "actor/" #aliceblue;line:blue;line.dotted;text:blue
	agent agent #aliceblue;line:blue;line.dotted;text:blue
	artifact artifact #aliceblue;line:blue;line.dotted;text:blue
	boundary boundary #aliceblue;line:blue;line.dotted;text:blue
	card card #aliceblue;line:blue;line.dotted;text:blue
	circle circle #aliceblue;line:blue;line.dotted;text:blue
	cloud cloud #aliceblue;line:blue;line.dotted;text:blue
	collections collections #aliceblue;line:blue;line.dotted;text:blue
	component component #aliceblue;line:blue;line.dotted;text:blue
	control control #aliceblue;line:blue;line.dotted;text:blue
	database database #aliceblue;line:blue;line.dotted;text:blue
	entity entity #aliceblue;line:blue;line.dotted;text:blue
	file file #aliceblue;line:blue;line.dotted;text:blue
	folder folder #aliceblue;line:blue;line.dotted;text:blue
	frame frame #aliceblue;line:blue;line.dotted;text:blue
	hexagon hexagon #aliceblue;line:blue;line.dotted;text:blue
	interface interface #aliceblue;line:blue;line.dotted;text:blue
	label label #aliceblue;line:blue;line.dotted;text:blue
	node node #aliceblue;line:blue;line.dotted;text:blue
	package package #aliceblue;line:blue;line.dotted;text:blue
	queue queue #aliceblue;line:blue;line.dotted;text:blue
	rectangle rectangle #aliceblue;line:blue;line.dotted;text:blue
	stack stack #aliceblue;line:blue;line.dotted;text:blue
	storage storage #aliceblue;line:blue;line.dotted;text:blue
	usecase usecase #aliceblue;line:blue;line.dotted;text:blue
	usecase/ "usecase/" #aliceblue;line:blue;line.dotted;text:blue
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.14.2_Nested_element " Nested element"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.14.3_Without_sub-element " Without sub-element"
	
	@startuml
	artifact artifact #aliceblue;line:blue;line.dotted;text:blue {
	}
	card card #aliceblue;line:blue;line.dotted;text:blue {
	}
	cloud cloud #aliceblue;line:blue;line.dotted;text:blue {
	}
	component component #aliceblue;line:blue;line.dotted;text:blue {
	}
	database database #aliceblue;line:blue;line.dotted;text:blue {
	}
	file file #aliceblue;line:blue;line.dotted;text:blue {
	}
	folder folder #aliceblue;line:blue;line.dotted;text:blue {
	}
	frame frame #aliceblue;line:blue;line.dotted;text:blue {
	}
	hexagon hexagon #aliceblue;line:blue;line.dotted;text:blue {
	}
	node node #aliceblue;line:blue;line.dotted;text:blue {
	}
	package package #aliceblue;line:blue;line.dotted;text:blue {
	}
	queue queue #aliceblue;line:blue;line.dotted;text:blue {
	}
	rectangle rectangle #aliceblue;line:blue;line.dotted;text:blue {
	}
	stack stack #aliceblue;line:blue;line.dotted;text:blue {
	}
	storage storage #aliceblue;line:blue;line.dotted;text:blue {
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.14.4_With_sub-element " With sub-element"
	
	@startuml
	artifact artifactVeryLOOOOOOOOOOOOOOOOOOOg as "artifact" #aliceblue;line:blue;line.dotted;text:blue {
	file f1
	}
	card cardVeryLOOOOOOOOOOOOOOOOOOOg as "card" #aliceblue;line:blue;line.dotted;text:blue {
	file f2
	}
	cloud cloudVeryLOOOOOOOOOOOOOOOOOOOg as "cloud" #aliceblue;line:blue;line.dotted;text:blue {
	file f3
	}
	component componentVeryLOOOOOOOOOOOOOOOOOOOg as "component" #aliceblue;line:blue;line.dotted;text:blue {
	file f4
	}
	database databaseVeryLOOOOOOOOOOOOOOOOOOOg as "database" #aliceblue;line:blue;line.dotted;text:blue {
	file f5
	}
	file fileVeryLOOOOOOOOOOOOOOOOOOOg as "file" #aliceblue;line:blue;line.dotted;text:blue {
	file f6
	}
	folder folderVeryLOOOOOOOOOOOOOOOOOOOg as "folder" #aliceblue;line:blue;line.dotted;text:blue {
	file f7
	}
	frame frameVeryLOOOOOOOOOOOOOOOOOOOg as "frame" #aliceblue;line:blue;line.dotted;text:blue {
	file f8
	}
	hexagon hexagonVeryLOOOOOOOOOOOOOOOOOOOg as "hexagon" #aliceblue;line:blue;line.dotted;text:blue {
	file f9
	}
	node nodeVeryLOOOOOOOOOOOOOOOOOOOg as "node" #aliceblue;line:blue;line.dotted;text:blue {
	file f10
	}
	package packageVeryLOOOOOOOOOOOOOOOOOOOg as "package" #aliceblue;line:blue;line.dotted;text:blue {
	file f11
	
snippet 8_DEPLOYMENT_DIAGRAM_8.14_Appendix_Test_of_inline_style_on_all_element " Appendix: Test of inline style on all element"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.1_Simple_element " Simple element"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.2_Global_style " Global style (on componentDiagram)"
	
	@startuml
	<style>
	componentDiagram {
	        BackGroundColor palegreen
	        LineThickness 1
	        LineColor red
	}
	</style>
	actor actor
	actor/ "actor/"
	agent agent
	artifact artifact
	boundary boundary
	card card
	circle circle
	cloud cloud
	collections collections
	component component
	control control
	database database
	entity entity
	file file
	folder folder
	frame frame
	hexagon hexagon
	interface interface
	label label
	node node
	package package
	queue queue
	rectangle rectangle
	stack stack
	storage storage
	usecase usecase
	usecase/ "usecase/"
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.3_Style_for_each_element " Style for each element"
	
	@startuml
	<style>
	actor {
	        BackGroundColor #f80c12
	        LineThickness 1
	        LineColor black
	}
	agent {
	        BackGroundColor #f80c12
	        LineThickness 1
	        LineColor black
	}
	artifact {
	        BackGroundColor #ee1100
	        LineThickness 1
	        LineColor black
	}
	boundary {
	        BackGroundColor #ee1100
	        LineThickness 1
	        LineColor black
	}
	card {
	        BackGroundColor #ff3311
	        LineThickness 1
	
	        LineColor black
	
	}
	circle {
	        BackGroundColor #ff3311
	        LineThickness 1
	        LineColor black
	}
	cloud {
	        BackGroundColor #ff4422
	        LineThickness 1
	        LineColor black
	}
	collections {
	        BackGroundColor #ff4422
	        LineThickness 1
	        LineColor black
	}
	component {
	        BackGroundColor #ff6644
	        LineThickness 1
	        LineColor black
	}
	control {
	        BackGroundColor #ff6644
	        LineThickness 1
	        LineColor black
	}
	database {
	        BackGroundColor #ff9933
	        LineThickness 1
	        LineColor black
	}
	entity {
	        BackGroundColor #feae2d
	        LineThickness 1
	        LineColor black
	}
	file {
	        BackGroundColor #feae2d
	        LineThickness 1
	        LineColor black
	}
	folder {
	        BackGroundColor #ccbb33
	        LineThickness 1
	        LineColor black
	}
	frame {
	        BackGroundColor #d0c310
	        LineThickness 1
	        LineColor black
	}
	hexagon {
	        BackGroundColor #aacc22
	        LineThickness 1
	        LineColor black
	}
	interface {
	
	        BackGroundColor #69d025
	        LineThickness 1
	        LineColor black
	
	}
	label {
	        BackGroundColor black
	        LineThickness 1
	        LineColor black
	}
	node {
	        BackGroundColor #22ccaa
	        LineThickness 1
	        LineColor black
	}
	package {
	        BackGroundColor #12bdb9
	        LineThickness 1
	        LineColor black
	}
	queue {
	        BackGroundColor #11aabb
	        LineThickness 1
	        LineColor black
	}
	rectangle {
	        BackGroundColor #4444dd
	        LineThickness 1
	        LineColor black
	}
	stack {
	        BackGroundColor #3311bb
	        LineThickness 1
	        LineColor black
	}
	storage {
	        BackGroundColor #3b0cbd
	        LineThickness 1
	        LineColor black
	}
	usecase {
	        BackGroundColor #442299
	        LineThickness 1
	        LineColor black
	}
	</style>
	actor actor
	actor/ "actor/"
	agent agent
	artifact artifact
	boundary boundary
	card card
	circle circle
	cloud cloud
	collections collections
	component component
	control control
	database database
	entity entity
	file file
	folder folder
	frame frame
	hexagon hexagon
	interface interface
	label label
	node node
	package package
	queue queue
	rectangle rectangle
	stack stack
	storage storage
	usecase usecase
	usecase/ "usecase/"
	@enduml
	
	[Ref. QA-13261]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.4_Nested_element " Nested element (without level)"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.5_Global_style " Global style (on componentDiagram)"
	
	@startuml
	<style>
	componentDiagram {
	BackGroundColor palegreen
	LineThickness 2
	LineColor red
	}
	</style>
	artifact artifact {
	}
	
	card card {
	}
	cloud cloud {
	}
	component component {
	}
	database database {
	}
	file file {
	}
	folder folder {
	}
	frame frame {
	}
	hexagon hexagon {
	}
	node node {
	}
	package package {
	}
	queue queue {
	}
	rectangle rectangle {
	}
	stack stack {
	}
	storage storage {
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.6_Style_for_each_nested_element " Style for each nested element"
	
	@startuml
	<style>
	artifact {
	        BackGroundColor #ee1100
	        LineThickness 1
	        LineColor black
	}
	card {
	        BackGroundColor #ff3311
	        LineThickness 1
	        LineColor black
	}
	cloud {
	        BackGroundColor #ff4422
	        LineThickness 1
	        LineColor black
	}
	component {
	        BackGroundColor #ff6644
	        LineThickness 1
	        LineColor black
	}
	database {
	
	        BackGroundColor #ff9933
	        LineThickness 1
	        LineColor black
	
	}
	file {
	        BackGroundColor #feae2d
	        LineThickness 1
	        LineColor black
	}
	folder {
	        BackGroundColor #ccbb33
	        LineThickness 1
	        LineColor black
	}
	frame {
	        BackGroundColor #d0c310
	        LineThickness 1
	        LineColor black
	}
	hexagon {
	        BackGroundColor #aacc22
	        LineThickness 1
	        LineColor black
	}
	node {
	        BackGroundColor #22ccaa
	        LineThickness 1
	        LineColor black
	}
	package {
	        BackGroundColor #12bdb9
	        LineThickness 1
	        LineColor black
	}
	queue {
	        BackGroundColor #11aabb
	        LineThickness 1
	        LineColor black
	}
	rectangle {
	        BackGroundColor #4444dd
	        LineThickness 1
	        LineColor black
	}
	stack {
	        BackGroundColor #3311bb
	        LineThickness 1
	        LineColor black
	}
	storage {
	        BackGroundColor #3b0cbd
	        LineThickness 1
	        LineColor black
	}
	
	</style>
	artifact artifact {
	}
	
	card card {
	}
	cloud cloud {
	}
	component component {
	}
	database database {
	}
	file file {
	}
	folder folder {
	}
	frame frame {
	}
	hexagon hexagon {
	}
	node node {
	}
	package package {
	}
	queue queue {
	}
	rectangle rectangle {
	}
	stack stack {
	}
	storage storage {
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.7_Nested_element " Nested element (with one level)"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.8_Global_style " Global style (on componentDiagram)"
	
	@startuml
	<style>
	componentDiagram {
	        BackGroundColor palegreen
	        LineThickness 1
	        LineColor red
	}
	</style>
	artifact e1 as "artifact" {
	        file f1
	}
	card e2 as "card" {
	        file f2
	}
	cloud e3 as "cloud" {
	        file f3
	}
	component e4 as "component" {
	        file f4
	}
	database e5 as "database" {
	        file f5
	}
	file e6 as "file" {
	        file f6
	}
	folder e7 as "folder" {
	        file f7
	}
	frame e8 as "frame" {
	        file f8
	}
	hexagon e9 as "hexagon" {
	        file f9
	}
	node e10 as "node" {
	        file f10
	}
	package e11 as "package" {
	        file f11
	}
	queue e12 as "queue" {
	        file f12
	}
	rectangle e13 as "rectangle" {
	        file f13
	}
	stack e14 as "stack" {
	        file f14
	}
	storage e15 as "storage" {
	        file f15
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.15.9_Style_for_each_nested_element " Style for each nested element"
	
	@startuml
	<style>
	artifact {
	        BackGroundColor #ee1100
	        LineThickness 1
	        LineColor black
	}
	card {
	        BackGroundColor #ff3311
	        LineThickness 1
	        LineColor black
	}
	cloud {
	        BackGroundColor #ff4422
	        LineThickness 1
	        LineColor black
	}
	component {
	        BackGroundColor #ff6644
	        LineThickness 1
	        LineColor black
	
	}
	database {
	        BackGroundColor #ff9933
	        LineThickness 1
	        LineColor black
	}
	file {
	        BackGroundColor #feae2d
	        LineThickness 1
	        LineColor black
	}
	folder {
	        BackGroundColor #ccbb33
	        LineThickness 1
	        LineColor black
	}
	frame {
	        BackGroundColor #d0c310
	        LineThickness 1
	        LineColor black
	}
	hexagon {
	        BackGroundColor #aacc22
	        LineThickness 1
	        LineColor black
	}
	node {
	        BackGroundColor #22ccaa
	        LineThickness 1
	        LineColor black
	}
	package {
	        BackGroundColor #12bdb9
	        LineThickness 1
	        LineColor black
	}
	queue {
	        BackGroundColor #11aabb
	        LineThickness 1
	        LineColor black
	}
	rectangle {
	        BackGroundColor #4444dd
	        LineThickness 1
	        LineColor black
	}
	stack {
	        BackGroundColor #3311bb
	        LineThickness 1
	        LineColor black
	}
	storage {
	        BackGroundColor #3b0cbd
	        LineThickness 1
	        LineColor black
	}
	</style>
	artifact e1 as "artifact" {
	        file f1
	}
	card e2 as "card" {
	        file f2
	}
	cloud e3 as "cloud" {
	        file f3
	}
	component e4 as "component" {
	        file f4
	}
	database e5 as "database" {
	        file f5
	}
	file e6 as "file" {
	        file f6
	}
	folder e7 as "folder" {
	        file f7
	}
	frame e8 as "frame" {
	        file f8
	}
	hexagon e9 as "hexagon" {
	        file f9
	}
	node e10 as "node" {
	        file f10
	}
	package e11 as "package" {
	        file f11
	}
	queue e12 as "queue" {
	        file f12
	}
	rectangle e13 as "rectangle" {
	        file f13
	}
	stack e14 as "stack" {
	        file f14
	}
	storage e15 as "storage" {
	        file f15
	}
	@enduml
snippet 8_DEPLOYMENT_DIAGRAM_8.15_Appendix_Test_of_style_on_all_element " Appendix: Test of style on all element 8 DEPLOYMENT DIAGRAM"
	
	}
	queue queueVeryLOOOOOOOOOOOOOOOOOOOg as "queue" #aliceblue;line:blue;line.dotted;text:blue {
	file f12
	}
	rectangle rectangleVeryLOOOOOOOOOOOOOOOOOOOg as "rectangle" #aliceblue;line:blue;line.dotted;text:blue {
	file f13
	}
	stack stackVeryLOOOOOOOOOOOOOOOOOOOg as "stack" #aliceblue;line:blue;line.dotted;text:blue {
	file f14
	}
	storage storageVeryLOOOOOOOOOOOOOOOOOOOg as "storage" #aliceblue;line:blue;line.dotted;text:blue {
	file f15
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.1_Declaring_element " Declaring element"
	
	@startuml
	actor actor
	actor/ "actor/"
	agent agent
	artifact artifact
	boundary boundary
	card card
	circle circle
	cloud cloud
	collections collections
	component component
	control control
	database database
	entity entity
	file file
	folder folder
	frame frame
	hexagon hexagon
	interface interface
	label label
	node node
	package package
	queue queue
	rectangle rectangle
	stack stack
	storage storage
	usecase usecase
	usecase/ "usecase/"
	@enduml
	
	You can optionaly put text using bracket [] for a long description.
	
	@startuml
	folder folder [
	This is a <b>folder
	----
	You can use separator
	====
	of different kind
	....
	and style
	]
	
	node node [
	This is a <b>node
	----
	You can use separator
	====
	of different kind
	....
	and style
	]
	
	database database [
	This is a <b>database
	----
	You can use separator
	====
	of different kind
	....
	and style
	
	]
	
	usecase usecase [
	This is a <b>usecase
	----
	You can use separator
	====
	of different kind
	....
	and style
	]
	
	card card [
	This is a <b>card
	----
	You can use separator
	====
	of different kind
	....
	and style
	<i><color:blue>(add from V1.2020.7)</color></i>
	]
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.2.1_Actor " Actor"
	
	@startuml
	
	actor actor1
	:actor2:
	
	@enduml
	
	NB: There is an old syntax for actor with guillemet which is now deprecated and will be removed some
	days. Please do not use in your diagram.
	
snippet 8_DEPLOYMENT_DIAGRAM_8.2.2_Component " Component"
	
	@startuml
	
	component component1
	[component2]
	
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.2.3_Interface " Interface"
	
	@startuml
	
	interface interface1
	() "interface2"
	
	label "//interface example//"
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.2.4_Usecase " Usecase"
	
	@startuml
	
	usecase usecase1
	(usecase2)
	
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.2_Declaring_element " Declaring element (using short form)"
	We can declare element using some short forms.
	Long form Keyword Short form Keyword Long form example Short form example Ref.
	actor : a : actor actor1 :actor2: Actors
	component [ c ] component component1 [component2] Components
	interface () i interface interface1 () "interface2" Interfaces
	usecase ( u ) usecase usecase1 (usecase2) Usecases
	
snippet 8_DEPLOYMENT_DIAGRAM_8.3_Linking_or_arrow " Linking or arrow"
	You can create simple links between elements with or without labels:
	
	@startuml
	
	node node1
	node node2
	node node3
	
	node node4
	node node5
	node1 -- node2 : label1
	node1 .. node3 : label2
	node1 ~~ node4 : label3
	node1 == node5
	
	@enduml
	
	It is possible to use several types of links:
	
	@startuml
	
	artifact artifact1
	artifact artifact2
	artifact artifact3
	artifact artifact4
	artifact artifact5
	artifact artifact6
	artifact artifact7
	artifact artifact8
	artifact artifact9
	artifact artifact10
	artifact1 --> artifact2
	artifact1 --* artifact3
	artifact1 --o artifact4
	artifact1 --+ artifact5
	artifact1 --# artifact6
	artifact1 -->> artifact7
	artifact1 --0 artifact8
	artifact1 --^ artifact9
	artifact1 --(0 artifact10
	
	@enduml
	
	You can also have the following types:
	
	@startuml
	
	cloud cloud1
	cloud cloud2
	cloud cloud3
	
	cloud cloud4
	cloud cloud5
	cloud1 -0- cloud2
	cloud1 -0)- cloud3
	cloud1 -(0- cloud4
	cloud1 -(0)- cloud5
	
	@enduml
	
	or another example:
	
	@startuml
	actor foo1
	actor foo2
	foo1 <-0-> foo2
	foo1 <-(0)-> foo2
	
	(ac1) -le(0)-> left1
	ac1 -ri(0)-> right1
	ac1 .up(0).> up1
	ac1 ~up(0)~> up2
	ac1 -do(0)-> down1
	ac1 -do(0)-> down2
	
	actor1 -0)- actor2
	
	component comp1
	component comp2
	comp1 *-0)-+ comp2
	[comp3] <-->> [comp4]
	@enduml
	
	[Ref. QA-1736]
	￿ See all type on Appendix.
	
snippet 8_DEPLOYMENT_DIAGRAM_8.4.1_Line_style " Line style"
	It’s also possible to have explicitly bold, dashed, dotted, hidden or plain arrows:
	
	• without label
	
	@startuml
	node foo
	title Bracketed line style without label
	foo --> bar
	foo -[bold]-> bar1
	foo -[dashed]-> bar2
	foo -[dotted]-> bar3
	foo -[hidden]-> bar4
	foo -[plain]-> bar5
	@enduml
	
	• with label
	
	@startuml
	title Bracketed line style with label
	node foo
	
	foo --> bar : ￿
	foo -[bold]-> bar1 : [bold]
	foo -[dashed]-> bar2 : [dashed]
	foo -[dotted]-> bar3 : [dotted]
	foo -[hidden]-> bar4 : [hidden]
	foo -[plain]-> bar5 : [plain]
	@enduml
	
	[Adapted from QA-4181]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.4.2_Line_color " Line color"
	
	@startuml
	title Bracketed line color
	node foo
	foo --> bar
	foo -[#red]-> bar1 : [#red]
	foo -[#green]-> bar2 : [#green]
	foo -[#blue]-> bar3 : [#blue]
	foo -[#blue;#yellow;#green]-> bar4
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.4.3_Line_thickness " Line thickness"
	
	@startuml
	title Bracketed line thickness
	node foo
	foo --> bar : ￿
	foo -[thickness=1]-> bar1 : [1]
	foo -[thickness=2]-> bar2 : [2]
	foo -[thickness=4]-> bar3 : [4]
	foo -[thickness=8]-> bar4 : [8]
	foo -[thickness=16]-> bar5 : [16]
	@enduml
	
	[Adapted from QA-4949]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.4.4_Mix " Mix"
	
	@startuml
	title Bracketed line style mix
	node foo
	foo --> bar : ￿
	foo -[#red,thickness=1]-> bar1 : [#red,1]
	foo -[#red,dashed,thickness=2]-> bar2 : [#red,dashed,2]
	foo -[#green,dashed,thickness=4]-> bar3 : [#green,dashed,4]
	foo -[#blue,dotted,thickness=8]-> bar4 : [blue,dotted,8]
	foo -[#blue,plain,thickness=16]-> bar5 : [blue,plain,16]
	foo -[#blue;#green,dashed,thickness=4]-> bar6 : [blue;green,dashed,4]
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.4_Bracketed_arrow_style " Bracketed arrow style"
	Similar as Bracketed class relations (linking or arrow) style
	
snippet 8_DEPLOYMENT_DIAGRAM_8.5_Change_arrow_color_and_style " Change arrow color and style (inline style)"
	You can change the color or style of individual arrows using the inline following notation:
	• #color;line.[bold|dashed|dotted];text:color
	
	@startuml
	node foo
	foo --> bar : normal
	foo --> bar1 #line:red;line.bold;text:red : red bold
	foo --> bar2 #green;line.dashed;text:green : green dashed
	foo --> bar3 #blue;line.dotted;text:blue : blue dotted
	@enduml
	
	[Ref. QA-3770 and QA-3816] [See similar feature on class diagram]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.6_Change_element_color_and_style " Change element color and style (inline style)"
	You can change the color or style of individual element using the following notation:
	• #[color|back:color];line:color;line.[bold|dashed|dotted];text:color
	
	@startuml
	agent a
	cloud c #pink;line:red;line.bold;text:red
	file f #palegreen;line:green;line.dashed;text:green
	node n #aliceblue;line:blue;line.dotted;text:blue
	@enduml
	
	@startuml
	agent a
	cloud c #pink;line:red;line.bold;text:red [
	c
	cloud description
	]
	file f #palegreen;line:green;line.dashed;text:green {
	        [c1]
	        [c2]
	}
	frame frame {
	        node n #aliceblue;line:blue;line.dotted;text:blue
	}
	@enduml
	
	[Ref. QA-6852]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.7_Nestable_elements " Nestable elements"
	Here are the nestable elements:
	
	@startuml
	artifact artifact {
	}
	card card {
	}
	cloud cloud {
	}
	component component {
	}
	database database {
	}
	file file {
	}
	folder folder {
	}
	frame frame {
	}
	hexagon hexagon {
	}
	node node {
	}
	package package {
	}
	queue queue {
	}
	rectangle rectangle {
	}
	stack stack {
	}
	storage storage {
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.8.1_Example_with_one_level " Example with one level"
	
	@startuml
	artifact artifactVeryLOOOOOOOOOOOOOOOOOOOg as "artifact" {
	        file f1
	}
	card cardVeryLOOOOOOOOOOOOOOOOOOOg as "card" {
	        file f2
	}
	cloud cloudVeryLOOOOOOOOOOOOOOOOOOOg as "cloud" {
	        file f3
	}
	component componentVeryLOOOOOOOOOOOOOOOOOOOg as "component" {
	        file f4
	}
	database databaseVeryLOOOOOOOOOOOOOOOOOOOg as "database" {
	        file f5
	
	}
	file fileVeryLOOOOOOOOOOOOOOOOOOOg as "file" {
	        file f6
	}
	folder folderVeryLOOOOOOOOOOOOOOOOOOOg as "folder" {
	        file f7
	}
	frame frameVeryLOOOOOOOOOOOOOOOOOOOg as "frame" {
	        file f8
	}
	hexagon hexagonVeryLOOOOOOOOOOOOOOOOOOOg as "hexagon" {
	        file f9
	}
	node nodeVeryLOOOOOOOOOOOOOOOOOOOg as "node" {
	        file f10
	}
	package packageVeryLOOOOOOOOOOOOOOOOOOOg as "package" {
	        file f11
	}
	queue queueVeryLOOOOOOOOOOOOOOOOOOOg as "queue" {
	        file f12
	}
	rectangle rectangleVeryLOOOOOOOOOOOOOOOOOOOg as "rectangle" {
	        file f13
	}
	stack stackVeryLOOOOOOOOOOOOOOOOOOOg as "stack" {
	        file f14
	}
	storage storageVeryLOOOOOOOOOOOOOOOOOOOg as "storage" {
	        file f15
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.8.2_Other_example " Other example"
	
	@startuml
	artifact Foo1 {
	        folder Foo2
	}
	
	folder Foo3 {
	        artifact Foo4
	}
	
	frame Foo5 {
	        database Foo6
	}
	
	cloud vpc {
	        node ec2 {
	                stack stack
	        }
	}
	
	@enduml
	
	@startuml
	node Foo1 {
	        cloud Foo2
	}
	
	cloud Foo3 {
	        frame Foo4
	}
	
	database Foo5 {
	        storage Foo6
	}
	
	storage Foo7 {
	        storage Foo8
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.8.3_Full_nesting " Full nesting"
	Here is all the nested elements:
	• by alphabetical order:
	
	@startuml
	artifact artifact {
	        card card {
	                cloud cloud {
	                        component component {
	                                database database {
	                                        file file {
	                                                folder folder {
	                                                        frame frame {
	                                                                hexagon hexagon {
	                                                                        node node {
	                                                                                package package {
	                                                                                        queue queue {
	                                                                                                rectangle rectangle {
	                                                                                                        stack stack {
	                                                                                                                storage storage {
	
	                                                                                                                }
	                                                                                                        }
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	@enduml
	
	• or reverse alphabetical order
	
	@startuml
	storage storage {
	stack stack {
	rectangle rectangle {
	queue queue {
	package package {
	node node {
	hexagon hexagon {
	frame frame {
	folder folder {
	file file {
	database database {
	component component {
	cloud cloud {
	card card {
	artifact artifact {
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	}
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.8_Packages_and_nested_elements " Packages and nested elements"
	
snippet 8_DEPLOYMENT_DIAGRAM_8.9.1_Simple_alias_with_as " Simple alias with as"
	
	@startuml
	node Node1 as n1
	node "Node 2" as n2
	
	file f1 as "File 1"
	cloud c1 as "this
	is
	a
	cloud"
	cloud c2 [this
	is
	another
	cloud]
	
	n1 -> n2
	n1 --> f1
	f1 -> c1
	c1 -> c2
	@enduml
	
snippet 8_DEPLOYMENT_DIAGRAM_8.9.2_Examples_of_long_alias " Examples of long alias"
	
	@startuml
	actor "actor" as actorVeryLOOOOOOOOOOOOOOOOOOOg
	agent "agent" as agentVeryLOOOOOOOOOOOOOOOOOOOg
	artifact "artifact" as artifactVeryLOOOOOOOOOOOOOOOOOOOg
	boundary "boundary" as boundaryVeryLOOOOOOOOOOOOOOOOOOOg
	card "card" as cardVeryLOOOOOOOOOOOOOOOOOOOg
	cloud "cloud" as cloudVeryLOOOOOOOOOOOOOOOOOOOg
	collections "collections" as collectionsVeryLOOOOOOOOOOOOOOOOOOOg
	component "component" as componentVeryLOOOOOOOOOOOOOOOOOOOg
	control "control" as controlVeryLOOOOOOOOOOOOOOOOOOOg
	database "database" as databaseVeryLOOOOOOOOOOOOOOOOOOOg
	entity "entity" as entityVeryLOOOOOOOOOOOOOOOOOOOg
	file "file" as fileVeryLOOOOOOOOOOOOOOOOOOOg
	folder "folder" as folderVeryLOOOOOOOOOOOOOOOOOOOg
	frame "frame" as frameVeryLOOOOOOOOOOOOOOOOOOOg
	hexagon "hexagon" as hexagonVeryLOOOOOOOOOOOOOOOOOOOg
	interface "interface" as interfaceVeryLOOOOOOOOOOOOOOOOOOOg
	label "label" as labelVeryLOOOOOOOOOOOOOOOOOOOg
	node "node" as nodeVeryLOOOOOOOOOOOOOOOOOOOg
	package "package" as packageVeryLOOOOOOOOOOOOOOOOOOOg
	queue "queue" as queueVeryLOOOOOOOOOOOOOOOOOOOg
	stack "stack" as stackVeryLOOOOOOOOOOOOOOOOOOOg
	rectangle "rectangle" as rectangleVeryLOOOOOOOOOOOOOOOOOOOg
	storage "storage" as storageVeryLOOOOOOOOOOOOOOOOOOOg
	usecase "usecase" as usecaseVeryLOOOOOOOOOOOOOOOOOOOg
	@enduml
	
	@startuml
	actor actorVeryLOOOOOOOOOOOOOOOOOOOg as "actor"
	agent agentVeryLOOOOOOOOOOOOOOOOOOOg as "agent"
	artifact artifactVeryLOOOOOOOOOOOOOOOOOOOg as "artifact"
	boundary boundaryVeryLOOOOOOOOOOOOOOOOOOOg as "boundary"
	card cardVeryLOOOOOOOOOOOOOOOOOOOg as "card"
	cloud cloudVeryLOOOOOOOOOOOOOOOOOOOg as "cloud"
	collections collectionsVeryLOOOOOOOOOOOOOOOOOOOg as "collections"
	component componentVeryLOOOOOOOOOOOOOOOOOOOg as "component"
	control controlVeryLOOOOOOOOOOOOOOOOOOOg as "control"
	database databaseVeryLOOOOOOOOOOOOOOOOOOOg as "database"
	entity entityVeryLOOOOOOOOOOOOOOOOOOOg as "entity"
	file fileVeryLOOOOOOOOOOOOOOOOOOOg as "file"
	folder folderVeryLOOOOOOOOOOOOOOOOOOOg as "folder"
	frame frameVeryLOOOOOOOOOOOOOOOOOOOg as "frame"
	hexagon hexagonVeryLOOOOOOOOOOOOOOOOOOOg as "hexagon"
	interface interfaceVeryLOOOOOOOOOOOOOOOOOOOg as "interface"
	label labelVeryLOOOOOOOOOOOOOOOOOOOg as "label"
	node nodeVeryLOOOOOOOOOOOOOOOOOOOg as "node"
	package packageVeryLOOOOOOOOOOOOOOOOOOOg as "package"
	queue queueVeryLOOOOOOOOOOOOOOOOOOOg as "queue"
	stack stackVeryLOOOOOOOOOOOOOOOOOOOg as "stack"
	rectangle rectangleVeryLOOOOOOOOOOOOOOOOOOOg as "rectangle"
	storage storageVeryLOOOOOOOOOOOOOOOOOOOg as "storage"
	usecase usecaseVeryLOOOOOOOOOOOOOOOOOOOg as "usecase"
	@enduml
	
	[Ref. QA-12082]
	
snippet 8_DEPLOYMENT_DIAGRAM_8.9_Alias " Alias 8 DEPLOYMENT DIAGRAM"
	
	8.9 Alias
	
snippet 8_DEPLOYMENT_DIAGRAM_8_Deployment_Diagram " DEPLOYMENT DIAGRAM"
	
	8 Deployment Diagram
	
snippet 9_STATE_DIAGRAM_9.10_Point " Point [entryPoint, exitPoint]"
	You can added point with <<entryPoint>> and <<exitPoint>> stereotypes:
	
	@startuml
	state Somp {
	        state entry1 <<entryPoint>>
	        state entry2 <<entryPoint>>
	        state sin
	        entry1 --> sin
	        entry2 -> sin
	        sin -> sin2
	        sin2 --> exitA <<exitPoint>>
	
	}
	
	[*] --> entry1
	exitA --> Foo
	Foo1 -> entry2
	@enduml
	
snippet 9_STATE_DIAGRAM_9.11_Pin " Pin [inputPin, outputPin]"
	You can added pin with <<inputPin>> and <<outputPin>> stereotypes:
	
	@startuml
	state Somp {
	        state entry1 <<inputPin>>
	        state entry2 <<inputPin>>
	        state sin
	        entry1 --> sin
	        entry2 -> sin
	        sin -> sin2
	        sin2 --> exitA <<outputPin>>
	}
	
	[*] --> entry1
	exitA --> Foo
	Foo1 -> entry2
	@enduml
	
	[Ref. QA-4309]
	
snippet 9_STATE_DIAGRAM_9.12_Expansion " Expansion [expansionInput, expansionOutput]"
	You can added expansion with <<expansionInput>> and <<expansionOutput>> stereotypes:
	
	@startuml
	state Somp {
	        state entry1 <<expansionInput>>
	        state entry2 <<expansionInput>>
	        state sin
	        entry1 --> sin
	        entry2 -> sin
	        sin -> sin2
	        sin2 --> exitA <<expansionOutput>>
	}
	
	[*] --> entry1
	exitA --> Foo
	Foo1 -> entry2
	@enduml
	
	[Ref. QA-4309]
	
snippet 9_STATE_DIAGRAM_9.13_Arrow_direction " Arrow direction"
	You can use -> for horizontal arrows. It is possible to force arrow’s direction using the following syntax:
	• -down-> or -->
	• -right-> or -> (default arrow)
	• -left->
	• -up->
	
	@startuml
	
	[*] -up-> First
	First -right-> Second
	Second --> Third
	Third -left-> Last
	
	@enduml
	
	You can shorten the arrow definition by using only the first character of the direction (for example, -d-
	instead of -down-) or the two first characters (-do-).
	Please note that you should not abuse this functionality : Graphviz gives usually good results without
	tweaking.
	
snippet 9_STATE_DIAGRAM_9.14_Change_line_color_and_style " Change line color and style"
	You can change line color and/or line style.
	
	@startuml
	State S1
	State S2
	S1 -[#DD00AA]-> S2
	S1 -left[#yellow]-> S3
	S1 -up[#red,dashed]-> S4
	S1 -right[dotted,#blue]-> S5
	
	X1 -[dashed]-> X2
	Z1 -[dotted]-> Z2
	Y1 -[#blue,bold]-> Y2
	@enduml
	
	[Ref. Incubation: Change line color in state diagrams]
	
snippet 9_STATE_DIAGRAM_9.15_Note " Note"
	You can also define notes using note left of, note right of, note top of, note bottom of key-
	words.
	You can also define notes on several lines.
	
	@startuml
	
	[*] --> Active
	Active --> Inactive
	
	note left of Active : this is a short\nnote
	
	note right of Inactive
	        A note can also
	        be defined on
	        several lines
	end note
	
	@enduml
	
	You can also have floating notes.
	
	@startuml
	
	state foo
	note "This is a floating note" as N1
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.16_Note_on_link " Note on link"
	You can put notes on state-transition or link, with note on link keyword.
	
	@startuml
	[*] -> State1
	State1 --> State2
	note on link
	this is a state-transition note
	end note
	@enduml
	
snippet 9_STATE_DIAGRAM_9.17_More_in_notes " More in notes"
	You can put notes on composite states.
	
	@startuml
	
	[*] --> NotShooting
	
	state "Not Shooting State" as NotShooting {
	
	
	        state "Idle mode" as Idle
	        state "Configuring mode" as Configuring
	        [*] --> Idle
	        Idle --> Configuring : EvConfig
	        Configuring --> Idle : EvConfig
	
	}
	
	note right of NotShooting : This is a note on a composite state
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.18_Inline_color " Inline color"
	
	@startuml
	state CurrentSite #pink {
	        state HardwareSetup #lightblue {
	                state Site #brown
	                Site -[hidden]-> Controller
	                Controller -[hidden]-> Devices
	        }
	        state PresentationSetup{
	                Groups -[hidden]-> PlansAndGraphics
	        }
	        state Trends #FFFF77
	        state Schedule #magenta
	        state AlarmSupression
	}
	@enduml
	
	[Ref. QA-1812]
	
snippet 9_STATE_DIAGRAM_9.19_Skinparam " Skinparam"
	You can use the skinparam command to change colors and fonts for the drawing.
	You can use this command :
	• In the diagram definition, like any other commands,
	• In an included file,
	• In a configuration file, provided in the command line or the ANT task.
	You can define specific color and fonts for stereotyped states.
	
	@startuml
	skinparam backgroundColor LightYellow
	skinparam state {
	        StartColor MediumBlue
	        EndColor Red
	        BackgroundColor Peru
	        BackgroundColor<<Warning>> Olive
	        BorderColor Gray
	        FontName Impact
	}
	
	[*] --> NotShooting
	
	state "Not Shooting State" as NotShooting {
	        state "Idle mode" as Idle <<Warning>>
	        state "Configuring mode" as Configuring
	        [*] --> Idle
	        Idle --> Configuring : EvConfig
	        Configuring --> Idle : EvConfig
	}
	
	NotShooting --> [*]
	@enduml
	
snippet 9_STATE_DIAGRAM_9.1_Simple_State " Simple State"
	You can use [*] for the starting point and ending point of the state diagram.
	Use --> for arrows.
	
	@startuml
	
	[*] --> State1
	State1 --> [*]
	State1 : this is a string
	State1 : this is another string
	
	State1 -> State2
	State2 --> [*]
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.20_Changing_style " Changing style"
	You can change style.
	
	@startuml
	
	<style>
	stateDiagram {
	        BackgroundColor Peru
	        'LineColor Gray
	        FontName Impact
	        FontColor Red
	        arrow {
	                FontSize 13
	                LineColor Blue
	        }
	}
	</style>
	
	[*] --> NotShooting
	
	state "Not Shooting State" as NotShooting {
	        state "Idle mode" as Idle <<Warning>>
	        state "Configuring mode" as Configuring
	        [*] --> Idle
	        Idle --> Configuring : EvConfig
	        Configuring --> Idle : EvConfig
	}
	
	NotShooting --> [*]
	@enduml
	
snippet 9_STATE_DIAGRAM_9.21_Change_state_color_and_style " Change state color and style (inline style)"
	You can change the color or style of individual state using the following notation:
	• #color ##[style]color
	With background color first (#color), then line style and line color (##[style]color ).
	
	@startuml
	state FooGradient #red-green ##00FFFF
	state FooDashed #red|green ##[dashed]blue {
	}
	state FooDotted ##[dotted]blue {
	}
	state FooBold ##[bold] {
	}
	state Foo1 ##[dotted]green {
	        state inner1 ##[dotted]yellow
	}
	
	state out ##[dotted]gold
	
	state Foo2 ##[bold]green {
	        state inner2 ##[dotted]yellow
	}
	inner1 -> inner2
	out -> inner2
	@enduml
	
	[Ref. QA-1487]
	• #color;line:color;line.[bold|dashed|dotted];text:color
	TODO: FIXME ￿ text:color seems not to be taken into account TODO: FIXME
	
	@startuml
	
	@startuml
	
	state FooGradient #red-green;line:00FFFF
	state FooDashed #red|green;line.dashed;line:blue {
	}
	state FooDotted #line.dotted;line:blue {
	}
	state FooBold #line.bold {
	}
	state Foo1 #line.dotted;line:green {
	        state inner1 #line.dotted;line:yellow
	}
	
	state out #line.dotted;line:gold
	
	state Foo2 #line.bold;line:green {
	        state inner2 #line.dotted;line:yellow
	}
	inner1 -> inner2
	out -> inner2
	@enduml
	@enduml
	
	@startuml
	state s1 : s1 description
	state s2 #pink;line:red;line.bold;text:red : s2 description
	state s3 #palegreen;line:green;line.dashed;text:green : s3 description
	state s4 #aliceblue;line:blue;line.dotted;text:blue : s4 description
	@enduml
	
	[Adapted from QA-3770]
snippet 9_STATE_DIAGRAM_9.2_Change_state_rendering " Change state rendering"
	You can use hide empty description to render state as simple box.
	
	@startuml
	hide empty description
	[*] --> State1
	State1 --> [*]
	State1 : this is a string
	State1 : this is another string
	
	State1 -> State2
	State2 --> [*]
	@enduml
	
snippet 9_STATE_DIAGRAM_9.3.1_Internal_sub-state " Internal sub-state"
	
	@startuml
	scale 350 width
	[*] --> NotShooting
	
	state NotShooting {
	        [*] --> Idle
	        Idle --> Configuring : EvConfig
	        Configuring --> Idle : EvConfig
	}
	
	state Configuring {
	        [*] --> NewValueSelection
	        NewValueSelection --> NewValuePreview : EvNewValue
	        NewValuePreview --> NewValueSelection : EvNewValueRejected
	        NewValuePreview --> NewValueSelection : EvNewValueSaved
	
	        state NewValuePreview {
	                State1 -> State2
	        }
	
	}
	@enduml
	
snippet 9_STATE_DIAGRAM_9.3.2_Sub-state_to_sub-state " Sub-state to sub-state"
	
	@startuml
	state A {
	        state X {
	        }
	        state Y {
	        }
	}
	
	state B {
	        state Z {
	        }
	}
	
	X --> Z
	Z --> Y
	@enduml
	
	[Ref. QA-3300]
	
snippet 9_STATE_DIAGRAM_9.3_Composite_state " Composite state"
	A state can also be composite. You have to define it using the state keywords and brackets.
	
snippet 9_STATE_DIAGRAM_9.4_Long_name " Long name"
	You can also use the state keyword to use long description for states.
	
	@startuml
	scale 600 width
	
	[*] -> State1
	State1 --> State2 : Succeeded
	State1 --> [*] : Aborted
	State2 --> State3 : Succeeded
	State2 --> [*] : Aborted
	state State3 {
	        state "Accumulate Enough Data\nLong State Name" as long1
	        long1 : Just a test
	        [*] --> long1
	        long1 --> long1 : New Data
	        long1 --> ProcessData : Enough Data
	}
	State3 --> State3 : Failed
	State3 --> [*] : Succeeded / Save Result
	State3 --> [*] : Aborted
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.5_History " History [[H], [H*]]"
	You can use [H] for the history and [H*] for the deep history of a substate.
	
	@startuml
	[*] -> State1
	State1 --> State2 : Succeeded
	State1 --> [*] : Aborted
	State2 --> State3 : Succeeded
	State2 --> [*] : Aborted
	state State3 {
	        state "Accumulate Enough Data" as long1
	        long1 : Just a test
	        [*] --> long1
	        long1 --> long1 : New Data
	        long1 --> ProcessData : Enough Data
	        State2 --> [H]: Resume
	}
	State3 --> State2 : Pause
	State2 --> State3[H*]: DeepResume
	State3 --> State3 : Failed
	State3 --> [*] : Succeeded / Save Result
	State3 --> [*] : Aborted
	@enduml
	
snippet 9_STATE_DIAGRAM_9.6_Fork " Fork [fork, join]"
	You can also fork and join using the <<fork>> and <<join>> stereotypes.
	
	@startuml
	
	state fork_state <<fork>>
	[*] --> fork_state
	fork_state --> State2
	fork_state --> State3
	
	state join_state <<join>>
	State2 --> join_state
	State3 --> join_state
	join_state --> State4
	State4 --> [*]
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.7.1_Horizontal_separator_-- " Horizontal separator --"
	
	@startuml
	[*] --> Active
	
	state Active {
	        [*] -> NumLockOff
	        NumLockOff --> NumLockOn : EvNumLockPressed
	        NumLockOn --> NumLockOff : EvNumLockPressed
	        --
	        [*] -> CapsLockOff
	        CapsLockOff --> CapsLockOn : EvCapsLockPressed
	        CapsLockOn --> CapsLockOff : EvCapsLockPressed
	        --
	        [*] -> ScrollLockOff
	        ScrollLockOff --> ScrollLockOn : EvCapsLockPressed
	        ScrollLockOn --> ScrollLockOff : EvCapsLockPressed
	}
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.7.2_Vertical_separator " Vertical separator ||"
	
	@startuml
	[*] --> Active
	
	state Active {
	        [*] -> NumLockOff
	        NumLockOff --> NumLockOn : EvNumLockPressed
	        NumLockOn --> NumLockOff : EvNumLockPressed
	        ||
	        [*] -> CapsLockOff
	        CapsLockOff --> CapsLockOn : EvCapsLockPressed
	        CapsLockOn --> CapsLockOff : EvCapsLockPressed
	        ||
	        [*] -> ScrollLockOff
	        ScrollLockOff --> ScrollLockOn : EvCapsLockPressed
	        ScrollLockOn --> ScrollLockOff : EvCapsLockPressed
	}
	
	@enduml
	
snippet 9_STATE_DIAGRAM_9.7_Concurrent_state " Concurrent state [–, ||]"
	You can define concurrent state into a composite state using either -- or || symbol as separator.
	
snippet 9_STATE_DIAGRAM_9.8_Conditional " Conditional [choice]"
	The stereotype <<choice>> can be used to use conditional state.
	
	@startuml
	state "Req(Id)" as ReqId <<sdlreceive>>
	state "Minor(Id)" as MinorId
	state "Major(Id)" as MajorId
	
	state c <<choice>>
	
	Idle --> ReqId
	ReqId --> c
	c --> MinorId : [Id <= 10]
	c --> MajorId : [Id > 10]
	@enduml
	
snippet 9_STATE_DIAGRAM_9.9_Stereotypes_full_example " Stereotypes full example [choice, fork, join, end]"
	
	@startuml
	state choice1 <<choice>>
	state fork1 <<fork>>
	
	state join2 <<join>>
	state end3 <<end>>
	
	[*] --> choice1 : from start\nto choice
	choice1 --> fork1 : from choice\nto fork
	choice1 --> join2 : from choice\nto join
	choice1 --> end3 : from choice\nto end
	
	fork1 ---> State1 : from fork\nto state
	fork1 --> State2 : from fork\nto state
	
	State2 --> join2 : from state\nto join
	State1 --> [*] : from state\nto end
	
	join2 --> [*] : from join\nto end
	@enduml
	
	[Ref. QA-404 and QA-1159]
	
snippet 9_STATE_DIAGRAM_9_State_Diagram " STATE DIAGRAM"
	
	9 State Diagram
	State diagrams are used to give an abstract description of the behavior of a system. This behavior is
	represented as a series of events that can occur in one or more possible states.
	
	
snippet type_abstract "Type - abstract"
	abstract$0

snippet type_actor "Type - actor"
	actor$0

snippet type_agent "Type - agent"
	agent$0

snippet type_annotation "Type - annotation"
	annotation$0

snippet type_archimate "Type - archimate"
	archimate$0

snippet type_artifact "Type - artifact"
	artifact$0

snippet type_boundary "Type - boundary"
	boundary$0

snippet type_card "Type - card"
	card$0

snippet type_class "Type - class"
	class$0

snippet type_cloud "Type - cloud"
	cloud$0

snippet type_collections "Type - collections"
	collections$0

snippet type_component "Type - component"
	component$0

snippet type_control "Type - control"
	control$0

snippet type_database "Type - database"
	database$0

snippet type_diamond "Type - diamond"
	diamond$0

snippet type_entity "Type - entity"
	entity$0

snippet type_enum "Type - enum"
	enum$0

snippet type_file "Type - file"
	file$0

snippet type_folder "Type - folder"
	folder$0

snippet type_frame "Type - frame"
	frame$0

snippet type_hexagon "Type - hexagon"
	hexagon$0

snippet type_interface "Type - interface"
	interface$0

snippet type_label "Type - label"
	label$0

snippet type_node "Type - node"
	node$0

snippet type_object "Type - object"
	object$0

snippet type_package "Type - package"
	package$0

snippet type_participant "Type - participant"
	participant$0

snippet type_person "Type - person"
	person$0

snippet type_queue "Type - queue"
	queue$0

snippet type_rectangle "Type - rectangle"
	rectangle$0

snippet type_stack "Type - stack"
	stack$0

snippet type_state "Type - state"
	state$0

snippet type_storage "Type - storage"
	storage$0

snippet type_usecase "Type - usecase"
	usecase$0

snippet keyword_@endboard "keyword @endboard"
	@endboard$0
snippet keyword_@endbpm "keyword @endbpm"
	@endbpm$0
snippet keyword_@endcreole "keyword @endcreole"
	@endcreole$0
snippet keyword_@endcute "keyword @endcute"
	@endcute$0
snippet keyword_@enddef "keyword @enddef"
	@enddef$0
snippet keyword_@endditaa "keyword @endditaa"
	@endditaa$0
snippet keyword_@enddot "keyword @enddot"
	@enddot$0
snippet keyword_@endflow "keyword @endflow"
	@endflow$0
snippet keyword_@endgantt "keyword @endgantt"
	@endgantt$0
snippet keyword_@endgit "keyword @endgit"
	@endgit$0
snippet keyword_@endjcckit "keyword @endjcckit"
	@endjcckit$0
snippet keyword_@endjson "keyword @endjson"
	@endjson$0
snippet keyword_@endlatex "keyword @endlatex"
	@endlatex$0
snippet keyword_@endmath "keyword @endmath"
	@endmath$0
snippet keyword_@endmindmap "keyword @endmindmap"
	@endmindmap$0
snippet keyword_@endnwdiag "keyword @endnwdiag"
	@endnwdiag$0
snippet keyword_@endproject "keyword @endproject"
	@endproject$0
snippet keyword_@endsalt "keyword @endsalt"
	@endsalt$0
snippet keyword_@endtree "keyword @endtree"
	@endtree$0
snippet keyword_@enduml "keyword @enduml"
	@enduml$0
snippet keyword_@endwbs "keyword @endwbs"
	@endwbs$0
snippet keyword_@endwire "keyword @endwire"
	@endwire$0
snippet keyword_@endyaml "keyword @endyaml"
	@endyaml$0
snippet keyword_@startboard "keyword @startboard"
	@startboard$0
snippet keyword_@startbpm "keyword @startbpm"
	@startbpm$0
snippet keyword_@startcreole "keyword @startcreole"
	@startcreole$0
snippet keyword_@startcute "keyword @startcute"
	@startcute$0
snippet keyword_@startdef "keyword @startdef"
	@startdef$0
snippet keyword_@startditaa "keyword @startditaa"
	@startditaa$0
snippet keyword_@startdot "keyword @startdot"
	@startdot$0
snippet keyword_@startflow "keyword @startflow"
	@startflow$0
snippet keyword_@startgantt "keyword @startgantt"
	@startgantt$0
snippet keyword_@startgit "keyword @startgit"
	@startgit$0
snippet keyword_@startjcckit "keyword @startjcckit"
	@startjcckit$0
snippet keyword_@startjson "keyword @startjson"
	@startjson$0
snippet keyword_@startlatex "keyword @startlatex"
	@startlatex$0
snippet keyword_@startmath "keyword @startmath"
	@startmath$0
snippet keyword_@startmindmap "keyword @startmindmap"
	@startmindmap$0
snippet keyword_@startnwdiag "keyword @startnwdiag"
	@startnwdiag$0
snippet keyword_@startproject "keyword @startproject"
	@startproject$0
snippet keyword_@startsalt "keyword @startsalt"
	@startsalt$0
snippet keyword_@starttree "keyword @starttree"
	@starttree$0
snippet keyword_@startuml "keyword @startuml"
	@startuml$0
snippet keyword_@startwbs "keyword @startwbs"
	@startwbs$0
snippet keyword_@startwire "keyword @startwire"
	@startwire$0
snippet keyword_@startyaml "keyword @startyaml"
	@startyaml$0
snippet keyword_across "keyword across"
	across$0
snippet keyword_activate "keyword activate"
	activate$0
snippet keyword_again "keyword again"
	again$0
snippet keyword_allow_mixing "keyword allow_mixing"
	allow_mixing$0
snippet keyword_allowmixing "keyword allowmixing"
	allowmixing$0
snippet keyword_also "keyword also"
	also$0
snippet keyword_alt "keyword alt"
	alt$0
snippet keyword_as "keyword as"
	as$0
snippet keyword_autonumber "keyword autonumber"
	autonumber$0
snippet keyword_bold "keyword bold"
	bold$0
snippet keyword_bottom "keyword bottom"
	bottom$0
snippet keyword_box "keyword box"
	box$0
snippet keyword_break "keyword break"
	break$0
snippet keyword_caption "keyword caption"
	caption$0
snippet keyword_center "keyword center"
	center$0
snippet keyword_circle "keyword circle"
	circle$0
snippet keyword_color "keyword color"
	color$0
snippet keyword_create "keyword create"
	create$0
snippet keyword_critical "keyword critical"
	critical$0
snippet keyword_dashed "keyword dashed"
	dashed$0
snippet keyword_deactivate "keyword deactivate"
	deactivate$0
snippet keyword_description "keyword description"
	description$0
snippet keyword_destroy "keyword destroy"
	destroy$0
snippet keyword_detach "keyword detach"
	detach$0
snippet keyword_dotted "keyword dotted"
	dotted$0
snippet keyword_down "keyword down"
	down$0
snippet keyword_else "keyword else"
	else$0
snippet keyword_elseif "keyword elseif"
	elseif$0
snippet keyword_empty "keyword empty"
	empty$0
snippet keyword_end "keyword end"
	end$0
snippet keyword_endif "keyword endif"
	endif$0
snippet keyword_endwhile "keyword endwhile"
	endwhile$0
snippet keyword_false "keyword false"
	false$0
snippet keyword_footbox "keyword footbox"
	footbox$0
snippet keyword_footer "keyword footer"
	footer$0
snippet keyword_fork "keyword fork"
	fork$0
snippet keyword_group "keyword group"
	group$0
snippet keyword_header "keyword header"
	header$0
snippet keyword_hide "keyword hide"
	hide$0
snippet keyword_hnote "keyword hnote"
	hnote$0
snippet keyword_if "keyword if"
	if$0
snippet keyword_is "keyword is"
	is$0
snippet keyword_italic "keyword italic"
	italic$0
snippet keyword_kill "keyword kill"
	kill$0
snippet keyword_left "keyword left"
	left$0
snippet keyword_left_to_right_direction "keyword left to right direction"
	left to right direction$0
snippet keyword_legend "keyword legend"
	legend$0
snippet keyword_link "keyword link"
	link$0
snippet keyword_loop "keyword loop"
	loop$0
snippet keyword_mainframe "keyword mainframe"
	mainframe$0
snippet keyword_map "keyword map"
	map$0
snippet keyword_members "keyword members"
	members$0
snippet keyword_namespace "keyword namespace"
	namespace$0
snippet keyword_newpage "keyword newpage"
	newpage$0
snippet keyword_normal "keyword normal"
	normal$0
snippet keyword_note "keyword note"
	note$0
snippet keyword_of "keyword of"
	of$0
snippet keyword_on "keyword on"
	on$0
snippet keyword_opt "keyword opt"
	opt$0
snippet keyword_order "keyword order"
	order$0
snippet keyword_over "keyword over"
	over$0
snippet keyword_package "keyword package"
	package$0
snippet keyword_page "keyword page"
	page$0
snippet keyword_par "keyword par"
	par$0
snippet keyword_partition "keyword partition"
	partition$0
snippet keyword_plain "keyword plain"
	plain$0
snippet keyword_ref "keyword ref"
	ref$0
snippet keyword_repeat "keyword repeat"
	repeat$0
snippet keyword_return "keyword return"
	return$0
snippet keyword_right "keyword right"
	right$0
snippet keyword_rnote "keyword rnote"
	rnote$0
snippet keyword_rotate "keyword rotate"
	rotate$0
snippet keyword_show "keyword show"
	show$0
snippet keyword_skin "keyword skin"
	skin$0
snippet keyword_skinparam "keyword skinparam"
	skinparam$0
snippet keyword_split "keyword split"
	split$0
snippet keyword_sprite "keyword sprite"
	sprite$0
snippet keyword_start "keyword start"
	start$0
snippet keyword_stereotype "keyword stereotype"
	stereotype$0
snippet keyword_stop "keyword stop"
	stop$0
snippet keyword_style "keyword style"
	style$0
snippet keyword_then "keyword then"
	then$0
snippet keyword_title "keyword title"
	title$0
snippet keyword_top "keyword top"
	top$0
snippet keyword_top_to_bottom_direction "keyword top_to_bottom_direction"
	top_to_bottom_direction$0
snippet keyword_true "keyword true"
	true$0
snippet keyword_up "keyword up"
	up$0
snippet keyword_while "keyword while"
	while$0

snippet preprocessor_!assert "preprocessor !assert"
	!assert$0
snippet preprocessor_!define "preprocessor !define"
	!define$0
snippet preprocessor_!definelong "preprocessor !definelong"
	!definelong$0
snippet preprocessor_!dump_memory "preprocessor !dump_memory"
	!dump_memory$0
snippet preprocessor_!else "preprocessor !else"
	!else$0
snippet preprocessor_!enddefinelong "preprocessor !enddefinelong"
	!enddefinelong$0
snippet preprocessor_!endfunction "preprocessor !endfunction"
	!endfunction$0
snippet preprocessor_!endif "preprocessor !endif"
	!endif$0
snippet preprocessor_!endprocedure "preprocessor !endprocedure"
	!endprocedure$0
snippet preprocessor_!endsub "preprocessor !endsub"
	!endsub$0
snippet preprocessor_!exit "preprocessor !exit"
	!exit$0
snippet preprocessor_!function "preprocessor !function"
	!function$0
snippet preprocessor_!if "preprocessor !if"
	!if$0
snippet preprocessor_!ifdef "preprocessor !ifdef"
	!ifdef$0
snippet preprocessor_!ifndef "preprocessor !ifndef"
	!ifndef$0
snippet preprocessor_!import "preprocessor !import"
	!import$0
snippet preprocessor_!include "preprocessor !include"
	!include$0
snippet preprocessor_!local "preprocessor !local"
	!local$0
snippet preprocessor_!log "preprocessor !log"
	!log$0
snippet preprocessor_!pragma "preprocessor !pragma"
	!pragma$0
snippet preprocessor_!procedure "preprocessor !procedure"
	!procedure$0
snippet preprocessor_!return "preprocessor !return"
	!return$0
snippet preprocessor_!startsub "preprocessor !startsub"
	!startsub$0
snippet preprocessor_!theme "preprocessor !theme"
	!theme$0
snippet preprocessor_!undef "preprocessor !undef"
	!undef$0
snippet preprocessor_!unquoted "preprocessor !unquoted"
	!unquoted$0

snippet skinparameter_ActivityBackgroundColor "skinparameter ActivityBackgroundColor"
	ActivityBackgroundColor$0
snippet skinparameter_ActivityBorderColor "skinparameter ActivityBorderColor"
	ActivityBorderColor$0
snippet skinparameter_ActivityBorderThickness "skinparameter ActivityBorderThickness"
	ActivityBorderThickness$0
snippet skinparameter_ActivityDiamondFontColor "skinparameter ActivityDiamondFontColor"
	ActivityDiamondFontColor$0
snippet skinparameter_ActivityDiamondFontName "skinparameter ActivityDiamondFontName"
	ActivityDiamondFontName$0
snippet skinparameter_ActivityDiamondFontSize "skinparameter ActivityDiamondFontSize"
	ActivityDiamondFontSize$0
snippet skinparameter_ActivityDiamondFontStyle "skinparameter ActivityDiamondFontStyle"
	ActivityDiamondFontStyle$0
snippet skinparameter_ActivityFontColor "skinparameter ActivityFontColor"
	ActivityFontColor$0
snippet skinparameter_ActivityFontName "skinparameter ActivityFontName"
	ActivityFontName$0
snippet skinparameter_ActivityFontSize "skinparameter ActivityFontSize"
	ActivityFontSize$0
snippet skinparameter_ActivityFontStyle "skinparameter ActivityFontStyle"
	ActivityFontStyle$0
snippet skinparameter_ActorBackgroundColor "skinparameter ActorBackgroundColor"
	ActorBackgroundColor$0
snippet skinparameter_ActorBorderColor "skinparameter ActorBorderColor"
	ActorBorderColor$0
snippet skinparameter_ActorFontColor "skinparameter ActorFontColor"
	ActorFontColor$0
snippet skinparameter_ActorFontName "skinparameter ActorFontName"
	ActorFontName$0
snippet skinparameter_ActorFontSize "skinparameter ActorFontSize"
	ActorFontSize$0
snippet skinparameter_ActorFontStyle "skinparameter ActorFontStyle"
	ActorFontStyle$0
snippet skinparameter_ActorStereotypeFontColor "skinparameter ActorStereotypeFontColor"
	ActorStereotypeFontColor$0
snippet skinparameter_ActorStereotypeFontName "skinparameter ActorStereotypeFontName"
	ActorStereotypeFontName$0
snippet skinparameter_ActorStereotypeFontSize "skinparameter ActorStereotypeFontSize"
	ActorStereotypeFontSize$0
snippet skinparameter_ActorStereotypeFontStyle "skinparameter ActorStereotypeFontStyle"
	ActorStereotypeFontStyle$0
snippet skinparameter_AgentBorderThickness "skinparameter AgentBorderThickness"
	AgentBorderThickness$0
snippet skinparameter_AgentFontColor "skinparameter AgentFontColor"
	AgentFontColor$0
snippet skinparameter_AgentFontName "skinparameter AgentFontName"
	AgentFontName$0
snippet skinparameter_AgentFontSize "skinparameter AgentFontSize"
	AgentFontSize$0
snippet skinparameter_AgentFontStyle "skinparameter AgentFontStyle"
	AgentFontStyle$0
snippet skinparameter_AgentStereotypeFontColor "skinparameter AgentStereotypeFontColor"
	AgentStereotypeFontColor$0
snippet skinparameter_AgentStereotypeFontName "skinparameter AgentStereotypeFontName"
	AgentStereotypeFontName$0
snippet skinparameter_AgentStereotypeFontSize "skinparameter AgentStereotypeFontSize"
	AgentStereotypeFontSize$0
snippet skinparameter_AgentStereotypeFontStyle "skinparameter AgentStereotypeFontStyle"
	AgentStereotypeFontStyle$0
snippet skinparameter_ArchimateBorderThickness "skinparameter ArchimateBorderThickness"
	ArchimateBorderThickness$0
snippet skinparameter_ArchimateFontColor "skinparameter ArchimateFontColor"
	ArchimateFontColor$0
snippet skinparameter_ArchimateFontName "skinparameter ArchimateFontName"
	ArchimateFontName$0
snippet skinparameter_ArchimateFontSize "skinparameter ArchimateFontSize"
	ArchimateFontSize$0
snippet skinparameter_ArchimateFontStyle "skinparameter ArchimateFontStyle"
	ArchimateFontStyle$0
snippet skinparameter_ArchimateStereotypeFontColor "skinparameter ArchimateStereotypeFontColor"
	ArchimateStereotypeFontColor$0
snippet skinparameter_ArchimateStereotypeFontName "skinparameter ArchimateStereotypeFontName"
	ArchimateStereotypeFontName$0
snippet skinparameter_ArchimateStereotypeFontSize "skinparameter ArchimateStereotypeFontSize"
	ArchimateStereotypeFontSize$0
snippet skinparameter_ArchimateStereotypeFontStyle "skinparameter ArchimateStereotypeFontStyle"
	ArchimateStereotypeFontStyle$0
snippet skinparameter_ArrowFontColor "skinparameter ArrowFontColor"
	ArrowFontColor$0
snippet skinparameter_ArrowFontName "skinparameter ArrowFontName"
	ArrowFontName$0
snippet skinparameter_ArrowFontSize "skinparameter ArrowFontSize"
	ArrowFontSize$0
snippet skinparameter_ArrowFontStyle "skinparameter ArrowFontStyle"
	ArrowFontStyle$0
snippet skinparameter_ArrowHeadColor "skinparameter ArrowHeadColor"
	ArrowHeadColor$0
snippet skinparameter_ArrowLollipopColor "skinparameter ArrowLollipopColor"
	ArrowLollipopColor$0
snippet skinparameter_ArrowMessageAlignment "skinparameter ArrowMessageAlignment"
	ArrowMessageAlignment$0
snippet skinparameter_ArrowThickness "skinparameter ArrowThickness"
	ArrowThickness$0
snippet skinparameter_ArtifactFontColor "skinparameter ArtifactFontColor"
	ArtifactFontColor$0
snippet skinparameter_ArtifactFontName "skinparameter ArtifactFontName"
	ArtifactFontName$0
snippet skinparameter_ArtifactFontSize "skinparameter ArtifactFontSize"
	ArtifactFontSize$0
snippet skinparameter_ArtifactFontStyle "skinparameter ArtifactFontStyle"
	ArtifactFontStyle$0
snippet skinparameter_ArtifactStereotypeFontColor "skinparameter ArtifactStereotypeFontColor"
	ArtifactStereotypeFontColor$0
snippet skinparameter_ArtifactStereotypeFontName "skinparameter ArtifactStereotypeFontName"
	ArtifactStereotypeFontName$0
snippet skinparameter_ArtifactStereotypeFontSize "skinparameter ArtifactStereotypeFontSize"
	ArtifactStereotypeFontSize$0
snippet skinparameter_ArtifactStereotypeFontStyle "skinparameter ArtifactStereotypeFontStyle"
	ArtifactStereotypeFontStyle$0
snippet skinparameter_BackgroundColor "skinparameter BackgroundColor"
	BackgroundColor$0
snippet skinparameter_BiddableBackgroundColor "skinparameter BiddableBackgroundColor"
	BiddableBackgroundColor$0
snippet skinparameter_BiddableBorderColor "skinparameter BiddableBorderColor"
	BiddableBorderColor$0
snippet skinparameter_BoundaryFontColor "skinparameter BoundaryFontColor"
	BoundaryFontColor$0
snippet skinparameter_BoundaryFontName "skinparameter BoundaryFontName"
	BoundaryFontName$0
snippet skinparameter_BoundaryFontSize "skinparameter BoundaryFontSize"
	BoundaryFontSize$0
snippet skinparameter_BoundaryFontStyle "skinparameter BoundaryFontStyle"
	BoundaryFontStyle$0
snippet skinparameter_BoundaryStereotypeFontColor "skinparameter BoundaryStereotypeFontColor"
	BoundaryStereotypeFontColor$0
snippet skinparameter_BoundaryStereotypeFontName "skinparameter BoundaryStereotypeFontName"
	BoundaryStereotypeFontName$0
snippet skinparameter_BoundaryStereotypeFontSize "skinparameter BoundaryStereotypeFontSize"
	BoundaryStereotypeFontSize$0
snippet skinparameter_BoundaryStereotypeFontStyle "skinparameter BoundaryStereotypeFontStyle"
	BoundaryStereotypeFontStyle$0
snippet skinparameter_BoxPadding "skinparameter BoxPadding"
	BoxPadding$0
snippet skinparameter_CaptionFontColor "skinparameter CaptionFontColor"
	CaptionFontColor$0
snippet skinparameter_CaptionFontName "skinparameter CaptionFontName"
	CaptionFontName$0
snippet skinparameter_CaptionFontSize "skinparameter CaptionFontSize"
	CaptionFontSize$0
snippet skinparameter_CaptionFontStyle "skinparameter CaptionFontStyle"
	CaptionFontStyle$0
snippet skinparameter_CardBorderThickness "skinparameter CardBorderThickness"
	CardBorderThickness$0
snippet skinparameter_CardFontColor "skinparameter CardFontColor"
	CardFontColor$0
snippet skinparameter_CardFontName "skinparameter CardFontName"
	CardFontName$0
snippet skinparameter_CardFontSize "skinparameter CardFontSize"
	CardFontSize$0
snippet skinparameter_CardFontStyle "skinparameter CardFontStyle"
	CardFontStyle$0
snippet skinparameter_CardStereotypeFontColor "skinparameter CardStereotypeFontColor"
	CardStereotypeFontColor$0
snippet skinparameter_CardStereotypeFontName "skinparameter CardStereotypeFontName"
	CardStereotypeFontName$0
snippet skinparameter_CardStereotypeFontSize "skinparameter CardStereotypeFontSize"
	CardStereotypeFontSize$0
snippet skinparameter_CardStereotypeFontStyle "skinparameter CardStereotypeFontStyle"
	CardStereotypeFontStyle$0
snippet skinparameter_CircledCharacterFontColor "skinparameter CircledCharacterFontColor"
	CircledCharacterFontColor$0
snippet skinparameter_CircledCharacterFontName "skinparameter CircledCharacterFontName"
	CircledCharacterFontName$0
snippet skinparameter_CircledCharacterFontSize "skinparameter CircledCharacterFontSize"
	CircledCharacterFontSize$0
snippet skinparameter_CircledCharacterFontStyle "skinparameter CircledCharacterFontStyle"
	CircledCharacterFontStyle$0
snippet skinparameter_CircledCharacterRadius "skinparameter CircledCharacterRadius"
	CircledCharacterRadius$0
snippet skinparameter_ClassAttributeFontColor "skinparameter ClassAttributeFontColor"
	ClassAttributeFontColor$0
snippet skinparameter_ClassAttributeFontName "skinparameter ClassAttributeFontName"
	ClassAttributeFontName$0
snippet skinparameter_ClassAttributeFontSize "skinparameter ClassAttributeFontSize"
	ClassAttributeFontSize$0
snippet skinparameter_ClassAttributeFontStyle "skinparameter ClassAttributeFontStyle"
	ClassAttributeFontStyle$0
snippet skinparameter_ClassAttributeIconSize "skinparameter ClassAttributeIconSize"
	ClassAttributeIconSize$0
snippet skinparameter_ClassBackgroundColor "skinparameter ClassBackgroundColor"
	ClassBackgroundColor$0
snippet skinparameter_ClassBorderColor "skinparameter ClassBorderColor"
	ClassBorderColor$0
snippet skinparameter_ClassBorderThickness "skinparameter ClassBorderThickness"
	ClassBorderThickness$0
snippet skinparameter_ClassFontColor "skinparameter ClassFontColor"
	ClassFontColor$0
snippet skinparameter_ClassFontName "skinparameter ClassFontName"
	ClassFontName$0
snippet skinparameter_ClassFontSize "skinparameter ClassFontSize"
	ClassFontSize$0
snippet skinparameter_ClassFontStyle "skinparameter ClassFontStyle"
	ClassFontStyle$0
snippet skinparameter_ClassStereotypeFontColor "skinparameter ClassStereotypeFontColor"
	ClassStereotypeFontColor$0
snippet skinparameter_ClassStereotypeFontName "skinparameter ClassStereotypeFontName"
	ClassStereotypeFontName$0
snippet skinparameter_ClassStereotypeFontSize "skinparameter ClassStereotypeFontSize"
	ClassStereotypeFontSize$0
snippet skinparameter_ClassStereotypeFontStyle "skinparameter ClassStereotypeFontStyle"
	ClassStereotypeFontStyle$0
snippet skinparameter_CloudFontColor "skinparameter CloudFontColor"
	CloudFontColor$0
snippet skinparameter_CloudFontName "skinparameter CloudFontName"
	CloudFontName$0
snippet skinparameter_CloudFontSize "skinparameter CloudFontSize"
	CloudFontSize$0
snippet skinparameter_CloudFontStyle "skinparameter CloudFontStyle"
	CloudFontStyle$0
snippet skinparameter_CloudStereotypeFontColor "skinparameter CloudStereotypeFontColor"
	CloudStereotypeFontColor$0
snippet skinparameter_CloudStereotypeFontName "skinparameter CloudStereotypeFontName"
	CloudStereotypeFontName$0
snippet skinparameter_CloudStereotypeFontSize "skinparameter CloudStereotypeFontSize"
	CloudStereotypeFontSize$0
snippet skinparameter_CloudStereotypeFontStyle "skinparameter CloudStereotypeFontStyle"
	CloudStereotypeFontStyle$0
snippet skinparameter_ColorArrowSeparationSpace "skinparameter ColorArrowSeparationSpace"
	ColorArrowSeparationSpace$0
snippet skinparameter_ComponentBorderThickness "skinparameter ComponentBorderThickness"
	ComponentBorderThickness$0
snippet skinparameter_ComponentFontColor "skinparameter ComponentFontColor"
	ComponentFontColor$0
snippet skinparameter_ComponentFontName "skinparameter ComponentFontName"
	ComponentFontName$0
snippet skinparameter_ComponentFontSize "skinparameter ComponentFontSize"
	ComponentFontSize$0
snippet skinparameter_ComponentFontStyle "skinparameter ComponentFontStyle"
	ComponentFontStyle$0
snippet skinparameter_ComponentStereotypeFontColor "skinparameter ComponentStereotypeFontColor"
	ComponentStereotypeFontColor$0
snippet skinparameter_ComponentStereotypeFontName "skinparameter ComponentStereotypeFontName"
	ComponentStereotypeFontName$0
snippet skinparameter_ComponentStereotypeFontSize "skinparameter ComponentStereotypeFontSize"
	ComponentStereotypeFontSize$0
snippet skinparameter_ComponentStereotypeFontStyle "skinparameter ComponentStereotypeFontStyle"
	ComponentStereotypeFontStyle$0
snippet skinparameter_ComponentStyle "skinparameter ComponentStyle"
	ComponentStyle$0
snippet skinparameter_ConditionEndStyle "skinparameter ConditionEndStyle"
	ConditionEndStyle$0
snippet skinparameter_ConditionStyle "skinparameter ConditionStyle"
	ConditionStyle$0
snippet skinparameter_ControlFontColor "skinparameter ControlFontColor"
	ControlFontColor$0
snippet skinparameter_ControlFontName "skinparameter ControlFontName"
	ControlFontName$0
snippet skinparameter_ControlFontSize "skinparameter ControlFontSize"
	ControlFontSize$0
snippet skinparameter_ControlFontStyle "skinparameter ControlFontStyle"
	ControlFontStyle$0
snippet skinparameter_ControlStereotypeFontColor "skinparameter ControlStereotypeFontColor"
	ControlStereotypeFontColor$0
snippet skinparameter_ControlStereotypeFontName "skinparameter ControlStereotypeFontName"
	ControlStereotypeFontName$0
snippet skinparameter_ControlStereotypeFontSize "skinparameter ControlStereotypeFontSize"
	ControlStereotypeFontSize$0
snippet skinparameter_ControlStereotypeFontStyle "skinparameter ControlStereotypeFontStyle"
	ControlStereotypeFontStyle$0
snippet skinparameter_DatabaseFontColor "skinparameter DatabaseFontColor"
	DatabaseFontColor$0
snippet skinparameter_DatabaseFontName "skinparameter DatabaseFontName"
	DatabaseFontName$0
snippet skinparameter_DatabaseFontSize "skinparameter DatabaseFontSize"
	DatabaseFontSize$0
snippet skinparameter_DatabaseFontStyle "skinparameter DatabaseFontStyle"
	DatabaseFontStyle$0
snippet skinparameter_DatabaseStereotypeFontColor "skinparameter DatabaseStereotypeFontColor"
	DatabaseStereotypeFontColor$0
snippet skinparameter_DatabaseStereotypeFontName "skinparameter DatabaseStereotypeFontName"
	DatabaseStereotypeFontName$0
snippet skinparameter_DatabaseStereotypeFontSize "skinparameter DatabaseStereotypeFontSize"
	DatabaseStereotypeFontSize$0
snippet skinparameter_DatabaseStereotypeFontStyle "skinparameter DatabaseStereotypeFontStyle"
	DatabaseStereotypeFontStyle$0
snippet skinparameter_DefaultFontColor "skinparameter DefaultFontColor"
	DefaultFontColor$0
snippet skinparameter_DefaultFontName "skinparameter DefaultFontName"
	DefaultFontName$0
snippet skinparameter_DefaultFontSize "skinparameter DefaultFontSize"
	DefaultFontSize$0
snippet skinparameter_DefaultFontStyle "skinparameter DefaultFontStyle"
	DefaultFontStyle$0
snippet skinparameter_DefaultMonospacedFontName "skinparameter DefaultMonospacedFontName"
	DefaultMonospacedFontName$0
snippet skinparameter_DefaultTextAlignment "skinparameter DefaultTextAlignment"
	DefaultTextAlignment$0
snippet skinparameter_DesignedBackgroundColor "skinparameter DesignedBackgroundColor"
	DesignedBackgroundColor$0
snippet skinparameter_DesignedBorderColor "skinparameter DesignedBorderColor"
	DesignedBorderColor$0
snippet skinparameter_DesignedDomainBorderThickness "skinparameter DesignedDomainBorderThickness"
	DesignedDomainBorderThickness$0
snippet skinparameter_DesignedDomainFontColor "skinparameter DesignedDomainFontColor"
	DesignedDomainFontColor$0
snippet skinparameter_DesignedDomainFontName "skinparameter DesignedDomainFontName"
	DesignedDomainFontName$0
snippet skinparameter_DesignedDomainFontSize "skinparameter DesignedDomainFontSize"
	DesignedDomainFontSize$0
snippet skinparameter_DesignedDomainFontStyle "skinparameter DesignedDomainFontStyle"
	DesignedDomainFontStyle$0
snippet skinparameter_DesignedDomainStereotypeFontColor "skinparameter DesignedDomainStereotypeFontColor"
	DesignedDomainStereotypeFontColor$0
snippet skinparameter_DesignedDomainStereotypeFontName "skinparameter DesignedDomainStereotypeFontName"
	DesignedDomainStereotypeFontName$0
snippet skinparameter_DesignedDomainStereotypeFontSize "skinparameter DesignedDomainStereotypeFontSize"
	DesignedDomainStereotypeFontSize$0
snippet skinparameter_DesignedDomainStereotypeFontStyle "skinparameter DesignedDomainStereotypeFontStyle"
	DesignedDomainStereotypeFontStyle$0
snippet skinparameter_DiagramBorderColor "skinparameter DiagramBorderColor"
	DiagramBorderColor$0
snippet skinparameter_DiagramBorderThickness "skinparameter DiagramBorderThickness"
	DiagramBorderThickness$0
snippet skinparameter_DomainBackgroundColor "skinparameter DomainBackgroundColor"
	DomainBackgroundColor$0
snippet skinparameter_DomainBorderColor "skinparameter DomainBorderColor"
	DomainBorderColor$0
snippet skinparameter_DomainBorderThickness "skinparameter DomainBorderThickness"
	DomainBorderThickness$0
snippet skinparameter_DomainFontColor "skinparameter DomainFontColor"
	DomainFontColor$0
snippet skinparameter_DomainFontName "skinparameter DomainFontName"
	DomainFontName$0
snippet skinparameter_DomainFontSize "skinparameter DomainFontSize"
	DomainFontSize$0
snippet skinparameter_DomainFontStyle "skinparameter DomainFontStyle"
	DomainFontStyle$0
snippet skinparameter_DomainStereotypeFontColor "skinparameter DomainStereotypeFontColor"
	DomainStereotypeFontColor$0
snippet skinparameter_DomainStereotypeFontName "skinparameter DomainStereotypeFontName"
	DomainStereotypeFontName$0
snippet skinparameter_DomainStereotypeFontSize "skinparameter DomainStereotypeFontSize"
	DomainStereotypeFontSize$0
snippet skinparameter_DomainStereotypeFontStyle "skinparameter DomainStereotypeFontStyle"
	DomainStereotypeFontStyle$0
snippet skinparameter_Dpi "skinparameter Dpi"
	Dpi$0
snippet skinparameter_EntityFontColor "skinparameter EntityFontColor"
	EntityFontColor$0
snippet skinparameter_EntityFontName "skinparameter EntityFontName"
	EntityFontName$0
snippet skinparameter_EntityFontSize "skinparameter EntityFontSize"
	EntityFontSize$0
snippet skinparameter_EntityFontStyle "skinparameter EntityFontStyle"
	EntityFontStyle$0
snippet skinparameter_EntityStereotypeFontColor "skinparameter EntityStereotypeFontColor"
	EntityStereotypeFontColor$0
snippet skinparameter_EntityStereotypeFontName "skinparameter EntityStereotypeFontName"
	EntityStereotypeFontName$0
snippet skinparameter_EntityStereotypeFontSize "skinparameter EntityStereotypeFontSize"
	EntityStereotypeFontSize$0
snippet skinparameter_EntityStereotypeFontStyle "skinparameter EntityStereotypeFontStyle"
	EntityStereotypeFontStyle$0
snippet skinparameter_FileFontColor "skinparameter FileFontColor"
	FileFontColor$0
snippet skinparameter_FileFontName "skinparameter FileFontName"
	FileFontName$0
snippet skinparameter_FileFontSize "skinparameter FileFontSize"
	FileFontSize$0
snippet skinparameter_FileFontStyle "skinparameter FileFontStyle"
	FileFontStyle$0
snippet skinparameter_FileStereotypeFontColor "skinparameter FileStereotypeFontColor"
	FileStereotypeFontColor$0
snippet skinparameter_FileStereotypeFontName "skinparameter FileStereotypeFontName"
	FileStereotypeFontName$0
snippet skinparameter_FileStereotypeFontSize "skinparameter FileStereotypeFontSize"
	FileStereotypeFontSize$0
snippet skinparameter_FileStereotypeFontStyle "skinparameter FileStereotypeFontStyle"
	FileStereotypeFontStyle$0
snippet skinparameter_FixCircleLabelOverlapping "skinparameter FixCircleLabelOverlapping"
	FixCircleLabelOverlapping$0
snippet skinparameter_FolderFontColor "skinparameter FolderFontColor"
	FolderFontColor$0
snippet skinparameter_FolderFontName "skinparameter FolderFontName"
	FolderFontName$0
snippet skinparameter_FolderFontSize "skinparameter FolderFontSize"
	FolderFontSize$0
snippet skinparameter_FolderFontStyle "skinparameter FolderFontStyle"
	FolderFontStyle$0
snippet skinparameter_FolderStereotypeFontColor "skinparameter FolderStereotypeFontColor"
	FolderStereotypeFontColor$0
snippet skinparameter_FolderStereotypeFontName "skinparameter FolderStereotypeFontName"
	FolderStereotypeFontName$0
snippet skinparameter_FolderStereotypeFontSize "skinparameter FolderStereotypeFontSize"
	FolderStereotypeFontSize$0
snippet skinparameter_FolderStereotypeFontStyle "skinparameter FolderStereotypeFontStyle"
	FolderStereotypeFontStyle$0
snippet skinparameter_FooterFontColor "skinparameter FooterFontColor"
	FooterFontColor$0
snippet skinparameter_FooterFontName "skinparameter FooterFontName"
	FooterFontName$0
snippet skinparameter_FooterFontSize "skinparameter FooterFontSize"
	FooterFontSize$0
snippet skinparameter_FooterFontStyle "skinparameter FooterFontStyle"
	FooterFontStyle$0
snippet skinparameter_FrameFontColor "skinparameter FrameFontColor"
	FrameFontColor$0
snippet skinparameter_FrameFontName "skinparameter FrameFontName"
	FrameFontName$0
snippet skinparameter_FrameFontSize "skinparameter FrameFontSize"
	FrameFontSize$0
snippet skinparameter_FrameFontStyle "skinparameter FrameFontStyle"
	FrameFontStyle$0
snippet skinparameter_FrameStereotypeFontColor "skinparameter FrameStereotypeFontColor"
	FrameStereotypeFontColor$0
snippet skinparameter_FrameStereotypeFontName "skinparameter FrameStereotypeFontName"
	FrameStereotypeFontName$0
snippet skinparameter_FrameStereotypeFontSize "skinparameter FrameStereotypeFontSize"
	FrameStereotypeFontSize$0
snippet skinparameter_FrameStereotypeFontStyle "skinparameter FrameStereotypeFontStyle"
	FrameStereotypeFontStyle$0
snippet skinparameter_GenericDisplay "skinparameter GenericDisplay"
	GenericDisplay$0
snippet skinparameter_Guillemet "skinparameter Guillemet"
	Guillemet$0
snippet skinparameter_Handwritten "skinparameter Handwritten"
	Handwritten$0
snippet skinparameter_HeaderFontColor "skinparameter HeaderFontColor"
	HeaderFontColor$0
snippet skinparameter_HeaderFontName "skinparameter HeaderFontName"
	HeaderFontName$0
snippet skinparameter_HeaderFontSize "skinparameter HeaderFontSize"
	HeaderFontSize$0
snippet skinparameter_HeaderFontStyle "skinparameter HeaderFontStyle"
	HeaderFontStyle$0
snippet skinparameter_HexagonBorderThickness "skinparameter HexagonBorderThickness"
	HexagonBorderThickness$0
snippet skinparameter_HexagonFontColor "skinparameter HexagonFontColor"
	HexagonFontColor$0
snippet skinparameter_HexagonFontName "skinparameter HexagonFontName"
	HexagonFontName$0
snippet skinparameter_HexagonFontSize "skinparameter HexagonFontSize"
	HexagonFontSize$0
snippet skinparameter_HexagonFontStyle "skinparameter HexagonFontStyle"
	HexagonFontStyle$0
snippet skinparameter_HexagonStereotypeFontColor "skinparameter HexagonStereotypeFontColor"
	HexagonStereotypeFontColor$0
snippet skinparameter_HexagonStereotypeFontName "skinparameter HexagonStereotypeFontName"
	HexagonStereotypeFontName$0
snippet skinparameter_HexagonStereotypeFontSize "skinparameter HexagonStereotypeFontSize"
	HexagonStereotypeFontSize$0
snippet skinparameter_HexagonStereotypeFontStyle "skinparameter HexagonStereotypeFontStyle"
	HexagonStereotypeFontStyle$0
snippet skinparameter_HyperlinkColor "skinparameter HyperlinkColor"
	HyperlinkColor$0
snippet skinparameter_HyperlinkUnderline "skinparameter HyperlinkUnderline"
	HyperlinkUnderline$0
snippet skinparameter_IconIEMandatoryColor "skinparameter IconIEMandatoryColor"
	IconIEMandatoryColor$0
snippet skinparameter_IconPackageBackgroundColor "skinparameter IconPackageBackgroundColor"
	IconPackageBackgroundColor$0
snippet skinparameter_IconPackageColor "skinparameter IconPackageColor"
	IconPackageColor$0
snippet skinparameter_IconPrivateBackgroundColor "skinparameter IconPrivateBackgroundColor"
	IconPrivateBackgroundColor$0
snippet skinparameter_IconPrivateColor "skinparameter IconPrivateColor"
	IconPrivateColor$0
snippet skinparameter_IconProtectedBackgroundColor "skinparameter IconProtectedBackgroundColor"
	IconProtectedBackgroundColor$0
snippet skinparameter_IconProtectedColor "skinparameter IconProtectedColor"
	IconProtectedColor$0
snippet skinparameter_IconPublicBackgroundColor "skinparameter IconPublicBackgroundColor"
	IconPublicBackgroundColor$0
snippet skinparameter_IconPublicColor "skinparameter IconPublicColor"
	IconPublicColor$0
snippet skinparameter_InterfaceFontColor "skinparameter InterfaceFontColor"
	InterfaceFontColor$0
snippet skinparameter_InterfaceFontName "skinparameter InterfaceFontName"
	InterfaceFontName$0
snippet skinparameter_InterfaceFontSize "skinparameter InterfaceFontSize"
	InterfaceFontSize$0
snippet skinparameter_InterfaceFontStyle "skinparameter InterfaceFontStyle"
	InterfaceFontStyle$0
snippet skinparameter_InterfaceStereotypeFontColor "skinparameter InterfaceStereotypeFontColor"
	InterfaceStereotypeFontColor$0
snippet skinparameter_InterfaceStereotypeFontName "skinparameter InterfaceStereotypeFontName"
	InterfaceStereotypeFontName$0
snippet skinparameter_InterfaceStereotypeFontSize "skinparameter InterfaceStereotypeFontSize"
	InterfaceStereotypeFontSize$0
snippet skinparameter_InterfaceStereotypeFontStyle "skinparameter InterfaceStereotypeFontStyle"
	InterfaceStereotypeFontStyle$0
snippet skinparameter_LabelFontColor "skinparameter LabelFontColor"
	LabelFontColor$0
snippet skinparameter_LabelFontName "skinparameter LabelFontName"
	LabelFontName$0
snippet skinparameter_LabelFontSize "skinparameter LabelFontSize"
	LabelFontSize$0
snippet skinparameter_LabelFontStyle "skinparameter LabelFontStyle"
	LabelFontStyle$0
snippet skinparameter_LabelStereotypeFontColor "skinparameter LabelStereotypeFontColor"
	LabelStereotypeFontColor$0
snippet skinparameter_LabelStereotypeFontName "skinparameter LabelStereotypeFontName"
	LabelStereotypeFontName$0
snippet skinparameter_LabelStereotypeFontSize "skinparameter LabelStereotypeFontSize"
	LabelStereotypeFontSize$0
snippet skinparameter_LabelStereotypeFontStyle "skinparameter LabelStereotypeFontStyle"
	LabelStereotypeFontStyle$0
snippet skinparameter_LegendBorderThickness "skinparameter LegendBorderThickness"
	LegendBorderThickness$0
snippet skinparameter_LegendFontColor "skinparameter LegendFontColor"
	LegendFontColor$0
snippet skinparameter_LegendFontName "skinparameter LegendFontName"
	LegendFontName$0
snippet skinparameter_LegendFontSize "skinparameter LegendFontSize"
	LegendFontSize$0
snippet skinparameter_LegendFontStyle "skinparameter LegendFontStyle"
	LegendFontStyle$0
snippet skinparameter_LexicalBackgroundColor "skinparameter LexicalBackgroundColor"
	LexicalBackgroundColor$0
snippet skinparameter_LexicalBorderColor "skinparameter LexicalBorderColor"
	LexicalBorderColor$0
snippet skinparameter_LifelineStrategy "skinparameter LifelineStrategy"
	LifelineStrategy$0
snippet skinparameter_Linetype "skinparameter Linetype"
	Linetype$0
snippet skinparameter_MachineBackgroundColor "skinparameter MachineBackgroundColor"
	MachineBackgroundColor$0
snippet skinparameter_MachineBorderColor "skinparameter MachineBorderColor"
	MachineBorderColor$0
snippet skinparameter_MachineBorderThickness "skinparameter MachineBorderThickness"
	MachineBorderThickness$0
snippet skinparameter_MachineFontColor "skinparameter MachineFontColor"
	MachineFontColor$0
snippet skinparameter_MachineFontName "skinparameter MachineFontName"
	MachineFontName$0
snippet skinparameter_MachineFontSize "skinparameter MachineFontSize"
	MachineFontSize$0
snippet skinparameter_MachineFontStyle "skinparameter MachineFontStyle"
	MachineFontStyle$0
snippet skinparameter_MachineStereotypeFontColor "skinparameter MachineStereotypeFontColor"
	MachineStereotypeFontColor$0
snippet skinparameter_MachineStereotypeFontName "skinparameter MachineStereotypeFontName"
	MachineStereotypeFontName$0
snippet skinparameter_MachineStereotypeFontSize "skinparameter MachineStereotypeFontSize"
	MachineStereotypeFontSize$0
snippet skinparameter_MachineStereotypeFontStyle "skinparameter MachineStereotypeFontStyle"
	MachineStereotypeFontStyle$0
snippet skinparameter_MaxAsciiMessageLength "skinparameter MaxAsciiMessageLength"
	MaxAsciiMessageLength$0
snippet skinparameter_MaxMessageSize "skinparameter MaxMessageSize"
	MaxMessageSize$0
snippet skinparameter_MinClassWidth "skinparameter MinClassWidth"
	MinClassWidth$0
snippet skinparameter_Monochrome "skinparameter Monochrome"
	Monochrome$0
snippet skinparameter_NodeFontColor "skinparameter NodeFontColor"
	NodeFontColor$0
snippet skinparameter_NodeFontName "skinparameter NodeFontName"
	NodeFontName$0
snippet skinparameter_NodeFontSize "skinparameter NodeFontSize"
	NodeFontSize$0
snippet skinparameter_NodeFontStyle "skinparameter NodeFontStyle"
	NodeFontStyle$0
snippet skinparameter_NodeStereotypeFontColor "skinparameter NodeStereotypeFontColor"
	NodeStereotypeFontColor$0
snippet skinparameter_NodeStereotypeFontName "skinparameter NodeStereotypeFontName"
	NodeStereotypeFontName$0
snippet skinparameter_NodeStereotypeFontSize "skinparameter NodeStereotypeFontSize"
	NodeStereotypeFontSize$0
snippet skinparameter_NodeStereotypeFontStyle "skinparameter NodeStereotypeFontStyle"
	NodeStereotypeFontStyle$0
snippet skinparameter_Nodesep "skinparameter Nodesep"
	Nodesep$0
snippet skinparameter_NoteBackgroundColor "skinparameter NoteBackgroundColor"
	NoteBackgroundColor$0
snippet skinparameter_NoteBorderColor "skinparameter NoteBorderColor"
	NoteBorderColor$0
snippet skinparameter_NoteBorderThickness "skinparameter NoteBorderThickness"
	NoteBorderThickness$0
snippet skinparameter_NoteFontColor "skinparameter NoteFontColor"
	NoteFontColor$0
snippet skinparameter_NoteFontName "skinparameter NoteFontName"
	NoteFontName$0
snippet skinparameter_NoteFontSize "skinparameter NoteFontSize"
	NoteFontSize$0
snippet skinparameter_NoteFontStyle "skinparameter NoteFontStyle"
	NoteFontStyle$0
snippet skinparameter_NoteShadowing "skinparameter NoteShadowing"
	NoteShadowing$0
snippet skinparameter_NoteTextAlignment "skinparameter NoteTextAlignment"
	NoteTextAlignment$0
snippet skinparameter_ObjectAttributeFontColor "skinparameter ObjectAttributeFontColor"
	ObjectAttributeFontColor$0
snippet skinparameter_ObjectAttributeFontName "skinparameter ObjectAttributeFontName"
	ObjectAttributeFontName$0
snippet skinparameter_ObjectAttributeFontSize "skinparameter ObjectAttributeFontSize"
	ObjectAttributeFontSize$0
snippet skinparameter_ObjectAttributeFontStyle "skinparameter ObjectAttributeFontStyle"
	ObjectAttributeFontStyle$0
snippet skinparameter_ObjectBorderThickness "skinparameter ObjectBorderThickness"
	ObjectBorderThickness$0
snippet skinparameter_ObjectFontColor "skinparameter ObjectFontColor"
	ObjectFontColor$0
snippet skinparameter_ObjectFontName "skinparameter ObjectFontName"
	ObjectFontName$0
snippet skinparameter_ObjectFontSize "skinparameter ObjectFontSize"
	ObjectFontSize$0
snippet skinparameter_ObjectFontStyle "skinparameter ObjectFontStyle"
	ObjectFontStyle$0
snippet skinparameter_ObjectStereotypeFontColor "skinparameter ObjectStereotypeFontColor"
	ObjectStereotypeFontColor$0
snippet skinparameter_ObjectStereotypeFontName "skinparameter ObjectStereotypeFontName"
	ObjectStereotypeFontName$0
snippet skinparameter_ObjectStereotypeFontSize "skinparameter ObjectStereotypeFontSize"
	ObjectStereotypeFontSize$0
snippet skinparameter_ObjectStereotypeFontStyle "skinparameter ObjectStereotypeFontStyle"
	ObjectStereotypeFontStyle$0
snippet skinparameter_PackageBorderThickness "skinparameter PackageBorderThickness"
	PackageBorderThickness$0
snippet skinparameter_PackageFontColor "skinparameter PackageFontColor"
	PackageFontColor$0
snippet skinparameter_PackageFontName "skinparameter PackageFontName"
	PackageFontName$0
snippet skinparameter_PackageFontSize "skinparameter PackageFontSize"
	PackageFontSize$0
snippet skinparameter_PackageFontStyle "skinparameter PackageFontStyle"
	PackageFontStyle$0
snippet skinparameter_PackageStereotypeFontColor "skinparameter PackageStereotypeFontColor"
	PackageStereotypeFontColor$0
snippet skinparameter_PackageStereotypeFontName "skinparameter PackageStereotypeFontName"
	PackageStereotypeFontName$0
snippet skinparameter_PackageStereotypeFontSize "skinparameter PackageStereotypeFontSize"
	PackageStereotypeFontSize$0
snippet skinparameter_PackageStereotypeFontStyle "skinparameter PackageStereotypeFontStyle"
	PackageStereotypeFontStyle$0
snippet skinparameter_PackageStyle "skinparameter PackageStyle"
	PackageStyle$0
snippet skinparameter_PackageTitleAlignment "skinparameter PackageTitleAlignment"
	PackageTitleAlignment$0
snippet skinparameter_Padding "skinparameter Padding"
	Padding$0
snippet skinparameter_PageBorderColor "skinparameter PageBorderColor"
	PageBorderColor$0
snippet skinparameter_PageExternalColor "skinparameter PageExternalColor"
	PageExternalColor$0
snippet skinparameter_PageMargin "skinparameter PageMargin"
	PageMargin$0
snippet skinparameter_ParticipantFontColor "skinparameter ParticipantFontColor"
	ParticipantFontColor$0
snippet skinparameter_ParticipantFontName "skinparameter ParticipantFontName"
	ParticipantFontName$0
snippet skinparameter_ParticipantFontSize "skinparameter ParticipantFontSize"
	ParticipantFontSize$0
snippet skinparameter_ParticipantFontStyle "skinparameter ParticipantFontStyle"
	ParticipantFontStyle$0
snippet skinparameter_ParticipantPadding "skinparameter ParticipantPadding"
	ParticipantPadding$0
snippet skinparameter_ParticipantStereotypeFontColor "skinparameter ParticipantStereotypeFontColor"
	ParticipantStereotypeFontColor$0
snippet skinparameter_ParticipantStereotypeFontName "skinparameter ParticipantStereotypeFontName"
	ParticipantStereotypeFontName$0
snippet skinparameter_ParticipantStereotypeFontSize "skinparameter ParticipantStereotypeFontSize"
	ParticipantStereotypeFontSize$0
snippet skinparameter_ParticipantStereotypeFontStyle "skinparameter ParticipantStereotypeFontStyle"
	ParticipantStereotypeFontStyle$0
snippet skinparameter_PartitionBorderThickness "skinparameter PartitionBorderThickness"
	PartitionBorderThickness$0
snippet skinparameter_PartitionFontColor "skinparameter PartitionFontColor"
	PartitionFontColor$0
snippet skinparameter_PartitionFontName "skinparameter PartitionFontName"
	PartitionFontName$0
snippet skinparameter_PartitionFontSize "skinparameter PartitionFontSize"
	PartitionFontSize$0
snippet skinparameter_PartitionFontStyle "skinparameter PartitionFontStyle"
	PartitionFontStyle$0
snippet skinparameter_PathHoverColor "skinparameter PathHoverColor"
	PathHoverColor$0
snippet skinparameter_PersonBorderThickness "skinparameter PersonBorderThickness"
	PersonBorderThickness$0
snippet skinparameter_PersonFontColor "skinparameter PersonFontColor"
	PersonFontColor$0
snippet skinparameter_PersonFontName "skinparameter PersonFontName"
	PersonFontName$0
snippet skinparameter_PersonFontSize "skinparameter PersonFontSize"
	PersonFontSize$0
snippet skinparameter_PersonFontStyle "skinparameter PersonFontStyle"
	PersonFontStyle$0
snippet skinparameter_PersonStereotypeFontColor "skinparameter PersonStereotypeFontColor"
	PersonStereotypeFontColor$0
snippet skinparameter_PersonStereotypeFontName "skinparameter PersonStereotypeFontName"
	PersonStereotypeFontName$0
snippet skinparameter_PersonStereotypeFontSize "skinparameter PersonStereotypeFontSize"
	PersonStereotypeFontSize$0
snippet skinparameter_PersonStereotypeFontStyle "skinparameter PersonStereotypeFontStyle"
	PersonStereotypeFontStyle$0
snippet skinparameter_QueueBorderThickness "skinparameter QueueBorderThickness"
	QueueBorderThickness$0
snippet skinparameter_QueueFontColor "skinparameter QueueFontColor"
	QueueFontColor$0
snippet skinparameter_QueueFontName "skinparameter QueueFontName"
	QueueFontName$0
snippet skinparameter_QueueFontSize "skinparameter QueueFontSize"
	QueueFontSize$0
snippet skinparameter_QueueFontStyle "skinparameter QueueFontStyle"
	QueueFontStyle$0
snippet skinparameter_QueueStereotypeFontColor "skinparameter QueueStereotypeFontColor"
	QueueStereotypeFontColor$0
snippet skinparameter_QueueStereotypeFontName "skinparameter QueueStereotypeFontName"
	QueueStereotypeFontName$0
snippet skinparameter_QueueStereotypeFontSize "skinparameter QueueStereotypeFontSize"
	QueueStereotypeFontSize$0
snippet skinparameter_QueueStereotypeFontStyle "skinparameter QueueStereotypeFontStyle"
	QueueStereotypeFontStyle$0
snippet skinparameter_Ranksep "skinparameter Ranksep"
	Ranksep$0
snippet skinparameter_RectangleBorderThickness "skinparameter RectangleBorderThickness"
	RectangleBorderThickness$0
snippet skinparameter_RectangleFontColor "skinparameter RectangleFontColor"
	RectangleFontColor$0
snippet skinparameter_RectangleFontName "skinparameter RectangleFontName"
	RectangleFontName$0
snippet skinparameter_RectangleFontSize "skinparameter RectangleFontSize"
	RectangleFontSize$0
snippet skinparameter_RectangleFontStyle "skinparameter RectangleFontStyle"
	RectangleFontStyle$0
snippet skinparameter_RectangleStereotypeFontColor "skinparameter RectangleStereotypeFontColor"
	RectangleStereotypeFontColor$0
snippet skinparameter_RectangleStereotypeFontName "skinparameter RectangleStereotypeFontName"
	RectangleStereotypeFontName$0
snippet skinparameter_RectangleStereotypeFontSize "skinparameter RectangleStereotypeFontSize"
	RectangleStereotypeFontSize$0
snippet skinparameter_RectangleStereotypeFontStyle "skinparameter RectangleStereotypeFontStyle"
	RectangleStereotypeFontStyle$0
snippet skinparameter_RequirementBackgroundColor "skinparameter RequirementBackgroundColor"
	RequirementBackgroundColor$0
snippet skinparameter_RequirementBorderColor "skinparameter RequirementBorderColor"
	RequirementBorderColor$0
snippet skinparameter_RequirementBorderThickness "skinparameter RequirementBorderThickness"
	RequirementBorderThickness$0
snippet skinparameter_RequirementFontColor "skinparameter RequirementFontColor"
	RequirementFontColor$0
snippet skinparameter_RequirementFontName "skinparameter RequirementFontName"
	RequirementFontName$0
snippet skinparameter_RequirementFontSize "skinparameter RequirementFontSize"
	RequirementFontSize$0
snippet skinparameter_RequirementFontStyle "skinparameter RequirementFontStyle"
	RequirementFontStyle$0
snippet skinparameter_RequirementStereotypeFontColor "skinparameter RequirementStereotypeFontColor"
	RequirementStereotypeFontColor$0
snippet skinparameter_RequirementStereotypeFontName "skinparameter RequirementStereotypeFontName"
	RequirementStereotypeFontName$0
snippet skinparameter_RequirementStereotypeFontSize "skinparameter RequirementStereotypeFontSize"
	RequirementStereotypeFontSize$0
snippet skinparameter_RequirementStereotypeFontStyle "skinparameter RequirementStereotypeFontStyle"
	RequirementStereotypeFontStyle$0
snippet skinparameter_ResponseMessageBelowArrow "skinparameter ResponseMessageBelowArrow"
	ResponseMessageBelowArrow$0
snippet skinparameter_RoundCorner "skinparameter RoundCorner"
	RoundCorner$0
snippet skinparameter_SameClassWidth "skinparameter SameClassWidth"
	SameClassWidth$0
snippet skinparameter_SequenceActorBorderThickness "skinparameter SequenceActorBorderThickness"
	SequenceActorBorderThickness$0
snippet skinparameter_SequenceArrowThickness "skinparameter SequenceArrowThickness"
	SequenceArrowThickness$0
snippet skinparameter_SequenceBoxBorderColor "skinparameter SequenceBoxBorderColor"
	SequenceBoxBorderColor$0
snippet skinparameter_SequenceBoxFontColor "skinparameter SequenceBoxFontColor"
	SequenceBoxFontColor$0
snippet skinparameter_SequenceBoxFontName "skinparameter SequenceBoxFontName"
	SequenceBoxFontName$0
snippet skinparameter_SequenceBoxFontSize "skinparameter SequenceBoxFontSize"
	SequenceBoxFontSize$0
snippet skinparameter_SequenceBoxFontStyle "skinparameter SequenceBoxFontStyle"
	SequenceBoxFontStyle$0
snippet skinparameter_SequenceDelayFontColor "skinparameter SequenceDelayFontColor"
	SequenceDelayFontColor$0
snippet skinparameter_SequenceDelayFontName "skinparameter SequenceDelayFontName"
	SequenceDelayFontName$0
snippet skinparameter_SequenceDelayFontSize "skinparameter SequenceDelayFontSize"
	SequenceDelayFontSize$0
snippet skinparameter_SequenceDelayFontStyle "skinparameter SequenceDelayFontStyle"
	SequenceDelayFontStyle$0
snippet skinparameter_SequenceDividerBorderThickness "skinparameter SequenceDividerBorderThickness"
	SequenceDividerBorderThickness$0
snippet skinparameter_SequenceDividerFontColor "skinparameter SequenceDividerFontColor"
	SequenceDividerFontColor$0
snippet skinparameter_SequenceDividerFontName "skinparameter SequenceDividerFontName"
	SequenceDividerFontName$0
snippet skinparameter_SequenceDividerFontSize "skinparameter SequenceDividerFontSize"
	SequenceDividerFontSize$0
snippet skinparameter_SequenceDividerFontStyle "skinparameter SequenceDividerFontStyle"
	SequenceDividerFontStyle$0
snippet skinparameter_SequenceGroupBodyBackgroundColor "skinparameter SequenceGroupBodyBackgroundColor"
	SequenceGroupBodyBackgroundColor$0
snippet skinparameter_SequenceGroupBorderThickness "skinparameter SequenceGroupBorderThickness"
	SequenceGroupBorderThickness$0
snippet skinparameter_SequenceGroupFontColor "skinparameter SequenceGroupFontColor"
	SequenceGroupFontColor$0
snippet skinparameter_SequenceGroupFontName "skinparameter SequenceGroupFontName"
	SequenceGroupFontName$0
snippet skinparameter_SequenceGroupFontSize "skinparameter SequenceGroupFontSize"
	SequenceGroupFontSize$0
snippet skinparameter_SequenceGroupFontStyle "skinparameter SequenceGroupFontStyle"
	SequenceGroupFontStyle$0
snippet skinparameter_SequenceGroupHeaderFontColor "skinparameter SequenceGroupHeaderFontColor"
	SequenceGroupHeaderFontColor$0
snippet skinparameter_SequenceGroupHeaderFontName "skinparameter SequenceGroupHeaderFontName"
	SequenceGroupHeaderFontName$0
snippet skinparameter_SequenceGroupHeaderFontSize "skinparameter SequenceGroupHeaderFontSize"
	SequenceGroupHeaderFontSize$0
snippet skinparameter_SequenceGroupHeaderFontStyle "skinparameter SequenceGroupHeaderFontStyle"
	SequenceGroupHeaderFontStyle$0
snippet skinparameter_SequenceLifeLineBorderColor "skinparameter SequenceLifeLineBorderColor"
	SequenceLifeLineBorderColor$0
snippet skinparameter_SequenceLifeLineBorderThickness "skinparameter SequenceLifeLineBorderThickness"
	SequenceLifeLineBorderThickness$0
snippet skinparameter_SequenceMessageAlignment "skinparameter SequenceMessageAlignment"
	SequenceMessageAlignment$0
snippet skinparameter_SequenceMessageTextAlignment "skinparameter SequenceMessageTextAlignment"
	SequenceMessageTextAlignment$0
snippet skinparameter_SequenceNewpageSeparatorColor "skinparameter SequenceNewpageSeparatorColor"
	SequenceNewpageSeparatorColor$0
snippet skinparameter_SequenceParticipant "skinparameter SequenceParticipant"
	SequenceParticipant$0
snippet skinparameter_SequenceParticipantBorderThickness "skinparameter SequenceParticipantBorderThickness"
	SequenceParticipantBorderThickness$0
snippet skinparameter_SequenceReferenceAlignment "skinparameter SequenceReferenceAlignment"
	SequenceReferenceAlignment$0
snippet skinparameter_SequenceReferenceBackgroundColor "skinparameter SequenceReferenceBackgroundColor"
	SequenceReferenceBackgroundColor$0
snippet skinparameter_SequenceReferenceBorderThickness "skinparameter SequenceReferenceBorderThickness"
	SequenceReferenceBorderThickness$0
snippet skinparameter_SequenceReferenceFontColor "skinparameter SequenceReferenceFontColor"
	SequenceReferenceFontColor$0
snippet skinparameter_SequenceReferenceFontName "skinparameter SequenceReferenceFontName"
	SequenceReferenceFontName$0
snippet skinparameter_SequenceReferenceFontSize "skinparameter SequenceReferenceFontSize"
	SequenceReferenceFontSize$0
snippet skinparameter_SequenceReferenceFontStyle "skinparameter SequenceReferenceFontStyle"
	SequenceReferenceFontStyle$0
snippet skinparameter_SequenceReferenceHeaderBackgroundColor "skinparameter SequenceReferenceHeaderBackgroundColor"
	SequenceReferenceHeaderBackgroundColor$0
snippet skinparameter_SequenceStereotypeFontColor "skinparameter SequenceStereotypeFontColor"
	SequenceStereotypeFontColor$0
snippet skinparameter_SequenceStereotypeFontName "skinparameter SequenceStereotypeFontName"
	SequenceStereotypeFontName$0
snippet skinparameter_SequenceStereotypeFontSize "skinparameter SequenceStereotypeFontSize"
	SequenceStereotypeFontSize$0
snippet skinparameter_SequenceStereotypeFontStyle "skinparameter SequenceStereotypeFontStyle"
	SequenceStereotypeFontStyle$0
snippet skinparameter_Shadowing "skinparameter Shadowing"
	Shadowing$0
snippet skinparameter_StackFontColor "skinparameter StackFontColor"
	StackFontColor$0
snippet skinparameter_StackFontName "skinparameter StackFontName"
	StackFontName$0
snippet skinparameter_StackFontSize "skinparameter StackFontSize"
	StackFontSize$0
snippet skinparameter_StackFontStyle "skinparameter StackFontStyle"
	StackFontStyle$0
snippet skinparameter_StackStereotypeFontColor "skinparameter StackStereotypeFontColor"
	StackStereotypeFontColor$0
snippet skinparameter_StackStereotypeFontName "skinparameter StackStereotypeFontName"
	StackStereotypeFontName$0
snippet skinparameter_StackStereotypeFontSize "skinparameter StackStereotypeFontSize"
	StackStereotypeFontSize$0
snippet skinparameter_StackStereotypeFontStyle "skinparameter StackStereotypeFontStyle"
	StackStereotypeFontStyle$0
snippet skinparameter_StateAttributeFontColor "skinparameter StateAttributeFontColor"
	StateAttributeFontColor$0
snippet skinparameter_StateAttributeFontName "skinparameter StateAttributeFontName"
	StateAttributeFontName$0
snippet skinparameter_StateAttributeFontSize "skinparameter StateAttributeFontSize"
	StateAttributeFontSize$0
snippet skinparameter_StateAttributeFontStyle "skinparameter StateAttributeFontStyle"
	StateAttributeFontStyle$0
snippet skinparameter_StateBorderColor "skinparameter StateBorderColor"
	StateBorderColor$0
snippet skinparameter_StateFontColor "skinparameter StateFontColor"
	StateFontColor$0
snippet skinparameter_StateFontName "skinparameter StateFontName"
	StateFontName$0
snippet skinparameter_StateFontSize "skinparameter StateFontSize"
	StateFontSize$0
snippet skinparameter_StateFontStyle "skinparameter StateFontStyle"
	StateFontStyle$0
snippet skinparameter_StateMessageAlignment "skinparameter StateMessageAlignment"
	StateMessageAlignment$0
snippet skinparameter_StereotypePosition "skinparameter StereotypePosition"
	StereotypePosition$0
snippet skinparameter_StorageFontColor "skinparameter StorageFontColor"
	StorageFontColor$0
snippet skinparameter_StorageFontName "skinparameter StorageFontName"
	StorageFontName$0
snippet skinparameter_StorageFontSize "skinparameter StorageFontSize"
	StorageFontSize$0
snippet skinparameter_StorageFontStyle "skinparameter StorageFontStyle"
	StorageFontStyle$0
snippet skinparameter_StorageStereotypeFontColor "skinparameter StorageStereotypeFontColor"
	StorageStereotypeFontColor$0
snippet skinparameter_StorageStereotypeFontName "skinparameter StorageStereotypeFontName"
	StorageStereotypeFontName$0
snippet skinparameter_StorageStereotypeFontSize "skinparameter StorageStereotypeFontSize"
	StorageStereotypeFontSize$0
snippet skinparameter_StorageStereotypeFontStyle "skinparameter StorageStereotypeFontStyle"
	StorageStereotypeFontStyle$0
snippet skinparameter_Style "skinparameter Style"
	Style$0
snippet skinparameter_SvglinkTarget "skinparameter SvglinkTarget"
	SvglinkTarget$0
snippet skinparameter_SwimlaneBorderThickness "skinparameter SwimlaneBorderThickness"
	SwimlaneBorderThickness$0
snippet skinparameter_SwimlaneTitleFontColor "skinparameter SwimlaneTitleFontColor"
	SwimlaneTitleFontColor$0
snippet skinparameter_SwimlaneTitleFontName "skinparameter SwimlaneTitleFontName"
	SwimlaneTitleFontName$0
snippet skinparameter_SwimlaneTitleFontSize "skinparameter SwimlaneTitleFontSize"
	SwimlaneTitleFontSize$0
snippet skinparameter_SwimlaneTitleFontStyle "skinparameter SwimlaneTitleFontStyle"
	SwimlaneTitleFontStyle$0
snippet skinparameter_SwimlaneWidth "skinparameter SwimlaneWidth"
	SwimlaneWidth$0
snippet skinparameter_SwimlaneWrapTitleWidth "skinparameter SwimlaneWrapTitleWidth"
	SwimlaneWrapTitleWidth$0
snippet skinparameter_TabSize "skinparameter TabSize"
	TabSize$0
snippet skinparameter_TimingFontColor "skinparameter TimingFontColor"
	TimingFontColor$0
snippet skinparameter_TimingFontName "skinparameter TimingFontName"
	TimingFontName$0
snippet skinparameter_TimingFontSize "skinparameter TimingFontSize"
	TimingFontSize$0
snippet skinparameter_TimingFontStyle "skinparameter TimingFontStyle"
	TimingFontStyle$0
snippet skinparameter_TitleBorderRoundCorner "skinparameter TitleBorderRoundCorner"
	TitleBorderRoundCorner$0
snippet skinparameter_TitleBorderThickness "skinparameter TitleBorderThickness"
	TitleBorderThickness$0
snippet skinparameter_TitleFontColor "skinparameter TitleFontColor"
	TitleFontColor$0
snippet skinparameter_TitleFontName "skinparameter TitleFontName"
	TitleFontName$0
snippet skinparameter_TitleFontSize "skinparameter TitleFontSize"
	TitleFontSize$0
snippet skinparameter_TitleFontStyle "skinparameter TitleFontStyle"
	TitleFontStyle$0
snippet skinparameter_UsecaseBorderThickness "skinparameter UsecaseBorderThickness"
	UsecaseBorderThickness$0
snippet skinparameter_UsecaseFontColor "skinparameter UsecaseFontColor"
	UsecaseFontColor$0
snippet skinparameter_UsecaseFontName "skinparameter UsecaseFontName"
	UsecaseFontName$0
snippet skinparameter_UsecaseFontSize "skinparameter UsecaseFontSize"
	UsecaseFontSize$0
snippet skinparameter_UsecaseFontStyle "skinparameter UsecaseFontStyle"
	UsecaseFontStyle$0
snippet skinparameter_UsecaseStereotypeFontColor "skinparameter UsecaseStereotypeFontColor"
	UsecaseStereotypeFontColor$0
snippet skinparameter_UsecaseStereotypeFontName "skinparameter UsecaseStereotypeFontName"
	UsecaseStereotypeFontName$0
snippet skinparameter_UsecaseStereotypeFontSize "skinparameter UsecaseStereotypeFontSize"
	UsecaseStereotypeFontSize$0
snippet skinparameter_UsecaseStereotypeFontStyle "skinparameter UsecaseStereotypeFontStyle"
	UsecaseStereotypeFontStyle$0
snippet skinparameter_WrapWidth "skinparameter WrapWidth"
	WrapWidth$0

snippet color_APPLICATION "color APPLICATION 應用"
	APPLICATION$0
snippet color_AliceBlue "color AliceBlue 愛麗絲藍"
	AliceBlue$0
snippet color_AntiqueWhite "color AntiqueWhite 古董白"
	AntiqueWhite$0
snippet color_Aqua "color Aqua 水族"
	Aqua$0
snippet color_Aquamarine "color Aquamarine 藍晶"
	Aquamarine$0
snippet color_Azure "color Azure 蔚藍"
	Azure$0
snippet color_BUSINESS "color BUSINESS 商業"
	BUSINESS$0
snippet color_Beige "color Beige 淺褐色的"
	Beige$0
snippet color_Bisque "color Bisque 濃湯"
	Bisque$0
snippet color_Black "color Black 黑色的"
	Black$0
snippet color_BlanchedAlmond "color BlanchedAlmond 漂白杏仁"
	BlanchedAlmond$0
snippet color_Blue "color Blue 藍色的"
	Blue$0
snippet color_BlueViolet "color BlueViolet 紫羅蘭色"
	BlueViolet$0
snippet color_Brown "color Brown 棕色的"
	Brown$0
snippet color_BurlyWood "color BurlyWood 伯利伍德"
	BurlyWood$0
snippet color_CadetBlue "color CadetBlue 軍校藍"
	CadetBlue$0
snippet color_Chartreuse "color Chartreuse 黃綠色"
	Chartreuse$0
snippet color_Chocolate "color Chocolate 巧克力"
	Chocolate$0
snippet color_Coral "color Coral 珊瑚"
	Coral$0
snippet color_CornflowerBlue "color CornflowerBlue 矢車菊藍"
	CornflowerBlue$0
snippet color_Cornsilk "color Cornsilk 玉米須"
	Cornsilk$0
snippet color_Crimson "color Crimson 赤紅"
	Crimson$0
snippet color_Cyan "color Cyan 青色"
	Cyan$0
snippet color_DarkBlue "color DarkBlue 深藍"
	DarkBlue$0
snippet color_DarkCyan "color DarkCyan 深青色"
	DarkCyan$0
snippet color_DarkGoldenRod "color DarkGoldenRod 暗金棒"
	DarkGoldenRod$0
snippet color_DarkGray "color DarkGray 深灰色"
	DarkGray$0
snippet color_DarkGreen "color DarkGreen 深綠色"
	DarkGreen$0
snippet color_DarkGrey "color DarkGrey 深灰色"
	DarkGrey$0
snippet color_DarkKhaki "color DarkKhaki 深卡其色"
	DarkKhaki$0
snippet color_DarkMagenta "color DarkMagenta 深洋紅色"
	DarkMagenta$0
snippet color_DarkOliveGreen "color DarkOliveGreen 深橄欖綠"
	DarkOliveGreen$0
snippet color_DarkOrchid "color DarkOrchid 暗蘭花"
	DarkOrchid$0
snippet color_DarkRed "color DarkRed 深紅"
	DarkRed$0
snippet color_DarkSalmon "color DarkSalmon 深色鮭魚"
	DarkSalmon$0
snippet color_DarkSeaGreen "color DarkSeaGreen 深海綠色"
	DarkSeaGreen$0
snippet color_DarkSlateBlue "color DarkSlateBlue 深石板藍"
	DarkSlateBlue$0
snippet color_DarkSlateGray "color DarkSlateGray 深石板灰"
	DarkSlateGray$0
snippet color_DarkSlateGrey "color DarkSlateGrey 深石板灰"
	DarkSlateGrey$0
snippet color_DarkTurquoise "color DarkTurquoise 深綠松石色"
	DarkTurquoise$0
snippet color_DarkViolet "color DarkViolet 暗紫"
	DarkViolet$0
snippet color_Darkorange "color Darkorange 深橙色"
	Darkorange$0
snippet color_DeepPink "color DeepPink 深粉紅"
	DeepPink$0
snippet color_DeepSkyBlue "color DeepSkyBlue 深天藍"
	DeepSkyBlue$0
snippet color_DimGray "color DimGray 暗灰色"
	DimGray$0
snippet color_DimGrey "color DimGrey 昏暗的灰色"
	DimGrey$0
snippet color_DodgerBlue "color DodgerBlue 道奇藍"
	DodgerBlue$0
snippet color_FireBrick "color FireBrick 耐火磚"
	FireBrick$0
snippet color_FloralWhite "color FloralWhite 碎花白色"
	FloralWhite$0
snippet color_ForestGreen "color ForestGreen 森林綠"
	ForestGreen$0
snippet color_Fuchsia "color Fuchsia 紫紅色"
	Fuchsia$0
snippet color_Gainsboro "color Gainsboro 蓋恩斯伯勒"
	Gainsboro$0
snippet color_GhostWhite "color GhostWhite 幽靈白"
	GhostWhite$0
snippet color_Gold "color Gold 金子"
	Gold$0
snippet color_GoldenRod "color GoldenRod 黃金棒"
	GoldenRod$0
snippet color_Gray "color Gray 灰色的"
	Gray$0
snippet color_Green "color Green 綠色的"
	Green$0
snippet color_GreenYellow "color GreenYellow 黃綠色"
	GreenYellow$0
snippet color_Grey "color Grey 灰色的"
	Grey$0
snippet color_HoneyDew "color HoneyDew 甘露"
	HoneyDew$0
snippet color_HotPink "color HotPink 亮粉色"
	HotPink$0
snippet color_IMPLEMENTATION "color IMPLEMENTATION 執行"
	IMPLEMENTATION$0
snippet color_IndianRed "color IndianRed 印度紅"
	IndianRed$0
snippet color_Indigo "color Indigo 靛青"
	Indigo$0
snippet color_Ivory "color Ivory 象牙"
	Ivory$0
snippet color_Khaki "color Khaki 卡其色"
	Khaki$0
snippet color_Lavender "color Lavender 薰衣草"
	Lavender$0
snippet color_LavenderBlush "color LavenderBlush 薰衣草腮紅"
	LavenderBlush$0
snippet color_LawnGreen "color LawnGreen 草坪綠地"
	LawnGreen$0
snippet color_LemonChiffon "color LemonChiffon 檸檬雪紡"
	LemonChiffon$0
snippet color_LightBlue "color LightBlue 淺藍色"
	LightBlue$0
snippet color_LightCoral "color LightCoral 淺珊瑚"
	LightCoral$0
snippet color_LightCyan "color LightCyan 淡青色"
	LightCyan$0
snippet color_LightGoldenRodYellow "color LightGoldenRodYellow 淺金色棒狀黃色"
	LightGoldenRodYellow$0
snippet color_LightGray "color LightGray 淺灰"
	LightGray$0
snippet color_LightGreen "color LightGreen 淡綠色"
	LightGreen$0
snippet color_LightGrey "color LightGrey 淺灰色"
	LightGrey$0
snippet color_LightPink "color LightPink 淺粉色"
	LightPink$0
snippet color_LightSalmon "color LightSalmon 淡鮭魚"
	LightSalmon$0
snippet color_LightSeaGreen "color LightSeaGreen 淺海綠色"
	LightSeaGreen$0
snippet color_LightSkyBlue "color LightSkyBlue 淺天藍"
	LightSkyBlue$0
snippet color_LightSlateGray "color LightSlateGray 淺石板灰"
	LightSlateGray$0
snippet color_LightSlateGrey "color LightSlateGrey 淺石板灰"
	LightSlateGrey$0
snippet color_LightSteelBlue "color LightSteelBlue 淺鋼藍"
	LightSteelBlue$0
snippet color_LightYellow "color LightYellow 淡黃色"
	LightYellow$0
snippet color_Lime "color Lime 酸橙"
	Lime$0
snippet color_LimeGreen "color LimeGreen 石灰綠"
	LimeGreen$0
snippet color_Linen "color Linen 亞麻布"
	Linen$0
snippet color_MOTIVATION "color MOTIVATION 動機"
	MOTIVATION$0
snippet color_Magenta "color Magenta 品紅"
	Magenta$0
snippet color_Maroon "color Maroon 栗色"
	Maroon$0
snippet color_MediumAquaMarine "color MediumAquaMarine MediumAquaMarine"
	MediumAquaMarine$0
snippet color_MediumBlue "color MediumBlue 中藍"
	MediumBlue$0
snippet color_MediumOrchid "color MediumOrchid 中蘭花"
	MediumOrchid$0
snippet color_MediumPurple "color MediumPurple 中紫"
	MediumPurple$0
snippet color_MediumSeaGreen "color MediumSeaGreen 中海綠"
	MediumSeaGreen$0
snippet color_MediumSlateBlue "color MediumSlateBlue 中石板藍"
	MediumSlateBlue$0
snippet color_MediumSpringGreen "color MediumSpringGreen 中春綠"
	MediumSpringGreen$0
snippet color_MediumTurquoise "color MediumTurquoise 中綠松石色"
	MediumTurquoise$0
snippet color_MediumVioletRed "color MediumVioletRed 中紫紅色"
	MediumVioletRed$0
snippet color_MidnightBlue "color MidnightBlue 午夜藍"
	MidnightBlue$0
snippet color_MintCream "color MintCream 薄荷霜"
	MintCream$0
snippet color_MistyRose "color MistyRose 迷霧玫瑰"
	MistyRose$0
snippet color_Moccasin "color Moccasin 鹿皮鞋"
	Moccasin$0
snippet color_NavajoWhite "color NavajoWhite 納瓦霍白人"
	NavajoWhite$0
snippet color_Navy "color Navy 海軍"
	Navy$0
snippet color_OldLace "color OldLace 老花邊"
	OldLace$0
snippet color_Olive "color Olive 橄欖"
	Olive$0
snippet color_OliveDrab "color OliveDrab 草綠色"
	OliveDrab$0
snippet color_Orange "color Orange 橙子"
	Orange$0
snippet color_OrangeRed "color OrangeRed 橙紅色"
	OrangeRed$0
snippet color_Orchid "color Orchid 蘭花"
	Orchid$0
snippet color_PHYSICAL "color PHYSICAL 身體的"
	PHYSICAL$0
snippet color_PaleGoldenRod "color PaleGoldenRod 淡金色棒"
	PaleGoldenRod$0
snippet color_PaleGreen "color PaleGreen 淡綠"
	PaleGreen$0
snippet color_PaleTurquoise "color PaleTurquoise 淡綠松石色"
	PaleTurquoise$0
snippet color_PaleVioletRed "color PaleVioletRed 淡紫紅色"
	PaleVioletRed$0
snippet color_PapayaWhip "color PapayaWhip 木瓜鞭"
	PapayaWhip$0
snippet color_PeachPuff "color PeachPuff 桃子泡芙"
	PeachPuff$0
snippet color_Peru "color Peru 秘魯"
	Peru$0
snippet color_Pink "color Pink 粉色的"
	Pink$0
snippet color_Plum "color Plum 李子"
	Plum$0
snippet color_PowderBlue "color PowderBlue 粉藍色"
	PowderBlue$0
snippet color_Purple "color Purple 紫色的"
	Purple$0
snippet color_Red "color Red 紅色的"
	Red$0
snippet color_RosyBrown "color RosyBrown 玫瑰棕"
	RosyBrown$0
snippet color_RoyalBlue "color RoyalBlue 寶藍色"
	RoyalBlue$0
snippet color_STRATEGY "color STRATEGY 戰略"
	STRATEGY$0
snippet color_SaddleBrown "color SaddleBrown 鞍棕"
	SaddleBrown$0
snippet color_Salmon "color Salmon 三文魚"
	Salmon$0
snippet color_SandyBrown "color SandyBrown 桑迪布朗"
	SandyBrown$0
snippet color_SeaGreen "color SeaGreen 海綠色"
	SeaGreen$0
snippet color_SeaShell "color SeaShell 貝殼"
	SeaShell$0
snippet color_Sienna "color Sienna 赭色"
	Sienna$0
snippet color_Silver "color Silver 銀"
	Silver$0
snippet color_SkyBlue "color SkyBlue 天藍色"
	SkyBlue$0
snippet color_SlateBlue "color SlateBlue 石板藍"
	SlateBlue$0
snippet color_SlateGray "color SlateGray 石板灰"
	SlateGray$0
snippet color_SlateGrey "color SlateGrey 板岩灰"
	SlateGrey$0
snippet color_Snow "color Snow 雪"
	Snow$0
snippet color_SpringGreen "color SpringGreen 春綠"
	SpringGreen$0
snippet color_SteelBlue "color SteelBlue 鋼藍"
	SteelBlue$0
snippet color_TECHNOLOGY "color TECHNOLOGY 技術"
	TECHNOLOGY$0
snippet color_Tan "color Tan 譚"
	Tan$0
snippet color_Teal "color Teal 藍綠色"
	Teal$0
snippet color_Thistle "color Thistle 薊"
	Thistle$0
snippet color_Tomato "color Tomato 番茄"
	Tomato$0
snippet color_Turquoise "color Turquoise 綠松石"
	Turquoise$0
snippet color_Violet "color Violet 紫色"
	Violet$0
snippet color_Wheat "color Wheat 小麥"
	Wheat$0
snippet color_White "color White 白色的"
	White$0
snippet color_WhiteSmoke "color WhiteSmoke 白色的煙"
	WhiteSmoke$0
snippet color_Yellow "color Yellow 黃色的"
	Yellow$0
snippet color_YellowGreen "color YellowGreen 黃綠色"
	YellowGreen$0
	
	
snippet LAYOUT_AS_SKETCH "skinparam handwritten true"
	LAYOUT_AS_SKETCH

snippet LAYOUT_TOP_DOWN "top to bottom direction"
	LAYOUT_TOP_DOWN

snippet LAYOUT_LEFT_RIGHT "left to right direction"
	LAYOUT_LEFT_RIGHT

snippet Lay_D(e_from,_e_to) "e_from -[hidden]D- e_to"
	Lay_D(${1:"e_from"}, ${2:"e_to"})$0

snippet Lay_U(e_from,_e_to) "e_from -[hidden]U- e_to"
	Lay_U(${1:"e_from"}, ${2:"e_to"})$0

snippet Lay_R(e_from,_e_to) "e_from -[hidden]R- e_to"
	Lay_R(${1:"e_from"}, ${2:"e_to"})$0

snippet Lay_L(e_from,_e_to) "e_from -[hidden]L- e_to"
	Lay_L(${1:"e_from"}, ${2:"e_to"})$0

snippet Boundary(e_alias,_e_label) "rectangle "==e_label" <<boundary>> as e_alias"
	Boundary(${1:"e_alias"}, ${2:"e_label"})$0

snippet Boundary(e_alias,_e_label,_e_type) "rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>" <<boundary>> as e_alias"
	Boundary(${1:"e_alias"}, ${2:"e_label"})$0

snippet Strategy_Resource(e_alias,_e_label) "archimate #STRATEGY "....\n e_label" <<strategy-resource>> as e_alias"
	Strategy_Resource(${1:"e_alias"}, ${2:"e_label"})$0

snippet Strategy_Capability(e_alias,_e_label) "archimate #STRATEGY "e_label" <<strategy-capability>> as e_alias"
	Strategy_Capability(${1:"e_alias"}, ${2:"e_label"})$0

snippet Strategy_CourseOfAction(e_alias,_e_label) "archimate #STRATEGY "e_label" <<strategy-course-of-action>> as e_alias"
	Strategy_CourseOfAction(${1:"e_alias"}, ${2:"e_label"})$0

snippet Strategy_ValueStream(e_alias,_e_label) "archimate #STRATEGY "e_label" <<strategy-value-stream>> as e_alias"
	Strategy_ValueStream(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Actor(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-actor>> as e_alias"
	Business_Actor(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Role(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-role>> as e_alias"
	Business_Role(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Collaboration(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-collaboration>> as e_alias"
	Business_Collaboration(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Interface(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-interface>> as e_alias"
	Business_Interface(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Process(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-process>> as e_alias"
	Business_Process(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Function(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-function>> as e_alias"
	Business_Function(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Interaction(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-interaction>> as e_alias"
	Business_Interaction(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Event(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-event>> as e_alias"
	Business_Event(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Service(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-service>> as e_alias"
	Business_Service(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Object(e_alias,_e_label) "archimate #BUSINESS "----\n e_label" <<business-object>> as e_alias"
	Business_Object(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Contract(e_alias,_e_label) "archimate #BUSINESS "----\n e_label\n----" <<business-contract>> as e_alias"
	Business_Contract(${1:"e_alias"}, ${2:"e_label"})$0

snippet Business_Representation(e_alias,_e_label) "archimate #BUSINESS "----\n e_label" <<business-representation>> as e_alias"
	Business_Representation(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Business_Product(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-product>> as e_alias"
	Business_Product(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Business_Location(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-location>> as e_alias"
	Business_Location(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Business_Activity(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-activity>> as e_alias"
	Business_Activity(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Business_Meaning(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-meaning>> as e_alias"
	Business_Meaning(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Business_Value(e_alias,_e_label) "archimate #BUSINESS "e_label" <<business-value>> as e_alias"
	Business_Value(${1:"e_alias"}, ${2:"e_label"})$0
	
snippet Application_Component(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-component>> as e_alias"
	Application_Component(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Collaboration(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-collaboration>> as e_alias"
	Application_Collaboration(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Interface(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-interface>> as e_alias"
	Application_Interface(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Function(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-function>> as e_alias"
	Application_Function(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Interaction(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-interaction>> as e_alias"
	Application_Interaction(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Process(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-process>> as e_alias"
	Application_Process(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Event(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-event>> as e_alias"
	Application_Event(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_Service(e_alias,_e_label) "archimate #APPLICATION "e_label" <<application-service>> as e_alias"
	Application_Service(${1:"e_alias"}, ${2:"e_label"})$0

snippet Application_DataObject(e_alias,_e_label) "archimate #APPLICATION "----\n e_label" <<application-data-object>> as e_alias"
	Application_DataObject(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Node(e_alias,_e_label) "node #TECHNOLOGY "e_label" <<$archimate/technology-node>> as e_alias"
	Technology_Node(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Device(e_alias,_e_label) "node #TECHNOLOGY "e_label" <<$archimate/technology-device>> as e_alias"
	Technology_Device(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_SystemSoftware(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-system-software>> as e_alias"
	Technology_SystemSoftware(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Collaboration(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-collaboration>> as e_alias"
	Technology_Collaboration(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Interface(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-infra-interface>> as e_alias"
	Technology_Interface(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Path(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-communication-path>> as e_alias"
	Technology_Path(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_CommunicationNetwork(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-network>> as e_alias"
	Technology_CommunicationNetwork(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Function(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-function>> as e_alias"
	Technology_Function(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Process(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-process>> as e_alias"
	Technology_Process(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Interaction(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-interaction>> as e_alias"
	Technology_Interaction(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Event(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-event>> as e_alias"
	Technology_Event(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Service(e_alias,_e_label) "archimate #TECHNOLOGY "e_label" <<technology-infra-service>> as e_alias"
	Technology_Service(${1:"e_alias"}, ${2:"e_label"})$0

snippet Technology_Artifact(e_alias,_e_label) "archimate #TECHNOLOGY "----\n e_label" <<technology-artifact>> as e_alias"
	Technology_Artifact(${1:"e_alias"}, ${2:"e_label"})$0

snippet Physical_Equipment(e_alias, e_label) "node #PHYSICAL "e_label" <<$archimate/physical-equipment>> as e_alias"
	Physical_Equipment(${1:"e_alias"}, ${2:"e_label"})$0

snippet Physical_Facility(e_alias,_e_label) "node #PHYSICAL "e_label" <<$archimate/physical-facility>> as e_alias"
	Physical_Facility(${1:"e_alias"}, ${2:"e_label"})$0

snippet Physical_DistributionNetwork(e_alias,_e_label) "archimate #PHYSICAL "e_label" <<physical-distribution-network>> as e_alias"
	Physical_DistributionNetwork(${1:"e_alias"}, ${2:"e_label"})$0

snippet Physical_Material(e_alias,_e_label) "archimate #PHYSICAL "----\n e_label" <<physical-material>> as e_alias"
	Physical_Material(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Stakeholder(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-stakeholder>> as e_alias"
	Motivation_Stakeholder(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Driver(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-driver>> as e_alias"
	Motivation_Driver(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Assessment(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-assessment>> as e_alias"
	Motivation_Assessment(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Goal(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-goal>> as e_alias"
	Motivation_Goal(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Outcome(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-outcome>> as e_alias"
	Motivation_Outcome(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Principle(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-principle>> as e_alias"
	Motivation_Principle(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Requirement(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-requirement>> as e_alias"
	Motivation_Requirement(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Constraint(e_alias,_e_label) "archimate #MOTIVATION "e_label" <<motivation-constraint>> as e_alias"
	Motivation_Constraint(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Meaning(e_alias,_e_label) "cloud #MOTIVATION "e_label" <<$archimate/motivation-meaning>> as e_alias"
	Motivation_Meaning(${1:"e_alias"}, ${2:"e_label"})$0

snippet Motivation_Value(e_alias,_e_label) "usecase #MOTIVATION "e_label" as e_alias"
	Motivation_Value(${1:"e_alias"}, ${2:"e_label"})$0

snippet Implementation_WorkPackage(e_alias,_e_label) "archimate #IMPLEMENTATION "e_label" <<implementation-workpackage>> as e_alias"
	Implementation_WorkPackage(${1:"e_alias"}, ${2:"e_label"})$0

snippet Implementation_Deliverable(e_alias,_e_label) "archimate #IMPLEMENTATION "----\n e_label" <<implementation-deliverable>> as e_alias"
	Implementation_Deliverable(${1:"e_alias"}, ${2:"e_label"})$0

snippet Implementation_Event(e_alias,_e_label) "archimate #IMPLEMENTATION "e_label" <<implementation-event>> as e_alias"
	Implementation_Event(${1:"e_alias"}, ${2:"e_label"})$0

snippet Implementation_Plateau(e_alias,_e_label) "node #PHYSICAL "e_label" <<$archimate/implementation-plateau>> as e_alias"
	Implementation_Plateau(${1:"e_alias"}, ${2:"e_label"})$0

snippet Implementation_Gap(e_alias,_e_label) "archimate #PHYSICAL "----\n e_label" <<implementation-gap>> as e_alias"
	Implementation_Gap(${1:"e_alias"}, ${2:"e_label"})$0

snippet Other_Location(e_alias,_e_label) "archimate #ffb973 "e_label" <<location>> as e_alias"
	Other_Location(${1:"e_alias"}, ${2:"e_label"})$0

snippet Junction_Or(e_alias,_e_label) "circle #whitesmoke "e_label" as e_alias"
	Junction_Or(${1:"e_alias"}, ${2:"e_label"})$0

snippet Junction_And(e_alias,_e_label) "circle #black "e_label" as e_alias"
	Junction_And(${1:"e_alias"}, ${2:"e_label"})$0

snippet Grouping(e_alias,_e_label) "Folder "e_label" <<grouping>> as e_alias"
	Grouping(${1:"e_alias"}, ${2:"e_label"})$0

snippet Group(e_alias,_e_label) "Folder "e_label" <<group>> as e_alias"
	Group(${1:"e_alias"}, ${2:"e_label"})$0

snippet Rel_(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Access_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Access_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Access_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Access_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Access_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Access_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Access_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Access_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Aggregation_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Aggregation_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Aggregation(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Aggregation(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Aggregation_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Aggregation_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Aggregation_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Aggregation_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Assignment_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Assignment_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Assignment_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Assignment_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Assignment_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Assignment_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Assignment_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Assignment_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Association_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Association_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Association_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Association_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Association_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Association_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Association_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Association_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Composition_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Composition_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Composition_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Composition_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Composition_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Composition_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Composition_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Composition_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Flow_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Flow_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Flow_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Flow_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Flow_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Flow_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Flow_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Flow_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Influence_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Influence_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Influence_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Influence_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Influence_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Influence_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Influence_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Influence_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Realization_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Realization_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Realization_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Realization_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Realization_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Realization_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Realization_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Realization_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Serving_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Serving_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Serving_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Serving_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Serving_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Serving_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Serving_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Serving_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Specialization_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Specialization_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Specialization_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Specialization_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Specialization_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Specialization_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Specialization_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Specialization_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Triggering_Up(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Triggering_Up(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Triggering_Down(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Triggering_Down(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Triggering_Left(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Triggering_Left(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet Rel_Triggering_Right(e_sourceAlias,_e_targetAlias,_e_label,_e_direction="") "e_sourceAlias e_direction e_targetAlias : "e_label""
	Rel_Triggering_Right(e_sourceAlias, e_targetAlias, e_label, e_direction="")
	
snippet openiconic_account-login "OpenIconic account-login"
	<&account-login>
	
snippet openiconic_account-logout "OpenIconic account-logout"
	<&account-logout>
	
snippet openiconic_action-redo "OpenIconic action-redo"
	<&action-redo>
	
snippet openiconic_action-undo "OpenIconic action-undo"
	<&action-undo>
	
snippet openiconic_align-center "OpenIconic align-center"
	<&align-center>
	
snippet openiconic_align-left "OpenIconic align-left"
	<&align-left>
	
snippet openiconic_align-right "OpenIconic align-right"
	<&align-right>
	
snippet openiconic_aperture "OpenIconic aperture"
	<&aperture>
	
snippet openiconic_arrow-bottom "OpenIconic arrow-bottom"
	<&arrow-bottom>
	
snippet openiconic_arrow-circle-bottom "OpenIconic arrow-circle-bottom"
	<&arrow-circle-bottom>
	
snippet openiconic_arrow-circle-left "OpenIconic arrow-circle-left"
	<&arrow-circle-left>
	
snippet openiconic_arrow-circle-right "OpenIconic arrow-circle-right"
	<&arrow-circle-right>
	
snippet openiconic_arrow-circle-top "OpenIconic arrow-circle-top"
	<&arrow-circle-top>
	
snippet openiconic_arrow-left "OpenIconic arrow-left"
	<&arrow-left>
	
snippet openiconic_arrow-right "OpenIconic arrow-right"
	<&arrow-right>
	
snippet openiconic_arrow-thick-bottom "OpenIconic arrow-thick-bottom"
	<&arrow-thick-bottom>
	
snippet openiconic_arrow-thick-left "OpenIconic arrow-thick-left"
	<&arrow-thick-left>
	
snippet openiconic_arrow-thick-right "OpenIconic arrow-thick-right"
	<&arrow-thick-right>
	
snippet openiconic_arrow-thick-top "OpenIconic arrow-thick-top"
	<&arrow-thick-top>
	
snippet openiconic_arrow-top "OpenIconic arrow-top"
	<&arrow-top>
	
snippet openiconic_audio-spectrum "OpenIconic audio-spectrum"
	<&audio-spectrum>
	
snippet openiconic_audio "OpenIconic audio"
	<&audio>
	
snippet openiconic_badge "OpenIconic badge"
	<&badge>
	
snippet openiconic_ban "OpenIconic ban"
	<&ban>
	
snippet openiconic_bar-chart "OpenIconic bar-chart"
	<&bar-chart>
	
snippet openiconic_basket "OpenIconic basket"
	<&basket>
	
snippet openiconic_battery-empty "OpenIconic battery-empty"
	<&battery-empty>
	
snippet openiconic_battery-full "OpenIconic battery-full"
	<&battery-full>
	
snippet openiconic_beaker "OpenIconic beaker"
	<&beaker>
	
snippet openiconic_bell "OpenIconic bell"
	<&bell>
	
snippet openiconic_bluetooth "OpenIconic bluetooth"
	<&bluetooth>
	
snippet openiconic_bold "OpenIconic bold"
	<&bold>
	
snippet openiconic_bolt "OpenIconic bolt"
	<&bolt>
	
snippet openiconic_book "OpenIconic book"
	<&book>
	
snippet openiconic_bookmark "OpenIconic bookmark"
	<&bookmark>
	
snippet openiconic_box "OpenIconic box"
	<&box>
	
snippet openiconic_briefcase "OpenIconic briefcase"
	<&briefcase>
	
snippet openiconic_british-pound "OpenIconic british-pound"
	<&british-pound>
	
snippet openiconic_browser "OpenIconic browser"
	<&browser>
	
snippet openiconic_brush "OpenIconic brush"
	<&brush>
	
snippet openiconic_bug "OpenIconic bug"
	<&bug>
	
snippet openiconic_bullhorn "OpenIconic bullhorn"
	<&bullhorn>
	
snippet openiconic_calculator "OpenIconic calculator"
	<&calculator>
	
snippet openiconic_calendar "OpenIconic calendar"
	<&calendar>
	
snippet openiconic_camera-sir "OpenIconic camera-sir"
	<&camera-sir>
	
snippet openiconic_caret-bottom "OpenIconic caret-bottom"
	<&caret-bottom>
	
snippet openiconic_caret-left "OpenIconic caret-left"
	<&caret-left>
	
snippet openiconic_caret-right "OpenIconic caret-right"
	<&caret-right>
	
snippet openiconic_caret-top "OpenIconic caret-top"
	<&caret-top>
	
snippet openiconic_cart "OpenIconic cart"
	<&cart>
	
snippet openiconic_chat "OpenIconic chat"
	<&chat>
	
snippet openiconic_check "OpenIconic check"
	<&check>
	
snippet openiconic_chevron-bottom "OpenIconic chevron-bottom"
	<&chevron-bottom>
	
snippet openiconic_chevron-left "OpenIconic chevron-left"
	<&chevron-left>
	
snippet openiconic_chevron-right "OpenIconic chevron-right"
	<&chevron-right>
	
snippet openiconic_chevron-top "OpenIconic chevron-top"
	<&chevron-top>
	
snippet openiconic_circle-check "OpenIconic circle-check"
	<&circle-check>
	
snippet openiconic_circle-x "OpenIconic circle-x"
	<&circle-x>
	
snippet openiconic_clipboard "OpenIconic clipboard"
	<&clipboard>
	
snippet openiconic_cloud "OpenIconic cloud"
	<&cloud>
	
snippet openiconic_cloudy "OpenIconic cloudy"
	<&cloudy>
	
snippet openiconic_code "OpenIconic code"
	<&code>
	
snippet openiconic_cog "OpenIconic cog"
	<&cog>
	
snippet openiconic_collapse-down "OpenIconic collapse-down"
	<&collapse-down>
	
snippet openiconic_collapse-left "OpenIconic collapse-left"
	<&collapse-left>
	
snippet openiconic_collapse-right "OpenIconic collapse-right"
	<&collapse-right>
	
snippet openiconic_collapse-up "OpenIconic collapse-up"
	<&collapse-up>
	
snippet openiconic_command "OpenIconic command"
	<&command>
	
snippet openiconic_comment-square "OpenIconic comment-square"
	<&comment-square>
	
snippet openiconic_compass "OpenIconic compass"
	<&compass>
	
snippet openiconic_contrast "OpenIconic contrast"
	<&contrast>
	
snippet openiconic_copywriting "OpenIconic copywriting"
	<&copywriting>
	
snippet openiconic_credit-card "OpenIconic credit-card"
	<&credit-card>
	
snippet openiconic_crop "OpenIconic crop"
	<&crop>
	
snippet openiconic_dashboard "OpenIconic dashboard"
	<&dashboard>
	
snippet openiconic_data-transfer-download "OpenIconic data-transfer-download"
	<&data-transfer-download>
	
snippet openiconic_data-transfer-upload "OpenIconic data-transfer-upload"
	<&data-transfer-upload>
	
snippet openiconic_delete "OpenIconic delete"
	<&delete>
	
snippet openiconic_dial "OpenIconic dial"
	<&dial>
	
snippet openiconic_document "OpenIconic document"
	<&document>
	
snippet openiconic_dollar "OpenIconic dollar"
	<&dollar>
	
snippet openiconic_double-quote-sans-left "OpenIconic double-quote-sans-left"
	<&double-quote-sans-left>
	
snippet openiconic_double-quote-sans-right "OpenIconic double-quote-sans-right"
	<&double-quote-sans-right>
	
snippet openiconic_clock "OpenIconic clock"
	<&clock>
	
snippet openiconic_cloud-download "OpenIconic cloud-download"
	<&cloud-download>
	
snippet openiconic_cloud-upload "OpenIconic cloud-upload"
	<&cloud-upload>
	
snippet openiconic_double-quote-serif-left "OpenIconic double-quote-serif-left"
	<&double-quote-serif-left>
	
snippet openiconic_double-quote-serif-right "OpenIconic double-quote-serif-right"
	<&double-quote-serif-right>
	
snippet openiconic_droplet "OpenIconic droplet"
	<&droplet>
	
snippet openiconic_eject "OpenIconic eject"
	<&eject>
	
snippet openiconic_elevator "OpenIconic elevator"
	<&elevator>
	
snippet openiconic_ellipses "OpenIconic ellipses"
	<&ellipses>
	
snippet openiconic_envelope-closed "OpenIconic envelope-closed"
	<&envelope-closed>
	
snippet openiconic_envelope-open "OpenIconic envelope-open"
	<&envelope-open>
	
snippet openiconic_euro "OpenIconic euro"
	<&euro>
	
snippet openiconic_excerpt "OpenIconic excerpt"
	<&excerpt>
	
snippet openiconic_expand-down "OpenIconic expand-down"
	<&expand-down>
	
snippet openiconic_expand-left "OpenIconic expand-left"
	<&expand-left>
	
snippet openiconic_expand-right "OpenIconic expand-right"
	<&expand-right>
	
snippet openiconic_expand-up "OpenIconic expand-up"
	<&expand-up>
	
snippet openiconic_external-link "OpenIconic external-link"
	<&external-link>
	
snippet openiconic_eye "OpenIconic eye"
	<&eye>
	
snippet openiconic_eyedropper "OpenIconic eyedropper"
	<&eyedropper>
	
snippet openiconic_file "OpenIconic file"
	<&file>
	
snippet openiconic_fire "OpenIconic fire"
	<&fire>
	
snippet openiconic_flag "OpenIconic flag"
	<&flag>
	
snippet openiconic_flash "OpenIconic flash"
	<&flash>
	
snippet openiconic_folder "OpenIconic folder"
	<&folder>
	
snippet openiconic_fork "OpenIconic fork"
	<&fork>
	
snippet openiconic_fullscreen-enter "OpenIconic fullscreen-enter"
	<&fullscreen-enter>
	
snippet openiconic_fullscreen-exit "OpenIconic fullscreen-exit"
	<&fullscreen-exit>
	
snippet openiconic_globe "OpenIconic globe"
	<&globe>
	
snippet openiconic_graph "OpenIconic graph"
	<&graph>
	
snippet openiconic_grid-four-up "OpenIconic grid-four-up"
	<&grid-four-up>
	
snippet openiconic_grid-three-up "OpenIconic grid-three-up"
	<&grid-three-up>
	
snippet openiconic_grid-two-up "OpenIconic grid-two-up"
	<&grid-two-up>
	
snippet openiconic_hard-drive "OpenIconic hard-drive"
	<&hard-drive>
	
snippet openiconic_header "OpenIconic header"
	<&header>
	
snippet openiconic_headphones "OpenIconic headphones"
	<&headphones>
	
snippet openiconic_heart "OpenIconic heart"
	<&heart>
	
snippet openiconic_home "OpenIconic home"
	<&home>
	
snippet openiconic_image "OpenIconic image"
	<&image>
	
snippet openiconic_inbox "OpenIconic inbox"
	<&inbox>
	
snippet openiconic_infinity "OpenIconic infinity"
	<&infinity>
	
snippet openiconic_info "OpenIconic info"
	<&info>
	
snippet openiconic_italic "OpenIconic italic"
	<&italic>
	
snippet openiconic_justify-center "OpenIconic justify-center"
	<&justify-center>
	
snippet openiconic_justify-left "OpenIconic justify-left"
	<&justify-left>
	
snippet openiconic_justify-right "OpenIconic justify-right"
	<&justify-right>
	
snippet openiconic_key "OpenIconic key"
	<&key>
	
snippet openiconic_laptop "OpenIconic laptop"
	<&laptop>
	
snippet openiconic_layers "OpenIconic layers"
	<&layers>
	
snippet openiconic_lightbulb "OpenIconic lightbulb"
	<&lightbulb>
	
snippet openiconic_link-broken "OpenIconic link-broken"
	<&link-broken>
	
snippet openiconic_link-intact "OpenIconic link-intact"
	<&link-intact>
	
snippet openiconic_list-rich "OpenIconic list-rich"
	<&list-rich>
	
snippet openiconic_list "OpenIconic list"
	<&list>
	
snippet openiconic_location "OpenIconic location"
	<&location>
	
snippet openiconic_lock-locked "OpenIconic lock-locked"
	<&lock-locked>
	
snippet openiconic_lock-unlocked "OpenIconic lock-unlocked"
	<&lock-unlocked>
	
snippet openiconic_loop-circular "OpenIconic loop-circular"
	<&loop-circular>
	
snippet openiconic_loop-square "OpenIconic loop-square"
	<&loop-square>
	
snippet openiconic_loop "OpenIconic loop"
	<&loop>
	
snippet openiconic_magnifying-glass "OpenIconic magnifying-glass"
	<&magnifying-glass>
	
snippet openiconic_map-marker "OpenIconic map-marker"
	<&map-marker>
	
snippet openiconic_map "OpenIconic map"
	<&map>
	
snippet openiconic_media-pause "OpenIconic media-pause"
	<&media-pause>
	
snippet openiconic_media-play "OpenIconic media-play"
	<&media-play>
	
snippet openiconic_media-record "OpenIconic media-record"
	<&media-record>
	
snippet openiconic_media-skip-backward "OpenIconic media-skip-backward"
	<&media-skip-backward>
	
snippet openiconic_media-skip-forward "OpenIconic media-skip-forward"
	<&media-skip-forward>
	
snippet openiconic_media-step-backward "OpenIconic media-step-backward"
	<&media-step-backward>
	
snippet openiconic_media-step-forward "OpenIconic media-step-forward"
	<&media-step-forward>
	
snippet openiconic_media-stop "OpenIconic media-stop"
	<&media-stop>
	
snippet openiconic_medical-cross "OpenIconic medical-cross"
	<&medical-cross>
	
snippet openiconic_menu "OpenIconic menu"
	<&menu>
	
snippet openiconic_microphone "OpenIconic microphone"
	<&microphone>
	
snippet openiconic_minus "OpenIconic minus"
	<&minus>
	
snippet openiconic_monitor "OpenIconic monitor"
	<&monitor>
	
snippet openiconic_moon "OpenIconic moon"
	<&moon>
	
snippet openiconic_move "OpenIconic move"
	<&move>
	
snippet openiconic_musical-note "OpenIconic musical-note"
	<&musical-note>
	
snippet openiconic_paperclip "OpenIconic paperclip"
	<&paperclip>
	
snippet openiconic_pencil "OpenIconic pencil"
	<&pencil>
	
snippet openiconic_people "OpenIconic people"
	<&people>
	
snippet openiconic_person "OpenIconic person"
	<&person>
	
snippet openiconic_phone "OpenIconic phone"
	<&phone>
	
snippet openiconic_pie-chart "OpenIconic pie-chart"
	<&pie-chart>
	
snippet openiconic_pin "OpenIconic pin"
	<&pin>
	
snippet openiconic_play-circle "OpenIconic play-circle"
	<&play-circle>
	
snippet openiconic_plus "OpenIconic plus"
	<&plus>
	
snippet openiconic_power-standby "OpenIconic power-standby"
	<&power-standby>
	
snippet openiconic_print "OpenIconic print"
	<&print>
	
snippet openiconic_project "OpenIconic project"
	<&project>
	
snippet openiconic_pulse "OpenIconic pulse"
	<&pulse>
	
snippet openiconic_puzzle-piece "OpenIconic puzzle-piece"
	<&puzzle-piece>
	
snippet openiconic_question-mark "OpenIconic question-mark"
	<&question-mark>
	
snippet openiconic_rain "OpenIconic rain"
	<&rain>
	
snippet openiconic_random "OpenIconic random"
	<&random>
	
snippet openiconic_reload "OpenIconic reload"
	<&reload>
	
snippet openiconic_resize-both "OpenIconic resize-both"
	<&resize-both>
	
snippet openiconic_resize-height "OpenIconic resize-height"
	<&resize-height>
	
snippet openiconic_resize-width "OpenIconic resize-width"
	<&resize-width>
	
snippet openiconic_rss-alt "OpenIconic rss-alt"
	<&rss-alt>
	
snippet openiconic_rss "OpenIconic rss"
	<&rss>
	
snippet openiconic_script "OpenIconic script"
	<&script>
	
snippet openiconic_share-boxed "OpenIconic share-boxed"
	<&share-boxed>
	
snippet openiconic_share "OpenIconic share"
	<&share>
	
snippet openiconic_shield "OpenIconic shield"
	<&shield>
	
snippet openiconic_signal "OpenIconic signal"
	<&signal>
	
snippet openiconic_signpost "OpenIconic signpost"
	<&signpost>
	
snippet openiconic_sort-ascending "OpenIconic sort-ascending"
	<&sort-ascending>
	
snippet openiconic_sort-descending "OpenIconic sort-descending"
	<&sort-descending>
	
snippet openiconic_spreadsheet "OpenIconic spreadsheet"
	<&spreadsheet>
	
snippet openiconic_star "OpenIconic star"
	<&star>
	
snippet openiconic_sun "OpenIconic sun"
	<&sun>
	
snippet openiconic_tablet "OpenIconic tablet"
	<&tablet>
	
snippet openiconic_tag "OpenIconic tag"
	<&tag>
	
snippet openiconic_tags "OpenIconic tags"
	<&tags>
	
snippet openiconic_target "OpenIconic target"
	<&target>
	
snippet openiconic_task "OpenIconic task"
	<&task>
	
snippet openiconic_terminal "OpenIconic terminal"
	<&terminal>
	
snippet openiconic_text "OpenIconic text"
	<&text>
	
snippet openiconic_thumb-down "OpenIconic thumb-down"
	<&thumb-down>
	
snippet openiconic_thumb-up "OpenIconic thumb-up"
	<&thumb-up>
	
snippet openiconic_timer "OpenIconic timer"
	<&timer>
	
snippet openiconic_transfer "OpenIconic transfer"
	<&transfer>
	
snippet openiconic_trash "OpenIconic trash"
	<&trash>
	
snippet openiconic_underline "OpenIconic underline"
	<&underline>
	
snippet openiconic_vertical-align-bottom "OpenIconic vertical-align-bottom"
	<&vertical-align-bottom>
	
snippet openiconic_vertical-align-center "OpenIconic vertical-align-center"
	<&vertical-align-center>
	
snippet openiconic_vertical-align-top "OpenIconic vertical-align-top"
	<&vertical-align-top>
	
snippet openiconic_video "OpenIconic video"
	<&video>
	
snippet openiconic_volume-high "OpenIconic volume-high"
	<&volume-high>
	
snippet openiconic_volume-low "OpenIconic volume-low"
	<&volume-low>
	
snippet openiconic_volume-off "OpenIconic volume-off"
	<&volume-off>
	
snippet openiconic_warning "OpenIconic warning"
	<&warning>
	
snippet openiconic_wifi "OpenIconic wifi"
	<&wifi>
	
snippet openiconic_wrench "OpenIconic wrench"
	<&wrench>
	
snippet openiconic_x "OpenIconic x"
	<&x>
	
snippet openiconic_yen "OpenIconic yen"
	<&yen>
	
snippet openiconic_zoom-in "OpenIconic zoom-in"
	<&zoom-in>
	
snippet openiconic_zoom-out "OpenIconic zoom-out"
	<&zoom-out>
	
snippet emoji_sunny "Emoji sunny"
	<:sunny:>
	
	
snippet emoji_cloud "Emoji cloud"
	<:cloud:>
	
	
snippet emoji_open_umbrella "Emoji open_umbrella"
	<:open_umbrella:>
	
	
snippet emoji_snowman_with_snow "Emoji snowman_with_snow"
	<:snowman_with_snow:>
	
	
snippet emoji_comet "Emoji comet"
	<:comet:>
	
	
snippet emoji_phone "Emoji phone"
	<:phone:>
	
	
snippet emoji_ballot_box_with_check "Emoji ballot_box_with_check"
	<:ballot_box_with_check:>
	
	
snippet emoji_umbrella "Emoji umbrella"
	<:umbrella:>
	
	
snippet emoji_coffee "Emoji coffee"
	<:coffee:>
	
	
snippet emoji_shamrock "Emoji shamrock"
	<:shamrock:>
	
	
snippet emoji_point_up "Emoji point_up"
	<:point_up:>
	
	
snippet emoji_skull_and_crossbones "Emoji skull_and_crossbones"
	<:skull_and_crossbones:>
	
	
snippet emoji_radioactive "Emoji radioactive"
	<:radioactive:>
	
	
snippet emoji_biohazard "Emoji biohazard"
	<:biohazard:>
	
	
snippet emoji_orthodox_cross "Emoji orthodox_cross"
	<:orthodox_cross:>
	
	
snippet emoji_star_and_crescent "Emoji star_and_crescent"
	<:star_and_crescent:>
	
	
snippet emoji_peace_symbol "Emoji peace_symbol"
	<:peace_symbol:>
	
	
snippet emoji_yin_yang "Emoji yin_yang"
	<:yin_yang:>
	
	
snippet emoji_wheel_of_dharma "Emoji wheel_of_dharma"
	<:wheel_of_dharma:>
	
	
snippet emoji_frowning_face "Emoji frowning_face"
	<:frowning_face:>
	
	
snippet emoji_relaxed "Emoji relaxed"
	<:relaxed:>
	
	
snippet emoji_female_sign "Emoji female_sign"
	<:female_sign:>
	
	
snippet emoji_male_sign "Emoji male_sign"
	<:male_sign:>
	
	
snippet emoji_aries "Emoji aries"
	<:aries:>
	
	
snippet emoji_taurus "Emoji taurus"
	<:taurus:>
	
	
snippet emoji_gemini "Emoji gemini"
	<:gemini:>
	
	
snippet emoji_cancer "Emoji cancer"
	<:cancer:>
	
	
snippet emoji_leo "Emoji leo"
	<:leo:>
	
	
snippet emoji_virgo "Emoji virgo"
	<:virgo:>
	
	
snippet emoji_libra "Emoji libra"
	<:libra:>
	
	
snippet emoji_scorpius "Emoji scorpius"
	<:scorpius:>
	
	
snippet emoji_sagittarius "Emoji sagittarius"
	<:sagittarius:>
	
	
snippet emoji_capricorn "Emoji capricorn"
	<:capricorn:>
	
	
snippet emoji_aquarius "Emoji aquarius"
	<:aquarius:>
	
	
snippet emoji_pisces "Emoji pisces"
	<:pisces:>
	
	
snippet emoji_chess_pawn "Emoji chess_pawn"
	<:chess_pawn:>
	
	
snippet emoji_spades "Emoji spades"
	<:spades:>
	
	
snippet emoji_clubs "Emoji clubs"
	<:clubs:>
	
	
snippet emoji_hearts "Emoji hearts"
	<:hearts:>
	
	
snippet emoji_diamonds "Emoji diamonds"
	<:diamonds:>
	
	
snippet emoji_hotsprings "Emoji hotsprings"
	<:hotsprings:>
	
	
snippet emoji_recycle "Emoji recycle"
	<:recycle:>
	
	
snippet emoji_infinity "Emoji infinity"
	<:infinity:>
	
	
snippet emoji_wheelchair "Emoji wheelchair"
	<:wheelchair:>
	
	
snippet emoji_hammer_and_pick "Emoji hammer_and_pick"
	<:hammer_and_pick:>
	
	
snippet emoji_anchor "Emoji anchor"
	<:anchor:>
	
	
snippet emoji_crossed_swords "Emoji crossed_swords"
	<:crossed_swords:>
	
	
snippet emoji_medical_symbol "Emoji medical_symbol"
	<:medical_symbol:>
	
	
snippet emoji_balance_scale "Emoji balance_scale"
	<:balance_scale:>
	
	
snippet emoji_alembic "Emoji alembic"
	<:alembic:>
	
	
snippet emoji_gear "Emoji gear"
	<:gear:>
	
	
snippet emoji_atom_symbol "Emoji atom_symbol"
	<:atom_symbol:>
	
	
snippet emoji_fleur_de_lis "Emoji fleur_de_lis"
	<:fleur_de_lis:>
	
	
snippet emoji_warning "Emoji warning"
	<:warning:>
	
	
snippet emoji_zap "Emoji zap"
	<:zap:>
	
	
snippet emoji_transgender_symbol "Emoji transgender_symbol"
	<:transgender_symbol:>
	
	
snippet emoji_white_circle "Emoji white_circle"
	<:white_circle:>
	
	
snippet emoji_black_circle "Emoji black_circle"
	<:black_circle:>
	
	
snippet emoji_coffin "Emoji coffin"
	<:coffin:>
	
	
snippet emoji_funeral_urn "Emoji funeral_urn"
	<:funeral_urn:>
	
	
snippet emoji_soccer "Emoji soccer"
	<:soccer:>
	
	
snippet emoji_baseball "Emoji baseball"
	<:baseball:>
	
	
snippet emoji_snowman "Emoji snowman"
	<:snowman:>
	
	
snippet emoji_partly_sunny "Emoji partly_sunny"
	<:partly_sunny:>
	
	
snippet emoji_cloud_with_lightning_and_rain "Emoji cloud_with_lightning_and_rain"
	<:cloud_with_lightning_and_rain:>
	
	
snippet emoji_ophiuchus "Emoji ophiuchus"
	<:ophiuchus:>
	
	
snippet emoji_pick "Emoji pick"
	<:pick:>
	
	
snippet emoji_rescue_worker_helmet "Emoji rescue_worker_helmet"
	<:rescue_worker_helmet:>
	
	
snippet emoji_chains "Emoji chains"
	<:chains:>
	
	
snippet emoji_no_entry "Emoji no_entry"
	<:no_entry:>
	
	
snippet emoji_shinto_shrine "Emoji shinto_shrine"
	<:shinto_shrine:>
	
	
snippet emoji_church "Emoji church"
	<:church:>
	
	
snippet emoji_mountain "Emoji mountain"
	<:mountain:>
	
	
snippet emoji_parasol_on_ground "Emoji parasol_on_ground"
	<:parasol_on_ground:>
	
	
snippet emoji_fountain "Emoji fountain"
	<:fountain:>
	
	
snippet emoji_golf "Emoji golf"
	<:golf:>
	
	
snippet emoji_ferry "Emoji ferry"
	<:ferry:>
	
	
snippet emoji_boat "Emoji boat"
	<:boat:>
	
	
snippet emoji_skier "Emoji skier"
	<:skier:>
	
	
snippet emoji_ice_skate "Emoji ice_skate"
	<:ice_skate:>
	
	
snippet emoji_bouncing_ball_person "Emoji bouncing_ball_person"
	<:bouncing_ball_person:>
	
	
snippet emoji_tent "Emoji tent"
	<:tent:>
	
	
snippet emoji_fuelpump "Emoji fuelpump"
	<:fuelpump:>
	
	
snippet emoji_rat "Emoji rat"
	<:rat:>
	
	
snippet emoji_mouse2 "Emoji mouse2"
	<:mouse2:>
	
	
snippet emoji_ox "Emoji ox"
	<:ox:>
	
	
snippet emoji_water_buffalo "Emoji water_buffalo"
	<:water_buffalo:>
	
	
snippet emoji_cow2 "Emoji cow2"
	<:cow2:>
	
	
snippet emoji_tiger2 "Emoji tiger2"
	<:tiger2:>
	
	
snippet emoji_leopard "Emoji leopard"
	<:leopard:>
	
	
snippet emoji_rabbit2 "Emoji rabbit2"
	<:rabbit2:>
	
	
snippet emoji_cat2 "Emoji cat2"
	<:cat2:>
	
	
snippet emoji_dragon "Emoji dragon"
	<:dragon:>
	
	
snippet emoji_crocodile "Emoji crocodile"
	<:crocodile:>
	
	
snippet emoji_whale2 "Emoji whale2"
	<:whale2:>
	
	
snippet emoji_snail "Emoji snail"
	<:snail:>
	
	
snippet emoji_snake "Emoji snake"
	<:snake:>
	
	
snippet emoji_racehorse "Emoji racehorse"
	<:racehorse:>
	
	
snippet emoji_ram "Emoji ram"
	<:ram:>
	
	
snippet emoji_goat "Emoji goat"
	<:goat:>
	
	
snippet emoji_sheep "Emoji sheep"
	<:sheep:>
	
	
snippet emoji_monkey "Emoji monkey"
	<:monkey:>
	
	
snippet emoji_rooster "Emoji rooster"
	<:rooster:>
	
	
snippet emoji_chicken "Emoji chicken"
	<:chicken:>
	
	
snippet emoji_dog2 "Emoji dog2"
	<:dog2:>
	
	
snippet emoji_pig2 "Emoji pig2"
	<:pig2:>
	
	
snippet emoji_boar "Emoji boar"
	<:boar:>
	
	
snippet emoji_elephant "Emoji elephant"
	<:elephant:>
	
	
snippet emoji_octopus "Emoji octopus"
	<:octopus:>
	
	
snippet emoji_shell "Emoji shell"
	<:shell:>
	
	
snippet emoji_bug "Emoji bug"
	<:bug:>
	
	
snippet emoji_ant "Emoji ant"
	<:ant:>
	
	
snippet emoji_bee "Emoji bee"
	<:bee:>
	
	
snippet emoji_lady_beetle "Emoji lady_beetle"
	<:lady_beetle:>
	
	
snippet emoji_fish "Emoji fish"
	<:fish:>
	
	
snippet emoji_tropical_fish "Emoji tropical_fish"
	<:tropical_fish:>
	
	
snippet emoji_blowfish "Emoji blowfish"
	<:blowfish:>
	
	
snippet emoji_turtle "Emoji turtle"
	<:turtle:>
	
	
snippet emoji_hatching_chick "Emoji hatching_chick"
	<:hatching_chick:>
	
	
snippet emoji_baby_chick "Emoji baby_chick"
	<:baby_chick:>
	
	
snippet emoji_hatched_chick "Emoji hatched_chick"
	<:hatched_chick:>
	
	
snippet emoji_bird "Emoji bird"
	<:bird:>
	
	
snippet emoji_penguin "Emoji penguin"
	<:penguin:>
	
	
snippet emoji_koala "Emoji koala"
	<:koala:>
	
	
snippet emoji_poodle "Emoji poodle"
	<:poodle:>
	
	
snippet emoji_dromedary_camel "Emoji dromedary_camel"
	<:dromedary_camel:>
	
	
snippet emoji_camel "Emoji camel"
	<:camel:>
	
	
snippet emoji_dolphin "Emoji dolphin"
	<:dolphin:>
	
	
snippet emoji_mouse "Emoji mouse"
	<:mouse:>
	
	
snippet emoji_cow "Emoji cow"
	<:cow:>
	
	
snippet emoji_tiger "Emoji tiger"
	<:tiger:>
	
	
snippet emoji_rabbit "Emoji rabbit"
	<:rabbit:>
	
	
snippet emoji_cat "Emoji cat"
	<:cat:>
	
	
snippet emoji_dragon_face "Emoji dragon_face"
	<:dragon_face:>
	
	
snippet emoji_whale "Emoji whale"
	<:whale:>
	
	
snippet emoji_horse "Emoji horse"
	<:horse:>
	
	
snippet emoji_monkey_face "Emoji monkey_face"
	<:monkey_face:>
	
	
snippet emoji_dog "Emoji dog"
	<:dog:>
	
	
snippet emoji_pig "Emoji pig"
	<:pig:>
	
	
snippet emoji_frog "Emoji frog"
	<:frog:>
	
	
snippet emoji_hamster "Emoji hamster"
	<:hamster:>
	
	
snippet emoji_wolf "Emoji wolf"
	<:wolf:>
	
	
snippet emoji_bear "Emoji bear"
	<:bear:>
	
	
snippet emoji_shirt "Emoji shirt"
	<:shirt:>
	
	
snippet emoji_jeans "Emoji jeans"
	<:jeans:>
	
	
snippet emoji_dress "Emoji dress"
	<:dress:>
	
	
snippet emoji_kimono "Emoji kimono"
	<:kimono:>
	
	
snippet emoji_bikini "Emoji bikini"
	<:bikini:>
	
	
snippet emoji_womans_clothes "Emoji womans_clothes"
	<:womans_clothes:>
	
	
snippet emoji_purse "Emoji purse"
	<:purse:>
	
	
snippet emoji_handbag "Emoji handbag"
	<:handbag:>
	
	
snippet emoji_pouch "Emoji pouch"
	<:pouch:>
	
	
snippet emoji_mans_shoe "Emoji mans_shoe"
	<:mans_shoe:>
	
	
snippet emoji_athletic_shoe "Emoji athletic_shoe"
	<:athletic_shoe:>
	
	
snippet emoji_high_heel "Emoji high_heel"
	<:high_heel:>
	
	
snippet emoji_sandal "Emoji sandal"
	<:sandal:>
	
	
snippet emoji_boot "Emoji boot"
	<:boot:>
	
	
snippet emoji_footprints "Emoji footprints"
	<:footprints:>
	
	
snippet emoji_bust_in_silhouette "Emoji bust_in_silhouette"
	<:bust_in_silhouette:>
	
	
snippet emoji_busts_in_silhouette "Emoji busts_in_silhouette"
	<:busts_in_silhouette:>
	
	
snippet emoji_boy "Emoji boy"
	<:boy:>
	
	
snippet emoji_girl "Emoji girl"
	<:girl:>
	
	
snippet emoji_man "Emoji man"
	<:man:>
	
	
snippet emoji_woman "Emoji woman"
	<:woman:>
	
	
snippet emoji_family "Emoji family"
	<:family:>
	
	
snippet emoji_couple "Emoji couple"
	<:couple:>
	
	
snippet emoji_two_men_holding_hands "Emoji two_men_holding_hands"
	<:two_men_holding_hands:>
	
	
snippet emoji_two_women_holding_hands "Emoji two_women_holding_hands"
	<:two_women_holding_hands:>
	
	
snippet emoji_cop "Emoji cop"
	<:cop:>
	
	
snippet emoji_dancers "Emoji dancers"
	<:dancers:>
	
	
snippet emoji_person_with_veil "Emoji person_with_veil"
	<:person_with_veil:>
	
	
snippet emoji_blond_haired_person "Emoji blond_haired_person"
	<:blond_haired_person:>
	
	
snippet emoji_man_with_gua_pi_mao "Emoji man_with_gua_pi_mao"
	<:man_with_gua_pi_mao:>
	
	
snippet emoji_person_with_turban "Emoji person_with_turban"
	<:person_with_turban:>
	
	
snippet emoji_older_man "Emoji older_man"
	<:older_man:>
	
	
snippet emoji_older_woman "Emoji older_woman"
	<:older_woman:>
	
	
snippet emoji_baby "Emoji baby"
	<:baby:>
	
	
snippet emoji_construction_worker "Emoji construction_worker"
	<:construction_worker:>
	
	
snippet emoji_princess "Emoji princess"
	<:princess:>
	
	
snippet emoji_japanese_ogre "Emoji japanese_ogre"
	<:japanese_ogre:>
	
	
snippet emoji_japanese_goblin "Emoji japanese_goblin"
	<:japanese_goblin:>
	
	
snippet emoji_ghost "Emoji ghost"
	<:ghost:>
	
	
snippet emoji_angel "Emoji angel"
	<:angel:>
	
	
snippet emoji_alien "Emoji alien"
	<:alien:>
	
	
snippet emoji_space_invader "Emoji space_invader"
	<:space_invader:>
	
	
snippet emoji_imp "Emoji imp"
	<:imp:>
	
	
snippet emoji_skull "Emoji skull"
	<:skull:>
	
	
snippet emoji_information_desk_person "Emoji information_desk_person"
	<:information_desk_person:>
	
	
snippet emoji_guard "Emoji guard"
	<:guard:>
	
	
snippet emoji_dancer "Emoji dancer"
	<:dancer:>
	
	
snippet emoji_lipstick "Emoji lipstick"
	<:lipstick:>
	
	
snippet emoji_nail_care "Emoji nail_care"
	<:nail_care:>
	
	
snippet emoji_massage "Emoji massage"
	<:massage:>
	
	
snippet emoji_haircut "Emoji haircut"
	<:haircut:>
	
	
snippet emoji_barber "Emoji barber"
	<:barber:>
	
	
snippet emoji_syringe "Emoji syringe"
	<:syringe:>
	
	
snippet emoji_pill "Emoji pill"
	<:pill:>
	
	
snippet emoji_kiss "Emoji kiss"
	<:kiss:>
	
	
snippet emoji_love_letter "Emoji love_letter"
	<:love_letter:>
	
	
snippet emoji_ring "Emoji ring"
	<:ring:>
	
	
snippet emoji_gem "Emoji gem"
	<:gem:>
	
	
snippet emoji_couplekiss "Emoji couplekiss"
	<:couplekiss:>
	
	
snippet emoji_bouquet "Emoji bouquet"
	<:bouquet:>
	
	
snippet emoji_muscle "Emoji muscle"
	<:muscle:>
	
	
snippet emoji_dizzy "Emoji dizzy"
	<:dizzy:>
	
	
snippet emoji_speech_balloon "Emoji speech_balloon"
	<:speech_balloon:>
	
	
snippet emoji_thought_balloon "Emoji thought_balloon"
	<:thought_balloon:>
	
	
snippet emoji_white_flower "Emoji white_flower"
	<:white_flower:>
	
	
snippet emoji_100 "Emoji 100"
	<:100:>
	
	
snippet emoji_moneybag "Emoji moneybag"
	<:moneybag:>
	
	
snippet emoji_currency_exchange "Emoji currency_exchange"
	<:currency_exchange:>
	
	
snippet emoji_heavy_dollar_sign "Emoji heavy_dollar_sign"
	<:heavy_dollar_sign:>
	
	
snippet emoji_credit_card "Emoji credit_card"
	<:credit_card:>
	
	
snippet emoji_yen "Emoji yen"
	<:yen:>
	
	
snippet emoji_dollar "Emoji dollar"
	<:dollar:>
	
	
snippet emoji_euro "Emoji euro"
	<:euro:>
	
	
snippet emoji_pound "Emoji pound"
	<:pound:>
	
	
snippet emoji_money_with_wings "Emoji money_with_wings"
	<:money_with_wings:>
	
	
snippet emoji_chart "Emoji chart"
	<:chart:>
	
	
snippet emoji_seat "Emoji seat"
	<:seat:>
	
	
snippet emoji_computer "Emoji computer"
	<:computer:>
	
	
snippet emoji_briefcase "Emoji briefcase"
	<:briefcase:>
	
	
snippet emoji_minidisc "Emoji minidisc"
	<:minidisc:>
	
	
snippet emoji_floppy_disk "Emoji floppy_disk"
	<:floppy_disk:>
	
	
snippet emoji_cd "Emoji cd"
	<:cd:>
	
	
snippet emoji_dvd "Emoji dvd"
	<:dvd:>
	
	
snippet emoji_file_folder "Emoji file_folder"
	<:file_folder:>
	
	
snippet emoji_open_file_folder "Emoji open_file_folder"
	<:open_file_folder:>
	
	
snippet emoji_page_with_curl "Emoji page_with_curl"
	<:page_with_curl:>
	
	
snippet emoji_page_facing_up "Emoji page_facing_up"
	<:page_facing_up:>
	
	
snippet emoji_date "Emoji date"
	<:date:>
	
	
snippet emoji_calendar "Emoji calendar"
	<:calendar:>
	
	
snippet emoji_card_index "Emoji card_index"
	<:card_index:>
	
	
snippet emoji_chart_with_upwards_trend "Emoji chart_with_upwards_trend"
	<:chart_with_upwards_trend:>
	
	
snippet emoji_chart_with_downwards_trend "Emoji chart_with_downwards_trend"
	<:chart_with_downwards_trend:>
	
	
snippet emoji_bar_chart "Emoji bar_chart"
	<:bar_chart:>
	
	
snippet emoji_clipboard "Emoji clipboard"
	<:clipboard:>
	
	
snippet emoji_pushpin "Emoji pushpin"
	<:pushpin:>
	
	
snippet emoji_round_pushpin "Emoji round_pushpin"
	<:round_pushpin:>
	
	
snippet emoji_paperclip "Emoji paperclip"
	<:paperclip:>
	
	
snippet emoji_straight_ruler "Emoji straight_ruler"
	<:straight_ruler:>
	
	
snippet emoji_triangular_ruler "Emoji triangular_ruler"
	<:triangular_ruler:>
	
	
snippet emoji_bookmark_tabs "Emoji bookmark_tabs"
	<:bookmark_tabs:>
	
	
snippet emoji_ledger "Emoji ledger"
	<:ledger:>
	
	
snippet emoji_notebook "Emoji notebook"
	<:notebook:>
	
	
snippet emoji_notebook_with_decorative_cover "Emoji notebook_with_decorative_cover"
	<:notebook_with_decorative_cover:>
	
	
snippet emoji_closed_book "Emoji closed_book"
	<:closed_book:>
	
	
snippet emoji_book "Emoji book"
	<:book:>
	
	
snippet emoji_green_book "Emoji green_book"
	<:green_book:>
	
	
snippet emoji_blue_book "Emoji blue_book"
	<:blue_book:>
	
	
snippet emoji_orange_book "Emoji orange_book"
	<:orange_book:>
	
	
snippet emoji_books "Emoji books"
	<:books:>
	
	
snippet emoji_name_badge "Emoji name_badge"
	<:name_badge:>
	
	
snippet emoji_scroll "Emoji scroll"
	<:scroll:>
	
	
snippet emoji_memo "Emoji memo"
	<:memo:>
	
	
snippet emoji_telephone_receiver "Emoji telephone_receiver"
	<:telephone_receiver:>
	
	
snippet emoji_pager "Emoji pager"
	<:pager:>
	
	
snippet emoji_fax "Emoji fax"
	<:fax:>
	
	
snippet emoji_satellite "Emoji satellite"
	<:satellite:>
	
	
snippet emoji_loudspeaker "Emoji loudspeaker"
	<:loudspeaker:>
	
	
snippet emoji_mega "Emoji mega"
	<:mega:>
	
	
snippet emoji_outbox_tray "Emoji outbox_tray"
	<:outbox_tray:>
	
	
snippet emoji_inbox_tray "Emoji inbox_tray"
	<:inbox_tray:>
	
	
snippet emoji_panda_face "Emoji panda_face"
	<:panda_face:>
	
	
snippet emoji_pig_nose "Emoji pig_nose"
	<:pig_nose:>
	
	
snippet emoji_feet "Emoji feet"
	<:feet:>
	
	
snippet emoji_chipmunk "Emoji chipmunk"
	<:chipmunk:>
	
	
snippet emoji_eyes "Emoji eyes"
	<:eyes:>
	
	
snippet emoji_eye "Emoji eye"
	<:eye:>
	
	
snippet emoji_ear "Emoji ear"
	<:ear:>
	
	
snippet emoji_nose "Emoji nose"
	<:nose:>
	
	
snippet emoji_lips "Emoji lips"
	<:lips:>
	
	
snippet emoji_tongue "Emoji tongue"
	<:tongue:>
	
	
snippet emoji_point_up_2 "Emoji point_up_2"
	<:point_up_2:>
	
	
snippet emoji_point_down "Emoji point_down"
	<:point_down:>
	
	
snippet emoji_point_left "Emoji point_left"
	<:point_left:>
	
	
snippet emoji_point_right "Emoji point_right"
	<:point_right:>
	
	
snippet emoji_facepunch "Emoji facepunch"
	<:facepunch:>
	
	
snippet emoji_wave "Emoji wave"
	<:wave:>
	
	
snippet emoji_ok_hand "Emoji ok_hand"
	<:ok_hand:>
	
	
snippet emoji_thumbsup "Emoji thumbsup"
	<:thumbsup:>
	
	
snippet emoji_thumbsdown "Emoji thumbsdown"
	<:thumbsdown:>
	
	
snippet emoji_clap "Emoji clap"
	<:clap:>
	
	
snippet emoji_open_hands "Emoji open_hands"
	<:open_hands:>
	
	
snippet emoji_crown "Emoji crown"
	<:crown:>
	
	
snippet emoji_womans_hat "Emoji womans_hat"
	<:womans_hat:>
	
	
snippet emoji_eyeglasses "Emoji eyeglasses"
	<:eyeglasses:>
	
	
snippet emoji_necktie "Emoji necktie"
	<:necktie:>
	
	

snippet emoji_couple_with_heart "Emoji couple_with_heart"
	<:couple_with_heart:>
	
	
snippet emoji_wedding "Emoji wedding"
	<:wedding:>
	
	
snippet emoji_heartbeat "Emoji heartbeat"
	<:heartbeat:>
	
	
snippet emoji_broken_heart "Emoji broken_heart"
	<:broken_heart:>
	
	
snippet emoji_two_hearts "Emoji two_hearts"
	<:two_hearts:>
	
	
snippet emoji_sparkling_heart "Emoji sparkling_heart"
	<:sparkling_heart:>
	
	
snippet emoji_heartpulse "Emoji heartpulse"
	<:heartpulse:>
	
	
snippet emoji_cupid "Emoji cupid"
	<:cupid:>
	
	
snippet emoji_blue_heart "Emoji blue_heart"
	<:blue_heart:>
	
	
snippet emoji_green_heart "Emoji green_heart"
	<:green_heart:>
	
	
snippet emoji_yellow_heart "Emoji yellow_heart"
	<:yellow_heart:>
	
	
snippet emoji_purple_heart "Emoji purple_heart"
	<:purple_heart:>
	
	
snippet emoji_gift_heart "Emoji gift_heart"
	<:gift_heart:>
	
	
snippet emoji_revolving_hearts "Emoji revolving_hearts"
	<:revolving_hearts:>
	
	
snippet emoji_heart_decoration "Emoji heart_decoration"
	<:heart_decoration:>
	
	
snippet emoji_diamond_shape_with_a_dot_inside "Emoji diamond_shape_with_a_dot_inside"
	<:diamond_shape_with_a_dot_inside:>
	
	
snippet emoji_bulb "Emoji bulb"
	<:bulb:>
	
	
snippet emoji_anger "Emoji anger"
	<:anger:>
	
	
snippet emoji_bomb "Emoji bomb"
	<:bomb:>
	
	
snippet emoji_zzz "Emoji zzz"
	<:zzz:>
	
	
snippet emoji_boom "Emoji boom"
	<:boom:>
	
	
snippet emoji_sweat_drops "Emoji sweat_drops"
	<:sweat_drops:>
	
	
snippet emoji_droplet "Emoji droplet"
	<:droplet:>
	
	
snippet emoji_dash "Emoji dash"
	<:dash:>
	
	
snippet emoji_hankey "Emoji hankey"
	<:hankey:>
	
	
snippet emoji_package "Emoji package"
	<:package:>
	
	
snippet emoji_email "Emoji email"
	<:email:>
	
	
snippet emoji_incoming_envelope "Emoji incoming_envelope"
	<:incoming_envelope:>
	
	
snippet emoji_envelope_with_arrow "Emoji envelope_with_arrow"
	<:envelope_with_arrow:>
	
	
snippet emoji_mailbox_closed "Emoji mailbox_closed"
	<:mailbox_closed:>
	
	
snippet emoji_mailbox "Emoji mailbox"
	<:mailbox:>
	
	
snippet emoji_mailbox_with_mail "Emoji mailbox_with_mail"
	<:mailbox_with_mail:>
	
	
snippet emoji_mailbox_with_no_mail "Emoji mailbox_with_no_mail"
	<:mailbox_with_no_mail:>
	
	
snippet emoji_postbox "Emoji postbox"
	<:postbox:>
	
	
snippet emoji_postal_horn "Emoji postal_horn"
	<:postal_horn:>
	
	
snippet emoji_newspaper "Emoji newspaper"
	<:newspaper:>
	
	
snippet emoji_iphone "Emoji iphone"
	<:iphone:>
	
	
snippet emoji_calling "Emoji calling"
	<:calling:>
	
	
snippet emoji_vibration_mode "Emoji vibration_mode"
	<:vibration_mode:>
	
	
snippet emoji_mobile_phone_off "Emoji mobile_phone_off"
	<:mobile_phone_off:>
	
	
snippet emoji_no_mobile_phones "Emoji no_mobile_phones"
	<:no_mobile_phones:>
	
	
snippet emoji_signal_strength "Emoji signal_strength"
	<:signal_strength:>
	
	
snippet emoji_camera "Emoji camera"
	<:camera:>
	
	
snippet emoji_camera_flash "Emoji camera_flash"
	<:camera_flash:>
	
	
snippet emoji_video_camera "Emoji video_camera"
	<:video_camera:>
	
	
snippet emoji_tv "Emoji tv"
	<:tv:>
	
	
snippet emoji_radio "Emoji radio"
	<:radio:>
	
	
snippet emoji_vhs "Emoji vhs"
	<:vhs:>
	
	
snippet emoji_film_projector "Emoji film_projector"
	<:film_projector:>
	
	
snippet emoji_prayer_beads "Emoji prayer_beads"
	<:prayer_beads:>
	
	
snippet emoji_scissors "Emoji scissors"
	<:scissors:>
	
	
snippet emoji_white_check_mark "Emoji white_check_mark"
	<:white_check_mark:>
	
	
snippet emoji_airplane "Emoji airplane"
	<:airplane:>
	
	
snippet emoji_envelope "Emoji envelope"
	<:envelope:>
	
	
snippet emoji_fist "Emoji fist"
	<:fist:>
	
	
snippet emoji_hand "Emoji hand"
	<:hand:>
	
	
snippet emoji_v "Emoji v"
	<:v:>
	
	
snippet emoji_writing_hand "Emoji writing_hand"
	<:writing_hand:>
	
	
snippet emoji_pencil2 "Emoji pencil2"
	<:pencil2:>
	
	
snippet emoji_black_nib "Emoji black_nib"
	<:black_nib:>
	
	
snippet emoji_heavy_check_mark "Emoji heavy_check_mark"
	<:heavy_check_mark:>
	
	
snippet emoji_heavy_multiplication_x "Emoji heavy_multiplication_x"
	<:heavy_multiplication_x:>
	
	
snippet emoji_latin_cross "Emoji latin_cross"
	<:latin_cross:>
	
	
snippet emoji_star_of_david "Emoji star_of_david"
	<:star_of_david:>
	
	
snippet emoji_sparkles "Emoji sparkles"
	<:sparkles:>
	
	
snippet emoji_eight_spoked_asterisk "Emoji eight_spoked_asterisk"
	<:eight_spoked_asterisk:>
	
	
snippet emoji_eight_pointed_black_star "Emoji eight_pointed_black_star"
	<:eight_pointed_black_star:>
	
	
snippet emoji_snowflake "Emoji snowflake"
	<:snowflake:>
	
	
snippet emoji_sparkle "Emoji sparkle"
	<:sparkle:>
	
	
snippet emoji_x "Emoji x"
	<:x:>
	
	
snippet emoji_negative_squared_cross_mark "Emoji negative_squared_cross_mark"
	<:negative_squared_cross_mark:>
	
	
snippet emoji_question "Emoji question"
	<:question:>
	
	
snippet emoji_grey_question "Emoji grey_question"
	<:grey_question:>
	
	
snippet emoji_grey_exclamation "Emoji grey_exclamation"
	<:grey_exclamation:>
	
	
snippet emoji_exclamation "Emoji exclamation"
	<:exclamation:>
	
	
snippet emoji_heavy_heart_exclamation "Emoji heavy_heart_exclamation"
	<:heavy_heart_exclamation:>
	
	
snippet emoji_heart "Emoji heart"
	<:heart:>
	
	
snippet emoji_heavy_plus_sign "Emoji heavy_plus_sign"
	<:heavy_plus_sign:>
	
	
snippet emoji_heavy_minus_sign "Emoji heavy_minus_sign"
	<:heavy_minus_sign:>
	
	
snippet emoji_heavy_division_sign "Emoji heavy_division_sign"
	<:heavy_division_sign:>
	
	
snippet emoji_arrow_right "Emoji arrow_right"
	<:arrow_right:>
	
	
snippet emoji_curly_loop "Emoji curly_loop"
	<:curly_loop:>
	
	
snippet emoji_loop "Emoji loop"
	<:loop:>
	
	
snippet emoji_grinning "Emoji grinning"
	<:grinning:>
	
	
snippet emoji_grin "Emoji grin"
	<:grin:>
	
	
snippet emoji_joy "Emoji joy"
	<:joy:>
	
	
snippet emoji_smiley "Emoji smiley"
	<:smiley:>
	
	
snippet emoji_smile "Emoji smile"
	<:smile:>
	
	
snippet emoji_sweat_smile "Emoji sweat_smile"
	<:sweat_smile:>
	
	
snippet emoji_laughing "Emoji laughing"
	<:laughing:>
	
	
snippet emoji_innocent "Emoji innocent"
	<:innocent:>
	
	
snippet emoji_smiling_imp "Emoji smiling_imp"
	<:smiling_imp:>
	
	
snippet emoji_wink "Emoji wink"
	<:wink:>
	
	
snippet emoji_blush "Emoji blush"
	<:blush:>
	
	
snippet emoji_yum "Emoji yum"
	<:yum:>
	
	
snippet emoji_relieved "Emoji relieved"
	<:relieved:>
	
	
snippet emoji_heart_eyes "Emoji heart_eyes"
	<:heart_eyes:>
	
	
snippet emoji_sunglasses "Emoji sunglasses"
	<:sunglasses:>
	
	
snippet emoji_smirk "Emoji smirk"
	<:smirk:>
	
	
snippet emoji_neutral_face "Emoji neutral_face"
	<:neutral_face:>
	
	
snippet emoji_expressionless "Emoji expressionless"
	<:expressionless:>
	
	
snippet emoji_unamused "Emoji unamused"
	<:unamused:>
	
	
snippet emoji_sweat "Emoji sweat"
	<:sweat:>
	
	
snippet emoji_pensive "Emoji pensive"
	<:pensive:>
	
	
snippet emoji_confused "Emoji confused"
	<:confused:>
	
	
snippet emoji_confounded "Emoji confounded"
	<:confounded:>
	
	
snippet emoji_kissing "Emoji kissing"
	<:kissing:>
	
	
snippet emoji_kissing_heart "Emoji kissing_heart"
	<:kissing_heart:>
	
	
snippet emoji_kissing_smiling_eyes "Emoji kissing_smiling_eyes"
	<:kissing_smiling_eyes:>
	
	
snippet emoji_kissing_closed_eyes "Emoji kissing_closed_eyes"
	<:kissing_closed_eyes:>
	
	
snippet emoji_stuck_out_tongue "Emoji stuck_out_tongue"
	<:stuck_out_tongue:>
	
	
snippet emoji_stuck_out_tongue_winking_eye "Emoji stuck_out_tongue_winking_eye"
	<:stuck_out_tongue_winking_eye:>
	
	
snippet emoji_stuck_out_tongue_closed_eyes "Emoji stuck_out_tongue_closed_eyes"
	<:stuck_out_tongue_closed_eyes:>
	
	
snippet emoji_disappointed "Emoji disappointed"
	<:disappointed:>
	
	
snippet emoji_worried "Emoji worried"
	<:worried:>
	
	
snippet emoji_angry "Emoji angry"
	<:angry:>
	
	
snippet emoji_pout "Emoji pout"
	<:pout:>
	
	
snippet emoji_cry "Emoji cry"
	<:cry:>
	
	
snippet emoji_persevere "Emoji persevere"
	<:persevere:>
	
	
snippet emoji_triumph "Emoji triumph"
	<:triumph:>
	
	
snippet emoji_disappointed_relieved "Emoji disappointed_relieved"
	<:disappointed_relieved:>
	
	
snippet emoji_frowning "Emoji frowning"
	<:frowning:>
	
	
snippet emoji_anguished "Emoji anguished"
	<:anguished:>
	
	
snippet emoji_fearful "Emoji fearful"
	<:fearful:>
	
	
snippet emoji_weary "Emoji weary"
	<:weary:>
	
	
snippet emoji_sleepy "Emoji sleepy"
	<:sleepy:>
	
	
snippet emoji_tired_face "Emoji tired_face"
	<:tired_face:>
	
	
snippet emoji_grimacing "Emoji grimacing"
	<:grimacing:>
	
	
snippet emoji_sob "Emoji sob"
	<:sob:>
	
	
snippet emoji_open_mouth "Emoji open_mouth"
	<:open_mouth:>
	
	
snippet emoji_hushed "Emoji hushed"
	<:hushed:>
	
	
snippet emoji_cold_sweat "Emoji cold_sweat"
	<:cold_sweat:>
	
	
snippet emoji_scream "Emoji scream"
	<:scream:>
	
	
snippet emoji_astonished "Emoji astonished"
	<:astonished:>
	
	
snippet emoji_flushed "Emoji flushed"
	<:flushed:>
	
	
snippet emoji_sleeping "Emoji sleeping"
	<:sleeping:>
	
	
snippet emoji_dizzy_face "Emoji dizzy_face"
	<:dizzy_face:>
	
	
snippet emoji_no_mouth "Emoji no_mouth"
	<:no_mouth:>
	
	
snippet emoji_mask "Emoji mask"
	<:mask:>
	
	
snippet emoji_smile_cat "Emoji smile_cat"
	<:smile_cat:>
	
	
snippet emoji_kissing_cat "Emoji kissing_cat"
	<:kissing_cat:>
	
	
snippet emoji_pouting_cat "Emoji pouting_cat"
	<:pouting_cat:>
	
	
snippet emoji_crying_cat_face "Emoji crying_cat_face"
	<:crying_cat_face:>
	
	
snippet emoji_scream_cat "Emoji scream_cat"
	<:scream_cat:>
	
	
snippet emoji_slightly_frowning_face "Emoji slightly_frowning_face"
	<:slightly_frowning_face:>
	
	
snippet emoji_slightly_smiling_face "Emoji slightly_smiling_face"
	<:slightly_smiling_face:>
	
	
snippet emoji_upside_down_face "Emoji upside_down_face"
	<:upside_down_face:>
	
	
snippet emoji_roll_eyes "Emoji roll_eyes"
	<:roll_eyes:>
	
	
snippet emoji_no_good "Emoji no_good"
	<:no_good:>
	
	
snippet emoji_ok_person "Emoji ok_person"
	<:ok_person:>
	
	
snippet emoji_bow "Emoji bow"
	<:bow:>
	
	
snippet emoji_see_no_evil "Emoji see_no_evil"
	<:see_no_evil:>
	
	
snippet emoji_hear_no_evil "Emoji hear_no_evil"
	<:hear_no_evil:>
	
	
snippet emoji_speak_no_evil "Emoji speak_no_evil"
	<:speak_no_evil:>
	
	
snippet emoji_raising_hand "Emoji raising_hand"
	<:raising_hand:>
	
	
snippet emoji_raised_hands "Emoji raised_hands"
	<:raised_hands:>
	
	
snippet emoji_frowning_person "Emoji frowning_person"
	<:frowning_person:>
	
	
snippet emoji_pouting_face "Emoji pouting_face"
	<:pouting_face:>
	
	
snippet emoji_pray "Emoji pray"
	<:pray:>
	
	
snippet emoji_rocket "Emoji rocket"
	<:rocket:>
	
	
snippet emoji_helicopter "Emoji helicopter"
	<:helicopter:>
	
	
snippet emoji_steam_locomotive "Emoji steam_locomotive"
	<:steam_locomotive:>
	
	
snippet emoji_railway_car "Emoji railway_car"
	<:railway_car:>
	
	
snippet emoji_bullettrain_side "Emoji bullettrain_side"
	<:bullettrain_side:>
	
	
snippet emoji_bullettrain_front "Emoji bullettrain_front"
	<:bullettrain_front:>
	
	
snippet emoji_train2 "Emoji train2"
	<:train2:>
	
	
snippet emoji_metro "Emoji metro"
	<:metro:>
	
	
snippet emoji_light_rail "Emoji light_rail"
	<:light_rail:>
	
	
snippet emoji_station "Emoji station"
	<:station:>
	
	
snippet emoji_tram "Emoji tram"
	<:tram:>
	
	
snippet emoji_train "Emoji train"
	<:train:>
	
	
snippet emoji_bus "Emoji bus"
	<:bus:>
	
	
snippet emoji_oncoming_bus "Emoji oncoming_bus"
	<:oncoming_bus:>
	
	
snippet emoji_trolleybus "Emoji trolleybus"
	<:trolleybus:>
	
	
snippet emoji_busstop "Emoji busstop"
	<:busstop:>
	
	
snippet emoji_minibus "Emoji minibus"
	<:minibus:>
	
	
snippet emoji_ambulance "Emoji ambulance"
	<:ambulance:>
	
	
snippet emoji_fire_engine "Emoji fire_engine"
	<:fire_engine:>
	
	
snippet emoji_police_car "Emoji police_car"
	<:police_car:>
	
	
snippet emoji_oncoming_police_car "Emoji oncoming_police_car"
	<:oncoming_police_car:>
	
	
snippet emoji_taxi "Emoji taxi"
	<:taxi:>
	
	
snippet emoji_oncoming_taxi "Emoji oncoming_taxi"
	<:oncoming_taxi:>
	
	
snippet emoji_car "Emoji car"
	<:car:>
	
	
snippet emoji_oncoming_automobile "Emoji oncoming_automobile"
	<:oncoming_automobile:>
	
	
snippet emoji_blue_car "Emoji blue_car"
	<:blue_car:>
	
	
snippet emoji_truck "Emoji truck"
	<:truck:>
	
	
snippet emoji_articulated_lorry "Emoji articulated_lorry"
	<:articulated_lorry:>
	
	
snippet emoji_tractor "Emoji tractor"
	<:tractor:>
	
	
snippet emoji_monorail "Emoji monorail"
	<:monorail:>
	
	
snippet emoji_mountain_railway "Emoji mountain_railway"
	<:mountain_railway:>
	
	
snippet emoji_suspension_railway "Emoji suspension_railway"
	<:suspension_railway:>
	
	
snippet emoji_mountain_cableway "Emoji mountain_cableway"
	<:mountain_cableway:>
	
	
snippet emoji_aerial_tramway "Emoji aerial_tramway"
	<:aerial_tramway:>
	
	
snippet emoji_ship "Emoji ship"
	<:ship:>
	
	
snippet emoji_rowboat "Emoji rowboat"
	<:rowboat:>
	
	
snippet emoji_speedboat "Emoji speedboat"
	<:speedboat:>
	
	
snippet emoji_traffic_light "Emoji traffic_light"
	<:traffic_light:>
	
	
snippet emoji_door "Emoji door"
	<:door:>
	
	
snippet emoji_no_entry_sign "Emoji no_entry_sign"
	<:no_entry_sign:>
	
	
snippet emoji_smoking "Emoji smoking"
	<:smoking:>
	
	
snippet emoji_no_smoking "Emoji no_smoking"
	<:no_smoking:>
	
	
snippet emoji_put_litter_in_its_place "Emoji put_litter_in_its_place"
	<:put_litter_in_its_place:>
	
	
snippet emoji_do_not_litter "Emoji do_not_litter"
	<:do_not_litter:>
	
	
snippet emoji_potable_water "Emoji potable_water"
	<:potable_water:>
	
	
snippet emoji_bike "Emoji bike"
	<:bike:>
	
	
snippet emoji_no_bicycles "Emoji no_bicycles"
	<:no_bicycles:>
	
	
snippet emoji_bicyclist "Emoji bicyclist"
	<:bicyclist:>
	
	
snippet emoji_mountain_bicyclist "Emoji mountain_bicyclist"
	<:mountain_bicyclist:>
	
	
snippet emoji_walking "Emoji walking"
	<:walking:>
	
	
snippet emoji_no_pedestrians "Emoji no_pedestrians"
	<:no_pedestrians:>
	
	
snippet emoji_children_crossing "Emoji children_crossing"
	<:children_crossing:>
	
	
snippet emoji_mens "Emoji mens"
	<:mens:>
	
	
snippet emoji_womens "Emoji womens"
	<:womens:>
	
	
snippet emoji_restroom "Emoji restroom"
	<:restroom:>
	
	
snippet emoji_baby_symbol "Emoji baby_symbol"
	<:baby_symbol:>
	
	
snippet emoji_toilet "Emoji toilet"
	<:toilet:>
	
	
snippet emoji_wc "Emoji wc"
	<:wc:>
	
	
snippet emoji_shower "Emoji shower"
	<:shower:>
	
	
snippet emoji_bath "Emoji bath"
	<:bath:>
	
	
snippet emoji_bathtub "Emoji bathtub"
	<:bathtub:>
	
	
snippet emoji_passport_control "Emoji passport_control"
	<:passport_control:>
	
	
snippet emoji_customs "Emoji customs"
	<:customs:>
	
	
snippet emoji_baggage_claim "Emoji baggage_claim"
	<:baggage_claim:>
	
	
snippet emoji_left_luggage "Emoji left_luggage"
	<:left_luggage:>
	
	
snippet emoji_couch_and_lamp "Emoji couch_and_lamp"
	<:couch_and_lamp:>
	
	
snippet emoji_sleeping_bed "Emoji sleeping_bed"
	<:sleeping_bed:>
	
	
snippet emoji_shopping "Emoji shopping"
	<:shopping:>
	
	
snippet emoji_bellhop_bell "Emoji bellhop_bell"
	<:bellhop_bell:>
	
	
snippet emoji_bed "Emoji bed"
	<:bed:>
	
	
snippet emoji_place_of_worship "Emoji place_of_worship"
	<:place_of_worship:>
	
	
snippet emoji_stop_sign "Emoji stop_sign"
	<:stop_sign:>
	
	
snippet emoji_shopping_cart "Emoji shopping_cart"
	<:shopping_cart:>
	
	
snippet emoji_hindu_temple "Emoji hindu_temple"
	<:hindu_temple:>
	
	
snippet emoji_hut "Emoji hut"
	<:hut:>
	
	
snippet emoji_elevator "Emoji elevator"
	<:elevator:>
	
	
snippet emoji_hammer_and_wrench "Emoji hammer_and_wrench"
	<:hammer_and_wrench:>
	
	
snippet emoji_shield "Emoji shield"
	<:shield:>
	
	
snippet emoji_oil_drum "Emoji oil_drum"
	<:oil_drum:>
	
	
snippet emoji_motorway "Emoji motorway"
	<:motorway:>
	
	
snippet emoji_railway_track "Emoji railway_track"
	<:railway_track:>
	
	
snippet emoji_motor_boat "Emoji motor_boat"
	<:motor_boat:>
	
	
snippet emoji_small_airplane "Emoji small_airplane"
	<:small_airplane:>
	
	
snippet emoji_flight_departure "Emoji flight_departure"
	<:flight_departure:>
	
	
snippet emoji_flight_arrival "Emoji flight_arrival"
	<:flight_arrival:>
	
	
snippet emoji_artificial_satellite "Emoji artificial_satellite"
	<:artificial_satellite:>
	
	
snippet emoji_passenger_ship "Emoji passenger_ship"
	<:passenger_ship:>
	
	
snippet emoji_kick_scooter "Emoji kick_scooter"
	<:kick_scooter:>
	
	
snippet emoji_motor_scooter "Emoji motor_scooter"
	<:motor_scooter:>
	
	
snippet emoji_canoe "Emoji canoe"
	<:canoe:>
	
	
snippet emoji_sled "Emoji sled"
	<:sled:>
	
	
snippet emoji_flying_saucer "Emoji flying_saucer"
	<:flying_saucer:>
	
	
snippet emoji_skateboard "Emoji skateboard"
	<:skateboard:>
	
	
snippet emoji_auto_rickshaw "Emoji auto_rickshaw"
	<:auto_rickshaw:>
	
	
snippet emoji_joy_cat "Emoji joy_cat"
	<:joy_cat:>
	
	
snippet emoji_smiley_cat "Emoji smiley_cat"
	<:smiley_cat:>
	
	
snippet emoji_heart_eyes_cat "Emoji heart_eyes_cat"
	<:heart_eyes_cat:>
	
	
snippet emoji_smirk_cat "Emoji smirk_cat"
	<:smirk_cat:>
	
	
snippet emoji_vertical_traffic_light "Emoji vertical_traffic_light"
	<:vertical_traffic_light:>
	
	
snippet emoji_construction "Emoji construction"
	<:construction:>
	
	
snippet emoji_rotating_light "Emoji rotating_light"
	<:rotating_light:>
	
	
snippet emoji_triangular_flag_on_post "Emoji triangular_flag_on_post"
	<:triangular_flag_on_post:>
	
	
snippet emoji_pickup_truck "Emoji pickup_truck"
	<:pickup_truck:>
	
	
snippet emoji_roller_skate "Emoji roller_skate"
	<:roller_skate:>
	
	
snippet emoji_pinched_fingers "Emoji pinched_fingers"
	<:pinched_fingers:>
	
	
snippet emoji_white_heart "Emoji white_heart"
	<:white_heart:>
	
	
snippet emoji_brown_heart "Emoji brown_heart"
	<:brown_heart:>
	
	
snippet emoji_pinching_hand "Emoji pinching_hand"
	<:pinching_hand:>
	
	
snippet emoji_zipper_mouth_face "Emoji zipper_mouth_face"
	<:zipper_mouth_face:>
	
	
snippet emoji_money_mouth_face "Emoji money_mouth_face"
	<:money_mouth_face:>
	
	
snippet emoji_face_with_thermometer "Emoji face_with_thermometer"
	<:face_with_thermometer:>
	
	
snippet emoji_nerd_face "Emoji nerd_face"
	<:nerd_face:>
	
	
snippet emoji_thinking "Emoji thinking"
	<:thinking:>
	
	
snippet emoji_face_with_head_bandage "Emoji face_with_head_bandage"
	<:face_with_head_bandage:>
	
	
snippet emoji_robot "Emoji robot"
	<:robot:>
	
	
snippet emoji_hugs "Emoji hugs"
	<:hugs:>
	
	
snippet emoji_metal "Emoji metal"
	<:metal:>
	
	
snippet emoji_call_me_hand "Emoji call_me_hand"
	<:call_me_hand:>
	
	
snippet emoji_raised_back_of_hand "Emoji raised_back_of_hand"
	<:raised_back_of_hand:>
	
	
snippet emoji_fist_left "Emoji fist_left"
	<:fist_left:>
	
	
snippet emoji_fist_right "Emoji fist_right"
	<:fist_right:>
	
	
snippet emoji_handshake "Emoji handshake"
	<:handshake:>
	
	
snippet emoji_crossed_fingers "Emoji crossed_fingers"
	<:crossed_fingers:>
	
	
snippet emoji_love_you_gesture "Emoji love_you_gesture"
	<:love_you_gesture:>
	
	
snippet emoji_cowboy_hat_face "Emoji cowboy_hat_face"
	<:cowboy_hat_face:>
	
	
snippet emoji_clown_face "Emoji clown_face"
	<:clown_face:>
	
	
snippet emoji_nauseated_face "Emoji nauseated_face"
	<:nauseated_face:>
	
	
snippet emoji_rofl "Emoji rofl"
	<:rofl:>
	
	
snippet emoji_drooling_face "Emoji drooling_face"
	<:drooling_face:>
	
	
snippet emoji_lying_face "Emoji lying_face"
	<:lying_face:>
	
	
snippet emoji_facepalm "Emoji facepalm"
	<:facepalm:>
	
	
snippet emoji_sneezing_face "Emoji sneezing_face"
	<:sneezing_face:>
	
	
snippet emoji_raised_eyebrow "Emoji raised_eyebrow"
	<:raised_eyebrow:>
	
	
snippet emoji_star_struck "Emoji star_struck"
	<:star_struck:>
	
	
snippet emoji_zany_face "Emoji zany_face"
	<:zany_face:>
	
	
snippet emoji_shushing_face "Emoji shushing_face"
	<:shushing_face:>
	
	
snippet emoji_cursing_face "Emoji cursing_face"
	<:cursing_face:>
	
	
snippet emoji_hand_over_mouth "Emoji hand_over_mouth"
	<:hand_over_mouth:>
	
	
snippet emoji_vomiting_face "Emoji vomiting_face"
	<:vomiting_face:>
	
	
snippet emoji_exploding_head "Emoji exploding_head"
	<:exploding_head:>
	
	
snippet emoji_pregnant_woman "Emoji pregnant_woman"
	<:pregnant_woman:>
	
	
snippet emoji_breast_feeding "Emoji breast_feeding"
	<:breast_feeding:>
	
	
snippet emoji_palms_up_together "Emoji palms_up_together"
	<:palms_up_together:>
	
	
snippet emoji_selfie "Emoji selfie"
	<:selfie:>
	
	
snippet emoji_prince "Emoji prince"
	<:prince:>
	
	
snippet emoji_person_in_tuxedo "Emoji person_in_tuxedo"
	<:person_in_tuxedo:>
	
	
snippet emoji_mrs_claus "Emoji mrs_claus"
	<:mrs_claus:>
	
	
snippet emoji_shrug "Emoji shrug"
	<:shrug:>
	
	
snippet emoji_cartwheeling "Emoji cartwheeling"
	<:cartwheeling:>
	
	
snippet emoji_juggling_person "Emoji juggling_person"
	<:juggling_person:>
	
	
snippet emoji_person_fencing "Emoji person_fencing"
	<:person_fencing:>
	
	
snippet emoji_wrestling "Emoji wrestling"
	<:wrestling:>
	
	
snippet emoji_water_polo "Emoji water_polo"
	<:water_polo:>
	
	
snippet emoji_handball_person "Emoji handball_person"
	<:handball_person:>
	
	
snippet emoji_diving_mask "Emoji diving_mask"
	<:diving_mask:>
	
	
snippet emoji_wilted_flower "Emoji wilted_flower"
	<:wilted_flower:>
	
	
snippet emoji_drum "Emoji drum"
	<:drum:>
	
	
snippet emoji_clinking_glasses "Emoji clinking_glasses"
	<:clinking_glasses:>
	
	
snippet emoji_tumbler_glass "Emoji tumbler_glass"
	<:tumbler_glass:>
	
	
snippet emoji_spoon "Emoji spoon"
	<:spoon:>
	
	
snippet emoji_pancakes "Emoji pancakes"
	<:pancakes:>
	
	
snippet emoji_dumpling "Emoji dumpling"
	<:dumpling:>
	
	
snippet emoji_fortune_cookie "Emoji fortune_cookie"
	<:fortune_cookie:>
	
	
snippet emoji_takeout_box "Emoji takeout_box"
	<:takeout_box:>
	
	
snippet emoji_chopsticks "Emoji chopsticks"
	<:chopsticks:>
	
	
snippet emoji_bowl_with_spoon "Emoji bowl_with_spoon"
	<:bowl_with_spoon:>
	
	
snippet emoji_cup_with_straw "Emoji cup_with_straw"
	<:cup_with_straw:>
	
	
snippet emoji_coconut "Emoji coconut"
	<:coconut:>
	
	
snippet emoji_broccoli "Emoji broccoli"
	<:broccoli:>
	
	
snippet emoji_pie "Emoji pie"
	<:pie:>
	
	
snippet emoji_pretzel "Emoji pretzel"
	<:pretzel:>
	
	
snippet emoji_cut_of_meat "Emoji cut_of_meat"
	<:cut_of_meat:>
	
	
snippet emoji_sandwich "Emoji sandwich"
	<:sandwich:>
	
	
snippet emoji_canned_food "Emoji canned_food"
	<:canned_food:>
	
	
snippet emoji_leafy_green "Emoji leafy_green"
	<:leafy_green:>
	
	
snippet emoji_mango "Emoji mango"
	<:mango:>
	
	
snippet emoji_moon_cake "Emoji moon_cake"
	<:moon_cake:>
	
	
snippet emoji_bagel "Emoji bagel"
	<:bagel:>
	
	
snippet emoji_smiling_face_with_three_hearts "Emoji smiling_face_with_three_hearts"
	<:smiling_face_with_three_hearts:>
	
	
snippet emoji_yawning_face "Emoji yawning_face"
	<:yawning_face:>
	
	
snippet emoji_smiling_face_with_tear "Emoji smiling_face_with_tear"
	<:smiling_face_with_tear:>
	
	
snippet emoji_partying_face "Emoji partying_face"
	<:partying_face:>
	
	
snippet emoji_woozy_face "Emoji woozy_face"
	<:woozy_face:>
	
	
snippet emoji_hot_face "Emoji hot_face"
	<:hot_face:>
	
	
snippet emoji_cold_face "Emoji cold_face"
	<:cold_face:>
	
	
snippet emoji_ninja "Emoji ninja"
	<:ninja:>
	
	
snippet emoji_disguised_face "Emoji disguised_face"
	<:disguised_face:>
	
	
snippet emoji_pleading_face "Emoji pleading_face"
	<:pleading_face:>
	
	
snippet emoji_sari "Emoji sari"
	<:sari:>
	
	
snippet emoji_lab_coat "Emoji lab_coat"
	<:lab_coat:>
	
	
snippet emoji_goggles "Emoji goggles"
	<:goggles:>
	
	
snippet emoji_hiking_boot "Emoji hiking_boot"
	<:hiking_boot:>
	
	
snippet emoji_flat_shoe "Emoji flat_shoe"
	<:flat_shoe:>
	
	
snippet emoji_crab "Emoji crab"
	<:crab:>
	
	
snippet emoji_lion "Emoji lion"
	<:lion:>
	
	
snippet emoji_scorpion "Emoji scorpion"
	<:scorpion:>
	
	
snippet emoji_turkey "Emoji turkey"
	<:turkey:>
	
	
snippet emoji_unicorn "Emoji unicorn"
	<:unicorn:>
	
	
snippet emoji_eagle "Emoji eagle"
	<:eagle:>
	
	
snippet emoji_duck "Emoji duck"
	<:duck:>
	
	
snippet emoji_bat "Emoji bat"
	<:bat:>
	
	
snippet emoji_shark "Emoji shark"
	<:shark:>
	
	
snippet emoji_owl "Emoji owl"
	<:owl:>
	
	
snippet emoji_fox_face "Emoji fox_face"
	<:fox_face:>
	
	
snippet emoji_butterfly "Emoji butterfly"
	<:butterfly:>
	
	
snippet emoji_deer "Emoji deer"
	<:deer:>
	
	
snippet emoji_gorilla "Emoji gorilla"
	<:gorilla:>
	
	
snippet emoji_lizard "Emoji lizard"
	<:lizard:>
	
	
snippet emoji_rhinoceros "Emoji rhinoceros"
	<:rhinoceros:>
	
	
snippet emoji_shrimp "Emoji shrimp"
	<:shrimp:>
	
	
snippet emoji_squid "Emoji squid"
	<:squid:>
	
	
snippet emoji_giraffe "Emoji giraffe"
	<:giraffe:>
	
	
snippet emoji_zebra "Emoji zebra"
	<:zebra:>
	
	
snippet emoji_hedgehog "Emoji hedgehog"
	<:hedgehog:>
	
	
snippet emoji_sauropod "Emoji sauropod"
	<:sauropod:>
	
	
snippet emoji_probing_cane "Emoji probing_cane"
	<:probing_cane:>
	
	




snippet emoji_bone "Emoji bone"
	<:bone:>
	
	
snippet emoji_leg "Emoji leg"
	<:leg:>
	
	
snippet emoji_foot "Emoji foot"
	<:foot:>
	
	
snippet emoji_tooth "Emoji tooth"
	<:tooth:>
	
	
snippet emoji_superhero "Emoji superhero"
	<:superhero:>
	
	
snippet emoji_supervillain "Emoji supervillain"
	<:supervillain:>
	
	
snippet emoji_safety_vest "Emoji safety_vest"
	<:safety_vest:>
	
	
snippet emoji_ear_with_hearing_aid "Emoji ear_with_hearing_aid"
	<:ear_with_hearing_aid:>
	
	
snippet emoji_motorized_wheelchair "Emoji motorized_wheelchair"
	<:motorized_wheelchair:>
	
	
snippet emoji_manual_wheelchair "Emoji manual_wheelchair"
	<:manual_wheelchair:>
	
	
snippet emoji_mechanical_arm "Emoji mechanical_arm"
	<:mechanical_arm:>
	
	
snippet emoji_mechanical_leg "Emoji mechanical_leg"
	<:mechanical_leg:>
	
	
snippet emoji_cheese "Emoji cheese"
	<:cheese:>
	
	
snippet emoji_cupcake "Emoji cupcake"
	<:cupcake:>
	
	
snippet emoji_salt "Emoji salt"
	<:salt:>
	
	
snippet emoji_beverage_box "Emoji beverage_box"
	<:beverage_box:>
	
	
snippet emoji_garlic "Emoji garlic"
	<:garlic:>
	
	
snippet emoji_onion "Emoji onion"
	<:onion:>
	
	
snippet emoji_falafel "Emoji falafel"
	<:falafel:>
	
	
snippet emoji_waffle "Emoji waffle"
	<:waffle:>
	
	
snippet emoji_butter "Emoji butter"
	<:butter:>
	
	
snippet emoji_mate "Emoji mate"
	<:mate:>
	
	
snippet emoji_ice_cube "Emoji ice_cube"
	<:ice_cube:>
	
	
snippet emoji_bubble_tea "Emoji bubble_tea"
	<:bubble_tea:>
	
	
snippet emoji_standing_person "Emoji standing_person"
	<:standing_person:>
	
	
snippet emoji_kneeling_person "Emoji kneeling_person"
	<:kneeling_person:>
	
	
snippet emoji_deaf_person "Emoji deaf_person"
	<:deaf_person:>
	
	
snippet emoji_monocle_face "Emoji monocle_face"
	<:monocle_face:>
	
	
snippet emoji_adult "Emoji adult"
	<:adult:>
	
	
snippet emoji_child "Emoji child"
	<:child:>
	
	
snippet emoji_older_adult "Emoji older_adult"
	<:older_adult:>
	
	
snippet emoji_bearded_person "Emoji bearded_person"
	<:bearded_person:>
	
	
snippet emoji_woman_with_headscarf "Emoji woman_with_headscarf"
	<:woman_with_headscarf:>
	
	
snippet emoji_sauna_person "Emoji sauna_person"
	<:sauna_person:>
	
	
snippet emoji_climbing "Emoji climbing"
	<:climbing:>
	
	
snippet emoji_lotus_position "Emoji lotus_position"
	<:lotus_position:>
	
	
snippet emoji_mage "Emoji mage"
	<:mage:>
	
	
snippet emoji_fairy "Emoji fairy"
	<:fairy:>
	
	
snippet emoji_vampire "Emoji vampire"
	<:vampire:>
	
	
snippet emoji_merperson "Emoji merperson"
	<:merperson:>
	
	
snippet emoji_elf "Emoji elf"
	<:elf:>
	
	
snippet emoji_genie "Emoji genie"
	<:genie:>
	
	
snippet emoji_zombie "Emoji zombie"
	<:zombie:>
	
	
snippet emoji_brain "Emoji brain"
	<:brain:>
	
	
snippet emoji_orange_heart "Emoji orange_heart"
	<:orange_heart:>
	
	
snippet emoji_billed_cap "Emoji billed_cap"
	<:billed_cap:>
	
	
snippet emoji_scarf "Emoji scarf"
	<:scarf:>
	
	
snippet emoji_gloves "Emoji gloves"
	<:gloves:>
	
	
snippet emoji_coat "Emoji coat"
	<:coat:>
	
	
snippet emoji_socks "Emoji socks"
	<:socks:>
	
	
snippet emoji_red_envelope "Emoji red_envelope"
	<:red_envelope:>
	
	
snippet emoji_goal_net "Emoji goal_net"
	<:goal_net:>
	
	
snippet emoji_1st_place_medal "Emoji 1st_place_medal"
	<:1st_place_medal:>
	
	
snippet emoji_2nd_place_medal "Emoji 2nd_place_medal"
	<:2nd_place_medal:>
	
	
snippet emoji_3rd_place_medal "Emoji 3rd_place_medal"
	<:3rd_place_medal:>
	
	
snippet emoji_boxing_glove "Emoji boxing_glove"
	<:boxing_glove:>
	
	
snippet emoji_martial_arts_uniform "Emoji martial_arts_uniform"
	<:martial_arts_uniform:>
	
	
snippet emoji_curling_stone "Emoji curling_stone"
	<:curling_stone:>
	
	
snippet emoji_lacrosse "Emoji lacrosse"
	<:lacrosse:>
	
	
snippet emoji_softball "Emoji softball"
	<:softball:>
	
	
snippet emoji_flying_disc "Emoji flying_disc"
	<:flying_disc:>
	
	
snippet emoji_croissant "Emoji croissant"
	<:croissant:>
	
	
snippet emoji_avocado "Emoji avocado"
	<:avocado:>
	
	
snippet emoji_cucumber "Emoji cucumber"
	<:cucumber:>
	
	
snippet emoji_bacon "Emoji bacon"
	<:bacon:>
	
	
snippet emoji_potato "Emoji potato"
	<:potato:>
	
	
snippet emoji_carrot "Emoji carrot"
	<:carrot:>
	
	
snippet emoji_baguette_bread "Emoji baguette_bread"
	<:baguette_bread:>
	
	
snippet emoji_green_salad "Emoji green_salad"
	<:green_salad:>
	
	
snippet emoji_shallow_pan_of_food "Emoji shallow_pan_of_food"
	<:shallow_pan_of_food:>
	
	
snippet emoji_stuffed_flatbread "Emoji stuffed_flatbread"
	<:stuffed_flatbread:>
	
	
snippet emoji_egg "Emoji egg"
	<:egg:>
	
	
snippet emoji_milk_glass "Emoji milk_glass"
	<:milk_glass:>
	
	
snippet emoji_peanuts "Emoji peanuts"
	<:peanuts:>
	
	
snippet emoji_kiwi_fruit "Emoji kiwi_fruit"
	<:kiwi_fruit:>
	
	
snippet emoji_cricket "Emoji cricket"
	<:cricket:>
	
	
snippet emoji_kangaroo "Emoji kangaroo"
	<:kangaroo:>
	
	
snippet emoji_llama "Emoji llama"
	<:llama:>
	
	
snippet emoji_peacock "Emoji peacock"
	<:peacock:>
	
	
snippet emoji_hippopotamus "Emoji hippopotamus"
	<:hippopotamus:>
	
	
snippet emoji_parrot "Emoji parrot"
	<:parrot:>
	
	
snippet emoji_raccoon "Emoji raccoon"
	<:raccoon:>
	
	
snippet emoji_lobster "Emoji lobster"
	<:lobster:>
	
	
snippet emoji_mosquito "Emoji mosquito"
	<:mosquito:>
	
	
snippet emoji_microbe "Emoji microbe"
	<:microbe:>
	
	
snippet emoji_badger "Emoji badger"
	<:badger:>
	
	
snippet emoji_swan "Emoji swan"
	<:swan:>
	
	
snippet emoji_mammoth "Emoji mammoth"
	<:mammoth:>
	
	
snippet emoji_dodo "Emoji dodo"
	<:dodo:>
	
	
snippet emoji_sloth "Emoji sloth"
	<:sloth:>
	
	
snippet emoji_otter "Emoji otter"
	<:otter:>
	
	
snippet emoji_orangutan "Emoji orangutan"
	<:orangutan:>
	
	
snippet emoji_skunk "Emoji skunk"
	<:skunk:>
	
	
snippet emoji_flamingo "Emoji flamingo"
	<:flamingo:>
	
	
snippet emoji_oyster "Emoji oyster"
	<:oyster:>
	
	
snippet emoji_beaver "Emoji beaver"
	<:beaver:>
	
	
snippet emoji_bison "Emoji bison"
	<:bison:>
	
	
snippet emoji_seal "Emoji seal"
	<:seal:>
	
	
snippet emoji_guide_dog "Emoji guide_dog"
	<:guide_dog:>
	
	
snippet emoji_firecracker "Emoji firecracker"
	<:firecracker:>
	
	
snippet emoji_jigsaw "Emoji jigsaw"
	<:jigsaw:>
	
	
snippet emoji_test_tube "Emoji test_tube"
	<:test_tube:>
	
	
snippet emoji_petri_dish "Emoji petri_dish"
	<:petri_dish:>
	
	
snippet emoji_dna "Emoji dna"
	<:dna:>
	
	
snippet emoji_compass "Emoji compass"
	<:compass:>
	
	
snippet emoji_abacus "Emoji abacus"
	<:abacus:>
	
	
snippet emoji_fire_extinguisher "Emoji fire_extinguisher"
	<:fire_extinguisher:>
	
	
snippet emoji_toolbox "Emoji toolbox"
	<:toolbox:>
	
	
snippet emoji_bricks "Emoji bricks"
	<:bricks:>
	
	
snippet emoji_magnet "Emoji magnet"
	<:magnet:>
	
	
snippet emoji_luggage "Emoji luggage"
	<:luggage:>
	
	
snippet emoji_lotion_bottle "Emoji lotion_bottle"
	<:lotion_bottle:>
	
	
snippet emoji_thread "Emoji thread"
	<:thread:>
	
	
snippet emoji_yarn "Emoji yarn"
	<:yarn:>
	
	
snippet emoji_safety_pin "Emoji safety_pin"
	<:safety_pin:>
	
	
snippet emoji_teddy_bear "Emoji teddy_bear"
	<:teddy_bear:>
	
	
snippet emoji_broom "Emoji broom"
	<:broom:>
	
	
snippet emoji_basket "Emoji basket"
	<:basket:>
	
	
snippet emoji_roll_of_paper "Emoji roll_of_paper"
	<:roll_of_paper:>
	
	
snippet emoji_soap "Emoji soap"
	<:soap:>
	
	
snippet emoji_sponge "Emoji sponge"
	<:sponge:>
	
	
snippet emoji_receipt "Emoji receipt"
	<:receipt:>
	
	
snippet emoji_nazar_amulet "Emoji nazar_amulet"
	<:nazar_amulet:>
	
	
snippet emoji_cyclone "Emoji cyclone"
	<:cyclone:>
	
	
snippet emoji_foggy "Emoji foggy"
	<:foggy:>
	
	
snippet emoji_closed_umbrella "Emoji closed_umbrella"
	<:closed_umbrella:>
	
	
snippet emoji_night_with_stars "Emoji night_with_stars"
	<:night_with_stars:>
	
	
snippet emoji_sunrise_over_mountains "Emoji sunrise_over_mountains"
	<:sunrise_over_mountains:>
	
	
snippet emoji_sunrise "Emoji sunrise"
	<:sunrise:>
	
	
snippet emoji_city_sunset "Emoji city_sunset"
	<:city_sunset:>
	
	
snippet emoji_city_sunrise "Emoji city_sunrise"
	<:city_sunrise:>
	
	
snippet emoji_rainbow "Emoji rainbow"
	<:rainbow:>
	
	
snippet emoji_bridge_at_night "Emoji bridge_at_night"
	<:bridge_at_night:>
	
	
snippet emoji_ocean "Emoji ocean"
	<:ocean:>
	
	
snippet emoji_volcano "Emoji volcano"
	<:volcano:>
	
	
snippet emoji_milky_way "Emoji milky_way"
	<:milky_way:>
	
	
snippet emoji_earth_africa "Emoji earth_africa"
	<:earth_africa:>
	
	
snippet emoji_earth_americas "Emoji earth_americas"
	<:earth_americas:>
	
	
snippet emoji_earth_asia "Emoji earth_asia"
	<:earth_asia:>
	
	
snippet emoji_globe_with_meridians "Emoji globe_with_meridians"
	<:globe_with_meridians:>
	
	
snippet emoji_new_moon "Emoji new_moon"
	<:new_moon:>
	
	
snippet emoji_waxing_crescent_moon "Emoji waxing_crescent_moon"
	<:waxing_crescent_moon:>
	
	
snippet emoji_first_quarter_moon "Emoji first_quarter_moon"
	<:first_quarter_moon:>
	
	
snippet emoji_moon "Emoji moon"
	<:moon:>
	
	
snippet emoji_full_moon "Emoji full_moon"
	<:full_moon:>
	
	
snippet emoji_waning_gibbous_moon "Emoji waning_gibbous_moon"
	<:waning_gibbous_moon:>
	
	
snippet emoji_last_quarter_moon "Emoji last_quarter_moon"
	<:last_quarter_moon:>
	
	
snippet emoji_waning_crescent_moon "Emoji waning_crescent_moon"
	<:waning_crescent_moon:>
	
	
snippet emoji_crescent_moon "Emoji crescent_moon"
	<:crescent_moon:>
	
	
snippet emoji_new_moon_with_face "Emoji new_moon_with_face"
	<:new_moon_with_face:>
	
	
snippet emoji_first_quarter_moon_with_face "Emoji first_quarter_moon_with_face"
	<:first_quarter_moon_with_face:>
	
	
snippet emoji_last_quarter_moon_with_face "Emoji last_quarter_moon_with_face"
	<:last_quarter_moon_with_face:>
	
	
snippet emoji_full_moon_with_face "Emoji full_moon_with_face"
	<:full_moon_with_face:>
	
	
snippet emoji_sun_with_face "Emoji sun_with_face"
	<:sun_with_face:>
	
	
snippet emoji_star2 "Emoji star2"
	<:star2:>
	
	
snippet emoji_stars "Emoji stars"
	<:stars:>
	
	
snippet emoji_thermometer "Emoji thermometer"
	<:thermometer:>
	
	
snippet emoji_sun_behind_small_cloud "Emoji sun_behind_small_cloud"
	<:sun_behind_small_cloud:>
	
	
snippet emoji_sun_behind_large_cloud "Emoji sun_behind_large_cloud"
	<:sun_behind_large_cloud:>
	
	
snippet emoji_sun_behind_rain_cloud "Emoji sun_behind_rain_cloud"
	<:sun_behind_rain_cloud:>
	
	
snippet emoji_cloud_with_rain "Emoji cloud_with_rain"
	<:cloud_with_rain:>
	
	
snippet emoji_cloud_with_snow "Emoji cloud_with_snow"
	<:cloud_with_snow:>
	
	
snippet emoji_cloud_with_lightning "Emoji cloud_with_lightning"
	<:cloud_with_lightning:>
	
	
snippet emoji_tornado "Emoji tornado"
	<:tornado:>
	
	
snippet emoji_fog "Emoji fog"
	<:fog:>
	
	
snippet emoji_wind_face "Emoji wind_face"
	<:wind_face:>
	
	
snippet emoji_hotdog "Emoji hotdog"
	<:hotdog:>
	
	
snippet emoji_taco "Emoji taco"
	<:taco:>
	
	
snippet emoji_burrito "Emoji burrito"
	<:burrito:>
	
	
snippet emoji_chestnut "Emoji chestnut"
	<:chestnut:>
	
	
snippet emoji_seedling "Emoji seedling"
	<:seedling:>
	
	
snippet emoji_evergreen_tree "Emoji evergreen_tree"
	<:evergreen_tree:>
	
	
snippet emoji_deciduous_tree "Emoji deciduous_tree"
	<:deciduous_tree:>
	
	
snippet emoji_palm_tree "Emoji palm_tree"
	<:palm_tree:>
	
	
snippet emoji_cactus "Emoji cactus"
	<:cactus:>
	
	
snippet emoji_hot_pepper "Emoji hot_pepper"
	<:hot_pepper:>
	
	
snippet emoji_tulip "Emoji tulip"
	<:tulip:>
	
	
snippet emoji_cherry_blossom "Emoji cherry_blossom"
	<:cherry_blossom:>
	
	
snippet emoji_rose "Emoji rose"
	<:rose:>
	
	
snippet emoji_hibiscus "Emoji hibiscus"
	<:hibiscus:>
	
	snippet emoji_hamburger "Emoji hamburger"
	<:hamburger:>
	
	
snippet emoji_pizza "Emoji pizza"
	<:pizza:>
	
	
snippet emoji_meat_on_bone "Emoji meat_on_bone"
	<:meat_on_bone:>
	
	
snippet emoji_poultry_leg "Emoji poultry_leg"
	<:poultry_leg:>
	
	
snippet emoji_rice_cracker "Emoji rice_cracker"
	<:rice_cracker:>
	
	
snippet emoji_rice_ball "Emoji rice_ball"
	<:rice_ball:>
	
	
snippet emoji_rice "Emoji rice"
	<:rice:>
	
	
snippet emoji_curry "Emoji curry"
	<:curry:>
	
	
snippet emoji_ramen "Emoji ramen"
	<:ramen:>
	
	
snippet emoji_spaghetti "Emoji spaghetti"
	<:spaghetti:>
	
	
snippet emoji_bread "Emoji bread"
	<:bread:>
	
	
snippet emoji_fries "Emoji fries"
	<:fries:>
	
	
snippet emoji_sweet_potato "Emoji sweet_potato"
	<:sweet_potato:>
	
	
snippet emoji_dango "Emoji dango"
	<:dango:>
	
	
snippet emoji_oden "Emoji oden"
	<:oden:>
	
	
snippet emoji_sushi "Emoji sushi"
	<:sushi:>
	
	
snippet emoji_fried_shrimp "Emoji fried_shrimp"
	<:fried_shrimp:>
	
	
snippet emoji_fish_cake "Emoji fish_cake"
	<:fish_cake:>
	
	
snippet emoji_icecream "Emoji icecream"
	<:icecream:>
	
	
snippet emoji_shaved_ice "Emoji shaved_ice"
	<:shaved_ice:>
	
	
snippet emoji_ice_cream "Emoji ice_cream"
	<:ice_cream:>
	
	
snippet emoji_doughnut "Emoji doughnut"
	<:doughnut:>
	
	
snippet emoji_cookie "Emoji cookie"
	<:cookie:>
	
	
snippet emoji_chocolate_bar "Emoji chocolate_bar"
	<:chocolate_bar:>
	
	
snippet emoji_candy "Emoji candy"
	<:candy:>
	
	
snippet emoji_lollipop "Emoji lollipop"
	<:lollipop:>
	
	
snippet emoji_custard "Emoji custard"
	<:custard:>
	
	
snippet emoji_honey_pot "Emoji honey_pot"
	<:honey_pot:>
	
	
snippet emoji_cake "Emoji cake"
	<:cake:>
	
	
snippet emoji_bento "Emoji bento"
	<:bento:>
	
	
snippet emoji_stew "Emoji stew"
	<:stew:>
	
	
snippet emoji_fried_egg "Emoji fried_egg"
	<:fried_egg:>
	
	
snippet emoji_fork_and_knife "Emoji fork_and_knife"
	<:fork_and_knife:>
	
	
snippet emoji_tea "Emoji tea"
	<:tea:>
	
	
snippet emoji_sake "Emoji sake"
	<:sake:>
	
	
snippet emoji_wine_glass "Emoji wine_glass"
	<:wine_glass:>
	
	
snippet emoji_cocktail "Emoji cocktail"
	<:cocktail:>
	
	
snippet emoji_tropical_drink "Emoji tropical_drink"
	<:tropical_drink:>
	
	
snippet emoji_beer "Emoji beer"
	<:beer:>
	
	
snippet emoji_beers "Emoji beers"
	<:beers:>
	
	
snippet emoji_baby_bottle "Emoji baby_bottle"
	<:baby_bottle:>
	
	
snippet emoji_plate_with_cutlery "Emoji plate_with_cutlery"
	<:plate_with_cutlery:>
	
	
snippet emoji_champagne "Emoji champagne"
	<:champagne:>
	
	
snippet emoji_popcorn "Emoji popcorn"
	<:popcorn:>
	
	
snippet emoji_ribbon "Emoji ribbon"
	<:ribbon:>
	
	
snippet emoji_gift "Emoji gift"
	<:gift:>
	
	
snippet emoji_birthday "Emoji birthday"
	<:birthday:>
	
	
snippet emoji_jack_o_lantern "Emoji jack_o_lantern"
	<:jack_o_lantern:>
	
	
snippet emoji_christmas_tree "Emoji christmas_tree"
	<:christmas_tree:>
	
	
snippet emoji_santa "Emoji santa"
	<:santa:>
	
	
snippet emoji_fireworks "Emoji fireworks"
	<:fireworks:>
	
	
snippet emoji_sparkler "Emoji sparkler"
	<:sparkler:>
	
	
snippet emoji_balloon "Emoji balloon"
	<:balloon:>
	
	
snippet emoji_tada "Emoji tada"
	<:tada:>
	
	
snippet emoji_confetti_ball "Emoji confetti_ball"
	<:confetti_ball:>
	
	
snippet emoji_tanabata_tree "Emoji tanabata_tree"
	<:tanabata_tree:>
	
	
snippet emoji_crossed_flags "Emoji crossed_flags"
	<:crossed_flags:>
	
	
snippet emoji_ticket "Emoji ticket"
	<:ticket:>
	
	
snippet emoji_clapper "Emoji clapper"
	<:clapper:>
	
	
snippet emoji_performing_arts "Emoji performing_arts"
	<:performing_arts:>
	
	
snippet emoji_video_game "Emoji video_game"
	<:video_game:>
	
	
snippet emoji_dart "Emoji dart"
	<:dart:>
	
	
snippet emoji_slot_machine "Emoji slot_machine"
	<:slot_machine:>
	
	
snippet emoji_8ball "Emoji 8ball"
	<:8ball:>
	
	
snippet emoji_game_die "Emoji game_die"
	<:game_die:>
	
	
snippet emoji_bowling "Emoji bowling"
	<:bowling:>
	
	
snippet emoji_flower_playing_cards "Emoji flower_playing_cards"
	<:flower_playing_cards:>
	
	
snippet emoji_musical_note "Emoji musical_note"
	<:musical_note:>
	
	
snippet emoji_notes "Emoji notes"
	<:notes:>
	
	
snippet emoji_saxophone "Emoji saxophone"
	<:saxophone:>
	
	
snippet emoji_guitar "Emoji guitar"
	<:guitar:>
	
	
snippet emoji_musical_keyboard "Emoji musical_keyboard"
	<:musical_keyboard:>
	
	
snippet emoji_trumpet "Emoji trumpet"
	<:trumpet:>
	
	
snippet emoji_violin "Emoji violin"
	<:violin:>
	
	
snippet emoji_musical_score "Emoji musical_score"
	<:musical_score:>
	
	
snippet emoji_running_shirt_with_sash "Emoji running_shirt_with_sash"
	<:running_shirt_with_sash:>
	
	
snippet emoji_tennis "Emoji tennis"
	<:tennis:>
	
	
snippet emoji_ski "Emoji ski"
	<:ski:>
	
	
snippet emoji_basketball "Emoji basketball"
	<:basketball:>
	
	
snippet emoji_checkered_flag "Emoji checkered_flag"
	<:checkered_flag:>
	
	
snippet emoji_snowboarder "Emoji snowboarder"
	<:snowboarder:>
	
	
snippet emoji_runner "Emoji runner"
	<:runner:>
	
	
snippet emoji_surfer "Emoji surfer"
	<:surfer:>
	
	
snippet emoji_medal_sports "Emoji medal_sports"
	<:medal_sports:>
	
	
snippet emoji_trophy "Emoji trophy"
	<:trophy:>
	
	
snippet emoji_horse_racing "Emoji horse_racing"
	<:horse_racing:>
	
	
snippet emoji_football "Emoji football"
	<:football:>
	
	
snippet emoji_rugby_football "Emoji rugby_football"
	<:rugby_football:>
	
	
snippet emoji_swimmer "Emoji swimmer"
	<:swimmer:>
	
	
snippet emoji_weight_lifting "Emoji weight_lifting"
	<:weight_lifting:>
	
	
snippet emoji_golfing "Emoji golfing"
	<:golfing:>
	
	
snippet emoji_motorcycle "Emoji motorcycle"
	<:motorcycle:>
	
	
snippet emoji_racing_car "Emoji racing_car"
	<:racing_car:>
	
	
snippet emoji_cricket_game "Emoji cricket_game"
	<:cricket_game:>
	
	
snippet emoji_volleyball "Emoji volleyball"
	<:volleyball:>
	
	
snippet emoji_field_hockey "Emoji field_hockey"
	<:field_hockey:>
	
	
snippet emoji_ice_hockey "Emoji ice_hockey"
	<:ice_hockey:>
	
	
snippet emoji_ping_pong "Emoji ping_pong"
	<:ping_pong:>
	
	
snippet emoji_mountain_snow "Emoji mountain_snow"
	<:mountain_snow:>
	
	
snippet emoji_camping "Emoji camping"
	<:camping:>
	
	
snippet emoji_beach_umbrella "Emoji beach_umbrella"
	<:beach_umbrella:>
	
	
snippet emoji_building_construction "Emoji building_construction"
	<:building_construction:>
	
	
snippet emoji_houses "Emoji houses"
	<:houses:>
	
	
snippet emoji_cityscape "Emoji cityscape"
	<:cityscape:>
	
	
snippet emoji_derelict_house "Emoji derelict_house"
	<:derelict_house:>
	
	
snippet emoji_classical_building "Emoji classical_building"
	<:classical_building:>
	
	
snippet emoji_desert "Emoji desert"
	<:desert:>
	
	
snippet emoji_desert_island "Emoji desert_island"
	<:desert_island:>
	
	
snippet emoji_national_park "Emoji national_park"
	<:national_park:>
	
	
snippet emoji_stadium "Emoji stadium"
	<:stadium:>
	
	
snippet emoji_house "Emoji house"
	<:house:>
	
	
snippet emoji_house_with_garden "Emoji house_with_garden"
	<:house_with_garden:>
	
	
snippet emoji_office "Emoji office"
	<:office:>
	
	
snippet emoji_post_office "Emoji post_office"
	<:post_office:>
	
	
snippet emoji_sunflower "Emoji sunflower"
	<:sunflower:>
	
	
snippet emoji_blossom "Emoji blossom"
	<:blossom:>
	
	
snippet emoji_corn "Emoji corn"
	<:corn:>
	
	
snippet emoji_ear_of_rice "Emoji ear_of_rice"
	<:ear_of_rice:>
	
	
snippet emoji_herb "Emoji herb"
	<:herb:>
	
	
snippet emoji_four_leaf_clover "Emoji four_leaf_clover"
	<:four_leaf_clover:>
	
	
snippet emoji_maple_leaf "Emoji maple_leaf"
	<:maple_leaf:>
	
	
snippet emoji_fallen_leaf "Emoji fallen_leaf"
	<:fallen_leaf:>
	
	
snippet emoji_leaves "Emoji leaves"
	<:leaves:>
	
	
snippet emoji_mushroom "Emoji mushroom"
	<:mushroom:>
	
	
snippet emoji_tomato "Emoji tomato"
	<:tomato:>
	
	
snippet emoji_eggplant "Emoji eggplant"
	<:eggplant:>
	
	
snippet emoji_grapes "Emoji grapes"
	<:grapes:>
	
	
snippet emoji_melon "Emoji melon"
	<:melon:>
	
	
snippet emoji_watermelon "Emoji watermelon"
	<:watermelon:>
	
	
snippet emoji_mandarin "Emoji mandarin"
	<:mandarin:>
	
	
snippet emoji_lemon "Emoji lemon"
	<:lemon:>
	
	
snippet emoji_banana "Emoji banana"
	<:banana:>
	
	
snippet emoji_pineapple "Emoji pineapple"
	<:pineapple:>
	
	
snippet emoji_apple "Emoji apple"
	<:apple:>
	
	
snippet emoji_green_apple "Emoji green_apple"
	<:green_apple:>
	
	
snippet emoji_pear "Emoji pear"
	<:pear:>
	
	
snippet emoji_peach "Emoji peach"
	<:peach:>
	
	
snippet emoji_cherries "Emoji cherries"
	<:cherries:>
	
	
snippet emoji_strawberry "Emoji strawberry"
	<:strawberry:>
	
	
snippet emoji_bamboo "Emoji bamboo"
	<:bamboo:>
	
	
snippet emoji_dolls "Emoji dolls"
	<:dolls:>
	
	
snippet emoji_flags "Emoji flags"
	<:flags:>
	
	
snippet emoji_wind_chime "Emoji wind_chime"
	<:wind_chime:>
	
	
snippet emoji_rice_scene "Emoji rice_scene"
	<:rice_scene:>
	
	
snippet emoji_school_satchel "Emoji school_satchel"
	<:school_satchel:>
	
	
snippet emoji_mortar_board "Emoji mortar_board"
	<:mortar_board:>
	
	
snippet emoji_medal_military "Emoji medal_military"
	<:medal_military:>
	
	
snippet emoji_reminder_ribbon "Emoji reminder_ribbon"
	<:reminder_ribbon:>
	
	
snippet emoji_studio_microphone "Emoji studio_microphone"
	<:studio_microphone:>
	
	
snippet emoji_level_slider "Emoji level_slider"
	<:level_slider:>
	
	
snippet emoji_control_knobs "Emoji control_knobs"
	<:control_knobs:>
	
	
snippet emoji_film_strip "Emoji film_strip"
	<:film_strip:>
	
	
snippet emoji_tickets "Emoji tickets"
	<:tickets:>
	
	
snippet emoji_carousel_horse "Emoji carousel_horse"
	<:carousel_horse:>
	
	
snippet emoji_ferris_wheel "Emoji ferris_wheel"
	<:ferris_wheel:>
	
	
snippet emoji_roller_coaster "Emoji roller_coaster"
	<:roller_coaster:>
	
	
snippet emoji_fishing_pole_and_fish "Emoji fishing_pole_and_fish"
	<:fishing_pole_and_fish:>
	
	
snippet emoji_microphone "Emoji microphone"
	<:microphone:>
	
	
snippet emoji_movie_camera "Emoji movie_camera"
	<:movie_camera:>
	
	
snippet emoji_cinema "Emoji cinema"
	<:cinema:>
	
	
snippet emoji_headphones "Emoji headphones"
	<:headphones:>
	
	
snippet emoji_art "Emoji art"
	<:art:>
	
	
snippet emoji_tophat "Emoji tophat"
	<:tophat:>
	
	
snippet emoji_circus_tent "Emoji circus_tent"
	<:circus_tent:>
	
	
snippet emoji_european_post_office "Emoji european_post_office"
	<:european_post_office:>
	
	
snippet emoji_hospital "Emoji hospital"
	<:hospital:>
	
	
snippet emoji_bank "Emoji bank"
	<:bank:>
	
	
snippet emoji_atm "Emoji atm"
	<:atm:>
	
	
snippet emoji_hotel "Emoji hotel"
	<:hotel:>
	
	
snippet emoji_love_hotel "Emoji love_hotel"
	<:love_hotel:>
	
	
snippet emoji_convenience_store "Emoji convenience_store"
	<:convenience_store:>
	
	
snippet emoji_school "Emoji school"
	<:school:>
	
	
snippet emoji_department_store "Emoji department_store"
	<:department_store:>
	
	
snippet emoji_factory "Emoji factory"
	<:factory:>
	
	
snippet emoji_izakaya_lantern "Emoji izakaya_lantern"
	<:izakaya_lantern:>
	
	
snippet emoji_japanese_castle "Emoji japanese_castle"
	<:japanese_castle:>
	
	
snippet emoji_european_castle "Emoji european_castle"
	<:european_castle:>
	
	
snippet emoji_white_flag "Emoji white_flag"
	<:white_flag:>
	
	
snippet emoji_black_flag "Emoji black_flag"
	<:black_flag:>
	
	
snippet emoji_rosette "Emoji rosette"
	<:rosette:>
	
	
snippet emoji_label "Emoji label"
	<:label:>
	
	
snippet emoji_badminton "Emoji badminton"
	<:badminton:>
	
	
snippet emoji_bow_and_arrow "Emoji bow_and_arrow"
	<:bow_and_arrow:>
	
	
snippet emoji_amphora "Emoji amphora"
	<:amphora:>
	
	
snippet emoji_twisted_rightwards_arrows "Emoji twisted_rightwards_arrows"
	<:twisted_rightwards_arrows:>
	
	
snippet emoji_repeat "Emoji repeat"
	<:repeat:>
	
	
snippet emoji_repeat_one "Emoji repeat_one"
	<:repeat_one:>
	
	
snippet emoji_arrows_clockwise "Emoji arrows_clockwise"
	<:arrows_clockwise:>
	
	
snippet emoji_arrows_counterclockwise "Emoji arrows_counterclockwise"
	<:arrows_counterclockwise:>
	
	
snippet emoji_low_brightness "Emoji low_brightness"
	<:low_brightness:>
	
	
snippet emoji_high_brightness "Emoji high_brightness"
	<:high_brightness:>
	
	
snippet emoji_mute "Emoji mute"
	<:mute:>
	
	
snippet emoji_speaker "Emoji speaker"
	<:speaker:>
	
	
snippet emoji_sound "Emoji sound"
	<:sound:>
	
	
snippet emoji_loud_sound "Emoji loud_sound"
	<:loud_sound:>
	
	
snippet emoji_battery "Emoji battery"
	<:battery:>
	
	
snippet emoji_electric_plug "Emoji electric_plug"
	<:electric_plug:>
	
	
snippet emoji_mag "Emoji mag"
	<:mag:>
	
	
snippet emoji_mag_right "Emoji mag_right"
	<:mag_right:>
	
	
snippet emoji_lock_with_ink_pen "Emoji lock_with_ink_pen"
	<:lock_with_ink_pen:>
	
	
snippet emoji_closed_lock_with_key "Emoji closed_lock_with_key"
	<:closed_lock_with_key:>
	
	
snippet emoji_key "Emoji key"
	<:key:>
	
	
snippet emoji_lock "Emoji lock"
	<:lock:>
	
	
snippet emoji_unlock "Emoji unlock"
	<:unlock:>
	
	
snippet emoji_bell "Emoji bell"
	<:bell:>
	
	
snippet emoji_no_bell "Emoji no_bell"
	<:no_bell:>
	
	
snippet emoji_bookmark "Emoji bookmark"
	<:bookmark:>
	
	
snippet emoji_link "Emoji link"
	<:link:>
	
	
snippet emoji_radio_button "Emoji radio_button"
	<:radio_button:>
	
	
snippet emoji_back "Emoji back"
	<:back:>
	
	
snippet emoji_end "Emoji end"
	<:end:>
	
	
snippet emoji_on "Emoji on"
	<:on:>
	
	
snippet emoji_soon "Emoji soon"
	<:soon:>
	
	
snippet emoji_top "Emoji top"
	<:top:>
	
	
snippet emoji_underage "Emoji underage"
	<:underage:>
	
	
snippet emoji_keycap_ten "Emoji keycap_ten"
	<:keycap_ten:>
	
	
snippet emoji_capital_abcd "Emoji capital_abcd"
	<:capital_abcd:>
	
	
snippet emoji_abcd "Emoji abcd"
	<:abcd:>
	
	
snippet emoji_1234 "Emoji 1234"
	<:1234:>
	
	
snippet emoji_symbols "Emoji symbols"
	<:symbols:>
	
	
snippet emoji_abc "Emoji abc"
	<:abc:>
	
	
snippet emoji_fire "Emoji fire"
	<:fire:>
	
	
snippet emoji_flashlight "Emoji flashlight"
	<:flashlight:>
	
	
snippet emoji_wrench "Emoji wrench"
	<:wrench:>
	
	
snippet emoji_hammer "Emoji hammer"
	<:hammer:>
	
	
snippet emoji_nut_and_bolt "Emoji nut_and_bolt"
	<:nut_and_bolt:>
	
	
snippet emoji_hocho "Emoji hocho"
	<:hocho:>
	
	
snippet emoji_gun "Emoji gun"
	<:gun:>
	
	
snippet emoji_microscope "Emoji microscope"
	<:microscope:>
	
	
snippet emoji_telescope "Emoji telescope"
	<:telescope:>
	
	
snippet emoji_crystal_ball "Emoji crystal_ball"
	<:crystal_ball:>
	
	
snippet emoji_six_pointed_star "Emoji six_pointed_star"
	<:six_pointed_star:>
	
	
snippet emoji_beginner "Emoji beginner"
	<:beginner:>
	
	
snippet emoji_trident "Emoji trident"
	<:trident:>
	
	
snippet emoji_black_square_button "Emoji black_square_button"
	<:black_square_button:>
	
	
snippet emoji_white_square_button "Emoji white_square_button"
	<:white_square_button:>
	
	
snippet emoji_red_circle "Emoji red_circle"
	<:red_circle:>
	
	
snippet emoji_large_blue_circle "Emoji large_blue_circle"
	<:large_blue_circle:>
	
	
snippet emoji_large_orange_diamond "Emoji large_orange_diamond"
	<:large_orange_diamond:>
	
	
snippet emoji_large_blue_diamond "Emoji large_blue_diamond"
	<:large_blue_diamond:>
	
	
snippet emoji_small_orange_diamond "Emoji small_orange_diamond"
	<:small_orange_diamond:>
	
	
snippet emoji_small_blue_diamond "Emoji small_blue_diamond"
	<:small_blue_diamond:>
	
	
snippet emoji_small_red_triangle "Emoji small_red_triangle"
	<:small_red_triangle:>
	
	
snippet emoji_small_red_triangle_down "Emoji small_red_triangle_down"
	<:small_red_triangle_down:>
	
	
snippet emoji_arrow_up_small "Emoji arrow_up_small"
	<:arrow_up_small:>
	
	
snippet emoji_arrow_down_small "Emoji arrow_down_small"
	<:arrow_down_small:>
	
	
snippet emoji_om "Emoji om"
	<:om:>
	
	
snippet emoji_dove "Emoji dove"
	<:dove:>
	
	
snippet emoji_kaaba "Emoji kaaba"
	<:kaaba:>
	
	
snippet emoji_mosque "Emoji mosque"
	<:mosque:>
	
	
snippet emoji_synagogue "Emoji synagogue"
	<:synagogue:>
	
	
snippet emoji_menorah "Emoji menorah"
	<:menorah:>
	
	
snippet emoji_clock1 "Emoji clock1"
	<:clock1:>
	
	
snippet emoji_clock2 "Emoji clock2"
	<:clock2:>
	
	
snippet emoji_clock3 "Emoji clock3"
	<:clock3:>
	
	
snippet emoji_clock4 "Emoji clock4"
	<:clock4:>
	
	
snippet emoji_clock5 "Emoji clock5"
	<:clock5:>
	
	
snippet emoji_clock6 "Emoji clock6"
	<:clock6:>
	
	
snippet emoji_clock7 "Emoji clock7"
	<:clock7:>
	
	
snippet emoji_clock8 "Emoji clock8"
	<:clock8:>
	
	
snippet emoji_clock9 "Emoji clock9"
	<:clock9:>
	
	
snippet emoji_clock10 "Emoji clock10"
	<:clock10:>
	
	
snippet emoji_clock11 "Emoji clock11"
	<:clock11:>
	
	
snippet emoji_clock12 "Emoji clock12"
	<:clock12:>
	
	
snippet emoji_clock130 "Emoji clock130"
	<:clock130:>
	
	
snippet emoji_clock230 "Emoji clock230"
	<:clock230:>
	
	
snippet emoji_clock330 "Emoji clock330"
	<:clock330:>
	
	
snippet emoji_clock430 "Emoji clock430"
	<:clock430:>
	
	
snippet emoji_clock530 "Emoji clock530"
	<:clock530:>
	
	
snippet emoji_clock630 "Emoji clock630"
	<:clock630:>
	
	
snippet emoji_clock730 "Emoji clock730"
	<:clock730:>
	
	
snippet emoji_clock830 "Emoji clock830"
	<:clock830:>
	
	
snippet emoji_clock930 "Emoji clock930"
	<:clock930:>
	
	
snippet emoji_clock1030 "Emoji clock1030"
	<:clock1030:>
	
	
snippet emoji_clock1130 "Emoji clock1130"
	<:clock1130:>
	
	
snippet emoji_clock1230 "Emoji clock1230"
	<:clock1230:>
	
	
snippet emoji_candle "Emoji candle"
	<:candle:>
	
	
snippet emoji_mantelpiece_clock "Emoji mantelpiece_clock"
	<:mantelpiece_clock:>
	
	
snippet emoji_hole "Emoji hole"
	<:hole:>
	
	
snippet emoji_business_suit_levitating "Emoji business_suit_levitating"
	<:business_suit_levitating:>
	
	
snippet emoji_detective "Emoji detective"
	<:detective:>
	
	
snippet emoji_dark_sunglasses "Emoji dark_sunglasses"
	<:dark_sunglasses:>
	
	
snippet emoji_spider "Emoji spider"
	<:spider:>
	
	
snippet emoji_spider_web "Emoji spider_web"
	<:spider_web:>
	
	
snippet emoji_joystick "Emoji joystick"
	<:joystick:>
	
	
snippet emoji_man_dancing "Emoji man_dancing"
	<:man_dancing:>
	
	
snippet emoji_paperclips "Emoji paperclips"
	<:paperclips:>
	
	
snippet emoji_pen "Emoji pen"
	<:pen:>
	
	
snippet emoji_fountain_pen "Emoji fountain_pen"
	<:fountain_pen:>
	
	
snippet emoji_paintbrush "Emoji paintbrush"
	<:paintbrush:>
	
	
snippet emoji_crayon "Emoji crayon"
	<:crayon:>
	
	
snippet emoji_raised_hand_with_fingers_splayed "Emoji raised_hand_with_fingers_splayed"
	<:raised_hand_with_fingers_splayed:>
	
	
snippet emoji_fu "Emoji fu"
	<:fu:>
	
	
snippet emoji_vulcan_salute "Emoji vulcan_salute"
	<:vulcan_salute:>
	
	
snippet emoji_black_heart "Emoji black_heart"
	<:black_heart:>
	
	
snippet emoji_desktop_computer "Emoji desktop_computer"
	<:desktop_computer:>
	
	
snippet emoji_printer "Emoji printer"
	<:printer:>
	
	
snippet emoji_computer_mouse "Emoji computer_mouse"
	<:computer_mouse:>
	
	
snippet emoji_trackball "Emoji trackball"
	<:trackball:>
	
	
snippet emoji_framed_picture "Emoji framed_picture"
	<:framed_picture:>
	
	
snippet emoji_card_index_dividers "Emoji card_index_dividers"
	<:card_index_dividers:>
	
	
snippet emoji_card_file_box "Emoji card_file_box"
	<:card_file_box:>
	
	
snippet emoji_file_cabinet "Emoji file_cabinet"
	<:file_cabinet:>
	
	
snippet emoji_wastebasket "Emoji wastebasket"
	<:wastebasket:>
	
	
snippet emoji_spiral_notepad "Emoji spiral_notepad"
	<:spiral_notepad:>
	
	
snippet emoji_spiral_calendar "Emoji spiral_calendar"
	<:spiral_calendar:>
	
	
snippet emoji_clamp "Emoji clamp"
	<:clamp:>
	
	
snippet emoji_old_key "Emoji old_key"
	<:old_key:>
	
	
snippet emoji_newspaper_roll "Emoji newspaper_roll"
	<:newspaper_roll:>
	
	
snippet emoji_dagger "Emoji dagger"
	<:dagger:>
	
	
snippet emoji_speaking_head "Emoji speaking_head"
	<:speaking_head:>
	
	
snippet emoji_left_speech_bubble "Emoji left_speech_bubble"
	<:left_speech_bubble:>
	
	
snippet emoji_right_anger_bubble "Emoji right_anger_bubble"
	<:right_anger_bubble:>
	
	
snippet emoji_ballot_box "Emoji ballot_box"
	<:ballot_box:>
	
	
snippet emoji_world_map "Emoji world_map"
	<:world_map:>
	
	
snippet emoji_mount_fuji "Emoji mount_fuji"
	<:mount_fuji:>
	
	
snippet emoji_tokyo_tower "Emoji tokyo_tower"
	<:tokyo_tower:>
	
	
snippet emoji_statue_of_liberty "Emoji statue_of_liberty"
	<:statue_of_liberty:>
	
	
snippet emoji_japan "Emoji japan"
	<:japan:>
	
	
snippet emoji_moyai "Emoji moyai"
	<:moyai:>
	
	
	
	
snippet sprite_archimate_access "Archimate Sprite access"
	<<$archimate/access>>
	
	
snippet sprite_archimate_activity "Archimate Sprite activity"
	<<$archimate/activity>>
	
	
snippet sprite_archimate_actor "Archimate Sprite actor"
	<<$archimate/actor>>
	
	
snippet sprite_archimate_aggregation "Archimate Sprite aggregation"
	<<$archimate/aggregation>>
	
	
snippet sprite_archimate_application-collaboration "Archimate Sprite application-collaboration"
	<<$archimate/application-collaboration>>
	
	
snippet sprite_archimate_application-component "Archimate Sprite application-component"
	<<$archimate/application-component>>
	
	
snippet sprite_archimate_application-data-object "Archimate Sprite application-data-object"
	<<$archimate/application-data-object>>
	
	
snippet sprite_archimate_application-event "Archimate Sprite application-event"
	<<$archimate/application-event>>
	
	
snippet sprite_archimate_application-function "Archimate Sprite application-function"
	<<$archimate/application-function>>
	
	
snippet sprite_archimate_application-interaction "Archimate Sprite application-interaction"
	<<$archimate/application-interaction>>
	
	
snippet sprite_archimate_application-interface "Archimate Sprite application-interface"
	<<$archimate/application-interface>>
	
	
snippet sprite_archimate_application-process "Archimate Sprite application-process"
	<<$archimate/application-process>>
	
	
snippet sprite_archimate_application-service "Archimate Sprite application-service"
	<<$archimate/application-service>>
	
	
snippet sprite_archimate_assessment-filled "Archimate Sprite assessment-filled"
	<<$archimate/assessment-filled>>
	
	
snippet sprite_archimate_assessment "Archimate Sprite assessment"
	<<$archimate/assessment>>
	
	
snippet sprite_archimate_assignment "Archimate Sprite assignment"
	<<$archimate/assignment>>
	
	
snippet sprite_archimate_association-unidirect "Archimate Sprite association-unidirect"
	<<$archimate/association-unidirect>>
	
	
snippet sprite_archimate_association "Archimate Sprite association"
	<<$archimate/association>>
	
	
snippet sprite_archimate_business-activity "Archimate Sprite business-activity"
	<<$archimate/business-activity>>
	
	
snippet sprite_archimate_business-actor "Archimate Sprite business-actor"
	<<$archimate/business-actor>>
	
	
snippet sprite_archimate_business-collaboration "Archimate Sprite business-collaboration"
	<<$archimate/business-collaboration>>
	
	
snippet sprite_archimate_business-contract "Archimate Sprite business-contract"
	<<$archimate/business-contract>>
	
	
snippet sprite_archimate_business-event "Archimate Sprite business-event"
	<<$archimate/business-event>>
	
	
snippet sprite_archimate_business-function "Archimate Sprite business-function"
	<<$archimate/business-function>>
	
	
snippet sprite_archimate_business-interaction "Archimate Sprite business-interaction"
	<<$archimate/business-interaction>>
	
	
snippet sprite_archimate_business-interface "Archimate Sprite business-interface"
	<<$archimate/business-interface>>
	
	
snippet sprite_archimate_business-location "Archimate Sprite business-location"
	<<$archimate/business-location>>
	
	
snippet sprite_archimate_business-meaning "Archimate Sprite business-meaning"
	<<$archimate/business-meaning>>
	
	
snippet sprite_archimate_business-object "Archimate Sprite business-object"
	<<$archimate/business-object>>
	
	
snippet sprite_archimate_business-process "Archimate Sprite business-process"
	<<$archimate/business-process>>
	
	
snippet sprite_archimate_business-product "Archimate Sprite business-product"
	<<$archimate/business-product>>
	
	
snippet sprite_archimate_business-representation "Archimate Sprite business-representation"
	<<$archimate/business-representation>>
	
	
snippet sprite_archimate_business-role "Archimate Sprite business-role"
	<<$archimate/business-role>>
	
	
snippet sprite_archimate_business-service "Archimate Sprite business-service"
	<<$archimate/business-service>>
	
	
snippet sprite_archimate_business-value "Archimate Sprite business-value"
	<<$archimate/business-value>>
	
	
snippet sprite_archimate_collaboration "Archimate Sprite collaboration"
	<<$archimate/collaboration>>
	
	
snippet sprite_archimate_communication-path "Archimate Sprite communication-path"
	<<$archimate/communication-path>>
	
	
snippet sprite_archimate_component "Archimate Sprite component"
	<<$archimate/component>>
	
	
snippet sprite_archimate_composition "Archimate Sprite composition"
	<<$archimate/composition>>
	
	
snippet sprite_archimate_constraint-filled "Archimate Sprite constraint-filled"
	<<$archimate/constraint-filled>>
	
	
snippet sprite_archimate_constraint "Archimate Sprite constraint"
	<<$archimate/constraint>>
	
	
snippet sprite_archimate_contract "Archimate Sprite contract"
	<<$archimate/contract>>
	
	
snippet sprite_archimate_deliverable-filled "Archimate Sprite deliverable-filled"
	<<$archimate/deliverable-filled>>
	
	
snippet sprite_archimate_deliverable "Archimate Sprite deliverable"
	<<$archimate/deliverable>>
	
	
snippet sprite_archimate_device "Archimate Sprite device"
	<<$archimate/device>>
	
	
snippet sprite_archimate_driver-filled "Archimate Sprite driver-filled"
	<<$archimate/driver-filled>>
	
	
snippet sprite_archimate_driver "Archimate Sprite driver"
	<<$archimate/driver>>
	
	
snippet sprite_archimate_event "Archimate Sprite event"
	<<$archimate/event>>
	
	
snippet sprite_archimate_flow "Archimate Sprite flow"
	<<$archimate/flow>>
	
	
snippet sprite_archimate_function "Archimate Sprite function"
	<<$archimate/function>>
	
	
snippet sprite_archimate_gap-filled "Archimate Sprite gap-filled"
	<<$archimate/gap-filled>>
	
	
snippet sprite_archimate_gap "Archimate Sprite gap"
	<<$archimate/gap>>
	
	
snippet sprite_archimate_goal-filled "Archimate Sprite goal-filled"
	<<$archimate/goal-filled>>
	
	
snippet sprite_archimate_goal "Archimate Sprite goal"
	<<$archimate/goal>>
	
	
snippet sprite_archimate_implementation-deliverable "Archimate Sprite implementation-deliverable"
	<<$archimate/implementation-deliverable>>
	
	
snippet sprite_archimate_implementation-event "Archimate Sprite implementation-event"
	<<$archimate/implementation-event>>
	
	
snippet sprite_archimate_implementation-gap "Archimate Sprite implementation-gap"
	<<$archimate/implementation-gap>>
	
	
snippet sprite_archimate_implementation-plateau "Archimate Sprite implementation-plateau"
	<<$archimate/implementation-plateau>>
	
	
snippet sprite_archimate_implementation-workpackage "Archimate Sprite implementation-workpackage"
	<<$archimate/implementation-workpackage>>
	
	
snippet sprite_archimate_influence "Archimate Sprite influence"
	<<$archimate/influence>>
	
	
snippet sprite_archimate_interaction "Archimate Sprite interaction"
	<<$archimate/interaction>>
	
	
snippet sprite_archimate_interface-required "Archimate Sprite interface-required"
	<<$archimate/interface-required>>
	
	
snippet sprite_archimate_interface-symmetric "Archimate Sprite interface-symmetric"
	<<$archimate/interface-symmetric>>
	
	
snippet sprite_archimate_interface "Archimate Sprite interface"
	<<$archimate/interface>>
	
	
snippet sprite_archimate_junction-and "Archimate Sprite junction-and"
	<<$archimate/junction-and>>
	
	
snippet sprite_archimate_junction-or "Archimate Sprite junction-or"
	<<$archimate/junction-or>>
	
	
snippet sprite_archimate_junction "Archimate Sprite junction"
	<<$archimate/junction>>
	
	
snippet sprite_archimate_location "Archimate Sprite location"
	<<$archimate/location>>
	
	
snippet sprite_archimate_meaning "Archimate Sprite meaning"
	<<$archimate/meaning>>
	
	
snippet sprite_archimate_motivation-assessment "Archimate Sprite motivation-assessment"
	<<$archimate/motivation-assessment>>
	
	
snippet sprite_archimate_motivation-constraint "Archimate Sprite motivation-constraint"
	<<$archimate/motivation-constraint>>
	
	
snippet sprite_archimate_motivation-driver "Archimate Sprite motivation-driver"
	<<$archimate/motivation-driver>>
	
	
snippet sprite_archimate_motivation-goal "Archimate Sprite motivation-goal"
	<<$archimate/motivation-goal>>
	
	
snippet sprite_archimate_motivation-meaning "Archimate Sprite motivation-meaning"
	<<$archimate/motivation-meaning>>
	
	
snippet sprite_archimate_motivation-outcome "Archimate Sprite motivation-outcome"
	<<$archimate/motivation-outcome>>
	
	
snippet sprite_archimate_motivation-principle "Archimate Sprite motivation-principle"
	<<$archimate/motivation-principle>>
	
	
snippet sprite_archimate_motivation-requirement "Archimate Sprite motivation-requirement"
	<<$archimate/motivation-requirement>>
	
	
snippet sprite_archimate_motivation-stakeholder "Archimate Sprite motivation-stakeholder"
	<<$archimate/motivation-stakeholder>>
	
	
snippet sprite_archimate_motivation-value "Archimate Sprite motivation-value"
	<<$archimate/motivation-value>>
	
	
snippet sprite_archimate_network "Archimate Sprite network"
	<<$archimate/network>>
	
	
snippet sprite_archimate_node "Archimate Sprite node"
	<<$archimate/node>>
	
	
snippet sprite_archimate_object "Archimate Sprite object"
	<<$archimate/object>>
	
	
snippet sprite_archimate_physical-distribution-network "Archimate Sprite physical-distribution-network"
	<<$archimate/physical-distribution-network>>
	
	
snippet sprite_archimate_physical-equipment "Archimate Sprite physical-equipment"
	<<$archimate/physical-equipment>>
	
	
snippet sprite_archimate_physical-facility "Archimate Sprite physical-facility"
	<<$archimate/physical-facility>>
	
	
snippet sprite_archimate_physical-material "Archimate Sprite physical-material"
	<<$archimate/physical-material>>
	
	
snippet sprite_archimate_plateau "Archimate Sprite plateau"
	<<$archimate/plateau>>
	
	
snippet sprite_archimate_principle-filled "Archimate Sprite principle-filled"
	<<$archimate/principle-filled>>
	
	
snippet sprite_archimate_principle "Archimate Sprite principle"
	<<$archimate/principle>>
	
	
snippet sprite_archimate_process "Archimate Sprite process"
	<<$archimate/process>>
	
	
snippet sprite_archimate_product "Archimate Sprite product"
	<<$archimate/product>>
	
	
snippet sprite_archimate_realisation "Archimate Sprite realisation"
	<<$archimate/realisation>>
	
	
snippet sprite_archimate_representation "Archimate Sprite representation"
	<<$archimate/representation>>
	
	
snippet sprite_archimate_requirement-filled "Archimate Sprite requirement-filled"
	<<$archimate/requirement-filled>>
	
	
snippet sprite_archimate_requirement "Archimate Sprite requirement"
	<<$archimate/requirement>>
	
	
snippet sprite_archimate_role "Archimate Sprite role"
	<<$archimate/role>>
	
	
snippet sprite_archimate_service "Archimate Sprite service"
	<<$archimate/service>>
	
	
snippet sprite_archimate_serving "Archimate Sprite serving"
	<<$archimate/serving>>
	
	
snippet sprite_archimate_specialisation "Archimate Sprite specialisation"
	<<$archimate/specialisation>>
	
	
snippet sprite_archimate_specialization "Archimate Sprite specialization"
	<<$archimate/specialization>>
	
	
snippet sprite_archimate_stakeholder-filled "Archimate Sprite stakeholder-filled"
	<<$archimate/stakeholder-filled>>
	
	
snippet sprite_archimate_strategy-capability "Archimate Sprite strategy-capability"
	<<$archimate/strategy-capability>>
	
	
snippet sprite_archimate_strategy-course-of-action "Archimate Sprite strategy-course-of-action"
	<<$archimate/strategy-course-of-action>>
	
	
snippet sprite_archimate_strategy-resource "Archimate Sprite strategy-resource"
	<<$archimate/strategy-resource>>
	
	
snippet sprite_archimate_strategy-value-stream "Archimate Sprite strategy-value-stream"
	<<$archimate/strategy-value-stream>>
	
	
snippet sprite_archimate_system-software "Archimate Sprite system-software"
	<<$archimate/system-software>>
	
	
snippet sprite_archimate_technology-artifact "Archimate Sprite technology-artifact"
	<<$archimate/technology-artifact>>
	
	
snippet sprite_archimate_technology-collaboration "Archimate Sprite technology-collaboration"
	<<$archimate/technology-collaboration>>
	
	
snippet sprite_archimate_technology-communication-network "Archimate Sprite technology-communication-network"
	<<$archimate/technology-communication-network>>
	
	
snippet sprite_archimate_technology-communication-path "Archimate Sprite technology-communication-path"
	<<$archimate/technology-communication-path>>
	
	
snippet sprite_archimate_technology-device "Archimate Sprite technology-device"
	<<$archimate/technology-device>>
	
	
snippet sprite_archimate_technology-event "Archimate Sprite technology-event"
	<<$archimate/technology-event>>
	
	
snippet sprite_archimate_technology-function "Archimate Sprite technology-function"
	<<$archimate/technology-function>>
	
	
snippet sprite_archimate_technology-infra-interface "Archimate Sprite technology-infra-interface"
	<<$archimate/technology-infra-interface>>
	
	
snippet sprite_archimate_technology-infra-service "Archimate Sprite technology-infra-service"
	<<$archimate/technology-infra-service>>
	
	
snippet sprite_archimate_technology-interaction "Archimate Sprite technology-interaction"
	<<$archimate/technology-interaction>>
	
	
snippet sprite_archimate_technology-interface "Archimate Sprite technology-interface"
	<<$archimate/technology-interface>>
	
	
snippet sprite_archimate_technology-network "Archimate Sprite technology-network"
	<<$archimate/technology-network>>
	
	
snippet sprite_archimate_technology-node "Archimate Sprite technology-node"
	<<$archimate/technology-node>>
	
	
snippet sprite_archimate_technology-path "Archimate Sprite technology-path"
	<<$archimate/technology-path>>
	
	
snippet sprite_archimate_technology-process "Archimate Sprite technology-process"
	<<$archimate/technology-process>>
	
	
snippet sprite_archimate_technology-service "Archimate Sprite technology-service"
	<<$archimate/technology-service>>
	
	
snippet sprite_archimate_technology-system-software "Archimate Sprite technology-system-software"
	<<$archimate/technology-system-software>>
	
	
snippet sprite_archimate_triggering "Archimate Sprite triggering"
	<<$archimate/triggering>>
	
	
snippet sprite_archimate_used-by "Archimate Sprite used-by"
	<<$archimate/used-by>>
	
	
snippet sprite_archimate_value "Archimate Sprite value"
	<<$archimate/value>>
	
	
snippet sprite_archimate_workpackage-filled "Archimate Sprite workpackage-filled"
	<<$archimate/workpackage-filled>>
	
	
snippet sprite_material_access_point_network "Google Material Icons access_point_network"
	!include <material/common>
	!include <material/access_point_network>
	
	<<$ma_access_point_network>>
	
	
snippet sprite_material_access_point "Google Material Icons access_point"
	!include <material/common>
	!include <material/access_point>
	
	<<$ma_access_point>>
	
	
snippet sprite_material_account_alert "Google Material Icons account_alert"
	!include <material/common>
	!include <material/account_alert>
	
	<<$ma_account_alert>>
	
	
snippet sprite_material_account_box_outline "Google Material Icons account_box_outline"
	!include <material/common>
	!include <material/account_box_outline>
	
	<<$ma_account_box_outline>>
	
	
snippet sprite_material_account_box "Google Material Icons account_box"
	!include <material/common>
	!include <material/account_box>
	
	<<$ma_account_box>>
	
	
snippet sprite_material_account_card_details "Google Material Icons account_card_details"
	!include <material/common>
	!include <material/account_card_details>
	
	<<$ma_account_card_details>>
	
	
snippet sprite_material_account_check "Google Material Icons account_check"
	!include <material/common>
	!include <material/account_check>
	
	<<$ma_account_check>>
	
	
snippet sprite_material_account_circle "Google Material Icons account_circle"
	!include <material/common>
	!include <material/account_circle>
	
	<<$ma_account_circle>>
	
	
snippet sprite_material_account_convert "Google Material Icons account_convert"
	!include <material/common>
	!include <material/account_convert>
	
	<<$ma_account_convert>>
	
	
snippet sprite_material_account_edit "Google Material Icons account_edit"
	!include <material/common>
	!include <material/account_edit>
	
	<<$ma_account_edit>>
	
	
snippet sprite_material_account_key "Google Material Icons account_key"
	!include <material/common>
	!include <material/account_key>
	
	<<$ma_account_key>>
	
	
snippet sprite_material_account_location "Google Material Icons account_location"
	!include <material/common>
	!include <material/account_location>
	
	<<$ma_account_location>>
	
	
snippet sprite_material_account_minus "Google Material Icons account_minus"
	!include <material/common>
	!include <material/account_minus>
	
	<<$ma_account_minus>>
	
	
snippet sprite_material_account_multiple_minus "Google Material Icons account_multiple_minus"
	!include <material/common>
	!include <material/account_multiple_minus>
	
	<<$ma_account_multiple_minus>>
	
	
snippet sprite_material_account_multiple_outline "Google Material Icons account_multiple_outline"
	!include <material/common>
	!include <material/account_multiple_outline>
	
	<<$ma_account_multiple_outline>>
	
	
snippet sprite_material_account_multiple_plus_outline "Google Material Icons account_multiple_plus_outline"
	!include <material/common>
	!include <material/account_multiple_plus_outline>
	
	<<$ma_account_multiple_plus_outline>>
	
	
snippet sprite_material_account_multiple_plus "Google Material Icons account_multiple_plus"
	!include <material/common>
	!include <material/account_multiple_plus>
	
	<<$ma_account_multiple_plus>>
	
	
snippet sprite_material_account_multiple "Google Material Icons account_multiple"
	!include <material/common>
	!include <material/account_multiple>
	
	<<$ma_account_multiple>>
	
	
snippet sprite_material_account_network "Google Material Icons account_network"
	!include <material/common>
	!include <material/account_network>
	
	<<$ma_account_network>>
	
	
snippet sprite_material_account_off "Google Material Icons account_off"
	!include <material/common>
	!include <material/account_off>
	
	<<$ma_account_off>>
	
	
snippet sprite_material_account_outline "Google Material Icons account_outline"
	!include <material/common>
	!include <material/account_outline>
	
	<<$ma_account_outline>>
	
	
snippet sprite_material_account_plus_outline "Google Material Icons account_plus_outline"
	!include <material/common>
	!include <material/account_plus_outline>
	
	<<$ma_account_plus_outline>>
	
	
snippet sprite_material_account_plus "Google Material Icons account_plus"
	!include <material/common>
	!include <material/account_plus>
	
	<<$ma_account_plus>>
	
	
snippet sprite_material_account "Google Material Icons account"
	!include <material/common>
	!include <material/account>
	
	<<$ma_account>>
	
	
snippet sprite_material_account_remove "Google Material Icons account_remove"
	!include <material/common>
	!include <material/account_remove>
	
	<<$ma_account_remove>>
	
	
snippet sprite_material_account_search "Google Material Icons account_search"
	!include <material/common>
	!include <material/account_search>
	
	<<$ma_account_search>>
	
	
snippet sprite_material_account_settings "Google Material Icons account_settings"
	!include <material/common>
	!include <material/account_settings>
	
	<<$ma_account_settings>>
	
	
snippet sprite_material_account_settings_variant "Google Material Icons account_settings_variant"
	!include <material/common>
	!include <material/account_settings_variant>
	
	<<$ma_account_settings_variant>>
	
	
snippet sprite_material_account_switch "Google Material Icons account_switch"
	!include <material/common>
	!include <material/account_switch>
	
	<<$ma_account_switch>>
	
	
snippet sprite_material_adjust "Google Material Icons adjust"
	!include <material/common>
	!include <material/adjust>
	
	<<$ma_adjust>>
	
	
snippet sprite_material_airballoon "Google Material Icons airballoon"
	!include <material/common>
	!include <material/airballoon>
	
	<<$ma_airballoon>>
	
	
snippet sprite_material_air_conditioner "Google Material Icons air_conditioner"
	!include <material/common>
	!include <material/air_conditioner>
	
	<<$ma_air_conditioner>>
	
	
snippet sprite_material_airplane_landing "Google Material Icons airplane_landing"
	!include <material/common>
	!include <material/airplane_landing>
	
	<<$ma_airplane_landing>>
	
	
snippet sprite_material_airplane_off "Google Material Icons airplane_off"
	!include <material/common>
	!include <material/airplane_off>
	
	<<$ma_airplane_off>>
	
	
snippet sprite_material_airplane "Google Material Icons airplane"
	!include <material/common>
	!include <material/airplane>
	
	<<$ma_airplane>>
	
	
snippet sprite_material_airplane_takeoff "Google Material Icons airplane_takeoff"
	!include <material/common>
	!include <material/airplane_takeoff>
	
	<<$ma_airplane_takeoff>>
	
	
snippet sprite_material_airplay "Google Material Icons airplay"
	!include <material/common>
	!include <material/airplay>
	
	<<$ma_airplay>>
	
	
snippet sprite_material_alarm_bell "Google Material Icons alarm_bell"
	!include <material/common>
	!include <material/alarm_bell>
	
	<<$ma_alarm_bell>>
	
	
snippet sprite_material_alarm_check "Google Material Icons alarm_check"
	!include <material/common>
	!include <material/alarm_check>
	
	<<$ma_alarm_check>>
	
	
snippet sprite_material_alarm_light "Google Material Icons alarm_light"
	!include <material/common>
	!include <material/alarm_light>
	
	<<$ma_alarm_light>>
	
	
snippet sprite_material_alarm_multiple "Google Material Icons alarm_multiple"
	!include <material/common>
	!include <material/alarm_multiple>
	
	<<$ma_alarm_multiple>>
	
	
snippet sprite_material_alarm_off "Google Material Icons alarm_off"
	!include <material/common>
	!include <material/alarm_off>
	
	<<$ma_alarm_off>>
	
	
snippet sprite_material_alarm_plus "Google Material Icons alarm_plus"
	!include <material/common>
	!include <material/alarm_plus>
	
	<<$ma_alarm_plus>>
	
	
snippet sprite_material_alarm "Google Material Icons alarm"
	!include <material/common>
	!include <material/alarm>
	
	<<$ma_alarm>>
	
	
snippet sprite_material_alarm_snooze "Google Material Icons alarm_snooze"
	!include <material/common>
	!include <material/alarm_snooze>
	
	<<$ma_alarm_snooze>>
	
	
snippet sprite_material_album "Google Material Icons album"
	!include <material/common>
	!include <material/album>
	
	<<$ma_album>>
	
	
snippet sprite_material_alert_box "Google Material Icons alert_box"
	!include <material/common>
	!include <material/alert_box>
	
	<<$ma_alert_box>>
	
	
snippet sprite_material_alert_circle_outline "Google Material Icons alert_circle_outline"
	!include <material/common>
	!include <material/alert_circle_outline>
	
	<<$ma_alert_circle_outline>>
	
	
snippet sprite_material_alert_circle "Google Material Icons alert_circle"
	!include <material/common>
	!include <material/alert_circle>
	
	<<$ma_alert_circle>>
	
	
snippet sprite_material_alert_decagram "Google Material Icons alert_decagram"
	!include <material/common>
	!include <material/alert_decagram>
	
	<<$ma_alert_decagram>>
	
	
snippet sprite_material_alert_octagon "Google Material Icons alert_octagon"
	!include <material/common>
	!include <material/alert_octagon>
	
	<<$ma_alert_octagon>>
	
	
snippet sprite_material_alert_octagram "Google Material Icons alert_octagram"
	!include <material/common>
	!include <material/alert_octagram>
	
	<<$ma_alert_octagram>>
	
	
snippet sprite_material_alert_outline "Google Material Icons alert_outline"
	!include <material/common>
	!include <material/alert_outline>
	
	<<$ma_alert_outline>>
	
	
snippet sprite_material_alert "Google Material Icons alert"
	!include <material/common>
	!include <material/alert>
	
	<<$ma_alert>>
	
	
snippet sprite_material_all_inclusive "Google Material Icons all_inclusive"
	!include <material/common>
	!include <material/all_inclusive>
	
	<<$ma_all_inclusive>>
	
	
snippet sprite_material_allo "Google Material Icons allo"
	!include <material/common>
	!include <material/allo>
	
	<<$ma_allo>>
	
	
snippet sprite_material_alphabetical "Google Material Icons alphabetical"
	!include <material/common>
	!include <material/alphabetical>
	
	<<$ma_alphabetical>>
	
	
snippet sprite_material_alpha "Google Material Icons alpha"
	!include <material/common>
	!include <material/alpha>
	
	<<$ma_alpha>>
	
	
snippet sprite_material_altimeter "Google Material Icons altimeter"
	!include <material/common>
	!include <material/altimeter>
	
	<<$ma_altimeter>>
	
	
snippet sprite_material_amazon_clouddrive "Google Material Icons amazon_clouddrive"
	!include <material/common>
	!include <material/amazon_clouddrive>
	
	<<$ma_amazon_clouddrive>>
	
	
snippet sprite_material_amazon "Google Material Icons amazon"
	!include <material/common>
	!include <material/amazon>
	
	<<$ma_amazon>>
	
	
snippet sprite_material_ambulance "Google Material Icons ambulance"
	!include <material/common>
	!include <material/ambulance>
	
	<<$ma_ambulance>>
	
	
snippet sprite_material_amplifier "Google Material Icons amplifier"
	!include <material/common>
	!include <material/amplifier>
	
	<<$ma_amplifier>>
	
	
snippet sprite_material_anchor "Google Material Icons anchor"
	!include <material/common>
	!include <material/anchor>
	
	<<$ma_anchor>>
	
	
snippet sprite_material_android_debug_bridge "Google Material Icons android_debug_bridge"
	!include <material/common>
	!include <material/android_debug_bridge>
	
	<<$ma_android_debug_bridge>>
	
	
snippet sprite_material_android_head "Google Material Icons android_head"
	!include <material/common>
	!include <material/android_head>
	
	<<$ma_android_head>>
	
	
snippet sprite_material_android "Google Material Icons android"
	!include <material/common>
	!include <material/android>
	
	<<$ma_android>>
	
	
snippet sprite_material_android_studio "Google Material Icons android_studio"
	!include <material/common>
	!include <material/android_studio>
	
	<<$ma_android_studio>>
	
	
snippet sprite_material_angularjs "Google Material Icons angularjs"
	!include <material/common>
	!include <material/angularjs>
	
	<<$ma_angularjs>>
	
	
snippet sprite_material_angular "Google Material Icons angular"
	!include <material/common>
	!include <material/angular>
	
	<<$ma_angular>>
	
	
snippet sprite_material_animation "Google Material Icons animation"
	!include <material/common>
	!include <material/animation>
	
	<<$ma_animation>>
	
	
snippet sprite_material_apple_finder "Google Material Icons apple_finder"
	!include <material/common>
	!include <material/apple_finder>
	
	<<$ma_apple_finder>>
	
	
snippet sprite_material_apple_ios "Google Material Icons apple_ios"
	!include <material/common>
	!include <material/apple_ios>
	
	<<$ma_apple_ios>>
	
	
snippet sprite_material_apple_keyboard_caps "Google Material Icons apple_keyboard_caps"
	!include <material/common>
	!include <material/apple_keyboard_caps>
	
	<<$ma_apple_keyboard_caps>>
	
	
snippet sprite_material_apple_keyboard_command "Google Material Icons apple_keyboard_command"
	!include <material/common>
	!include <material/apple_keyboard_command>
	
	<<$ma_apple_keyboard_command>>
	
	
snippet sprite_material_apple_keyboard_control "Google Material Icons apple_keyboard_control"
	!include <material/common>
	!include <material/apple_keyboard_control>
	
	<<$ma_apple_keyboard_control>>
	
	
snippet sprite_material_apple_keyboard_option "Google Material Icons apple_keyboard_option"
	!include <material/common>
	!include <material/apple_keyboard_option>
	
	<<$ma_apple_keyboard_option>>
	
	
snippet sprite_material_apple_keyboard_shift "Google Material Icons apple_keyboard_shift"
	!include <material/common>
	!include <material/apple_keyboard_shift>
	
	<<$ma_apple_keyboard_shift>>
	
	
snippet sprite_material_apple_mobileme "Google Material Icons apple_mobileme"
	!include <material/common>
	!include <material/apple_mobileme>
	
	<<$ma_apple_mobileme>>
	
	
snippet sprite_material_apple "Google Material Icons apple"
	!include <material/common>
	!include <material/apple>
	
	<<$ma_apple>>
	
	
snippet sprite_material_apple_safari "Google Material Icons apple_safari"
	!include <material/common>
	!include <material/apple_safari>
	
	<<$ma_apple_safari>>
	
	
snippet sprite_material_application "Google Material Icons application"
	!include <material/common>
	!include <material/application>
	
	<<$ma_application>>
	
	
snippet sprite_material_appnet "Google Material Icons appnet"
	!include <material/common>
	!include <material/appnet>
	
	<<$ma_appnet>>
	
	
snippet sprite_material_approval "Google Material Icons approval"
	!include <material/common>
	!include <material/approval>
	
	<<$ma_approval>>
	
	
snippet sprite_material_apps "Google Material Icons apps"
	!include <material/common>
	!include <material/apps>
	
	<<$ma_apps>>
	
	
snippet sprite_material_archive "Google Material Icons archive"
	!include <material/common>
	!include <material/archive>
	
	<<$ma_archive>>
	
	
snippet sprite_material_arrange_bring_forward "Google Material Icons arrange_bring_forward"
	!include <material/common>
	!include <material/arrange_bring_forward>
	
	<<$ma_arrange_bring_forward>>
	
	
snippet sprite_material_arrange_bring_to_front "Google Material Icons arrange_bring_to_front"
	!include <material/common>
	!include <material/arrange_bring_to_front>
	
	<<$ma_arrange_bring_to_front>>
	
	
snippet sprite_material_arrange_send_backward "Google Material Icons arrange_send_backward"
	!include <material/common>
	!include <material/arrange_send_backward>
	
	<<$ma_arrange_send_backward>>
	
	
snippet sprite_material_arrange_send_to_back "Google Material Icons arrange_send_to_back"
	!include <material/common>
	!include <material/arrange_send_to_back>
	
	<<$ma_arrange_send_to_back>>
	
	
snippet sprite_material_arrow_all "Google Material Icons arrow_all"
	!include <material/common>
	!include <material/arrow_all>
	
	<<$ma_arrow_all>>
	
	
snippet sprite_material_arrow_bottom_left "Google Material Icons arrow_bottom_left"
	!include <material/common>
	!include <material/arrow_bottom_left>
	
	<<$ma_arrow_bottom_left>>
	
	
snippet sprite_material_arrow_bottom_right "Google Material Icons arrow_bottom_right"
	!include <material/common>
	!include <material/arrow_bottom_right>
	
	<<$ma_arrow_bottom_right>>
	
	
snippet sprite_material_arrow_collapse_all "Google Material Icons arrow_collapse_all"
	!include <material/common>
	!include <material/arrow_collapse_all>
	
	<<$ma_arrow_collapse_all>>
	
	
snippet sprite_material_arrow_collapse_down "Google Material Icons arrow_collapse_down"
	!include <material/common>
	!include <material/arrow_collapse_down>
	
	<<$ma_arrow_collapse_down>>
	
	
snippet sprite_material_arrow_collapse_left "Google Material Icons arrow_collapse_left"
	!include <material/common>
	!include <material/arrow_collapse_left>
	
	<<$ma_arrow_collapse_left>>
	
	
snippet sprite_material_arrow_collapse "Google Material Icons arrow_collapse"
	!include <material/common>
	!include <material/arrow_collapse>
	
	<<$ma_arrow_collapse>>
	
	
snippet sprite_material_arrow_collapse_right "Google Material Icons arrow_collapse_right"
	!include <material/common>
	!include <material/arrow_collapse_right>
	
	<<$ma_arrow_collapse_right>>
	
	
snippet sprite_material_arrow_collapse_up "Google Material Icons arrow_collapse_up"
	!include <material/common>
	!include <material/arrow_collapse_up>
	
	<<$ma_arrow_collapse_up>>
	
	
snippet sprite_material_arrow_down_bold_box_outline "Google Material Icons arrow_down_bold_box_outline"
	!include <material/common>
	!include <material/arrow_down_bold_box_outline>
	
	<<$ma_arrow_down_bold_box_outline>>
	
	
snippet sprite_material_arrow_down_bold_box "Google Material Icons arrow_down_bold_box"
	!include <material/common>
	!include <material/arrow_down_bold_box>
	
	<<$ma_arrow_down_bold_box>>
	
	
snippet sprite_material_arrow_down_bold_circle_outline "Google Material Icons arrow_down_bold_circle_outline"
	!include <material/common>
	!include <material/arrow_down_bold_circle_outline>
	
	<<$ma_arrow_down_bold_circle_outline>>
	
	
snippet sprite_material_arrow_down_bold_circle "Google Material Icons arrow_down_bold_circle"
	!include <material/common>
	!include <material/arrow_down_bold_circle>
	
	<<$ma_arrow_down_bold_circle>>
	
	
snippet sprite_material_arrow_down_bold_hexagon_outline "Google Material Icons arrow_down_bold_hexagon_outline"
	!include <material/common>
	!include <material/arrow_down_bold_hexagon_outline>
	
	<<$ma_arrow_down_bold_hexagon_outline>>
	
	
snippet sprite_material_arrow_down_bold "Google Material Icons arrow_down_bold"
	!include <material/common>
	!include <material/arrow_down_bold>
	
	<<$ma_arrow_down_bold>>
	
	
snippet sprite_material_arrow_down_box "Google Material Icons arrow_down_box"
	!include <material/common>
	!include <material/arrow_down_box>
	
	<<$ma_arrow_down_box>>
	
	
snippet sprite_material_arrow_down_drop_circle_outline "Google Material Icons arrow_down_drop_circle_outline"
	!include <material/common>
	!include <material/arrow_down_drop_circle_outline>
	
	<<$ma_arrow_down_drop_circle_outline>>
	
	
snippet sprite_material_arrow_down_drop_circle "Google Material Icons arrow_down_drop_circle"
	!include <material/common>
	!include <material/arrow_down_drop_circle>
	
	<<$ma_arrow_down_drop_circle>>
	
	
snippet sprite_material_arrow_down_drop "Google Material Icons arrow_down_drop"
	!include <material/common>
	!include <material/arrow_down_drop>
	
	<<$ma_arrow_down_drop>>
	
	
snippet sprite_material_arrow_down "Google Material Icons arrow_down"
	!include <material/common>
	!include <material/arrow_down>
	
	<<$ma_arrow_down>>
	
	
snippet sprite_material_arrow_down_thick "Google Material Icons arrow_down_thick"
	!include <material/common>
	!include <material/arrow_down_thick>
	
	<<$ma_arrow_down_thick>>
	
	
snippet sprite_material_arrow_expand_all "Google Material Icons arrow_expand_all"
	!include <material/common>
	!include <material/arrow_expand_all>
	
	<<$ma_arrow_expand_all>>
	
	
snippet sprite_material_arrow_expand_down "Google Material Icons arrow_expand_down"
	!include <material/common>
	!include <material/arrow_expand_down>
	
	<<$ma_arrow_expand_down>>
	
	
snippet sprite_material_arrow_expand_left "Google Material Icons arrow_expand_left"
	!include <material/common>
	!include <material/arrow_expand_left>
	
	<<$ma_arrow_expand_left>>
	
	
snippet sprite_material_arrow_expand "Google Material Icons arrow_expand"
	!include <material/common>
	!include <material/arrow_expand>
	
	<<$ma_arrow_expand>>
	
	
snippet sprite_material_arrow_expand_right "Google Material Icons arrow_expand_right"
	!include <material/common>
	!include <material/arrow_expand_right>
	
	<<$ma_arrow_expand_right>>
	
	
snippet sprite_material_arrow_expand_up "Google Material Icons arrow_expand_up"
	!include <material/common>
	!include <material/arrow_expand_up>
	
	<<$ma_arrow_expand_up>>
	
	
snippet sprite_material_arrow_left_bold_box_outline "Google Material Icons arrow_left_bold_box_outline"
	!include <material/common>
	!include <material/arrow_left_bold_box_outline>
	
	<<$ma_arrow_left_bold_box_outline>>
	
	
snippet sprite_material_arrow_left_bold_box "Google Material Icons arrow_left_bold_box"
	!include <material/common>
	!include <material/arrow_left_bold_box>
	
	<<$ma_arrow_left_bold_box>>
	
	
snippet sprite_material_arrow_left_bold_circle_outline "Google Material Icons arrow_left_bold_circle_outline"
	!include <material/common>
	!include <material/arrow_left_bold_circle_outline>
	
	<<$ma_arrow_left_bold_circle_outline>>
	
	
snippet sprite_material_arrow_left_bold_circle "Google Material Icons arrow_left_bold_circle"
	!include <material/common>
	!include <material/arrow_left_bold_circle>
	
	<<$ma_arrow_left_bold_circle>>
	
	
snippet sprite_material_arrow_left_bold_hexagon_outline "Google Material Icons arrow_left_bold_hexagon_outline"
	!include <material/common>
	!include <material/arrow_left_bold_hexagon_outline>
	
	<<$ma_arrow_left_bold_hexagon_outline>>
	
	
snippet sprite_material_arrow_left_bold "Google Material Icons arrow_left_bold"
	!include <material/common>
	!include <material/arrow_left_bold>
	
	<<$ma_arrow_left_bold>>
	
	
snippet sprite_material_arrow_left_box "Google Material Icons arrow_left_box"
	!include <material/common>
	!include <material/arrow_left_box>
	
	<<$ma_arrow_left_box>>
	
	
snippet sprite_material_arrow_left_drop_circle_outline "Google Material Icons arrow_left_drop_circle_outline"
	!include <material/common>
	!include <material/arrow_left_drop_circle_outline>
	
	<<$ma_arrow_left_drop_circle_outline>>
	
	
snippet sprite_material_arrow_left_drop_circle "Google Material Icons arrow_left_drop_circle"
	!include <material/common>
	!include <material/arrow_left_drop_circle>
	
	<<$ma_arrow_left_drop_circle>>
	
	
snippet sprite_material_arrow_left "Google Material Icons arrow_left"
	!include <material/common>
	!include <material/arrow_left>
	
	<<$ma_arrow_left>>
	
	
snippet sprite_material_arrow_left_thick "Google Material Icons arrow_left_thick"
	!include <material/common>
	!include <material/arrow_left_thick>
	
	<<$ma_arrow_left_thick>>
	
	
snippet sprite_material_arrow_right_bold_box_outline "Google Material Icons arrow_right_bold_box_outline"
	!include <material/common>
	!include <material/arrow_right_bold_box_outline>
	
	<<$ma_arrow_right_bold_box_outline>>
	
	
snippet sprite_material_arrow_right_bold_box "Google Material Icons arrow_right_bold_box"
	!include <material/common>
	!include <material/arrow_right_bold_box>
	
	<<$ma_arrow_right_bold_box>>
	
	
snippet sprite_material_arrow_right_bold_circle_outline "Google Material Icons arrow_right_bold_circle_outline"
	!include <material/common>
	!include <material/arrow_right_bold_circle_outline>
	
	<<$ma_arrow_right_bold_circle_outline>>
	
	
snippet sprite_material_arrow_right_bold_circle "Google Material Icons arrow_right_bold_circle"
	!include <material/common>
	!include <material/arrow_right_bold_circle>
	
	<<$ma_arrow_right_bold_circle>>
	
	
snippet sprite_material_arrow_right_bold_hexagon_outline "Google Material Icons arrow_right_bold_hexagon_outline"
	!include <material/common>
	!include <material/arrow_right_bold_hexagon_outline>
	
	<<$ma_arrow_right_bold_hexagon_outline>>
	
	
snippet sprite_material_arrow_right_bold "Google Material Icons arrow_right_bold"
	!include <material/common>
	!include <material/arrow_right_bold>
	
	<<$ma_arrow_right_bold>>
	
	
snippet sprite_material_arrow_right_box "Google Material Icons arrow_right_box"
	!include <material/common>
	!include <material/arrow_right_box>
	
	<<$ma_arrow_right_box>>
	
	
snippet sprite_material_arrow_right_drop_circle_outline "Google Material Icons arrow_right_drop_circle_outline"
	!include <material/common>
	!include <material/arrow_right_drop_circle_outline>
	
	<<$ma_arrow_right_drop_circle_outline>>
	
	
snippet sprite_material_arrow_right_drop_circle "Google Material Icons arrow_right_drop_circle"
	!include <material/common>
	!include <material/arrow_right_drop_circle>
	
	<<$ma_arrow_right_drop_circle>>
	
	
snippet sprite_material_arrow_right "Google Material Icons arrow_right"
	!include <material/common>
	!include <material/arrow_right>
	
	<<$ma_arrow_right>>
	
	
snippet sprite_material_arrow_right_thick "Google Material Icons arrow_right_thick"
	!include <material/common>
	!include <material/arrow_right_thick>
	
	<<$ma_arrow_right_thick>>
	
	
snippet sprite_material_arrow_top_left "Google Material Icons arrow_top_left"
	!include <material/common>
	!include <material/arrow_top_left>
	
	<<$ma_arrow_top_left>>
	
	
snippet sprite_material_arrow_top_right "Google Material Icons arrow_top_right"
	!include <material/common>
	!include <material/arrow_top_right>
	
	<<$ma_arrow_top_right>>
	
	
snippet sprite_material_arrow_up_bold_box_outline "Google Material Icons arrow_up_bold_box_outline"
	!include <material/common>
	!include <material/arrow_up_bold_box_outline>
	
	<<$ma_arrow_up_bold_box_outline>>
	
	
snippet sprite_material_arrow_up_bold_box "Google Material Icons arrow_up_bold_box"
	!include <material/common>
	!include <material/arrow_up_bold_box>
	
	<<$ma_arrow_up_bold_box>>
	
	
snippet sprite_material_arrow_up_bold_circle_outline "Google Material Icons arrow_up_bold_circle_outline"
	!include <material/common>
	!include <material/arrow_up_bold_circle_outline>
	
	<<$ma_arrow_up_bold_circle_outline>>
	
	
snippet sprite_material_arrow_up_bold_circle "Google Material Icons arrow_up_bold_circle"
	!include <material/common>
	!include <material/arrow_up_bold_circle>
	
	<<$ma_arrow_up_bold_circle>>
	
	
snippet sprite_material_arrow_up_bold_hexagon_outline "Google Material Icons arrow_up_bold_hexagon_outline"
	!include <material/common>
	!include <material/arrow_up_bold_hexagon_outline>
	
	<<$ma_arrow_up_bold_hexagon_outline>>
	
	
snippet sprite_material_arrow_up_bold "Google Material Icons arrow_up_bold"
	!include <material/common>
	!include <material/arrow_up_bold>
	
	<<$ma_arrow_up_bold>>
	
	
snippet sprite_material_arrow_up_box "Google Material Icons arrow_up_box"
	!include <material/common>
	!include <material/arrow_up_box>
	
	<<$ma_arrow_up_box>>
	
	
snippet sprite_material_arrow_up_drop_circle_outline "Google Material Icons arrow_up_drop_circle_outline"
	!include <material/common>
	!include <material/arrow_up_drop_circle_outline>
	
	<<$ma_arrow_up_drop_circle_outline>>
	
	
snippet sprite_material_arrow_up_drop_circle "Google Material Icons arrow_up_drop_circle"
	!include <material/common>
	!include <material/arrow_up_drop_circle>
	
	<<$ma_arrow_up_drop_circle>>
	
	
snippet sprite_material_arrow_up "Google Material Icons arrow_up"
	!include <material/common>
	!include <material/arrow_up>
	
	<<$ma_arrow_up>>
	
	
snippet sprite_material_arrow_up_thick "Google Material Icons arrow_up_thick"
	!include <material/common>
	!include <material/arrow_up_thick>
	
	<<$ma_arrow_up_thick>>
	
	
snippet sprite_material_artist "Google Material Icons artist"
	!include <material/common>
	!include <material/artist>
	
	<<$ma_artist>>
	
	
snippet sprite_material_assistant "Google Material Icons assistant"
	!include <material/common>
	!include <material/assistant>
	
	<<$ma_assistant>>
	
	
snippet sprite_material_asterisk "Google Material Icons asterisk"
	!include <material/common>
	!include <material/asterisk>
	
	<<$ma_asterisk>>
	
	
snippet sprite_material_atlassian "Google Material Icons atlassian"
	!include <material/common>
	!include <material/atlassian>
	
	<<$ma_atlassian>>
	
	
snippet sprite_material_atom "Google Material Icons atom"
	!include <material/common>
	!include <material/atom>
	
	<<$ma_atom>>
	
	
snippet sprite_material_at "Google Material Icons at"
	!include <material/common>
	!include <material/at>
	
	<<$ma_at>>
	
	
snippet sprite_material_attachment "Google Material Icons attachment"
	!include <material/common>
	!include <material/attachment>
	
	<<$ma_attachment>>
	
	
snippet sprite_material_audiobook "Google Material Icons audiobook"
	!include <material/common>
	!include <material/audiobook>
	
	<<$ma_audiobook>>
	
	
snippet sprite_material_auto_fix "Google Material Icons auto_fix"
	!include <material/common>
	!include <material/auto_fix>
	
	<<$ma_auto_fix>>
	
	
snippet sprite_material_autorenew "Google Material Icons autorenew"
	!include <material/common>
	!include <material/autorenew>
	
	<<$ma_autorenew>>
	
	
snippet sprite_material_auto_upload "Google Material Icons auto_upload"
	!include <material/common>
	!include <material/auto_upload>
	
	<<$ma_auto_upload>>
	
	
snippet sprite_material_av_timer "Google Material Icons av_timer"
	!include <material/common>
	!include <material/av_timer>
	
	<<$ma_av_timer>>
	
	
snippet sprite_material_azure "Google Material Icons azure"
	!include <material/common>
	!include <material/azure>
	
	<<$ma_azure>>
	
	
snippet sprite_material_baby_buggy "Google Material Icons baby_buggy"
	!include <material/common>
	!include <material/baby_buggy>
	
	<<$ma_baby_buggy>>
	
	
snippet sprite_material_baby "Google Material Icons baby"
	!include <material/common>
	!include <material/baby>
	
	<<$ma_baby>>
	
	
snippet sprite_material_backburger "Google Material Icons backburger"
	!include <material/common>
	!include <material/backburger>
	
	<<$ma_backburger>>
	
	
snippet sprite_material_backspace "Google Material Icons backspace"
	!include <material/common>
	!include <material/backspace>
	
	<<$ma_backspace>>
	
	
snippet sprite_material_backup_restore "Google Material Icons backup_restore"
	!include <material/common>
	!include <material/backup_restore>
	
	<<$ma_backup_restore>>
	
	
snippet sprite_material_bandcamp "Google Material Icons bandcamp"
	!include <material/common>
	!include <material/bandcamp>
	
	<<$ma_bandcamp>>
	
	
snippet sprite_material_bank "Google Material Icons bank"
	!include <material/common>
	!include <material/bank>
	
	<<$ma_bank>>
	
	
snippet sprite_material_barcode "Google Material Icons barcode"
	!include <material/common>
	!include <material/barcode>
	
	<<$ma_barcode>>
	
	
snippet sprite_material_barcode_scan "Google Material Icons barcode_scan"
	!include <material/common>
	!include <material/barcode_scan>
	
	<<$ma_barcode_scan>>
	
	
snippet sprite_material_barley "Google Material Icons barley"
	!include <material/common>
	!include <material/barley>
	
	<<$ma_barley>>
	
	
snippet sprite_material_barrel "Google Material Icons barrel"
	!include <material/common>
	!include <material/barrel>
	
	<<$ma_barrel>>
	
	
snippet sprite_material_basecamp "Google Material Icons basecamp"
	!include <material/common>
	!include <material/basecamp>
	
	<<$ma_basecamp>>
	
	
snippet sprite_material_basketball "Google Material Icons basketball"
	!include <material/common>
	!include <material/basketball>
	
	<<$ma_basketball>>
	
	
snippet sprite_material_basket_fill "Google Material Icons basket_fill"
	!include <material/common>
	!include <material/basket_fill>
	
	<<$ma_basket_fill>>
	
	
snippet sprite_material_basket "Google Material Icons basket"
	!include <material/common>
	!include <material/basket>
	
	<<$ma_basket>>
	
	
snippet sprite_material_basket_unfill "Google Material Icons basket_unfill"
	!include <material/common>
	!include <material/basket_unfill>
	
	<<$ma_basket_unfill>>
	
	
snippet sprite_material_battery_10 "Google Material Icons battery_10"
	!include <material/common>
	!include <material/battery_10>
	
	<<$ma_battery_10>>
	
	
snippet sprite_material_battery_20 "Google Material Icons battery_20"
	!include <material/common>
	!include <material/battery_20>
	
	<<$ma_battery_20>>
	
	
snippet sprite_material_battery_30 "Google Material Icons battery_30"
	!include <material/common>
	!include <material/battery_30>
	
	<<$ma_battery_30>>
	
	
snippet sprite_material_battery_40 "Google Material Icons battery_40"
	!include <material/common>
	!include <material/battery_40>
	
	<<$ma_battery_40>>
	
	
snippet sprite_material_battery_50 "Google Material Icons battery_50"
	!include <material/common>
	!include <material/battery_50>
	
	<<$ma_battery_50>>
	
	
snippet sprite_material_battery_60 "Google Material Icons battery_60"
	!include <material/common>
	!include <material/battery_60>
	
	<<$ma_battery_60>>
	
	
snippet sprite_material_battery_70 "Google Material Icons battery_70"
	!include <material/common>
	!include <material/battery_70>
	
	<<$ma_battery_70>>
	
	
snippet sprite_material_battery_80 "Google Material Icons battery_80"
	!include <material/common>
	!include <material/battery_80>
	
	<<$ma_battery_80>>
	
	
snippet sprite_material_battery_90 "Google Material Icons battery_90"
	!include <material/common>
	!include <material/battery_90>
	
	<<$ma_battery_90>>
	
	
snippet sprite_material_battery_alert "Google Material Icons battery_alert"
	!include <material/common>
	!include <material/battery_alert>
	
	<<$ma_battery_alert>>
	
	
snippet sprite_material_battery_charging_100 "Google Material Icons battery_charging_100"
	!include <material/common>
	!include <material/battery_charging_100>
	
	<<$ma_battery_charging_100>>
	
	
snippet sprite_material_battery_charging_20 "Google Material Icons battery_charging_20"
	!include <material/common>
	!include <material/battery_charging_20>
	
	<<$ma_battery_charging_20>>
	
	
snippet sprite_material_battery_charging_30 "Google Material Icons battery_charging_30"
	!include <material/common>
	!include <material/battery_charging_30>
	
	<<$ma_battery_charging_30>>
	
	
snippet sprite_material_battery_charging_40 "Google Material Icons battery_charging_40"
	!include <material/common>
	!include <material/battery_charging_40>
	
	<<$ma_battery_charging_40>>
	
	
snippet sprite_material_battery_charging_60 "Google Material Icons battery_charging_60"
	!include <material/common>
	!include <material/battery_charging_60>
	
	<<$ma_battery_charging_60>>
	
	
snippet sprite_material_battery_charging_80 "Google Material Icons battery_charging_80"
	!include <material/common>
	!include <material/battery_charging_80>
	
	<<$ma_battery_charging_80>>
	
	
snippet sprite_material_battery_charging_90 "Google Material Icons battery_charging_90"
	!include <material/common>
	!include <material/battery_charging_90>
	
	<<$ma_battery_charging_90>>
	
	
snippet sprite_material_battery_charging "Google Material Icons battery_charging"
	!include <material/common>
	!include <material/battery_charging>
	
	<<$ma_battery_charging>>
	
	
snippet sprite_material_battery_charging_wireless_10 "Google Material Icons battery_charging_wireless_10"
	!include <material/common>
	!include <material/battery_charging_wireless_10>
	
	<<$ma_battery_charging_wireless_10>>
	
	
snippet sprite_material_battery_charging_wireless_20 "Google Material Icons battery_charging_wireless_20"
	!include <material/common>
	!include <material/battery_charging_wireless_20>
	
	<<$ma_battery_charging_wireless_20>>
	
	
snippet sprite_material_battery_charging_wireless_30 "Google Material Icons battery_charging_wireless_30"
	!include <material/common>
	!include <material/battery_charging_wireless_30>
	
	<<$ma_battery_charging_wireless_30>>
	
	
snippet sprite_material_battery_charging_wireless_40 "Google Material Icons battery_charging_wireless_40"
	!include <material/common>
	!include <material/battery_charging_wireless_40>
	
	<<$ma_battery_charging_wireless_40>>
	
	
snippet sprite_material_battery_charging_wireless_50 "Google Material Icons battery_charging_wireless_50"
	!include <material/common>
	!include <material/battery_charging_wireless_50>
	
	<<$ma_battery_charging_wireless_50>>
	
	
snippet sprite_material_battery_charging_wireless_60 "Google Material Icons battery_charging_wireless_60"
	!include <material/common>
	!include <material/battery_charging_wireless_60>
	
	<<$ma_battery_charging_wireless_60>>
	
	
snippet sprite_material_battery_charging_wireless_70 "Google Material Icons battery_charging_wireless_70"
	!include <material/common>
	!include <material/battery_charging_wireless_70>
	
	<<$ma_battery_charging_wireless_70>>
	
	
snippet sprite_material_battery_charging_wireless_80 "Google Material Icons battery_charging_wireless_80"
	!include <material/common>
	!include <material/battery_charging_wireless_80>
	
	<<$ma_battery_charging_wireless_80>>
	
	
snippet sprite_material_battery_charging_wireless_90 "Google Material Icons battery_charging_wireless_90"
	!include <material/common>
	!include <material/battery_charging_wireless_90>
	
	<<$ma_battery_charging_wireless_90>>
	
	
snippet sprite_material_battery_charging_wireless_alert "Google Material Icons battery_charging_wireless_alert"
	!include <material/common>
	!include <material/battery_charging_wireless_alert>
	
	<<$ma_battery_charging_wireless_alert>>
	
	
snippet sprite_material_battery_charging_wireless_outline "Google Material Icons battery_charging_wireless_outline"
	!include <material/common>
	!include <material/battery_charging_wireless_outline>
	
	<<$ma_battery_charging_wireless_outline>>
	
	
snippet sprite_material_battery_charging_wireless "Google Material Icons battery_charging_wireless"
	!include <material/common>
	!include <material/battery_charging_wireless>
	
	<<$ma_battery_charging_wireless>>
	
	
snippet sprite_material_battery_minus "Google Material Icons battery_minus"
	!include <material/common>
	!include <material/battery_minus>
	
	<<$ma_battery_minus>>
	
	
snippet sprite_material_battery_negative "Google Material Icons battery_negative"
	!include <material/common>
	!include <material/battery_negative>
	
	<<$ma_battery_negative>>
	
	
snippet sprite_material_battery_outline "Google Material Icons battery_outline"
	!include <material/common>
	!include <material/battery_outline>
	
	<<$ma_battery_outline>>
	
	
snippet sprite_material_battery_plus "Google Material Icons battery_plus"
	!include <material/common>
	!include <material/battery_plus>
	
	<<$ma_battery_plus>>
	
	
snippet sprite_material_battery_positive "Google Material Icons battery_positive"
	!include <material/common>
	!include <material/battery_positive>
	
	<<$ma_battery_positive>>
	
	
snippet sprite_material_battery "Google Material Icons battery"
	!include <material/common>
	!include <material/battery>
	
	<<$ma_battery>>
	
	
snippet sprite_material_battery_standard "Google Material Icons battery_standard"
	!include <material/common>
	!include <material/battery_standard>
	
	<<$ma_battery_standard>>
	
	
snippet sprite_material_battery_unknown "Google Material Icons battery_unknown"
	!include <material/common>
	!include <material/battery_unknown>
	
	<<$ma_battery_unknown>>
	
	
snippet sprite_material_beach "Google Material Icons beach"
	!include <material/common>
	!include <material/beach>
	
	<<$ma_beach>>
	
	
snippet sprite_material_beaker "Google Material Icons beaker"
	!include <material/common>
	!include <material/beaker>
	
	<<$ma_beaker>>
	
	
snippet sprite_material_beam "Google Material Icons beam"
	!include <material/common>
	!include <material/beam>
	
	<<$ma_beam>>
	
	
snippet sprite_material_beats "Google Material Icons beats"
	!include <material/common>
	!include <material/beats>
	
	<<$ma_beats>>
	
	
snippet sprite_material_beer "Google Material Icons beer"
	!include <material/common>
	!include <material/beer>
	
	<<$ma_beer>>
	
	
snippet sprite_material_behance "Google Material Icons behance"
	!include <material/common>
	!include <material/behance>
	
	<<$ma_behance>>
	
	
snippet sprite_material_bell_off "Google Material Icons bell_off"
	!include <material/common>
	!include <material/bell_off>
	
	<<$ma_bell_off>>
	
	
snippet sprite_material_bell_outline "Google Material Icons bell_outline"
	!include <material/common>
	!include <material/bell_outline>
	
	<<$ma_bell_outline>>
	
	
snippet sprite_material_bell_plus "Google Material Icons bell_plus"
	!include <material/common>
	!include <material/bell_plus>
	
	<<$ma_bell_plus>>
	
	
snippet sprite_material_bell "Google Material Icons bell"
	!include <material/common>
	!include <material/bell>
	
	<<$ma_bell>>
	
	
snippet sprite_material_bell_ring_outline "Google Material Icons bell_ring_outline"
	!include <material/common>
	!include <material/bell_ring_outline>
	
	<<$ma_bell_ring_outline>>
	
	
snippet sprite_material_bell_ring "Google Material Icons bell_ring"
	!include <material/common>
	!include <material/bell_ring>
	
	<<$ma_bell_ring>>
	
	
snippet sprite_material_bell_sleep "Google Material Icons bell_sleep"
	!include <material/common>
	!include <material/bell_sleep>
	
	<<$ma_bell_sleep>>
	
	
snippet sprite_material_beta "Google Material Icons beta"
	!include <material/common>
	!include <material/beta>
	
	<<$ma_beta>>
	
	
snippet sprite_material_bible "Google Material Icons bible"
	!include <material/common>
	!include <material/bible>
	
	<<$ma_bible>>
	
	
snippet sprite_material_bike "Google Material Icons bike"
	!include <material/common>
	!include <material/bike>
	
	<<$ma_bike>>
	
	
snippet sprite_material_bing "Google Material Icons bing"
	!include <material/common>
	!include <material/bing>
	
	<<$ma_bing>>
	
	
snippet sprite_material_binoculars "Google Material Icons binoculars"
	!include <material/common>
	!include <material/binoculars>
	
	<<$ma_binoculars>>
	
	
snippet sprite_material_bio "Google Material Icons bio"
	!include <material/common>
	!include <material/bio>
	
	<<$ma_bio>>
	
	
snippet sprite_material_bitbucket "Google Material Icons bitbucket"
	!include <material/common>
	!include <material/bitbucket>
	
	<<$ma_bitbucket>>
	
	
snippet sprite_material_blackberry "Google Material Icons blackberry"
	!include <material/common>
	!include <material/blackberry>
	
	<<$ma_blackberry>>
	
	
snippet sprite_material_black_mesa "Google Material Icons black_mesa"
	!include <material/common>
	!include <material/black_mesa>
	
	<<$ma_black_mesa>>
	
	
snippet sprite_material_blender "Google Material Icons blender"
	!include <material/common>
	!include <material/blender>
	
	<<$ma_blender>>
	
	
snippet sprite_material_blinds "Google Material Icons blinds"
	!include <material/common>
	!include <material/blinds>
	
	<<$ma_blinds>>
	
	
snippet sprite_material_block_helper "Google Material Icons block_helper"
	!include <material/common>
	!include <material/block_helper>
	
	<<$ma_block_helper>>
	
	
snippet sprite_material_blogger "Google Material Icons blogger"
	!include <material/common>
	!include <material/blogger>
	
	<<$ma_blogger>>
	
	
snippet sprite_material_bluetooth_audio "Google Material Icons bluetooth_audio"
	!include <material/common>
	!include <material/bluetooth_audio>
	
	<<$ma_bluetooth_audio>>
	
	
snippet sprite_material_bluetooth_connect "Google Material Icons bluetooth_connect"
	!include <material/common>
	!include <material/bluetooth_connect>
	
	<<$ma_bluetooth_connect>>
	
	
snippet sprite_material_bluetooth_off "Google Material Icons bluetooth_off"
	!include <material/common>
	!include <material/bluetooth_off>
	
	<<$ma_bluetooth_off>>
	
	
snippet sprite_material_bluetooth "Google Material Icons bluetooth"
	!include <material/common>
	!include <material/bluetooth>
	
	<<$ma_bluetooth>>
	
	
snippet sprite_material_bluetooth_settings "Google Material Icons bluetooth_settings"
	!include <material/common>
	!include <material/bluetooth_settings>
	
	<<$ma_bluetooth_settings>>
	
	
snippet sprite_material_bluetooth_transfer "Google Material Icons bluetooth_transfer"
	!include <material/common>
	!include <material/bluetooth_transfer>
	
	<<$ma_bluetooth_transfer>>
	
	
snippet sprite_material_blur_linear "Google Material Icons blur_linear"
	!include <material/common>
	!include <material/blur_linear>
	
	<<$ma_blur_linear>>
	
	
snippet sprite_material_blur_off "Google Material Icons blur_off"
	!include <material/common>
	!include <material/blur_off>
	
	<<$ma_blur_off>>
	
	
snippet sprite_material_blur "Google Material Icons blur"
	!include <material/common>
	!include <material/blur>
	
	<<$ma_blur>>
	
	
snippet sprite_material_blur_radial "Google Material Icons blur_radial"
	!include <material/common>
	!include <material/blur_radial>
	
	<<$ma_blur_radial>>
	
	
snippet sprite_material_bomb_off "Google Material Icons bomb_off"
	!include <material/common>
	!include <material/bomb_off>
	
	<<$ma_bomb_off>>
	
	
snippet sprite_material_bomb "Google Material Icons bomb"
	!include <material/common>
	!include <material/bomb>
	
	<<$ma_bomb>>
	
	
snippet sprite_material_bone "Google Material Icons bone"
	!include <material/common>
	!include <material/bone>
	
	<<$ma_bone>>
	
	
snippet sprite_material_bookmark_check "Google Material Icons bookmark_check"
	!include <material/common>
	!include <material/bookmark_check>
	
	<<$ma_bookmark_check>>
	
	
snippet sprite_material_bookmark_music "Google Material Icons bookmark_music"
	!include <material/common>
	!include <material/bookmark_music>
	
	<<$ma_bookmark_music>>
	
	
snippet sprite_material_bookmark_outline "Google Material Icons bookmark_outline"
	!include <material/common>
	!include <material/bookmark_outline>
	
	<<$ma_bookmark_outline>>
	
	
snippet sprite_material_bookmark_plus_outline "Google Material Icons bookmark_plus_outline"
	!include <material/common>
	!include <material/bookmark_plus_outline>
	
	<<$ma_bookmark_plus_outline>>
	
	
snippet sprite_material_bookmark_plus "Google Material Icons bookmark_plus"
	!include <material/common>
	!include <material/bookmark_plus>
	
	<<$ma_bookmark_plus>>
	
	
snippet sprite_material_bookmark "Google Material Icons bookmark"
	!include <material/common>
	!include <material/bookmark>
	
	<<$ma_bookmark>>
	
	
snippet sprite_material_bookmark_remove "Google Material Icons bookmark_remove"
	!include <material/common>
	!include <material/bookmark_remove>
	
	<<$ma_bookmark_remove>>
	
	
snippet sprite_material_book_minus "Google Material Icons book_minus"
	!include <material/common>
	!include <material/book_minus>
	
	<<$ma_book_minus>>
	
	
snippet sprite_material_book_multiple "Google Material Icons book_multiple"
	!include <material/common>
	!include <material/book_multiple>
	
	<<$ma_book_multiple>>
	
	
snippet sprite_material_book_multiple_variant "Google Material Icons book_multiple_variant"
	!include <material/common>
	!include <material/book_multiple_variant>
	
	<<$ma_book_multiple_variant>>
	
	
snippet sprite_material_book_open_page_variant "Google Material Icons book_open_page_variant"
	!include <material/common>
	!include <material/book_open_page_variant>
	
	<<$ma_book_open_page_variant>>
	
	
snippet sprite_material_book_open "Google Material Icons book_open"
	!include <material/common>
	!include <material/book_open>
	
	<<$ma_book_open>>
	
	
snippet sprite_material_book_open_variant "Google Material Icons book_open_variant"
	!include <material/common>
	!include <material/book_open_variant>
	
	<<$ma_book_open_variant>>
	
	
snippet sprite_material_book_plus "Google Material Icons book_plus"
	!include <material/common>
	!include <material/book_plus>
	
	<<$ma_book_plus>>
	
	
snippet sprite_material_book "Google Material Icons book"
	!include <material/common>
	!include <material/book>
	
	<<$ma_book>>
	
	
snippet sprite_material_book_secure "Google Material Icons book_secure"
	!include <material/common>
	!include <material/book_secure>
	
	<<$ma_book_secure>>
	
	
snippet sprite_material_book_unsecure "Google Material Icons book_unsecure"
	!include <material/common>
	!include <material/book_unsecure>
	
	<<$ma_book_unsecure>>
	
	
snippet sprite_material_book_variant "Google Material Icons book_variant"
	!include <material/common>
	!include <material/book_variant>
	
	<<$ma_book_variant>>
	
	
snippet sprite_material_boombox "Google Material Icons boombox"
	!include <material/common>
	!include <material/boombox>
	
	<<$ma_boombox>>
	
	
snippet sprite_material_bootstrap "Google Material Icons bootstrap"
	!include <material/common>
	!include <material/bootstrap>
	
	<<$ma_bootstrap>>
	
	
snippet sprite_material_border_all "Google Material Icons border_all"
	!include <material/common>
	!include <material/border_all>
	
	<<$ma_border_all>>
	
	
snippet sprite_material_border_bottom "Google Material Icons border_bottom"
	!include <material/common>
	!include <material/border_bottom>
	
	<<$ma_border_bottom>>
	
	
snippet sprite_material_border_color "Google Material Icons border_color"
	!include <material/common>
	!include <material/border_color>
	
	<<$ma_border_color>>
	
	
snippet sprite_material_border_horizontal "Google Material Icons border_horizontal"
	!include <material/common>
	!include <material/border_horizontal>
	
	<<$ma_border_horizontal>>
	
	
snippet sprite_material_border_inside "Google Material Icons border_inside"
	!include <material/common>
	!include <material/border_inside>
	
	<<$ma_border_inside>>
	
	
snippet sprite_material_border_left "Google Material Icons border_left"
	!include <material/common>
	!include <material/border_left>
	
	<<$ma_border_left>>
	
	
snippet sprite_material_border_none "Google Material Icons border_none"
	!include <material/common>
	!include <material/border_none>
	
	<<$ma_border_none>>
	
	
snippet sprite_material_border_outside "Google Material Icons border_outside"
	!include <material/common>
	!include <material/border_outside>
	
	<<$ma_border_outside>>
	
	
snippet sprite_material_border_right "Google Material Icons border_right"
	!include <material/common>
	!include <material/border_right>
	
	<<$ma_border_right>>
	
	
snippet sprite_material_border_style "Google Material Icons border_style"
	!include <material/common>
	!include <material/border_style>
	
	<<$ma_border_style>>
	
	
snippet sprite_material_border_top "Google Material Icons border_top"
	!include <material/common>
	!include <material/border_top>
	
	<<$ma_border_top>>
	
	
snippet sprite_material_border_vertical "Google Material Icons border_vertical"
	!include <material/common>
	!include <material/border_vertical>
	
	<<$ma_border_vertical>>
	
	
snippet sprite_material_bowling "Google Material Icons bowling"
	!include <material/common>
	!include <material/bowling>
	
	<<$ma_bowling>>
	
	
snippet sprite_material_bowl "Google Material Icons bowl"
	!include <material/common>
	!include <material/bowl>
	
	<<$ma_bowl>>
	
	
snippet sprite_material_bow_tie "Google Material Icons bow_tie"
	!include <material/common>
	!include <material/bow_tie>
	
	<<$ma_bow_tie>>
	
	
snippet sprite_material_box_cutter "Google Material Icons box_cutter"
	!include <material/common>
	!include <material/box_cutter>
	
	<<$ma_box_cutter>>
	
	
snippet sprite_material_box_download "Google Material Icons box_download"
	!include <material/common>
	!include <material/box_download>
	
	<<$ma_box_download>>
	
	
snippet sprite_material_box "Google Material Icons box"
	!include <material/common>
	!include <material/box>
	
	<<$ma_box>>
	
	
snippet sprite_material_box_shadow "Google Material Icons box_shadow"
	!include <material/common>
	!include <material/box_shadow>
	
	<<$ma_box_shadow>>
	
	
snippet sprite_material_box_upload "Google Material Icons box_upload"
	!include <material/common>
	!include <material/box_upload>
	
	<<$ma_box_upload>>
	
	
snippet sprite_material_bridge "Google Material Icons bridge"
	!include <material/common>
	!include <material/bridge>
	
	<<$ma_bridge>>
	
	
snippet sprite_material_briefcase_check "Google Material Icons briefcase_check"
	!include <material/common>
	!include <material/briefcase_check>
	
	<<$ma_briefcase_check>>
	
	
snippet sprite_material_briefcase_download "Google Material Icons briefcase_download"
	!include <material/common>
	!include <material/briefcase_download>
	
	<<$ma_briefcase_download>>
	
	
snippet sprite_material_briefcase_outline "Google Material Icons briefcase_outline"
	!include <material/common>
	!include <material/briefcase_outline>
	
	<<$ma_briefcase_outline>>
	
	
snippet sprite_material_briefcase "Google Material Icons briefcase"
	!include <material/common>
	!include <material/briefcase>
	
	<<$ma_briefcase>>
	
	
snippet sprite_material_briefcase_upload "Google Material Icons briefcase_upload"
	!include <material/common>
	!include <material/briefcase_upload>
	
	<<$ma_briefcase_upload>>
	
	
snippet sprite_material_brightness_1 "Google Material Icons brightness_1"
	!include <material/common>
	!include <material/brightness_1>
	
	<<$ma_brightness_1>>
	
	
snippet sprite_material_brightness_2 "Google Material Icons brightness_2"
	!include <material/common>
	!include <material/brightness_2>
	
	<<$ma_brightness_2>>
	
	
snippet sprite_material_brightness_3 "Google Material Icons brightness_3"
	!include <material/common>
	!include <material/brightness_3>
	
	<<$ma_brightness_3>>
	
	
snippet sprite_material_brightness_4 "Google Material Icons brightness_4"
	!include <material/common>
	!include <material/brightness_4>
	
	<<$ma_brightness_4>>
	
	
snippet sprite_material_brightness_5 "Google Material Icons brightness_5"
	!include <material/common>
	!include <material/brightness_5>
	
	<<$ma_brightness_5>>
	
	
snippet sprite_material_brightness_6 "Google Material Icons brightness_6"
	!include <material/common>
	!include <material/brightness_6>
	
	<<$ma_brightness_6>>
	
	
snippet sprite_material_brightness_7 "Google Material Icons brightness_7"
	!include <material/common>
	!include <material/brightness_7>
	
	<<$ma_brightness_7>>
	
	
snippet sprite_material_brightness_auto "Google Material Icons brightness_auto"
	!include <material/common>
	!include <material/brightness_auto>
	
	<<$ma_brightness_auto>>
	
	
snippet sprite_material_brightness "Google Material Icons brightness"
	!include <material/common>
	!include <material/brightness>
	
	<<$ma_brightness>>
	
	
snippet sprite_material_broom "Google Material Icons broom"
	!include <material/common>
	!include <material/broom>
	
	<<$ma_broom>>
	
	
snippet sprite_material_brush "Google Material Icons brush"
	!include <material/common>
	!include <material/brush>
	
	<<$ma_brush>>
	
	
snippet sprite_material_buffer "Google Material Icons buffer"
	!include <material/common>
	!include <material/buffer>
	
	<<$ma_buffer>>
	
	
snippet sprite_material_bug "Google Material Icons bug"
	!include <material/common>
	!include <material/bug>
	
	<<$ma_bug>>
	
	
snippet sprite_material_bulletin_board "Google Material Icons bulletin_board"
	!include <material/common>
	!include <material/bulletin_board>
	
	<<$ma_bulletin_board>>
	
	
snippet sprite_material_bullhorn "Google Material Icons bullhorn"
	!include <material/common>
	!include <material/bullhorn>
	
	<<$ma_bullhorn>>
	
	
snippet sprite_material_bullseye "Google Material Icons bullseye"
	!include <material/common>
	!include <material/bullseye>
	
	<<$ma_bullseye>>
	
	
snippet sprite_material_burst_mode "Google Material Icons burst_mode"
	!include <material/common>
	!include <material/burst_mode>
	
	<<$ma_burst_mode>>
	
	
snippet sprite_material_bus_articulated_end "Google Material Icons bus_articulated_end"
	!include <material/common>
	!include <material/bus_articulated_end>
	
	<<$ma_bus_articulated_end>>
	
	
snippet sprite_material_bus_articulated_front "Google Material Icons bus_articulated_front"
	!include <material/common>
	!include <material/bus_articulated_front>
	
	<<$ma_bus_articulated_front>>
	
	
snippet sprite_material_bus_double_decker "Google Material Icons bus_double_decker"
	!include <material/common>
	!include <material/bus_double_decker>
	
	<<$ma_bus_double_decker>>
	
	
snippet sprite_material_bus "Google Material Icons bus"
	!include <material/common>
	!include <material/bus>
	
	<<$ma_bus>>
	
	
snippet sprite_material_bus_school "Google Material Icons bus_school"
	!include <material/common>
	!include <material/bus_school>
	
	<<$ma_bus_school>>
	
	
snippet sprite_material_bus_side "Google Material Icons bus_side"
	!include <material/common>
	!include <material/bus_side>
	
	<<$ma_bus_side>>
	
	
snippet sprite_material_cached "Google Material Icons cached"
	!include <material/common>
	!include <material/cached>
	
	<<$ma_cached>>
	
	
snippet sprite_material_cake_layered "Google Material Icons cake_layered"
	!include <material/common>
	!include <material/cake_layered>
	
	<<$ma_cake_layered>>
	
	
snippet sprite_material_cake "Google Material Icons cake"
	!include <material/common>
	!include <material/cake>
	
	<<$ma_cake>>
	
	
snippet sprite_material_cake_variant "Google Material Icons cake_variant"
	!include <material/common>
	!include <material/cake_variant>
	
	<<$ma_cake_variant>>
	
	
snippet sprite_material_calculator_off "Google Material Icons calculator_off"
	!include <material/common>
	!include <material/calculator_off>
	
	<<$ma_calculator_off>>
	
	
snippet sprite_material_calculator "Google Material Icons calculator"
	!include <material/common>
	!include <material/calculator>
	
	<<$ma_calculator>>
	
	
snippet sprite_material_calendar_blank "Google Material Icons calendar_blank"
	!include <material/common>
	!include <material/calendar_blank>
	
	<<$ma_calendar_blank>>
	
	
snippet sprite_material_calendar_check "Google Material Icons calendar_check"
	!include <material/common>
	!include <material/calendar_check>
	
	<<$ma_calendar_check>>
	
	
snippet sprite_material_calendar_clock "Google Material Icons calendar_clock"
	!include <material/common>
	!include <material/calendar_clock>
	
	<<$ma_calendar_clock>>
	
	
snippet sprite_material_calendar_multiple_check "Google Material Icons calendar_multiple_check"
	!include <material/common>
	!include <material/calendar_multiple_check>
	
	<<$ma_calendar_multiple_check>>
	
	
snippet sprite_material_calendar_multiple "Google Material Icons calendar_multiple"
	!include <material/common>
	!include <material/calendar_multiple>
	
	<<$ma_calendar_multiple>>
	
	
snippet sprite_material_calendar_plus "Google Material Icons calendar_plus"
	!include <material/common>
	!include <material/calendar_plus>
	
	<<$ma_calendar_plus>>
	
	
snippet sprite_material_calendar "Google Material Icons calendar"
	!include <material/common>
	!include <material/calendar>
	
	<<$ma_calendar>>
	
	
snippet sprite_material_calendar_question "Google Material Icons calendar_question"
	!include <material/common>
	!include <material/calendar_question>
	
	<<$ma_calendar_question>>
	
	
snippet sprite_material_calendar_range "Google Material Icons calendar_range"
	!include <material/common>
	!include <material/calendar_range>
	
	<<$ma_calendar_range>>
	
	
snippet sprite_material_calendar_remove "Google Material Icons calendar_remove"
	!include <material/common>
	!include <material/calendar_remove>
	
	<<$ma_calendar_remove>>
	
	
snippet sprite_material_calendar_select "Google Material Icons calendar_select"
	!include <material/common>
	!include <material/calendar_select>
	
	<<$ma_calendar_select>>
	
	
snippet sprite_material_calendar_text "Google Material Icons calendar_text"
	!include <material/common>
	!include <material/calendar_text>
	
	<<$ma_calendar_text>>
	
	
snippet sprite_material_calendar_today "Google Material Icons calendar_today"
	!include <material/common>
	!include <material/calendar_today>
	
	<<$ma_calendar_today>>
	
	
snippet sprite_material_call_made "Google Material Icons call_made"
	!include <material/common>
	!include <material/call_made>
	
	<<$ma_call_made>>
	
	
snippet sprite_material_call_merge "Google Material Icons call_merge"
	!include <material/common>
	!include <material/call_merge>
	
	<<$ma_call_merge>>
	
	
snippet sprite_material_call_missed "Google Material Icons call_missed"
	!include <material/common>
	!include <material/call_missed>
	
	<<$ma_call_missed>>
	
	
snippet sprite_material_call_received "Google Material Icons call_received"
	!include <material/common>
	!include <material/call_received>
	
	<<$ma_call_received>>
	
	
snippet sprite_material_call_split "Google Material Icons call_split"
	!include <material/common>
	!include <material/call_split>
	
	<<$ma_call_split>>
	
	
snippet sprite_material_camcorder_box_off "Google Material Icons camcorder_box_off"
	!include <material/common>
	!include <material/camcorder_box_off>
	
	<<$ma_camcorder_box_off>>
	
	
snippet sprite_material_camcorder_box "Google Material Icons camcorder_box"
	!include <material/common>
	!include <material/camcorder_box>
	
	<<$ma_camcorder_box>>
	
	
snippet sprite_material_camcorder_off "Google Material Icons camcorder_off"
	!include <material/common>
	!include <material/camcorder_off>
	
	<<$ma_camcorder_off>>
	
	
snippet sprite_material_camcorder "Google Material Icons camcorder"
	!include <material/common>
	!include <material/camcorder>
	
	<<$ma_camcorder>>
	
	
snippet sprite_material_camera_burst "Google Material Icons camera_burst"
	!include <material/common>
	!include <material/camera_burst>
	
	<<$ma_camera_burst>>
	
	
snippet sprite_material_camera_enhance "Google Material Icons camera_enhance"
	!include <material/common>
	!include <material/camera_enhance>
	
	<<$ma_camera_enhance>>
	
	
snippet sprite_material_camera_front "Google Material Icons camera_front"
	!include <material/common>
	!include <material/camera_front>
	
	<<$ma_camera_front>>
	
	
snippet sprite_material_camera_front_variant "Google Material Icons camera_front_variant"
	!include <material/common>
	!include <material/camera_front_variant>
	
	<<$ma_camera_front_variant>>
	
	
snippet sprite_material_camera_gopro "Google Material Icons camera_gopro"
	!include <material/common>
	!include <material/camera_gopro>
	
	<<$ma_camera_gopro>>
	
	
snippet sprite_material_camera_iris "Google Material Icons camera_iris"
	!include <material/common>
	!include <material/camera_iris>
	
	<<$ma_camera_iris>>
	
	
snippet sprite_material_camera_metering_center "Google Material Icons camera_metering_center"
	!include <material/common>
	!include <material/camera_metering_center>
	
	<<$ma_camera_metering_center>>
	
	
snippet sprite_material_camera_metering_matrix "Google Material Icons camera_metering_matrix"
	!include <material/common>
	!include <material/camera_metering_matrix>
	
	<<$ma_camera_metering_matrix>>
	
	
snippet sprite_material_camera_metering_partial "Google Material Icons camera_metering_partial"
	!include <material/common>
	!include <material/camera_metering_partial>
	
	<<$ma_camera_metering_partial>>
	
	
snippet sprite_material_camera_metering_spot "Google Material Icons camera_metering_spot"
	!include <material/common>
	!include <material/camera_metering_spot>
	
	<<$ma_camera_metering_spot>>
	
	
snippet sprite_material_camera_off "Google Material Icons camera_off"
	!include <material/common>
	!include <material/camera_off>
	
	<<$ma_camera_off>>
	
	
snippet sprite_material_camera_party_mode "Google Material Icons camera_party_mode"
	!include <material/common>
	!include <material/camera_party_mode>
	
	<<$ma_camera_party_mode>>
	
	
snippet sprite_material_camera "Google Material Icons camera"
	!include <material/common>
	!include <material/camera>
	
	<<$ma_camera>>
	
	
snippet sprite_material_camera_rear "Google Material Icons camera_rear"
	!include <material/common>
	!include <material/camera_rear>
	
	<<$ma_camera_rear>>
	
	
snippet sprite_material_camera_rear_variant "Google Material Icons camera_rear_variant"
	!include <material/common>
	!include <material/camera_rear_variant>
	
	<<$ma_camera_rear_variant>>
	
	
snippet sprite_material_camera_switch "Google Material Icons camera_switch"
	!include <material/common>
	!include <material/camera_switch>
	
	<<$ma_camera_switch>>
	
	
snippet sprite_material_camera_timer "Google Material Icons camera_timer"
	!include <material/common>
	!include <material/camera_timer>
	
	<<$ma_camera_timer>>
	
	
snippet sprite_material_cancel "Google Material Icons cancel"
	!include <material/common>
	!include <material/cancel>
	
	<<$ma_cancel>>
	
	
snippet sprite_material_candle "Google Material Icons candle"
	!include <material/common>
	!include <material/candle>
	
	<<$ma_candle>>
	
	
snippet sprite_material_candycane "Google Material Icons candycane"
	!include <material/common>
	!include <material/candycane>
	
	<<$ma_candycane>>
	
	
snippet sprite_material_cannabis "Google Material Icons cannabis"
	!include <material/common>
	!include <material/cannabis>
	
	<<$ma_cannabis>>
	
	
snippet sprite_material_caravan "Google Material Icons caravan"
	!include <material/common>
	!include <material/caravan>
	
	<<$ma_caravan>>
	
	
snippet sprite_material_car_battery "Google Material Icons car_battery"
	!include <material/common>
	!include <material/car_battery>
	
	<<$ma_car_battery>>
	
	
snippet sprite_material_car_connected "Google Material Icons car_connected"
	!include <material/common>
	!include <material/car_connected>
	
	<<$ma_car_connected>>
	
	
snippet sprite_material_car_convertable "Google Material Icons car_convertable"
	!include <material/common>
	!include <material/car_convertable>
	
	<<$ma_car_convertable>>
	
	
snippet sprite_material_cards_outline "Google Material Icons cards_outline"
	!include <material/common>
	!include <material/cards_outline>
	
	<<$ma_cards_outline>>
	
	
snippet sprite_material_cards_playing_outline "Google Material Icons cards_playing_outline"
	!include <material/common>
	!include <material/cards_playing_outline>
	
	<<$ma_cards_playing_outline>>
	
	
snippet sprite_material_cards "Google Material Icons cards"
	!include <material/common>
	!include <material/cards>
	
	<<$ma_cards>>
	
	
snippet sprite_material_cards_variant "Google Material Icons cards_variant"
	!include <material/common>
	!include <material/cards_variant>
	
	<<$ma_cards_variant>>
	
	
snippet sprite_material_car_estate "Google Material Icons car_estate"
	!include <material/common>
	!include <material/car_estate>
	
	<<$ma_car_estate>>
	
	
snippet sprite_material_car_hatchback "Google Material Icons car_hatchback"
	!include <material/common>
	!include <material/car_hatchback>
	
	<<$ma_car_hatchback>>
	
	
snippet sprite_material_car_pickup "Google Material Icons car_pickup"
	!include <material/common>
	!include <material/car_pickup>
	
	<<$ma_car_pickup>>
	
	
snippet sprite_material_car "Google Material Icons car"
	!include <material/common>
	!include <material/car>
	
	<<$ma_car>>
	
	
snippet sprite_material_carrot "Google Material Icons carrot"
	!include <material/common>
	!include <material/carrot>
	
	<<$ma_carrot>>
	
	
snippet sprite_material_car_side "Google Material Icons car_side"
	!include <material/common>
	!include <material/car_side>
	
	<<$ma_car_side>>
	
	
snippet sprite_material_car_sports "Google Material Icons car_sports"
	!include <material/common>
	!include <material/car_sports>
	
	<<$ma_car_sports>>
	
	
snippet sprite_material_cart_off "Google Material Icons cart_off"
	!include <material/common>
	!include <material/cart_off>
	
	<<$ma_cart_off>>
	
	
snippet sprite_material_cart_outline "Google Material Icons cart_outline"
	!include <material/common>
	!include <material/cart_outline>
	
	<<$ma_cart_outline>>
	
	
snippet sprite_material_cart_plus "Google Material Icons cart_plus"
	!include <material/common>
	!include <material/cart_plus>
	
	<<$ma_cart_plus>>
	
	
snippet sprite_material_cart "Google Material Icons cart"
	!include <material/common>
	!include <material/cart>
	
	<<$ma_cart>>
	
	
snippet sprite_material_car_wash "Google Material Icons car_wash"
	!include <material/common>
	!include <material/car_wash>
	
	<<$ma_car_wash>>
	
	
snippet sprite_material_cash_100 "Google Material Icons cash_100"
	!include <material/common>
	!include <material/cash_100>
	
	<<$ma_cash_100>>
	
	
snippet sprite_material_cash_multiple "Google Material Icons cash_multiple"
	!include <material/common>
	!include <material/cash_multiple>
	
	<<$ma_cash_multiple>>
	
	
snippet sprite_material_cash "Google Material Icons cash"
	!include <material/common>
	!include <material/cash>
	
	<<$ma_cash>>
	
	
snippet sprite_material_cash_usd "Google Material Icons cash_usd"
	!include <material/common>
	!include <material/cash_usd>
	
	<<$ma_cash_usd>>
	
	
snippet sprite_material_cast_connected "Google Material Icons cast_connected"
	!include <material/common>
	!include <material/cast_connected>
	
	<<$ma_cast_connected>>
	
	
snippet sprite_material_castle "Google Material Icons castle"
	!include <material/common>
	!include <material/castle>
	
	<<$ma_castle>>
	
	
snippet sprite_material_cast_off "Google Material Icons cast_off"
	!include <material/common>
	!include <material/cast_off>
	
	<<$ma_cast_off>>
	
	
snippet sprite_material_cast "Google Material Icons cast"
	!include <material/common>
	!include <material/cast>
	
	<<$ma_cast>>
	
	
snippet sprite_material_cat "Google Material Icons cat"
	!include <material/common>
	!include <material/cat>
	
	<<$ma_cat>>
	
	
snippet sprite_material_cctv "Google Material Icons cctv"
	!include <material/common>
	!include <material/cctv>
	
	<<$ma_cctv>>
	
	
snippet sprite_material_ceiling_light "Google Material Icons ceiling_light"
	!include <material/common>
	!include <material/ceiling_light>
	
	<<$ma_ceiling_light>>
	
	
snippet sprite_material_cellphone_android "Google Material Icons cellphone_android"
	!include <material/common>
	!include <material/cellphone_android>
	
	<<$ma_cellphone_android>>
	
	
snippet sprite_material_cellphone_basic "Google Material Icons cellphone_basic"
	!include <material/common>
	!include <material/cellphone_basic>
	
	<<$ma_cellphone_basic>>
	
	
snippet sprite_material_cellphone_dock "Google Material Icons cellphone_dock"
	!include <material/common>
	!include <material/cellphone_dock>
	
	<<$ma_cellphone_dock>>
	
	
snippet sprite_material_cellphone_iphone "Google Material Icons cellphone_iphone"
	!include <material/common>
	!include <material/cellphone_iphone>
	
	<<$ma_cellphone_iphone>>
	
	
snippet sprite_material_cellphone_link_off "Google Material Icons cellphone_link_off"
	!include <material/common>
	!include <material/cellphone_link_off>
	
	<<$ma_cellphone_link_off>>
	
	
snippet sprite_material_cellphone_link "Google Material Icons cellphone_link"
	!include <material/common>
	!include <material/cellphone_link>
	
	<<$ma_cellphone_link>>
	
	
snippet sprite_material_cellphone "Google Material Icons cellphone"
	!include <material/common>
	!include <material/cellphone>
	
	<<$ma_cellphone>>
	
	
snippet sprite_material_cellphone_settings "Google Material Icons cellphone_settings"
	!include <material/common>
	!include <material/cellphone_settings>
	
	<<$ma_cellphone_settings>>
	
	
snippet sprite_material_cellphone_wireless "Google Material Icons cellphone_wireless"
	!include <material/common>
	!include <material/cellphone_wireless>
	
	<<$ma_cellphone_wireless>>
	
	
snippet sprite_material_certificate "Google Material Icons certificate"
	!include <material/common>
	!include <material/certificate>
	
	<<$ma_certificate>>
	
	
snippet sprite_material_chair_school "Google Material Icons chair_school"
	!include <material/common>
	!include <material/chair_school>
	
	<<$ma_chair_school>>
	
	
snippet sprite_material_chart_arc "Google Material Icons chart_arc"
	!include <material/common>
	!include <material/chart_arc>
	
	<<$ma_chart_arc>>
	
	
snippet sprite_material_chart_areaspline "Google Material Icons chart_areaspline"
	!include <material/common>
	!include <material/chart_areaspline>
	
	<<$ma_chart_areaspline>>
	
	
snippet sprite_material_chart_bar "Google Material Icons chart_bar"
	!include <material/common>
	!include <material/chart_bar>
	
	<<$ma_chart_bar>>
	
	
snippet sprite_material_chart_bar_stacked "Google Material Icons chart_bar_stacked"
	!include <material/common>
	!include <material/chart_bar_stacked>
	
	<<$ma_chart_bar_stacked>>
	
	
snippet sprite_material_chart_bubble "Google Material Icons chart_bubble"
	!include <material/common>
	!include <material/chart_bubble>
	
	<<$ma_chart_bubble>>
	
	
snippet sprite_material_chart_donut "Google Material Icons chart_donut"
	!include <material/common>
	!include <material/chart_donut>
	
	<<$ma_chart_donut>>
	
	
snippet sprite_material_chart_donut_variant "Google Material Icons chart_donut_variant"
	!include <material/common>
	!include <material/chart_donut_variant>
	
	<<$ma_chart_donut_variant>>
	
	
snippet sprite_material_chart_gantt "Google Material Icons chart_gantt"
	!include <material/common>
	!include <material/chart_gantt>
	
	<<$ma_chart_gantt>>
	
	
snippet sprite_material_chart_histogram "Google Material Icons chart_histogram"
	!include <material/common>
	!include <material/chart_histogram>
	
	<<$ma_chart_histogram>>
	
	
snippet sprite_material_chart_line "Google Material Icons chart_line"
	!include <material/common>
	!include <material/chart_line>
	
	<<$ma_chart_line>>
	
	
snippet sprite_material_chart_line_stacked "Google Material Icons chart_line_stacked"
	!include <material/common>
	!include <material/chart_line_stacked>
	
	<<$ma_chart_line_stacked>>
	
	
snippet sprite_material_chart_line_variant "Google Material Icons chart_line_variant"
	!include <material/common>
	!include <material/chart_line_variant>
	
	<<$ma_chart_line_variant>>
	
	
snippet sprite_material_chart_pie "Google Material Icons chart_pie"
	!include <material/common>
	!include <material/chart_pie>
	
	<<$ma_chart_pie>>
	
	
snippet sprite_material_chart_scatterplot_hexbin "Google Material Icons chart_scatterplot_hexbin"
	!include <material/common>
	!include <material/chart_scatterplot_hexbin>
	
	<<$ma_chart_scatterplot_hexbin>>
	
	
snippet sprite_material_chart_timeline "Google Material Icons chart_timeline"
	!include <material/common>
	!include <material/chart_timeline>
	
	<<$ma_chart_timeline>>
	
	
snippet sprite_material_check_all "Google Material Icons check_all"
	!include <material/common>
	!include <material/check_all>
	
	<<$ma_check_all>>
	
	
snippet sprite_material_check_bookmark "Google Material Icons check_bookmark"
	!include <material/common>
	!include <material/check_bookmark>
	
	<<$ma_check_bookmark>>
	
	
snippet sprite_material_checkbox_blank_circle_outline "Google Material Icons checkbox_blank_circle_outline"
	!include <material/common>
	!include <material/checkbox_blank_circle_outline>
	
	<<$ma_checkbox_blank_circle_outline>>
	
	
snippet sprite_material_checkbox_blank_circle "Google Material Icons checkbox_blank_circle"
	!include <material/common>
	!include <material/checkbox_blank_circle>
	
	<<$ma_checkbox_blank_circle>>
	
	
snippet sprite_material_checkbox_blank_outline "Google Material Icons checkbox_blank_outline"
	!include <material/common>
	!include <material/checkbox_blank_outline>
	
	<<$ma_checkbox_blank_outline>>
	
	
snippet sprite_material_checkbox_blank "Google Material Icons checkbox_blank"
	!include <material/common>
	!include <material/checkbox_blank>
	
	<<$ma_checkbox_blank>>
	
	
snippet sprite_material_checkbox_marked_circle_outline "Google Material Icons checkbox_marked_circle_outline"
	!include <material/common>
	!include <material/checkbox_marked_circle_outline>
	
	<<$ma_checkbox_marked_circle_outline>>
	
	
snippet sprite_material_checkbox_marked_circle "Google Material Icons checkbox_marked_circle"
	!include <material/common>
	!include <material/checkbox_marked_circle>
	
	<<$ma_checkbox_marked_circle>>
	
	
snippet sprite_material_checkbox_marked_outline "Google Material Icons checkbox_marked_outline"
	!include <material/common>
	!include <material/checkbox_marked_outline>
	
	<<$ma_checkbox_marked_outline>>
	
	
snippet sprite_material_checkbox_marked "Google Material Icons checkbox_marked"
	!include <material/common>
	!include <material/checkbox_marked>
	
	<<$ma_checkbox_marked>>
	
	
snippet sprite_material_checkbox_multiple_blank_circle_outline "Google Material Icons checkbox_multiple_blank_circle_outline"
	!include <material/common>
	!include <material/checkbox_multiple_blank_circle_outline>
	
	<<$ma_checkbox_multiple_blank_circle_outline>>
	
	
snippet sprite_material_checkbox_multiple_blank_circle "Google Material Icons checkbox_multiple_blank_circle"
	!include <material/common>
	!include <material/checkbox_multiple_blank_circle>
	
	<<$ma_checkbox_multiple_blank_circle>>
	
	
snippet sprite_material_checkbox_multiple_blank_outline "Google Material Icons checkbox_multiple_blank_outline"
	!include <material/common>
	!include <material/checkbox_multiple_blank_outline>
	
	<<$ma_checkbox_multiple_blank_outline>>
	
	
snippet sprite_material_checkbox_multiple_blank "Google Material Icons checkbox_multiple_blank"
	!include <material/common>
	!include <material/checkbox_multiple_blank>
	
	<<$ma_checkbox_multiple_blank>>
	
	
snippet sprite_material_checkbox_multiple_marked_circle_outline "Google Material Icons checkbox_multiple_marked_circle_outline"
	!include <material/common>
	!include <material/checkbox_multiple_marked_circle_outline>
	
	<<$ma_checkbox_multiple_marked_circle_outline>>
	
	
snippet sprite_material_checkbox_multiple_marked_circle "Google Material Icons checkbox_multiple_marked_circle"
	!include <material/common>
	!include <material/checkbox_multiple_marked_circle>
	
	<<$ma_checkbox_multiple_marked_circle>>
	
	
snippet sprite_material_checkbox_multiple_marked_outline "Google Material Icons checkbox_multiple_marked_outline"
	!include <material/common>
	!include <material/checkbox_multiple_marked_outline>
	
	<<$ma_checkbox_multiple_marked_outline>>
	
	
snippet sprite_material_checkbox_multiple_marked "Google Material Icons checkbox_multiple_marked"
	!include <material/common>
	!include <material/checkbox_multiple_marked>
	
	<<$ma_checkbox_multiple_marked>>
	
	
snippet sprite_material_check_circle_outline "Google Material Icons check_circle_outline"
	!include <material/common>
	!include <material/check_circle_outline>
	
	<<$ma_check_circle_outline>>
	
	
snippet sprite_material_check_circle "Google Material Icons check_circle"
	!include <material/common>
	!include <material/check_circle>
	
	<<$ma_check_circle>>
	
	
snippet sprite_material_checkerboard "Google Material Icons checkerboard"
	!include <material/common>
	!include <material/checkerboard>
	
	<<$ma_checkerboard>>
	
	
snippet sprite_material_check "Google Material Icons check"
	!include <material/common>
	!include <material/check>
	
	<<$ma_check>>
	
	
snippet sprite_material_chemical_weapon "Google Material Icons chemical_weapon"
	!include <material/common>
	!include <material/chemical_weapon>
	
	<<$ma_chemical_weapon>>
	
	
snippet sprite_material_chevron_double_down "Google Material Icons chevron_double_down"
	!include <material/common>
	!include <material/chevron_double_down>
	
	<<$ma_chevron_double_down>>
	
	
snippet sprite_material_chevron_double_left "Google Material Icons chevron_double_left"
	!include <material/common>
	!include <material/chevron_double_left>
	
	<<$ma_chevron_double_left>>
	
	
snippet sprite_material_chevron_double_right "Google Material Icons chevron_double_right"
	!include <material/common>
	!include <material/chevron_double_right>
	
	<<$ma_chevron_double_right>>
	
	
snippet sprite_material_chevron_double_up "Google Material Icons chevron_double_up"
	!include <material/common>
	!include <material/chevron_double_up>
	
	<<$ma_chevron_double_up>>
	
	
snippet sprite_material_chevron_down "Google Material Icons chevron_down"
	!include <material/common>
	!include <material/chevron_down>
	
	<<$ma_chevron_down>>
	
	
snippet sprite_material_chevron_left "Google Material Icons chevron_left"
	!include <material/common>
	!include <material/chevron_left>
	
	<<$ma_chevron_left>>
	
	
snippet sprite_material_chevron_right "Google Material Icons chevron_right"
	!include <material/common>
	!include <material/chevron_right>
	
	<<$ma_chevron_right>>
	
	
snippet sprite_material_chevron_up "Google Material Icons chevron_up"
	!include <material/common>
	!include <material/chevron_up>
	
	<<$ma_chevron_up>>
	
	
snippet sprite_material_chili_hot "Google Material Icons chili_hot"
	!include <material/common>
	!include <material/chili_hot>
	
	<<$ma_chili_hot>>
	
	
snippet sprite_material_chili_medium "Google Material Icons chili_medium"
	!include <material/common>
	!include <material/chili_medium>
	
	<<$ma_chili_medium>>
	
	
snippet sprite_material_chili_mild "Google Material Icons chili_mild"
	!include <material/common>
	!include <material/chili_mild>
	
	<<$ma_chili_mild>>
	
	
snippet sprite_material_chip "Google Material Icons chip"
	!include <material/common>
	!include <material/chip>
	
	<<$ma_chip>>
	
	
snippet sprite_material_church "Google Material Icons church"
	!include <material/common>
	!include <material/church>
	
	<<$ma_church>>
	
	
snippet sprite_material_circle_outline "Google Material Icons circle_outline"
	!include <material/common>
	!include <material/circle_outline>
	
	<<$ma_circle_outline>>
	
	
snippet sprite_material_circle "Google Material Icons circle"
	!include <material/common>
	!include <material/circle>
	
	<<$ma_circle>>
	
	
snippet sprite_material_cisco_webex "Google Material Icons cisco_webex"
	!include <material/common>
	!include <material/cisco_webex>
	
	<<$ma_cisco_webex>>
	
	
snippet sprite_material_city "Google Material Icons city"
	!include <material/common>
	!include <material/city>
	
	<<$ma_city>>
	
	
snippet sprite_material_clapperboard "Google Material Icons clapperboard"
	!include <material/common>
	!include <material/clapperboard>
	
	<<$ma_clapperboard>>
	
	
snippet sprite_material_clipboard_account "Google Material Icons clipboard_account"
	!include <material/common>
	!include <material/clipboard_account>
	
	<<$ma_clipboard_account>>
	
	
snippet sprite_material_clipboard_alert "Google Material Icons clipboard_alert"
	!include <material/common>
	!include <material/clipboard_alert>
	
	<<$ma_clipboard_alert>>
	
	
snippet sprite_material_clipboard_arrow_down "Google Material Icons clipboard_arrow_down"
	!include <material/common>
	!include <material/clipboard_arrow_down>
	
	<<$ma_clipboard_arrow_down>>
	
	
snippet sprite_material_clipboard_arrow_left "Google Material Icons clipboard_arrow_left"
	!include <material/common>
	!include <material/clipboard_arrow_left>
	
	<<$ma_clipboard_arrow_left>>
	
	
snippet sprite_material_clipboard_check "Google Material Icons clipboard_check"
	!include <material/common>
	!include <material/clipboard_check>
	
	<<$ma_clipboard_check>>
	
	
snippet sprite_material_clipboard_flow "Google Material Icons clipboard_flow"
	!include <material/common>
	!include <material/clipboard_flow>
	
	<<$ma_clipboard_flow>>
	
	
snippet sprite_material_clipboard_outline "Google Material Icons clipboard_outline"
	!include <material/common>
	!include <material/clipboard_outline>
	
	<<$ma_clipboard_outline>>
	
	
snippet sprite_material_clipboard_plus "Google Material Icons clipboard_plus"
	!include <material/common>
	!include <material/clipboard_plus>
	
	<<$ma_clipboard_plus>>
	
	
snippet sprite_material_clipboard "Google Material Icons clipboard"
	!include <material/common>
	!include <material/clipboard>
	
	<<$ma_clipboard>>
	
	
snippet sprite_material_clipboard_text "Google Material Icons clipboard_text"
	!include <material/common>
	!include <material/clipboard_text>
	
	<<$ma_clipboard_text>>
	
	
snippet sprite_material_clippy "Google Material Icons clippy"
	!include <material/common>
	!include <material/clippy>
	
	<<$ma_clippy>>
	
	
snippet sprite_material_clock_alert "Google Material Icons clock_alert"
	!include <material/common>
	!include <material/clock_alert>
	
	<<$ma_clock_alert>>
	
	
snippet sprite_material_clock_end "Google Material Icons clock_end"
	!include <material/common>
	!include <material/clock_end>
	
	<<$ma_clock_end>>
	
	
snippet sprite_material_clock_fast "Google Material Icons clock_fast"
	!include <material/common>
	!include <material/clock_fast>
	
	<<$ma_clock_fast>>
	
	
snippet sprite_material_clock_in "Google Material Icons clock_in"
	!include <material/common>
	!include <material/clock_in>
	
	<<$ma_clock_in>>
	
	
snippet sprite_material_clock_out "Google Material Icons clock_out"
	!include <material/common>
	!include <material/clock_out>
	
	<<$ma_clock_out>>
	
	
snippet sprite_material_clock "Google Material Icons clock"
	!include <material/common>
	!include <material/clock>
	
	<<$ma_clock>>
	
	
snippet sprite_material_clock_start "Google Material Icons clock_start"
	!include <material/common>
	!include <material/clock_start>
	
	<<$ma_clock_start>>
	
	
snippet sprite_material_close_circle_outline "Google Material Icons close_circle_outline"
	!include <material/common>
	!include <material/close_circle_outline>
	
	<<$ma_close_circle_outline>>
	
	
snippet sprite_material_close_circle "Google Material Icons close_circle"
	!include <material/common>
	!include <material/close_circle>
	
	<<$ma_close_circle>>
	
	
snippet sprite_material_closed_caption "Google Material Icons closed_caption"
	!include <material/common>
	!include <material/closed_caption>
	
	<<$ma_closed_caption>>
	
	
snippet sprite_material_close_network "Google Material Icons close_network"
	!include <material/common>
	!include <material/close_network>
	
	<<$ma_close_network>>
	
	
snippet sprite_material_close_octagon_outline "Google Material Icons close_octagon_outline"
	!include <material/common>
	!include <material/close_octagon_outline>
	
	<<$ma_close_octagon_outline>>
	
	
snippet sprite_material_close_octagon "Google Material Icons close_octagon"
	!include <material/common>
	!include <material/close_octagon>
	
	<<$ma_close_octagon>>
	
	
snippet sprite_material_close_outline "Google Material Icons close_outline"
	!include <material/common>
	!include <material/close_outline>
	
	<<$ma_close_outline>>
	
	
snippet sprite_material_close "Google Material Icons close"
	!include <material/common>
	!include <material/close>
	
	<<$ma_close>>
	
	
snippet sprite_material_cloud_braces "Google Material Icons cloud_braces"
	!include <material/common>
	!include <material/cloud_braces>
	
	<<$ma_cloud_braces>>
	
	
snippet sprite_material_cloud_check "Google Material Icons cloud_check"
	!include <material/common>
	!include <material/cloud_check>
	
	<<$ma_cloud_check>>
	
	
snippet sprite_material_cloud_circle "Google Material Icons cloud_circle"
	!include <material/common>
	!include <material/cloud_circle>
	
	<<$ma_cloud_circle>>
	
	
snippet sprite_material_cloud_download "Google Material Icons cloud_download"
	!include <material/common>
	!include <material/cloud_download>
	
	<<$ma_cloud_download>>
	
	
snippet sprite_material_cloud_off_outline "Google Material Icons cloud_off_outline"
	!include <material/common>
	!include <material/cloud_off_outline>
	
	<<$ma_cloud_off_outline>>
	
	
snippet sprite_material_cloud_outline "Google Material Icons cloud_outline"
	!include <material/common>
	!include <material/cloud_outline>
	
	<<$ma_cloud_outline>>
	
	
snippet sprite_material_cloud_print_outline "Google Material Icons cloud_print_outline"
	!include <material/common>
	!include <material/cloud_print_outline>
	
	<<$ma_cloud_print_outline>>
	
	
snippet sprite_material_cloud_print "Google Material Icons cloud_print"
	!include <material/common>
	!include <material/cloud_print>
	
	<<$ma_cloud_print>>
	
	
snippet sprite_material_cloud "Google Material Icons cloud"
	!include <material/common>
	!include <material/cloud>
	
	<<$ma_cloud>>
	
	
snippet sprite_material_cloud_sync "Google Material Icons cloud_sync"
	!include <material/common>
	!include <material/cloud_sync>
	
	<<$ma_cloud_sync>>
	
	
snippet sprite_material_cloud_tags "Google Material Icons cloud_tags"
	!include <material/common>
	!include <material/cloud_tags>
	
	<<$ma_cloud_tags>>
	
	
snippet sprite_material_cloud_upload "Google Material Icons cloud_upload"
	!include <material/common>
	!include <material/cloud_upload>
	
	<<$ma_cloud_upload>>
	
	
snippet sprite_material_clover "Google Material Icons clover"
	!include <material/common>
	!include <material/clover>
	
	<<$ma_clover>>
	
	
snippet sprite_material_code_array "Google Material Icons code_array"
	!include <material/common>
	!include <material/code_array>
	
	<<$ma_code_array>>
	
	
snippet sprite_material_code_braces "Google Material Icons code_braces"
	!include <material/common>
	!include <material/code_braces>
	
	<<$ma_code_braces>>
	
	
snippet sprite_material_code_brackets "Google Material Icons code_brackets"
	!include <material/common>
	!include <material/code_brackets>
	
	<<$ma_code_brackets>>
	
	
snippet sprite_material_code_equal "Google Material Icons code_equal"
	!include <material/common>
	!include <material/code_equal>
	
	<<$ma_code_equal>>
	
	
snippet sprite_material_code_greater_than_or_equal "Google Material Icons code_greater_than_or_equal"
	!include <material/common>
	!include <material/code_greater_than_or_equal>
	
	<<$ma_code_greater_than_or_equal>>
	
	
snippet sprite_material_code_greater_than "Google Material Icons code_greater_than"
	!include <material/common>
	!include <material/code_greater_than>
	
	<<$ma_code_greater_than>>
	
	
snippet sprite_material_code_less_than_or_equal "Google Material Icons code_less_than_or_equal"
	!include <material/common>
	!include <material/code_less_than_or_equal>
	
	<<$ma_code_less_than_or_equal>>
	
	
snippet sprite_material_code_less_than "Google Material Icons code_less_than"
	!include <material/common>
	!include <material/code_less_than>
	
	<<$ma_code_less_than>>
	
	
snippet sprite_material_code_not_equal "Google Material Icons code_not_equal"
	!include <material/common>
	!include <material/code_not_equal>
	
	<<$ma_code_not_equal>>
	
	
snippet sprite_material_code_not_equal_variant "Google Material Icons code_not_equal_variant"
	!include <material/common>
	!include <material/code_not_equal_variant>
	
	<<$ma_code_not_equal_variant>>
	
	
snippet sprite_material_code_parentheses "Google Material Icons code_parentheses"
	!include <material/common>
	!include <material/code_parentheses>
	
	<<$ma_code_parentheses>>
	
	
snippet sprite_material_codepen "Google Material Icons codepen"
	!include <material/common>
	!include <material/codepen>
	
	<<$ma_codepen>>
	
	
snippet sprite_material_code_string "Google Material Icons code_string"
	!include <material/common>
	!include <material/code_string>
	
	<<$ma_code_string>>
	
	
snippet sprite_material_code_tags_check "Google Material Icons code_tags_check"
	!include <material/common>
	!include <material/code_tags_check>
	
	<<$ma_code_tags_check>>
	
	
snippet sprite_material_code_tags "Google Material Icons code_tags"
	!include <material/common>
	!include <material/code_tags>
	
	<<$ma_code_tags>>
	
	
snippet sprite_material_coffee_outline "Google Material Icons coffee_outline"
	!include <material/common>
	!include <material/coffee_outline>
	
	<<$ma_coffee_outline>>
	
	
snippet sprite_material_coffee "Google Material Icons coffee"
	!include <material/common>
	!include <material/coffee>
	
	<<$ma_coffee>>
	
	
snippet sprite_material_coffee_to_go "Google Material Icons coffee_to_go"
	!include <material/common>
	!include <material/coffee_to_go>
	
	<<$ma_coffee_to_go>>
	
	
snippet sprite_material_coin "Google Material Icons coin"
	!include <material/common>
	!include <material/coin>
	
	<<$ma_coin>>
	
	
snippet sprite_material_coins "Google Material Icons coins"
	!include <material/common>
	!include <material/coins>
	
	<<$ma_coins>>
	
	
snippet sprite_material_collage "Google Material Icons collage"
	!include <material/common>
	!include <material/collage>
	
	<<$ma_collage>>
	
	
snippet sprite_material_color_helper "Google Material Icons color_helper"
	!include <material/common>
	!include <material/color_helper>
	
	<<$ma_color_helper>>
	
	
snippet sprite_material_comment_account_outline "Google Material Icons comment_account_outline"
	!include <material/common>
	!include <material/comment_account_outline>
	
	<<$ma_comment_account_outline>>
	
	
snippet sprite_material_comment_account "Google Material Icons comment_account"
	!include <material/common>
	!include <material/comment_account>
	
	<<$ma_comment_account>>
	
	
snippet sprite_material_comment_alert_outline "Google Material Icons comment_alert_outline"
	!include <material/common>
	!include <material/comment_alert_outline>
	
	<<$ma_comment_alert_outline>>
	
	
snippet sprite_material_comment_alert "Google Material Icons comment_alert"
	!include <material/common>
	!include <material/comment_alert>
	
	<<$ma_comment_alert>>
	
	
snippet sprite_material_comment_check_outline "Google Material Icons comment_check_outline"
	!include <material/common>
	!include <material/comment_check_outline>
	
	<<$ma_comment_check_outline>>
	
	
snippet sprite_material_comment_check "Google Material Icons comment_check"
	!include <material/common>
	!include <material/comment_check>
	
	<<$ma_comment_check>>
	
	
snippet sprite_material_comment_multiple_outline "Google Material Icons comment_multiple_outline"
	!include <material/common>
	!include <material/comment_multiple_outline>
	
	<<$ma_comment_multiple_outline>>
	
	
snippet sprite_material_comment_outline "Google Material Icons comment_outline"
	!include <material/common>
	!include <material/comment_outline>
	
	<<$ma_comment_outline>>
	
	
snippet sprite_material_comment_plus_outline "Google Material Icons comment_plus_outline"
	!include <material/common>
	!include <material/comment_plus_outline>
	
	<<$ma_comment_plus_outline>>
	
	
snippet sprite_material_comment_processing_outline "Google Material Icons comment_processing_outline"
	!include <material/common>
	!include <material/comment_processing_outline>
	
	<<$ma_comment_processing_outline>>
	
	
snippet sprite_material_comment_processing "Google Material Icons comment_processing"
	!include <material/common>
	!include <material/comment_processing>
	
	<<$ma_comment_processing>>
	
	
snippet sprite_material_comment "Google Material Icons comment"
	!include <material/common>
	!include <material/comment>
	
	<<$ma_comment>>
	
	
snippet sprite_material_comment_question_outline "Google Material Icons comment_question_outline"
	!include <material/common>
	!include <material/comment_question_outline>
	
	<<$ma_comment_question_outline>>
	
	
snippet sprite_material_comment_question "Google Material Icons comment_question"
	!include <material/common>
	!include <material/comment_question>
	
	<<$ma_comment_question>>
	
	
snippet sprite_material_comment_remove_outline "Google Material Icons comment_remove_outline"
	!include <material/common>
	!include <material/comment_remove_outline>
	
	<<$ma_comment_remove_outline>>
	
	
snippet sprite_material_comment_remove "Google Material Icons comment_remove"
	!include <material/common>
	!include <material/comment_remove>
	
	<<$ma_comment_remove>>
	
	
snippet sprite_material_comment_text_outline "Google Material Icons comment_text_outline"
	!include <material/common>
	!include <material/comment_text_outline>
	
	<<$ma_comment_text_outline>>
	
	
snippet sprite_material_comment_text "Google Material Icons comment_text"
	!include <material/common>
	!include <material/comment_text>
	
	<<$ma_comment_text>>
	
	
snippet sprite_material_common "Google Material Icons common"
	!include <material/common>
	!include <material/common>
	
	<<$ma_common>>
	
	
snippet sprite_material_compare "Google Material Icons compare"
	!include <material/common>
	!include <material/compare>
	
	<<$ma_compare>>
	
	
snippet sprite_material_compass_outline "Google Material Icons compass_outline"
	!include <material/common>
	!include <material/compass_outline>
	
	<<$ma_compass_outline>>
	
	
snippet sprite_material_compass "Google Material Icons compass"
	!include <material/common>
	!include <material/compass>
	
	<<$ma_compass>>
	
	
snippet sprite_material_console_line "Google Material Icons console_line"
	!include <material/common>
	!include <material/console_line>
	
	<<$ma_console_line>>
	
	
snippet sprite_material_console "Google Material Icons console"
	!include <material/common>
	!include <material/console>
	
	<<$ma_console>>
	
	
snippet sprite_material_contact_mail "Google Material Icons contact_mail"
	!include <material/common>
	!include <material/contact_mail>
	
	<<$ma_contact_mail>>
	
	
snippet sprite_material_contacts "Google Material Icons contacts"
	!include <material/common>
	!include <material/contacts>
	
	<<$ma_contacts>>
	
	
snippet sprite_material_content_copy "Google Material Icons content_copy"
	!include <material/common>
	!include <material/content_copy>
	
	<<$ma_content_copy>>
	
	
snippet sprite_material_content_cut "Google Material Icons content_cut"
	!include <material/common>
	!include <material/content_cut>
	
	<<$ma_content_cut>>
	
	
snippet sprite_material_content_duplicate "Google Material Icons content_duplicate"
	!include <material/common>
	!include <material/content_duplicate>
	
	<<$ma_content_duplicate>>
	
	
snippet sprite_material_content_paste "Google Material Icons content_paste"
	!include <material/common>
	!include <material/content_paste>
	
	<<$ma_content_paste>>
	
	
snippet sprite_material_content_save_all "Google Material Icons content_save_all"
	!include <material/common>
	!include <material/content_save_all>
	
	<<$ma_content_save_all>>
	
	
snippet sprite_material_content_save_outline "Google Material Icons content_save_outline"
	!include <material/common>
	!include <material/content_save_outline>
	
	<<$ma_content_save_outline>>
	
	
snippet sprite_material_content_save "Google Material Icons content_save"
	!include <material/common>
	!include <material/content_save>
	
	<<$ma_content_save>>
	
	
snippet sprite_material_content_save_settings "Google Material Icons content_save_settings"
	!include <material/common>
	!include <material/content_save_settings>
	
	<<$ma_content_save_settings>>
	
	
snippet sprite_material_contrast_box "Google Material Icons contrast_box"
	!include <material/common>
	!include <material/contrast_box>
	
	<<$ma_contrast_box>>
	
	
snippet sprite_material_contrast_circle "Google Material Icons contrast_circle"
	!include <material/common>
	!include <material/contrast_circle>
	
	<<$ma_contrast_circle>>
	
	
snippet sprite_material_contrast "Google Material Icons contrast"
	!include <material/common>
	!include <material/contrast>
	
	<<$ma_contrast>>
	
	
snippet sprite_material_controller_xbox "Google Material Icons controller_xbox"
	!include <material/common>
	!include <material/controller_xbox>
	
	<<$ma_controller_xbox>>
	
	
snippet sprite_material_cookie "Google Material Icons cookie"
	!include <material/common>
	!include <material/cookie>
	
	<<$ma_cookie>>
	
	
snippet sprite_material_copyright "Google Material Icons copyright"
	!include <material/common>
	!include <material/copyright>
	
	<<$ma_copyright>>
	
	
snippet sprite_material_corn "Google Material Icons corn"
	!include <material/common>
	!include <material/corn>
	
	<<$ma_corn>>
	
	
snippet sprite_material_counter "Google Material Icons counter"
	!include <material/common>
	!include <material/counter>
	
	<<$ma_counter>>
	
	
snippet sprite_material_cow "Google Material Icons cow"
	!include <material/common>
	!include <material/cow>
	
	<<$ma_cow>>
	
	
snippet sprite_material_creation "Google Material Icons creation"
	!include <material/common>
	!include <material/creation>
	
	<<$ma_creation>>
	
	
snippet sprite_material_credit_card_multiple "Google Material Icons credit_card_multiple"
	!include <material/common>
	!include <material/credit_card_multiple>
	
	<<$ma_credit_card_multiple>>
	
	
snippet sprite_material_credit_card_off "Google Material Icons credit_card_off"
	!include <material/common>
	!include <material/credit_card_off>
	
	<<$ma_credit_card_off>>
	
	
snippet sprite_material_credit_card_plus "Google Material Icons credit_card_plus"
	!include <material/common>
	!include <material/credit_card_plus>
	
	<<$ma_credit_card_plus>>
	
	
snippet sprite_material_credit_card "Google Material Icons credit_card"
	!include <material/common>
	!include <material/credit_card>
	
	<<$ma_credit_card>>
	
	
snippet sprite_material_credit_card_scan "Google Material Icons credit_card_scan"
	!include <material/common>
	!include <material/credit_card_scan>
	
	<<$ma_credit_card_scan>>
	
	
snippet sprite_material_crop_free "Google Material Icons crop_free"
	!include <material/common>
	!include <material/crop_free>
	
	<<$ma_crop_free>>
	
	
snippet sprite_material_crop_landscape "Google Material Icons crop_landscape"
	!include <material/common>
	!include <material/crop_landscape>
	
	<<$ma_crop_landscape>>
	
	
snippet sprite_material_crop_portrait "Google Material Icons crop_portrait"
	!include <material/common>
	!include <material/crop_portrait>
	
	<<$ma_crop_portrait>>
	
	
snippet sprite_material_crop "Google Material Icons crop"
	!include <material/common>
	!include <material/crop>
	
	<<$ma_crop>>
	
	
snippet sprite_material_crop_rotate "Google Material Icons crop_rotate"
	!include <material/common>
	!include <material/crop_rotate>
	
	<<$ma_crop_rotate>>
	
	
snippet sprite_material_crop_square "Google Material Icons crop_square"
	!include <material/common>
	!include <material/crop_square>
	
	<<$ma_crop_square>>
	
	
snippet sprite_material_crosshairs_gps "Google Material Icons crosshairs_gps"
	!include <material/common>
	!include <material/crosshairs_gps>
	
	<<$ma_crosshairs_gps>>
	
	
snippet sprite_material_crosshairs "Google Material Icons crosshairs"
	!include <material/common>
	!include <material/crosshairs>
	
	<<$ma_crosshairs>>
	
	
snippet sprite_material_crown "Google Material Icons crown"
	!include <material/common>
	!include <material/crown>
	
	<<$ma_crown>>
	
	
snippet sprite_material_cube_outline "Google Material Icons cube_outline"
	!include <material/common>
	!include <material/cube_outline>
	
	<<$ma_cube_outline>>
	
	
snippet sprite_material_cube "Google Material Icons cube"
	!include <material/common>
	!include <material/cube>
	
	<<$ma_cube>>
	
	
snippet sprite_material_cube_send "Google Material Icons cube_send"
	!include <material/common>
	!include <material/cube_send>
	
	<<$ma_cube_send>>
	
	
snippet sprite_material_cube_unfolded "Google Material Icons cube_unfolded"
	!include <material/common>
	!include <material/cube_unfolded>
	
	<<$ma_cube_unfolded>>
	
	
snippet sprite_material_cup_off "Google Material Icons cup_off"
	!include <material/common>
	!include <material/cup_off>
	
	<<$ma_cup_off>>
	
	
snippet sprite_material_cup "Google Material Icons cup"
	!include <material/common>
	!include <material/cup>
	
	<<$ma_cup>>
	
	
snippet sprite_material_cup_water "Google Material Icons cup_water"
	!include <material/common>
	!include <material/cup_water>
	
	<<$ma_cup_water>>
	
	
snippet sprite_material_currency_btc "Google Material Icons currency_btc"
	!include <material/common>
	!include <material/currency_btc>
	
	<<$ma_currency_btc>>
	
	
snippet sprite_material_currency_chf "Google Material Icons currency_chf"
	!include <material/common>
	!include <material/currency_chf>
	
	<<$ma_currency_chf>>
	
	
snippet sprite_material_currency_cny "Google Material Icons currency_cny"
	!include <material/common>
	!include <material/currency_cny>
	
	<<$ma_currency_cny>>
	
	
snippet sprite_material_currency_eth "Google Material Icons currency_eth"
	!include <material/common>
	!include <material/currency_eth>
	
	<<$ma_currency_eth>>
	
	
snippet sprite_material_currency_eur "Google Material Icons currency_eur"
	!include <material/common>
	!include <material/currency_eur>
	
	<<$ma_currency_eur>>
	
	
snippet sprite_material_currency_gbp "Google Material Icons currency_gbp"
	!include <material/common>
	!include <material/currency_gbp>
	
	<<$ma_currency_gbp>>
	
	
snippet sprite_material_currency_inr "Google Material Icons currency_inr"
	!include <material/common>
	!include <material/currency_inr>
	
	<<$ma_currency_inr>>
	
	
snippet sprite_material_currency_jpy "Google Material Icons currency_jpy"
	!include <material/common>
	!include <material/currency_jpy>
	
	<<$ma_currency_jpy>>
	
	
snippet sprite_material_currency_krw "Google Material Icons currency_krw"
	!include <material/common>
	!include <material/currency_krw>
	
	<<$ma_currency_krw>>
	
	
snippet sprite_material_currency_ngn "Google Material Icons currency_ngn"
	!include <material/common>
	!include <material/currency_ngn>
	
	<<$ma_currency_ngn>>
	
	
snippet sprite_material_currency_rub "Google Material Icons currency_rub"
	!include <material/common>
	!include <material/currency_rub>
	
	<<$ma_currency_rub>>
	
	
snippet sprite_material_currency_sign "Google Material Icons currency_sign"
	!include <material/common>
	!include <material/currency_sign>
	
	<<$ma_currency_sign>>
	
	
snippet sprite_material_currency_try "Google Material Icons currency_try"
	!include <material/common>
	!include <material/currency_try>
	
	<<$ma_currency_try>>
	
	
snippet sprite_material_currency_twd "Google Material Icons currency_twd"
	!include <material/common>
	!include <material/currency_twd>
	
	<<$ma_currency_twd>>
	
	
snippet sprite_material_currency_usd_off "Google Material Icons currency_usd_off"
	!include <material/common>
	!include <material/currency_usd_off>
	
	<<$ma_currency_usd_off>>
	
	
snippet sprite_material_currency_usd "Google Material Icons currency_usd"
	!include <material/common>
	!include <material/currency_usd>
	
	<<$ma_currency_usd>>
	
	
snippet sprite_material_cursor_default_outline "Google Material Icons cursor_default_outline"
	!include <material/common>
	!include <material/cursor_default_outline>
	
	<<$ma_cursor_default_outline>>
	
	
snippet sprite_material_cursor_default "Google Material Icons cursor_default"
	!include <material/common>
	!include <material/cursor_default>
	
	<<$ma_cursor_default>>
	
	
snippet sprite_material_cursor_move "Google Material Icons cursor_move"
	!include <material/common>
	!include <material/cursor_move>
	
	<<$ma_cursor_move>>
	
	
snippet sprite_material_cursor_pointer "Google Material Icons cursor_pointer"
	!include <material/common>
	!include <material/cursor_pointer>
	
	<<$ma_cursor_pointer>>
	
	
snippet sprite_material_cursor_text "Google Material Icons cursor_text"
	!include <material/common>
	!include <material/cursor_text>
	
	<<$ma_cursor_text>>
	
	
snippet sprite_material_database_minus "Google Material Icons database_minus"
	!include <material/common>
	!include <material/database_minus>
	
	<<$ma_database_minus>>
	
	
snippet sprite_material_database_plus "Google Material Icons database_plus"
	!include <material/common>
	!include <material/database_plus>
	
	<<$ma_database_plus>>
	
	
snippet sprite_material_database "Google Material Icons database"
	!include <material/common>
	!include <material/database>
	
	<<$ma_database>>
	
	
snippet sprite_material_data "Google Material Icons data"
	!include <material/common>
	!include <material/data>
	
	<<$ma_data>>
	
	
snippet sprite_material_debug_step_into "Google Material Icons debug_step_into"
	!include <material/common>
	!include <material/debug_step_into>
	
	<<$ma_debug_step_into>>
	
	
snippet sprite_material_debug_step_out "Google Material Icons debug_step_out"
	!include <material/common>
	!include <material/debug_step_out>
	
	<<$ma_debug_step_out>>
	
	
snippet sprite_material_debug_step_over "Google Material Icons debug_step_over"
	!include <material/common>
	!include <material/debug_step_over>
	
	<<$ma_debug_step_over>>
	
	
snippet sprite_material_decagram_outline "Google Material Icons decagram_outline"
	!include <material/common>
	!include <material/decagram_outline>
	
	<<$ma_decagram_outline>>
	
	
snippet sprite_material_decagram "Google Material Icons decagram"
	!include <material/common>
	!include <material/decagram>
	
	<<$ma_decagram>>
	
	
snippet sprite_material_decimal_decrease "Google Material Icons decimal_decrease"
	!include <material/common>
	!include <material/decimal_decrease>
	
	<<$ma_decimal_decrease>>
	
	
snippet sprite_material_decimal_increase "Google Material Icons decimal_increase"
	!include <material/common>
	!include <material/decimal_increase>
	
	<<$ma_decimal_increase>>
	
	
snippet sprite_material_delete_circle "Google Material Icons delete_circle"
	!include <material/common>
	!include <material/delete_circle>
	
	<<$ma_delete_circle>>
	
	
snippet sprite_material_delete_empty "Google Material Icons delete_empty"
	!include <material/common>
	!include <material/delete_empty>
	
	<<$ma_delete_empty>>
	
	
snippet sprite_material_delete_forever "Google Material Icons delete_forever"
	!include <material/common>
	!include <material/delete_forever>
	
	<<$ma_delete_forever>>
	
	
snippet sprite_material_delete "Google Material Icons delete"
	!include <material/common>
	!include <material/delete>
	
	<<$ma_delete>>
	
	
snippet sprite_material_delete_restore "Google Material Icons delete_restore"
	!include <material/common>
	!include <material/delete_restore>
	
	<<$ma_delete_restore>>
	
	
snippet sprite_material_delete_sweep "Google Material Icons delete_sweep"
	!include <material/common>
	!include <material/delete_sweep>
	
	<<$ma_delete_sweep>>
	
	
snippet sprite_material_delete_variant "Google Material Icons delete_variant"
	!include <material/common>
	!include <material/delete_variant>
	
	<<$ma_delete_variant>>
	
	
snippet sprite_material_delta "Google Material Icons delta"
	!include <material/common>
	!include <material/delta>
	
	<<$ma_delta>>
	
	
snippet sprite_material_deskphone "Google Material Icons deskphone"
	!include <material/common>
	!include <material/deskphone>
	
	<<$ma_deskphone>>
	
	
snippet sprite_material_desktop_classic "Google Material Icons desktop_classic"
	!include <material/common>
	!include <material/desktop_classic>
	
	<<$ma_desktop_classic>>
	
	
snippet sprite_material_desktop_mac "Google Material Icons desktop_mac"
	!include <material/common>
	!include <material/desktop_mac>
	
	<<$ma_desktop_mac>>
	
	
snippet sprite_material_desktop_tower "Google Material Icons desktop_tower"
	!include <material/common>
	!include <material/desktop_tower>
	
	<<$ma_desktop_tower>>
	
	
snippet sprite_material_details "Google Material Icons details"
	!include <material/common>
	!include <material/details>
	
	<<$ma_details>>
	
	
snippet sprite_material_developer_board "Google Material Icons developer_board"
	!include <material/common>
	!include <material/developer_board>
	
	<<$ma_developer_board>>
	
	
snippet sprite_material_deviantart "Google Material Icons deviantart"
	!include <material/common>
	!include <material/deviantart>
	
	<<$ma_deviantart>>
	
	
snippet sprite_material_dialpad "Google Material Icons dialpad"
	!include <material/common>
	!include <material/dialpad>
	
	<<$ma_dialpad>>
	
	
snippet sprite_material_diamond "Google Material Icons diamond"
	!include <material/common>
	!include <material/diamond>
	
	<<$ma_diamond>>
	
	
snippet sprite_material_dice_1 "Google Material Icons dice_1"
	!include <material/common>
	!include <material/dice_1>
	
	<<$ma_dice_1>>
	
	
snippet sprite_material_dice_2 "Google Material Icons dice_2"
	!include <material/common>
	!include <material/dice_2>
	
	<<$ma_dice_2>>
	
	
snippet sprite_material_dice_3 "Google Material Icons dice_3"
	!include <material/common>
	!include <material/dice_3>
	
	<<$ma_dice_3>>
	
	
snippet sprite_material_dice_4 "Google Material Icons dice_4"
	!include <material/common>
	!include <material/dice_4>
	
	<<$ma_dice_4>>
	
	
snippet sprite_material_dice_5 "Google Material Icons dice_5"
	!include <material/common>
	!include <material/dice_5>
	
	<<$ma_dice_5>>
	
	
snippet sprite_material_dice_6 "Google Material Icons dice_6"
	!include <material/common>
	!include <material/dice_6>
	
	<<$ma_dice_6>>
	
	
snippet sprite_material_dice_d10 "Google Material Icons dice_d10"
	!include <material/common>
	!include <material/dice_d10>
	
	<<$ma_dice_d10>>
	
	
snippet sprite_material_dice_d20 "Google Material Icons dice_d20"
	!include <material/common>
	!include <material/dice_d20>
	
	<<$ma_dice_d20>>
	
	
snippet sprite_material_dice_d4 "Google Material Icons dice_d4"
	!include <material/common>
	!include <material/dice_d4>
	
	<<$ma_dice_d4>>
	
	
snippet sprite_material_dice_d6 "Google Material Icons dice_d6"
	!include <material/common>
	!include <material/dice_d6>
	
	<<$ma_dice_d6>>
	
	
snippet sprite_material_dice_d8 "Google Material Icons dice_d8"
	!include <material/common>
	!include <material/dice_d8>
	
	<<$ma_dice_d8>>
	
	
snippet sprite_material_dice_multiple "Google Material Icons dice_multiple"
	!include <material/common>
	!include <material/dice_multiple>
	
	<<$ma_dice_multiple>>
	
	
snippet sprite_material_dice "Google Material Icons dice"
	!include <material/common>
	!include <material/dice>
	
	<<$ma_dice>>
	
	
snippet sprite_material_dictionary "Google Material Icons dictionary"
	!include <material/common>
	!include <material/dictionary>
	
	<<$ma_dictionary>>
	
	
snippet sprite_material_dip_switch "Google Material Icons dip_switch"
	!include <material/common>
	!include <material/dip_switch>
	
	<<$ma_dip_switch>>
	
	
snippet sprite_material_directions_fork "Google Material Icons directions_fork"
	!include <material/common>
	!include <material/directions_fork>
	
	<<$ma_directions_fork>>
	
	
snippet sprite_material_directions "Google Material Icons directions"
	!include <material/common>
	!include <material/directions>
	
	<<$ma_directions>>
	
	
snippet sprite_material_discord "Google Material Icons discord"
	!include <material/common>
	!include <material/discord>
	
	<<$ma_discord>>
	
	
snippet sprite_material_disk_alert "Google Material Icons disk_alert"
	!include <material/common>
	!include <material/disk_alert>
	
	<<$ma_disk_alert>>
	
	
snippet sprite_material_disk "Google Material Icons disk"
	!include <material/common>
	!include <material/disk>
	
	<<$ma_disk>>
	
	
snippet sprite_material_disqus_outline "Google Material Icons disqus_outline"
	!include <material/common>
	!include <material/disqus_outline>
	
	<<$ma_disqus_outline>>
	
	
snippet sprite_material_disqus "Google Material Icons disqus"
	!include <material/common>
	!include <material/disqus>
	
	<<$ma_disqus>>
	
	
snippet sprite_material_division_box "Google Material Icons division_box"
	!include <material/common>
	!include <material/division_box>
	
	<<$ma_division_box>>
	
	
snippet sprite_material_division "Google Material Icons division"
	!include <material/common>
	!include <material/division>
	
	<<$ma_division>>
	
	
snippet sprite_material_dna "Google Material Icons dna"
	!include <material/common>
	!include <material/dna>
	
	<<$ma_dna>>
	
	
snippet sprite_material_dns "Google Material Icons dns"
	!include <material/common>
	!include <material/dns>
	
	<<$ma_dns>>
	
	
snippet sprite_material_document "Google Material Icons document"
	!include <material/common>
	!include <material/document>
	
	<<$ma_document>>
	
	
snippet sprite_material_dolby "Google Material Icons dolby"
	!include <material/common>
	!include <material/dolby>
	
	<<$ma_dolby>>
	
	
snippet sprite_material_domain "Google Material Icons domain"
	!include <material/common>
	!include <material/domain>
	
	<<$ma_domain>>
	
	
snippet sprite_material_donkey "Google Material Icons donkey"
	!include <material/common>
	!include <material/donkey>
	
	<<$ma_donkey>>
	
	
snippet sprite_material_do_not_disturb_off "Google Material Icons do_not_disturb_off"
	!include <material/common>
	!include <material/do_not_disturb_off>
	
	<<$ma_do_not_disturb_off>>
	
	
snippet sprite_material_do_not_disturb "Google Material Icons do_not_disturb"
	!include <material/common>
	!include <material/do_not_disturb>
	
	<<$ma_do_not_disturb>>
	
	
snippet sprite_material_door_closed "Google Material Icons door_closed"
	!include <material/common>
	!include <material/door_closed>
	
	<<$ma_door_closed>>
	
	
snippet sprite_material_door_open "Google Material Icons door_open"
	!include <material/common>
	!include <material/door_open>
	
	<<$ma_door_open>>
	
	
snippet sprite_material_door "Google Material Icons door"
	!include <material/common>
	!include <material/door>
	
	<<$ma_door>>
	
	
snippet sprite_material_dots_horizontal_circle "Google Material Icons dots_horizontal_circle"
	!include <material/common>
	!include <material/dots_horizontal_circle>
	
	<<$ma_dots_horizontal_circle>>
	
	
snippet sprite_material_dots_horizontal "Google Material Icons dots_horizontal"
	!include <material/common>
	!include <material/dots_horizontal>
	
	<<$ma_dots_horizontal>>
	
	
snippet sprite_material_dots_vertical_circle "Google Material Icons dots_vertical_circle"
	!include <material/common>
	!include <material/dots_vertical_circle>
	
	<<$ma_dots_vertical_circle>>
	
	
snippet sprite_material_dots_vertical "Google Material Icons dots_vertical"
	!include <material/common>
	!include <material/dots_vertical>
	
	<<$ma_dots_vertical>>
	
	
snippet sprite_material_douban "Google Material Icons douban"
	!include <material/common>
	!include <material/douban>
	
	<<$ma_douban>>
	
	
snippet sprite_material_download_network "Google Material Icons download_network"
	!include <material/common>
	!include <material/download_network>
	
	<<$ma_download_network>>
	
	
snippet sprite_material_download "Google Material Icons download"
	!include <material/common>
	!include <material/download>
	
	<<$ma_download>>
	
	
snippet sprite_material_drag_horizontal "Google Material Icons drag_horizontal"
	!include <material/common>
	!include <material/drag_horizontal>
	
	<<$ma_drag_horizontal>>
	
	
snippet sprite_material_drag "Google Material Icons drag"
	!include <material/common>
	!include <material/drag>
	
	<<$ma_drag>>
	
	
snippet sprite_material_drag_vertical "Google Material Icons drag_vertical"
	!include <material/common>
	!include <material/drag_vertical>
	
	<<$ma_drag_vertical>>
	
	
snippet sprite_material_drawing_box "Google Material Icons drawing_box"
	!include <material/common>
	!include <material/drawing_box>
	
	<<$ma_drawing_box>>
	
	
snippet sprite_material_drawing "Google Material Icons drawing"
	!include <material/common>
	!include <material/drawing>
	
	<<$ma_drawing>>
	
	
snippet sprite_material_dribbble_box "Google Material Icons dribbble_box"
	!include <material/common>
	!include <material/dribbble_box>
	
	<<$ma_dribbble_box>>
	
	
snippet sprite_material_dribbble "Google Material Icons dribbble"
	!include <material/common>
	!include <material/dribbble>
	
	<<$ma_dribbble>>
	
	
snippet sprite_material_drone "Google Material Icons drone"
	!include <material/common>
	!include <material/drone>
	
	<<$ma_drone>>
	
	
snippet sprite_material_dropbox "Google Material Icons dropbox"
	!include <material/common>
	!include <material/dropbox>
	
	<<$ma_dropbox>>
	
	
snippet sprite_material_drupal "Google Material Icons drupal"
	!include <material/common>
	!include <material/drupal>
	
	<<$ma_drupal>>
	
	
snippet sprite_material_duck "Google Material Icons duck"
	!include <material/common>
	!include <material/duck>
	
	<<$ma_duck>>
	
	
snippet sprite_material_dumbbell "Google Material Icons dumbbell"
	!include <material/common>
	!include <material/dumbbell>
	
	<<$ma_dumbbell>>
	
	
snippet sprite_material_ear_hearing "Google Material Icons ear_hearing"
	!include <material/common>
	!include <material/ear_hearing>
	
	<<$ma_ear_hearing>>
	
	
snippet sprite_material_earth_box_off "Google Material Icons earth_box_off"
	!include <material/common>
	!include <material/earth_box_off>
	
	<<$ma_earth_box_off>>
	
	
snippet sprite_material_earth_box "Google Material Icons earth_box"
	!include <material/common>
	!include <material/earth_box>
	
	<<$ma_earth_box>>
	
	
snippet sprite_material_earth_off "Google Material Icons earth_off"
	!include <material/common>
	!include <material/earth_off>
	
	<<$ma_earth_off>>
	
	
snippet sprite_material_earth "Google Material Icons earth"
	!include <material/common>
	!include <material/earth>
	
	<<$ma_earth>>
	
	
snippet sprite_material_ebay "Google Material Icons ebay"
	!include <material/common>
	!include <material/ebay>
	
	<<$ma_ebay>>
	
	
snippet sprite_material_edge "Google Material Icons edge"
	!include <material/common>
	!include <material/edge>
	
	<<$ma_edge>>
	
	
snippet sprite_material_eject "Google Material Icons eject"
	!include <material/common>
	!include <material/eject>
	
	<<$ma_eject>>
	
	
snippet sprite_material_elephant "Google Material Icons elephant"
	!include <material/common>
	!include <material/elephant>
	
	<<$ma_elephant>>
	
	
snippet sprite_material_elevation_decline "Google Material Icons elevation_decline"
	!include <material/common>
	!include <material/elevation_decline>
	
	<<$ma_elevation_decline>>
	
	
snippet sprite_material_elevation_rise "Google Material Icons elevation_rise"
	!include <material/common>
	!include <material/elevation_rise>
	
	<<$ma_elevation_rise>>
	
	
snippet sprite_material_elevator "Google Material Icons elevator"
	!include <material/common>
	!include <material/elevator>
	
	<<$ma_elevator>>
	
	
snippet sprite_material_email_alert "Google Material Icons email_alert"
	!include <material/common>
	!include <material/email_alert>
	
	<<$ma_email_alert>>
	
	
snippet sprite_material_email_open_outline "Google Material Icons email_open_outline"
	!include <material/common>
	!include <material/email_open_outline>
	
	<<$ma_email_open_outline>>
	
	
snippet sprite_material_email_open "Google Material Icons email_open"
	!include <material/common>
	!include <material/email_open>
	
	<<$ma_email_open>>
	
	
snippet sprite_material_email_outline "Google Material Icons email_outline"
	!include <material/common>
	!include <material/email_outline>
	
	<<$ma_email_outline>>
	
	
snippet sprite_material_email "Google Material Icons email"
	!include <material/common>
	!include <material/email>
	
	<<$ma_email>>
	
	
snippet sprite_material_email_secure "Google Material Icons email_secure"
	!include <material/common>
	!include <material/email_secure>
	
	<<$ma_email_secure>>
	
	
snippet sprite_material_email_variant "Google Material Icons email_variant"
	!include <material/common>
	!include <material/email_variant>
	
	<<$ma_email_variant>>
	
	
snippet sprite_material_emby "Google Material Icons emby"
	!include <material/common>
	!include <material/emby>
	
	<<$ma_emby>>
	
	
snippet sprite_material_emoticon_cool "Google Material Icons emoticon_cool"
	!include <material/common>
	!include <material/emoticon_cool>
	
	<<$ma_emoticon_cool>>
	
	
snippet sprite_material_emoticon_dead "Google Material Icons emoticon_dead"
	!include <material/common>
	!include <material/emoticon_dead>
	
	<<$ma_emoticon_dead>>
	
	
snippet sprite_material_emoticon_devil "Google Material Icons emoticon_devil"
	!include <material/common>
	!include <material/emoticon_devil>
	
	<<$ma_emoticon_devil>>
	
	
snippet sprite_material_emoticon_excited "Google Material Icons emoticon_excited"
	!include <material/common>
	!include <material/emoticon_excited>
	
	<<$ma_emoticon_excited>>
	
	
snippet sprite_material_emoticon_happy "Google Material Icons emoticon_happy"
	!include <material/common>
	!include <material/emoticon_happy>
	
	<<$ma_emoticon_happy>>
	
	
snippet sprite_material_emoticon_neutral "Google Material Icons emoticon_neutral"
	!include <material/common>
	!include <material/emoticon_neutral>
	
	<<$ma_emoticon_neutral>>
	
	
snippet sprite_material_emoticon_poop "Google Material Icons emoticon_poop"
	!include <material/common>
	!include <material/emoticon_poop>
	
	<<$ma_emoticon_poop>>
	
	
snippet sprite_material_emoticon "Google Material Icons emoticon"
	!include <material/common>
	!include <material/emoticon>
	
	<<$ma_emoticon>>
	
	
snippet sprite_material_emoticon_sad "Google Material Icons emoticon_sad"
	!include <material/common>
	!include <material/emoticon_sad>
	
	<<$ma_emoticon_sad>>
	
	
snippet sprite_material_emoticon_tongue "Google Material Icons emoticon_tongue"
	!include <material/common>
	!include <material/emoticon_tongue>
	
	<<$ma_emoticon_tongue>>
	
	
snippet sprite_material_engine_outline "Google Material Icons engine_outline"
	!include <material/common>
	!include <material/engine_outline>
	
	<<$ma_engine_outline>>
	
	
snippet sprite_material_engine "Google Material Icons engine"
	!include <material/common>
	!include <material/engine>
	
	<<$ma_engine>>
	
	
snippet sprite_material_equal_box "Google Material Icons equal_box"
	!include <material/common>
	!include <material/equal_box>
	
	<<$ma_equal_box>>
	
	
snippet sprite_material_equal "Google Material Icons equal"
	!include <material/common>
	!include <material/equal>
	
	<<$ma_equal>>
	
	
snippet sprite_material_eraser "Google Material Icons eraser"
	!include <material/common>
	!include <material/eraser>
	
	<<$ma_eraser>>
	
	
snippet sprite_material_eraser_variant "Google Material Icons eraser_variant"
	!include <material/common>
	!include <material/eraser_variant>
	
	<<$ma_eraser_variant>>
	
	
snippet sprite_material_escalator "Google Material Icons escalator"
	!include <material/common>
	!include <material/escalator>
	
	<<$ma_escalator>>
	
	
snippet sprite_material_ethernet_cable_off "Google Material Icons ethernet_cable_off"
	!include <material/common>
	!include <material/ethernet_cable_off>
	
	<<$ma_ethernet_cable_off>>
	
	
snippet sprite_material_ethernet_cable "Google Material Icons ethernet_cable"
	!include <material/common>
	!include <material/ethernet_cable>
	
	<<$ma_ethernet_cable>>
	
	
snippet sprite_material_ethernet "Google Material Icons ethernet"
	!include <material/common>
	!include <material/ethernet>
	
	<<$ma_ethernet>>
	
	
snippet sprite_material_etsy "Google Material Icons etsy"
	!include <material/common>
	!include <material/etsy>
	
	<<$ma_etsy>>
	
	
snippet sprite_material_eventbrite "Google Material Icons eventbrite"
	!include <material/common>
	!include <material/eventbrite>
	
	<<$ma_eventbrite>>
	
	
snippet sprite_material_evernote "Google Material Icons evernote"
	!include <material/common>
	!include <material/evernote>
	
	<<$ma_evernote>>
	
	
snippet sprite_material_ev_station "Google Material Icons ev_station"
	!include <material/common>
	!include <material/ev_station>
	
	<<$ma_ev_station>>
	
	
snippet sprite_material_exclamation "Google Material Icons exclamation"
	!include <material/common>
	!include <material/exclamation>
	
	<<$ma_exclamation>>
	
	
snippet sprite_material_exit_to_app "Google Material Icons exit_to_app"
	!include <material/common>
	!include <material/exit_to_app>
	
	<<$ma_exit_to_app>>
	
	
snippet sprite_material_export "Google Material Icons export"
	!include <material/common>
	!include <material/export>
	
	<<$ma_export>>
	
	
snippet sprite_material_eyedropper "Google Material Icons eyedropper"
	!include <material/common>
	!include <material/eyedropper>
	
	<<$ma_eyedropper>>
	
	
snippet sprite_material_eyedropper_variant "Google Material Icons eyedropper_variant"
	!include <material/common>
	!include <material/eyedropper_variant>
	
	<<$ma_eyedropper_variant>>
	
	
snippet sprite_material_eye_off_outline "Google Material Icons eye_off_outline"
	!include <material/common>
	!include <material/eye_off_outline>
	
	<<$ma_eye_off_outline>>
	
	
snippet sprite_material_eye_off "Google Material Icons eye_off"
	!include <material/common>
	!include <material/eye_off>
	
	<<$ma_eye_off>>
	
	
snippet sprite_material_eye_outline "Google Material Icons eye_outline"
	!include <material/common>
	!include <material/eye_outline>
	
	<<$ma_eye_outline>>
	
	
snippet sprite_material_eye "Google Material Icons eye"
	!include <material/common>
	!include <material/eye>
	
	<<$ma_eye>>
	
	
snippet sprite_material_facebook_box "Google Material Icons facebook_box"
	!include <material/common>
	!include <material/facebook_box>
	
	<<$ma_facebook_box>>
	
	
snippet sprite_material_facebook_messenger "Google Material Icons facebook_messenger"
	!include <material/common>
	!include <material/facebook_messenger>
	
	<<$ma_facebook_messenger>>
	
	
snippet sprite_material_facebook "Google Material Icons facebook"
	!include <material/common>
	!include <material/facebook>
	
	<<$ma_facebook>>
	
	
snippet sprite_material_face_profile "Google Material Icons face_profile"
	!include <material/common>
	!include <material/face_profile>
	
	<<$ma_face_profile>>
	
	
snippet sprite_material_face "Google Material Icons face"
	!include <material/common>
	!include <material/face>
	
	<<$ma_face>>
	
	
snippet sprite_material_factory "Google Material Icons factory"
	!include <material/common>
	!include <material/factory>
	
	<<$ma_factory>>
	
	
snippet sprite_material_fan_off "Google Material Icons fan_off"
	!include <material/common>
	!include <material/fan_off>
	
	<<$ma_fan_off>>
	
	
snippet sprite_material_fan "Google Material Icons fan"
	!include <material/common>
	!include <material/fan>
	
	<<$ma_fan>>
	
	
snippet sprite_material_fast_forward_outline "Google Material Icons fast_forward_outline"
	!include <material/common>
	!include <material/fast_forward_outline>
	
	<<$ma_fast_forward_outline>>
	
	
snippet sprite_material_fast_forward "Google Material Icons fast_forward"
	!include <material/common>
	!include <material/fast_forward>
	
	<<$ma_fast_forward>>
	
	
snippet sprite_material_fax "Google Material Icons fax"
	!include <material/common>
	!include <material/fax>
	
	<<$ma_fax>>
	
	
snippet sprite_material_feather "Google Material Icons feather"
	!include <material/common>
	!include <material/feather>
	
	<<$ma_feather>>
	
	
snippet sprite_material_ferry "Google Material Icons ferry"
	!include <material/common>
	!include <material/ferry>
	
	<<$ma_ferry>>
	
	
snippet sprite_material_file_account "Google Material Icons file_account"
	!include <material/common>
	!include <material/file_account>
	
	<<$ma_file_account>>
	
	
snippet sprite_material_file_chart "Google Material Icons file_chart"
	!include <material/common>
	!include <material/file_chart>
	
	<<$ma_file_chart>>
	
	
snippet sprite_material_file_check "Google Material Icons file_check"
	!include <material/common>
	!include <material/file_check>
	
	<<$ma_file_check>>
	
	
snippet sprite_material_file_cloud "Google Material Icons file_cloud"
	!include <material/common>
	!include <material/file_cloud>
	
	<<$ma_file_cloud>>
	
	
snippet sprite_material_file_delimited "Google Material Icons file_delimited"
	!include <material/common>
	!include <material/file_delimited>
	
	<<$ma_file_delimited>>
	
	
snippet sprite_material_file_document_box "Google Material Icons file_document_box"
	!include <material/common>
	!include <material/file_document_box>
	
	<<$ma_file_document_box>>
	
	
snippet sprite_material_file_document "Google Material Icons file_document"
	!include <material/common>
	!include <material/file_document>
	
	<<$ma_file_document>>
	
	
snippet sprite_material_file_excel_box "Google Material Icons file_excel_box"
	!include <material/common>
	!include <material/file_excel_box>
	
	<<$ma_file_excel_box>>
	
	
snippet sprite_material_file_excel "Google Material Icons file_excel"
	!include <material/common>
	!include <material/file_excel>
	
	<<$ma_file_excel>>
	
	
snippet sprite_material_file_export "Google Material Icons file_export"
	!include <material/common>
	!include <material/file_export>
	
	<<$ma_file_export>>
	
	
snippet sprite_material_file_find "Google Material Icons file_find"
	!include <material/common>
	!include <material/file_find>
	
	<<$ma_file_find>>
	
	
snippet sprite_material_file_hidden "Google Material Icons file_hidden"
	!include <material/common>
	!include <material/file_hidden>
	
	<<$ma_file_hidden>>
	
	
snippet sprite_material_file_image_box "Google Material Icons file_image_box"
	!include <material/common>
	!include <material/file_image_box>
	
	<<$ma_file_image_box>>
	
	
snippet sprite_material_file_image "Google Material Icons file_image"
	!include <material/common>
	!include <material/file_image>
	
	<<$ma_file_image>>
	
	
snippet sprite_material_file_import "Google Material Icons file_import"
	!include <material/common>
	!include <material/file_import>
	
	<<$ma_file_import>>
	
	
snippet sprite_material_file_lock "Google Material Icons file_lock"
	!include <material/common>
	!include <material/file_lock>
	
	<<$ma_file_lock>>
	
	
snippet sprite_material_file_move "Google Material Icons file_move"
	!include <material/common>
	!include <material/file_move>
	
	<<$ma_file_move>>
	
	
snippet sprite_material_file_multiple "Google Material Icons file_multiple"
	!include <material/common>
	!include <material/file_multiple>
	
	<<$ma_file_multiple>>
	
	
snippet sprite_material_file_music "Google Material Icons file_music"
	!include <material/common>
	!include <material/file_music>
	
	<<$ma_file_music>>
	
	
snippet sprite_material_file_outline "Google Material Icons file_outline"
	!include <material/common>
	!include <material/file_outline>
	
	<<$ma_file_outline>>
	
	
snippet sprite_material_file_pdf_box "Google Material Icons file_pdf_box"
	!include <material/common>
	!include <material/file_pdf_box>
	
	<<$ma_file_pdf_box>>
	
	
snippet sprite_material_file_pdf "Google Material Icons file_pdf"
	!include <material/common>
	!include <material/file_pdf>
	
	<<$ma_file_pdf>>
	
	
snippet sprite_material_file_percent "Google Material Icons file_percent"
	!include <material/common>
	!include <material/file_percent>
	
	<<$ma_file_percent>>
	
	
snippet sprite_material_file_plus "Google Material Icons file_plus"
	!include <material/common>
	!include <material/file_plus>
	
	<<$ma_file_plus>>
	
	
snippet sprite_material_file_powerpoint_box "Google Material Icons file_powerpoint_box"
	!include <material/common>
	!include <material/file_powerpoint_box>
	
	<<$ma_file_powerpoint_box>>
	
	
snippet sprite_material_file_powerpoint "Google Material Icons file_powerpoint"
	!include <material/common>
	!include <material/file_powerpoint>
	
	<<$ma_file_powerpoint>>
	
	
snippet sprite_material_file_presentation_box "Google Material Icons file_presentation_box"
	!include <material/common>
	!include <material/file_presentation_box>
	
	<<$ma_file_presentation_box>>
	
	
snippet sprite_material_file "Google Material Icons file"
	!include <material/common>
	!include <material/file>
	
	<<$ma_file>>
	
	
snippet sprite_material_file_restore "Google Material Icons file_restore"
	!include <material/common>
	!include <material/file_restore>
	
	<<$ma_file_restore>>
	
	
snippet sprite_material_file_send "Google Material Icons file_send"
	!include <material/common>
	!include <material/file_send>
	
	<<$ma_file_send>>
	
	
snippet sprite_material_file_tree "Google Material Icons file_tree"
	!include <material/common>
	!include <material/file_tree>
	
	<<$ma_file_tree>>
	
	
snippet sprite_material_file_video "Google Material Icons file_video"
	!include <material/common>
	!include <material/file_video>
	
	<<$ma_file_video>>
	
	
snippet sprite_material_file_word_box "Google Material Icons file_word_box"
	!include <material/common>
	!include <material/file_word_box>
	
	<<$ma_file_word_box>>
	
	
snippet sprite_material_file_word "Google Material Icons file_word"
	!include <material/common>
	!include <material/file_word>
	
	<<$ma_file_word>>
	
	
snippet sprite_material_file_xml "Google Material Icons file_xml"
	!include <material/common>
	!include <material/file_xml>
	
	<<$ma_file_xml>>
	
	
snippet sprite_material_fill "Google Material Icons fill"
	!include <material/common>
	!include <material/fill>
	
	<<$ma_fill>>
	
	
snippet sprite_material_film "Google Material Icons film"
	!include <material/common>
	!include <material/film>
	
	<<$ma_film>>
	
	
snippet sprite_material_filmstrip_off "Google Material Icons filmstrip_off"
	!include <material/common>
	!include <material/filmstrip_off>
	
	<<$ma_filmstrip_off>>
	
	
snippet sprite_material_filmstrip "Google Material Icons filmstrip"
	!include <material/common>
	!include <material/filmstrip>
	
	<<$ma_filmstrip>>
	
	
snippet sprite_material_filter_outline "Google Material Icons filter_outline"
	!include <material/common>
	!include <material/filter_outline>
	
	<<$ma_filter_outline>>
	
	
snippet sprite_material_filter "Google Material Icons filter"
	!include <material/common>
	!include <material/filter>
	
	<<$ma_filter>>
	
	
snippet sprite_material_filter_remove_outline "Google Material Icons filter_remove_outline"
	!include <material/common>
	!include <material/filter_remove_outline>
	
	<<$ma_filter_remove_outline>>
	
	
snippet sprite_material_filter_remove "Google Material Icons filter_remove"
	!include <material/common>
	!include <material/filter_remove>
	
	<<$ma_filter_remove>>
	
	
snippet sprite_material_filter_variant "Google Material Icons filter_variant"
	!include <material/common>
	!include <material/filter_variant>
	
	<<$ma_filter_variant>>
	
	
snippet sprite_material_find_replace "Google Material Icons find_replace"
	!include <material/common>
	!include <material/find_replace>
	
	<<$ma_find_replace>>
	
	
snippet sprite_material_fingerprint "Google Material Icons fingerprint"
	!include <material/common>
	!include <material/fingerprint>
	
	<<$ma_fingerprint>>
	
	
snippet sprite_material_fire "Google Material Icons fire"
	!include <material/common>
	!include <material/fire>
	
	<<$ma_fire>>
	
	
snippet sprite_material_fish "Google Material Icons fish"
	!include <material/common>
	!include <material/fish>
	
	<<$ma_fish>>
	
	
snippet sprite_material_flag_checkered "Google Material Icons flag_checkered"
	!include <material/common>
	!include <material/flag_checkered>
	
	<<$ma_flag_checkered>>
	
	
snippet sprite_material_flag_checkered_variant "Google Material Icons flag_checkered_variant"
	!include <material/common>
	!include <material/flag_checkered_variant>
	
	<<$ma_flag_checkered_variant>>
	
	
snippet sprite_material_flag_outline "Google Material Icons flag_outline"
	!include <material/common>
	!include <material/flag_outline>
	
	<<$ma_flag_outline>>
	
	
snippet sprite_material_flag_outline_variant "Google Material Icons flag_outline_variant"
	!include <material/common>
	!include <material/flag_outline_variant>
	
	<<$ma_flag_outline_variant>>
	
	
snippet sprite_material_flag "Google Material Icons flag"
	!include <material/common>
	!include <material/flag>
	
	<<$ma_flag>>
	
	
snippet sprite_material_flag_triangle "Google Material Icons flag_triangle"
	!include <material/common>
	!include <material/flag_triangle>
	
	<<$ma_flag_triangle>>
	
	
snippet sprite_material_flag_variant "Google Material Icons flag_variant"
	!include <material/common>
	!include <material/flag_variant>
	
	<<$ma_flag_variant>>
	
	
snippet sprite_material_flash_auto "Google Material Icons flash_auto"
	!include <material/common>
	!include <material/flash_auto>
	
	<<$ma_flash_auto>>
	
	
snippet sprite_material_flash_circle "Google Material Icons flash_circle"
	!include <material/common>
	!include <material/flash_circle>
	
	<<$ma_flash_circle>>
	
	
snippet sprite_material_flashlight_off "Google Material Icons flashlight_off"
	!include <material/common>
	!include <material/flashlight_off>
	
	<<$ma_flashlight_off>>
	
	
snippet sprite_material_flashlight "Google Material Icons flashlight"
	!include <material/common>
	!include <material/flashlight>
	
	<<$ma_flashlight>>
	
	
snippet sprite_material_flash_off "Google Material Icons flash_off"
	!include <material/common>
	!include <material/flash_off>
	
	<<$ma_flash_off>>
	
	
snippet sprite_material_flash_outline "Google Material Icons flash_outline"
	!include <material/common>
	!include <material/flash_outline>
	
	<<$ma_flash_outline>>
	
	
snippet sprite_material_flash "Google Material Icons flash"
	!include <material/common>
	!include <material/flash>
	
	<<$ma_flash>>
	
	
snippet sprite_material_flash_red_eye "Google Material Icons flash_red_eye"
	!include <material/common>
	!include <material/flash_red_eye>
	
	<<$ma_flash_red_eye>>
	
	
snippet sprite_material_flask_empty_outline "Google Material Icons flask_empty_outline"
	!include <material/common>
	!include <material/flask_empty_outline>
	
	<<$ma_flask_empty_outline>>
	
	
snippet sprite_material_flask_empty "Google Material Icons flask_empty"
	!include <material/common>
	!include <material/flask_empty>
	
	<<$ma_flask_empty>>
	
	
snippet sprite_material_flask_outline "Google Material Icons flask_outline"
	!include <material/common>
	!include <material/flask_outline>
	
	<<$ma_flask_outline>>
	
	
snippet sprite_material_flask "Google Material Icons flask"
	!include <material/common>
	!include <material/flask>
	
	<<$ma_flask>>
	
	
snippet sprite_material_flattr "Google Material Icons flattr"
	!include <material/common>
	!include <material/flattr>
	
	<<$ma_flattr>>
	
	
snippet sprite_material_flickr_after "Google Material Icons flickr_after"
	!include <material/common>
	!include <material/flickr_after>
	
	<<$ma_flickr_after>>
	
	
snippet sprite_material_flickr_before "Google Material Icons flickr_before"
	!include <material/common>
	!include <material/flickr_before>
	
	<<$ma_flickr_before>>
	
	
snippet sprite_material_flip_to_back "Google Material Icons flip_to_back"
	!include <material/common>
	!include <material/flip_to_back>
	
	<<$ma_flip_to_back>>
	
	
snippet sprite_material_flip_to_front "Google Material Icons flip_to_front"
	!include <material/common>
	!include <material/flip_to_front>
	
	<<$ma_flip_to_front>>
	
	
snippet sprite_material_floor_plan "Google Material Icons floor_plan"
	!include <material/common>
	!include <material/floor_plan>
	
	<<$ma_floor_plan>>
	
	
snippet sprite_material_floppy "Google Material Icons floppy"
	!include <material/common>
	!include <material/floppy>
	
	<<$ma_floppy>>
	
	
snippet sprite_material_flower "Google Material Icons flower"
	!include <material/common>
	!include <material/flower>
	
	<<$ma_flower>>
	
	
snippet sprite_material_folder_account "Google Material Icons folder_account"
	!include <material/common>
	!include <material/folder_account>
	
	<<$ma_folder_account>>
	
	
snippet sprite_material_folder_download "Google Material Icons folder_download"
	!include <material/common>
	!include <material/folder_download>
	
	<<$ma_folder_download>>
	
	
snippet sprite_material_folder_google_drive "Google Material Icons folder_google_drive"
	!include <material/common>
	!include <material/folder_google_drive>
	
	<<$ma_folder_google_drive>>
	
	
snippet sprite_material_folder_image "Google Material Icons folder_image"
	!include <material/common>
	!include <material/folder_image>
	
	<<$ma_folder_image>>
	
	
snippet sprite_material_folder_lock_open "Google Material Icons folder_lock_open"
	!include <material/common>
	!include <material/folder_lock_open>
	
	<<$ma_folder_lock_open>>
	
	
snippet sprite_material_folder_lock "Google Material Icons folder_lock"
	!include <material/common>
	!include <material/folder_lock>
	
	<<$ma_folder_lock>>
	
	
snippet sprite_material_folder_move "Google Material Icons folder_move"
	!include <material/common>
	!include <material/folder_move>
	
	<<$ma_folder_move>>
	
	
snippet sprite_material_folder_multiple_image "Google Material Icons folder_multiple_image"
	!include <material/common>
	!include <material/folder_multiple_image>
	
	<<$ma_folder_multiple_image>>
	
	
snippet sprite_material_folder_multiple_outline "Google Material Icons folder_multiple_outline"
	!include <material/common>
	!include <material/folder_multiple_outline>
	
	<<$ma_folder_multiple_outline>>
	
	
snippet sprite_material_folder_multiple "Google Material Icons folder_multiple"
	!include <material/common>
	!include <material/folder_multiple>
	
	<<$ma_folder_multiple>>
	
	
snippet sprite_material_folder_open "Google Material Icons folder_open"
	!include <material/common>
	!include <material/folder_open>
	
	<<$ma_folder_open>>
	
	
snippet sprite_material_folder_outline_lock "Google Material Icons folder_outline_lock"
	!include <material/common>
	!include <material/folder_outline_lock>
	
	<<$ma_folder_outline_lock>>
	
	
snippet sprite_material_folder_outline "Google Material Icons folder_outline"
	!include <material/common>
	!include <material/folder_outline>
	
	<<$ma_folder_outline>>
	
	
snippet sprite_material_folder_plus "Google Material Icons folder_plus"
	!include <material/common>
	!include <material/folder_plus>
	
	<<$ma_folder_plus>>
	
	
snippet sprite_material_folder "Google Material Icons folder"
	!include <material/common>
	!include <material/folder>
	
	<<$ma_folder>>
	
	
snippet sprite_material_folder_remove "Google Material Icons folder_remove"
	!include <material/common>
	!include <material/folder_remove>
	
	<<$ma_folder_remove>>
	
	
snippet sprite_material_folder_star "Google Material Icons folder_star"
	!include <material/common>
	!include <material/folder_star>
	
	<<$ma_folder_star>>
	
	
snippet sprite_material_folder_upload "Google Material Icons folder_upload"
	!include <material/common>
	!include <material/folder_upload>
	
	<<$ma_folder_upload>>
	
	
snippet sprite_material_font_awesome "Google Material Icons font_awesome"
	!include <material/common>
	!include <material/font_awesome>
	
	<<$ma_font_awesome>>
	
	
snippet sprite_material_food_apple "Google Material Icons food_apple"
	!include <material/common>
	!include <material/food_apple>
	
	<<$ma_food_apple>>
	
	
snippet sprite_material_food_croissant "Google Material Icons food_croissant"
	!include <material/common>
	!include <material/food_croissant>
	
	<<$ma_food_croissant>>
	
	
snippet sprite_material_food_fork_drink "Google Material Icons food_fork_drink"
	!include <material/common>
	!include <material/food_fork_drink>
	
	<<$ma_food_fork_drink>>
	
	
snippet sprite_material_food_off "Google Material Icons food_off"
	!include <material/common>
	!include <material/food_off>
	
	<<$ma_food_off>>
	
	
snippet sprite_material_food "Google Material Icons food"
	!include <material/common>
	!include <material/food>
	
	<<$ma_food>>
	
	
snippet sprite_material_food_variant "Google Material Icons food_variant"
	!include <material/common>
	!include <material/food_variant>
	
	<<$ma_food_variant>>
	
	
snippet sprite_material_football_australian "Google Material Icons football_australian"
	!include <material/common>
	!include <material/football_australian>
	
	<<$ma_football_australian>>
	
	
snippet sprite_material_football_helmet "Google Material Icons football_helmet"
	!include <material/common>
	!include <material/football_helmet>
	
	<<$ma_football_helmet>>
	
	
snippet sprite_material_football "Google Material Icons football"
	!include <material/common>
	!include <material/football>
	
	<<$ma_football>>
	
	
snippet sprite_material_footer "Google Material Icons footer"
	!include <material/common>
	!include <material/footer>
	
	<<$ma_footer>>
	
	
snippet sprite_material_forklift "Google Material Icons forklift"
	!include <material/common>
	!include <material/forklift>
	
	<<$ma_forklift>>
	
	
snippet sprite_material_format_align_bottom "Google Material Icons format_align_bottom"
	!include <material/common>
	!include <material/format_align_bottom>
	
	<<$ma_format_align_bottom>>
	
	
snippet sprite_material_format_align_center "Google Material Icons format_align_center"
	!include <material/common>
	!include <material/format_align_center>
	
	<<$ma_format_align_center>>
	
	
snippet sprite_material_format_align_justify "Google Material Icons format_align_justify"
	!include <material/common>
	!include <material/format_align_justify>
	
	<<$ma_format_align_justify>>
	
	
snippet sprite_material_format_align_left "Google Material Icons format_align_left"
	!include <material/common>
	!include <material/format_align_left>
	
	<<$ma_format_align_left>>
	
	
snippet sprite_material_format_align_middle "Google Material Icons format_align_middle"
	!include <material/common>
	!include <material/format_align_middle>
	
	<<$ma_format_align_middle>>
	
	
snippet sprite_material_format_align_right "Google Material Icons format_align_right"
	!include <material/common>
	!include <material/format_align_right>
	
	<<$ma_format_align_right>>
	
	
snippet sprite_material_format_align_top "Google Material Icons format_align_top"
	!include <material/common>
	!include <material/format_align_top>
	
	<<$ma_format_align_top>>
	
	
snippet sprite_material_format_annotation_plus "Google Material Icons format_annotation_plus"
	!include <material/common>
	!include <material/format_annotation_plus>
	
	<<$ma_format_annotation_plus>>
	
	
snippet sprite_material_format_bold "Google Material Icons format_bold"
	!include <material/common>
	!include <material/format_bold>
	
	<<$ma_format_bold>>
	
	
snippet sprite_material_format_clear "Google Material Icons format_clear"
	!include <material/common>
	!include <material/format_clear>
	
	<<$ma_format_clear>>
	
	
snippet sprite_material_format_color_fill "Google Material Icons format_color_fill"
	!include <material/common>
	!include <material/format_color_fill>
	
	<<$ma_format_color_fill>>
	
	
snippet sprite_material_format_color "Google Material Icons format_color"
	!include <material/common>
	!include <material/format_color>
	
	<<$ma_format_color>>
	
	
snippet sprite_material_format_color_text "Google Material Icons format_color_text"
	!include <material/common>
	!include <material/format_color_text>
	
	<<$ma_format_color_text>>
	
	
snippet sprite_material_format_float_center "Google Material Icons format_float_center"
	!include <material/common>
	!include <material/format_float_center>
	
	<<$ma_format_float_center>>
	
	
snippet sprite_material_format_float_left "Google Material Icons format_float_left"
	!include <material/common>
	!include <material/format_float_left>
	
	<<$ma_format_float_left>>
	
	
snippet sprite_material_format_float_none "Google Material Icons format_float_none"
	!include <material/common>
	!include <material/format_float_none>
	
	<<$ma_format_float_none>>
	
	
snippet sprite_material_format_float_right "Google Material Icons format_float_right"
	!include <material/common>
	!include <material/format_float_right>
	
	<<$ma_format_float_right>>
	
	
snippet sprite_material_format_font "Google Material Icons format_font"
	!include <material/common>
	!include <material/format_font>
	
	<<$ma_format_font>>
	
	
snippet sprite_material_format_header_1 "Google Material Icons format_header_1"
	!include <material/common>
	!include <material/format_header_1>
	
	<<$ma_format_header_1>>
	
	
snippet sprite_material_format_header_2 "Google Material Icons format_header_2"
	!include <material/common>
	!include <material/format_header_2>
	
	<<$ma_format_header_2>>
	
	
snippet sprite_material_format_header_3 "Google Material Icons format_header_3"
	!include <material/common>
	!include <material/format_header_3>
	
	<<$ma_format_header_3>>
	
	
snippet sprite_material_format_header_4 "Google Material Icons format_header_4"
	!include <material/common>
	!include <material/format_header_4>
	
	<<$ma_format_header_4>>
	
	
snippet sprite_material_format_header_5 "Google Material Icons format_header_5"
	!include <material/common>
	!include <material/format_header_5>
	
	<<$ma_format_header_5>>
	
	
snippet sprite_material_format_header_6 "Google Material Icons format_header_6"
	!include <material/common>
	!include <material/format_header_6>
	
	<<$ma_format_header_6>>
	
	
snippet sprite_material_format_header_decrease "Google Material Icons format_header_decrease"
	!include <material/common>
	!include <material/format_header_decrease>
	
	<<$ma_format_header_decrease>>
	
	
snippet sprite_material_format_header_down "Google Material Icons format_header_down"
	!include <material/common>
	!include <material/format_header_down>
	
	<<$ma_format_header_down>>
	
	
snippet sprite_material_format_header_equal "Google Material Icons format_header_equal"
	!include <material/common>
	!include <material/format_header_equal>
	
	<<$ma_format_header_equal>>
	
	
snippet sprite_material_format_header_increase "Google Material Icons format_header_increase"
	!include <material/common>
	!include <material/format_header_increase>
	
	<<$ma_format_header_increase>>
	
	
snippet sprite_material_format_header_pound "Google Material Icons format_header_pound"
	!include <material/common>
	!include <material/format_header_pound>
	
	<<$ma_format_header_pound>>
	
	
snippet sprite_material_format_header_up "Google Material Icons format_header_up"
	!include <material/common>
	!include <material/format_header_up>
	
	<<$ma_format_header_up>>
	
	
snippet sprite_material_format_horizontal_align_center "Google Material Icons format_horizontal_align_center"
	!include <material/common>
	!include <material/format_horizontal_align_center>
	
	<<$ma_format_horizontal_align_center>>
	
	
snippet sprite_material_format_horizontal_align_left "Google Material Icons format_horizontal_align_left"
	!include <material/common>
	!include <material/format_horizontal_align_left>
	
	<<$ma_format_horizontal_align_left>>
	
	
snippet sprite_material_format_horizontal_align_right "Google Material Icons format_horizontal_align_right"
	!include <material/common>
	!include <material/format_horizontal_align_right>
	
	<<$ma_format_horizontal_align_right>>
	
	
snippet sprite_material_format_indent_decrease "Google Material Icons format_indent_decrease"
	!include <material/common>
	!include <material/format_indent_decrease>
	
	<<$ma_format_indent_decrease>>
	
	
snippet sprite_material_format_indent_increase "Google Material Icons format_indent_increase"
	!include <material/common>
	!include <material/format_indent_increase>
	
	<<$ma_format_indent_increase>>
	
	
snippet sprite_material_format_italic "Google Material Icons format_italic"
	!include <material/common>
	!include <material/format_italic>
	
	<<$ma_format_italic>>
	
	
snippet sprite_material_format_line_spacing "Google Material Icons format_line_spacing"
	!include <material/common>
	!include <material/format_line_spacing>
	
	<<$ma_format_line_spacing>>
	
	
snippet sprite_material_format_line_style "Google Material Icons format_line_style"
	!include <material/common>
	!include <material/format_line_style>
	
	<<$ma_format_line_style>>
	
	
snippet sprite_material_format_line_weight "Google Material Icons format_line_weight"
	!include <material/common>
	!include <material/format_line_weight>
	
	<<$ma_format_line_weight>>
	
	
snippet sprite_material_format_list_bulleted "Google Material Icons format_list_bulleted"
	!include <material/common>
	!include <material/format_list_bulleted>
	
	<<$ma_format_list_bulleted>>
	
	
snippet sprite_material_format_list_bulleted_type "Google Material Icons format_list_bulleted_type"
	!include <material/common>
	!include <material/format_list_bulleted_type>
	
	<<$ma_format_list_bulleted_type>>
	
	
snippet sprite_material_format_list_checks "Google Material Icons format_list_checks"
	!include <material/common>
	!include <material/format_list_checks>
	
	<<$ma_format_list_checks>>
	
	
snippet sprite_material_format_list_numbers "Google Material Icons format_list_numbers"
	!include <material/common>
	!include <material/format_list_numbers>
	
	<<$ma_format_list_numbers>>
	
	
snippet sprite_material_format_page_break "Google Material Icons format_page_break"
	!include <material/common>
	!include <material/format_page_break>
	
	<<$ma_format_page_break>>
	
	
snippet sprite_material_format_paint "Google Material Icons format_paint"
	!include <material/common>
	!include <material/format_paint>
	
	<<$ma_format_paint>>
	
	
snippet sprite_material_format_paragraph "Google Material Icons format_paragraph"
	!include <material/common>
	!include <material/format_paragraph>
	
	<<$ma_format_paragraph>>
	
	
snippet sprite_material_format_pilcrow "Google Material Icons format_pilcrow"
	!include <material/common>
	!include <material/format_pilcrow>
	
	<<$ma_format_pilcrow>>
	
	
snippet sprite_material_format_quote_close "Google Material Icons format_quote_close"
	!include <material/common>
	!include <material/format_quote_close>
	
	<<$ma_format_quote_close>>
	
	
snippet sprite_material_format_quote_open "Google Material Icons format_quote_open"
	!include <material/common>
	!include <material/format_quote_open>
	
	<<$ma_format_quote_open>>
	
	
snippet sprite_material_format_rotate_90 "Google Material Icons format_rotate_90"
	!include <material/common>
	!include <material/format_rotate_90>
	
	<<$ma_format_rotate_90>>
	
	
snippet sprite_material_format_section "Google Material Icons format_section"
	!include <material/common>
	!include <material/format_section>
	
	<<$ma_format_section>>
	
	
snippet sprite_material_format_size "Google Material Icons format_size"
	!include <material/common>
	!include <material/format_size>
	
	<<$ma_format_size>>
	
	
snippet sprite_material_format_strikethrough "Google Material Icons format_strikethrough"
	!include <material/common>
	!include <material/format_strikethrough>
	
	<<$ma_format_strikethrough>>
	
	
snippet sprite_material_format_strikethrough_variant "Google Material Icons format_strikethrough_variant"
	!include <material/common>
	!include <material/format_strikethrough_variant>
	
	<<$ma_format_strikethrough_variant>>
	
	
snippet sprite_material_format_subscript "Google Material Icons format_subscript"
	!include <material/common>
	!include <material/format_subscript>
	
	<<$ma_format_subscript>>
	
	
snippet sprite_material_format_superscript "Google Material Icons format_superscript"
	!include <material/common>
	!include <material/format_superscript>
	
	<<$ma_format_superscript>>
	
	
snippet sprite_material_format_textdirection_l_to_r "Google Material Icons format_textdirection_l_to_r"
	!include <material/common>
	!include <material/format_textdirection_l_to_r>
	
	<<$ma_format_textdirection_l_to_r>>
	
	
snippet sprite_material_format_textdirection_r_to_l "Google Material Icons format_textdirection_r_to_l"
	!include <material/common>
	!include <material/format_textdirection_r_to_l>
	
	<<$ma_format_textdirection_r_to_l>>
	
	
snippet sprite_material_format_text "Google Material Icons format_text"
	!include <material/common>
	!include <material/format_text>
	
	<<$ma_format_text>>
	
	
snippet sprite_material_format_title "Google Material Icons format_title"
	!include <material/common>
	!include <material/format_title>
	
	<<$ma_format_title>>
	
	
snippet sprite_material_format_underline "Google Material Icons format_underline"
	!include <material/common>
	!include <material/format_underline>
	
	<<$ma_format_underline>>
	
	
snippet sprite_material_format_vertical_align_bottom "Google Material Icons format_vertical_align_bottom"
	!include <material/common>
	!include <material/format_vertical_align_bottom>
	
	<<$ma_format_vertical_align_bottom>>
	
	
snippet sprite_material_format_vertical_align_center "Google Material Icons format_vertical_align_center"
	!include <material/common>
	!include <material/format_vertical_align_center>
	
	<<$ma_format_vertical_align_center>>
	
	
snippet sprite_material_format_vertical_align_top "Google Material Icons format_vertical_align_top"
	!include <material/common>
	!include <material/format_vertical_align_top>
	
	<<$ma_format_vertical_align_top>>
	
	
snippet sprite_material_format_wrap_inline "Google Material Icons format_wrap_inline"
	!include <material/common>
	!include <material/format_wrap_inline>
	
	<<$ma_format_wrap_inline>>
	
	
snippet sprite_material_format_wrap_square "Google Material Icons format_wrap_square"
	!include <material/common>
	!include <material/format_wrap_square>
	
	<<$ma_format_wrap_square>>
	
	
snippet sprite_material_format_wrap_tight "Google Material Icons format_wrap_tight"
	!include <material/common>
	!include <material/format_wrap_tight>
	
	<<$ma_format_wrap_tight>>
	
	
snippet sprite_material_format_wrap_top_bottom "Google Material Icons format_wrap_top_bottom"
	!include <material/common>
	!include <material/format_wrap_top_bottom>
	
	<<$ma_format_wrap_top_bottom>>
	
	
snippet sprite_material_forum_outline "Google Material Icons forum_outline"
	!include <material/common>
	!include <material/forum_outline>
	
	<<$ma_forum_outline>>
	
	
snippet sprite_material_forum "Google Material Icons forum"
	!include <material/common>
	!include <material/forum>
	
	<<$ma_forum>>
	
	
snippet sprite_material_forward "Google Material Icons forward"
	!include <material/common>
	!include <material/forward>
	
	<<$ma_forward>>
	
	
snippet sprite_material_foursquare "Google Material Icons foursquare"
	!include <material/common>
	!include <material/foursquare>
	
	<<$ma_foursquare>>
	
	
snippet sprite_material_fridge_filled_bottom "Google Material Icons fridge_filled_bottom"
	!include <material/common>
	!include <material/fridge_filled_bottom>
	
	<<$ma_fridge_filled_bottom>>
	
	
snippet sprite_material_fridge_filled "Google Material Icons fridge_filled"
	!include <material/common>
	!include <material/fridge_filled>
	
	<<$ma_fridge_filled>>
	
	
snippet sprite_material_fridge_filled_top "Google Material Icons fridge_filled_top"
	!include <material/common>
	!include <material/fridge_filled_top>
	
	<<$ma_fridge_filled_top>>
	
	
snippet sprite_material_fridge "Google Material Icons fridge"
	!include <material/common>
	!include <material/fridge>
	
	<<$ma_fridge>>
	
	
snippet sprite_material_fuel "Google Material Icons fuel"
	!include <material/common>
	!include <material/fuel>
	
	<<$ma_fuel>>
	
	
snippet sprite_material_fullscreen_exit "Google Material Icons fullscreen_exit"
	!include <material/common>
	!include <material/fullscreen_exit>
	
	<<$ma_fullscreen_exit>>
	
	
snippet sprite_material_fullscreen "Google Material Icons fullscreen"
	!include <material/common>
	!include <material/fullscreen>
	
	<<$ma_fullscreen>>
	
	
snippet sprite_material_function "Google Material Icons function"
	!include <material/common>
	!include <material/function>
	
	<<$ma_function>>
	
	
snippet sprite_material_gamepad "Google Material Icons gamepad"
	!include <material/common>
	!include <material/gamepad>
	
	<<$ma_gamepad>>
	
	
snippet sprite_material_gamepad_variant "Google Material Icons gamepad_variant"
	!include <material/common>
	!include <material/gamepad_variant>
	
	<<$ma_gamepad_variant>>
	
	
snippet sprite_material_garage_open "Google Material Icons garage_open"
	!include <material/common>
	!include <material/garage_open>
	
	<<$ma_garage_open>>
	
	
snippet sprite_material_garage "Google Material Icons garage"
	!include <material/common>
	!include <material/garage>
	
	<<$ma_garage>>
	
	
snippet sprite_material_gas_cylinder "Google Material Icons gas_cylinder"
	!include <material/common>
	!include <material/gas_cylinder>
	
	<<$ma_gas_cylinder>>
	
	
snippet sprite_material_gas_station "Google Material Icons gas_station"
	!include <material/common>
	!include <material/gas_station>
	
	<<$ma_gas_station>>
	
	
snippet sprite_material_gate "Google Material Icons gate"
	!include <material/common>
	!include <material/gate>
	
	<<$ma_gate>>
	
	
snippet sprite_material_gauge "Google Material Icons gauge"
	!include <material/common>
	!include <material/gauge>
	
	<<$ma_gauge>>
	
	
snippet sprite_material_gavel "Google Material Icons gavel"
	!include <material/common>
	!include <material/gavel>
	
	<<$ma_gavel>>
	
	
snippet sprite_material_gender_female "Google Material Icons gender_female"
	!include <material/common>
	!include <material/gender_female>
	
	<<$ma_gender_female>>
	
	
snippet sprite_material_gender_male_female "Google Material Icons gender_male_female"
	!include <material/common>
	!include <material/gender_male_female>
	
	<<$ma_gender_male_female>>
	
	
snippet sprite_material_gender_male "Google Material Icons gender_male"
	!include <material/common>
	!include <material/gender_male>
	
	<<$ma_gender_male>>
	
	
snippet sprite_material_gender_transgender "Google Material Icons gender_transgender"
	!include <material/common>
	!include <material/gender_transgender>
	
	<<$ma_gender_transgender>>
	
	
snippet sprite_material_gesture_double_tap "Google Material Icons gesture_double_tap"
	!include <material/common>
	!include <material/gesture_double_tap>
	
	<<$ma_gesture_double_tap>>
	
	
snippet sprite_material_gesture "Google Material Icons gesture"
	!include <material/common>
	!include <material/gesture>
	
	<<$ma_gesture>>
	
	
snippet sprite_material_gesture_swipe_down "Google Material Icons gesture_swipe_down"
	!include <material/common>
	!include <material/gesture_swipe_down>
	
	<<$ma_gesture_swipe_down>>
	
	
snippet sprite_material_gesture_swipe_left "Google Material Icons gesture_swipe_left"
	!include <material/common>
	!include <material/gesture_swipe_left>
	
	<<$ma_gesture_swipe_left>>
	
	
snippet sprite_material_gesture_swipe_right "Google Material Icons gesture_swipe_right"
	!include <material/common>
	!include <material/gesture_swipe_right>
	
	<<$ma_gesture_swipe_right>>
	
	
snippet sprite_material_gesture_swipe_up "Google Material Icons gesture_swipe_up"
	!include <material/common>
	!include <material/gesture_swipe_up>
	
	<<$ma_gesture_swipe_up>>
	
	
snippet sprite_material_gesture_tap "Google Material Icons gesture_tap"
	!include <material/common>
	!include <material/gesture_tap>
	
	<<$ma_gesture_tap>>
	
	
snippet sprite_material_gesture_two_double_tap "Google Material Icons gesture_two_double_tap"
	!include <material/common>
	!include <material/gesture_two_double_tap>
	
	<<$ma_gesture_two_double_tap>>
	
	
snippet sprite_material_gesture_two_tap "Google Material Icons gesture_two_tap"
	!include <material/common>
	!include <material/gesture_two_tap>
	
	<<$ma_gesture_two_tap>>
	
	
snippet sprite_material_ghost "Google Material Icons ghost"
	!include <material/common>
	!include <material/ghost>
	
	<<$ma_ghost>>
	
	
snippet sprite_material_gift "Google Material Icons gift"
	!include <material/common>
	!include <material/gift>
	
	<<$ma_gift>>
	
	
snippet sprite_material_github_box "Google Material Icons github_box"
	!include <material/common>
	!include <material/github_box>
	
	<<$ma_github_box>>
	
	
snippet sprite_material_github_circle "Google Material Icons github_circle"
	!include <material/common>
	!include <material/github_circle>
	
	<<$ma_github_circle>>
	
	
snippet sprite_material_github_face "Google Material Icons github_face"
	!include <material/common>
	!include <material/github_face>
	
	<<$ma_github_face>>
	
	
snippet sprite_material_git "Google Material Icons git"
	!include <material/common>
	!include <material/git>
	
	<<$ma_git>>
	
	
snippet sprite_material_glassdoor "Google Material Icons glassdoor"
	!include <material/common>
	!include <material/glassdoor>
	
	<<$ma_glassdoor>>
	
	
snippet sprite_material_glasses "Google Material Icons glasses"
	!include <material/common>
	!include <material/glasses>
	
	<<$ma_glasses>>
	
	
snippet sprite_material_glass_flute "Google Material Icons glass_flute"
	!include <material/common>
	!include <material/glass_flute>
	
	<<$ma_glass_flute>>
	
	
snippet sprite_material_glass_mug "Google Material Icons glass_mug"
	!include <material/common>
	!include <material/glass_mug>
	
	<<$ma_glass_mug>>
	
	
snippet sprite_material_glass_stange "Google Material Icons glass_stange"
	!include <material/common>
	!include <material/glass_stange>
	
	<<$ma_glass_stange>>
	
	
snippet sprite_material_glass_tulip "Google Material Icons glass_tulip"
	!include <material/common>
	!include <material/glass_tulip>
	
	<<$ma_glass_tulip>>
	
	
snippet sprite_material_gmail "Google Material Icons gmail"
	!include <material/common>
	!include <material/gmail>
	
	<<$ma_gmail>>
	
	
snippet sprite_material_gnome "Google Material Icons gnome"
	!include <material/common>
	!include <material/gnome>
	
	<<$ma_gnome>>
	
	
snippet sprite_material_golf "Google Material Icons golf"
	!include <material/common>
	!include <material/golf>
	
	<<$ma_golf>>
	
	
snippet sprite_material_gondola "Google Material Icons gondola"
	!include <material/common>
	!include <material/gondola>
	
	<<$ma_gondola>>
	
	
snippet sprite_material_google_analytics "Google Material Icons google_analytics"
	!include <material/common>
	!include <material/google_analytics>
	
	<<$ma_google_analytics>>
	
	
snippet sprite_material_google_assistant "Google Material Icons google_assistant"
	!include <material/common>
	!include <material/google_assistant>
	
	<<$ma_google_assistant>>
	
	
snippet sprite_material_google_cardboard "Google Material Icons google_cardboard"
	!include <material/common>
	!include <material/google_cardboard>
	
	<<$ma_google_cardboard>>
	
	
snippet sprite_material_google_chrome "Google Material Icons google_chrome"
	!include <material/common>
	!include <material/google_chrome>
	
	<<$ma_google_chrome>>
	
	
snippet sprite_material_google_circles_communities "Google Material Icons google_circles_communities"
	!include <material/common>
	!include <material/google_circles_communities>
	
	<<$ma_google_circles_communities>>
	
	
snippet sprite_material_google_circles_extended "Google Material Icons google_circles_extended"
	!include <material/common>
	!include <material/google_circles_extended>
	
	<<$ma_google_circles_extended>>
	
	
snippet sprite_material_google_circles_group "Google Material Icons google_circles_group"
	!include <material/common>
	!include <material/google_circles_group>
	
	<<$ma_google_circles_group>>
	
	
snippet sprite_material_google_circles "Google Material Icons google_circles"
	!include <material/common>
	!include <material/google_circles>
	
	<<$ma_google_circles>>
	
	
snippet sprite_material_google_controller_off "Google Material Icons google_controller_off"
	!include <material/common>
	!include <material/google_controller_off>
	
	<<$ma_google_controller_off>>
	
	
snippet sprite_material_google_controller "Google Material Icons google_controller"
	!include <material/common>
	!include <material/google_controller>
	
	<<$ma_google_controller>>
	
	
snippet sprite_material_google_drive "Google Material Icons google_drive"
	!include <material/common>
	!include <material/google_drive>
	
	<<$ma_google_drive>>
	
	
snippet sprite_material_google_earth "Google Material Icons google_earth"
	!include <material/common>
	!include <material/google_earth>
	
	<<$ma_google_earth>>
	
	
snippet sprite_material_google_glass "Google Material Icons google_glass"
	!include <material/common>
	!include <material/google_glass>
	
	<<$ma_google_glass>>
	
	
snippet sprite_material_google_home "Google Material Icons google_home"
	!include <material/common>
	!include <material/google_home>
	
	<<$ma_google_home>>
	
	
snippet sprite_material_google_keep "Google Material Icons google_keep"
	!include <material/common>
	!include <material/google_keep>
	
	<<$ma_google_keep>>
	
	
snippet sprite_material_google_maps "Google Material Icons google_maps"
	!include <material/common>
	!include <material/google_maps>
	
	<<$ma_google_maps>>
	
	
snippet sprite_material_google_nearby "Google Material Icons google_nearby"
	!include <material/common>
	!include <material/google_nearby>
	
	<<$ma_google_nearby>>
	
	
snippet sprite_material_google_pages "Google Material Icons google_pages"
	!include <material/common>
	!include <material/google_pages>
	
	<<$ma_google_pages>>
	
	
snippet sprite_material_google_photos "Google Material Icons google_photos"
	!include <material/common>
	!include <material/google_photos>
	
	<<$ma_google_photos>>
	
	
snippet sprite_material_google_physical_web "Google Material Icons google_physical_web"
	!include <material/common>
	!include <material/google_physical_web>
	
	<<$ma_google_physical_web>>
	
	
snippet sprite_material_google_play "Google Material Icons google_play"
	!include <material/common>
	!include <material/google_play>
	
	<<$ma_google_play>>
	
	
snippet sprite_material_google_plus_box "Google Material Icons google_plus_box"
	!include <material/common>
	!include <material/google_plus_box>
	
	<<$ma_google_plus_box>>
	
	
snippet sprite_material_google_plus "Google Material Icons google_plus"
	!include <material/common>
	!include <material/google_plus>
	
	<<$ma_google_plus>>
	
	
snippet sprite_material_google "Google Material Icons google"
	!include <material/common>
	!include <material/google>
	
	<<$ma_google>>
	
	
snippet sprite_material_google_translate "Google Material Icons google_translate"
	!include <material/common>
	!include <material/google_translate>
	
	<<$ma_google_translate>>
	
	
snippet sprite_material_google_wallet "Google Material Icons google_wallet"
	!include <material/common>
	!include <material/google_wallet>
	
	<<$ma_google_wallet>>
	
	
snippet sprite_material_gradient "Google Material Icons gradient"
	!include <material/common>
	!include <material/gradient>
	
	<<$ma_gradient>>
	
	
snippet sprite_material_grease_pencil "Google Material Icons grease_pencil"
	!include <material/common>
	!include <material/grease_pencil>
	
	<<$ma_grease_pencil>>
	
	
snippet sprite_material_grid_large "Google Material Icons grid_large"
	!include <material/common>
	!include <material/grid_large>
	
	<<$ma_grid_large>>
	
	
snippet sprite_material_grid_off "Google Material Icons grid_off"
	!include <material/common>
	!include <material/grid_off>
	
	<<$ma_grid_off>>
	
	
snippet sprite_material_grid "Google Material Icons grid"
	!include <material/common>
	!include <material/grid>
	
	<<$ma_grid>>
	
	
snippet sprite_material_group "Google Material Icons group"
	!include <material/common>
	!include <material/group>
	
	<<$ma_group>>
	
	
snippet sprite_material_guitar_acoustic "Google Material Icons guitar_acoustic"
	!include <material/common>
	!include <material/guitar_acoustic>
	
	<<$ma_guitar_acoustic>>
	
	
snippet sprite_material_guitar_electric "Google Material Icons guitar_electric"
	!include <material/common>
	!include <material/guitar_electric>
	
	<<$ma_guitar_electric>>
	
	
snippet sprite_material_guy_fawkes_mask "Google Material Icons guy_fawkes_mask"
	!include <material/common>
	!include <material/guy_fawkes_mask>
	
	<<$ma_guy_fawkes_mask>>
	
	
snippet sprite_material_hackernews "Google Material Icons hackernews"
	!include <material/common>
	!include <material/hackernews>
	
	<<$ma_hackernews>>
	
	
snippet sprite_material_hamburger "Google Material Icons hamburger"
	!include <material/common>
	!include <material/hamburger>
	
	<<$ma_hamburger>>
	
	
snippet sprite_material_hand_pointing_right "Google Material Icons hand_pointing_right"
	!include <material/common>
	!include <material/hand_pointing_right>
	
	<<$ma_hand_pointing_right>>
	
	
snippet sprite_material_hanger "Google Material Icons hanger"
	!include <material/common>
	!include <material/hanger>
	
	<<$ma_hanger>>
	
	
snippet sprite_material_hangouts "Google Material Icons hangouts"
	!include <material/common>
	!include <material/hangouts>
	
	<<$ma_hangouts>>
	
	
snippet sprite_material_harddisk "Google Material Icons harddisk"
	!include <material/common>
	!include <material/harddisk>
	
	<<$ma_harddisk>>
	
	
snippet sprite_material_headphones_box "Google Material Icons headphones_box"
	!include <material/common>
	!include <material/headphones_box>
	
	<<$ma_headphones_box>>
	
	
snippet sprite_material_headphones_off "Google Material Icons headphones_off"
	!include <material/common>
	!include <material/headphones_off>
	
	<<$ma_headphones_off>>
	
	
snippet sprite_material_headphones "Google Material Icons headphones"
	!include <material/common>
	!include <material/headphones>
	
	<<$ma_headphones>>
	
	
snippet sprite_material_headphones_settings "Google Material Icons headphones_settings"
	!include <material/common>
	!include <material/headphones_settings>
	
	<<$ma_headphones_settings>>
	
	
snippet sprite_material_headset_dock "Google Material Icons headset_dock"
	!include <material/common>
	!include <material/headset_dock>
	
	<<$ma_headset_dock>>
	
	
snippet sprite_material_headset_off "Google Material Icons headset_off"
	!include <material/common>
	!include <material/headset_off>
	
	<<$ma_headset_off>>
	
	
snippet sprite_material_headset "Google Material Icons headset"
	!include <material/common>
	!include <material/headset>
	
	<<$ma_headset>>
	
	
snippet sprite_material_heart_box_outline "Google Material Icons heart_box_outline"
	!include <material/common>
	!include <material/heart_box_outline>
	
	<<$ma_heart_box_outline>>
	
	
snippet sprite_material_heart_box "Google Material Icons heart_box"
	!include <material/common>
	!include <material/heart_box>
	
	<<$ma_heart_box>>
	
	
snippet sprite_material_heart_broken "Google Material Icons heart_broken"
	!include <material/common>
	!include <material/heart_broken>
	
	<<$ma_heart_broken>>
	
	
snippet sprite_material_heart_half_full "Google Material Icons heart_half_full"
	!include <material/common>
	!include <material/heart_half_full>
	
	<<$ma_heart_half_full>>
	
	
snippet sprite_material_heart_half_outline "Google Material Icons heart_half_outline"
	!include <material/common>
	!include <material/heart_half_outline>
	
	<<$ma_heart_half_outline>>
	
	
snippet sprite_material_heart_half "Google Material Icons heart_half"
	!include <material/common>
	!include <material/heart_half>
	
	<<$ma_heart_half>>
	
	
snippet sprite_material_heart_off "Google Material Icons heart_off"
	!include <material/common>
	!include <material/heart_off>
	
	<<$ma_heart_off>>
	
	
snippet sprite_material_heart_outline "Google Material Icons heart_outline"
	!include <material/common>
	!include <material/heart_outline>
	
	<<$ma_heart_outline>>
	
	
snippet sprite_material_heart_pulse "Google Material Icons heart_pulse"
	!include <material/common>
	!include <material/heart_pulse>
	
	<<$ma_heart_pulse>>
	
	
snippet sprite_material_heart "Google Material Icons heart"
	!include <material/common>
	!include <material/heart>
	
	<<$ma_heart>>
	
	
snippet sprite_material_help_box "Google Material Icons help_box"
	!include <material/common>
	!include <material/help_box>
	
	<<$ma_help_box>>
	
	
snippet sprite_material_help_circle_outline "Google Material Icons help_circle_outline"
	!include <material/common>
	!include <material/help_circle_outline>
	
	<<$ma_help_circle_outline>>
	
	
snippet sprite_material_help_circle "Google Material Icons help_circle"
	!include <material/common>
	!include <material/help_circle>
	
	<<$ma_help_circle>>
	
	
snippet sprite_material_help_network "Google Material Icons help_network"
	!include <material/common>
	!include <material/help_network>
	
	<<$ma_help_network>>
	
	
snippet sprite_material_help "Google Material Icons help"
	!include <material/common>
	!include <material/help>
	
	<<$ma_help>>
	
	
snippet sprite_material_hexagon_multiple "Google Material Icons hexagon_multiple"
	!include <material/common>
	!include <material/hexagon_multiple>
	
	<<$ma_hexagon_multiple>>
	
	
snippet sprite_material_hexagon_outline "Google Material Icons hexagon_outline"
	!include <material/common>
	!include <material/hexagon_outline>
	
	<<$ma_hexagon_outline>>
	
	
snippet sprite_material_hexagon "Google Material Icons hexagon"
	!include <material/common>
	!include <material/hexagon>
	
	<<$ma_hexagon>>
	
	
snippet sprite_material_high_definition "Google Material Icons high_definition"
	!include <material/common>
	!include <material/high_definition>
	
	<<$ma_high_definition>>
	
	
snippet sprite_material_highway "Google Material Icons highway"
	!include <material/common>
	!include <material/highway>
	
	<<$ma_highway>>
	
	
snippet sprite_material_history "Google Material Icons history"
	!include <material/common>
	!include <material/history>
	
	<<$ma_history>>
	
	
snippet sprite_material_hololens "Google Material Icons hololens"
	!include <material/common>
	!include <material/hololens>
	
	<<$ma_hololens>>
	
	
snippet sprite_material_home_account "Google Material Icons home_account"
	!include <material/common>
	!include <material/home_account>
	
	<<$ma_home_account>>
	
	
snippet sprite_material_home_assistant "Google Material Icons home_assistant"
	!include <material/common>
	!include <material/home_assistant>
	
	<<$ma_home_assistant>>
	
	
snippet sprite_material_home_automation "Google Material Icons home_automation"
	!include <material/common>
	!include <material/home_automation>
	
	<<$ma_home_automation>>
	
	
snippet sprite_material_home_circle "Google Material Icons home_circle"
	!include <material/common>
	!include <material/home_circle>
	
	<<$ma_home_circle>>
	
	
snippet sprite_material_home_heart "Google Material Icons home_heart"
	!include <material/common>
	!include <material/home_heart>
	
	<<$ma_home_heart>>
	
	
snippet sprite_material_home_map_marker "Google Material Icons home_map_marker"
	!include <material/common>
	!include <material/home_map_marker>
	
	<<$ma_home_map_marker>>
	
	
snippet sprite_material_home_modern "Google Material Icons home_modern"
	!include <material/common>
	!include <material/home_modern>
	
	<<$ma_home_modern>>
	
	
snippet sprite_material_home_outline "Google Material Icons home_outline"
	!include <material/common>
	!include <material/home_outline>
	
	<<$ma_home_outline>>
	
	
snippet sprite_material_home "Google Material Icons home"
	!include <material/common>
	!include <material/home>
	
	<<$ma_home>>
	
	
snippet sprite_material_home_variant "Google Material Icons home_variant"
	!include <material/common>
	!include <material/home_variant>
	
	<<$ma_home_variant>>
	
	
snippet sprite_material_hook_off "Google Material Icons hook_off"
	!include <material/common>
	!include <material/hook_off>
	
	<<$ma_hook_off>>
	
	
snippet sprite_material_hook "Google Material Icons hook"
	!include <material/common>
	!include <material/hook>
	
	<<$ma_hook>>
	
	
snippet sprite_material_hops "Google Material Icons hops"
	!include <material/common>
	!include <material/hops>
	
	<<$ma_hops>>
	
	
snippet sprite_material_hospital_building "Google Material Icons hospital_building"
	!include <material/common>
	!include <material/hospital_building>
	
	<<$ma_hospital_building>>
	
	
snippet sprite_material_hospital_marker "Google Material Icons hospital_marker"
	!include <material/common>
	!include <material/hospital_marker>
	
	<<$ma_hospital_marker>>
	
	
snippet sprite_material_hospital "Google Material Icons hospital"
	!include <material/common>
	!include <material/hospital>
	
	<<$ma_hospital>>
	
	
snippet sprite_material_hotel "Google Material Icons hotel"
	!include <material/common>
	!include <material/hotel>
	
	<<$ma_hotel>>
	
	
snippet sprite_material_hot_tub "Google Material Icons hot_tub"
	!include <material/common>
	!include <material/hot_tub>
	
	<<$ma_hot_tub>>
	
	
snippet sprite_material_houzz_box "Google Material Icons houzz_box"
	!include <material/common>
	!include <material/houzz_box>
	
	<<$ma_houzz_box>>
	
	
snippet sprite_material_hulu "Google Material Icons hulu"
	!include <material/common>
	!include <material/hulu>
	
	<<$ma_hulu>>
	
	
snippet sprite_material_human_child "Google Material Icons human_child"
	!include <material/common>
	!include <material/human_child>
	
	<<$ma_human_child>>
	
	
snippet sprite_material_human_female "Google Material Icons human_female"
	!include <material/common>
	!include <material/human_female>
	
	<<$ma_human_female>>
	
	
snippet sprite_material_human_greeting "Google Material Icons human_greeting"
	!include <material/common>
	!include <material/human_greeting>
	
	<<$ma_human_greeting>>
	
	
snippet sprite_material_human_handsdown "Google Material Icons human_handsdown"
	!include <material/common>
	!include <material/human_handsdown>
	
	<<$ma_human_handsdown>>
	
	
snippet sprite_material_human_handsup "Google Material Icons human_handsup"
	!include <material/common>
	!include <material/human_handsup>
	
	<<$ma_human_handsup>>
	
	
snippet sprite_material_human_male_female "Google Material Icons human_male_female"
	!include <material/common>
	!include <material/human_male_female>
	
	<<$ma_human_male_female>>
	
	
snippet sprite_material_human_male "Google Material Icons human_male"
	!include <material/common>
	!include <material/human_male>
	
	<<$ma_human_male>>
	
	
snippet sprite_material_human_pregnant "Google Material Icons human_pregnant"
	!include <material/common>
	!include <material/human_pregnant>
	
	<<$ma_human_pregnant>>
	
	
snippet sprite_material_human "Google Material Icons human"
	!include <material/common>
	!include <material/human>
	
	<<$ma_human>>
	
	
snippet sprite_material_humble_bundle "Google Material Icons humble_bundle"
	!include <material/common>
	!include <material/humble_bundle>
	
	<<$ma_humble_bundle>>
	
	
snippet sprite_material_ice_cream "Google Material Icons ice_cream"
	!include <material/common>
	!include <material/ice_cream>
	
	<<$ma_ice_cream>>
	
	
snippet sprite_material_image_album "Google Material Icons image_album"
	!include <material/common>
	!include <material/image_album>
	
	<<$ma_image_album>>
	
	
snippet sprite_material_image_area_close "Google Material Icons image_area_close"
	!include <material/common>
	!include <material/image_area_close>
	
	<<$ma_image_area_close>>
	
	
snippet sprite_material_image_area "Google Material Icons image_area"
	!include <material/common>
	!include <material/image_area>
	
	<<$ma_image_area>>
	
	
snippet sprite_material_image_broken "Google Material Icons image_broken"
	!include <material/common>
	!include <material/image_broken>
	
	<<$ma_image_broken>>
	
	
snippet sprite_material_image_broken_variant "Google Material Icons image_broken_variant"
	!include <material/common>
	!include <material/image_broken_variant>
	
	<<$ma_image_broken_variant>>
	
	
snippet sprite_material_image_filter_black_white "Google Material Icons image_filter_black_white"
	!include <material/common>
	!include <material/image_filter_black_white>
	
	<<$ma_image_filter_black_white>>
	
	
snippet sprite_material_image_filter_center_focus "Google Material Icons image_filter_center_focus"
	!include <material/common>
	!include <material/image_filter_center_focus>
	
	<<$ma_image_filter_center_focus>>
	
	
snippet sprite_material_image_filter_center_focus_weak "Google Material Icons image_filter_center_focus_weak"
	!include <material/common>
	!include <material/image_filter_center_focus_weak>
	
	<<$ma_image_filter_center_focus_weak>>
	
	
snippet sprite_material_image_filter_drama "Google Material Icons image_filter_drama"
	!include <material/common>
	!include <material/image_filter_drama>
	
	<<$ma_image_filter_drama>>
	
	
snippet sprite_material_image_filter_frames "Google Material Icons image_filter_frames"
	!include <material/common>
	!include <material/image_filter_frames>
	
	<<$ma_image_filter_frames>>
	
	
snippet sprite_material_image_filter_hdr "Google Material Icons image_filter_hdr"
	!include <material/common>
	!include <material/image_filter_hdr>
	
	<<$ma_image_filter_hdr>>
	
	
snippet sprite_material_image_filter_none "Google Material Icons image_filter_none"
	!include <material/common>
	!include <material/image_filter_none>
	
	<<$ma_image_filter_none>>
	
	
snippet sprite_material_image_filter "Google Material Icons image_filter"
	!include <material/common>
	!include <material/image_filter>
	
	<<$ma_image_filter>>
	
	
snippet sprite_material_image_filter_tilt_shift "Google Material Icons image_filter_tilt_shift"
	!include <material/common>
	!include <material/image_filter_tilt_shift>
	
	<<$ma_image_filter_tilt_shift>>
	
	
snippet sprite_material_image_filter_vintage "Google Material Icons image_filter_vintage"
	!include <material/common>
	!include <material/image_filter_vintage>
	
	<<$ma_image_filter_vintage>>
	
	
snippet sprite_material_image_multiple "Google Material Icons image_multiple"
	!include <material/common>
	!include <material/image_multiple>
	
	<<$ma_image_multiple>>
	
	
snippet sprite_material_image_off "Google Material Icons image_off"
	!include <material/common>
	!include <material/image_off>
	
	<<$ma_image_off>>
	
	
snippet sprite_material_image "Google Material Icons image"
	!include <material/common>
	!include <material/image>
	
	<<$ma_image>>
	
	
snippet sprite_material_import "Google Material Icons import"
	!include <material/common>
	!include <material/import>
	
	<<$ma_import>>
	
	
snippet sprite_material_inbox_arrow_down "Google Material Icons inbox_arrow_down"
	!include <material/common>
	!include <material/inbox_arrow_down>
	
	<<$ma_inbox_arrow_down>>
	
	
snippet sprite_material_inbox_arrow_up "Google Material Icons inbox_arrow_up"
	!include <material/common>
	!include <material/inbox_arrow_up>
	
	<<$ma_inbox_arrow_up>>
	
	
snippet sprite_material_inbox "Google Material Icons inbox"
	!include <material/common>
	!include <material/inbox>
	
	<<$ma_inbox>>
	
	
snippet sprite_material_incognito "Google Material Icons incognito"
	!include <material/common>
	!include <material/incognito>
	
	<<$ma_incognito>>
	
	
snippet sprite_material_indent "Google Material Icons indent"
	!include <material/common>
	!include <material/indent>
	
	<<$ma_indent>>
	
	
snippet sprite_material_infinity "Google Material Icons infinity"
	!include <material/common>
	!include <material/infinity>
	
	<<$ma_infinity>>
	
	
snippet sprite_material_INFO "Google Material Icons INFO"
	!include <material/common>
	!include <material/INFO>
	
	<<$ma_INFO>>
	
	
snippet sprite_material_information_outline "Google Material Icons information_outline"
	!include <material/common>
	!include <material/information_outline>
	
	<<$ma_information_outline>>
	
	
snippet sprite_material_information "Google Material Icons information"
	!include <material/common>
	!include <material/information>
	
	<<$ma_information>>
	
	
snippet sprite_material_information_variant "Google Material Icons information_variant"
	!include <material/common>
	!include <material/information_variant>
	
	<<$ma_information_variant>>
	
	
snippet sprite_material_instagram "Google Material Icons instagram"
	!include <material/common>
	!include <material/instagram>
	
	<<$ma_instagram>>
	
	
snippet sprite_material_instapaper "Google Material Icons instapaper"
	!include <material/common>
	!include <material/instapaper>
	
	<<$ma_instapaper>>
	
	
snippet sprite_material_internet_explorer "Google Material Icons internet_explorer"
	!include <material/common>
	!include <material/internet_explorer>
	
	<<$ma_internet_explorer>>
	
	
snippet sprite_material_invert_colors "Google Material Icons invert_colors"
	!include <material/common>
	!include <material/invert_colors>
	
	<<$ma_invert_colors>>
	
	
snippet sprite_material_itunes "Google Material Icons itunes"
	!include <material/common>
	!include <material/itunes>
	
	<<$ma_itunes>>
	
	
snippet sprite_material_jeepney "Google Material Icons jeepney"
	!include <material/common>
	!include <material/jeepney>
	
	<<$ma_jeepney>>
	
	
snippet sprite_material_jira "Google Material Icons jira"
	!include <material/common>
	!include <material/jira>
	
	<<$ma_jira>>
	
	
snippet sprite_material_jsfiddle "Google Material Icons jsfiddle"
	!include <material/common>
	!include <material/jsfiddle>
	
	<<$ma_jsfiddle>>
	
	
snippet sprite_material_json "Google Material Icons json"
	!include <material/common>
	!include <material/json>
	
	<<$ma_json>>
	
	
snippet sprite_material_karate "Google Material Icons karate"
	!include <material/common>
	!include <material/karate>
	
	<<$ma_karate>>
	
	
snippet sprite_material_keg "Google Material Icons keg"
	!include <material/common>
	!include <material/keg>
	
	<<$ma_keg>>
	
	
snippet sprite_material_kettle "Google Material Icons kettle"
	!include <material/common>
	!include <material/kettle>
	
	<<$ma_kettle>>
	
	
snippet sprite_material_keyboard_backspace "Google Material Icons keyboard_backspace"
	!include <material/common>
	!include <material/keyboard_backspace>
	
	<<$ma_keyboard_backspace>>
	
	
snippet sprite_material_keyboard_caps "Google Material Icons keyboard_caps"
	!include <material/common>
	!include <material/keyboard_caps>
	
	<<$ma_keyboard_caps>>
	
	
snippet sprite_material_keyboard_close "Google Material Icons keyboard_close"
	!include <material/common>
	!include <material/keyboard_close>
	
	<<$ma_keyboard_close>>
	
	
snippet sprite_material_keyboard_off "Google Material Icons keyboard_off"
	!include <material/common>
	!include <material/keyboard_off>
	
	<<$ma_keyboard_off>>
	
	
snippet sprite_material_keyboard "Google Material Icons keyboard"
	!include <material/common>
	!include <material/keyboard>
	
	<<$ma_keyboard>>
	
	
snippet sprite_material_keyboard_return "Google Material Icons keyboard_return"
	!include <material/common>
	!include <material/keyboard_return>
	
	<<$ma_keyboard_return>>
	
	
snippet sprite_material_keyboard_tab "Google Material Icons keyboard_tab"
	!include <material/common>
	!include <material/keyboard_tab>
	
	<<$ma_keyboard_tab>>
	
	
snippet sprite_material_keyboard_variant "Google Material Icons keyboard_variant"
	!include <material/common>
	!include <material/keyboard_variant>
	
	<<$ma_keyboard_variant>>
	
	
snippet sprite_material_key_change "Google Material Icons key_change"
	!include <material/common>
	!include <material/key_change>
	
	<<$ma_key_change>>
	
	
snippet sprite_material_key_minus "Google Material Icons key_minus"
	!include <material/common>
	!include <material/key_minus>
	
	<<$ma_key_minus>>
	
	
snippet sprite_material_key_plus "Google Material Icons key_plus"
	!include <material/common>
	!include <material/key_plus>
	
	<<$ma_key_plus>>
	
	
snippet sprite_material_key "Google Material Icons key"
	!include <material/common>
	!include <material/key>
	
	<<$ma_key>>
	
	
snippet sprite_material_key_remove "Google Material Icons key_remove"
	!include <material/common>
	!include <material/key_remove>
	
	<<$ma_key_remove>>
	
	
snippet sprite_material_key_variant "Google Material Icons key_variant"
	!include <material/common>
	!include <material/key_variant>
	
	<<$ma_key_variant>>
	
	
snippet sprite_material_kickstarter "Google Material Icons kickstarter"
	!include <material/common>
	!include <material/kickstarter>
	
	<<$ma_kickstarter>>
	
	
snippet sprite_material_kodi "Google Material Icons kodi"
	!include <material/common>
	!include <material/kodi>
	
	<<$ma_kodi>>
	
	
snippet sprite_material_label_outline "Google Material Icons label_outline"
	!include <material/common>
	!include <material/label_outline>
	
	<<$ma_label_outline>>
	
	
snippet sprite_material_label "Google Material Icons label"
	!include <material/common>
	!include <material/label>
	
	<<$ma_label>>
	
	
snippet sprite_material_ladybug "Google Material Icons ladybug"
	!include <material/common>
	!include <material/ladybug>
	
	<<$ma_ladybug>>
	
	
snippet sprite_material_lambda "Google Material Icons lambda"
	!include <material/common>
	!include <material/lambda>
	
	<<$ma_lambda>>
	
	
snippet sprite_material_lamp "Google Material Icons lamp"
	!include <material/common>
	!include <material/lamp>
	
	<<$ma_lamp>>
	
	
snippet sprite_material_lan_connect "Google Material Icons lan_connect"
	!include <material/common>
	!include <material/lan_connect>
	
	<<$ma_lan_connect>>
	
	
snippet sprite_material_lan_disconnect "Google Material Icons lan_disconnect"
	!include <material/common>
	!include <material/lan_disconnect>
	
	<<$ma_lan_disconnect>>
	
	
snippet sprite_material_language_cpp "Google Material Icons language_cpp"
	!include <material/common>
	!include <material/language_cpp>
	
	<<$ma_language_cpp>>
	
	
snippet sprite_material_language_c "Google Material Icons language_c"
	!include <material/common>
	!include <material/language_c>
	
	<<$ma_language_c>>
	
	
snippet sprite_material_language_csharp "Google Material Icons language_csharp"
	!include <material/common>
	!include <material/language_csharp>
	
	<<$ma_language_csharp>>
	
	
snippet sprite_material_language_css3 "Google Material Icons language_css3"
	!include <material/common>
	!include <material/language_css3>
	
	<<$ma_language_css3>>
	
	
snippet sprite_material_language_go "Google Material Icons language_go"
	!include <material/common>
	!include <material/language_go>
	
	<<$ma_language_go>>
	
	
snippet sprite_material_language_html5 "Google Material Icons language_html5"
	!include <material/common>
	!include <material/language_html5>
	
	<<$ma_language_html5>>
	
	
snippet sprite_material_language_javascript "Google Material Icons language_javascript"
	!include <material/common>
	!include <material/language_javascript>
	
	<<$ma_language_javascript>>
	
	
snippet sprite_material_language_php "Google Material Icons language_php"
	!include <material/common>
	!include <material/language_php>
	
	<<$ma_language_php>>
	
	
snippet sprite_material_language_python "Google Material Icons language_python"
	!include <material/common>
	!include <material/language_python>
	
	<<$ma_language_python>>
	
	
snippet sprite_material_language_python_text "Google Material Icons language_python_text"
	!include <material/common>
	!include <material/language_python_text>
	
	<<$ma_language_python_text>>
	
	
snippet sprite_material_language_r "Google Material Icons language_r"
	!include <material/common>
	!include <material/language_r>
	
	<<$ma_language_r>>
	
	
snippet sprite_material_language_swift "Google Material Icons language_swift"
	!include <material/common>
	!include <material/language_swift>
	
	<<$ma_language_swift>>
	
	
snippet sprite_material_language_typescript "Google Material Icons language_typescript"
	!include <material/common>
	!include <material/language_typescript>
	
	<<$ma_language_typescript>>
	
	
snippet sprite_material_lan_pending "Google Material Icons lan_pending"
	!include <material/common>
	!include <material/lan_pending>
	
	<<$ma_lan_pending>>
	
	
snippet sprite_material_lan "Google Material Icons lan"
	!include <material/common>
	!include <material/lan>
	
	<<$ma_lan>>
	
	
snippet sprite_material_laptop_chromebook "Google Material Icons laptop_chromebook"
	!include <material/common>
	!include <material/laptop_chromebook>
	
	<<$ma_laptop_chromebook>>
	
	
snippet sprite_material_laptop_mac "Google Material Icons laptop_mac"
	!include <material/common>
	!include <material/laptop_mac>
	
	<<$ma_laptop_mac>>
	
	
snippet sprite_material_laptop_off "Google Material Icons laptop_off"
	!include <material/common>
	!include <material/laptop_off>
	
	<<$ma_laptop_off>>
	
	
snippet sprite_material_laptop "Google Material Icons laptop"
	!include <material/common>
	!include <material/laptop>
	
	<<$ma_laptop>>
	
	
snippet sprite_material_laptop_windows "Google Material Icons laptop_windows"
	!include <material/common>
	!include <material/laptop_windows>
	
	<<$ma_laptop_windows>>
	
	
snippet sprite_material_lastfm "Google Material Icons lastfm"
	!include <material/common>
	!include <material/lastfm>
	
	<<$ma_lastfm>>
	
	
snippet sprite_material_lastpass "Google Material Icons lastpass"
	!include <material/common>
	!include <material/lastpass>
	
	<<$ma_lastpass>>
	
	
snippet sprite_material_launch "Google Material Icons launch"
	!include <material/common>
	!include <material/launch>
	
	<<$ma_launch>>
	
	
snippet sprite_material_lava_lamp "Google Material Icons lava_lamp"
	!include <material/common>
	!include <material/lava_lamp>
	
	<<$ma_lava_lamp>>
	
	
snippet sprite_material_layers_off "Google Material Icons layers_off"
	!include <material/common>
	!include <material/layers_off>
	
	<<$ma_layers_off>>
	
	
snippet sprite_material_layers "Google Material Icons layers"
	!include <material/common>
	!include <material/layers>
	
	<<$ma_layers>>
	
	
snippet sprite_material_lead_pencil "Google Material Icons lead_pencil"
	!include <material/common>
	!include <material/lead_pencil>
	
	<<$ma_lead_pencil>>
	
	
snippet sprite_material_leaf "Google Material Icons leaf"
	!include <material/common>
	!include <material/leaf>
	
	<<$ma_leaf>>
	
	
snippet sprite_material_led_off "Google Material Icons led_off"
	!include <material/common>
	!include <material/led_off>
	
	<<$ma_led_off>>
	
	
snippet sprite_material_led_on "Google Material Icons led_on"
	!include <material/common>
	!include <material/led_on>
	
	<<$ma_led_on>>
	
	
snippet sprite_material_led_outline "Google Material Icons led_outline"
	!include <material/common>
	!include <material/led_outline>
	
	<<$ma_led_outline>>
	
	
snippet sprite_material_led_strip "Google Material Icons led_strip"
	!include <material/common>
	!include <material/led_strip>
	
	<<$ma_led_strip>>
	
	
snippet sprite_material_led_variant_off "Google Material Icons led_variant_off"
	!include <material/common>
	!include <material/led_variant_off>
	
	<<$ma_led_variant_off>>
	
	
snippet sprite_material_led_variant_on "Google Material Icons led_variant_on"
	!include <material/common>
	!include <material/led_variant_on>
	
	<<$ma_led_variant_on>>
	
	
snippet sprite_material_led_variant_outline "Google Material Icons led_variant_outline"
	!include <material/common>
	!include <material/led_variant_outline>
	
	<<$ma_led_variant_outline>>
	
	
snippet sprite_material_library_books "Google Material Icons library_books"
	!include <material/common>
	!include <material/library_books>
	
	<<$ma_library_books>>
	
	
snippet sprite_material_library_music "Google Material Icons library_music"
	!include <material/common>
	!include <material/library_music>
	
	<<$ma_library_music>>
	
	
snippet sprite_material_library_plus "Google Material Icons library_plus"
	!include <material/common>
	!include <material/library_plus>
	
	<<$ma_library_plus>>
	
	
snippet sprite_material_library "Google Material Icons library"
	!include <material/common>
	!include <material/library>
	
	<<$ma_library>>
	
	
snippet sprite_material_lightbulb_on_outline "Google Material Icons lightbulb_on_outline"
	!include <material/common>
	!include <material/lightbulb_on_outline>
	
	<<$ma_lightbulb_on_outline>>
	
	
snippet sprite_material_lightbulb_on "Google Material Icons lightbulb_on"
	!include <material/common>
	!include <material/lightbulb_on>
	
	<<$ma_lightbulb_on>>
	
	
snippet sprite_material_lightbulb_outline "Google Material Icons lightbulb_outline"
	!include <material/common>
	!include <material/lightbulb_outline>
	
	<<$ma_lightbulb_outline>>
	
	
snippet sprite_material_lightbulb "Google Material Icons lightbulb"
	!include <material/common>
	!include <material/lightbulb>
	
	<<$ma_lightbulb>>
	
	
snippet sprite_material_linkedin_box "Google Material Icons linkedin_box"
	!include <material/common>
	!include <material/linkedin_box>
	
	<<$ma_linkedin_box>>
	
	
snippet sprite_material_linkedin "Google Material Icons linkedin"
	!include <material/common>
	!include <material/linkedin>
	
	<<$ma_linkedin>>
	
	
snippet sprite_material_link_off "Google Material Icons link_off"
	!include <material/common>
	!include <material/link_off>
	
	<<$ma_link_off>>
	
	
snippet sprite_material_link "Google Material Icons link"
	!include <material/common>
	!include <material/link>
	
	<<$ma_link>>
	
	
snippet sprite_material_link_variant_off "Google Material Icons link_variant_off"
	!include <material/common>
	!include <material/link_variant_off>
	
	<<$ma_link_variant_off>>
	
	
snippet sprite_material_link_variant "Google Material Icons link_variant"
	!include <material/common>
	!include <material/link_variant>
	
	<<$ma_link_variant>>
	
	
snippet sprite_material_linode "Google Material Icons linode"
	!include <material/common>
	!include <material/linode>
	
	<<$ma_linode>>
	
	
snippet sprite_material_linux "Google Material Icons linux"
	!include <material/common>
	!include <material/linux>
	
	<<$ma_linux>>
	
	
snippet sprite_material_loading "Google Material Icons loading"
	!include <material/common>
	!include <material/loading>
	
	<<$ma_loading>>
	
	
snippet sprite_material_locker_multiple "Google Material Icons locker_multiple"
	!include <material/common>
	!include <material/locker_multiple>
	
	<<$ma_locker_multiple>>
	
	
snippet sprite_material_locker "Google Material Icons locker"
	!include <material/common>
	!include <material/locker>
	
	<<$ma_locker>>
	
	
snippet sprite_material_lock_open_outline "Google Material Icons lock_open_outline"
	!include <material/common>
	!include <material/lock_open_outline>
	
	<<$ma_lock_open_outline>>
	
	
snippet sprite_material_lock_open "Google Material Icons lock_open"
	!include <material/common>
	!include <material/lock_open>
	
	<<$ma_lock_open>>
	
	
snippet sprite_material_lock_outline "Google Material Icons lock_outline"
	!include <material/common>
	!include <material/lock_outline>
	
	<<$ma_lock_outline>>
	
	
snippet sprite_material_lock_pattern "Google Material Icons lock_pattern"
	!include <material/common>
	!include <material/lock_pattern>
	
	<<$ma_lock_pattern>>
	
	
snippet sprite_material_lock_plus "Google Material Icons lock_plus"
	!include <material/common>
	!include <material/lock_plus>
	
	<<$ma_lock_plus>>
	
	
snippet sprite_material_lock "Google Material Icons lock"
	!include <material/common>
	!include <material/lock>
	
	<<$ma_lock>>
	
	
snippet sprite_material_lock_reset "Google Material Icons lock_reset"
	!include <material/common>
	!include <material/lock_reset>
	
	<<$ma_lock_reset>>
	
	
snippet sprite_material_login "Google Material Icons login"
	!include <material/common>
	!include <material/login>
	
	<<$ma_login>>
	
	
snippet sprite_material_login_variant "Google Material Icons login_variant"
	!include <material/common>
	!include <material/login_variant>
	
	<<$ma_login_variant>>
	
	
snippet sprite_material_logout "Google Material Icons logout"
	!include <material/common>
	!include <material/logout>
	
	<<$ma_logout>>
	
	
snippet sprite_material_logout_variant "Google Material Icons logout_variant"
	!include <material/common>
	!include <material/logout_variant>
	
	<<$ma_logout_variant>>
	
	
snippet sprite_material_looks "Google Material Icons looks"
	!include <material/common>
	!include <material/looks>
	
	<<$ma_looks>>
	
	
snippet sprite_material_loop "Google Material Icons loop"
	!include <material/common>
	!include <material/loop>
	
	<<$ma_loop>>
	
	
snippet sprite_material_loupe "Google Material Icons loupe"
	!include <material/common>
	!include <material/loupe>
	
	<<$ma_loupe>>
	
	
snippet sprite_material_lumx "Google Material Icons lumx"
	!include <material/common>
	!include <material/lumx>
	
	<<$ma_lumx>>
	
	
snippet sprite_material_magnet_on "Google Material Icons magnet_on"
	!include <material/common>
	!include <material/magnet_on>
	
	<<$ma_magnet_on>>
	
	
snippet sprite_material_magnet "Google Material Icons magnet"
	!include <material/common>
	!include <material/magnet>
	
	<<$ma_magnet>>
	
	
snippet sprite_material_magnify_minus_outline "Google Material Icons magnify_minus_outline"
	!include <material/common>
	!include <material/magnify_minus_outline>
	
	<<$ma_magnify_minus_outline>>
	
	
snippet sprite_material_magnify_minus "Google Material Icons magnify_minus"
	!include <material/common>
	!include <material/magnify_minus>
	
	<<$ma_magnify_minus>>
	
	
snippet sprite_material_magnify_plus_outline "Google Material Icons magnify_plus_outline"
	!include <material/common>
	!include <material/magnify_plus_outline>
	
	<<$ma_magnify_plus_outline>>
	
	
snippet sprite_material_magnify_plus "Google Material Icons magnify_plus"
	!include <material/common>
	!include <material/magnify_plus>
	
	<<$ma_magnify_plus>>
	
	
snippet sprite_material_magnify "Google Material Icons magnify"
	!include <material/common>
	!include <material/magnify>
	
	<<$ma_magnify>>
	
	
snippet sprite_material_mailbox "Google Material Icons mailbox"
	!include <material/common>
	!include <material/mailbox>
	
	<<$ma_mailbox>>
	
	
snippet sprite_material_mail_ru "Google Material Icons mail_ru"
	!include <material/common>
	!include <material/mail_ru>
	
	<<$ma_mail_ru>>
	
	
snippet sprite_material_map_marker_circle "Google Material Icons map_marker_circle"
	!include <material/common>
	!include <material/map_marker_circle>
	
	<<$ma_map_marker_circle>>
	
	
snippet sprite_material_map_marker_minus "Google Material Icons map_marker_minus"
	!include <material/common>
	!include <material/map_marker_minus>
	
	<<$ma_map_marker_minus>>
	
	
snippet sprite_material_map_marker_multiple "Google Material Icons map_marker_multiple"
	!include <material/common>
	!include <material/map_marker_multiple>
	
	<<$ma_map_marker_multiple>>
	
	
snippet sprite_material_map_marker_off "Google Material Icons map_marker_off"
	!include <material/common>
	!include <material/map_marker_off>
	
	<<$ma_map_marker_off>>
	
	
snippet sprite_material_map_marker_outline "Google Material Icons map_marker_outline"
	!include <material/common>
	!include <material/map_marker_outline>
	
	<<$ma_map_marker_outline>>
	
	
snippet sprite_material_map_marker_plus "Google Material Icons map_marker_plus"
	!include <material/common>
	!include <material/map_marker_plus>
	
	<<$ma_map_marker_plus>>
	
	
snippet sprite_material_map_marker "Google Material Icons map_marker"
	!include <material/common>
	!include <material/map_marker>
	
	<<$ma_map_marker>>
	
	
snippet sprite_material_map_marker_radius "Google Material Icons map_marker_radius"
	!include <material/common>
	!include <material/map_marker_radius>
	
	<<$ma_map_marker_radius>>
	
	
snippet sprite_material_map "Google Material Icons map"
	!include <material/common>
	!include <material/map>
	
	<<$ma_map>>
	
	
snippet sprite_material_margin "Google Material Icons margin"
	!include <material/common>
	!include <material/margin>
	
	<<$ma_margin>>
	
	
snippet sprite_material_markdown "Google Material Icons markdown"
	!include <material/common>
	!include <material/markdown>
	
	<<$ma_markdown>>
	
	
snippet sprite_material_marker_check "Google Material Icons marker_check"
	!include <material/common>
	!include <material/marker_check>
	
	<<$ma_marker_check>>
	
	
snippet sprite_material_marker "Google Material Icons marker"
	!include <material/common>
	!include <material/marker>
	
	<<$ma_marker>>
	
	
snippet sprite_material_martini "Google Material Icons martini"
	!include <material/common>
	!include <material/martini>
	
	<<$ma_martini>>
	
	
snippet sprite_material_material_ui "Google Material Icons material_ui"
	!include <material/common>
	!include <material/material_ui>
	
	<<$ma_material_ui>>
	
	
snippet sprite_material_matrix "Google Material Icons matrix"
	!include <material/common>
	!include <material/matrix>
	
	<<$ma_matrix>>
	
	
snippet sprite_material_maxcdn "Google Material Icons maxcdn"
	!include <material/common>
	!include <material/maxcdn>
	
	<<$ma_maxcdn>>
	
	
snippet sprite_material_medical_bag "Google Material Icons medical_bag"
	!include <material/common>
	!include <material/medical_bag>
	
	<<$ma_medical_bag>>
	
	
snippet sprite_material_medium "Google Material Icons medium"
	!include <material/common>
	!include <material/medium>
	
	<<$ma_medium>>
	
	
snippet sprite_material_memory "Google Material Icons memory"
	!include <material/common>
	!include <material/memory>
	
	<<$ma_memory>>
	
	
snippet sprite_material_menu_down_outline "Google Material Icons menu_down_outline"
	!include <material/common>
	!include <material/menu_down_outline>
	
	<<$ma_menu_down_outline>>
	
	
snippet sprite_material_menu_down "Google Material Icons menu_down"
	!include <material/common>
	!include <material/menu_down>
	
	<<$ma_menu_down>>
	
	
snippet sprite_material_menu_left "Google Material Icons menu_left"
	!include <material/common>
	!include <material/menu_left>
	
	<<$ma_menu_left>>
	
	
snippet sprite_material_menu "Google Material Icons menu"
	!include <material/common>
	!include <material/menu>
	
	<<$ma_menu>>
	
	
snippet sprite_material_menu_right "Google Material Icons menu_right"
	!include <material/common>
	!include <material/menu_right>
	
	<<$ma_menu_right>>
	
	
snippet sprite_material_menu_up_outline "Google Material Icons menu_up_outline"
	!include <material/common>
	!include <material/menu_up_outline>
	
	<<$ma_menu_up_outline>>
	
	
snippet sprite_material_menu_up "Google Material Icons menu_up"
	!include <material/common>
	!include <material/menu_up>
	
	<<$ma_menu_up>>
	
	
snippet sprite_material_message_alert "Google Material Icons message_alert"
	!include <material/common>
	!include <material/message_alert>
	
	<<$ma_message_alert>>
	
	
snippet sprite_material_message_bulleted_off "Google Material Icons message_bulleted_off"
	!include <material/common>
	!include <material/message_bulleted_off>
	
	<<$ma_message_bulleted_off>>
	
	
snippet sprite_material_message_bulleted "Google Material Icons message_bulleted"
	!include <material/common>
	!include <material/message_bulleted>
	
	<<$ma_message_bulleted>>
	
	
snippet sprite_material_message_draw "Google Material Icons message_draw"
	!include <material/common>
	!include <material/message_draw>
	
	<<$ma_message_draw>>
	
	
snippet sprite_material_message_image "Google Material Icons message_image"
	!include <material/common>
	!include <material/message_image>
	
	<<$ma_message_image>>
	
	
snippet sprite_material_message_outline "Google Material Icons message_outline"
	!include <material/common>
	!include <material/message_outline>
	
	<<$ma_message_outline>>
	
	
snippet sprite_material_message_plus "Google Material Icons message_plus"
	!include <material/common>
	!include <material/message_plus>
	
	<<$ma_message_plus>>
	
	
snippet sprite_material_message_processing "Google Material Icons message_processing"
	!include <material/common>
	!include <material/message_processing>
	
	<<$ma_message_processing>>
	
	
snippet sprite_material_message "Google Material Icons message"
	!include <material/common>
	!include <material/message>
	
	<<$ma_message>>
	
	
snippet sprite_material_message_reply "Google Material Icons message_reply"
	!include <material/common>
	!include <material/message_reply>
	
	<<$ma_message_reply>>
	
	
snippet sprite_material_message_reply_text "Google Material Icons message_reply_text"
	!include <material/common>
	!include <material/message_reply_text>
	
	<<$ma_message_reply_text>>
	
	
snippet sprite_material_message_settings "Google Material Icons message_settings"
	!include <material/common>
	!include <material/message_settings>
	
	<<$ma_message_settings>>
	
	
snippet sprite_material_message_settings_variant "Google Material Icons message_settings_variant"
	!include <material/common>
	!include <material/message_settings_variant>
	
	<<$ma_message_settings_variant>>
	
	
snippet sprite_material_message_text_outline "Google Material Icons message_text_outline"
	!include <material/common>
	!include <material/message_text_outline>
	
	<<$ma_message_text_outline>>
	
	
snippet sprite_material_message_text "Google Material Icons message_text"
	!include <material/common>
	!include <material/message_text>
	
	<<$ma_message_text>>
	
	
snippet sprite_material_message_video "Google Material Icons message_video"
	!include <material/common>
	!include <material/message_video>
	
	<<$ma_message_video>>
	
	
snippet sprite_material_meteor "Google Material Icons meteor"
	!include <material/common>
	!include <material/meteor>
	
	<<$ma_meteor>>
	
	
snippet sprite_material_metronome "Google Material Icons metronome"
	!include <material/common>
	!include <material/metronome>
	
	<<$ma_metronome>>
	
	
snippet sprite_material_metronome_tick "Google Material Icons metronome_tick"
	!include <material/common>
	!include <material/metronome_tick>
	
	<<$ma_metronome_tick>>
	
	
snippet sprite_material_microphone_off "Google Material Icons microphone_off"
	!include <material/common>
	!include <material/microphone_off>
	
	<<$ma_microphone_off>>
	
	
snippet sprite_material_microphone_outline "Google Material Icons microphone_outline"
	!include <material/common>
	!include <material/microphone_outline>
	
	<<$ma_microphone_outline>>
	
	
snippet sprite_material_microphone "Google Material Icons microphone"
	!include <material/common>
	!include <material/microphone>
	
	<<$ma_microphone>>
	
	
snippet sprite_material_microphone_settings "Google Material Icons microphone_settings"
	!include <material/common>
	!include <material/microphone_settings>
	
	<<$ma_microphone_settings>>
	
	
snippet sprite_material_microphone_variant_off "Google Material Icons microphone_variant_off"
	!include <material/common>
	!include <material/microphone_variant_off>
	
	<<$ma_microphone_variant_off>>
	
	
snippet sprite_material_microphone_variant "Google Material Icons microphone_variant"
	!include <material/common>
	!include <material/microphone_variant>
	
	<<$ma_microphone_variant>>
	
	
snippet sprite_material_microscope "Google Material Icons microscope"
	!include <material/common>
	!include <material/microscope>
	
	<<$ma_microscope>>
	
	
snippet sprite_material_micro_sd "Google Material Icons micro_sd"
	!include <material/common>
	!include <material/micro_sd>
	
	<<$ma_micro_sd>>
	
	
snippet sprite_material_microsoft "Google Material Icons microsoft"
	!include <material/common>
	!include <material/microsoft>
	
	<<$ma_microsoft>>
	
	
snippet sprite_material_minecraft "Google Material Icons minecraft"
	!include <material/common>
	!include <material/minecraft>
	
	<<$ma_minecraft>>
	
	
snippet sprite_material_minus_box_outline "Google Material Icons minus_box_outline"
	!include <material/common>
	!include <material/minus_box_outline>
	
	<<$ma_minus_box_outline>>
	
	
snippet sprite_material_minus_box "Google Material Icons minus_box"
	!include <material/common>
	!include <material/minus_box>
	
	<<$ma_minus_box>>
	
	
snippet sprite_material_minus_circle_outline "Google Material Icons minus_circle_outline"
	!include <material/common>
	!include <material/minus_circle_outline>
	
	<<$ma_minus_circle_outline>>
	
	
snippet sprite_material_minus_circle "Google Material Icons minus_circle"
	!include <material/common>
	!include <material/minus_circle>
	
	<<$ma_minus_circle>>
	
	
snippet sprite_material_minus_network "Google Material Icons minus_network"
	!include <material/common>
	!include <material/minus_network>
	
	<<$ma_minus_network>>
	
	
snippet sprite_material_minus "Google Material Icons minus"
	!include <material/common>
	!include <material/minus>
	
	<<$ma_minus>>
	
	
snippet sprite_material_mixcloud "Google Material Icons mixcloud"
	!include <material/common>
	!include <material/mixcloud>
	
	<<$ma_mixcloud>>
	
	
snippet sprite_material_mixer "Google Material Icons mixer"
	!include <material/common>
	!include <material/mixer>
	
	<<$ma_mixer>>
	
	
snippet sprite_material_monitor_multiple "Google Material Icons monitor_multiple"
	!include <material/common>
	!include <material/monitor_multiple>
	
	<<$ma_monitor_multiple>>
	
	
snippet sprite_material_monitor "Google Material Icons monitor"
	!include <material/common>
	!include <material/monitor>
	
	<<$ma_monitor>>
	
	
snippet sprite_material_more "Google Material Icons more"
	!include <material/common>
	!include <material/more>
	
	<<$ma_more>>
	
	
snippet sprite_material_mouse_off "Google Material Icons mouse_off"
	!include <material/common>
	!include <material/mouse_off>
	
	<<$ma_mouse_off>>
	
	
snippet sprite_material_mouse "Google Material Icons mouse"
	!include <material/common>
	!include <material/mouse>
	
	<<$ma_mouse>>
	
	
snippet sprite_material_mouse_variant_off "Google Material Icons mouse_variant_off"
	!include <material/common>
	!include <material/mouse_variant_off>
	
	<<$ma_mouse_variant_off>>
	
	
snippet sprite_material_mouse_variant "Google Material Icons mouse_variant"
	!include <material/common>
	!include <material/mouse_variant>
	
	<<$ma_mouse_variant>>
	
	
snippet sprite_material_move_resize "Google Material Icons move_resize"
	!include <material/common>
	!include <material/move_resize>
	
	<<$ma_move_resize>>
	
	
snippet sprite_material_move_resize_variant "Google Material Icons move_resize_variant"
	!include <material/common>
	!include <material/move_resize_variant>
	
	<<$ma_move_resize_variant>>
	
	
snippet sprite_material_movie "Google Material Icons movie"
	!include <material/common>
	!include <material/movie>
	
	<<$ma_movie>>
	
	
snippet sprite_material_movie_roll "Google Material Icons movie_roll"
	!include <material/common>
	!include <material/movie_roll>
	
	<<$ma_movie_roll>>
	
	
snippet sprite_material_multiplication_box "Google Material Icons multiplication_box"
	!include <material/common>
	!include <material/multiplication_box>
	
	<<$ma_multiplication_box>>
	
	
snippet sprite_material_multiplication "Google Material Icons multiplication"
	!include <material/common>
	!include <material/multiplication>
	
	<<$ma_multiplication>>
	
	
snippet sprite_material_mushroom_outline "Google Material Icons mushroom_outline"
	!include <material/common>
	!include <material/mushroom_outline>
	
	<<$ma_mushroom_outline>>
	
	
snippet sprite_material_mushroom "Google Material Icons mushroom"
	!include <material/common>
	!include <material/mushroom>
	
	<<$ma_mushroom>>
	
	
snippet sprite_material_music_box_outline "Google Material Icons music_box_outline"
	!include <material/common>
	!include <material/music_box_outline>
	
	<<$ma_music_box_outline>>
	
	
snippet sprite_material_music_box "Google Material Icons music_box"
	!include <material/common>
	!include <material/music_box>
	
	<<$ma_music_box>>
	
	
snippet sprite_material_music_circle "Google Material Icons music_circle"
	!include <material/common>
	!include <material/music_circle>
	
	<<$ma_music_circle>>
	
	
snippet sprite_material_music_note_bluetooth_off "Google Material Icons music_note_bluetooth_off"
	!include <material/common>
	!include <material/music_note_bluetooth_off>
	
	<<$ma_music_note_bluetooth_off>>
	
	
snippet sprite_material_music_note_bluetooth "Google Material Icons music_note_bluetooth"
	!include <material/common>
	!include <material/music_note_bluetooth>
	
	<<$ma_music_note_bluetooth>>
	
	
snippet sprite_material_music_note_eighth "Google Material Icons music_note_eighth"
	!include <material/common>
	!include <material/music_note_eighth>
	
	<<$ma_music_note_eighth>>
	
	
snippet sprite_material_music_note_half "Google Material Icons music_note_half"
	!include <material/common>
	!include <material/music_note_half>
	
	<<$ma_music_note_half>>
	
	
snippet sprite_material_music_note_off "Google Material Icons music_note_off"
	!include <material/common>
	!include <material/music_note_off>
	
	<<$ma_music_note_off>>
	
	
snippet sprite_material_music_note "Google Material Icons music_note"
	!include <material/common>
	!include <material/music_note>
	
	<<$ma_music_note>>
	
	
snippet sprite_material_music_note_quarter "Google Material Icons music_note_quarter"
	!include <material/common>
	!include <material/music_note_quarter>
	
	<<$ma_music_note_quarter>>
	
	
snippet sprite_material_music_note_sixteenth "Google Material Icons music_note_sixteenth"
	!include <material/common>
	!include <material/music_note_sixteenth>
	
	<<$ma_music_note_sixteenth>>
	
	
snippet sprite_material_music_note_whole "Google Material Icons music_note_whole"
	!include <material/common>
	!include <material/music_note_whole>
	
	<<$ma_music_note_whole>>
	
	
snippet sprite_material_music_off "Google Material Icons music_off"
	!include <material/common>
	!include <material/music_off>
	
	<<$ma_music_off>>
	
	
snippet sprite_material_music "Google Material Icons music"
	!include <material/common>
	!include <material/music>
	
	<<$ma_music>>
	
	
snippet sprite_material_nature_people "Google Material Icons nature_people"
	!include <material/common>
	!include <material/nature_people>
	
	<<$ma_nature_people>>
	
	
snippet sprite_material_nature "Google Material Icons nature"
	!include <material/common>
	!include <material/nature>
	
	<<$ma_nature>>
	
	
snippet sprite_material_navigation "Google Material Icons navigation"
	!include <material/common>
	!include <material/navigation>
	
	<<$ma_navigation>>
	
	
snippet sprite_material_near_me "Google Material Icons near_me"
	!include <material/common>
	!include <material/near_me>
	
	<<$ma_near_me>>
	
	
snippet sprite_material_needle "Google Material Icons needle"
	!include <material/common>
	!include <material/needle>
	
	<<$ma_needle>>
	
	
snippet sprite_material_nest_protect "Google Material Icons nest_protect"
	!include <material/common>
	!include <material/nest_protect>
	
	<<$ma_nest_protect>>
	
	
snippet sprite_material_nest_thermostat "Google Material Icons nest_thermostat"
	!include <material/common>
	!include <material/nest_thermostat>
	
	<<$ma_nest_thermostat>>
	
	
snippet sprite_material_netflix "Google Material Icons netflix"
	!include <material/common>
	!include <material/netflix>
	
	<<$ma_netflix>>
	
	
snippet sprite_material_network "Google Material Icons network"
	!include <material/common>
	!include <material/network>
	
	<<$ma_network>>
	
	
snippet sprite_material_new_box "Google Material Icons new_box"
	!include <material/common>
	!include <material/new_box>
	
	<<$ma_new_box>>
	
	
snippet sprite_material_newspaper "Google Material Icons newspaper"
	!include <material/common>
	!include <material/newspaper>
	
	<<$ma_newspaper>>
	
	
snippet sprite_material_nfc "Google Material Icons nfc"
	!include <material/common>
	!include <material/nfc>
	
	<<$ma_nfc>>
	
	
snippet sprite_material_nfc_tap "Google Material Icons nfc_tap"
	!include <material/common>
	!include <material/nfc_tap>
	
	<<$ma_nfc_tap>>
	
	
snippet sprite_material_nfc_variant "Google Material Icons nfc_variant"
	!include <material/common>
	!include <material/nfc_variant>
	
	<<$ma_nfc_variant>>
	
	
snippet sprite_material_ninja "Google Material Icons ninja"
	!include <material/common>
	!include <material/ninja>
	
	<<$ma_ninja>>
	
	
snippet sprite_material_nintendo_switch "Google Material Icons nintendo_switch"
	!include <material/common>
	!include <material/nintendo_switch>
	
	<<$ma_nintendo_switch>>
	
	
snippet sprite_material_nodejs "Google Material Icons nodejs"
	!include <material/common>
	!include <material/nodejs>
	
	<<$ma_nodejs>>
	
	
snippet sprite_material_no "Google Material Icons no"
	!include <material/common>
	!include <material/no>
	
	<<$ma_no>>
	
	
snippet sprite_material_notebook "Google Material Icons notebook"
	!include <material/common>
	!include <material/notebook>
	
	<<$ma_notebook>>
	
	
snippet sprite_material_note_multiple_outline "Google Material Icons note_multiple_outline"
	!include <material/common>
	!include <material/note_multiple_outline>
	
	<<$ma_note_multiple_outline>>
	
	
snippet sprite_material_note_multiple "Google Material Icons note_multiple"
	!include <material/common>
	!include <material/note_multiple>
	
	<<$ma_note_multiple>>
	
	
snippet sprite_material_note_outline "Google Material Icons note_outline"
	!include <material/common>
	!include <material/note_outline>
	
	<<$ma_note_outline>>
	
	
snippet sprite_material_note_plus_outline "Google Material Icons note_plus_outline"
	!include <material/common>
	!include <material/note_plus_outline>
	
	<<$ma_note_plus_outline>>
	
	
snippet sprite_material_note_plus "Google Material Icons note_plus"
	!include <material/common>
	!include <material/note_plus>
	
	<<$ma_note_plus>>
	
	
snippet sprite_material_note "Google Material Icons note"
	!include <material/common>
	!include <material/note>
	
	<<$ma_note>>
	
	
snippet sprite_material_not_equal "Google Material Icons not_equal"
	!include <material/common>
	!include <material/not_equal>
	
	<<$ma_not_equal>>
	
	
snippet sprite_material_note_text "Google Material Icons note_text"
	!include <material/common>
	!include <material/note_text>
	
	<<$ma_note_text>>
	
	
snippet sprite_material_notification_clear_all "Google Material Icons notification_clear_all"
	!include <material/common>
	!include <material/notification_clear_all>
	
	<<$ma_notification_clear_all>>
	
	
snippet sprite_material_npm "Google Material Icons npm"
	!include <material/common>
	!include <material/npm>
	
	<<$ma_npm>>
	
	
snippet sprite_material_nuke "Google Material Icons nuke"
	!include <material/common>
	!include <material/nuke>
	
	<<$ma_nuke>>
	
	
snippet sprite_material_null "Google Material Icons null"
	!include <material/common>
	!include <material/null>
	
	<<$ma_null>>
	
	
snippet sprite_material_numeric_0_box_multiple_outline "Google Material Icons numeric_0_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_0_box_multiple_outline>
	
	<<$ma_numeric_0_box_multiple_outline>>
	
	
snippet sprite_material_numeric_0_box_outline "Google Material Icons numeric_0_box_outline"
	!include <material/common>
	!include <material/numeric_0_box_outline>
	
	<<$ma_numeric_0_box_outline>>
	
	
snippet sprite_material_numeric_0_box "Google Material Icons numeric_0_box"
	!include <material/common>
	!include <material/numeric_0_box>
	
	<<$ma_numeric_0_box>>
	
	
snippet sprite_material_numeric_1_box_multiple_outline "Google Material Icons numeric_1_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_1_box_multiple_outline>
	
	<<$ma_numeric_1_box_multiple_outline>>
	
	
snippet sprite_material_numeric_1_box_outline "Google Material Icons numeric_1_box_outline"
	!include <material/common>
	!include <material/numeric_1_box_outline>
	
	<<$ma_numeric_1_box_outline>>
	
	
snippet sprite_material_numeric_1_box "Google Material Icons numeric_1_box"
	!include <material/common>
	!include <material/numeric_1_box>
	
	<<$ma_numeric_1_box>>
	
	
snippet sprite_material_numeric_2_box_multiple_outline "Google Material Icons numeric_2_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_2_box_multiple_outline>
	
	<<$ma_numeric_2_box_multiple_outline>>
	
	
snippet sprite_material_numeric_2_box_outline "Google Material Icons numeric_2_box_outline"
	!include <material/common>
	!include <material/numeric_2_box_outline>
	
	<<$ma_numeric_2_box_outline>>
	
	
snippet sprite_material_numeric_2_box "Google Material Icons numeric_2_box"
	!include <material/common>
	!include <material/numeric_2_box>
	
	<<$ma_numeric_2_box>>
	
	
snippet sprite_material_numeric_3_box_multiple_outline "Google Material Icons numeric_3_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_3_box_multiple_outline>
	
	<<$ma_numeric_3_box_multiple_outline>>
	
	
snippet sprite_material_numeric_3_box_outline "Google Material Icons numeric_3_box_outline"
	!include <material/common>
	!include <material/numeric_3_box_outline>
	
	<<$ma_numeric_3_box_outline>>
	
	
snippet sprite_material_numeric_3_box "Google Material Icons numeric_3_box"
	!include <material/common>
	!include <material/numeric_3_box>
	
	<<$ma_numeric_3_box>>
	
	
snippet sprite_material_numeric_4_box_multiple_outline "Google Material Icons numeric_4_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_4_box_multiple_outline>
	
	<<$ma_numeric_4_box_multiple_outline>>
	
	
snippet sprite_material_numeric_4_box_outline "Google Material Icons numeric_4_box_outline"
	!include <material/common>
	!include <material/numeric_4_box_outline>
	
	<<$ma_numeric_4_box_outline>>
	
	
snippet sprite_material_numeric_4_box "Google Material Icons numeric_4_box"
	!include <material/common>
	!include <material/numeric_4_box>
	
	<<$ma_numeric_4_box>>
	
	
snippet sprite_material_numeric_5_box_multiple_outline "Google Material Icons numeric_5_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_5_box_multiple_outline>
	
	<<$ma_numeric_5_box_multiple_outline>>
	
	
snippet sprite_material_numeric_5_box_outline "Google Material Icons numeric_5_box_outline"
	!include <material/common>
	!include <material/numeric_5_box_outline>
	
	<<$ma_numeric_5_box_outline>>
	
	
snippet sprite_material_numeric_5_box "Google Material Icons numeric_5_box"
	!include <material/common>
	!include <material/numeric_5_box>
	
	<<$ma_numeric_5_box>>
	
	
snippet sprite_material_numeric_6_box_multiple_outline "Google Material Icons numeric_6_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_6_box_multiple_outline>
	
	<<$ma_numeric_6_box_multiple_outline>>
	
	
snippet sprite_material_numeric_6_box_outline "Google Material Icons numeric_6_box_outline"
	!include <material/common>
	!include <material/numeric_6_box_outline>
	
	<<$ma_numeric_6_box_outline>>
	
	
snippet sprite_material_numeric_6_box "Google Material Icons numeric_6_box"
	!include <material/common>
	!include <material/numeric_6_box>
	
	<<$ma_numeric_6_box>>
	
	
snippet sprite_material_numeric_7_box_multiple_outline "Google Material Icons numeric_7_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_7_box_multiple_outline>
	
	<<$ma_numeric_7_box_multiple_outline>>
	
	
snippet sprite_material_numeric_7_box_outline "Google Material Icons numeric_7_box_outline"
	!include <material/common>
	!include <material/numeric_7_box_outline>
	
	<<$ma_numeric_7_box_outline>>
	
	
snippet sprite_material_numeric_7_box "Google Material Icons numeric_7_box"
	!include <material/common>
	!include <material/numeric_7_box>
	
	<<$ma_numeric_7_box>>
	
	
snippet sprite_material_numeric_8_box_multiple_outline "Google Material Icons numeric_8_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_8_box_multiple_outline>
	
	<<$ma_numeric_8_box_multiple_outline>>
	
	
snippet sprite_material_numeric_8_box_outline "Google Material Icons numeric_8_box_outline"
	!include <material/common>
	!include <material/numeric_8_box_outline>
	
	<<$ma_numeric_8_box_outline>>
	
	
snippet sprite_material_numeric_8_box "Google Material Icons numeric_8_box"
	!include <material/common>
	!include <material/numeric_8_box>
	
	<<$ma_numeric_8_box>>
	
	
snippet sprite_material_numeric_9_box_multiple_outline "Google Material Icons numeric_9_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_9_box_multiple_outline>
	
	<<$ma_numeric_9_box_multiple_outline>>
	
	
snippet sprite_material_numeric_9_box_outline "Google Material Icons numeric_9_box_outline"
	!include <material/common>
	!include <material/numeric_9_box_outline>
	
	<<$ma_numeric_9_box_outline>>
	
	
snippet sprite_material_numeric_9_box "Google Material Icons numeric_9_box"
	!include <material/common>
	!include <material/numeric_9_box>
	
	<<$ma_numeric_9_box>>
	
	
snippet sprite_material_numeric_9_plus_box_multiple_outline "Google Material Icons numeric_9_plus_box_multiple_outline"
	!include <material/common>
	!include <material/numeric_9_plus_box_multiple_outline>
	
	<<$ma_numeric_9_plus_box_multiple_outline>>
	
	
snippet sprite_material_numeric_9_plus_box_outline "Google Material Icons numeric_9_plus_box_outline"
	!include <material/common>
	!include <material/numeric_9_plus_box_outline>
	
	<<$ma_numeric_9_plus_box_outline>>
	
	
snippet sprite_material_numeric_9_plus_box "Google Material Icons numeric_9_plus_box"
	!include <material/common>
	!include <material/numeric_9_plus_box>
	
	<<$ma_numeric_9_plus_box>>
	
	
snippet sprite_material_numeric "Google Material Icons numeric"
	!include <material/common>
	!include <material/numeric>
	
	<<$ma_numeric>>
	
	
snippet sprite_material_nut "Google Material Icons nut"
	!include <material/common>
	!include <material/nut>
	
	<<$ma_nut>>
	
	
snippet sprite_material_nutrition "Google Material Icons nutrition"
	!include <material/common>
	!include <material/nutrition>
	
	<<$ma_nutrition>>
	
	
snippet sprite_material_oar "Google Material Icons oar"
	!include <material/common>
	!include <material/oar>
	
	<<$ma_oar>>
	
	
snippet sprite_material_octagon_outline "Google Material Icons octagon_outline"
	!include <material/common>
	!include <material/octagon_outline>
	
	<<$ma_octagon_outline>>
	
	
snippet sprite_material_octagon "Google Material Icons octagon"
	!include <material/common>
	!include <material/octagon>
	
	<<$ma_octagon>>
	
	
snippet sprite_material_octagram_outline "Google Material Icons octagram_outline"
	!include <material/common>
	!include <material/octagram_outline>
	
	<<$ma_octagram_outline>>
	
	
snippet sprite_material_octagram "Google Material Icons octagram"
	!include <material/common>
	!include <material/octagram>
	
	<<$ma_octagram>>
	
	
snippet sprite_material_odnoklassniki "Google Material Icons odnoklassniki"
	!include <material/common>
	!include <material/odnoklassniki>
	
	<<$ma_odnoklassniki>>
	
	
snippet sprite_material_office "Google Material Icons office"
	!include <material/common>
	!include <material/office>
	
	<<$ma_office>>
	
	
snippet sprite_material_oil "Google Material Icons oil"
	!include <material/common>
	!include <material/oil>
	
	<<$ma_oil>>
	
	
snippet sprite_material_oil_temperature "Google Material Icons oil_temperature"
	!include <material/common>
	!include <material/oil_temperature>
	
	<<$ma_oil_temperature>>
	
	
snippet sprite_material_omega "Google Material Icons omega"
	!include <material/common>
	!include <material/omega>
	
	<<$ma_omega>>
	
	
snippet sprite_material_onedrive "Google Material Icons onedrive"
	!include <material/common>
	!include <material/onedrive>
	
	<<$ma_onedrive>>
	
	
snippet sprite_material_onenote "Google Material Icons onenote"
	!include <material/common>
	!include <material/onenote>
	
	<<$ma_onenote>>
	
	
snippet sprite_material_opacity "Google Material Icons opacity"
	!include <material/common>
	!include <material/opacity>
	
	<<$ma_opacity>>
	
	
snippet sprite_material_openid "Google Material Icons openid"
	!include <material/common>
	!include <material/openid>
	
	<<$ma_openid>>
	
	
snippet sprite_material_open_in_app "Google Material Icons open_in_app"
	!include <material/common>
	!include <material/open_in_app>
	
	<<$ma_open_in_app>>
	
	
snippet sprite_material_open_in_new "Google Material Icons open_in_new"
	!include <material/common>
	!include <material/open_in_new>
	
	<<$ma_open_in_new>>
	
	
snippet sprite_material_opera "Google Material Icons opera"
	!include <material/common>
	!include <material/opera>
	
	<<$ma_opera>>
	
	
snippet sprite_material_orbit "Google Material Icons orbit"
	!include <material/common>
	!include <material/orbit>
	
	<<$ma_orbit>>
	
	
snippet sprite_material_ornament "Google Material Icons ornament"
	!include <material/common>
	!include <material/ornament>
	
	<<$ma_ornament>>
	
	
snippet sprite_material_ornament_variant "Google Material Icons ornament_variant"
	!include <material/common>
	!include <material/ornament_variant>
	
	<<$ma_ornament_variant>>
	
	
snippet sprite_material_outbox "Google Material Icons outbox"
	!include <material/common>
	!include <material/outbox>
	
	<<$ma_outbox>>
	
	
snippet sprite_material_outdent "Google Material Icons outdent"
	!include <material/common>
	!include <material/outdent>
	
	<<$ma_outdent>>
	
	
snippet sprite_material_owl "Google Material Icons owl"
	!include <material/common>
	!include <material/owl>
	
	<<$ma_owl>>
	
	
snippet sprite_material_package_down "Google Material Icons package_down"
	!include <material/common>
	!include <material/package_down>
	
	<<$ma_package_down>>
	
	
snippet sprite_material_package "Google Material Icons package"
	!include <material/common>
	!include <material/package>
	
	<<$ma_package>>
	
	
snippet sprite_material_package_up "Google Material Icons package_up"
	!include <material/common>
	!include <material/package_up>
	
	<<$ma_package_up>>
	
	
snippet sprite_material_package_variant_closed "Google Material Icons package_variant_closed"
	!include <material/common>
	!include <material/package_variant_closed>
	
	<<$ma_package_variant_closed>>
	
	
snippet sprite_material_package_variant "Google Material Icons package_variant"
	!include <material/common>
	!include <material/package_variant>
	
	<<$ma_package_variant>>
	
	
snippet sprite_material_page_first "Google Material Icons page_first"
	!include <material/common>
	!include <material/page_first>
	
	<<$ma_page_first>>
	
	
snippet sprite_material_page_last "Google Material Icons page_last"
	!include <material/common>
	!include <material/page_last>
	
	<<$ma_page_last>>
	
	
snippet sprite_material_page_layout_body "Google Material Icons page_layout_body"
	!include <material/common>
	!include <material/page_layout_body>
	
	<<$ma_page_layout_body>>
	
	
snippet sprite_material_page_layout_footer "Google Material Icons page_layout_footer"
	!include <material/common>
	!include <material/page_layout_footer>
	
	<<$ma_page_layout_footer>>
	
	
snippet sprite_material_page_layout_header "Google Material Icons page_layout_header"
	!include <material/common>
	!include <material/page_layout_header>
	
	<<$ma_page_layout_header>>
	
	
snippet sprite_material_page_layout_sidebar_left "Google Material Icons page_layout_sidebar_left"
	!include <material/common>
	!include <material/page_layout_sidebar_left>
	
	<<$ma_page_layout_sidebar_left>>
	
	
snippet sprite_material_page_layout_sidebar_right "Google Material Icons page_layout_sidebar_right"
	!include <material/common>
	!include <material/page_layout_sidebar_right>
	
	<<$ma_page_layout_sidebar_right>>
	
	
snippet sprite_material_palette_advanced "Google Material Icons palette_advanced"
	!include <material/common>
	!include <material/palette_advanced>
	
	<<$ma_palette_advanced>>
	
	
snippet sprite_material_palette "Google Material Icons palette"
	!include <material/common>
	!include <material/palette>
	
	<<$ma_palette>>
	
	
snippet sprite_material_panda "Google Material Icons panda"
	!include <material/common>
	!include <material/panda>
	
	<<$ma_panda>>
	
	
snippet sprite_material_pandora "Google Material Icons pandora"
	!include <material/common>
	!include <material/pandora>
	
	<<$ma_pandora>>
	
	
snippet sprite_material_panorama_fisheye "Google Material Icons panorama_fisheye"
	!include <material/common>
	!include <material/panorama_fisheye>
	
	<<$ma_panorama_fisheye>>
	
	
snippet sprite_material_panorama_horizontal "Google Material Icons panorama_horizontal"
	!include <material/common>
	!include <material/panorama_horizontal>
	
	<<$ma_panorama_horizontal>>
	
	
snippet sprite_material_panorama "Google Material Icons panorama"
	!include <material/common>
	!include <material/panorama>
	
	<<$ma_panorama>>
	
	
snippet sprite_material_panorama_vertical "Google Material Icons panorama_vertical"
	!include <material/common>
	!include <material/panorama_vertical>
	
	<<$ma_panorama_vertical>>
	
	
snippet sprite_material_panorama_wide_angle "Google Material Icons panorama_wide_angle"
	!include <material/common>
	!include <material/panorama_wide_angle>
	
	<<$ma_panorama_wide_angle>>
	
	
snippet sprite_material_paperclip "Google Material Icons paperclip"
	!include <material/common>
	!include <material/paperclip>
	
	<<$ma_paperclip>>
	
	
snippet sprite_material_paper_cut_vertical "Google Material Icons paper_cut_vertical"
	!include <material/common>
	!include <material/paper_cut_vertical>
	
	<<$ma_paper_cut_vertical>>
	
	
snippet sprite_material_parking "Google Material Icons parking"
	!include <material/common>
	!include <material/parking>
	
	<<$ma_parking>>
	
	
snippet sprite_material_passport "Google Material Icons passport"
	!include <material/common>
	!include <material/passport>
	
	<<$ma_passport>>
	
	
snippet sprite_material_pause_circle_outline "Google Material Icons pause_circle_outline"
	!include <material/common>
	!include <material/pause_circle_outline>
	
	<<$ma_pause_circle_outline>>
	
	
snippet sprite_material_pause_circle "Google Material Icons pause_circle"
	!include <material/common>
	!include <material/pause_circle>
	
	<<$ma_pause_circle>>
	
	
snippet sprite_material_pause_octagon_outline "Google Material Icons pause_octagon_outline"
	!include <material/common>
	!include <material/pause_octagon_outline>
	
	<<$ma_pause_octagon_outline>>
	
	
snippet sprite_material_pause_octagon "Google Material Icons pause_octagon"
	!include <material/common>
	!include <material/pause_octagon>
	
	<<$ma_pause_octagon>>
	
	
snippet sprite_material_pause "Google Material Icons pause"
	!include <material/common>
	!include <material/pause>
	
	<<$ma_pause>>
	
	
snippet sprite_material_paw_off "Google Material Icons paw_off"
	!include <material/common>
	!include <material/paw_off>
	
	<<$ma_paw_off>>
	
	
snippet sprite_material_paw "Google Material Icons paw"
	!include <material/common>
	!include <material/paw>
	
	<<$ma_paw>>
	
	
snippet sprite_material_pencil_box_outline "Google Material Icons pencil_box_outline"
	!include <material/common>
	!include <material/pencil_box_outline>
	
	<<$ma_pencil_box_outline>>
	
	
snippet sprite_material_pencil_box "Google Material Icons pencil_box"
	!include <material/common>
	!include <material/pencil_box>
	
	<<$ma_pencil_box>>
	
	
snippet sprite_material_pencil_circle_outline "Google Material Icons pencil_circle_outline"
	!include <material/common>
	!include <material/pencil_circle_outline>
	
	<<$ma_pencil_circle_outline>>
	
	
snippet sprite_material_pencil_circle "Google Material Icons pencil_circle"
	!include <material/common>
	!include <material/pencil_circle>
	
	<<$ma_pencil_circle>>
	
	
snippet sprite_material_pencil_lock "Google Material Icons pencil_lock"
	!include <material/common>
	!include <material/pencil_lock>
	
	<<$ma_pencil_lock>>
	
	
snippet sprite_material_pencil_off "Google Material Icons pencil_off"
	!include <material/common>
	!include <material/pencil_off>
	
	<<$ma_pencil_off>>
	
	
snippet sprite_material_pencil "Google Material Icons pencil"
	!include <material/common>
	!include <material/pencil>
	
	<<$ma_pencil>>
	
	
snippet sprite_material_pen "Google Material Icons pen"
	!include <material/common>
	!include <material/pen>
	
	<<$ma_pen>>
	
	
snippet sprite_material_pentagon_outline "Google Material Icons pentagon_outline"
	!include <material/common>
	!include <material/pentagon_outline>
	
	<<$ma_pentagon_outline>>
	
	
snippet sprite_material_pentagon "Google Material Icons pentagon"
	!include <material/common>
	!include <material/pentagon>
	
	<<$ma_pentagon>>
	
	
snippet sprite_material_people "Google Material Icons people"
	!include <material/common>
	!include <material/people>
	
	<<$ma_people>>
	
	
snippet sprite_material_percent "Google Material Icons percent"
	!include <material/common>
	!include <material/percent>
	
	<<$ma_percent>>
	
	
snippet sprite_material_periodic_table_co2 "Google Material Icons periodic_table_co2"
	!include <material/common>
	!include <material/periodic_table_co2>
	
	<<$ma_periodic_table_co2>>
	
	
snippet sprite_material_periscope "Google Material Icons periscope"
	!include <material/common>
	!include <material/periscope>
	
	<<$ma_periscope>>
	
	
snippet sprite_material_person_box "Google Material Icons person_box"
	!include <material/common>
	!include <material/person_box>
	
	<<$ma_person_box>>
	
	
snippet sprite_material_person_minus "Google Material Icons person_minus"
	!include <material/common>
	!include <material/person_minus>
	
	<<$ma_person_minus>>
	
	
snippet sprite_material_person_plus "Google Material Icons person_plus"
	!include <material/common>
	!include <material/person_plus>
	
	<<$ma_person_plus>>
	
	
snippet sprite_material_pharmacy "Google Material Icons pharmacy"
	!include <material/common>
	!include <material/pharmacy>
	
	<<$ma_pharmacy>>
	
	
snippet sprite_material_phone_bluetooth "Google Material Icons phone_bluetooth"
	!include <material/common>
	!include <material/phone_bluetooth>
	
	<<$ma_phone_bluetooth>>
	
	
snippet sprite_material_phone_classic "Google Material Icons phone_classic"
	!include <material/common>
	!include <material/phone_classic>
	
	<<$ma_phone_classic>>
	
	
snippet sprite_material_phone_forward "Google Material Icons phone_forward"
	!include <material/common>
	!include <material/phone_forward>
	
	<<$ma_phone_forward>>
	
	
snippet sprite_material_phone_hangup "Google Material Icons phone_hangup"
	!include <material/common>
	!include <material/phone_hangup>
	
	<<$ma_phone_hangup>>
	
	
snippet sprite_material_phone_incoming "Google Material Icons phone_incoming"
	!include <material/common>
	!include <material/phone_incoming>
	
	<<$ma_phone_incoming>>
	
	
snippet sprite_material_phone_in_talk "Google Material Icons phone_in_talk"
	!include <material/common>
	!include <material/phone_in_talk>
	
	<<$ma_phone_in_talk>>
	
	
snippet sprite_material_phone_locked "Google Material Icons phone_locked"
	!include <material/common>
	!include <material/phone_locked>
	
	<<$ma_phone_locked>>
	
	
snippet sprite_material_phone_log "Google Material Icons phone_log"
	!include <material/common>
	!include <material/phone_log>
	
	<<$ma_phone_log>>
	
	
snippet sprite_material_phone_minus "Google Material Icons phone_minus"
	!include <material/common>
	!include <material/phone_minus>
	
	<<$ma_phone_minus>>
	
	
snippet sprite_material_phone_missed "Google Material Icons phone_missed"
	!include <material/common>
	!include <material/phone_missed>
	
	<<$ma_phone_missed>>
	
	
snippet sprite_material_phone_outgoing "Google Material Icons phone_outgoing"
	!include <material/common>
	!include <material/phone_outgoing>
	
	<<$ma_phone_outgoing>>
	
	
snippet sprite_material_phone_paused "Google Material Icons phone_paused"
	!include <material/common>
	!include <material/phone_paused>
	
	<<$ma_phone_paused>>
	
	
snippet sprite_material_phone_plus "Google Material Icons phone_plus"
	!include <material/common>
	!include <material/phone_plus>
	
	<<$ma_phone_plus>>
	
	
snippet sprite_material_phone "Google Material Icons phone"
	!include <material/common>
	!include <material/phone>
	
	<<$ma_phone>>
	
	
snippet sprite_material_phone_return "Google Material Icons phone_return"
	!include <material/common>
	!include <material/phone_return>
	
	<<$ma_phone_return>>
	
	
snippet sprite_material_phone_settings "Google Material Icons phone_settings"
	!include <material/common>
	!include <material/phone_settings>
	
	<<$ma_phone_settings>>
	
	
snippet sprite_material_phone_voip "Google Material Icons phone_voip"
	!include <material/common>
	!include <material/phone_voip>
	
	<<$ma_phone_voip>>
	
	
snippet sprite_material_piano "Google Material Icons piano"
	!include <material/common>
	!include <material/piano>
	
	<<$ma_piano>>
	
	
snippet sprite_material_pi_box "Google Material Icons pi_box"
	!include <material/common>
	!include <material/pi_box>
	
	<<$ma_pi_box>>
	
	
snippet sprite_material_picture "Google Material Icons picture"
	!include <material/common>
	!include <material/picture>
	
	<<$ma_picture>>
	
	
snippet sprite_material_pig "Google Material Icons pig"
	!include <material/common>
	!include <material/pig>
	
	<<$ma_pig>>
	
	
snippet sprite_material_pillar "Google Material Icons pillar"
	!include <material/common>
	!include <material/pillar>
	
	<<$ma_pillar>>
	
	
snippet sprite_material_pill "Google Material Icons pill"
	!include <material/common>
	!include <material/pill>
	
	<<$ma_pill>>
	
	
snippet sprite_material_pine_tree_box "Google Material Icons pine_tree_box"
	!include <material/common>
	!include <material/pine_tree_box>
	
	<<$ma_pine_tree_box>>
	
	
snippet sprite_material_pine_tree "Google Material Icons pine_tree"
	!include <material/common>
	!include <material/pine_tree>
	
	<<$ma_pine_tree>>
	
	
snippet sprite_material_pin_off "Google Material Icons pin_off"
	!include <material/common>
	!include <material/pin_off>
	
	<<$ma_pin_off>>
	
	
snippet sprite_material_pin "Google Material Icons pin"
	!include <material/common>
	!include <material/pin>
	
	<<$ma_pin>>
	
	
snippet sprite_material_pinterest_box "Google Material Icons pinterest_box"
	!include <material/common>
	!include <material/pinterest_box>
	
	<<$ma_pinterest_box>>
	
	
snippet sprite_material_pinterest "Google Material Icons pinterest"
	!include <material/common>
	!include <material/pinterest>
	
	<<$ma_pinterest>>
	
	
snippet sprite_material_pipe_disconnected "Google Material Icons pipe_disconnected"
	!include <material/common>
	!include <material/pipe_disconnected>
	
	<<$ma_pipe_disconnected>>
	
	
snippet sprite_material_pipe "Google Material Icons pipe"
	!include <material/common>
	!include <material/pipe>
	
	<<$ma_pipe>>
	
	
snippet sprite_material_pi "Google Material Icons pi"
	!include <material/common>
	!include <material/pi>
	
	<<$ma_pi>>
	
	
snippet sprite_material_pistol "Google Material Icons pistol"
	!include <material/common>
	!include <material/pistol>
	
	<<$ma_pistol>>
	
	
snippet sprite_material_pizza "Google Material Icons pizza"
	!include <material/common>
	!include <material/pizza>
	
	<<$ma_pizza>>
	
	
snippet sprite_material_plane "Google Material Icons plane"
	!include <material/common>
	!include <material/plane>
	
	<<$ma_plane>>
	
	
snippet sprite_material_plane_shield "Google Material Icons plane_shield"
	!include <material/common>
	!include <material/plane_shield>
	
	<<$ma_plane_shield>>
	
	
snippet sprite_material_play_box_outline "Google Material Icons play_box_outline"
	!include <material/common>
	!include <material/play_box_outline>
	
	<<$ma_play_box_outline>>
	
	
snippet sprite_material_play_circle_outline "Google Material Icons play_circle_outline"
	!include <material/common>
	!include <material/play_circle_outline>
	
	<<$ma_play_circle_outline>>
	
	
snippet sprite_material_play_circle "Google Material Icons play_circle"
	!include <material/common>
	!include <material/play_circle>
	
	<<$ma_play_circle>>
	
	
snippet sprite_material_playlist_check "Google Material Icons playlist_check"
	!include <material/common>
	!include <material/playlist_check>
	
	<<$ma_playlist_check>>
	
	
snippet sprite_material_playlist_minus "Google Material Icons playlist_minus"
	!include <material/common>
	!include <material/playlist_minus>
	
	<<$ma_playlist_minus>>
	
	
snippet sprite_material_playlist_play "Google Material Icons playlist_play"
	!include <material/common>
	!include <material/playlist_play>
	
	<<$ma_playlist_play>>
	
	
snippet sprite_material_playlist_plus "Google Material Icons playlist_plus"
	!include <material/common>
	!include <material/playlist_plus>
	
	<<$ma_playlist_plus>>
	
	
snippet sprite_material_playlist_remove "Google Material Icons playlist_remove"
	!include <material/common>
	!include <material/playlist_remove>
	
	<<$ma_playlist_remove>>
	
	
snippet sprite_material_play_pause "Google Material Icons play_pause"
	!include <material/common>
	!include <material/play_pause>
	
	<<$ma_play_pause>>
	
	
snippet sprite_material_play_protected_content "Google Material Icons play_protected_content"
	!include <material/common>
	!include <material/play_protected_content>
	
	<<$ma_play_protected_content>>
	
	
snippet sprite_material_play "Google Material Icons play"
	!include <material/common>
	!include <material/play>
	
	<<$ma_play>>
	
	
snippet sprite_material_playstation "Google Material Icons playstation"
	!include <material/common>
	!include <material/playstation>
	
	<<$ma_playstation>>
	
	
snippet sprite_material_plex "Google Material Icons plex"
	!include <material/common>
	!include <material/plex>
	
	<<$ma_plex>>
	
	
snippet sprite_material_plus_box_outline "Google Material Icons plus_box_outline"
	!include <material/common>
	!include <material/plus_box_outline>
	
	<<$ma_plus_box_outline>>
	
	
snippet sprite_material_plus_box "Google Material Icons plus_box"
	!include <material/common>
	!include <material/plus_box>
	
	<<$ma_plus_box>>
	
	
snippet sprite_material_plus_circle_multiple_outline "Google Material Icons plus_circle_multiple_outline"
	!include <material/common>
	!include <material/plus_circle_multiple_outline>
	
	<<$ma_plus_circle_multiple_outline>>
	
	
snippet sprite_material_plus_circle_outline "Google Material Icons plus_circle_outline"
	!include <material/common>
	!include <material/plus_circle_outline>
	
	<<$ma_plus_circle_outline>>
	
	
snippet sprite_material_plus_circle "Google Material Icons plus_circle"
	!include <material/common>
	!include <material/plus_circle>
	
	<<$ma_plus_circle>>
	
	
snippet sprite_material_plus_network "Google Material Icons plus_network"
	!include <material/common>
	!include <material/plus_network>
	
	<<$ma_plus_network>>
	
	
snippet sprite_material_plus_one "Google Material Icons plus_one"
	!include <material/common>
	!include <material/plus_one>
	
	<<$ma_plus_one>>
	
	
snippet sprite_material_plus_outline "Google Material Icons plus_outline"
	!include <material/common>
	!include <material/plus_outline>
	
	<<$ma_plus_outline>>
	
	
snippet sprite_material_plus "Google Material Icons plus"
	!include <material/common>
	!include <material/plus>
	
	<<$ma_plus>>
	
	
snippet sprite_material_pocket "Google Material Icons pocket"
	!include <material/common>
	!include <material/pocket>
	
	<<$ma_pocket>>
	
	
snippet sprite_material_pokeball "Google Material Icons pokeball"
	!include <material/common>
	!include <material/pokeball>
	
	<<$ma_pokeball>>
	
	
snippet sprite_material_poker_chip "Google Material Icons poker_chip"
	!include <material/common>
	!include <material/poker_chip>
	
	<<$ma_poker_chip>>
	
	
snippet sprite_material_polaroid "Google Material Icons polaroid"
	!include <material/common>
	!include <material/polaroid>
	
	<<$ma_polaroid>>
	
	
snippet sprite_material_poll_box "Google Material Icons poll_box"
	!include <material/common>
	!include <material/poll_box>
	
	<<$ma_poll_box>>
	
	
snippet sprite_material_poll "Google Material Icons poll"
	!include <material/common>
	!include <material/poll>
	
	<<$ma_poll>>
	
	
snippet sprite_material_polymer "Google Material Icons polymer"
	!include <material/common>
	!include <material/polymer>
	
	<<$ma_polymer>>
	
	
snippet sprite_material_pool "Google Material Icons pool"
	!include <material/common>
	!include <material/pool>
	
	<<$ma_pool>>
	
	
snippet sprite_material_popcorn "Google Material Icons popcorn"
	!include <material/common>
	!include <material/popcorn>
	
	<<$ma_popcorn>>
	
	
snippet sprite_material_pot_mix "Google Material Icons pot_mix"
	!include <material/common>
	!include <material/pot_mix>
	
	<<$ma_pot_mix>>
	
	
snippet sprite_material_pot "Google Material Icons pot"
	!include <material/common>
	!include <material/pot>
	
	<<$ma_pot>>
	
	
snippet sprite_material_pound_box "Google Material Icons pound_box"
	!include <material/common>
	!include <material/pound_box>
	
	<<$ma_pound_box>>
	
	
snippet sprite_material_pound "Google Material Icons pound"
	!include <material/common>
	!include <material/pound>
	
	<<$ma_pound>>
	
	
snippet sprite_material_power_plug_off "Google Material Icons power_plug_off"
	!include <material/common>
	!include <material/power_plug_off>
	
	<<$ma_power_plug_off>>
	
	
snippet sprite_material_power_plug "Google Material Icons power_plug"
	!include <material/common>
	!include <material/power_plug>
	
	<<$ma_power_plug>>
	
	
snippet sprite_material_power "Google Material Icons power"
	!include <material/common>
	!include <material/power>
	
	<<$ma_power>>
	
	
snippet sprite_material_power_settings "Google Material Icons power_settings"
	!include <material/common>
	!include <material/power_settings>
	
	<<$ma_power_settings>>
	
	
snippet sprite_material_power_socket_eu "Google Material Icons power_socket_eu"
	!include <material/common>
	!include <material/power_socket_eu>
	
	<<$ma_power_socket_eu>>
	
	
snippet sprite_material_power_socket "Google Material Icons power_socket"
	!include <material/common>
	!include <material/power_socket>
	
	<<$ma_power_socket>>
	
	
snippet sprite_material_power_socket_uk "Google Material Icons power_socket_uk"
	!include <material/common>
	!include <material/power_socket_uk>
	
	<<$ma_power_socket_uk>>
	
	
snippet sprite_material_power_socket_us "Google Material Icons power_socket_us"
	!include <material/common>
	!include <material/power_socket_us>
	
	<<$ma_power_socket_us>>
	
	
snippet sprite_material_prescription "Google Material Icons prescription"
	!include <material/common>
	!include <material/prescription>
	
	<<$ma_prescription>>
	
	
snippet sprite_material_presentation_play "Google Material Icons presentation_play"
	!include <material/common>
	!include <material/presentation_play>
	
	<<$ma_presentation_play>>
	
	
snippet sprite_material_presentation "Google Material Icons presentation"
	!include <material/common>
	!include <material/presentation>
	
	<<$ma_presentation>>
	
	
snippet sprite_material_printer_3d "Google Material Icons printer_3d"
	!include <material/common>
	!include <material/printer_3d>
	
	<<$ma_printer_3d>>
	
	
snippet sprite_material_printer_alert "Google Material Icons printer_alert"
	!include <material/common>
	!include <material/printer_alert>
	
	<<$ma_printer_alert>>
	
	
snippet sprite_material_printer "Google Material Icons printer"
	!include <material/common>
	!include <material/printer>
	
	<<$ma_printer>>
	
	
snippet sprite_material_printer_settings "Google Material Icons printer_settings"
	!include <material/common>
	!include <material/printer_settings>
	
	<<$ma_printer_settings>>
	
	
snippet sprite_material_priority_high "Google Material Icons priority_high"
	!include <material/common>
	!include <material/priority_high>
	
	<<$ma_priority_high>>
	
	
snippet sprite_material_priority_low "Google Material Icons priority_low"
	!include <material/common>
	!include <material/priority_low>
	
	<<$ma_priority_low>>
	
	
snippet sprite_material_professional_hexagon "Google Material Icons professional_hexagon"
	!include <material/common>
	!include <material/professional_hexagon>
	
	<<$ma_professional_hexagon>>
	
	
snippet sprite_material_projector "Google Material Icons projector"
	!include <material/common>
	!include <material/projector>
	
	<<$ma_projector>>
	
	
snippet sprite_material_projector_screen "Google Material Icons projector_screen"
	!include <material/common>
	!include <material/projector_screen>
	
	<<$ma_projector_screen>>
	
	
snippet sprite_material_publish "Google Material Icons publish"
	!include <material/common>
	!include <material/publish>
	
	<<$ma_publish>>
	
	
snippet sprite_material_pulse "Google Material Icons pulse"
	!include <material/common>
	!include <material/pulse>
	
	<<$ma_pulse>>
	
	
snippet sprite_material_puzzle "Google Material Icons puzzle"
	!include <material/common>
	!include <material/puzzle>
	
	<<$ma_puzzle>>
	
	
snippet sprite_material_qqchat "Google Material Icons qqchat"
	!include <material/common>
	!include <material/qqchat>
	
	<<$ma_qqchat>>
	
	
snippet sprite_material_qrcode "Google Material Icons qrcode"
	!include <material/common>
	!include <material/qrcode>
	
	<<$ma_qrcode>>
	
	
snippet sprite_material_qrcode_scan "Google Material Icons qrcode_scan"
	!include <material/common>
	!include <material/qrcode_scan>
	
	<<$ma_qrcode_scan>>
	
	
snippet sprite_material_quadcopter "Google Material Icons quadcopter"
	!include <material/common>
	!include <material/quadcopter>
	
	<<$ma_quadcopter>>
	
	
snippet sprite_material_quality_high "Google Material Icons quality_high"
	!include <material/common>
	!include <material/quality_high>
	
	<<$ma_quality_high>>
	
	
snippet sprite_material_question_mark_circle "Google Material Icons question_mark_circle"
	!include <material/common>
	!include <material/question_mark_circle>
	
	<<$ma_question_mark_circle>>
	
	
snippet sprite_material_quick_reply "Google Material Icons quick_reply"
	!include <material/common>
	!include <material/quick_reply>
	
	<<$ma_quick_reply>>
	
	
snippet sprite_material_quicktime "Google Material Icons quicktime"
	!include <material/common>
	!include <material/quicktime>
	
	<<$ma_quicktime>>
	
	
snippet sprite_material_rabbit "Google Material Icons rabbit"
	!include <material/common>
	!include <material/rabbit>
	
	<<$ma_rabbit>>
	
	
snippet sprite_material_radar "Google Material Icons radar"
	!include <material/common>
	!include <material/radar>
	
	<<$ma_radar>>
	
	
snippet sprite_material_radiator "Google Material Icons radiator"
	!include <material/common>
	!include <material/radiator>
	
	<<$ma_radiator>>
	
	
snippet sprite_material_radioactive "Google Material Icons radioactive"
	!include <material/common>
	!include <material/radioactive>
	
	<<$ma_radioactive>>
	
	
snippet sprite_material_radiobox_blank "Google Material Icons radiobox_blank"
	!include <material/common>
	!include <material/radiobox_blank>
	
	<<$ma_radiobox_blank>>
	
	
snippet sprite_material_radiobox_marked "Google Material Icons radiobox_marked"
	!include <material/common>
	!include <material/radiobox_marked>
	
	<<$ma_radiobox_marked>>
	
	
snippet sprite_material_radio_handheld "Google Material Icons radio_handheld"
	!include <material/common>
	!include <material/radio_handheld>
	
	<<$ma_radio_handheld>>
	
	
snippet sprite_material_radio "Google Material Icons radio"
	!include <material/common>
	!include <material/radio>
	
	<<$ma_radio>>
	
	
snippet sprite_material_radio_tower "Google Material Icons radio_tower"
	!include <material/common>
	!include <material/radio_tower>
	
	<<$ma_radio_tower>>
	
	
snippet sprite_material_raspberrypi "Google Material Icons raspberrypi"
	!include <material/common>
	!include <material/raspberrypi>
	
	<<$ma_raspberrypi>>
	
	
snippet sprite_material_ray_end_arrow "Google Material Icons ray_end_arrow"
	!include <material/common>
	!include <material/ray_end_arrow>
	
	<<$ma_ray_end_arrow>>
	
	
snippet sprite_material_ray_end "Google Material Icons ray_end"
	!include <material/common>
	!include <material/ray_end>
	
	<<$ma_ray_end>>
	
	
snippet sprite_material_ray_start_arrow "Google Material Icons ray_start_arrow"
	!include <material/common>
	!include <material/ray_start_arrow>
	
	<<$ma_ray_start_arrow>>
	
	
snippet sprite_material_ray_start_end "Google Material Icons ray_start_end"
	!include <material/common>
	!include <material/ray_start_end>
	
	<<$ma_ray_start_end>>
	
	
snippet sprite_material_ray_start "Google Material Icons ray_start"
	!include <material/common>
	!include <material/ray_start>
	
	<<$ma_ray_start>>
	
	
snippet sprite_material_ray_vertex "Google Material Icons ray_vertex"
	!include <material/common>
	!include <material/ray_vertex>
	
	<<$ma_ray_vertex>>
	
	
snippet sprite_material_rdio "Google Material Icons rdio"
	!include <material/common>
	!include <material/rdio>
	
	<<$ma_rdio>>
	
	
snippet sprite_material_react "Google Material Icons react"
	!include <material/common>
	!include <material/react>
	
	<<$ma_react>>
	
	
snippet sprite_material_read "Google Material Icons read"
	!include <material/common>
	!include <material/read>
	
	<<$ma_read>>
	
	
snippet sprite_material_receipt "Google Material Icons receipt"
	!include <material/common>
	!include <material/receipt>
	
	<<$ma_receipt>>
	
	
snippet sprite_material_record "Google Material Icons record"
	!include <material/common>
	!include <material/record>
	
	<<$ma_record>>
	
	
snippet sprite_material_record_rec "Google Material Icons record_rec"
	!include <material/common>
	!include <material/record_rec>
	
	<<$ma_record_rec>>
	
	
snippet sprite_material_recycle "Google Material Icons recycle"
	!include <material/common>
	!include <material/recycle>
	
	<<$ma_recycle>>
	
	
snippet sprite_material_reddit "Google Material Icons reddit"
	!include <material/common>
	!include <material/reddit>
	
	<<$ma_reddit>>
	
	
snippet sprite_material_redo "Google Material Icons redo"
	!include <material/common>
	!include <material/redo>
	
	<<$ma_redo>>
	
	
snippet sprite_material_redo_variant "Google Material Icons redo_variant"
	!include <material/common>
	!include <material/redo_variant>
	
	<<$ma_redo_variant>>
	
	
snippet sprite_material_refresh "Google Material Icons refresh"
	!include <material/common>
	!include <material/refresh>
	
	<<$ma_refresh>>
	
	
snippet sprite_material_relative_scale "Google Material Icons relative_scale"
	!include <material/common>
	!include <material/relative_scale>
	
	<<$ma_relative_scale>>
	
	
snippet sprite_material_reload "Google Material Icons reload"
	!include <material/common>
	!include <material/reload>
	
	<<$ma_reload>>
	
	
snippet sprite_material_remote "Google Material Icons remote"
	!include <material/common>
	!include <material/remote>
	
	<<$ma_remote>>
	
	
snippet sprite_material_rename_box "Google Material Icons rename_box"
	!include <material/common>
	!include <material/rename_box>
	
	<<$ma_rename_box>>
	
	
snippet sprite_material_reorder_horizontal "Google Material Icons reorder_horizontal"
	!include <material/common>
	!include <material/reorder_horizontal>
	
	<<$ma_reorder_horizontal>>
	
	
snippet sprite_material_reorder_vertical "Google Material Icons reorder_vertical"
	!include <material/common>
	!include <material/reorder_vertical>
	
	<<$ma_reorder_vertical>>
	
	
snippet sprite_material_repeat_off "Google Material Icons repeat_off"
	!include <material/common>
	!include <material/repeat_off>
	
	<<$ma_repeat_off>>
	
	
snippet sprite_material_repeat_once "Google Material Icons repeat_once"
	!include <material/common>
	!include <material/repeat_once>
	
	<<$ma_repeat_once>>
	
	
snippet sprite_material_repeat "Google Material Icons repeat"
	!include <material/common>
	!include <material/repeat>
	
	<<$ma_repeat>>
	
	
snippet sprite_material_replay "Google Material Icons replay"
	!include <material/common>
	!include <material/replay>
	
	<<$ma_replay>>
	
	
snippet sprite_material_reply_all "Google Material Icons reply_all"
	!include <material/common>
	!include <material/reply_all>
	
	<<$ma_reply_all>>
	
	
snippet sprite_material_reply "Google Material Icons reply"
	!include <material/common>
	!include <material/reply>
	
	<<$ma_reply>>
	
	
snippet sprite_material_reproduction "Google Material Icons reproduction"
	!include <material/common>
	!include <material/reproduction>
	
	<<$ma_reproduction>>
	
	
snippet sprite_material_resize_bottom_right "Google Material Icons resize_bottom_right"
	!include <material/common>
	!include <material/resize_bottom_right>
	
	<<$ma_resize_bottom_right>>
	
	
snippet sprite_material_responsive "Google Material Icons responsive"
	!include <material/common>
	!include <material/responsive>
	
	<<$ma_responsive>>
	
	
snippet sprite_material_restart "Google Material Icons restart"
	!include <material/common>
	!include <material/restart>
	
	<<$ma_restart>>
	
	
snippet sprite_material_restore "Google Material Icons restore"
	!include <material/common>
	!include <material/restore>
	
	<<$ma_restore>>
	
	
snippet sprite_material_rewind_outline "Google Material Icons rewind_outline"
	!include <material/common>
	!include <material/rewind_outline>
	
	<<$ma_rewind_outline>>
	
	
snippet sprite_material_rewind "Google Material Icons rewind"
	!include <material/common>
	!include <material/rewind>
	
	<<$ma_rewind>>
	
	
snippet sprite_material_rhombus_outline "Google Material Icons rhombus_outline"
	!include <material/common>
	!include <material/rhombus_outline>
	
	<<$ma_rhombus_outline>>
	
	
snippet sprite_material_rhombus "Google Material Icons rhombus"
	!include <material/common>
	!include <material/rhombus>
	
	<<$ma_rhombus>>
	
	
snippet sprite_material_ribbon "Google Material Icons ribbon"
	!include <material/common>
	!include <material/ribbon>
	
	<<$ma_ribbon>>
	
	
snippet sprite_material_rice "Google Material Icons rice"
	!include <material/common>
	!include <material/rice>
	
	<<$ma_rice>>
	
	
snippet sprite_material_ring "Google Material Icons ring"
	!include <material/common>
	!include <material/ring>
	
	<<$ma_ring>>
	
	
snippet sprite_material_road "Google Material Icons road"
	!include <material/common>
	!include <material/road>
	
	<<$ma_road>>
	
	
snippet sprite_material_road_variant "Google Material Icons road_variant"
	!include <material/common>
	!include <material/road_variant>
	
	<<$ma_road_variant>>
	
	
snippet sprite_material_robot "Google Material Icons robot"
	!include <material/common>
	!include <material/robot>
	
	<<$ma_robot>>
	
	
snippet sprite_material_rocket "Google Material Icons rocket"
	!include <material/common>
	!include <material/rocket>
	
	<<$ma_rocket>>
	
	
snippet sprite_material_roomba "Google Material Icons roomba"
	!include <material/common>
	!include <material/roomba>
	
	<<$ma_roomba>>
	
	
snippet sprite_material_rotate_3d "Google Material Icons rotate_3d"
	!include <material/common>
	!include <material/rotate_3d>
	
	<<$ma_rotate_3d>>
	
	
snippet sprite_material_rotate_left "Google Material Icons rotate_left"
	!include <material/common>
	!include <material/rotate_left>
	
	<<$ma_rotate_left>>
	
	
snippet sprite_material_rotate_left_variant "Google Material Icons rotate_left_variant"
	!include <material/common>
	!include <material/rotate_left_variant>
	
	<<$ma_rotate_left_variant>>
	
	
snippet sprite_material_rotate_right "Google Material Icons rotate_right"
	!include <material/common>
	!include <material/rotate_right>
	
	<<$ma_rotate_right>>
	
	
snippet sprite_material_rotate_right_variant "Google Material Icons rotate_right_variant"
	!include <material/common>
	!include <material/rotate_right_variant>
	
	<<$ma_rotate_right_variant>>
	
	
snippet sprite_material_rounded_corner "Google Material Icons rounded_corner"
	!include <material/common>
	!include <material/rounded_corner>
	
	<<$ma_rounded_corner>>
	
	
snippet sprite_material_router_wireless "Google Material Icons router_wireless"
	!include <material/common>
	!include <material/router_wireless>
	
	<<$ma_router_wireless>>
	
	
snippet sprite_material_routes "Google Material Icons routes"
	!include <material/common>
	!include <material/routes>
	
	<<$ma_routes>>
	
	
snippet sprite_material_rowing "Google Material Icons rowing"
	!include <material/common>
	!include <material/rowing>
	
	<<$ma_rowing>>
	
	
snippet sprite_material_rss_box "Google Material Icons rss_box"
	!include <material/common>
	!include <material/rss_box>
	
	<<$ma_rss_box>>
	
	
snippet sprite_material_rss "Google Material Icons rss"
	!include <material/common>
	!include <material/rss>
	
	<<$ma_rss>>
	
	
snippet sprite_material_ruler "Google Material Icons ruler"
	!include <material/common>
	!include <material/ruler>
	
	<<$ma_ruler>>
	
	
snippet sprite_material_run_fast "Google Material Icons run_fast"
	!include <material/common>
	!include <material/run_fast>
	
	<<$ma_run_fast>>
	
	
snippet sprite_material_run "Google Material Icons run"
	!include <material/common>
	!include <material/run>
	
	<<$ma_run>>
	
	
snippet sprite_material_sale "Google Material Icons sale"
	!include <material/common>
	!include <material/sale>
	
	<<$ma_sale>>
	
	
snippet sprite_material_sass "Google Material Icons sass"
	!include <material/common>
	!include <material/sass>
	
	<<$ma_sass>>
	
	
snippet sprite_material_satellite "Google Material Icons satellite"
	!include <material/common>
	!include <material/satellite>
	
	<<$ma_satellite>>
	
	
snippet sprite_material_satellite_variant "Google Material Icons satellite_variant"
	!include <material/common>
	!include <material/satellite_variant>
	
	<<$ma_satellite_variant>>
	
	
snippet sprite_material_saxophone "Google Material Icons saxophone"
	!include <material/common>
	!include <material/saxophone>
	
	<<$ma_saxophone>>
	
	
snippet sprite_material_scale_balance "Google Material Icons scale_balance"
	!include <material/common>
	!include <material/scale_balance>
	
	<<$ma_scale_balance>>
	
	
snippet sprite_material_scale_bathroom "Google Material Icons scale_bathroom"
	!include <material/common>
	!include <material/scale_bathroom>
	
	<<$ma_scale_bathroom>>
	
	
snippet sprite_material_scale "Google Material Icons scale"
	!include <material/common>
	!include <material/scale>
	
	<<$ma_scale>>
	
	
snippet sprite_material_scanner "Google Material Icons scanner"
	!include <material/common>
	!include <material/scanner>
	
	<<$ma_scanner>>
	
	
snippet sprite_material_school "Google Material Icons school"
	!include <material/common>
	!include <material/school>
	
	<<$ma_school>>
	
	
snippet sprite_material_screen_rotation_lock "Google Material Icons screen_rotation_lock"
	!include <material/common>
	!include <material/screen_rotation_lock>
	
	<<$ma_screen_rotation_lock>>
	
	
snippet sprite_material_screen_rotation "Google Material Icons screen_rotation"
	!include <material/common>
	!include <material/screen_rotation>
	
	<<$ma_screen_rotation>>
	
	
snippet sprite_material_screwdriver "Google Material Icons screwdriver"
	!include <material/common>
	!include <material/screwdriver>
	
	<<$ma_screwdriver>>
	
	
snippet sprite_material_script "Google Material Icons script"
	!include <material/common>
	!include <material/script>
	
	<<$ma_script>>
	
	
snippet sprite_material_sd "Google Material Icons sd"
	!include <material/common>
	!include <material/sd>
	
	<<$ma_sd>>
	
	
snippet sprite_material_seal "Google Material Icons seal"
	!include <material/common>
	!include <material/seal>
	
	<<$ma_seal>>
	
	
snippet sprite_material_search_web "Google Material Icons search_web"
	!include <material/common>
	!include <material/search_web>
	
	<<$ma_search_web>>
	
	
snippet sprite_material_seat_flat_angled "Google Material Icons seat_flat_angled"
	!include <material/common>
	!include <material/seat_flat_angled>
	
	<<$ma_seat_flat_angled>>
	
	
snippet sprite_material_seat_flat "Google Material Icons seat_flat"
	!include <material/common>
	!include <material/seat_flat>
	
	<<$ma_seat_flat>>
	
	
snippet sprite_material_seat_individual_suite "Google Material Icons seat_individual_suite"
	!include <material/common>
	!include <material/seat_individual_suite>
	
	<<$ma_seat_individual_suite>>
	
	
snippet sprite_material_seat_legroom_extra "Google Material Icons seat_legroom_extra"
	!include <material/common>
	!include <material/seat_legroom_extra>
	
	<<$ma_seat_legroom_extra>>
	
	
snippet sprite_material_seat_legroom_normal "Google Material Icons seat_legroom_normal"
	!include <material/common>
	!include <material/seat_legroom_normal>
	
	<<$ma_seat_legroom_normal>>
	
	
snippet sprite_material_seat_legroom_reduced "Google Material Icons seat_legroom_reduced"
	!include <material/common>
	!include <material/seat_legroom_reduced>
	
	<<$ma_seat_legroom_reduced>>
	
	
snippet sprite_material_seat_recline_extra "Google Material Icons seat_recline_extra"
	!include <material/common>
	!include <material/seat_recline_extra>
	
	<<$ma_seat_recline_extra>>
	
	
snippet sprite_material_seat_recline_normal "Google Material Icons seat_recline_normal"
	!include <material/common>
	!include <material/seat_recline_normal>
	
	<<$ma_seat_recline_normal>>
	
	
snippet sprite_material_security_home "Google Material Icons security_home"
	!include <material/common>
	!include <material/security_home>
	
	<<$ma_security_home>>
	
	
snippet sprite_material_security_network "Google Material Icons security_network"
	!include <material/common>
	!include <material/security_network>
	
	<<$ma_security_network>>
	
	
snippet sprite_material_security "Google Material Icons security"
	!include <material/common>
	!include <material/security>
	
	<<$ma_security>>
	
	
snippet sprite_material_select_all "Google Material Icons select_all"
	!include <material/common>
	!include <material/select_all>
	
	<<$ma_select_all>>
	
	
snippet sprite_material_select_inverse "Google Material Icons select_inverse"
	!include <material/common>
	!include <material/select_inverse>
	
	<<$ma_select_inverse>>
	
	
snippet sprite_material_selection_off "Google Material Icons selection_off"
	!include <material/common>
	!include <material/selection_off>
	
	<<$ma_selection_off>>
	
	
snippet sprite_material_selection "Google Material Icons selection"
	!include <material/common>
	!include <material/selection>
	
	<<$ma_selection>>
	
	
snippet sprite_material_select_off "Google Material Icons select_off"
	!include <material/common>
	!include <material/select_off>
	
	<<$ma_select_off>>
	
	
snippet sprite_material_select "Google Material Icons select"
	!include <material/common>
	!include <material/select>
	
	<<$ma_select>>
	
	
snippet sprite_material_send "Google Material Icons send"
	!include <material/common>
	!include <material/send>
	
	<<$ma_send>>
	
	
snippet sprite_material_send_secure "Google Material Icons send_secure"
	!include <material/common>
	!include <material/send_secure>
	
	<<$ma_send_secure>>
	
	
snippet sprite_material_serial_port "Google Material Icons serial_port"
	!include <material/common>
	!include <material/serial_port>
	
	<<$ma_serial_port>>
	
	
snippet sprite_material_server_minus "Google Material Icons server_minus"
	!include <material/common>
	!include <material/server_minus>
	
	<<$ma_server_minus>>
	
	
snippet sprite_material_server_network_off "Google Material Icons server_network_off"
	!include <material/common>
	!include <material/server_network_off>
	
	<<$ma_server_network_off>>
	
	
snippet sprite_material_server_network "Google Material Icons server_network"
	!include <material/common>
	!include <material/server_network>
	
	<<$ma_server_network>>
	
	
snippet sprite_material_server_off "Google Material Icons server_off"
	!include <material/common>
	!include <material/server_off>
	
	<<$ma_server_off>>
	
	
snippet sprite_material_server_plus "Google Material Icons server_plus"
	!include <material/common>
	!include <material/server_plus>
	
	<<$ma_server_plus>>
	
	
snippet sprite_material_server "Google Material Icons server"
	!include <material/common>
	!include <material/server>
	
	<<$ma_server>>
	
	
snippet sprite_material_server_remove "Google Material Icons server_remove"
	!include <material/common>
	!include <material/server_remove>
	
	<<$ma_server_remove>>
	
	
snippet sprite_material_server_security "Google Material Icons server_security"
	!include <material/common>
	!include <material/server_security>
	
	<<$ma_server_security>>
	
	
snippet sprite_material_set_all "Google Material Icons set_all"
	!include <material/common>
	!include <material/set_all>
	
	<<$ma_set_all>>
	
	
snippet sprite_material_set_center "Google Material Icons set_center"
	!include <material/common>
	!include <material/set_center>
	
	<<$ma_set_center>>
	
	
snippet sprite_material_set_center_right "Google Material Icons set_center_right"
	!include <material/common>
	!include <material/set_center_right>
	
	<<$ma_set_center_right>>
	
	
snippet sprite_material_set_left_center "Google Material Icons set_left_center"
	!include <material/common>
	!include <material/set_left_center>
	
	<<$ma_set_left_center>>
	
	
snippet sprite_material_set_left "Google Material Icons set_left"
	!include <material/common>
	!include <material/set_left>
	
	<<$ma_set_left>>
	
	
snippet sprite_material_set_left_right "Google Material Icons set_left_right"
	!include <material/common>
	!include <material/set_left_right>
	
	<<$ma_set_left_right>>
	
	
snippet sprite_material_set_none "Google Material Icons set_none"
	!include <material/common>
	!include <material/set_none>
	
	<<$ma_set_none>>
	
	
snippet sprite_material_set_right "Google Material Icons set_right"
	!include <material/common>
	!include <material/set_right>
	
	<<$ma_set_right>>
	
	
snippet sprite_material_settings_box "Google Material Icons settings_box"
	!include <material/common>
	!include <material/settings_box>
	
	<<$ma_settings_box>>
	
	
snippet sprite_material_settings "Google Material Icons settings"
	!include <material/common>
	!include <material/settings>
	
	<<$ma_settings>>
	
	
snippet sprite_material_shape_circle_plus "Google Material Icons shape_circle_plus"
	!include <material/common>
	!include <material/shape_circle_plus>
	
	<<$ma_shape_circle_plus>>
	
	
snippet sprite_material_shape_outline "Google Material Icons shape_outline"
	!include <material/common>
	!include <material/shape_outline>
	
	<<$ma_shape_outline>>
	
	
snippet sprite_material_shape_plus "Google Material Icons shape_plus"
	!include <material/common>
	!include <material/shape_plus>
	
	<<$ma_shape_plus>>
	
	
snippet sprite_material_shape_polygon_plus "Google Material Icons shape_polygon_plus"
	!include <material/common>
	!include <material/shape_polygon_plus>
	
	<<$ma_shape_polygon_plus>>
	
	
snippet sprite_material_shape "Google Material Icons shape"
	!include <material/common>
	!include <material/shape>
	
	<<$ma_shape>>
	
	
snippet sprite_material_shape_rectangle_plus "Google Material Icons shape_rectangle_plus"
	!include <material/common>
	!include <material/shape_rectangle_plus>
	
	<<$ma_shape_rectangle_plus>>
	
	
snippet sprite_material_shape_square_plus "Google Material Icons shape_square_plus"
	!include <material/common>
	!include <material/shape_square_plus>
	
	<<$ma_shape_square_plus>>
	
	
snippet sprite_material_share "Google Material Icons share"
	!include <material/common>
	!include <material/share>
	
	<<$ma_share>>
	
	
snippet sprite_material_share_variant "Google Material Icons share_variant"
	!include <material/common>
	!include <material/share_variant>
	
	<<$ma_share_variant>>
	
	
snippet sprite_material_shield_half_full "Google Material Icons shield_half_full"
	!include <material/common>
	!include <material/shield_half_full>
	
	<<$ma_shield_half_full>>
	
	
snippet sprite_material_shield_outline "Google Material Icons shield_outline"
	!include <material/common>
	!include <material/shield_outline>
	
	<<$ma_shield_outline>>
	
	
snippet sprite_material_shield "Google Material Icons shield"
	!include <material/common>
	!include <material/shield>
	
	<<$ma_shield>>
	
	
snippet sprite_material_ship_wheel "Google Material Icons ship_wheel"
	!include <material/common>
	!include <material/ship_wheel>
	
	<<$ma_ship_wheel>>
	
	
snippet sprite_material_shopping_music "Google Material Icons shopping_music"
	!include <material/common>
	!include <material/shopping_music>
	
	<<$ma_shopping_music>>
	
	
snippet sprite_material_shopping "Google Material Icons shopping"
	!include <material/common>
	!include <material/shopping>
	
	<<$ma_shopping>>
	
	
snippet sprite_material_shovel_off "Google Material Icons shovel_off"
	!include <material/common>
	!include <material/shovel_off>
	
	<<$ma_shovel_off>>
	
	
snippet sprite_material_shovel "Google Material Icons shovel"
	!include <material/common>
	!include <material/shovel>
	
	<<$ma_shovel>>
	
	
snippet sprite_material_shredder "Google Material Icons shredder"
	!include <material/common>
	!include <material/shredder>
	
	<<$ma_shredder>>
	
	
snippet sprite_material_shuffle_disabled "Google Material Icons shuffle_disabled"
	!include <material/common>
	!include <material/shuffle_disabled>
	
	<<$ma_shuffle_disabled>>
	
	
snippet sprite_material_shuffle "Google Material Icons shuffle"
	!include <material/common>
	!include <material/shuffle>
	
	<<$ma_shuffle>>
	
	
snippet sprite_material_shuffle_variant "Google Material Icons shuffle_variant"
	!include <material/common>
	!include <material/shuffle_variant>
	
	<<$ma_shuffle_variant>>
	
	
snippet sprite_material_sigma_lower "Google Material Icons sigma_lower"
	!include <material/common>
	!include <material/sigma_lower>
	
	<<$ma_sigma_lower>>
	
	
snippet sprite_material_sigma "Google Material Icons sigma"
	!include <material/common>
	!include <material/sigma>
	
	<<$ma_sigma>>
	
	
snippet sprite_material_signal_2g "Google Material Icons signal_2g"
	!include <material/common>
	!include <material/signal_2g>
	
	<<$ma_signal_2g>>
	
	
snippet sprite_material_signal_3g "Google Material Icons signal_3g"
	!include <material/common>
	!include <material/signal_3g>
	
	<<$ma_signal_3g>>
	
	
snippet sprite_material_signal_4g "Google Material Icons signal_4g"
	!include <material/common>
	!include <material/signal_4g>
	
	<<$ma_signal_4g>>
	
	
snippet sprite_material_signal_hspa_plus "Google Material Icons signal_hspa_plus"
	!include <material/common>
	!include <material/signal_hspa_plus>
	
	<<$ma_signal_hspa_plus>>
	
	
snippet sprite_material_signal_hspa "Google Material Icons signal_hspa"
	!include <material/common>
	!include <material/signal_hspa>
	
	<<$ma_signal_hspa>>
	
	
snippet sprite_material_signal_off "Google Material Icons signal_off"
	!include <material/common>
	!include <material/signal_off>
	
	<<$ma_signal_off>>
	
	
snippet sprite_material_signal "Google Material Icons signal"
	!include <material/common>
	!include <material/signal>
	
	<<$ma_signal>>
	
	
snippet sprite_material_signal_variant "Google Material Icons signal_variant"
	!include <material/common>
	!include <material/signal_variant>
	
	<<$ma_signal_variant>>
	
	
snippet sprite_material_sign_caution "Google Material Icons sign_caution"
	!include <material/common>
	!include <material/sign_caution>
	
	<<$ma_sign_caution>>
	
	
snippet sprite_material_sign_direction "Google Material Icons sign_direction"
	!include <material/common>
	!include <material/sign_direction>
	
	<<$ma_sign_direction>>
	
	
snippet sprite_material_sign_text "Google Material Icons sign_text"
	!include <material/common>
	!include <material/sign_text>
	
	<<$ma_sign_text>>
	
	
snippet sprite_material_silverware_fork "Google Material Icons silverware_fork"
	!include <material/common>
	!include <material/silverware_fork>
	
	<<$ma_silverware_fork>>
	
	
snippet sprite_material_silverware "Google Material Icons silverware"
	!include <material/common>
	!include <material/silverware>
	
	<<$ma_silverware>>
	
	
snippet sprite_material_silverware_spoon "Google Material Icons silverware_spoon"
	!include <material/common>
	!include <material/silverware_spoon>
	
	<<$ma_silverware_spoon>>
	
	
snippet sprite_material_silverware_variant "Google Material Icons silverware_variant"
	!include <material/common>
	!include <material/silverware_variant>
	
	<<$ma_silverware_variant>>
	
	
snippet sprite_material_sim_alert "Google Material Icons sim_alert"
	!include <material/common>
	!include <material/sim_alert>
	
	<<$ma_sim_alert>>
	
	
snippet sprite_material_sim_off "Google Material Icons sim_off"
	!include <material/common>
	!include <material/sim_off>
	
	<<$ma_sim_off>>
	
	
snippet sprite_material_sim "Google Material Icons sim"
	!include <material/common>
	!include <material/sim>
	
	<<$ma_sim>>
	
	
snippet sprite_material_sitemap "Google Material Icons sitemap"
	!include <material/common>
	!include <material/sitemap>
	
	<<$ma_sitemap>>
	
	
snippet sprite_material_skip_backward "Google Material Icons skip_backward"
	!include <material/common>
	!include <material/skip_backward>
	
	<<$ma_skip_backward>>
	
	
snippet sprite_material_skip_forward "Google Material Icons skip_forward"
	!include <material/common>
	!include <material/skip_forward>
	
	<<$ma_skip_forward>>
	
	
snippet sprite_material_skip_next_circle_outline "Google Material Icons skip_next_circle_outline"
	!include <material/common>
	!include <material/skip_next_circle_outline>
	
	<<$ma_skip_next_circle_outline>>
	
	
snippet sprite_material_skip_next_circle "Google Material Icons skip_next_circle"
	!include <material/common>
	!include <material/skip_next_circle>
	
	<<$ma_skip_next_circle>>
	
	
snippet sprite_material_skip_next "Google Material Icons skip_next"
	!include <material/common>
	!include <material/skip_next>
	
	<<$ma_skip_next>>
	
	
snippet sprite_material_skip_previous_circle_outline "Google Material Icons skip_previous_circle_outline"
	!include <material/common>
	!include <material/skip_previous_circle_outline>
	
	<<$ma_skip_previous_circle_outline>>
	
	
snippet sprite_material_skip_previous_circle "Google Material Icons skip_previous_circle"
	!include <material/common>
	!include <material/skip_previous_circle>
	
	<<$ma_skip_previous_circle>>
	
	
snippet sprite_material_skip_previous "Google Material Icons skip_previous"
	!include <material/common>
	!include <material/skip_previous>
	
	<<$ma_skip_previous>>
	
	
snippet sprite_material_skull "Google Material Icons skull"
	!include <material/common>
	!include <material/skull>
	
	<<$ma_skull>>
	
	
snippet sprite_material_skype_business "Google Material Icons skype_business"
	!include <material/common>
	!include <material/skype_business>
	
	<<$ma_skype_business>>
	
	
snippet sprite_material_skype "Google Material Icons skype"
	!include <material/common>
	!include <material/skype>
	
	<<$ma_skype>>
	
	
snippet sprite_material_slack "Google Material Icons slack"
	!include <material/common>
	!include <material/slack>
	
	<<$ma_slack>>
	
	
snippet sprite_material_sleep_off "Google Material Icons sleep_off"
	!include <material/common>
	!include <material/sleep_off>
	
	<<$ma_sleep_off>>
	
	
snippet sprite_material_sleep "Google Material Icons sleep"
	!include <material/common>
	!include <material/sleep>
	
	<<$ma_sleep>>
	
	
snippet sprite_material_smoking_off "Google Material Icons smoking_off"
	!include <material/common>
	!include <material/smoking_off>
	
	<<$ma_smoking_off>>
	
	
snippet sprite_material_smoking "Google Material Icons smoking"
	!include <material/common>
	!include <material/smoking>
	
	<<$ma_smoking>>
	
	
snippet sprite_material_snapchat "Google Material Icons snapchat"
	!include <material/common>
	!include <material/snapchat>
	
	<<$ma_snapchat>>
	
	
snippet sprite_material_snowflake "Google Material Icons snowflake"
	!include <material/common>
	!include <material/snowflake>
	
	<<$ma_snowflake>>
	
	
snippet sprite_material_snowman "Google Material Icons snowman"
	!include <material/common>
	!include <material/snowman>
	
	<<$ma_snowman>>
	
	
snippet sprite_material_soccer_field "Google Material Icons soccer_field"
	!include <material/common>
	!include <material/soccer_field>
	
	<<$ma_soccer_field>>
	
	
snippet sprite_material_soccer "Google Material Icons soccer"
	!include <material/common>
	!include <material/soccer>
	
	<<$ma_soccer>>
	
	
snippet sprite_material_sofa "Google Material Icons sofa"
	!include <material/common>
	!include <material/sofa>
	
	<<$ma_sofa>>
	
	
snippet sprite_material_solid "Google Material Icons solid"
	!include <material/common>
	!include <material/solid>
	
	<<$ma_solid>>
	
	
snippet sprite_material_sort_alphabetical "Google Material Icons sort_alphabetical"
	!include <material/common>
	!include <material/sort_alphabetical>
	
	<<$ma_sort_alphabetical>>
	
	
snippet sprite_material_sort_ascending "Google Material Icons sort_ascending"
	!include <material/common>
	!include <material/sort_ascending>
	
	<<$ma_sort_ascending>>
	
	
snippet sprite_material_sort_descending "Google Material Icons sort_descending"
	!include <material/common>
	!include <material/sort_descending>
	
	<<$ma_sort_descending>>
	
	
snippet sprite_material_sort_numeric "Google Material Icons sort_numeric"
	!include <material/common>
	!include <material/sort_numeric>
	
	<<$ma_sort_numeric>>
	
	
snippet sprite_material_sort "Google Material Icons sort"
	!include <material/common>
	!include <material/sort>
	
	<<$ma_sort>>
	
	
snippet sprite_material_sort_variant "Google Material Icons sort_variant"
	!include <material/common>
	!include <material/sort_variant>
	
	<<$ma_sort_variant>>
	
	
snippet sprite_material_soundcloud "Google Material Icons soundcloud"
	!include <material/common>
	!include <material/soundcloud>
	
	<<$ma_soundcloud>>
	
	
snippet sprite_material_source_branch "Google Material Icons source_branch"
	!include <material/common>
	!include <material/source_branch>
	
	<<$ma_source_branch>>
	
	
snippet sprite_material_source_commit_end_local "Google Material Icons source_commit_end_local"
	!include <material/common>
	!include <material/source_commit_end_local>
	
	<<$ma_source_commit_end_local>>
	
	
snippet sprite_material_source_commit_end "Google Material Icons source_commit_end"
	!include <material/common>
	!include <material/source_commit_end>
	
	<<$ma_source_commit_end>>
	
	
snippet sprite_material_source_commit_local "Google Material Icons source_commit_local"
	!include <material/common>
	!include <material/source_commit_local>
	
	<<$ma_source_commit_local>>
	
	
snippet sprite_material_source_commit_next_local "Google Material Icons source_commit_next_local"
	!include <material/common>
	!include <material/source_commit_next_local>
	
	<<$ma_source_commit_next_local>>
	
	
snippet sprite_material_source_commit "Google Material Icons source_commit"
	!include <material/common>
	!include <material/source_commit>
	
	<<$ma_source_commit>>
	
	
snippet sprite_material_source_commit_start_next_local "Google Material Icons source_commit_start_next_local"
	!include <material/common>
	!include <material/source_commit_start_next_local>
	
	<<$ma_source_commit_start_next_local>>
	
	
snippet sprite_material_source_commit_start "Google Material Icons source_commit_start"
	!include <material/common>
	!include <material/source_commit_start>
	
	<<$ma_source_commit_start>>
	
	
snippet sprite_material_source_fork "Google Material Icons source_fork"
	!include <material/common>
	!include <material/source_fork>
	
	<<$ma_source_fork>>
	
	
snippet sprite_material_source_merge "Google Material Icons source_merge"
	!include <material/common>
	!include <material/source_merge>
	
	<<$ma_source_merge>>
	
	
snippet sprite_material_source_pull "Google Material Icons source_pull"
	!include <material/common>
	!include <material/source_pull>
	
	<<$ma_source_pull>>
	
	
snippet sprite_material_soy_sauce "Google Material Icons soy_sauce"
	!include <material/common>
	!include <material/soy_sauce>
	
	<<$ma_soy_sauce>>
	
	
snippet sprite_material_speaker_off "Google Material Icons speaker_off"
	!include <material/common>
	!include <material/speaker_off>
	
	<<$ma_speaker_off>>
	
	
snippet sprite_material_speaker "Google Material Icons speaker"
	!include <material/common>
	!include <material/speaker>
	
	<<$ma_speaker>>
	
	
snippet sprite_material_speaker_wireless "Google Material Icons speaker_wireless"
	!include <material/common>
	!include <material/speaker_wireless>
	
	<<$ma_speaker_wireless>>
	
	
snippet sprite_material_speedometer "Google Material Icons speedometer"
	!include <material/common>
	!include <material/speedometer>
	
	<<$ma_speedometer>>
	
	
snippet sprite_material_spellcheck "Google Material Icons spellcheck"
	!include <material/common>
	!include <material/spellcheck>
	
	<<$ma_spellcheck>>
	
	
snippet sprite_material_spotify "Google Material Icons spotify"
	!include <material/common>
	!include <material/spotify>
	
	<<$ma_spotify>>
	
	
snippet sprite_material_spotlight_beam "Google Material Icons spotlight_beam"
	!include <material/common>
	!include <material/spotlight_beam>
	
	<<$ma_spotlight_beam>>
	
	
snippet sprite_material_spotlight "Google Material Icons spotlight"
	!include <material/common>
	!include <material/spotlight>
	
	<<$ma_spotlight>>
	
	
snippet sprite_material_spray "Google Material Icons spray"
	!include <material/common>
	!include <material/spray>
	
	<<$ma_spray>>
	
	
snippet sprite_material_spreadsheet "Google Material Icons spreadsheet"
	!include <material/common>
	!include <material/spreadsheet>
	
	<<$ma_spreadsheet>>
	
	
snippet sprite_material_square_inc_cash "Google Material Icons square_inc_cash"
	!include <material/common>
	!include <material/square_inc_cash>
	
	<<$ma_square_inc_cash>>
	
	
snippet sprite_material_square_inc "Google Material Icons square_inc"
	!include <material/common>
	!include <material/square_inc>
	
	<<$ma_square_inc>>
	
	
snippet sprite_material_square_outline "Google Material Icons square_outline"
	!include <material/common>
	!include <material/square_outline>
	
	<<$ma_square_outline>>
	
	
snippet sprite_material_square "Google Material Icons square"
	!include <material/common>
	!include <material/square>
	
	<<$ma_square>>
	
	
snippet sprite_material_square_root "Google Material Icons square_root"
	!include <material/common>
	!include <material/square_root>
	
	<<$ma_square_root>>
	
	
snippet sprite_material_stackexchange "Google Material Icons stackexchange"
	!include <material/common>
	!include <material/stackexchange>
	
	<<$ma_stackexchange>>
	
	
snippet sprite_material_stackoverflow "Google Material Icons stackoverflow"
	!include <material/common>
	!include <material/stackoverflow>
	
	<<$ma_stackoverflow>>
	
	
snippet sprite_material_stadium "Google Material Icons stadium"
	!include <material/common>
	!include <material/stadium>
	
	<<$ma_stadium>>
	
	
snippet sprite_material_stairs "Google Material Icons stairs"
	!include <material/common>
	!include <material/stairs>
	
	<<$ma_stairs>>
	
	
snippet sprite_material_standard_definition "Google Material Icons standard_definition"
	!include <material/common>
	!include <material/standard_definition>
	
	<<$ma_standard_definition>>
	
	
snippet sprite_material_star_circle "Google Material Icons star_circle"
	!include <material/common>
	!include <material/star_circle>
	
	<<$ma_star_circle>>
	
	
snippet sprite_material_star_half "Google Material Icons star_half"
	!include <material/common>
	!include <material/star_half>
	
	<<$ma_star_half>>
	
	
snippet sprite_material_star_of_david "Google Material Icons star_of_david"
	!include <material/common>
	!include <material/star_of_david>
	
	<<$ma_star_of_david>>
	
	
snippet sprite_material_star_off "Google Material Icons star_off"
	!include <material/common>
	!include <material/star_off>
	
	<<$ma_star_off>>
	
	
snippet sprite_material_star_outline "Google Material Icons star_outline"
	!include <material/common>
	!include <material/star_outline>
	
	<<$ma_star_outline>>
	
	
snippet sprite_material_star "Google Material Icons star"
	!include <material/common>
	!include <material/star>
	
	<<$ma_star>>
	
	
snippet sprite_material_steam "Google Material Icons steam"
	!include <material/common>
	!include <material/steam>
	
	<<$ma_steam>>
	
	
snippet sprite_material_steering "Google Material Icons steering"
	!include <material/common>
	!include <material/steering>
	
	<<$ma_steering>>
	
	
snippet sprite_material_step_backward_2 "Google Material Icons step_backward_2"
	!include <material/common>
	!include <material/step_backward_2>
	
	<<$ma_step_backward_2>>
	
	
snippet sprite_material_step_backward "Google Material Icons step_backward"
	!include <material/common>
	!include <material/step_backward>
	
	<<$ma_step_backward>>
	
	
snippet sprite_material_step_forward_2 "Google Material Icons step_forward_2"
	!include <material/common>
	!include <material/step_forward_2>
	
	<<$ma_step_forward_2>>
	
	
snippet sprite_material_step_forward "Google Material Icons step_forward"
	!include <material/common>
	!include <material/step_forward>
	
	<<$ma_step_forward>>
	
	
snippet sprite_material_stethoscope "Google Material Icons stethoscope"
	!include <material/common>
	!include <material/stethoscope>
	
	<<$ma_stethoscope>>
	
	
snippet sprite_material_sticker_emoji "Google Material Icons sticker_emoji"
	!include <material/common>
	!include <material/sticker_emoji>
	
	<<$ma_sticker_emoji>>
	
	
snippet sprite_material_sticker "Google Material Icons sticker"
	!include <material/common>
	!include <material/sticker>
	
	<<$ma_sticker>>
	
	
snippet sprite_material_stocking "Google Material Icons stocking"
	!include <material/common>
	!include <material/stocking>
	
	<<$ma_stocking>>
	
	
snippet sprite_material_stop_circle_outline "Google Material Icons stop_circle_outline"
	!include <material/common>
	!include <material/stop_circle_outline>
	
	<<$ma_stop_circle_outline>>
	
	
snippet sprite_material_stop_circle "Google Material Icons stop_circle"
	!include <material/common>
	!include <material/stop_circle>
	
	<<$ma_stop_circle>>
	
	
snippet sprite_material_stop "Google Material Icons stop"
	!include <material/common>
	!include <material/stop>
	
	<<$ma_stop>>
	
	
snippet sprite_material_store_24_hour "Google Material Icons store_24_hour"
	!include <material/common>
	!include <material/store_24_hour>
	
	<<$ma_store_24_hour>>
	
	
snippet sprite_material_store "Google Material Icons store"
	!include <material/common>
	!include <material/store>
	
	<<$ma_store>>
	
	
snippet sprite_material_stove "Google Material Icons stove"
	!include <material/common>
	!include <material/stove>
	
	<<$ma_stove>>
	
	
snippet sprite_material_subdirectory_arrow_left "Google Material Icons subdirectory_arrow_left"
	!include <material/common>
	!include <material/subdirectory_arrow_left>
	
	<<$ma_subdirectory_arrow_left>>
	
	
snippet sprite_material_subdirectory_arrow_right "Google Material Icons subdirectory_arrow_right"
	!include <material/common>
	!include <material/subdirectory_arrow_right>
	
	<<$ma_subdirectory_arrow_right>>
	
	
snippet sprite_material_subway "Google Material Icons subway"
	!include <material/common>
	!include <material/subway>
	
	<<$ma_subway>>
	
	
snippet sprite_material_subway_variant "Google Material Icons subway_variant"
	!include <material/common>
	!include <material/subway_variant>
	
	<<$ma_subway_variant>>
	
	
snippet sprite_material_summit "Google Material Icons summit"
	!include <material/common>
	!include <material/summit>
	
	<<$ma_summit>>
	
	
snippet sprite_material_sunglasses "Google Material Icons sunglasses"
	!include <material/common>
	!include <material/sunglasses>
	
	<<$ma_sunglasses>>
	
	
snippet sprite_material_surround_sound_2_0 "Google Material Icons surround_sound_2_0"
	!include <material/common>
	!include <material/surround_sound_2_0>
	
	<<$ma_surround_sound_2_0>>
	
	
snippet sprite_material_surround_sound_3_1 "Google Material Icons surround_sound_3_1"
	!include <material/common>
	!include <material/surround_sound_3_1>
	
	<<$ma_surround_sound_3_1>>
	
	
snippet sprite_material_surround_sound_5_1 "Google Material Icons surround_sound_5_1"
	!include <material/common>
	!include <material/surround_sound_5_1>
	
	<<$ma_surround_sound_5_1>>
	
	
snippet sprite_material_surround_sound_7_1 "Google Material Icons surround_sound_7_1"
	!include <material/common>
	!include <material/surround_sound_7_1>
	
	<<$ma_surround_sound_7_1>>
	
	
snippet sprite_material_surround_sound "Google Material Icons surround_sound"
	!include <material/common>
	!include <material/surround_sound>
	
	<<$ma_surround_sound>>
	
	
snippet sprite_material_svg "Google Material Icons svg"
	!include <material/common>
	!include <material/svg>
	
	<<$ma_svg>>
	
	
snippet sprite_material_swap_horizontal "Google Material Icons swap_horizontal"
	!include <material/common>
	!include <material/swap_horizontal>
	
	<<$ma_swap_horizontal>>
	
	
snippet sprite_material_swap_vertical "Google Material Icons swap_vertical"
	!include <material/common>
	!include <material/swap_vertical>
	
	<<$ma_swap_vertical>>
	
	
snippet sprite_material_swim "Google Material Icons swim"
	!include <material/common>
	!include <material/swim>
	
	<<$ma_swim>>
	
	
snippet sprite_material_switch "Google Material Icons switch"
	!include <material/common>
	!include <material/switch>
	
	<<$ma_switch>>
	
	
snippet sprite_material_sword_cross "Google Material Icons sword_cross"
	!include <material/common>
	!include <material/sword_cross>
	
	<<$ma_sword_cross>>
	
	
snippet sprite_material_sword "Google Material Icons sword"
	!include <material/common>
	!include <material/sword>
	
	<<$ma_sword>>
	
	
snippet sprite_material_sync_alert "Google Material Icons sync_alert"
	!include <material/common>
	!include <material/sync_alert>
	
	<<$ma_sync_alert>>
	
	
snippet sprite_material_sync_off "Google Material Icons sync_off"
	!include <material/common>
	!include <material/sync_off>
	
	<<$ma_sync_off>>
	
	
snippet sprite_material_sync "Google Material Icons sync"
	!include <material/common>
	!include <material/sync>
	
	<<$ma_sync>>
	
	
snippet sprite_material_table_column_plus_after "Google Material Icons table_column_plus_after"
	!include <material/common>
	!include <material/table_column_plus_after>
	
	<<$ma_table_column_plus_after>>
	
	
snippet sprite_material_table_column_plus_before "Google Material Icons table_column_plus_before"
	!include <material/common>
	!include <material/table_column_plus_before>
	
	<<$ma_table_column_plus_before>>
	
	
snippet sprite_material_table_column "Google Material Icons table_column"
	!include <material/common>
	!include <material/table_column>
	
	<<$ma_table_column>>
	
	
snippet sprite_material_table_column_remove "Google Material Icons table_column_remove"
	!include <material/common>
	!include <material/table_column_remove>
	
	<<$ma_table_column_remove>>
	
	
snippet sprite_material_table_column_width "Google Material Icons table_column_width"
	!include <material/common>
	!include <material/table_column_width>
	
	<<$ma_table_column_width>>
	
	
snippet sprite_material_table_edit "Google Material Icons table_edit"
	!include <material/common>
	!include <material/table_edit>
	
	<<$ma_table_edit>>
	
	
snippet sprite_material_table_large "Google Material Icons table_large"
	!include <material/common>
	!include <material/table_large>
	
	<<$ma_table_large>>
	
	
snippet sprite_material_table_of_contents "Google Material Icons table_of_contents"
	!include <material/common>
	!include <material/table_of_contents>
	
	<<$ma_table_of_contents>>
	
	
snippet sprite_material_table "Google Material Icons table"
	!include <material/common>
	!include <material/table>
	
	<<$ma_table>>
	
	
snippet sprite_material_table_row_height "Google Material Icons table_row_height"
	!include <material/common>
	!include <material/table_row_height>
	
	<<$ma_table_row_height>>
	
	
snippet sprite_material_table_row_plus_after "Google Material Icons table_row_plus_after"
	!include <material/common>
	!include <material/table_row_plus_after>
	
	<<$ma_table_row_plus_after>>
	
	
snippet sprite_material_table_row_plus_before "Google Material Icons table_row_plus_before"
	!include <material/common>
	!include <material/table_row_plus_before>
	
	<<$ma_table_row_plus_before>>
	
	
snippet sprite_material_table_row "Google Material Icons table_row"
	!include <material/common>
	!include <material/table_row>
	
	<<$ma_table_row>>
	
	
snippet sprite_material_table_row_remove "Google Material Icons table_row_remove"
	!include <material/common>
	!include <material/table_row_remove>
	
	<<$ma_table_row_remove>>
	
	
snippet sprite_material_table_settings "Google Material Icons table_settings"
	!include <material/common>
	!include <material/table_settings>
	
	<<$ma_table_settings>>
	
	
snippet sprite_material_tablet_android "Google Material Icons tablet_android"
	!include <material/common>
	!include <material/tablet_android>
	
	<<$ma_tablet_android>>
	
	
snippet sprite_material_tablet_ipad "Google Material Icons tablet_ipad"
	!include <material/common>
	!include <material/tablet_ipad>
	
	<<$ma_tablet_ipad>>
	
	
snippet sprite_material_tablet "Google Material Icons tablet"
	!include <material/common>
	!include <material/tablet>
	
	<<$ma_tablet>>
	
	
snippet sprite_material_tab_plus "Google Material Icons tab_plus"
	!include <material/common>
	!include <material/tab_plus>
	
	<<$ma_tab_plus>>
	
	
snippet sprite_material_tab "Google Material Icons tab"
	!include <material/common>
	!include <material/tab>
	
	<<$ma_tab>>
	
	
snippet sprite_material_tab_unselected "Google Material Icons tab_unselected"
	!include <material/common>
	!include <material/tab_unselected>
	
	<<$ma_tab_unselected>>
	
	
snippet sprite_material_taco "Google Material Icons taco"
	!include <material/common>
	!include <material/taco>
	
	<<$ma_taco>>
	
	
snippet sprite_material_tag_faces "Google Material Icons tag_faces"
	!include <material/common>
	!include <material/tag_faces>
	
	<<$ma_tag_faces>>
	
	
snippet sprite_material_tag_heart "Google Material Icons tag_heart"
	!include <material/common>
	!include <material/tag_heart>
	
	<<$ma_tag_heart>>
	
	
snippet sprite_material_tag_multiple "Google Material Icons tag_multiple"
	!include <material/common>
	!include <material/tag_multiple>
	
	<<$ma_tag_multiple>>
	
	
snippet sprite_material_tag_outline "Google Material Icons tag_outline"
	!include <material/common>
	!include <material/tag_outline>
	
	<<$ma_tag_outline>>
	
	
snippet sprite_material_tag_plus "Google Material Icons tag_plus"
	!include <material/common>
	!include <material/tag_plus>
	
	<<$ma_tag_plus>>
	
	
snippet sprite_material_tag "Google Material Icons tag"
	!include <material/common>
	!include <material/tag>
	
	<<$ma_tag>>
	
	
snippet sprite_material_tag_remove "Google Material Icons tag_remove"
	!include <material/common>
	!include <material/tag_remove>
	
	<<$ma_tag_remove>>
	
	
snippet sprite_material_tag_text_outline "Google Material Icons tag_text_outline"
	!include <material/common>
	!include <material/tag_text_outline>
	
	<<$ma_tag_text_outline>>
	
	
snippet sprite_material_target "Google Material Icons target"
	!include <material/common>
	!include <material/target>
	
	<<$ma_target>>
	
	
snippet sprite_material_taxi "Google Material Icons taxi"
	!include <material/common>
	!include <material/taxi>
	
	<<$ma_taxi>>
	
	
snippet sprite_material_teamviewer "Google Material Icons teamviewer"
	!include <material/common>
	!include <material/teamviewer>
	
	<<$ma_teamviewer>>
	
	
snippet sprite_material_telegram "Google Material Icons telegram"
	!include <material/common>
	!include <material/telegram>
	
	<<$ma_telegram>>
	
	
snippet sprite_material_television_box "Google Material Icons television_box"
	!include <material/common>
	!include <material/television_box>
	
	<<$ma_television_box>>
	
	
snippet sprite_material_television_classic_off "Google Material Icons television_classic_off"
	!include <material/common>
	!include <material/television_classic_off>
	
	<<$ma_television_classic_off>>
	
	
snippet sprite_material_television_classic "Google Material Icons television_classic"
	!include <material/common>
	!include <material/television_classic>
	
	<<$ma_television_classic>>
	
	
snippet sprite_material_television_guide "Google Material Icons television_guide"
	!include <material/common>
	!include <material/television_guide>
	
	<<$ma_television_guide>>
	
	
snippet sprite_material_television_off "Google Material Icons television_off"
	!include <material/common>
	!include <material/television_off>
	
	<<$ma_television_off>>
	
	
snippet sprite_material_television "Google Material Icons television"
	!include <material/common>
	!include <material/television>
	
	<<$ma_television>>
	
	
snippet sprite_material_temperature_celsius "Google Material Icons temperature_celsius"
	!include <material/common>
	!include <material/temperature_celsius>
	
	<<$ma_temperature_celsius>>
	
	
snippet sprite_material_temperature_fahrenheit "Google Material Icons temperature_fahrenheit"
	!include <material/common>
	!include <material/temperature_fahrenheit>
	
	<<$ma_temperature_fahrenheit>>
	
	
snippet sprite_material_temperature_kelvin "Google Material Icons temperature_kelvin"
	!include <material/common>
	!include <material/temperature_kelvin>
	
	<<$ma_temperature_kelvin>>
	
	
snippet sprite_material_tennis "Google Material Icons tennis"
	!include <material/common>
	!include <material/tennis>
	
	<<$ma_tennis>>
	
	
snippet sprite_material_tent "Google Material Icons tent"
	!include <material/common>
	!include <material/tent>
	
	<<$ma_tent>>
	
	
snippet sprite_material_terrain "Google Material Icons terrain"
	!include <material/common>
	!include <material/terrain>
	
	<<$ma_terrain>>
	
	
snippet sprite_material_test_tube "Google Material Icons test_tube"
	!include <material/common>
	!include <material/test_tube>
	
	<<$ma_test_tube>>
	
	
snippet sprite_material_textbox_password "Google Material Icons textbox_password"
	!include <material/common>
	!include <material/textbox_password>
	
	<<$ma_textbox_password>>
	
	
snippet sprite_material_textbox "Google Material Icons textbox"
	!include <material/common>
	!include <material/textbox>
	
	<<$ma_textbox>>
	
	
snippet sprite_material_text_shadow "Google Material Icons text_shadow"
	!include <material/common>
	!include <material/text_shadow>
	
	<<$ma_text_shadow>>
	
	
snippet sprite_material_text_to_speech_off "Google Material Icons text_to_speech_off"
	!include <material/common>
	!include <material/text_to_speech_off>
	
	<<$ma_text_to_speech_off>>
	
	
snippet sprite_material_text_to_speech "Google Material Icons text_to_speech"
	!include <material/common>
	!include <material/text_to_speech>
	
	<<$ma_text_to_speech>>
	
	
snippet sprite_material_texture "Google Material Icons texture"
	!include <material/common>
	!include <material/texture>
	
	<<$ma_texture>>
	
	
snippet sprite_material_theater "Google Material Icons theater"
	!include <material/common>
	!include <material/theater>
	
	<<$ma_theater>>
	
	
snippet sprite_material_theme_light_dark "Google Material Icons theme_light_dark"
	!include <material/common>
	!include <material/theme_light_dark>
	
	<<$ma_theme_light_dark>>
	
	
snippet sprite_material_thermometer_lines "Google Material Icons thermometer_lines"
	!include <material/common>
	!include <material/thermometer_lines>
	
	<<$ma_thermometer_lines>>
	
	
snippet sprite_material_thermometer "Google Material Icons thermometer"
	!include <material/common>
	!include <material/thermometer>
	
	<<$ma_thermometer>>
	
	
snippet sprite_material_thought_bubble_outline "Google Material Icons thought_bubble_outline"
	!include <material/common>
	!include <material/thought_bubble_outline>
	
	<<$ma_thought_bubble_outline>>
	
	
snippet sprite_material_thought_bubble "Google Material Icons thought_bubble"
	!include <material/common>
	!include <material/thought_bubble>
	
	<<$ma_thought_bubble>>
	
	
snippet sprite_material_thumb_down_outline "Google Material Icons thumb_down_outline"
	!include <material/common>
	!include <material/thumb_down_outline>
	
	<<$ma_thumb_down_outline>>
	
	
snippet sprite_material_thumb_down "Google Material Icons thumb_down"
	!include <material/common>
	!include <material/thumb_down>
	
	<<$ma_thumb_down>>
	
	
snippet sprite_material_thumbs_up_down "Google Material Icons thumbs_up_down"
	!include <material/common>
	!include <material/thumbs_up_down>
	
	<<$ma_thumbs_up_down>>
	
	
snippet sprite_material_thumb_up_outline "Google Material Icons thumb_up_outline"
	!include <material/common>
	!include <material/thumb_up_outline>
	
	<<$ma_thumb_up_outline>>
	
	
snippet sprite_material_thumb_up "Google Material Icons thumb_up"
	!include <material/common>
	!include <material/thumb_up>
	
	<<$ma_thumb_up>>
	
	
snippet sprite_material_ticket_account "Google Material Icons ticket_account"
	!include <material/common>
	!include <material/ticket_account>
	
	<<$ma_ticket_account>>
	
	
snippet sprite_material_ticket_confirmation "Google Material Icons ticket_confirmation"
	!include <material/common>
	!include <material/ticket_confirmation>
	
	<<$ma_ticket_confirmation>>
	
	
snippet sprite_material_ticket_percent "Google Material Icons ticket_percent"
	!include <material/common>
	!include <material/ticket_percent>
	
	<<$ma_ticket_percent>>
	
	
snippet sprite_material_ticket "Google Material Icons ticket"
	!include <material/common>
	!include <material/ticket>
	
	<<$ma_ticket>>
	
	
snippet sprite_material_tie "Google Material Icons tie"
	!include <material/common>
	!include <material/tie>
	
	<<$ma_tie>>
	
	
snippet sprite_material_tilde "Google Material Icons tilde"
	!include <material/common>
	!include <material/tilde>
	
	<<$ma_tilde>>
	
	
snippet sprite_material_timelapse "Google Material Icons timelapse"
	!include <material/common>
	!include <material/timelapse>
	
	<<$ma_timelapse>>
	
	
snippet sprite_material_timer_10 "Google Material Icons timer_10"
	!include <material/common>
	!include <material/timer_10>
	
	<<$ma_timer_10>>
	
	
snippet sprite_material_timer_3 "Google Material Icons timer_3"
	!include <material/common>
	!include <material/timer_3>
	
	<<$ma_timer_3>>
	
	
snippet sprite_material_timer_off "Google Material Icons timer_off"
	!include <material/common>
	!include <material/timer_off>
	
	<<$ma_timer_off>>
	
	
snippet sprite_material_timer "Google Material Icons timer"
	!include <material/common>
	!include <material/timer>
	
	<<$ma_timer>>
	
	
snippet sprite_material_timer_sand_empty "Google Material Icons timer_sand_empty"
	!include <material/common>
	!include <material/timer_sand_empty>
	
	<<$ma_timer_sand_empty>>
	
	
snippet sprite_material_timer_sand_full "Google Material Icons timer_sand_full"
	!include <material/common>
	!include <material/timer_sand_full>
	
	<<$ma_timer_sand_full>>
	
	
snippet sprite_material_timer_sand "Google Material Icons timer_sand"
	!include <material/common>
	!include <material/timer_sand>
	
	<<$ma_timer_sand>>
	
	
snippet sprite_material_timetable "Google Material Icons timetable"
	!include <material/common>
	!include <material/timetable>
	
	<<$ma_timetable>>
	
	
snippet sprite_material_toggle_switch_off "Google Material Icons toggle_switch_off"
	!include <material/common>
	!include <material/toggle_switch_off>
	
	<<$ma_toggle_switch_off>>
	
	
snippet sprite_material_toggle_switch "Google Material Icons toggle_switch"
	!include <material/common>
	!include <material/toggle_switch>
	
	<<$ma_toggle_switch>>
	
	
snippet sprite_material_tooltip_edit "Google Material Icons tooltip_edit"
	!include <material/common>
	!include <material/tooltip_edit>
	
	<<$ma_tooltip_edit>>
	
	
snippet sprite_material_tooltip_image "Google Material Icons tooltip_image"
	!include <material/common>
	!include <material/tooltip_image>
	
	<<$ma_tooltip_image>>
	
	
snippet sprite_material_tooltip_outline_plus "Google Material Icons tooltip_outline_plus"
	!include <material/common>
	!include <material/tooltip_outline_plus>
	
	<<$ma_tooltip_outline_plus>>
	
	
snippet sprite_material_tooltip_outline "Google Material Icons tooltip_outline"
	!include <material/common>
	!include <material/tooltip_outline>
	
	<<$ma_tooltip_outline>>
	
	
snippet sprite_material_tooltip "Google Material Icons tooltip"
	!include <material/common>
	!include <material/tooltip>
	
	<<$ma_tooltip>>
	
	
snippet sprite_material_tooltip_text "Google Material Icons tooltip_text"
	!include <material/common>
	!include <material/tooltip_text>
	
	<<$ma_tooltip_text>>
	
	
snippet sprite_material_tooth "Google Material Icons tooth"
	!include <material/common>
	!include <material/tooth>
	
	<<$ma_tooth>>
	
	
snippet sprite_material_tor "Google Material Icons tor"
	!include <material/common>
	!include <material/tor>
	
	<<$ma_tor>>
	
	
snippet sprite_material_tower_beach "Google Material Icons tower_beach"
	!include <material/common>
	!include <material/tower_beach>
	
	<<$ma_tower_beach>>
	
	
snippet sprite_material_tower_fire "Google Material Icons tower_fire"
	!include <material/common>
	!include <material/tower_fire>
	
	<<$ma_tower_fire>>
	
	
snippet sprite_material_towing "Google Material Icons towing"
	!include <material/common>
	!include <material/towing>
	
	<<$ma_towing>>
	
	
snippet sprite_material_trackpad "Google Material Icons trackpad"
	!include <material/common>
	!include <material/trackpad>
	
	<<$ma_trackpad>>
	
	
snippet sprite_material_traffic_light "Google Material Icons traffic_light"
	!include <material/common>
	!include <material/traffic_light>
	
	<<$ma_traffic_light>>
	
	
snippet sprite_material_train "Google Material Icons train"
	!include <material/common>
	!include <material/train>
	
	<<$ma_train>>
	
	
snippet sprite_material_tram "Google Material Icons tram"
	!include <material/common>
	!include <material/tram>
	
	<<$ma_tram>>
	
	
snippet sprite_material_transcribe_close "Google Material Icons transcribe_close"
	!include <material/common>
	!include <material/transcribe_close>
	
	<<$ma_transcribe_close>>
	
	
snippet sprite_material_transcribe "Google Material Icons transcribe"
	!include <material/common>
	!include <material/transcribe>
	
	<<$ma_transcribe>>
	
	
snippet sprite_material_transfer "Google Material Icons transfer"
	!include <material/common>
	!include <material/transfer>
	
	<<$ma_transfer>>
	
	
snippet sprite_material_transit_transfer "Google Material Icons transit_transfer"
	!include <material/common>
	!include <material/transit_transfer>
	
	<<$ma_transit_transfer>>
	
	
snippet sprite_material_translate "Google Material Icons translate"
	!include <material/common>
	!include <material/translate>
	
	<<$ma_translate>>
	
	
snippet sprite_material_trash "Google Material Icons trash"
	!include <material/common>
	!include <material/trash>
	
	<<$ma_trash>>
	
	
snippet sprite_material_treasure_chest "Google Material Icons treasure_chest"
	!include <material/common>
	!include <material/treasure_chest>
	
	<<$ma_treasure_chest>>
	
	
snippet sprite_material_tree "Google Material Icons tree"
	!include <material/common>
	!include <material/tree>
	
	<<$ma_tree>>
	
	
snippet sprite_material_trello "Google Material Icons trello"
	!include <material/common>
	!include <material/trello>
	
	<<$ma_trello>>
	
	
snippet sprite_material_trending_down "Google Material Icons trending_down"
	!include <material/common>
	!include <material/trending_down>
	
	<<$ma_trending_down>>
	
	
snippet sprite_material_trending_neutral "Google Material Icons trending_neutral"
	!include <material/common>
	!include <material/trending_neutral>
	
	<<$ma_trending_neutral>>
	
	
snippet sprite_material_trending_up "Google Material Icons trending_up"
	!include <material/common>
	!include <material/trending_up>
	
	<<$ma_trending_up>>
	
	
snippet sprite_material_triangle_outline "Google Material Icons triangle_outline"
	!include <material/common>
	!include <material/triangle_outline>
	
	<<$ma_triangle_outline>>
	
	
snippet sprite_material_triangle "Google Material Icons triangle"
	!include <material/common>
	!include <material/triangle>
	
	<<$ma_triangle>>
	
	
snippet sprite_material_trophy_outline "Google Material Icons trophy_outline"
	!include <material/common>
	!include <material/trophy_outline>
	
	<<$ma_trophy_outline>>
	
	
snippet sprite_material_trophy_variant_outline "Google Material Icons trophy_variant_outline"
	!include <material/common>
	!include <material/trophy_variant_outline>
	
	<<$ma_trophy_variant_outline>>
	
	
snippet sprite_material_truck_delivery "Google Material Icons truck_delivery"
	!include <material/common>
	!include <material/truck_delivery>
	
	<<$ma_truck_delivery>>
	
	
snippet sprite_material_truck_fast "Google Material Icons truck_fast"
	!include <material/common>
	!include <material/truck_fast>
	
	<<$ma_truck_fast>>
	
	
snippet sprite_material_truck "Google Material Icons truck"
	!include <material/common>
	!include <material/truck>
	
	<<$ma_truck>>
	
	
snippet sprite_material_truck_trailer "Google Material Icons truck_trailer"
	!include <material/common>
	!include <material/truck_trailer>
	
	<<$ma_truck_trailer>>
	
	
snippet sprite_material_tshirt_crew "Google Material Icons tshirt_crew"
	!include <material/common>
	!include <material/tshirt_crew>
	
	<<$ma_tshirt_crew>>
	
	
snippet sprite_material_tshirt_v "Google Material Icons tshirt_v"
	!include <material/common>
	!include <material/tshirt_v>
	
	<<$ma_tshirt_v>>
	
	
snippet sprite_material_tumblr "Google Material Icons tumblr"
	!include <material/common>
	!include <material/tumblr>
	
	<<$ma_tumblr>>
	
	
snippet sprite_material_tumblr_reblog "Google Material Icons tumblr_reblog"
	!include <material/common>
	!include <material/tumblr_reblog>
	
	<<$ma_tumblr_reblog>>
	
	
snippet sprite_material_tune "Google Material Icons tune"
	!include <material/common>
	!include <material/tune>
	
	<<$ma_tune>>
	
	
snippet sprite_material_tune_vertical "Google Material Icons tune_vertical"
	!include <material/common>
	!include <material/tune_vertical>
	
	<<$ma_tune_vertical>>
	
	
snippet sprite_material_twitch "Google Material Icons twitch"
	!include <material/common>
	!include <material/twitch>
	
	<<$ma_twitch>>
	
	
snippet sprite_material_twitter_box "Google Material Icons twitter_box"
	!include <material/common>
	!include <material/twitter_box>
	
	<<$ma_twitter_box>>
	
	
snippet sprite_material_twitter_circle "Google Material Icons twitter_circle"
	!include <material/common>
	!include <material/twitter_circle>
	
	<<$ma_twitter_circle>>
	
	
snippet sprite_material_twitter "Google Material Icons twitter"
	!include <material/common>
	!include <material/twitter>
	
	<<$ma_twitter>>
	
	
snippet sprite_material_twitter_retweet "Google Material Icons twitter_retweet"
	!include <material/common>
	!include <material/twitter_retweet>
	
	<<$ma_twitter_retweet>>
	
	
snippet sprite_material_uber "Google Material Icons uber"
	!include <material/common>
	!include <material/uber>
	
	<<$ma_uber>>
	
	
snippet sprite_material_ubuntu "Google Material Icons ubuntu"
	!include <material/common>
	!include <material/ubuntu>
	
	<<$ma_ubuntu>>
	
	
snippet sprite_material_ultra_high_definition "Google Material Icons ultra_high_definition"
	!include <material/common>
	!include <material/ultra_high_definition>
	
	<<$ma_ultra_high_definition>>
	
	
snippet sprite_material_umbraco "Google Material Icons umbraco"
	!include <material/common>
	!include <material/umbraco>
	
	<<$ma_umbraco>>
	
	
snippet sprite_material_umbrella_outline "Google Material Icons umbrella_outline"
	!include <material/common>
	!include <material/umbrella_outline>
	
	<<$ma_umbrella_outline>>
	
	
snippet sprite_material_umbrella "Google Material Icons umbrella"
	!include <material/common>
	!include <material/umbrella>
	
	<<$ma_umbrella>>
	
	
snippet sprite_material_undo "Google Material Icons undo"
	!include <material/common>
	!include <material/undo>
	
	<<$ma_undo>>
	
	
snippet sprite_material_undo_variant "Google Material Icons undo_variant"
	!include <material/common>
	!include <material/undo_variant>
	
	<<$ma_undo_variant>>
	
	
snippet sprite_material_unfold_less_horizontal "Google Material Icons unfold_less_horizontal"
	!include <material/common>
	!include <material/unfold_less_horizontal>
	
	<<$ma_unfold_less_horizontal>>
	
	
snippet sprite_material_unfold_less_vertical "Google Material Icons unfold_less_vertical"
	!include <material/common>
	!include <material/unfold_less_vertical>
	
	<<$ma_unfold_less_vertical>>
	
	
snippet sprite_material_unfold_more_horizontal "Google Material Icons unfold_more_horizontal"
	!include <material/common>
	!include <material/unfold_more_horizontal>
	
	<<$ma_unfold_more_horizontal>>
	
	
snippet sprite_material_unfold_more_vertical "Google Material Icons unfold_more_vertical"
	!include <material/common>
	!include <material/unfold_more_vertical>
	
	<<$ma_unfold_more_vertical>>
	
	
snippet sprite_material_ungroup "Google Material Icons ungroup"
	!include <material/common>
	!include <material/ungroup>
	
	<<$ma_ungroup>>
	
	
snippet sprite_material_unity "Google Material Icons unity"
	!include <material/common>
	!include <material/unity>
	
	<<$ma_unity>>
	
	
snippet sprite_material_untappd "Google Material Icons untappd"
	!include <material/common>
	!include <material/untappd>
	
	<<$ma_untappd>>
	
	
snippet sprite_material_update "Google Material Icons update"
	!include <material/common>
	!include <material/update>
	
	<<$ma_update>>
	
	
snippet sprite_material_upload_multiple "Google Material Icons upload_multiple"
	!include <material/common>
	!include <material/upload_multiple>
	
	<<$ma_upload_multiple>>
	
	
snippet sprite_material_upload_network "Google Material Icons upload_network"
	!include <material/common>
	!include <material/upload_network>
	
	<<$ma_upload_network>>
	
	
snippet sprite_material_upload "Google Material Icons upload"
	!include <material/common>
	!include <material/upload>
	
	<<$ma_upload>>
	
	
snippet sprite_material_usb "Google Material Icons usb"
	!include <material/common>
	!include <material/usb>
	
	<<$ma_usb>>
	
	
snippet sprite_material_vanish "Google Material Icons vanish"
	!include <material/common>
	!include <material/vanish>
	
	<<$ma_vanish>>
	
	
snippet sprite_material_van_passenger "Google Material Icons van_passenger"
	!include <material/common>
	!include <material/van_passenger>
	
	<<$ma_van_passenger>>
	
	
snippet sprite_material_van_utility "Google Material Icons van_utility"
	!include <material/common>
	!include <material/van_utility>
	
	<<$ma_van_utility>>
	
	
snippet sprite_material_vector_arrange_above "Google Material Icons vector_arrange_above"
	!include <material/common>
	!include <material/vector_arrange_above>
	
	<<$ma_vector_arrange_above>>
	
	
snippet sprite_material_vector_arrange_below "Google Material Icons vector_arrange_below"
	!include <material/common>
	!include <material/vector_arrange_below>
	
	<<$ma_vector_arrange_below>>
	
	
snippet sprite_material_vector_circle "Google Material Icons vector_circle"
	!include <material/common>
	!include <material/vector_circle>
	
	<<$ma_vector_circle>>
	
	
snippet sprite_material_vector_circle_variant "Google Material Icons vector_circle_variant"
	!include <material/common>
	!include <material/vector_circle_variant>
	
	<<$ma_vector_circle_variant>>
	
	
snippet sprite_material_vector_combine "Google Material Icons vector_combine"
	!include <material/common>
	!include <material/vector_combine>
	
	<<$ma_vector_combine>>
	
	
snippet sprite_material_vector_curve "Google Material Icons vector_curve"
	!include <material/common>
	!include <material/vector_curve>
	
	<<$ma_vector_curve>>
	
	
snippet sprite_material_vector_difference_ab "Google Material Icons vector_difference_ab"
	!include <material/common>
	!include <material/vector_difference_ab>
	
	<<$ma_vector_difference_ab>>
	
	
snippet sprite_material_vector_difference_ba "Google Material Icons vector_difference_ba"
	!include <material/common>
	!include <material/vector_difference_ba>
	
	<<$ma_vector_difference_ba>>
	
	
snippet sprite_material_vector_difference "Google Material Icons vector_difference"
	!include <material/common>
	!include <material/vector_difference>
	
	<<$ma_vector_difference>>
	
	
snippet sprite_material_vector_intersection "Google Material Icons vector_intersection"
	!include <material/common>
	!include <material/vector_intersection>
	
	<<$ma_vector_intersection>>
	
	
snippet sprite_material_vector_line "Google Material Icons vector_line"
	!include <material/common>
	!include <material/vector_line>
	
	<<$ma_vector_line>>
	
	
snippet sprite_material_vector_point "Google Material Icons vector_point"
	!include <material/common>
	!include <material/vector_point>
	
	<<$ma_vector_point>>
	
	
snippet sprite_material_vector_polygon "Google Material Icons vector_polygon"
	!include <material/common>
	!include <material/vector_polygon>
	
	<<$ma_vector_polygon>>
	
	
snippet sprite_material_vector_polyline "Google Material Icons vector_polyline"
	!include <material/common>
	!include <material/vector_polyline>
	
	<<$ma_vector_polyline>>
	
	
snippet sprite_material_vector_radius "Google Material Icons vector_radius"
	!include <material/common>
	!include <material/vector_radius>
	
	<<$ma_vector_radius>>
	
	
snippet sprite_material_vector_rectangle "Google Material Icons vector_rectangle"
	!include <material/common>
	!include <material/vector_rectangle>
	
	<<$ma_vector_rectangle>>
	
	
snippet sprite_material_vector_selection "Google Material Icons vector_selection"
	!include <material/common>
	!include <material/vector_selection>
	
	<<$ma_vector_selection>>
	
	
snippet sprite_material_vector_square "Google Material Icons vector_square"
	!include <material/common>
	!include <material/vector_square>
	
	<<$ma_vector_square>>
	
	
snippet sprite_material_vector_triangle "Google Material Icons vector_triangle"
	!include <material/common>
	!include <material/vector_triangle>
	
	<<$ma_vector_triangle>>
	
	
snippet sprite_material_vector_union "Google Material Icons vector_union"
	!include <material/common>
	!include <material/vector_union>
	
	<<$ma_vector_union>>
	
	
snippet sprite_material_venmo "Google Material Icons venmo"
	!include <material/common>
	!include <material/venmo>
	
	<<$ma_venmo>>
	
	
snippet sprite_material_verified "Google Material Icons verified"
	!include <material/common>
	!include <material/verified>
	
	<<$ma_verified>>
	
	
snippet sprite_material_vibrate "Google Material Icons vibrate"
	!include <material/common>
	!include <material/vibrate>
	
	<<$ma_vibrate>>
	
	
snippet sprite_material_video_3d "Google Material Icons video_3d"
	!include <material/common>
	!include <material/video_3d>
	
	<<$ma_video_3d>>
	
	
snippet sprite_material_video_4k_box "Google Material Icons video_4k_box"
	!include <material/common>
	!include <material/video_4k_box>
	
	<<$ma_video_4k_box>>
	
	
snippet sprite_material_video_input_antenna "Google Material Icons video_input_antenna"
	!include <material/common>
	!include <material/video_input_antenna>
	
	<<$ma_video_input_antenna>>
	
	
snippet sprite_material_video_input_component "Google Material Icons video_input_component"
	!include <material/common>
	!include <material/video_input_component>
	
	<<$ma_video_input_component>>
	
	
snippet sprite_material_video_input_hdmi "Google Material Icons video_input_hdmi"
	!include <material/common>
	!include <material/video_input_hdmi>
	
	<<$ma_video_input_hdmi>>
	
	
snippet sprite_material_video_input_svideo "Google Material Icons video_input_svideo"
	!include <material/common>
	!include <material/video_input_svideo>
	
	<<$ma_video_input_svideo>>
	
	
snippet sprite_material_video_off "Google Material Icons video_off"
	!include <material/common>
	!include <material/video_off>
	
	<<$ma_video_off>>
	
	
snippet sprite_material_video "Google Material Icons video"
	!include <material/common>
	!include <material/video>
	
	<<$ma_video>>
	
	
snippet sprite_material_video_switch "Google Material Icons video_switch"
	!include <material/common>
	!include <material/video_switch>
	
	<<$ma_video_switch>>
	
	
snippet sprite_material_view_agenda "Google Material Icons view_agenda"
	!include <material/common>
	!include <material/view_agenda>
	
	<<$ma_view_agenda>>
	
	
snippet sprite_material_view_array "Google Material Icons view_array"
	!include <material/common>
	!include <material/view_array>
	
	<<$ma_view_array>>
	
	
snippet sprite_material_view_carousel "Google Material Icons view_carousel"
	!include <material/common>
	!include <material/view_carousel>
	
	<<$ma_view_carousel>>
	
	
snippet sprite_material_view_column "Google Material Icons view_column"
	!include <material/common>
	!include <material/view_column>
	
	<<$ma_view_column>>
	
	
snippet sprite_material_view_dashboard "Google Material Icons view_dashboard"
	!include <material/common>
	!include <material/view_dashboard>
	
	<<$ma_view_dashboard>>
	
	
snippet sprite_material_view_dashboard_variant "Google Material Icons view_dashboard_variant"
	!include <material/common>
	!include <material/view_dashboard_variant>
	
	<<$ma_view_dashboard_variant>>
	
	
snippet sprite_material_view_day "Google Material Icons view_day"
	!include <material/common>
	!include <material/view_day>
	
	<<$ma_view_day>>
	
	
snippet sprite_material_view_grid "Google Material Icons view_grid"
	!include <material/common>
	!include <material/view_grid>
	
	<<$ma_view_grid>>
	
	
snippet sprite_material_view_headline "Google Material Icons view_headline"
	!include <material/common>
	!include <material/view_headline>
	
	<<$ma_view_headline>>
	
	
snippet sprite_material_view_list "Google Material Icons view_list"
	!include <material/common>
	!include <material/view_list>
	
	<<$ma_view_list>>
	
	
snippet sprite_material_view_module "Google Material Icons view_module"
	!include <material/common>
	!include <material/view_module>
	
	<<$ma_view_module>>
	
	
snippet sprite_material_view_parallel "Google Material Icons view_parallel"
	!include <material/common>
	!include <material/view_parallel>
	
	<<$ma_view_parallel>>
	
	
snippet sprite_material_view_quilt "Google Material Icons view_quilt"
	!include <material/common>
	!include <material/view_quilt>
	
	<<$ma_view_quilt>>
	
	
snippet sprite_material_view_sequential "Google Material Icons view_sequential"
	!include <material/common>
	!include <material/view_sequential>
	
	<<$ma_view_sequential>>
	
	
snippet sprite_material_view_stream "Google Material Icons view_stream"
	!include <material/common>
	!include <material/view_stream>
	
	<<$ma_view_stream>>
	
	
snippet sprite_material_view_week "Google Material Icons view_week"
	!include <material/common>
	!include <material/view_week>
	
	<<$ma_view_week>>
	
	
snippet sprite_material_vimeo "Google Material Icons vimeo"
	!include <material/common>
	!include <material/vimeo>
	
	<<$ma_vimeo>>
	
	
snippet sprite_material_vine "Google Material Icons vine"
	!include <material/common>
	!include <material/vine>
	
	<<$ma_vine>>
	
	
snippet sprite_material_violin "Google Material Icons violin"
	!include <material/common>
	!include <material/violin>
	
	<<$ma_violin>>
	
	
snippet sprite_material_visualstudio "Google Material Icons visualstudio"
	!include <material/common>
	!include <material/visualstudio>
	
	<<$ma_visualstudio>>
	
	
snippet sprite_material_vk_box "Google Material Icons vk_box"
	!include <material/common>
	!include <material/vk_box>
	
	<<$ma_vk_box>>
	
	
snippet sprite_material_vk_circle "Google Material Icons vk_circle"
	!include <material/common>
	!include <material/vk_circle>
	
	<<$ma_vk_circle>>
	
	
snippet sprite_material_vk "Google Material Icons vk"
	!include <material/common>
	!include <material/vk>
	
	<<$ma_vk>>
	
	
snippet sprite_material_vlc "Google Material Icons vlc"
	!include <material/common>
	!include <material/vlc>
	
	<<$ma_vlc>>
	
	
snippet sprite_material_voicemail "Google Material Icons voicemail"
	!include <material/common>
	!include <material/voicemail>
	
	<<$ma_voicemail>>
	
	
snippet sprite_material_voice "Google Material Icons voice"
	!include <material/common>
	!include <material/voice>
	
	<<$ma_voice>>
	
	
snippet sprite_material_volume_high "Google Material Icons volume_high"
	!include <material/common>
	!include <material/volume_high>
	
	<<$ma_volume_high>>
	
	
snippet sprite_material_volume_low "Google Material Icons volume_low"
	!include <material/common>
	!include <material/volume_low>
	
	<<$ma_volume_low>>
	
	
snippet sprite_material_volume_medium "Google Material Icons volume_medium"
	!include <material/common>
	!include <material/volume_medium>
	
	<<$ma_volume_medium>>
	
	
snippet sprite_material_volume_minus "Google Material Icons volume_minus"
	!include <material/common>
	!include <material/volume_minus>
	
	<<$ma_volume_minus>>
	
	
snippet sprite_material_volume_mute "Google Material Icons volume_mute"
	!include <material/common>
	!include <material/volume_mute>
	
	<<$ma_volume_mute>>
	
	
snippet sprite_material_volume_off "Google Material Icons volume_off"
	!include <material/common>
	!include <material/volume_off>
	
	<<$ma_volume_off>>
	
	
snippet sprite_material_volume_plus "Google Material Icons volume_plus"
	!include <material/common>
	!include <material/volume_plus>
	
	<<$ma_volume_plus>>
	
	
snippet sprite_material_volume "Google Material Icons volume"
	!include <material/common>
	!include <material/volume>
	
	<<$ma_volume>>
	
	
snippet sprite_material_vpn "Google Material Icons vpn"
	!include <material/common>
	!include <material/vpn>
	
	<<$ma_vpn>>
	
	
snippet sprite_material_vuejs "Google Material Icons vuejs"
	!include <material/common>
	!include <material/vuejs>
	
	<<$ma_vuejs>>
	
	
snippet sprite_material_walk "Google Material Icons walk"
	!include <material/common>
	!include <material/walk>
	
	<<$ma_walk>>
	
	
snippet sprite_material_wallet_giftcard "Google Material Icons wallet_giftcard"
	!include <material/common>
	!include <material/wallet_giftcard>
	
	<<$ma_wallet_giftcard>>
	
	
snippet sprite_material_wallet_membership "Google Material Icons wallet_membership"
	!include <material/common>
	!include <material/wallet_membership>
	
	<<$ma_wallet_membership>>
	
	
snippet sprite_material_wallet "Google Material Icons wallet"
	!include <material/common>
	!include <material/wallet>
	
	<<$ma_wallet>>
	
	
snippet sprite_material_wallet_travel "Google Material Icons wallet_travel"
	!include <material/common>
	!include <material/wallet_travel>
	
	<<$ma_wallet_travel>>
	
	
snippet sprite_material_wall "Google Material Icons wall"
	!include <material/common>
	!include <material/wall>
	
	<<$ma_wall>>
	
	
snippet sprite_material_wan "Google Material Icons wan"
	!include <material/common>
	!include <material/wan>
	
	<<$ma_wan>>
	
	
snippet sprite_material_washing_machine "Google Material Icons washing_machine"
	!include <material/common>
	!include <material/washing_machine>
	
	<<$ma_washing_machine>>
	
	
snippet sprite_material_watch_export "Google Material Icons watch_export"
	!include <material/common>
	!include <material/watch_export>
	
	<<$ma_watch_export>>
	
	
snippet sprite_material_watch_import "Google Material Icons watch_import"
	!include <material/common>
	!include <material/watch_import>
	
	<<$ma_watch_import>>
	
	
snippet sprite_material_watch "Google Material Icons watch"
	!include <material/common>
	!include <material/watch>
	
	<<$ma_watch>>
	
	
snippet sprite_material_watch_vibrate "Google Material Icons watch_vibrate"
	!include <material/common>
	!include <material/watch_vibrate>
	
	<<$ma_watch_vibrate>>
	
	
snippet sprite_material_watermark "Google Material Icons watermark"
	!include <material/common>
	!include <material/watermark>
	
	<<$ma_watermark>>
	
	
snippet sprite_material_water_off "Google Material Icons water_off"
	!include <material/common>
	!include <material/water_off>
	
	<<$ma_water_off>>
	
	
snippet sprite_material_water_percent "Google Material Icons water_percent"
	!include <material/common>
	!include <material/water_percent>
	
	<<$ma_water_percent>>
	
	
snippet sprite_material_water "Google Material Icons water"
	!include <material/common>
	!include <material/water>
	
	<<$ma_water>>
	
	
snippet sprite_material_water_pump "Google Material Icons water_pump"
	!include <material/common>
	!include <material/water_pump>
	
	<<$ma_water_pump>>
	
	
snippet sprite_material_waves "Google Material Icons waves"
	!include <material/common>
	!include <material/waves>
	
	<<$ma_waves>>
	
	
snippet sprite_material_weather_cloudy "Google Material Icons weather_cloudy"
	!include <material/common>
	!include <material/weather_cloudy>
	
	<<$ma_weather_cloudy>>
	
	
snippet sprite_material_weather_fog "Google Material Icons weather_fog"
	!include <material/common>
	!include <material/weather_fog>
	
	<<$ma_weather_fog>>
	
	
snippet sprite_material_weather_hail "Google Material Icons weather_hail"
	!include <material/common>
	!include <material/weather_hail>
	
	<<$ma_weather_hail>>
	
	
snippet sprite_material_weather_lightning "Google Material Icons weather_lightning"
	!include <material/common>
	!include <material/weather_lightning>
	
	<<$ma_weather_lightning>>
	
	
snippet sprite_material_weather_lightning_rainy "Google Material Icons weather_lightning_rainy"
	!include <material/common>
	!include <material/weather_lightning_rainy>
	
	<<$ma_weather_lightning_rainy>>
	
	
snippet sprite_material_weather_night "Google Material Icons weather_night"
	!include <material/common>
	!include <material/weather_night>
	
	<<$ma_weather_night>>
	
	
snippet sprite_material_weather_partlycloudy "Google Material Icons weather_partlycloudy"
	!include <material/common>
	!include <material/weather_partlycloudy>
	
	<<$ma_weather_partlycloudy>>
	
	
snippet sprite_material_weather_pouring "Google Material Icons weather_pouring"
	!include <material/common>
	!include <material/weather_pouring>
	
	<<$ma_weather_pouring>>
	
	
snippet sprite_material_weather_rainy "Google Material Icons weather_rainy"
	!include <material/common>
	!include <material/weather_rainy>
	
	<<$ma_weather_rainy>>
	
	
snippet sprite_material_weather_snowy "Google Material Icons weather_snowy"
	!include <material/common>
	!include <material/weather_snowy>
	
	<<$ma_weather_snowy>>
	
	
snippet sprite_material_weather_snowy_rainy "Google Material Icons weather_snowy_rainy"
	!include <material/common>
	!include <material/weather_snowy_rainy>
	
	<<$ma_weather_snowy_rainy>>
	
	
snippet sprite_material_weather_sunny "Google Material Icons weather_sunny"
	!include <material/common>
	!include <material/weather_sunny>
	
	<<$ma_weather_sunny>>
	
	
snippet sprite_material_weather_sunset_down "Google Material Icons weather_sunset_down"
	!include <material/common>
	!include <material/weather_sunset_down>
	
	<<$ma_weather_sunset_down>>
	
	
snippet sprite_material_weather_sunset "Google Material Icons weather_sunset"
	!include <material/common>
	!include <material/weather_sunset>
	
	<<$ma_weather_sunset>>
	
	
snippet sprite_material_weather_sunset_up "Google Material Icons weather_sunset_up"
	!include <material/common>
	!include <material/weather_sunset_up>
	
	<<$ma_weather_sunset_up>>
	
	
snippet sprite_material_weather_windy "Google Material Icons weather_windy"
	!include <material/common>
	!include <material/weather_windy>
	
	<<$ma_weather_windy>>
	
	
snippet sprite_material_weather_windy_variant "Google Material Icons weather_windy_variant"
	!include <material/common>
	!include <material/weather_windy_variant>
	
	<<$ma_weather_windy_variant>>
	
	
snippet sprite_material_webcam "Google Material Icons webcam"
	!include <material/common>
	!include <material/webcam>
	
	<<$ma_webcam>>
	
	
snippet sprite_material_webhook "Google Material Icons webhook"
	!include <material/common>
	!include <material/webhook>
	
	<<$ma_webhook>>
	
	
snippet sprite_material_webpack "Google Material Icons webpack"
	!include <material/common>
	!include <material/webpack>
	
	<<$ma_webpack>>
	
	
snippet sprite_material_web "Google Material Icons web"
	!include <material/common>
	!include <material/web>
	
	<<$ma_web>>
	
	
snippet sprite_material_wechat "Google Material Icons wechat"
	!include <material/common>
	!include <material/wechat>
	
	<<$ma_wechat>>
	
	
snippet sprite_material_weight_kilogram "Google Material Icons weight_kilogram"
	!include <material/common>
	!include <material/weight_kilogram>
	
	<<$ma_weight_kilogram>>
	
	
snippet sprite_material_weight "Google Material Icons weight"
	!include <material/common>
	!include <material/weight>
	
	<<$ma_weight>>
	
	
snippet sprite_material_whatsapp "Google Material Icons whatsapp"
	!include <material/common>
	!include <material/whatsapp>
	
	<<$ma_whatsapp>>
	
	
snippet sprite_material_wheelchair_accessibility "Google Material Icons wheelchair_accessibility"
	!include <material/common>
	!include <material/wheelchair_accessibility>
	
	<<$ma_wheelchair_accessibility>>
	
	
snippet sprite_material_white_balance_auto "Google Material Icons white_balance_auto"
	!include <material/common>
	!include <material/white_balance_auto>
	
	<<$ma_white_balance_auto>>
	
	
snippet sprite_material_white_balance_incandescent "Google Material Icons white_balance_incandescent"
	!include <material/common>
	!include <material/white_balance_incandescent>
	
	<<$ma_white_balance_incandescent>>
	
	
snippet sprite_material_white_balance_iridescent "Google Material Icons white_balance_iridescent"
	!include <material/common>
	!include <material/white_balance_iridescent>
	
	<<$ma_white_balance_iridescent>>
	
	
snippet sprite_material_white_balance_sunny "Google Material Icons white_balance_sunny"
	!include <material/common>
	!include <material/white_balance_sunny>
	
	<<$ma_white_balance_sunny>>
	
	
snippet sprite_material_widgets "Google Material Icons widgets"
	!include <material/common>
	!include <material/widgets>
	
	<<$ma_widgets>>
	
	
snippet sprite_material_wifi_off "Google Material Icons wifi_off"
	!include <material/common>
	!include <material/wifi_off>
	
	<<$ma_wifi_off>>
	
	
snippet sprite_material_wifi "Google Material Icons wifi"
	!include <material/common>
	!include <material/wifi>
	
	<<$ma_wifi>>
	
	
snippet sprite_material_wii "Google Material Icons wii"
	!include <material/common>
	!include <material/wii>
	
	<<$ma_wii>>
	
	
snippet sprite_material_wiiu "Google Material Icons wiiu"
	!include <material/common>
	!include <material/wiiu>
	
	<<$ma_wiiu>>
	
	
snippet sprite_material_wikipedia "Google Material Icons wikipedia"
	!include <material/common>
	!include <material/wikipedia>
	
	<<$ma_wikipedia>>
	
	
snippet sprite_material_window_closed "Google Material Icons window_closed"
	!include <material/common>
	!include <material/window_closed>
	
	<<$ma_window_closed>>
	
	
snippet sprite_material_window_close "Google Material Icons window_close"
	!include <material/common>
	!include <material/window_close>
	
	<<$ma_window_close>>
	
	
snippet sprite_material_window_maximize "Google Material Icons window_maximize"
	!include <material/common>
	!include <material/window_maximize>
	
	<<$ma_window_maximize>>
	
	
snippet sprite_material_window_minimize "Google Material Icons window_minimize"
	!include <material/common>
	!include <material/window_minimize>
	
	<<$ma_window_minimize>>
	
	
snippet sprite_material_window_open "Google Material Icons window_open"
	!include <material/common>
	!include <material/window_open>
	
	<<$ma_window_open>>
	
	
snippet sprite_material_window_restore "Google Material Icons window_restore"
	!include <material/common>
	!include <material/window_restore>
	
	<<$ma_window_restore>>
	
	
snippet sprite_material_windows "Google Material Icons windows"
	!include <material/common>
	!include <material/windows>
	
	<<$ma_windows>>
	
	
snippet sprite_material_wordpress "Google Material Icons wordpress"
	!include <material/common>
	!include <material/wordpress>
	
	<<$ma_wordpress>>
	
	
snippet sprite_material_worker "Google Material Icons worker"
	!include <material/common>
	!include <material/worker>
	
	<<$ma_worker>>
	
	
snippet sprite_material_wrench "Google Material Icons wrench"
	!include <material/common>
	!include <material/wrench>
	
	<<$ma_wrench>>
	
	
snippet sprite_material_wunderlist "Google Material Icons wunderlist"
	!include <material/common>
	!include <material/wunderlist>
	
	<<$ma_wunderlist>>
	
	
snippet sprite_material_xamarin_outline "Google Material Icons xamarin_outline"
	!include <material/common>
	!include <material/xamarin_outline>
	
	<<$ma_xamarin_outline>>
	
	
snippet sprite_material_xamarin "Google Material Icons xamarin"
	!include <material/common>
	!include <material/xamarin>
	
	<<$ma_xamarin>>
	
	
snippet sprite_material_xaml "Google Material Icons xaml"
	!include <material/common>
	!include <material/xaml>
	
	<<$ma_xaml>>
	
	
snippet sprite_material_xbox_controller_battery_alert "Google Material Icons xbox_controller_battery_alert"
	!include <material/common>
	!include <material/xbox_controller_battery_alert>
	
	<<$ma_xbox_controller_battery_alert>>
	
	
snippet sprite_material_xbox_controller_battery_empty "Google Material Icons xbox_controller_battery_empty"
	!include <material/common>
	!include <material/xbox_controller_battery_empty>
	
	<<$ma_xbox_controller_battery_empty>>
	
	
snippet sprite_material_xbox_controller_battery_full "Google Material Icons xbox_controller_battery_full"
	!include <material/common>
	!include <material/xbox_controller_battery_full>
	
	<<$ma_xbox_controller_battery_full>>
	
	
snippet sprite_material_xbox_controller_battery_low "Google Material Icons xbox_controller_battery_low"
	!include <material/common>
	!include <material/xbox_controller_battery_low>
	
	<<$ma_xbox_controller_battery_low>>
	
	
snippet sprite_material_xbox_controller_battery_medium "Google Material Icons xbox_controller_battery_medium"
	!include <material/common>
	!include <material/xbox_controller_battery_medium>
	
	<<$ma_xbox_controller_battery_medium>>
	
	
snippet sprite_material_xbox_controller_battery_unknown "Google Material Icons xbox_controller_battery_unknown"
	!include <material/common>
	!include <material/xbox_controller_battery_unknown>
	
	<<$ma_xbox_controller_battery_unknown>>
	
	
snippet sprite_material_xbox_controller_off "Google Material Icons xbox_controller_off"
	!include <material/common>
	!include <material/xbox_controller_off>
	
	<<$ma_xbox_controller_off>>
	
	
snippet sprite_material_xbox_controller "Google Material Icons xbox_controller"
	!include <material/common>
	!include <material/xbox_controller>
	
	<<$ma_xbox_controller>>
	
	
snippet sprite_material_xbox "Google Material Icons xbox"
	!include <material/common>
	!include <material/xbox>
	
	<<$ma_xbox>>
	
	
snippet sprite_material_xda "Google Material Icons xda"
	!include <material/common>
	!include <material/xda>
	
	<<$ma_xda>>
	
	
snippet sprite_material_xing_box "Google Material Icons xing_box"
	!include <material/common>
	!include <material/xing_box>
	
	<<$ma_xing_box>>
	
	
snippet sprite_material_xing_circle "Google Material Icons xing_circle"
	!include <material/common>
	!include <material/xing_circle>
	
	<<$ma_xing_circle>>
	
	
snippet sprite_material_xing "Google Material Icons xing"
	!include <material/common>
	!include <material/xing>
	
	<<$ma_xing>>
	
	
snippet sprite_material_xml "Google Material Icons xml"
	!include <material/common>
	!include <material/xml>
	
	<<$ma_xml>>
	
	
snippet sprite_material_xmpp "Google Material Icons xmpp"
	!include <material/common>
	!include <material/xmpp>
	
	<<$ma_xmpp>>
	
	
snippet sprite_material_yammer "Google Material Icons yammer"
	!include <material/common>
	!include <material/yammer>
	
	<<$ma_yammer>>
	
	
snippet sprite_material_yeast "Google Material Icons yeast"
	!include <material/common>
	!include <material/yeast>
	
	<<$ma_yeast>>
	
	
snippet sprite_material_yelp "Google Material Icons yelp"
	!include <material/common>
	!include <material/yelp>
	
	<<$ma_yelp>>
	
	
snippet sprite_material_yin_yang "Google Material Icons yin_yang"
	!include <material/common>
	!include <material/yin_yang>
	
	<<$ma_yin_yang>>
	
	
snippet sprite_material_youtube_creator_studio "Google Material Icons youtube_creator_studio"
	!include <material/common>
	!include <material/youtube_creator_studio>
	
	<<$ma_youtube_creator_studio>>
	
	
snippet sprite_material_youtube_gaming "Google Material Icons youtube_gaming"
	!include <material/common>
	!include <material/youtube_gaming>
	
	<<$ma_youtube_gaming>>
	
	
snippet sprite_material_youtube_play "Google Material Icons youtube_play"
	!include <material/common>
	!include <material/youtube_play>
	
	<<$ma_youtube_play>>
	
	
snippet sprite_material_youtube "Google Material Icons youtube"
	!include <material/common>
	!include <material/youtube>
	
	<<$ma_youtube>>
	
	
snippet sprite_material_youtube_tv "Google Material Icons youtube_tv"
	!include <material/common>
	!include <material/youtube_tv>
	
	<<$ma_youtube_tv>>
	
	
snippet sprite_material_zip_box "Google Material Icons zip_box"
	!include <material/common>
	!include <material/zip_box>
	
	<<$ma_zip_box>>
	
	