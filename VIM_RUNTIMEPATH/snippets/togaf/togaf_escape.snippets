snippet togaf_adm_1_Introduction_1.1.1_The_ADM_Enterprise_Continuum_and_Architecture_Repository "1.1.1 The ADM, Enterprise Continuum, and Architecture Repository"
	
	The Enterprise Continuum provides a framework and context to support the
	leverage of relevant architecture assets in executing the ADM. These
	assets may include Architecture Descriptions, models, and patterns taken
	from a variety of sources, as explained in the TOGAF Standard —
	Architecture Content.
	
	The Enterprise Continuum categorizes architectural source material —
	both the contents of the organization's own enterprise repositories and
	the set of relevant, available reference models and standards in the
	industry.
	
	The practical implementation of the Enterprise Continuum will typically
	take the form of an Architecture Repository (see the TOGAF Standard —
	Architecture Content) that includes reference architectures, models, and
	patterns that have been accepted for use within the enterprise, and
	actual architectural work done previously within the enterprise. The
	architect would seek to re-use as much as possible from the Architecture
	Repository that was relevant to the project in hand. (In addition to the
	collection of architecture source material, the repository would also
	contain architecture development work-in-progress.)
	
	At relevant places throughout the ADM there are reminders to consider
	which, if any, architecture assets from the Architecture Repository the
	architect should use. In some cases — for example, in the development of
	a Technology Architecture — this may be the TOGAF Foundation
	Architecture. In other cases — for example, in the development of a
	Business Architecture — it may be a reference model for e-Commerce taken
	from the industry at large.
	
	The criteria for including source materials in an organization's
	Architecture Repository will typically form part of the Enterprise
	Architecture Governance process. These governance processes should
	consider available resources both within and outside the enterprise in
	order to determine when general resources can be adapted for specific
	enterprise needs and also to determine where specific solutions can be
	generalized to support wider re-use.
	
	While using the ADM, the architect is developing a snapshot of the
	enterprise's decisions and their implications at particular points in
	time. Each iteration of the ADM will populate an organization-specific
	landscape with all the architecture assets identified and leveraged
	through the process, including the final organization-specific
	architecture delivered.
	
	Architecture development is a continuous, cyclical process, and in
	executing the ADM repeatedly over time, the architect gradually adds
	more and more content to the organization's Architecture Repository.
	Although the primary focus of the ADM is on the development of the
	enterprise-specific architecture, in this wider context the ADM can also
	be viewed as the process of populating the enterprise's own Architecture
	Repository with relevant re-usable building blocks taken from the
	"left", more generic side of the Enterprise Continuum.
	
	In fact, the first execution of the ADM will often be the hardest, since
	the architecture assets available for re-use will be relatively scarce.
	Even at this stage of development, however, there will be architecture
	assets available from external sources such as the TOGAF Standard, as
	well as the IT industry at large, that could be leveraged in support of
	the effort.
	
	Subsequent executions will be easier as more and more architecture
	assets become identified, are used to populate the organization's
	Architecture Repository, and are thus available for future re-use.
	
snippet togaf_adm_1_Introduction_1.1.2_The_ADM_and_the_Foundation_Architecture "1.1.2 The ADM and the Foundation Architecture"
	
	The ADM is also useful to populate the Foundation Architecture of an
	enterprise. Business requirements of an enterprise may be used to
	identify the necessary definitions and selections in the Foundation
	Architecture. This could be a set of re-usable common models, policy and
	governance definitions, or even as specific as overriding technology
	selections (e.g., if mandated by law). Population of the Foundation
	Architecture follows similar principles as for an Enterprise
	Architecture, with the difference that requirements for a whole
	enterprise are restricted to the overall concerns and thus less complete
	than for a specific enterprise.
	
	It is important to recognize that existing models from these various
	sources, when integrated, may not necessarily result in a coherent
	Enterprise Architecture. "Integratability" of Architecture Descriptions
	is considered in 1.7 Architecture Integration .
	
snippet togaf_adm_1_Introduction_1.1.3_ADM_and_Supporting_Guidelines_and_Techniques "1.1.3 ADM and Supporting Guidelines and Techniques"
	
	The application of the TOGAF ADM is supported by an extended set of
	resources — guidelines, templates, checklists, and other detailed
	materials. These are included in:
	
	-   The TOGAF Standard — ADM Techniques
	-   TOGAF Series Guides — the Guidance part of the Standard (guidance
	    material on how to use and adapt the TOGAF Standard for specific
	    needs)
	-   White Papers and Guides published by The Open Group, classified and
	    referenced in the TOGAF Library (see
	    www.opengroup.org/togaf-library)
	
	The individual guidelines and techniques are described separately so
	that they can be referenced from the relevant points in the ADM as
	necessary, rather than having the detailed text clutter the description
	of the ADM itself.
	
snippet togaf_adm_1_Introduction_1.1_ADM_Overview "1.1 ADM Overview"
	
	The TOGAF ADM describes a method for developing and managing the
	lifecycle of an Enterprise Architecture, and forms the core of the TOGAF
	Standard.
	
	It integrates elements of the TOGAF Standard, as well as other available
	architectural assets, to meet the business needs of an organization.
	
snippet togaf_reference-models_digital-business-reference-model_1.1_Context "1.1 Context"
	
	The modern Digital Enterprise faces multiple challenges in its
	transformation to the digital economy. New technologies – cloud,
	Internet of Things (IoT), Machine Learning (ML), Artificial Intelligence
	(AI) – and new techniques – organizational agility, continuous delivery,
	DevOps, etc. – both demand attention.
	
	To cope with this fast technology evolution pace and succeed in this
	digital ecosystem, changes should be pervasive through the whole
	organization. Digital Transformation as strategy should be aligned with
	the overall organization context and environment and should be derived
	and sometimes even replace the existing organization strategy. The new
	digital capabilities thus become essential outcomes for an effective
	Digital Transformation program.
	
	The strategy shift that should encompass the new business and IT
	disruptive trends, using an outside-in perspective over an inward focus,
	becomes important for the organizations to be responsive and remain
	relevant. The required strategic shift should also lead to the
	development of new business and operational models underpinned by the
	relevant digital technologies and platforms within the broader business
	ecosystem within which the organization operates.
	
	Understanding the impact of change on the core components of the Digital
	Business Reference Model (DBRM) for the organizations will enable
	consistent responses to the envisaged change across the enterprise to
	ensure sustainability, while maintaining their strategic relevance.
	
	The DBRM is intended to be industry-independent and outline common core
	components that are essential building blocks for consideration by
	organizations of all sizes, sectors, and development stages to enable
	consistent organization.
	
snippet togaf_introduction_1_Introduction_1.1_Executive_Overview "1.1 Executive Overview"
	
	This section provides an executive overview of Enterprise Architecture,
	the basic concepts of what it is (not just another name for IT
	Architecture), and why it is needed. It provides a summary of the
	benefits of establishing an Enterprise Architecture and adopting the
	TOGAF approach to achieve that.
	
	What is an enterprise?
	
	The TOGAF Standard considers an "enterprise" to be any collection of
	organizations that have common goals.
	
	For example, an enterprise could be:
	
	-   A whole corporation or a division of a corporation
	-   A government agency or a single government department
	-   A chain of geographically distant organizations linked together by
	    common ownership
	-   Groups of countries, governments, or governmental organizations
	    (such as militaries) working together to create common or shareable
	    deliverables or infrastructures
	-   Partnerships and alliances of businesses working together, such as a
	    consortium or supply chain
	
	The term "Enterprise" in the context of "Enterprise Architecture" can be
	applied to either an entire enterprise, encompassing all of its business
	activities and capabilities, information, and technology that make up
	the entire infrastructure and governance of the enterprise, or to one or
	more specific areas of interest within the enterprise. An enterprise may
	include partners, suppliers, and customers as well as internal business
	units. In all cases, the architecture crosses multiple systems, and
	multiple functional groups within the enterprise.
	
	The enterprise operating model concept is useful to determine the nature
	and scope of the Enterprise Architecture within an organization. Many
	organizations may comprise multiple enterprises, and may develop and
	maintain a number of independent Enterprise Architectures to address
	each one. These enterprises often have much in common with each other
	including processes, functions, and their information systems, and there
	is often great potential for wider gain in the use of a common
	architecture framework. For example, a common framework can provide a
	basis for the development of common building blocks and solutions, and a
	shareable Architecture Repository for the integration and re-use of
	business models, designs, information, and data.
	
	Why is an Enterprise Architecture needed?
	
	The purpose of Enterprise Architecture is to optimize across the
	enterprise the often fragmented legacy of processes (both manual and
	automated) into an integrated environment that is responsive to change
	and supportive of the delivery of the business strategy.
	
	The effective management and exploitation of information and Digital
	Transformation are key factors to business success, and indispensable
	means to achieving competitive advantage. An Enterprise Architecture
	addresses this need, by providing a strategic context for the evolution
	and reach of digital capability in response to the constantly changing
	needs of the business environment.
	
	Furthermore, a good Enterprise Architecture enables you to achieve the
	right balance between business transformation and continuous operational
	efficiency. It allows individual business units to innovate safely in
	their pursuit of evolving business goals and competitive advantage. At
	the same time, the Enterprise Architecture enables the needs of the
	organization to be met with an integrated strategy which permits the
	closest possible synergies across the enterprise and beyond.
	
	And lastly, much of the global privacy legislation demands that
	processes around personal data are fully documented in a way that can be
	easily understood by untrained readers — such as the data subjects and
	judges and lawyers. The penalties for failing to have this can be very
	significant. Clearly the creation of this basic documentation arises
	from the changed fundamental considerations and this is now crucial.
	
	What are the benefits of an Enterprise Architecture?
	
	An effective Enterprise Architecture can bring important benefits to the
	organization. Potential benefits of an Enterprise Architecture include:
	
	-   More effective strategic decision-making by C-Level executives and
	    business leaders:
	    -   Quick response to change and support for enterprise agility
	        aligned with the organization strategy
	    -   Organizational transformation, adopting new trends in business
	        and technology
	    -   Organizational change to support Digital Transformation
	    -   Organizational and operating model changes to improve efficiency
	        and effectiveness
	-   More effective and efficient business operations:
	    -   Lower business operation costs
	    -   More agile organization
	    -   Business capabilities shared across the organization
	    -   Lower change management costs
	    -   More flexible workforce
	    -   Improved business productivity
	    -   Improved organization integration in support of mergers and
	        acquisitions
	-   More effective and efficient Digital Transformation and operations:
	    -   Extending effective reach of the enterprise (e.g., through
	        digital capability)
	    -   Bringing all components of the enterprise into a harmonized
	        environment
	    -   Lower development, deployment, operations, support, and
	        maintenance costs
	    -   Improved interoperability
	    -   Improved system management
	    -   Improved ability to address critical enterprise-wide issues
	        (e.g., security)
	    -   Easier upgrade and exchange of system components
	-   Better return on existing investment, reduced risk for future
	    investment:
	    -   Reduced complexity in the business and IT
	    -   Maximized return on investment in existing business and IT
	    -   The flexibility to make, buy, or outsource business and IT
	        solutions
	    -   Understanding how return on investment changes over time
	-   Faster, simpler, and cheaper procurement:
	    -   Buying decisions are simpler, because the information governing
	        procurement is readily available in a coherent plan
	    -   The procurement process is faster — maximizing procurement speed
	        and flexibility without sacrificing architectural coherence
	    -   The ability to procure heterogeneous, multi-vendor open systems
	    -   The ability to secure more economic capabilities
	
	What specifically would prompt the development of an Enterprise Architecture?
	
	The reasons for embarking on an Enterprise Architecture review or
	development are varied, including:
	
	-   Business-driven initiatives to enable business transformation; for
	    example, to leverage digital services and products as revenue
	    generating assets
	-   Technology-driven initiatives for efficiency and cost reduction; for
	    example, technology consolidation initiatives, where the
	    consolidation destination can be physical, virtual, or a combination
	-   Merger or acquisition, where the return on investment is only
	    realized after technology efficiencies are realized
	-   Management of technical debt accrued by agile development
	    initiatives
	
	In all of these situations, Enterprise Architecture review or
	development is needed to manage complexity when change involves multiple
	systems with multiple inter-dependencies.
	
	Often key people identify areas of change required in order for new
	business goals to be met. Such people are commonly referred to as the
	"stakeholders" in the change. The role of the architect is to address
	their concerns by:
	
	-   Identifying and refining the requirements of the stakeholders
	-   Developing views of the architecture that show how the concerns and
	    requirements are going to be addressed
	-   Showing the trade-offs that are going to be made in reconciling the
	    potentially conflicting concerns of different stakeholders
	
	Without the Enterprise Architecture, it is highly unlikely that all the
	concerns and requirements will be considered and met.
	
	What is an architecture framework?
	
	An architecture framework is a foundational structure, or set of
	structures, which can be used for developing a broad range of different
	architectures. It should include a method for describing both a baseline
	and target state of the enterprise, in terms of a set of building blocks
	for showing how the building blocks fit together and planning the
	evolution from baseline to target states.
	
	A framework is typically tailored to meet the specific needs of the
	organization. Tailoring of the framework should establish a set of tools
	and a common vocabulary.
	
	Why use the TOGAF Standard as a framework for Enterprise Architecture?
	
	The TOGAF Standard has been developed through the collaborative efforts
	of the whole community. Using the TOGAF Standard results in Enterprise
	Architecture that is consistent, reflects the needs of stakeholders,
	employs best practice, and gives due consideration both to current
	requirements and the perceived future needs of the business.
	
	Developing and sustaining an Enterprise Architecture is a technically
	complex process which involves many stakeholders and decision processes
	in the organization. The TOGAF Standard plays an important role in
	standardizing and de-risks the architecture development process. The
	TOGAF Standard provides a best practice framework for adding value, and
	enables the organization to build workable and economic solutions which
	address their business issues and needs.
	
	The TOGAF Standard value proposition is to enable organizations to
	operate in an efficient and effective way using a proven and recognized
	set of best practices, across the enterprise and in different sectors to
	address specific business and technology trends.
	
	A key consideration is that guidance provided by the standard is
	intended to be adapted to address different needs and particular
	use-cases. That means it can be used to create a sustainable Enterprise
	Architecture for a broad range of use-cases, including agile enterprises
	and Digital Transformation.
	
	Who would benefit from using the TOGAF Standard?
	
	Any organization undertaking, or planning to undertake, the development
	and implementation of an Enterprise Architecture for the support of
	business transformation will benefit from use of the TOGAF Standard.
	
	Organizations seeking Boundaryless Information Flow^(TM) can use the
	TOGAF Standard to define and implement the structures and processes to
	enable access to integrated information within and between enterprises.
	
	Organizations that design and implement Enterprise Architectures using
	the TOGAF Standard are assured of a design and a procurement
	specification that can facilitate an open systems implementation, thus
	enabling the benefits of open systems with reduced risk.
	
	Organizations that need to adapt to face new business and market
	challenges, to improve value propositions to their customers as part of
	Digital Transformation.
	
	When should Enterprise Architecture be done?
	
	To get the greatest benefit from Enterprise Architecture it should be
	done early and throughout the change process to help decision-makers
	understand the implications of their decisions. Without this
	understanding, costly mistakes can be made and Enterprise Architecture
	is not serving it fullest potential. Enterprise Architecture done after
	decisions are made is merely documentation of those decisions or at best
	enforcement of those decisions. No insight is gained as to the effect of
	those decisions which could be far-reaching and perhaps detrimental.
	
snippet togaf_index_1.1_Executive_Overview "1.1 Executive Overview"
	
	This section provides an executive overview of Enterprise Architecture,
	the basic concepts of what it is (not just another name for IT
	Architecture), and why it is needed. It provides a summary of the
	benefits of establishing an Enterprise Architecture and adopting the
	TOGAF approach to achieve that.
	
	What is an enterprise?
	
	The TOGAF Standard considers an "enterprise" to be any collection of
	organizations that have common goals.
	
	For example, an enterprise could be:
	
	-   A whole corporation or a division of a corporation
	-   A government agency or a single government department
	-   A chain of geographically distant organizations linked together by
	    common ownership
	-   Groups of countries, governments, or governmental organizations
	    (such as militaries) working together to create common or shareable
	    deliverables or infrastructures
	-   Partnerships and alliances of businesses working together, such as a
	    consortium or supply chain
	
	The term "Enterprise" in the context of "Enterprise Architecture" can be
	applied to either an entire enterprise, encompassing all of its business
	activities and capabilities, information, and technology that make up
	the entire infrastructure and governance of the enterprise, or to one or
	more specific areas of interest within the enterprise. An enterprise may
	include partners, suppliers, and customers as well as internal business
	units. In all cases, the architecture crosses multiple systems, and
	multiple functional groups within the enterprise.
	
	The enterprise operating model concept is useful to determine the nature
	and scope of the Enterprise Architecture within an organization. Many
	organizations may comprise multiple enterprises, and may develop and
	maintain a number of independent Enterprise Architectures to address
	each one. These enterprises often have much in common with each other
	including processes, functions, and their information systems, and there
	is often great potential for wider gain in the use of a common
	architecture framework. For example, a common framework can provide a
	basis for the development of common building blocks and solutions, and a
	shareable Architecture Repository for the integration and re-use of
	business models, designs, information, and data.
	
	Why is an Enterprise Architecture needed?
	
	The purpose of Enterprise Architecture is to optimize across the
	enterprise the often fragmented legacy of processes (both manual and
	automated) into an integrated environment that is responsive to change
	and supportive of the delivery of the business strategy.
	
	The effective management and exploitation of information and Digital
	Transformation are key factors to business success, and indispensable
	means to achieving competitive advantage. An Enterprise Architecture
	addresses this need, by providing a strategic context for the evolution
	and reach of digital capability in response to the constantly changing
	needs of the business environment.
	
	Furthermore, a good Enterprise Architecture enables you to achieve the
	right balance between business transformation and continuous operational
	efficiency. It allows individual business units to innovate safely in
	their pursuit of evolving business goals and competitive advantage. At
	the same time, the Enterprise Architecture enables the needs of the
	organization to be met with an integrated strategy which permits the
	closest possible synergies across the enterprise and beyond.
	
	And lastly, much of the global privacy legislation demands that
	processes around personal data are fully documented in a way that can be
	easily understood by untrained readers — such as the data subjects and
	judges and lawyers. The penalties for failing to have this can be very
	significant. Clearly the creation of this basic documentation arises
	from the changed fundamental considerations and this is now crucial.
	
	What are the benefits of an Enterprise Architecture?
	
	An effective Enterprise Architecture can bring important benefits to the
	organization. Potential benefits of an Enterprise Architecture include:
	
	-   More effective strategic decision-making by C-Level executives and
	    business leaders:
	    -   Quick response to change and support for enterprise agility
	        aligned with the organization strategy
	    -   Organizational transformation, adopting new trends in business
	        and technology
	    -   Organizational change to support Digital Transformation
	    -   Organizational and operating model changes to improve efficiency
	        and effectiveness
	-   More effective and efficient business operations:
	    -   Lower business operation costs
	    -   More agile organization
	    -   Business capabilities shared across the organization
	    -   Lower change management costs
	    -   More flexible workforce
	    -   Improved business productivity
	    -   Improved organization integration in support of mergers and
	        acquisitions
	-   More effective and efficient Digital Transformation and operations:
	    -   Extending effective reach of the enterprise (e.g., through
	        digital capability)
	    -   Bringing all components of the enterprise into a harmonized
	        environment
	    -   Lower development, deployment, operations, support, and
	        maintenance costs
	    -   Improved interoperability
	    -   Improved system management
	    -   Improved ability to address critical enterprise-wide issues
	        (e.g., security)
	    -   Easier upgrade and exchange of system components
	-   Better return on existing investment, reduced risk for future
	    investment:
	    -   Reduced complexity in the business and IT
	    -   Maximized return on investment in existing business and IT
	    -   The flexibility to make, buy, or outsource business and IT
	        solutions
	    -   Understanding how return on investment changes over time
	-   Faster, simpler, and cheaper procurement:
	    -   Buying decisions are simpler, because the information governing
	        procurement is readily available in a coherent plan
	    -   The procurement process is faster — maximizing procurement speed
	        and flexibility without sacrificing architectural coherence
	    -   The ability to procure heterogeneous, multi-vendor open systems
	    -   The ability to secure more economic capabilities
	
	What specifically would prompt the development of an Enterprise Architecture?
	
	The reasons for embarking on an Enterprise Architecture review or
	development are varied, including:
	
	-   Business-driven initiatives to enable business transformation; for
	    example, to leverage digital services and products as revenue
	    generating assets
	-   Technology-driven initiatives for efficiency and cost reduction; for
	    example, technology consolidation initiatives, where the
	    consolidation destination can be physical, virtual, or a combination
	-   Merger or acquisition, where the return on investment is only
	    realized after technology efficiencies are realized
	-   Management of technical debt accrued by agile development
	    initiatives
	
	In all of these situations, Enterprise Architecture review or
	development is needed to manage complexity when change involves multiple
	systems with multiple inter-dependencies.
	
	Often key people identify areas of change required in order for new
	business goals to be met. Such people are commonly referred to as the
	"stakeholders" in the change. The role of the architect is to address
	their concerns by:
	
	-   Identifying and refining the requirements of the stakeholders
	-   Developing views of the architecture that show how the concerns and
	    requirements are going to be addressed
	-   Showing the trade-offs that are going to be made in reconciling the
	    potentially conflicting concerns of different stakeholders
	
	Without the Enterprise Architecture, it is highly unlikely that all the
	concerns and requirements will be considered and met.
	
	What is an architecture framework?
	
	An architecture framework is a foundational structure, or set of
	structures, which can be used for developing a broad range of different
	architectures. It should include a method for describing both a baseline
	and target state of the enterprise, in terms of a set of building blocks
	for showing how the building blocks fit together and planning the
	evolution from baseline to target states.
	
	A framework is typically tailored to meet the specific needs of the
	organization. Tailoring of the framework should establish a set of tools
	and a common vocabulary.
	
	Why use the TOGAF Standard as a framework for Enterprise Architecture?
	
	The TOGAF Standard has been developed through the collaborative efforts
	of the whole community. Using the TOGAF Standard results in Enterprise
	Architecture that is consistent, reflects the needs of stakeholders,
	employs best practice, and gives due consideration both to current
	requirements and the perceived future needs of the business.
	
	Developing and sustaining an Enterprise Architecture is a technically
	complex process which involves many stakeholders and decision processes
	in the organization. The TOGAF Standard plays an important role in
	standardizing and de-risks the architecture development process. The
	TOGAF Standard provides a best practice framework for adding value, and
	enables the organization to build workable and economic solutions which
	address their business issues and needs.
	
	The TOGAF Standard value proposition is to enable organizations to
	operate in an efficient and effective way using a proven and recognized
	set of best practices, across the enterprise and in different sectors to
	address specific business and technology trends.
	
	A key consideration is that guidance provided by the standard is
	intended to be adapted to address different needs and particular
	use-cases. That means it can be used to create a sustainable Enterprise
	Architecture for a broad range of use-cases, including agile enterprises
	and Digital Transformation.
	
	Who would benefit from using the TOGAF Standard?
	
	Any organization undertaking, or planning to undertake, the development
	and implementation of an Enterprise Architecture for the support of
	business transformation will benefit from use of the TOGAF Standard.
	
	Organizations seeking Boundaryless Information Flow^(TM) can use the
	TOGAF Standard to define and implement the structures and processes to
	enable access to integrated information within and between enterprises.
	
	Organizations that design and implement Enterprise Architectures using
	the TOGAF Standard are assured of a design and a procurement
	specification that can facilitate an open systems implementation, thus
	enabling the benefits of open systems with reduced risk.
	
	Organizations that need to adapt to face new business and market
	challenges, to improve value propositions to their customers as part of
	Digital Transformation.
	
	When should Enterprise Architecture be done?
	
	To get the greatest benefit from Enterprise Architecture it should be
	done early and throughout the change process to help decision-makers
	understand the implications of their decisions. Without this
	understanding, costly mistakes can be made and Enterprise Architecture
	is not serving it fullest potential. Enterprise Architecture done after
	decisions are made is merely documentation of those decisions or at best
	enforcement of those decisions. No insight is gained as to the effect of
	those decisions which could be far-reaching and perhaps detrimental.
	
snippet togaf_integrating-risk-and-security_INDEX_1.1_How_does_this_Guide_Support_the_TOGAF_Standard "1.1 How does this Guide Support the TOGAF Standard?"
	
	This new content takes the security activities in the current TOGAF
	Standard [1] to a higher conceptual level. The goal of this approach is
	to explain how the TOGAF method and framework can be tailored to make
	use of an existing Enterprise Security Architecture in order to address
	security and risk properly.
	
	This approach is business-driven and supports the integration of two
	processes: ISM and ERM. This process orientation will improve
	understanding of the security concepts and activities at different
	phases through the TOGAF Architecture Development Method (ADM). The
	business orientation will contribute to justification of the security
	components.
	
	In this approach, it is foreseen that a lot of additional security
	practitioner guidance needs to be developed. This Guide provides the
	basis for that work. By using a common foundation this will deliver an
	internally consistent and practical way of working.
	
snippet togaf_integrating-risk-and-security_1_Introduction_1.1_How_does_this_Guide_Support_the_TOGAF_Standard "1.1 How does this Guide Support the TOGAF Standard?"
	
	This new content takes the security activities in the current TOGAF
	Standard [1] to a higher conceptual level. The goal of this approach is
	to explain how the TOGAF method and framework can be tailored to make
	use of an existing Enterprise Security Architecture in order to address
	security and risk properly.
	
	This approach is business-driven and supports the integration of two
	processes: ISM and ERM. This process orientation will improve
	understanding of the security concepts and activities at different
	phases through the TOGAF Architecture Development Method (ADM). The
	business orientation will contribute to justification of the security
	components.
	
	In this approach, it is foreseen that a lot of additional security
	practitioner guidance needs to be developed. This Guide provides the
	basis for that work. By using a common foundation this will deliver an
	internally consistent and practical way of working.
	
snippet togaf_togaf-leaders-guide_INDEX_1.1_How_to_Use_this_Guide_with_the_TOGAF_Framework "1.1 How to Use this Guide with the TOGAF Framework"
	
	The TOGAF framework provides essential universal scaffolding useful to a
	range of organizations, industries, and architectural styles.
	Customization of the TOGAF framework is necessary to align to the
	enterprise’s requirements and expectations. The question is how to
	customize the TOGAF framework.
	
	The TOGAF framework is written for the practitioner, the expert, and in
	general the professional that would take the role of EA Capability
	leader; the person who thinks about the structure and practice of EA.
	This Guide is an interpretation of the TOGAF framework to support the
	Leader to establish or evolve an EA Capability – the person who is not
	worried about the theory, but who is worried about how to structure or
	maintain an effective EA Capability.
	
	This Guide provides advice for establishing or enhancing an EA
	Capability based upon the TOGAF framework. Establishing an EA Capability
	is the purpose of the TOGAF ADM Preliminary Phase. This Guide follows
	the Preliminary Phase and provides in-depth commentary and guidance for
	executing the Preliminary Phase. This includes guidance on customizing
	and configuring the TOGAF ADM; defining a Content Framework; selecting,
	configuring, and customizing appropriate tools and techniques; and
	selecting, configuring, and customizing appropriate architecture
	practices.
	
snippet togaf_togaf-leaders-guide_1_Introduction_1.1_How_to_Use_this_Guide_with_the_TOGAF_Framework "1.1 How to Use this Guide with the TOGAF Framework"
	
	The TOGAF framework provides essential universal scaffolding useful to a
	range of organizations, industries, and architectural styles.
	Customization of the TOGAF framework is necessary to align to the
	enterprise’s requirements and expectations. The question is how to
	customize the TOGAF framework.
	
	The TOGAF framework is written for the practitioner, the expert, and in
	general the professional that would take the role of EA Capability
	leader; the person who thinks about the structure and practice of EA.
	This Guide is an interpretation of the TOGAF framework to support the
	Leader to establish or evolve an EA Capability – the person who is not
	worried about the theory, but who is worried about how to structure or
	maintain an effective EA Capability.
	
	This Guide provides advice for establishing or enhancing an EA
	Capability based upon the TOGAF framework. Establishing an EA Capability
	is the purpose of the TOGAF ADM Preliminary Phase. This Guide follows
	the Preliminary Phase and provides in-depth commentary and guidance for
	executing the Preliminary Phase. This includes guidance on customizing
	and configuring the TOGAF ADM; defining a Content Framework; selecting,
	configuring, and customizing appropriate tools and techniques; and
	selecting, configuring, and customizing appropriate architecture
	practices.
	
snippet togaf_master-data-management_1.1_Information_Architecture_Capability "1.1 Information Architecture Capability"
	
	The need for information architecture has existed since the 1980s when
	organizations started to invest in information systems to automate their
	operations. Initially focused on data modeling, data architects must now
	also focus on IT-based data management capabilities. Indeed, they play a
	key role in the architecture of the organization to reach a mature data
	management capability.
	
	In society, usage of digital technologies is increasing daily. At the
	same time, the very dynamic and innovative IT market is rapidly
	proposing new solutions. The consequence is that the organization’s
	information systems are continuously growing, storing much data in many
	different forms, and piling technologies. Another consequence is the
	increased information systems environmental impact that will have to be
	controlled in the coming years, the faster the better, as explained in
	The Shift Project report Lean ICT: Towards Digital Sobriety (see
	Referenced Documents). This growing dynamic must be stabilized to secure
	the support of the organization’s business. Data management is a
	capability that can reduce data duplication and silos, and reduce the
	volume of data to be stored as well as improve the business’s access to
	information.
	
	With the rise of the Internet and platforms, data has become an asset
	that has to be managed in a financial and environmentally sustainable
	way. Data teams and initiatives lead data executives like Chief Data
	Officers (CDOs) and Chief Knowledge Officers (CKOs) that have been more
	or less recently created in many organizations to reinforce Chief
	Information Officers (CIOs) in the data management capability. Their
	purpose is to deliver high-quality data assets to support automation of
	operations, data science, and personalized relations with customers.
	Many organizations are currently racing to become data-driven at scale.
	
	The information architecture practice must professionalize by developing
	approaches to organize related business operations and processes, IT
	systems, and data storage in a consistent holistic manner, but at the
	same time split into building blocks to allow decoupled but
	interoperable capabilities.
	
	In this document, information architecture tools that were built to
	support architecture also work on the specific topic of C-MDM. It
	complements other documents that deal with IT-based data management
	capabilities, as described in Section 1.2. Best practices have been
	captured on the ground from specific projects and optimized to allow
	wide use in any organization. They aim to accelerate the delivery
	architecture study to make it Agile by not reinventing the wheel,
	bringing clarity to market offers, and providing a framework to train
	data architects and other data professionals in good practices. Last but
	not least, they aim to provide a common language for data professionals:
	CDOs, data managers, architects, data engineers, data scientists, etc.
	
snippet togaf_reference-models_government-reference-model_1.1_Objective "1.1 Objective"
	
	The objective of this document is to specify a standard reference model
	template that can be used to describe any business in the public sector
	and allow for different architecture approaches and analysis techniques.
	This model supports collaboration between architecture service providers
	and enables the development of the Business Architecture profession.
	
snippet togaf_architecture-skills-framework_1.1_Objective "1.1 Objective"
	
	This document provides a set of role, skill, and experience norms for
	staff undertaking Enterprise Architecture work.
	
snippet togaf_architecture-maturity-models_1.1_Objective "1.1 Objective"
	
	This document introduces the concept of Architecture Capability Maturity
	Models, techniques for evaluating and quantifying an organization’s
	maturity in Enterprise Architecture, including a publicly available
	framework as an example, which can be used by any enterprise to develop
	their own organization-specific maturity model.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_1.1_Overview "1.1. Overview"
	
	This document describes how and when Enterprise Architecture, using the
	approach defined in the TOGAF Standard, can be used to enable a digital
	enterprise. The experience and knowledge collected and cataloged in the
	TOGAF Standard has come from years of experience by people around the
	globe who have built and run the IT portions of companies around the
	world. The lessons learnt can be used to minimize the growing pains from
	which maturing digital enterprises will likely suffer.
	
	The structure of this document uses the four contexts and descriptions
	from the DPBoK Standard to describe the different stages or maturity
	levels through which a digital product and digitally-based company might
	transition.
	
	Chapter 1, Introduction provides an introduction to the Enterprise
	Architect and the Digital Practitioner along with their perspectives and
	the strategy to connect them. The document presents guidance using a
	“peek-ahead” approach so a digital enterprise maturing from one context
	to the next can appropriately apply the TOGAF Standard and Enterprise
	Architecture to “look ahead” in preparation for transitioning from
	context to context. It also describes the importance of delivering
	Enterprise Architecture through a service delivery model – the
	Enterprise Architecture as a service strategy.
	
	Chapter 2, Why the TOGAF Standard Supports the Digital Enterprise
	describes why Enterprise Architecture using the TOGAF Standard should be
	applied in a digital enterprise, and describes using each to reactively
	and proactively manage and avoid technical debt. It also describes how,
	as digital products mature and operational excellence is needed, both
	can be used to mature a product and a company.
	
	Chapter 3, Terminology Alignment provides clarity for the terminology
	used by the TOGAF Standard and the DPBoK Standard. It also points out
	definitions commonly used by The Open Group for any terms used in the
	document that the reader might want to review.
	
	Chapter 4, How the TOGAF Standard Supports the Digital Enterprise
	comprises the bulk of the content as it reviews the four contexts used
	by the DPBoK Standard and describes what Enterprise Architecture can
	contribute during each context. It also describes the Enterprise
	Architecture principles, capabilities, and services that support each
	context. Finally, the chapter describes which parts of the TOGAF ADM and
	TOGAF Series Guides apply to each context to assist with further
	guidance.
	
snippet togaf_guides_microservices-architecture_1.1_Overview "1.1 Overview"
	
	As the market environment becomes more dynamic, companies are moving
	towards management of their complexity and business agility issues.
	Networks of current software components and their interfaces build
	highly complex landscapes where change management becomes more difficult
	and it is harder to anticipate and comprehend the consequences of
	change. The modern market environment also brings demands to enhance
	system availability and scalability, two characteristics that are
	drivers in the adoption of MSA.
	
	MSA is an architecture style that defines and creates systems through
	the use of small independent and self-contained services that align
	closely with business activities. An individual microservice is a
	service that is implemented with a single purpose, that is
	self-contained, and that is independent of other instances and services.
	Microservices are the primary Architecture Building Blocks (ABBs) of an
	MSA. As part of an Enterprise Architecture, MSA brings a layer of
	service capabilities to extend the business capabilities of the
	enterprise and, where the enterprise is a small self-contained service,
	MSA may be perceived to be the Enterprise Architecture. Refer to The
	Open Group White Paper: Microservices Architecture (see Referenced
	Documents).
	
	The concept of MSA is designed to simplify business operations and to
	promote the interoperability of the various parts of that business, in
	order to increase business agility. It is possible to easily define an
	organization’s functional capabilities by structuring capacity as
	meaningful, granular services as opposed to opaque, siloed business
	units, without duplicating similar capabilities across the organization.
	Precisely defined granularity, aligned with business domain and clearly
	defined interfaces, limits the impact of changes and allows
	understanding of mutual dependencies.
	
	From a software development perspective, MSA focuses on breaking
	applications into a set of independent microservices, promoting system
	flexibility and agility that is necessary in today’s complex and
	fast-moving business environment.
	
snippet togaf_adm-practitioners_INDEX_1.1_Overview "1.1 Overview"
	
	This Guide provides guidance on using the TOGAF framework to develop,
	maintain, and use an Enterprise Architecture (EA). This Guide is a
	companion to the TOGAF framework and is intended to bring the concepts
	and generic constructs in the TOGAF framework to life. This Guide puts
	forward an approach to develop, maintain, and use an EA that aligns to a
	set of requirements and expectations of the stakeholders and enables
	predictable value creation.
	
	It is intended to take the TOGAF concepts and show how each Practitioner
	can use the same concept to (a) deliver useful EA for their Enterprise
	and (b) deliver improvements to EA Capability. This point is important:
	use the same concept. Not the same technique, not the same template, not
	the same process. The same concept. For example, evidence from prevalent
	practice shows that there is not a single EA team that didn’t use a
	repository, whether the repository is a file folder or a fully-fledged
	installation of modeling and analytic software. If you are struggling
	with this point, stop and think about any preconceptions you are
	carrying into the conversation. For example, while reading, if you have
	a reaction similar to “but a real repository includes …”, ask yourself
	if this is universally true. The concept of a repository is universal;
	the implementation varies.
	
	The essential scaffolding of the TOGAF framework is the concepts.
	Everything else in the TOGAF framework is either an example or a starter
	set to get you moving. If you do not like the example, then you can take
	advantage of the modular structure of the TOGAF framework and substitute
	it. Leading Practitioners and users often take this approach. This Guide
	is about advising the Practitioner in making the universal structure of
	the TOGAF framework work.
	
	This Guide is written for the Practitioner, the person who is tasked to
	develop, maintain, and use an EA. Choice of the term Practitioner is
	deliberate, reflecting the role, rather than one of the myriad job
	titles in an Enterprise the Practitioner may have.
	
	This Guide is structured to provide the context, content, and rationale
	behind choices and steps that an EA Practitioner can consult at any
	point. When effectively used, a thoughtfully developed EA optimizes
	Boundaryless Information Flow™ within and between Enterprises based on
	open standards and global interoperability.
	
	This Guide is explicitly about developing, maintaining, and, most
	importantly, using an EA. The range of potential Enterprises and
	purposes require a guide of this length to define the direction.[1]
	Following the approach suggested in the World-Class Enterprise
	Architecture White Paper (see Referenced Documents), the TOGAF Standard
	is routinely applied to develop architectures supporting strategy
	development, portfolio management, project planning and execution, and
	solution development. Collective experiences reflect that there is no
	one right EA deliverable, model, view, work product, or technique.
	Rather, the correct approach is specific to the purpose of the
	architecture development initiative. Anyone who suggests there is a
	single correct approach, model, view, work product, or technique is not
	providing the right advice for you to succeed. This Guide will help you,
	the Practitioner, to identify the approach that is appropriate to any
	particular purpose.
	
	Developing, maintaining, and using an EA requires deep interaction with
	several specialized functions such as strategy development, budgeting,
	benefits realization, portfolio management, program & project
	management, and operational units. This Guide will:
	
	-   Introduce key topics of concern
	-   Describe the TOGAF Standard concepts related to the topic
	-   Show how it is related to developing, maintaining, and using an EA
	-   Discuss what the Practitioner needs to know
	-   Describe what the Practitioner should do with this knowledge
	
	Even though this Guide has a logical structure, it is not simple task
	list. The depth and detail of the steps needed to be taken by the
	Practitioner are specific to the purpose and are iterative. The only
	variable is time spent for every step. As with all change work, listing
	what you need to know is not the same as defining the level of detail in
	the documentation.
	
	Key decisions are made in an Enterprise following a business cycle. An
	architecture should inform and enable decision-making. Just align the
	delivery of architecture to the Enterprise’s business cycle and the
	purpose of the architecture development initiative. The value is
	delivered when the architecture is used. It is plain and simple.
	
	This Guide is divided into six parts, as follows:
	
	Part 1: Introduction
	
	This part contains this introductory part and a set of definitions.
	
	Part 2: Guidance on Enterprise Architecture
	
	This part addresses:
	
	-   What an Enterprise Architecture is and what it is used for
	-   Coordinating EA development across the EA Landscape
	-   Coordinating EA development with the business cycle
	
	Part 3: Guidance on Developing an Enterprise Architecture
	
	This part addresses:
	
	-   Using the ADM
	-   Developing an Enterprise Architecture to Support Strategy
	-   Developing an Enterprise Architecture to Support Portfolio
	-   Developing an Enterprise Architecture to Support Project
	-   Developing an Enterprise Architecture to Support Solution Delivery
	-   Special Cases
	
	Part 4: Guidance on Using an Enterprise Architecture
	
	This part addresses:
	
	-   What to do when you are hip-deep in solution delivery
	-   Architecture in action (agile Enterprise, response to incident,
	    etc.)
	
	Part 5: Guidance on Maintaining an Enterprise Architecture
	
	This part addresses:
	
	-   Managing multiple simultaneous roadmaps
	-   What to do when you are hip-deep in solution delivery
	
	Part 6: Appendices
	
	This part presents:
	
	-   A list of useful tables related to frameworks, reference models,
	    etc.
	
snippet togaf_business-architecture_business-models_1.1_Overview "1.1 Overview"
	
	The world’s top C-suite leaders know that the effective management and
	exploitation of information is a key factor for business success, and is
	critical to developing and maintaining competitive advantage. An
	Enterprise Architecture supports this objective by providing a strategic
	context for the evolution of technologies in response to the constantly
	changing needs of the business environment.
	
	As stated in the TOGAF Standard – Introduction and Core Concepts, a key
	goal of Enterprise Architecture is to create or enable the alignment of
	the business operations with the overall business direction (vision and
	strategy). Furthermore:
	
	“… a good Enterprise Architecture enables you to achieve the right
	balance between business transformation and continuous operational
	efficiency. It allows individual business units to innovate safely in
	their pursuit of evolving business goals and competitive advantage. At
	the same time, the Enterprise Architecture enables the needs of the
	organization to be met with an integrated strategy which permits the
	closest possible synergies across the enterprise and beyond.”
	
	To achieve this alignment, the architect must develop a fundamental
	understanding of the core elements that make up a business and how they
	relate to the ways in which it creates, captures, and delivers value.
	However, it is not always clear what the business direction is, or how
	the business intends to create, capture, and deliver value to customers
	and stakeholders. If we don’t fully understand what a business does or
	what it intends to do; why it exists; or how it works to produce
	something of value to stakeholders (while making money in the process),
	then how can architects devise an appropriate target-state environment
	that realizes the business objectives?
	
	One effective way to achieve alignment between an organization’s
	strategic objectives and the target-state architecture is to employ the
	concept of the business model. Business model artifacts are used to:
	
	-   Provide a common understanding of what the organization is, or looks
	    like, today
	-   Portray what it intends to become in the future
	-   Create a critical link between the business strategy and the
	    required blueprints of the Enterprise Architecture that define what
	    the business needs to transform to, along with the plans that
	    describe how to do it
	
	The rest of this Guide describes what business models are and how
	business model artifacts are constructed; their purpose and benefits;
	how to use modeling frameworks to create a business model artifact and
	perform business model innovation; and where to apply them within the
	realms of Enterprise Architecture and the TOGAF Architecture Development
	Method (ADM).
	
snippet togaf_architecture-content_1_Introduction_1.1_Overview "1.1 Overview"
	
	Architects executing the Architecture Development Method (ADM) will
	produce a number of outputs as a result of their efforts, such as
	process flows, architectural requirements, project plans, or project
	compliance assessments. The Content Framework provides a structural
	model for architectural content that allows the major work products that
	an architect creates to be consistently defined, structured, and
	presented.
	
	The Content Framework provided here is intended to allow the TOGAF
	framework to be used as a stand-alone framework for architecture within
	an enterprise. However, other Content Frameworks exist (such as the
	Zachman® Framework) and it is anticipated that some enterprises may opt
	to use an external framework in conjunction with the TOGAF framework. In
	these cases, the TOGAF Content Framework provides a useful reference and
	starting point for TOGAF content to be mapped to other Content
	Frameworks.
	
	The Architecture Content Framework uses the following three categories
	to describe the type of architectural work product within the context of
	use:
	
	-   A deliverable is a work product that is contractually specified and
	    in turn formally reviewed, approved, and signed off by the
	    stakeholders
	
	    Deliverables represent the output of projects and those deliverables
	    that are in documentation form will typically be archived at
	    completion of a project, or transitioned into an Architecture
	    Repository as a reference model, standard, or snapshot of the
	    Architecture Landscape at a point in time.
	
	-   An artifact is an architectural work product that describes an
	    aspect of the architecture
	
	    Artifacts are generally classified as catalogs (lists of things),
	    matrices (showing relationships between things), and diagrams
	    (pictures of things). Examples include a requirements catalog,
	    application interaction matrix, and a value chain diagram. An
	    architectural deliverable may contain many artifacts and artifacts
	    will form the content of the Architecture Repository.
	
	-   A building block represents a potentially re-usable component of
	    enterprise capability that can be combined with other building
	    blocks to deliver architectures and solutions
	
	    Building blocks can be defined at various levels of detail,
	    depending on what stage of architecture development has been
	    reached. For instance, at an early stage, a building block can
	    simply consist of a name or an outline description. Later on, a
	    building block may be decomposed into multiple supporting building
	    blocks and may be accompanied by a full specification. Building
	    blocks can relate to "architectures" or "solutions".
	
	    -   Architecture Building Blocks (ABBs) typically describe what is
	        required of SBBs at a more logical or supplier-independent
	        level; those requirements may include services to be performed,
	        data resources, and capabilities needed. ABBs include logical
	        business, application, and technology components
	    -   Solution Building Blocks (SBBs) represent physical or
	        supplier-specific components that have the capability to realize
	        part or all of a more logical ABB. There are business,
	        application, and technology SBBs.
	
	The relationships between deliverables, artifacts, and building blocks
	are shown in Figure 1-1 .
	
	[]
	
	Figure 1-1: Relationships between Deliverables, Artifacts, and Building
	Blocks
	
	For example, an Architecture Definition Document is a deliverable that
	documents an Architecture Description. This document will contain a
	number of complementary artifacts that are architecture views of the
	building blocks relevant to the architecture. For example, a process
	flow diagram (an artifact) may be created to describe the target call
	handling process (a building block). This artifact may also describe
	other building blocks, such as the actors involved in the process (e.g.,
	a Customer Services Representative). An example of the relationships
	between deliverables, artifacts, and building blocks is illustrated in
	Figure 1-2 .
	
	[]
	
	Figure 1-2: Example — Architecture Definition Document
	
snippet togaf_adm-practitioners_1_Introduction_1.1_Overview "1.1 Overview"
	
	This Guide provides guidance on using the TOGAF framework to develop,
	maintain, and use an Enterprise Architecture (EA). This Guide is a
	companion to the TOGAF framework and is intended to bring the concepts
	and generic constructs in the TOGAF framework to life. This Guide puts
	forward an approach to develop, maintain, and use an EA that aligns to a
	set of requirements and expectations of the stakeholders and enables
	predictable value creation.
	
	It is intended to take the TOGAF concepts and show how each Practitioner
	can use the same concept to (a) deliver useful EA for their Enterprise
	and (b) deliver improvements to EA Capability. This point is important:
	use the same concept. Not the same technique, not the same template, not
	the same process. The same concept. For example, evidence from prevalent
	practice shows that there is not a single EA team that didn’t use a
	repository, whether the repository is a file folder or a fully-fledged
	installation of modeling and analytic software. If you are struggling
	with this point, stop and think about any preconceptions you are
	carrying into the conversation. For example, while reading, if you have
	a reaction similar to “but a real repository includes …”, ask yourself
	if this is universally true. The concept of a repository is universal;
	the implementation varies.
	
	The essential scaffolding of the TOGAF framework is the concepts.
	Everything else in the TOGAF framework is either an example or a starter
	set to get you moving. If you do not like the example, then you can take
	advantage of the modular structure of the TOGAF framework and substitute
	it. Leading Practitioners and users often take this approach. This Guide
	is about advising the Practitioner in making the universal structure of
	the TOGAF framework work.
	
	This Guide is written for the Practitioner, the person who is tasked to
	develop, maintain, and use an EA. Choice of the term Practitioner is
	deliberate, reflecting the role, rather than one of the myriad job
	titles in an Enterprise the Practitioner may have.
	
	This Guide is structured to provide the context, content, and rationale
	behind choices and steps that an EA Practitioner can consult at any
	point. When effectively used, a thoughtfully developed EA optimizes
	Boundaryless Information Flow™ within and between Enterprises based on
	open standards and global interoperability.
	
	This Guide is explicitly about developing, maintaining, and, most
	importantly, using an EA. The range of potential Enterprises and
	purposes require a guide of this length to define the direction.[1]
	Following the approach suggested in the World-Class Enterprise
	Architecture White Paper (see Referenced Documents), the TOGAF Standard
	is routinely applied to develop architectures supporting strategy
	development, portfolio management, project planning and execution, and
	solution development. Collective experiences reflect that there is no
	one right EA deliverable, model, view, work product, or technique.
	Rather, the correct approach is specific to the purpose of the
	architecture development initiative. Anyone who suggests there is a
	single correct approach, model, view, work product, or technique is not
	providing the right advice for you to succeed. This Guide will help you,
	the Practitioner, to identify the approach that is appropriate to any
	particular purpose.
	
	Developing, maintaining, and using an EA requires deep interaction with
	several specialized functions such as strategy development, budgeting,
	benefits realization, portfolio management, program & project
	management, and operational units. This Guide will:
	
	-   Introduce key topics of concern
	-   Describe the TOGAF Standard concepts related to the topic
	-   Show how it is related to developing, maintaining, and using an EA
	-   Discuss what the Practitioner needs to know
	-   Describe what the Practitioner should do with this knowledge
	
	Even though this Guide has a logical structure, it is not simple task
	list. The depth and detail of the steps needed to be taken by the
	Practitioner are specific to the purpose and are iterative. The only
	variable is time spent for every step. As with all change work, listing
	what you need to know is not the same as defining the level of detail in
	the documentation.
	
	Key decisions are made in an Enterprise following a business cycle. An
	architecture should inform and enable decision-making. Just align the
	delivery of architecture to the Enterprise’s business cycle and the
	purpose of the architecture development initiative. The value is
	delivered when the architecture is used. It is plain and simple.
	
	This Guide is divided into six parts, as follows:
	
	Part 1: Introduction
	
	This part contains this introductory part and a set of definitions.
	
	Part 2: Guidance on Enterprise Architecture
	
	This part addresses:
	
	-   What an Enterprise Architecture is and what it is used for
	-   Coordinating EA development across the EA Landscape
	-   Coordinating EA development with the business cycle
	
	Part 3: Guidance on Developing an Enterprise Architecture
	
	This part addresses:
	
	-   Using the ADM
	-   Developing an Enterprise Architecture to Support Strategy
	-   Developing an Enterprise Architecture to Support Portfolio
	-   Developing an Enterprise Architecture to Support Project
	-   Developing an Enterprise Architecture to Support Solution Delivery
	-   Special Cases
	
	Part 4: Guidance on Using an Enterprise Architecture
	
	This part addresses:
	
	-   What to do when you are hip-deep in solution delivery
	-   Architecture in action (agile Enterprise, response to incident,
	    etc.)
	
	Part 5: Guidance on Maintaining an Enterprise Architecture
	
	This part addresses:
	
	-   Managing multiple simultaneous roadmaps
	-   What to do when you are hip-deep in solution delivery
	
	Part 6: Appendices
	
	This part presents:
	
	-   A list of useful tables related to frameworks, reference models,
	    etc.
	
snippet togaf_digital-technology-adoption_1.1_Overview "1.1 Overview"
	
	Digital Transformation is shaping up to be the latest industry
	challenge. This is being exacerbated by the convergence of several
	trends, further magnified by society’s reliance on digital technology to
	work, live, and connect, without any geographical constraints. It is
	transforming the way interactions are occurring and services are being
	delivered. Enterprises can no longer rely on old habits and practices to
	play this new digital game, and this is causing disruption across all
	industries. Industries are changing at a rapid pace and will no longer
	be as they used to be. It is already apparent that better prepared
	organizations are riding the wave while many, including new-age
	companies and their over-hyped business models, are biting the dust.
	Five profound changes we are witnessing are:
	
	1.      Digital Transformation is becoming an ongoing imperative across
	    the board.
	2.      Disruptors are being disrupted, and the rate of disruption is
	    getting faster.
	3.      Enterprises are fully committing to digital governance to drive
	    sustained success.
	4.      Enterprises are discovering new value propositions to survive
	    and thrive.
	5.      Harnessing digital technologies is becoming a ubiquitous
	    organizational capability.
	
	The adoption of digital technology is increasingly becoming a critical
	success factor to accelerate transformation. Enterprises are aiming to
	differentiate themselves from their competition based on how smartly
	they can harness digital technology to realize business outcomes.
	“Digital virtuosity” is a construct that has come to be a critical part
	of the organizational fabric.
	
	This document covers the critical tenets of digital technology adoption
	for any organization. The application of this document is
	technology-neutral by design. The readers of this document will get a
	defined roadmap that could be leveraged for adopting digital technology.
	It is imperative to note that this document covers the roadmap for
	digital technology adoption. In other words, this document focuses on
	pre-adoption aspects rather than digital maturity after the adoption is
	made (i.e., post-adoption digital mastery). The intent of the document
	is to facilitate readers with a readiness assessment which is to be used
	as a toolkit. The assessment has been created keeping the holistic view
	of an organization in consideration.
	
snippet togaf_architecture-project-management_1.1_Overview "1.1 Overview"
	
	Architecture Projects are typically complex in nature. They need proper
	Project Management to stay on track and deliver on promise. This Guide
	is intended for people responsible for planning and managing
	Architecture Projects. We explain how the TOGAF^(®) Architecture
	Development Method (ADM) can be supplemented with de facto methods and
	standards such as PRINCE2^(®) or PMBOK^(®) to strengthen Project
	Management and improve the probability of success for Architecture
	Projects.
	
	This Guide provides Architecture Project Teams with an overall view and
	detailed guidance on what processes, tools, and techniques of PRINCE2 or
	PMBOK can be applied alongside the TOGAF ADM for project planning,
	monitoring, and control. Further, a detailed mapping of the processes
	and deliverables of the TOGAF framework against PRINCE2 and PMBOK is
	provided to visualize how those concepts come together.
	
	This Guide is not intended to serve as a Project Management method
	guidance book. We explain what Project Management tools and techniques
	should be applied to Architecture Projects, but we rely on specific
	PRINCE2 and PMBOK publications for detailing those techniques or tools.
	
	We hope that the introduction of Project Management techniques to
	Architecture Projects will improve the chances for success of delivered
	value and solutions in a mature and professional way, supporting The
	Open Group vision of Boundaryless Information Flow™.
	
snippet togaf_applying-the-adm_1_Introduction_1.1_Using_the_TOGAF_Framework_with_Different_Architecture_Styles "1.1 Using the TOGAF Framework with Different Architecture Styles"
	
	The TOGAF framework is designed to be flexible and is used with various
	architectural styles.
	
	Architectural styles differ in terms of focus, form, techniques,
	materials, subject, and time period. The TOGAF Standard is a generic
	framework intended to be used in a wide variety of environments. It is a
	flexible and extensible framework that can be readily adapted to a
	number of architectural styles.
	
	An organization's Architecture Landscape can be expected to contain
	architecture work that is developed in many architectural styles. The
	TOGAF Standard ensures that the needs of each stakeholder are
	appropriately addressed in the context of other stakeholders and the
	Baseline Architecture.
	
	When using the TOGAF Standard to support a specific architectural style
	the practitioner must take into account the combination of distinctive
	features in which architecture is performed or expressed. As a first
	step, the distinctive features of a style must be identified.
	
	The second step is determining how these distinctive features will be
	addressed. Addressing a distinctive style should not call for
	significant changes to the TOGAF framework; instead it should adjust the
	models, viewpoints, and tools used by the practitioner.
	
	In Phase B, Phase C, and Phase D the practitioner is expected to select
	the relevant architecture resources, including models, viewpoints, and
	tools, to properly describe the architecture domain and demonstrate that
	stakeholder concerns are addressed (see the TOGAF Standard — ADM
	Techniques). Depending upon the distinctive features, different
	architectural styles will add new elements that must be described,
	highlight existing elements, adjust the notation used to describe the
	architecture, and focus the architect on some stakeholders or
	stakeholder concerns.
	
	Addressing the distinctive features will usually include extensions to
	the Architecture Content Metamodel and the use of specific notation or
	modeling techniques and the identification of viewpoints. Dominance of a
	particular architectural style can direct the practitioner to revisit
	the Preliminary Phase to make changes to the Architecture Capability or
	to address a distinctive feature in the expected scope of a single ADM
	cycle.
	
	Style-specific reference models and maturity models are commonly used
	tools that support a practitioner.
	
	During the lifetime of the TOGAF framework many architectural styles
	have been developed to address key problems facing practitioners and to
	demonstrate how the TOGAF framework can be made more relevant within
	defined contexts.
	
	Some of these have been developed by The Open Group Forums and Work
	Groups working in specific areas and have been published in Guides,
	White Papers, and Standards. Examples include:
	
	-   TOGAF® Series Guide: Using the TOGAF® Framework to Define and Govern
	    Service-Oriented Architectures
	-   TOGAF® Series Guide: Integrating Risk and Security within a TOGAF®
	    Enterprise Architecture
	
	Some of these have been developed collaboratively between The Open Group
	and other bodies. Examples include:
	
	-   TOGAF® and SABSA® Integration
	-   Archi Banking Group: Combining the BIAN Reference Model, ArchiMate®
	    Modeling Notation, and the TOGAF® Framework
	-   Exploring Synergies between TOGAF® and Frameworx
	-   TOGAF® 9 and DoDAF 2.0
	
	The TOGAF Library (see www.opengroup.org/togaf-library) is a structured
	library of resources that support the TOGAF Standard.
	
snippet togaf_guides_index_1.1_What_is_Meant_by_Agility_and_Why_is_it_Important "1.1. What is Meant by Agility and Why is it Important?"
	
	Enterprise agility is a commonly used term but the exact definition
	differs among practitioners. The most common characteristics include:
	
	-   Responsiveness to change: a flexible approach that anticipates and
	    explicitly plans for change, typically involving short iterations
	    and the frequent reprioritization of activities
	
	-   Value-driven: activity is driven by delivering value; priorities are
	    continually re-assessed to deliver high-value items first and work
	    on intermediate products and documentation is minimized
	
	-   Practical experimentation: a preference for trying things out and
	    learning from experience as opposed to extensive theoretical
	    analysis, sometimes characterized as “fail fast”
	
	-   Empowered, autonomous teams: skilled, multi-disciplinary teams work
	    closely together, taking responsibility for their own decisions and
	    outputs
	
	-   Customer communication and collaboration: working closely with the
	    customer and adapting to their needs; valuing collaboration and
	    feedback over formalized documentation and contracts
	
	-   Continuous improvement: the internal drive to improve the way an
	    organization performs
	
	-   Respect for people: people are put first, above process and tools –
	    they are treated with respect; flexibility, knowledge transfer, and
	    personal development are high priorities
	
	Regardless of how the term enterprise agility is defined, it is
	important because it enables an enterprise to better react to change by
	being more customer and product-centric, more efficient, and better able
	to ensure regulatory compliance.
	
	The term Agile is typically associated with the Agile Software
	Development Process derived from the Manifesto for Agile Software
	Development [2]. While Agile principles and techniques can be applied to
	adapt the TOGAF framework, enterprise agility is a broader context than
	Agile. Therefore, additional techniques are employed in adapting the
	TOGAF framework to an Agile enterprise.
	
snippet togaf_business-architecture_value-streams_1.1_What_is_Value "1.1 What is “Value”?"
	
	The word “value” originates from the Old French valoir: ‘be worth’. It
	is the regard that something is held to deserve; the importance, worth,
	or usefulness of something. Within the context of Business Architecture,
	it is important to think of value in the most general sense of
	usefulness, advantage, benefit, or desirability, rather than the
	relatively narrow accounting or financial perspective that defines value
	as being the material or monetary worth of something. Non-monetary
	examples of value in the business world include such things as the
	successful delivery of a requested product or service, resolving a
	client’s problem in a timely manner, or gaining access to up-to-date
	information in order to make better business decisions.
	
	Value is fundamental to everything that an organization does. The
	primary reason that an organization exists is to provide value to one or
	more stakeholders. It is the foundation of a firm’s business model,
	which describes the rationale for how a business creates, delivers, and
	captures value. The Business or Enterprise Architect should be able to
	model, measure, and analyze the various ways that the enterprise
	achieves value for a given stakeholder. This includes the ability to
	decompose the creation, capture, and delivery of value into discrete
	stages of value-producing activities, each of which is enabled by the
	effective application of business capabilities (see the TOGAF^(®) Series
	Guide to Business Capabilities). This Guide provides an approach and
	examples for modeling business value.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_1.2.1_Context_and_Background "1.2.1. Context and Background"
	
	The perspectives of the Digital Practitioner and the Enterprise
	Architect are often different. Moreover, they may operate in ways that
	introduce conflict between them due to goals that are at odds. For
	instance, the goal of the Digital Practitioner is to deliver customer
	value as quickly as possible, learning and updating rapidly based on
	customer feedback, and minimizing effort and attention outside of this
	learning cycle as much as possible. The goal of the Enterprise Architect
	is to know and maintain enough information about the ecosystem in which
	they operate to provide enough of the right information as possible for
	leadership to make well-informed decisions, and provide correct and
	informed guidance to product teams.
	
	The TOGAF Standard and the DPBoK Standard each evolved during two
	different computing eras. That is challenging enough, but we are also in
	a time of extreme business disruption. One of the drivers of this
	disruption is the steep fall in price of computing and bandwidth,
	including in mobile devices. This represents an opportunity to deliver
	digital value at dramatically lower costs than in the past. Businesses
	see the value of having digital products to offer to their customers.
	or, even if they do not see the value, they see the competitive
	disadvantage they will face if they do not embrace digital products, as
	their competitors will take advantage of the fall in cost of digital
	delivery. Would you even consider banking with a bank that did not have
	a mobile app? Would you ever think of flying with an airline that did
	not offer online reservation and check in?
	
	Enterprise Architecture and the TOGAF Standard began to evolve at a time
	when on-premise data centers with large systems were in use and the
	Internet, virtual machine environments, and cloud-based resources were
	just evolving. Software and hardware cost money, had long cycles for
	procurement, and needed to be placed in data centers that had to plan
	for space, power, and cooling. Everything had to be planned and executed
	correctly for the intended business outcome to become reality. When
	available, buying software was preferred to building software so the
	code base for commodity IT capability was someone else’s problem and the
	product teams could focus on features that provided a competitive
	advantage. Experimentation and quick (or any) failure typically meant
	failure of the initiative. If an initiative was canceled after it was
	started, there was a very real risk of having purchased assets that
	never created a revenue stream.
	
	We have now entered an age where digital products and services are a
	primary way the enterprise goes to market. The DPBoK and TOGAF Standards
	both support the age of digital products. Founders and product owners
	have a clear digital value proposition for their market. Their product
	teams own and focus on smaller microservices that are integrated into
	larger solutions. These offer the ability to rapidly respond to market
	feedback through reuse of their components in larger solutions. When a
	feature is released, it has an Application Programming Interface (API)
	so that automation and easy integration is possible. Relevant ideas and
	innovation come primarily from two sources:
	
	-   The product team must contain one or more people with a deep
	    knowledge of the systems and the software they work on; what is
	    possible with their current technology deployment, and where the
	    technical debt inhibits feature release
	
	-   The product team must collect insights directly from the end users
	
	These changes are combined with the dominance of the Internet, virtual
	machines, cloud-based resources for rent, open source software and
	tools, and innovation occurring at break-neck speed being commonplace in
	most industries and businesses. Product teams delivering digital
	capability focus on code output above all else. The code must translate
	to end-user value. Anything that takes the focus away from developing
	and delivering code and new features is considered a lost opportunity.
	Upfront planning and driving product development through end-user
	feedback are expected. Experimentation and quick failure are not only
	encouraged, but also expected.
	
	Along with the positives of developing better digital products more
	quickly, there are some consequences that need attention. Today’s
	digital products can become tomorrow’s technical debt. Digital products
	built without consideration of some big picture can result in unintended
	consequences; for example, privacy and security breaches, and high costs
	of integration and interoperability.
	
	In this document we provide Enterprise Architecture guidance to anyone
	shifting from an inside-out view to an “outside-in” view, from a project
	to product focus, or adopting more Agile and Lean approaches to software
	delivery. This document provides those practicing Enterprise
	Architecture with the insights needed to rethink their approach. They
	should ask themselves if each process and artifact they require is
	necessary to bring value to the digital enterprise, or if it is a legacy
	of past organizations and practices. It provides the Digital
	Practitioner with the guidance needed to leverage Enterprise
	Architecture to successfully complete the steps and tasks described in
	the DPBoK Standard while managing risks.
	
snippet togaf_adm_1_Introduction_1.2.1_Key_Points "1.2.1 Key Points"
	
	The following are the key points about the ADM:
	
	-   The ADM is iterative, over the whole process, between phases, and
	    within phases (see the TOGAF Standard — ADM Techniques)
	
	    For each iteration of the ADM, a fresh decision must be taken as to:
	
	    -   The breadth of coverage of the enterprise to be defined
	    -   The level of detail to be defined
	    -   The extent of the time period aimed at, including the number and
	        extent of any intermediate time periods
	    -   The architectural assets to be leveraged, including:
	        -   Assets created in previous iterations of the ADM cycle
	            within the enterprise
	        -   Assets available elsewhere in the industry (other
	            frameworks, systems models, vertical industry models, etc.)
	
	-   These decisions should be based on a practical assessment of
	    resource and competence availability, and the value that can
	    realistically be expected to accrue to the enterprise from the
	    chosen scope of the architecture work
	
	-   As a generic method, the ADM is intended to be used by enterprises
	    in a wide variety of different geographies and applied in different
	    vertical sectors/industry types
	
	    As such, it may be, but does not necessarily have to be, tailored to
	    specific needs. For example, it may be used in conjunction with the
	    set of deliverables of another framework, where these have been
	    deemed to be more appropriate for a specific organization. (For
	    example, many US Federal agencies have developed individual
	    frameworks that define the deliverables specific to their particular
	    departmental needs.)
	
	These issues are considered in detail in 1.3 Adapting the ADM .
	
snippet togaf_architecture-content_1_Introduction_1.2.1_Overview "1.2.1 Overview"
	
	The TOGAF ADM provides lifecycle management to create and manage
	architectures within an enterprise. At each phase within the ADM, a
	discussion of inputs, outputs, and steps describes a number of
	architecture work products.
	
	An essential task when establishing the enterprise-specific Enterprise
	Architecture Capability in the Preliminary Phase of the ADM is to
	define:
	
	-   A categorization framework to be used to structure the Architecture
	    Descriptions, the work products used to express an architecture, and
	    the collection of models that describe the architecture; this is
	    referred to as the Content Framework
	-   An understanding of the types of entities within the enterprise and
	    the relationships between them that need to be captured, stored, and
	    analyzed in order to create the Architecture Description; this
	    Enterprise Metamodel depicts this information in the form of a
	    formal model
	-   The specific artifacts to be developed (see 4. Architecture
	    Deliverables)
	
	The Content Framework chosen is likely to be influenced by:
	
	-   The Architecture Framework selected as the basis for the Enterprise
	    Architecture Capability
	-   The chosen software tool used to support the Enterprise Architecture
	    Capability
	
snippet togaf_adm_1_Introduction_1.2.2_Basic_Structure "1.2.2 Basic Structure"
	
	The basic structure of the ADM is shown in Figure 1-1 .
	
	Throughout the ADM cycle, there needs to be frequent validation of
	results against the original expectations, both those for the whole ADM
	cycle, and those for the particular phase of the process.
	
	[]
	
	Figure 1-1: Architecture Development Cycle
	
	The phases of the ADM cycle are further divided into steps, which are
	defined in the detailed description of each phase.
	
	The Requirements Management phase is a continuous phase which ensures
	that any changes to requirements are handled through appropriate
	governance processes and reflected in all other phases. An enterprise
	may choose to record all new requirements, including those which are in
	scope of the current Statement of Architecture Work through a single
	Requirements Repository.
	
	The phases of the cycle are described in detail in the following
	chapters.
	
	Note that output is generated throughout the process, and that the
	output from an early phase may be modified in a later phase. In the ADM,
	the status of outputs at each stage is defined. The lifecycle of outputs
	must be managed through a version numbering policy, adapted by the
	architect to meet the requirements of the organization and to work with
	the architecture tools and repositories employed by the organization.
	
	In the ADM, documents which are under development and have not undergone
	any formal review and approval process are designated "draft". Documents
	which have been reviewed and approved are designated "approved" in
	accordance with the organization's governance practices. Approved does
	not necessarily mean finalized. Documents may evolve during subsequent
	phases but may only be changed through an appropriate change control and
	governance process. This is used in particular within the ADM to
	illustrate the evolution of Baseline and Target Architecture
	Definitions.
	
snippet togaf_architecture-content_1_Introduction_1.2.2_Content_Framework "1.2.2 Content Framework"
	
	The Content Framework defines a categorization framework to be used to
	structure the Architecture Description, the work product used to express
	an architecture, and the collection of models that describe the
	architecture.
	
	The Architecture Repository, which is explained in 4.2.5 Architecture
	Repository , is structured to store the artifacts and work products
	identified in the Content Framework. The Content Framework is one
	element of the Enterprise-Specific Architecture Framework.
	
snippet togaf_architecture-content_1_Introduction_1.2.3_Enterprise_Metamodel "1.2.3 Enterprise Metamodel"
	
	The TOGAF Standard encourages development of an Enterprise Metamodel,
	which defines the types of entity to appear in the models that describe
	the enterprise, together with the relationships between these entities.
	
	An Enterprise Metamodel provides value in several ways:
	
	-   It gives architects a starter set of the types of thing to
	    investigate and to cover in their models
	
	-   It provides a form of completeness-check for any architecture
	    modeling language, or architecture metamodel, that is proposed for
	    use in an enterprise
	
	    Namely, how completely does it handle the types of entity in the
	    Enterprise Metamodel, and manage required facts about them such as
	    their attributes and relationships?
	
	-   It can help ensure:
	    -   Consistency
	    -   Completeness
	    -   Traceability
	
	Note that the TOGAF Standard does not aim to constrain an enterprise's:
	
	-   Selection of artifacts
	
	-   Modeling notation
	
	    The TOGAF Standard may use the ArchiMate® modeling language,
	    Business Process Modeling Notation^(TM) (BPMN^(TM)), Unified
	    Modeling Language^(TM) (UML®), entity relationship diagramming,
	    flowcharting, or any other notation that can express some TOGAF
	    ideas.
	
	The types of entity within an enterprise and the relationships between
	them are specific to the individual enterprise. Developing a
	high-quality metamodel is an important aspect of establishing the
	Enterprise Architecture Capability.
	
snippet togaf_architecture-content_1_Introduction_1.2.4_The_TOGAF_Content_Framework "1.2.4 The TOGAF Content Framework"
	
	The TOGAF Content Framework defines a categorization framework to be
	used to structure the Architecture Description, the work products used
	to express an architecture, and the collection of models that describe
	the architecture.
	
	There are many alternative Content Frameworks (e.g., the TOGAF Content
	Framework, the Zachman Framework, DoDAF, NAF, etc.). Selecting a Content
	Framework is essential even though the choice of Content Framework is
	less important. The final Content Framework is usually adapted to fit
	specific organization needs.
	
	The TOGAF Content Framework is intended to:
	
	-   Provide a detailed model of architectural work products
	-   Drive consistency in the outputs created when following the ADM
	-   Provide a comprehensive checklist of architecture output that could
	    be created
	-   Reduce the risk of gaps within the final architecture deliverable
	    set
	-   Help an enterprise mandate standard architecture concepts, terms,
	    and deliverables
	
	At the highest level, the TOGAF Content Framework (see Figure 1-3) is
	structured in line with the phases of the ADM.
	
	[]
	
	Figure 1-3: Content Framework by ADM Phase
	
	-   Architecture Principles, Vision, Motivation, and Requirements models
	    are intended to capture the surrounding context of formal
	    architecture models, including general Architecture Principles,
	    strategic context that forms input for architecture modeling, and
	    requirements generated from the architecture
	
	    The relevant aspects of the business context that have given rise to
	    the Request for Architecture work are typically investigated,
	    refined, validated, and recorded in the Preliminary and Architecture
	    Vision phases.
	
	-   Business Architecture captures architecture models of the business,
	    looking specifically at factors that motivate the enterprise, its
	    structure, and its capabilities
	
	-   Information Systems Architecture models capture architecture models
	    of IT systems, looking at applications and data in line with the
	    TOGAF ADM phases
	
	-   Technology Architecture models capture technology assets that are
	    used to implement and realize information system solutions
	
	-   Architecture Realization/Transformation models capture change
	    roadmaps showing transition between architecture states and binding
	    statements that are used to steer and govern an implementation of
	    the architecture
	
	-   Architecture Change Management models capture value realization
	    management events, internal and external, that impact the Enterprise
	    Architecture and the generation of requirements for action
	
	[]
	
	Figure 1-4: Content Framework Overview
	
snippet togaf_business-architecture_value-streams_1.2_Approaches_to_Value_Analysis "1.2 Approaches to Value Analysis"
	
	Several approaches have been used in the past to model, measure, and
	analyze business value. Three well-known (but often misunderstood)
	techniques include value chains, value networks, and lean value streams.
	Each approach has a distinct purpose and area of focus that positions it
	differently from the others – as well as from the value stream that is
	used within the context of Business Architecture, and which is the
	subject of this Guide. The value chain takes an economic value
	perspective; value networks are primarily concerned with identifying the
	participants involved in creating and delivering value; while lean value
	streams are all about optimizing business processes (primarily within a
	manufacturing context). Only the Business Architecture value stream is
	designed to create an end-to-end perspective of value from the
	customer’s (or stakeholder’s) perspective, and in doing so is more
	closely aligned to realizing an organization’s business model rather
	than the financial, organizational, or operational models that the other
	examples cater to.
	
	Values chains, value networks, and lean value streams are explained and
	compared in detail in Appendix A.
	
snippet togaf_adm_1_Introduction_1.2_Architecture_Development_Cycle "1.2 Architecture Development Cycle"
	
snippet togaf_architecture-project-management_1.2_Background "1.2 Background"
	
	According to the TOGAF Standard, Enterprise Architecture is the
	structure of enterprise components, their inter-relationships, and the
	principles and guidelines governing their design and evolution over
	time. Enterprise is the highest level of description of an organization
	and typically covers all missions and functions; it can span multiple
	organizations.
	
	The TOGAF Standard includes the Architecture Development Method (ADM)
	that aims to be an industry standard method for developing and
	implementing an Enterprise Architecture. This method focuses on delivery
	of architecture products.
	
	In the TOGAF Standard, architecture products are delivered through
	execution of tasks described in the ADM. These tasks are grouped into
	inter-related phases, each of which includes a number of steps.
	Completing an ADM cycle can be a complex task. Therefore, architecture
	products delivery is often executed as a project.
	
	Architecture Project is not a term defined in the TOGAF Standard;
	however, it is used often for a project undertaken to define and
	describe an Enterprise Architecture to be implemented. Therefore, in
	this Guide, the term “Architecture Project” encompasses all activities
	undertaken within Phases A to F, and Requirements Management.
	
	[Figure 1 NEW.png]
	
	Figure 1: Architecture Project Relationship to the TOGAF ADM (Adapted
	from the TOGAF Standard)
	
	A key result of Phases A to F is an Architecture Definition Document,
	which describes the Enterprise Architecture to be implemented in Phase G
	and maintained in Phase H. Therefore, at the end of Phase F the
	Enterprise Architecture to be implemented is defined and described – and
	the Architecture Project, by our definition, is completed.
	
	The Preliminary Phase, Phase G, and Phase H are out of scope for the
	Architecture Project. The Preliminary Phase is concerned with ensuring
	an Enterprise Architecture capability of the organization. The goal of
	Phase G is to govern implementation of the Enterprise Architecture.
	Typically, it is run as a separate endeavor (a project or a set of
	projects). The goal of Phase H is to maintain the Enterprise
	Architecture implemented – it is related to operational business (or
	process) rather than project management.
	
snippet togaf_architecture-maturity-models_1.2_Background "1.2 Background"
	
	Organizations that can manage change effectively are generally more
	successful than those that cannot. Many organizations know they need to
	improve their processes in order to successfully manage change but don’t
	know how. Such organizations typically either spend very little on
	process improvement, because they are unsure how to proceed; or spend a
	lot, on a number of parallel and unfocused efforts, to little or no
	avail.
	
	Capability Maturity Models (CMMs) address this problem by providing an
	effective and proven method for an organization to gradually gain
	control over and improve its change processes. Such models provide the
	following benefits:
	
	-   They describe the practices that any organization must perform in
	    order to improve its processes
	-   They provide a yardstick against which to periodically measure
	    improvement
	-   They constitute a proven framework within which to manage the
	    improvement efforts
	-   They organize the various practices into levels, each level
	    representing an increased ability to control and manage the
	    development environment
	
	An evaluation of the organization’s practices against the model – called
	an “assessment” – determines the level at which the organization
	currently stands. It indicates the organization’s ability to execute in
	the area concerned, and the practices on which the organization needs to
	focus in order to see the greatest improvement and the highest return on
	investment. The benefits of CMMs to effectively direct effort are well
	documented.
	
snippet togaf_master-data-management_1.2_Data_Management_Capabilities "1.2 Data Management Capabilities"
	
	For most organizations of a given size, major components of the value
	chain have been digitalized and are supported by human processes and
	information systems. Figure 1 describes the set of capabilities
	supported by the information system departments for business operations
	divided into six areas and organized like a value chain, splitting
	support activities and primary activities.
	
	[]
	
	Figure 1: Generic Description of the Capabilities of the Organization[1]
	
	Internal Capabilities
	
	-   Core Business Primary Activities Supporting the Value Chain
	
	This includes the capabilities that support the organization’s value
	chain from Inbound Logistics (e.g., accept orders) to Outbound Logistics
	(e.g., deliver orders), passing through Operations (e.g., process
	orders). This is where the income is captured.
	
	-   Engagement
	
	This includes digital interactions with the value chain, such as the
	capabilities that are used to interact with the customer, business
	users, and partners. It covers the digital, service center,
	distribution, and partner channels Business to Business to Consumer
	(B2B2C). This category also includes Customer Relationship Management
	(CRM), marketing, servicing, and sales as key enablers for this layer.
	
	-   Data Management Support
	
	Becoming a data-driven company means a shift to a data-driven
	architecture approach. It leads to a specific focus on data management
	capabilities that support the business and that are the responsibility
	of the CDO. Metadata Management, Business Intelligence (BI) & Analytics,
	Master Data Management, and Integration & Interoperability are common
	data management capabilities shared across the businesses of the
	organization. They are the foundations that support the goal of
	Boundaryless Information Flow™, and are quoted in the DMBoK, Version 2
	(see Referenced Documents).
	
	-   Business Support
	
	This includes other supporting capabilities that are required to support
	the value chain, such as Human Resources, Finance & Procurement,
	capabilities required to implement IT service capability management in
	alignment with the IT4IT™ Reference Architecture, Workplace, etc.
	
	External Capabilities
	
	-   External Data Provider Capabilities
	
	These are data providers that can be open data or data acquired
	externally that is leveraged by the organization.
	
	-   External Partner Capabilities
	
	These are services with a digital front provided by other organizations
	in the market that must be combined with the digital services of the
	organization to deliver a more complete experience to customers.
	
	As shown in Figure 2, the Data Management Support capabilities are
	mapped with the DMBoK, Version 2 Data Management Framework knowledge
	area of the DAMA wheel.
	
	[]
	
	Figure 2: Mapping of the Data Management Support Capabilities to the
	DMBoK DAMA Wheel
	
	The Data Management Support capabilities are focused on this subset of
	the key DAMA activities. The other activities are covered as follows:
	
	-   Data Security is part of business support in the broader “Security”
	    capability
	-   Document & Content Management is considered as a specific area in
	    the “Workplace” capability
	-   Data Storage & Operations are part of the “Infrastructure”
	    capability – they are technical transversal capabilities supporting
	    the four core Data Management Support capabilities
	-   Data Modeling & Design is a subset of the “IT Management” capability
	
	Business Intelligence (BI) & Analytics
	
	A capability where all data available to the enterprise is accessible to
	any authorized user respecting security and privacy constraints. This
	enables evidence or fact-based decision-making. It covers the
	capabilities of data warehouses, data marts, BI, data lake, and data
	sciences. Indeed, these systems propose to make available all the data
	related to the organization in a single place, including the current and
	historical values. This capability aims to serve data to stakeholders
	needing reports for monitoring or regulatory purposes, queries, or more
	advanced processing like statistics or data science. Refer to The Open
	Group Guide: Information Architecture: Business Intelligence & Analytics
	and Metadata Management Reference Models (see Referenced Documents) for
	guidance on this capability.
	
	Master Data Management (MDM)
	
	This capability refers to processes, organizations, people, and systems
	put together to measure and continuously improve the value of master and
	reference data for an organization. It includes business value, data
	quality, availability, and security. It delivers accurate customer data
	to use-cases that need it. It ensures business value, data quality
	(uniformity, accuracy, semantic consistency, etc.), availability,
	security, stewardship, and customer data ownership. MDM delivers control
	over master data values and identifiers that enable consistent use in
	line with the business-defined data quality requirements.
	
	Master Data
	
	This is data that constitutes the most definitive, trusted values
	available to the enterprise and is to be both shared and used for the
	purposes of transactions, analytics, and/or records. For semi-structured
	data, it could be the approved enterprise policy on data lifecycle; for
	structured data, it could be the name and address of a client.
	Technically, master data is a consistent set of identifiers and extended
	attributes that is the reference source of information about shared
	entities used by the enterprise. Master data values are trusted and can
	be used with confidence by authorized users across the enterprise.
	
	In the past, the following concepts preceded MDM and may well provide a
	basis for new MDM:
	
	System of Record: where one information system provided the master data,
	whether the data was in a database or not (e.g., flat file).
	
	Golden Record: where one data structure, within a specific data store,
	provided the master data.
	
	Reference Data
	
	These are standard data values defined external to the enterprise to
	facilitate interoperability, especially data integration. Reference data
	is often defined by standards organizations, such as country codes
	defined in ISO 3166-1 (see Referenced Documents) or NATO Stock Numbers
	(for supply chain). Specifically, this is any kind of data that is used
	solely to categorize other data found in a database, or solely for
	relating data in a database to information beyond the boundaries of the
	enterprise. This defines the set of values usually used to characterize,
	classify, or categorize other data.
	
	Integration & Interoperability
	
	This capability describes processes related to the movement and
	consolidation of data within and between data stores, applications, and
	organizations. It considers data semantics (business understanding),
	representation (e.g., encoding, content display, etc.), and data
	structure (e.g., relational, domain-specific, XML, API). It consolidates
	data into consistent forms, either physical or virtual.
	
	Interoperability is the ability to “legally” share information and
	services. It focuses on achieving the ability to share information.
	(Source: The TOGAF Standard)
	
	Tools that support this capability include, for example: Enterprise
	Service Bus (ESB), Extract, Transform, Load (ETL), and Application
	Program Interface (API).
	
	For more information, refer to the Architecture Forum Data Integration
	Work Group.
	
	Metadata Management
	
	Metadata is data about data whether it is unstructured (book, bitmap
	images, etc.), semi-structured (e-doc), or structured (data tables,
	knowledge base, etc.). Metadata describes the data itself (e.g.,
	creator, language, business description, security classification,
	namespaces), the concepts the data represents (e.g., business entities,
	semantics, business processes, technology aspects), and the connections
	(relationships) between the data and other concepts.
	
	Data quality can be considered as a specific type of metadata requiring
	specific monitoring through BI & Analytics and managing data through its
	lifecycle. It aims to set standards, build quality into the processes
	that create, transform, and store data, and measure data against
	standards.
	
snippet togaf_adm-practitioners_INDEX_1.2_How_to_Use_this_Guide_with_the_TOGAF_Framework "1.2 How to Use this Guide with the TOGAF Framework"
	
	The TOGAF framework provides essential universal scaffolding useful in a
	range of organizations, industries, and architectural styles. This Guide
	is designed to fill in what is not explicitly addressed by the TOGAF
	framework and provides an approach to interpret the standard. This does
	not suggest that the TOGAF framework is flawed. The TOGAF framework is
	designed to require interpretation or customization. It has to provide
	universal scaffolding. What is common and universal between all of the
	different examples provided in the definition of Enterprise? Essential
	scaffolding expressed as concepts.
	
	One way to look at the TOGAF framework is that it is written for the
	expert theoretician – the person who thinks about the structure and
	practice of EA. The TOGAF^(®) Leader’s Guide to Establishing and
	Evolving an EA Capability (see Referenced Documents) is for the person
	tasked with establishing or evolving an EA Capability.
	
	This Guide is written directly for the person who does the work:
	develops, maintains, and uses an EA. The person who is not worried about
	the theory, and who is not worried about how to structure or maintain an
	EA Capability. The person who develops, uses, and maintains a good EA.
	
	While this Guide assumes no detailed knowledge of the TOGAF framework,
	it explores the core concepts of the TOGAF Standard. It places these
	concepts together in the context of using them to develop, maintain, and
	use an EA. This includes guidance on iteration, an EA Repository,
	executing the ADM for the purpose of supporting Strategy, Portfolio,
	Project, and Solution Delivery, and performing effective governance of
	the development and use of the EA practice.
	
	This Guide follows the approach of exploring the conceptual structures
	in the context of making use of them. This Guide assumes that you have
	established an EA Capability and have customized the TOGAF framework for
	your Enterprise.[2]
	
	This Guide is part of the TOGAF Library.[3] Other documents in the TOGAF
	Library include the TOGAF^(®) Leader’s Guide to Establishing and
	Evolving an EA Capability. The TOGAF Library provides a complete
	interpretation of the TOGAF Standard to establish an EA Capability,
	develop the EA Capability team, and deliver a useful architecture to
	guide change and govern the Enterprise change initiatives.
	
snippet togaf_adm-practitioners_1_Introduction_1.2_How_to_Use_this_Guide_with_the_TOGAF_Framework "1.2 How to Use this Guide with the TOGAF Framework"
	
	The TOGAF framework provides essential universal scaffolding useful in a
	range of organizations, industries, and architectural styles. This Guide
	is designed to fill in what is not explicitly addressed by the TOGAF
	framework and provides an approach to interpret the standard. This does
	not suggest that the TOGAF framework is flawed. The TOGAF framework is
	designed to require interpretation or customization. It has to provide
	universal scaffolding. What is common and universal between all of the
	different examples provided in the definition of Enterprise? Essential
	scaffolding expressed as concepts.
	
	One way to look at the TOGAF framework is that it is written for the
	expert theoretician – the person who thinks about the structure and
	practice of EA. The TOGAF^(®) Leader’s Guide to Establishing and
	Evolving an EA Capability (see Referenced Documents) is for the person
	tasked with establishing or evolving an EA Capability.
	
	This Guide is written directly for the person who does the work:
	develops, maintains, and uses an EA. The person who is not worried about
	the theory, and who is not worried about how to structure or maintain an
	EA Capability. The person who develops, uses, and maintains a good EA.
	
	While this Guide assumes no detailed knowledge of the TOGAF framework,
	it explores the core concepts of the TOGAF Standard. It places these
	concepts together in the context of using them to develop, maintain, and
	use an EA. This includes guidance on iteration, an EA Repository,
	executing the ADM for the purpose of supporting Strategy, Portfolio,
	Project, and Solution Delivery, and performing effective governance of
	the development and use of the EA practice.
	
	This Guide follows the approach of exploring the conceptual structures
	in the context of making use of them. This Guide assumes that you have
	established an EA Capability and have customized the TOGAF framework for
	your Enterprise.[2]
	
	This Guide is part of the TOGAF Library.[3] Other documents in the TOGAF
	Library include the TOGAF^(®) Leader’s Guide to Establishing and
	Evolving an EA Capability. The TOGAF Library provides a complete
	interpretation of the TOGAF Standard to establish an EA Capability,
	develop the EA Capability team, and deliver a useful architecture to
	guide change and govern the Enterprise change initiatives.
	
snippet togaf_digital-technology-adoption_1.2_Objective "1.2 Objective"
	
	The objectives of this document are to:
	
	-   Describe how enterprises adopt digital technologies
	-   Identify, organize, and explain the factors that can be used to
	    assess the readiness of enterprises for digital technologies
	-   Elaborate how the factors are instrumental to better prepare for
	    Digital Transformation
	-   Facilitate enterprises in crafting an effective roadmap to adoption
	
	The document is intended for business and technology leaders. It is
	developed in a way that the tools and techniques provided can be readily
	put to use. It promotes the use of a well-thought-out and a proactive
	approach to digital technology adoption, rather than a haphazard way of
	stitching together various technologies simply because they are
	available. Enterprise Architects are expected to play a key role in
	leading and guiding the process of assessment, administering the
	questionnaire, validating the responses by way of their expertise, and
	enabling alignment to the process of architecture development and
	implementation as digital technologies become part of the organizational
	fabric and narrative. In short, in using this document, Enterprise
	Architects are expected to select the right digital technology, for the
	right reasons, at the right time, and craft the right environment in the
	organization to derive full benefits and long-term value.
	
snippet togaf_business-architecture_business-models_1.2_Objectives "1.2 Objectives"
	
	The objectives of this Guide are to:
	
	-   Familiarize architects with the concept and purpose of business
	    models
	-   Illustrate the concept and purpose by looking in some detail at one
	    particular technique for creating and leveraging business model
	    artifacts: the Business Model Canvas™
	-   Explain how business models relate to and influence the TOGAF ADM
	
	The goal is for practitioners to be able to use business models to
	frame, scope, and define the boundaries of their architecture work,
	particularly in relation to creating current and target states for the
	Phase B: Business Architecture part of the ADM process. A key practice
	we apply to help achieve this goal is to follow Business Architecture
	principles from the best practices in the Business Architecture
	Guild^(®), such as the Guild White Paper that provided the basis for
	this Guide.[2]
	
snippet togaf_reference-models_government-reference-model_1.2_Overview "1.2 Overview"
	
	The GRM is used to categorize and segment operational departments in
	order to operate an effective architecture function. This model
	facilitates the ability to determine the impact of change to the estate
	and to map dependencies between the architecture layers.
	
	This document provides direction that organizations need in order to
	develop Business Architecture assets that will help public sector
	decision-makers to resolve business issues, manage business and
	technology change, and plan for future change.
	
	The GRM can be used out-of-the-box, extended, or customized to represent
	the organization based on its unique characteristics and the specific
	requirements at hand.
	
snippet togaf_architecture-skills-framework_1.2_Overview "1.2 Overview"
	
	Skills frameworks provide a view of the competency levels required for
	specific roles. They define:
	
	-   The roles within a work area
	-   The skills required by each role
	-   The depth of knowledge required to fulfill the role successfully
	
	They are relatively common for defining the skills required for a
	consultancy and/or project management assignment, to deliver a specific
	project or work package. They are also widely used by recruitment and
	search agencies to match candidates and roles.
	
	Their value derives from their ability to provide a means of rapidly
	identifying skill matches and gaps. Successfully applied, they can
	ensure that candidates are fit for the jobs assigned to them.
	
	Their value in the context of Enterprise Architecture arises from the
	immaturity of the Enterprise Architecture discipline, and the problems
	that arise from this.
	
snippet togaf_reference-models_digital-business-reference-model_1.2_Scope_of_the_DBRM "1.2 Scope of the DBRM"
	
	This document describes the TOGAF^(®) DBRM, including the core
	components and the graphical representation of the DBRM.
	
	The DBRM embodies the key element that makes up the personality of the
	enterprise, that when addressed collectively, consistently, and in an
	integrated manner will enable enterprises of all sizes, types, and
	industries to respond to the changing business environment.
	
	The DBRM will guide the adoption of relevant aspects of The Open Group
	TOGAF Standard and other related standards, particularly The Open Group
	DPBoK™ and O-AA™ Standards (see Referenced Documents). It will enable
	organizations to develop an appropriate digital architecture blueprint
	in response to their changing strategies, business model, Operating
	Model, and operations. The journey towards digitalization will thus be
	based on the aggregated level of digital maturity of the respective
	components of the DBRM.
	
	It also builds on the work that was done in The Open Group White Paper:
	World Class EA: Business Reference Model (see Referenced Documents) and
	applies a collection of appropriate concepts defined within other
	related TOGAF^(®) Series Guides to develop a coherent reference model to
	guide the development of various aspects of the digital architecture
	artifacts.
	
	This document presents a generic DBRM that may be adapted and used by
	organizations to enable sustainable enterprise design, organizational
	agility, and interoperability in response to the evolving customer needs
	and the business ecosystem.
	
	The DBRM consists of ten core elements categorized into four domains as
	follows:
	
	-   Digital Domain:
	
	—  Customer Focus
	
	—  Digital Enterprise
	
	-   Strategy Domain:
	
	—  Strategic Context
	
	—  Business Motivation
	
	—  Business Services and Products
	
	-   Structural Domain:
	
	—  Ecosystem and Business Model
	
	—  Operating Model
	
	—  Business Capability Model
	
	-   Operational Domain:
	
	—  Business Operating Environment
	
	—  Digital Enablement
	
snippet togaf_introduction_1_Introduction_1.2_Structure_of_this_Document "1.2 Structure of this Document"
	
	This document introduces the TOGAF Standard and the TOGAF Library, and
	includes definitions and referenced materials relevant to the individual
	elements of the Standard.
	
	-   This chapter provides a general introduction to Enterprise
	    Architecture and the TOGAF Standard
	-   2. The TOGAF Documentation Set describes:
	    -   The scope and structure of the materials that make up the TOGAF
	        Standard
	    -   The scope and structure of the TOGAF Library
	-   3. Core Concepts describes the core concepts that are used across
	    the components of the TOGAF Standard
	-   4. Definitions contains definitions of terms that are used
	    consistently across the components of the TOGAF Standard
	-   A. Referenced Documents contains a list of documents referenced in
	    the TOGAF Standard
	-   B. Glossary of Supplementary Definitions contains a supplementary
	    list of definitions of terms that may be encountered when reading
	    the materials that make up the TOGAF Standard
	-   C. Abbreviations contains a list of commonly used abbreviations
	
snippet togaf_index_1.2_Structure_of_this_Document "1.2 Structure of this Document"
	
	This document introduces the TOGAF Standard and the TOGAF Library, and
	includes definitions and referenced materials relevant to the individual
	elements of the Standard.
	
	-   This chapter provides a general introduction to Enterprise
	    Architecture and the TOGAF Standard
	-   2. The TOGAF Documentation Set describes:
	    -   The scope and structure of the materials that make up the TOGAF
	        Standard
	    -   The scope and structure of the TOGAF Library
	-   3. Core Concepts describes the core concepts that are used across
	    the components of the TOGAF Standard
	-   4. Definitions contains definitions of terms that are used
	    consistently across the components of the TOGAF Standard
	-   A. Referenced Documents contains a list of documents referenced in
	    the TOGAF Standard
	-   B. Glossary of Supplementary Definitions contains a supplementary
	    list of definitions of terms that may be encountered when reading
	    the materials that make up the TOGAF Standard
	-   C. Abbreviations contains a list of commonly used abbreviations
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_1.2_The_Digital_Practitioner_and_the_Enterprise_Architect "1.2. The Digital Practitioner and the Enterprise Architect"
	
	The DPBoK Standard describes the skills needed to operate a successful
	digital enterprise, including digital product delivery.
	
	New business models resulting from a combination of digital technology,
	combined with digital ways of working, are transforming economies and
	societies worldwide. Digital investments are critical for modern
	organizations. Participating in their delivery (i.e., working to create
	and manage them for value) can provide prosperity for individuals,
	communities, and public and private enterprises. Learning programs
	worldwide are under pressure to produce an increasing number of
	qualified professionals to meet voracious workforce demands. Skill
	requirements have undergone a seismic shift over the past 20 years;
	Digital Practitioners require a wide variety of skills and competencies,
	including cloud architecture and operations, continuous delivery and
	deployment, collaboration, Agile and Lean methods, product management,
	and more.
	
	The DPBoK Standard is intended to support the development of the Digital
	Practitioner. It seeks to provide guidance for both new entrants into
	the digital workforce as well as experienced practitioners seeking to
	update their understanding on how all the various themes and components
	of digital and IT management fit together in the new world. The
	Enterprise Architect can use the DPBoK Standard to understand culture,
	leadership practices, and product development. They can use that
	information to create a rapport with product teams and discover where
	they can provide an architectural service to product teams. They can
	also use this standard to better understand what artifacts are created
	and how to harvest them in the context of the emergence model from the
	DPBoK Standard.
	
	Every Digital Practitioner wants and expects their company to be a wild
	success and to grow exponentially from a founder state to an enduring
	enterprise as described in the DPBoK Standard emergence model. But what
	happens when, as it grows, they are faced with the complexity of
	coordination across multiple teams and potentially across multiple lines
	of business? What happens when every contract with every business or
	customer needs a legal review, when they face compliance and regulatory
	concerns, or when they are the target of litigation?
	
	The Digital Practitioner can use this document and the pointers to
	specific methods defined in the TOGAF Standard as a sort of “peek-ahead”
	tool. This document provides guidance that helps the Digital
	Practitioner complete the Enterprise Architecture tasks that are defined
	in the DPBoK Standard. It indicates/suggests current best practices so
	that decisions with long-term consequences are well-informed and set for
	success as they mature to a large enterprise with several hundred or
	thousand employees. As the company and teams grow and make decisions
	that impact their product, they can leverage the hard-earned lessons
	from the generations of practitioners that came before them. By
	reviewing where the TOGAF Standard has tools, templates, and processes
	to complete the tasks discussed in the DPBoK Standard, they will have
	tools necessary to grow successfully through well-informed decisions.
	
snippet togaf_togaf-leaders-guide_INDEX_1.2_The_State_of_Enterprise_Architecture "1.2 The State of Enterprise Architecture"
	
	Research and survey by the Association of Enterprise Architects (AEA),
	the Corporate Executive Board (CEB), and Forrester during 2014 and 2015
	present a wide spectrum of positive and negative impressions on the
	impact EA Capability has had on any enterprise.[2] The responses
	showcase different practice models for EA Capability as well as a range
	of maturity levels. There are instances of high-functioning EA teams
	that were formed several years ago, to continuous initiation and
	shutting-down of EA teams. The key message that EA Capability is a
	function of context and purpose is often lost, in practice and
	discussions.
	
	To respond to the demands and needs of their stakeholders, organizations
	need to develop new and better ways of managing continuous change at
	ever-increasing pace to deliver significant value in a transparent
	manner. Organizations need an EA Capability as an integral capability to
	support continuous and transformational change processes. However, over
	the years, many organizations have attempted to set up EA practices only
	to see them fail after a few years. In spite of these previous failures,
	enterprises repeatedly try to establish a successful EA Capability.
	
	This Guide discusses a pragmatic and tested approach to establish,
	manage, and evolve an EA Capability based upon established successful
	practices. This Guide also presents an approach to successfully apply
	the practice of EA to amplify the value realized or re-establish the
	practice. This Guide presents various factors that influence the success
	of EA Capability.
	
snippet togaf_togaf-leaders-guide_1_Introduction_1.2_The_State_of_Enterprise_Architecture "1.2 The State of Enterprise Architecture"
	
	Research and survey by the Association of Enterprise Architects (AEA),
	the Corporate Executive Board (CEB), and Forrester during 2014 and 2015
	present a wide spectrum of positive and negative impressions on the
	impact EA Capability has had on any enterprise.[2] The responses
	showcase different practice models for EA Capability as well as a range
	of maturity levels. There are instances of high-functioning EA teams
	that were formed several years ago, to continuous initiation and
	shutting-down of EA teams. The key message that EA Capability is a
	function of context and purpose is often lost, in practice and
	discussions.
	
	To respond to the demands and needs of their stakeholders, organizations
	need to develop new and better ways of managing continuous change at
	ever-increasing pace to deliver significant value in a transparent
	manner. Organizations need an EA Capability as an integral capability to
	support continuous and transformational change processes. However, over
	the years, many organizations have attempted to set up EA practices only
	to see them fail after a few years. In spite of these previous failures,
	enterprises repeatedly try to establish a successful EA Capability.
	
	This Guide discusses a pragmatic and tested approach to establish,
	manage, and evolve an EA Capability based upon established successful
	practices. This Guide also presents an approach to successfully apply
	the practice of EA to amplify the value realized or re-establish the
	practice. This Guide presents various factors that influence the success
	of EA Capability.
	
snippet togaf_architecture-content_1_Introduction_1.2_TOGAF_Content_Framework_and_Enterprise_Metamodel "1.2 TOGAF Content Framework and Enterprise Metamodel"
	
snippet togaf_integrating-risk-and-security_INDEX_1.2_What_about_Risk_Management "1.2 What about Risk Management?"
	
	Risk management in the TOGAF Standard primarily focuses on architecture
	project risk. This is only one type of risk. The scope of ERM, as
	presented in this Guide as part of the Enterprise Security Architecture,
	is much broader. It includes business, system, information, project,
	privacy, compliance, and organizational change risk, among other
	categories, too.
	
	This Guide describes the broader concepts of ERM and how to integrate
	them into the TOGAF Standard. In particular, this work focuses on all
	aspects of operational risk – the risks that a business faces in
	day-to-day operations that are based on operational capabilities that
	are produced as the result of Enterprise Architecture work. It is
	intended that by paying more attention to operational risk downstream of
	the delivery of Enterprise Architecture work products, the utility,
	quality, and effectiveness of those work products will be improved and
	enhanced.
	
	The Enterprise Security Architecture contains a balanced view on risk:
	negative consequences are kept to an acceptable level and positive
	opportunities are exploited to their maximum. The business-driven
	approach is key for the Security Architecture: business drivers offer
	the context for risk assessments; they define whether compliance with
	any control framework is necessary, and they justify the need for
	security measures.
	
	This Guide is explicitly looking at risk within the context of best
	practice ERM. It is written for practitioners who expect to use best
	practices and are prepared to read and consider carefully the language
	within a profession. Like all professions, the risk management
	profession evolves and improves. Central to best practice ERM is a very
	precise definition of the term “risk”. Over the last 15 years risk
	management has moved the professional definition from thought
	leadership, to leading practice, to well established best practice. Risk
	definition is embedded within mainstream risk management international
	standards, such as ISO 31000:2009 [6], best practice guides, and derived
	industry-specific guides, such as the Global Association of Risk
	Professionals Financial Risk Manager certification.
	
	There is a difference between the commonly accepted definition of “risk”
	and the risk management professional definition of the term. Within the
	risk management profession “risk” is defined to be the “effect that
	uncertainty has on the achievement of business objectives”. For many
	information security practitioners, this definition can feel
	uncomfortable: In their discipline, “risk” is usually regarded as
	threat-bound and therefore a negative attribute.
	
	Since this Guide is aimed at the core concepts of the TOGAF Standard as
	an Enterprise Architecture framework, the definition of risk used is as
	defined in ISO 31000:2009. This definition allows for the usage of the
	term in subsequent practitioner guidance that focuses only on the
	narrower usage of risk as a negative; for example, in the information
	security risk management area, where the uncertainties are generally
	always negative outcomes.
	
snippet togaf_integrating-risk-and-security_1_Introduction_1.2_What_about_Risk_Management "1.2 What about Risk Management?"
	
	Risk management in the TOGAF Standard primarily focuses on architecture
	project risk. This is only one type of risk. The scope of ERM, as
	presented in this Guide as part of the Enterprise Security Architecture,
	is much broader. It includes business, system, information, project,
	privacy, compliance, and organizational change risk, among other
	categories, too.
	
	This Guide describes the broader concepts of ERM and how to integrate
	them into the TOGAF Standard. In particular, this work focuses on all
	aspects of operational risk – the risks that a business faces in
	day-to-day operations that are based on operational capabilities that
	are produced as the result of Enterprise Architecture work. It is
	intended that by paying more attention to operational risk downstream of
	the delivery of Enterprise Architecture work products, the utility,
	quality, and effectiveness of those work products will be improved and
	enhanced.
	
	The Enterprise Security Architecture contains a balanced view on risk:
	negative consequences are kept to an acceptable level and positive
	opportunities are exploited to their maximum. The business-driven
	approach is key for the Security Architecture: business drivers offer
	the context for risk assessments; they define whether compliance with
	any control framework is necessary, and they justify the need for
	security measures.
	
	This Guide is explicitly looking at risk within the context of best
	practice ERM. It is written for practitioners who expect to use best
	practices and are prepared to read and consider carefully the language
	within a profession. Like all professions, the risk management
	profession evolves and improves. Central to best practice ERM is a very
	precise definition of the term “risk”. Over the last 15 years risk
	management has moved the professional definition from thought
	leadership, to leading practice, to well established best practice. Risk
	definition is embedded within mainstream risk management international
	standards, such as ISO 31000:2009 [6], best practice guides, and derived
	industry-specific guides, such as the Global Association of Risk
	Professionals Financial Risk Manager certification.
	
	There is a difference between the commonly accepted definition of “risk”
	and the risk management professional definition of the term. Within the
	risk management profession “risk” is defined to be the “effect that
	uncertainty has on the achievement of business objectives”. For many
	information security practitioners, this definition can feel
	uncomfortable: In their discipline, “risk” is usually regarded as
	threat-bound and therefore a negative attribute.
	
	Since this Guide is aimed at the core concepts of the TOGAF Standard as
	an Enterprise Architecture framework, the definition of risk used is as
	defined in ISO 31000:2009. This definition allows for the usage of the
	term in subsequent practitioner guidance that focuses only on the
	narrower usage of risk as a negative; for example, in the information
	security risk management area, where the uncertainties are generally
	always negative outcomes.
	
snippet togaf_guides_index_1.2_What_is_the_Role_of_Enterprise_Architecture "1.2. What is the Role of Enterprise Architecture?"
	
	Enterprise Architecture provides a framework for change, linked to both
	strategic direction and business value. It provides a sufficient view of
	the organization to manage complexity, support continuous change, and
	manage the risk of unanticipated consequences.
	
	Enterprise Architecture is:
	
	-   A description of the elements within an organization, what they are
	    meant to achieve, how they are arranged, how they perform in
	    practice, and how they respond to change
	
	-   A framework (structure, approach, and process) for managing change
	    to those elements and their arrangement; to continuously adapt to
	    organizational change in line with strategy (goals and objectives)
	    and circumstances (specific requirements)
	
	-   The practice of acting to manage and evolve the Enterprise
	    Architecture at all levels of control, change, and pace
	
	The TOGAF Standard is a framework for identifying and implementing
	change, and provides:
	
	-   A definition and description of a standard cycle of change, used to
	    plan, develop, implement, govern, change, and sustain an
	    architecture for an enterprise; see the TOGAF Architecture
	    Development Method (ADM)
	
	-   A definition and description of the building blocks in an enterprise
	    used to deliver business services and information systems (see the
	    TOGAF Content Framework)
	
	-   A set of guidelines, techniques, and advice to create and maintain
	    an effective Enterprise Architecture and deliver change through new
	    Solution Architectures at all levels of scale, pace, and detail
	
snippet togaf_introduction_1_Introduction_1.3.1_Conditions_of_Use "1.3.1 Conditions of Use"
	
	The TOGAF Standard is freely available for viewing online without a
	license. Alternatively, it can be downloaded and stored under license,
	as explained on the TOGAF information website.
	
	In either case, the TOGAF Standard can be used freely by any
	organization wishing to do so to develop an architecture for use within
	that organization. No part of it may be reproduced, stored in a
	retrieval system, or transmitted, in any form or by any means,
	electronic, mechanical, photocopying, recording, or otherwise, for any
	other purpose including, but not by way of limitation, any use for
	commercial gain, without the prior permission of the copyright owners.
	
snippet togaf_index_1.3.1_Conditions_of_Use "1.3.1 Conditions of Use"
	
	The TOGAF Standard is freely available for viewing online without a
	license. Alternatively, it can be downloaded and stored under license,
	as explained on the TOGAF information website.
	
	In either case, the TOGAF Standard can be used freely by any
	organization wishing to do so to develop an architecture for use within
	that organization. No part of it may be reproduced, stored in a
	retrieval system, or transmitted, in any form or by any means,
	electronic, mechanical, photocopying, recording, or otherwise, for any
	other purpose including, but not by way of limitation, any use for
	commercial gain, without the prior permission of the copyright owners.
	
snippet togaf_introduction_1_Introduction_1.3.2_How_Much_Does_the_TOGAF_Standard_Cost "1.3.2 How Much Does the TOGAF Standard Cost?"
	
	The Open Group is committed to delivering greater business efficiency by
	bringing together buyers and suppliers of information systems to lower
	the barriers of integrating new technology across the enterprise. Its
	goal is to realize the vision of Boundaryless Information Flow.
	
	The TOGAF Standard is a key part of its strategy for achieving this
	goal, and The Open Group wants it to be taken up and used in practical
	architecture projects, and the experience from its use fed back to help
	improve it.
	
	The Open Group therefore publishes it on its public web server, and
	allows and encourages its reproduction and use free-of-charge by any
	organization wishing to use it internally to develop an Enterprise
	Architecture. (There are restrictions on its commercial use, however;
	see 1.3.1 Conditions of Use .)
	
snippet togaf_index_1.3.2_How_Much_Does_the_TOGAF_Standard_Cost "1.3.2 How Much Does the TOGAF Standard Cost?"
	
	The Open Group is committed to delivering greater business efficiency by
	bringing together buyers and suppliers of information systems to lower
	the barriers of integrating new technology across the enterprise. Its
	goal is to realize the vision of Boundaryless Information Flow.
	
	The TOGAF Standard is a key part of its strategy for achieving this
	goal, and The Open Group wants it to be taken up and used in practical
	architecture projects, and the experience from its use fed back to help
	improve it.
	
	The Open Group therefore publishes it on its public web server, and
	allows and encourages its reproduction and use free-of-charge by any
	organization wishing to use it internally to develop an Enterprise
	Architecture. (There are restrictions on its commercial use, however;
	see 1.3.1 Conditions of Use .)
	
snippet togaf_introduction_1_Introduction_1.3.3_Downloads "1.3.3 Downloads"
	
	Downloads of the TOGAF Standard, including printable PDF files, are
	available under license from the TOGAF information website (refer to
	www.opengroup.org/togaf/downloads). The license is free to any
	organization wishing to use the standard entirely for internal purposes
	(for example, to develop an Enterprise Architecture for use within that
	organization).
	
snippet togaf_index_1.3.3_Downloads "1.3.3 Downloads"
	
	Downloads of the TOGAF Standard, including printable PDF files, are
	available under license from the TOGAF information website (refer to
	www.opengroup.org/togaf/downloads). The license is free to any
	organization wishing to use the standard entirely for internal purposes
	(for example, to develop an Enterprise Architecture for use within that
	organization).
	
	1.4 Why Join The Open Group?
	
	Organizations wishing to reduce the time, cost, and risk of implementing
	multi-vendor solutions that integrate within and between enterprises
	need The Open Group as their key partner.
	
	The Open Group brings together the buyers and suppliers of information
	systems worldwide, and enables them to work together, both to ensure
	that IT solutions meet the needs of customers, and to make it easier to
	integrate IT across the enterprise. The TOGAF Standard is a key enabler
	in this task.
	
	Yes, the TOGAF Standard itself is freely available. But how much will
	you spend on developing or updating your Enterprise Architecture? And
	how much will you spend on procurements based on that architecture? The
	price of membership of The Open Group is insignificant in comparison
	with these amounts.
	
	In addition to the general benefits of membership, as a member of The
	Open Group you will be eligible to participate in The Open Group
	Architecture Forum, which is the development program within which the
	TOGAF Standard is evolved, and in which TOGAF users come together to
	exchange information and feedback.
	
	Members of the Architecture Forum gain:
	
	-   Immediate access to the fruits of the current TOGAF work program
	    (not publicly available until publication of the next edition of the
	    TOGAF Standard) — in effect, the latest information on the standard
	-   Exchange of experience with other customer and vendor organizations
	    involved in Enterprise Architecture in general, and networking with
	    architects using the TOGAF Standard in significant architecture
	    development projects around the world
	-   Peer review of specific architecture case study material
	
	------------------------------------------------------------------------
	
snippet togaf_adm_1_Introduction_1.3_Adapting_the_ADM "1.3 Adapting the ADM"
	
	The ADM is a generic method for architecture development, which is
	designed to deal with most system and organizational requirements.
	However, it will often be necessary to modify or extend the ADM to suit
	specific needs. One of the tasks before applying the ADM is to review
	its components for applicability, and then tailor them as appropriate to
	the circumstances of the individual enterprise. This activity may well
	produce an "enterprise-specific" ADM.
	
	One reason for wanting to adapt the ADM, which it is important to
	stress, is that the order of the phases in the ADM is to some extent
	dependent on the maturity of the architecture discipline within the
	enterprise. For example, if the business case for doing architecture at
	all is not well recognized, then creating an Architecture Vision is
	almost always essential; and a detailed Business Architecture often
	needs to come next, in order to underpin the Architecture Vision, detail
	the business case for remaining architecture work, and secure the active
	participation of key stakeholders in that work. In other cases a
	slightly different order may be preferred; for example, a detailed
	inventory of the baseline environment may be done before undertaking the
	Business Architecture.
	
	The order of phases may also be defined by the Architecture Principles
	and business principles of an enterprise. For example, the business
	principles may dictate that the enterprise be prepared to adjust its
	business processes to meet the needs of a packaged solution, so that it
	can be implemented quickly to enable a fast response to market changes.
	In such a case, the Business Architecture (or at least the completion of
	it) may well follow completion of the Information Systems Architecture
	or the Technology Architecture.
	
	Another reason for wanting to adapt the ADM is if the TOGAF framework is
	to be integrated with another enterprise framework (as explained in the
	TOGAF Standard — Introduction and Core Concepts). For example, an
	enterprise may wish to use the TOGAF framework and its generic ADM in
	conjunction with the Zachman® Framework, or another Enterprise
	Architecture framework that has a defined set of deliverables specific
	to a particular vertical sector: Government, Defense, e-Business,
	Telecommunications, etc. The ADM has been specifically designed with
	this potential integration in mind.
	
	Other possible reasons for wanting to adapt the ADM include:
	
	-   The ADM is one of the many corporate processes that make up the
	    corporate governance model
	
	    It is complementary to, and supportive of, other standard program
	    management processes, such as those for authorization, risk
	    management, business planning and budgeting, development planning,
	    systems development, and procurement.
	
	-   The ADM is being mandated for use by a prime or lead contractor in
	    an outsourcing situation, and needs to be tailored to achieve a
	    suitable compromise between the contractor's existing practices and
	    the contracting enterprise's requirements
	
	-   The enterprise is a small-to-medium enterprise, and wishes to use a
	    "cut-down" method more attuned to the reduced level of resources and
	    system complexity typical of such an environment
	
	-   The enterprise is very large and complex, comprising many separate
	    but interlinked "enterprises" within an overall collaborative
	    business framework, and the architecture method needs to be adapted
	    to recognize this
	
	    Different approaches to planning and integration may be used in such
	    cases, including the following (possibly in combination):
	
	    -   Top-down planning and development — designing the whole
	        interconnected meta-enterprise as a single entity (an exercise
	        that typically stretches the limits of practicality)
	    -   Development of a "generic" or "reference" architecture, typical
	        of the enterprises within the organization, but not representing
	        any specific enterprise, which individual enterprises are then
	        expected to adapt in order to produce an architecture "instance"
	        suited to the particular enterprise concerned
	    -   Replication — developing a specific architecture for one
	        enterprise, implementing it as a proof-of-concept, and then
	        taking that as a "reference architecture" to be cloned in other
	        enterprises
	
	-   In a vendor or production environment, a generic architecture for a
	    family of related products is often referred to as a "Product Line
	    Architecture", and the analogous process to that outlined above is
	    termed "(Architecture-based) Product Line Engineering". The ADM is
	    targeted primarily at architects in IT user enterprises, but a
	    vendor organization whose products are IT-based might well wish to
	    adapt it as a generic method for a Product Line Architecture
	    development.
	
	The descriptions of the phases of the ADM contain lists of deliverables
	and artifacts that could be applicable to any enterprise. It is
	important to adapt deliverables and artifacts to reflect the specific
	needs of the enterprise for the required architecture.
	
	Adapting the Content Framework and Enterprise Metamodel, which defines
	the organization-specific deliverables and artifacts, together with
	detailed descriptions of the specific deliverables and artifacts
	referenced in the ADM phase descriptions may be found in the TOGAF
	Standard — Architecture Content.
	
	The ADM can also be adapted to support an Agile Enterprise Architecture
	delivery style as well as to enable enterprise agility. Detailed
	guidance on how to adapt the ADM may be found in the following
	documents:
	
	-   TOGAF® Series Guide: Enabling Enterprise Agility
	-   TOGAF® Series Guide: Applying the ADM Using Agile Sprints
	
	Additional guidance on adapting the ADM process may be found in the
	TOGAF Standard — Applying the ADM, and also in the TOGAF® Series Guide:
	A Practitioners' Approach to Developing Enterprise Architecture
	Following the TOGAF ADM.
	
snippet togaf_master-data-management_1.3_C-MDM_Capability "1.3 C-MDM Capability"
	
	This document is about the Master Data and Reference Data management
	capability, focused on Customer Data.
	
	It describes the C-MDM capability that many organizations must implement
	to maximize the value and efficiency of their activities. It is a data
	foundation for most organizations.
	
	Indeed, without the correct data investments, data platforms will be
	ineffective. Being in a “customer-centric” mindset implies taking great
	care of customer data as an enterprise-wide discipline.
	
	Robust data management organizations supported by a C-MDM capability
	should ensure that customer master data and its quality are under
	control by measuring and improving over time the intrinsic value of
	customer data (quality, accessibility, security) and the actual value of
	customer data by data usages (net promoter score, growth, efficiency,
	ROI, etc.).
	
	Among organizations, data transformations are overwhelmed with new
	concepts and data platforms to master (e.g., data lake, cloud computing,
	data hubs, data science, Big Data, etc.). The “buzz” words obscure the
	essence of data transformation that is the data itself. This document
	suggests that fixing the basics of data management is mandatory before
	trying to set up advanced use-cases with data science.
	
	Customer
	
	Customer is a role that can be played by a party interacting with the
	organization. Each organization defines this role differently depending
	on their business and strategy. In this document, the term “client” is
	considered a synonym for “customer”.
	
	In this document, the customers can include:
	
	-   A person: a unique human being who exists or existed in the past;
	    they can have various relations to the organization:
	
	—  Buyer and/or beneficiary of a service or product
	
	—  Prospect (e.g., a person who has asked the organization for a
	quotation)
	
	-   An organization: a business concern or group of individuals that are
	    systematically bound by a common purpose, with or without a legal
	    status; organizations may be legal entities
	
	Various types of organization include and are not limited to:
	
	—  Government (e.g., federal, state, regional, local, and various
	agencies)
	
	—  Commercial (limited companies, publicly quoted multinationals,
	subsidiaries, etc.)
	
	—  Organizational units (e.g., branches, departments, teams, etc.)
	
	—  Informal groups (e.g., clubs, societies, charities, interest groups,
	etc.)
	
	—  Other similar entities
	
snippet togaf_architecture-content_1_Introduction_1.3_Content_Framework_and_the_TOGAF_ADM "1.3 Content Framework and the TOGAF ADM"
	
	The TOGAF ADM describes the process of moving from a baseline state of
	the enterprise to a target state of the enterprise. The ADM will address
	a business need through a process of visioning, architecture definition,
	transformation planning, and Architecture Governance. At each stage in
	this process, the ADM requires information as inputs and will create
	outputs as a result of executing a number of steps. The Content
	Framework provides an underlying structure for the ADM that defines
	inputs and outputs in more detail and puts each deliverable into the
	context of the holistic architecture view of the enterprise.
	
	The Content Framework should therefore be used as a companion to the
	ADM. The ADM describes what needs to be done to create an architecture
	and the Content Framework describes what the architecture should look
	like once it is done.
	
snippet togaf_digital-technology-adoption_1.3_Current_Literature "1.3 Current Literature"
	
	In the main body of digital technology literature, there is a dearth of
	work on how enterprises adopt these technologies, what factors influence
	adoption, and what mechanisms are put in place to effectuate successful
	adoption. In general, the focus is more on the efficacy of emerging
	technologies. Current literature reveals trends in digital technology
	and how these trends change based on various dynamics. Also, there have
	been studies and research conducted on adoption factors about technology
	in silos; for instance, organization-related factors that lead to the
	adoption of particular technology like Artificial Intelligence (AI) or
	the Internet of Things (IoT), etc.
	
	Studies have been conducted to understand the challenges that act as a
	constraint to the adoption of a particular technology. Additionally,
	researchers have identified various drivers of technology diffusion and
	the macroeconomic consequence of such diffusion. This includes analyzing
	the adoption lag across technologies. There has been extensive work done
	on the role of communication channels and other agents for technology
	adoption. Previous work has developed certain models having applications
	in various fields. The Technology Adoption Model (TAM) [1] and the
	Unified Theory of Acceptance and Use of Technology (UTAUT) [2] are most
	widely applied. These models underscore the factors from the end-user
	side of technology for its adoption. There are certain approaches and
	models defined in the literature. A few of the models researched are:
	Innovation Diffusion Theory (IDT) and Diffusion of Innovations (DoI)
	[3], and Functionality, Availability, Complexity, Cost (FACC) [4]. All
	of these cover “technology” as a broad generic construct, rather than
	specifically addressing digital technologies. Furthermore, few other
	adoption models are proprietary in nature.
	
	One thread of current work shows the evolving role of Enterprise
	Architects on Agile innovation teams. The need for Enterprise Architects
	to have a holistic approach in the digital landscape is brought forth.
	This requires a detailed multi-stakeholder approach and contextual
	awareness for the delivery of solution architecture. In the digital
	role, Enterprise Architects act as a facilitator for decision-making
	towards the development of new digital products and services. Enterprise
	Architects are seen to be enabling the digitization of customer journeys
	and the processes and operations. These digital interventions contribute
	to the optimization of value chains. In this new role to create digital
	enterprises, Enterprise Architects create all-inclusive transparency and
	line-of-sight across all the layers of architecture. This facilitates
	finding the right digital technology and its solution design.
	
	Current studies confirm that a comprehensive IT strategy is paramount
	for digital technology. This has resulted in the successful
	implementation of digital technologies and has helped shorten the
	duration for the Proof of Concept (PoC). Tools like the Innovation
	Interaction Framework have been developed that describe the interplay
	between the operational process to adopt emerging technology, personal
	leadership of the CIO, and the organization’s business needs. These
	frameworks help to evaluate and benchmark organizational readiness.
	Multiple studies have also put forth the reasons for the failures of
	digital technology-enabled transformation initiatives, and most tend to
	suggest strategies to address these reasons. It is clear that these
	reasons are repeated so often they are now even being termed
	“anti-patterns”, highlighting their wide degree of existence.
	
	Studies have shown that visible trust gaps for emerging technologies
	impede its adoption. There is a case of ‘black-box’ when it comes to the
	understanding of the digital technology. It is pivotal for
	decision-makers and leadership of organizations to understand what the
	adoption of digital technology could mean and the best approach for
	adoption.
	
	Analysis of the current literature points to the need to have a
	technology-neutral Digital Technology Readiness Assessment (DTRA). There
	has been a great deal of technology-based research carried out in silos.
	In the digital technology era, the need for having a technology-neutral
	toolkit for readiness assessment is imperative with the ever-evolving
	digital technology stack. Thus, the requirement for a readiness
	assessment as a toolkit will benefit in assessing digital technology
	across the identified critical factors. The process of selecting the
	adoption approach, performing a readiness assessment, analyzing the
	implication of missing factors, and integrating the factors with the
	TOGAF ADM [5] is critical for a comprehensive strategy for the adoption
	of digital technology. This need is consistent with the developing role
	of Enterprise Architects to bring in the right stakeholders early in the
	digital technology adoption process.
	
	There are techniques available to evaluate the organizational readiness
	to undergo a business transformation. It is vital to understand the
	value proposition of the business transformation readiness assessment
	vis à vis the DTRA:
	
	-   Firstly, the DTRA captures the factors specifically targeted to
	    digital technologies as a common construct, but not limited to any
	    specific technology per se
	-   Secondly, the DTRA highlights the implications of missing factors to
	    help stakeholders strategize their approach considering the primary
	    consequences of the missing factors
	-   Lastly, the DTRA is encompassed with steps that need to be followed
	    for successful digital technology adoption by an enterprise
	
	This document addresses the gap as evidenced in the current literature
	by covering an area that is becoming increasingly more relevant in light
	of the transformation initiatives being undertaken across the board.
	Digital technologies are here to stay, grow, and evolve. Therefore, it
	is only natural for this document to make adoption as seamless as
	possible by enabling preparation adequately, and keeping in view that by
	failing to prepare, enterprises prepare to fail.
	
snippet togaf_architecture-maturity-models_1.3_History_and_Application "1.3 History and Application"
	
	The Software Engineering Institute (SEI),[1] operated by Carnegie Mellon
	University, developed the original CMM (Capability Maturity Model) for
	Software (SWCMM) in the early 1990s, which is still widely used today.
	This CMM provided a framework to develop maturity models in a wide range
	of disciplines.
	
	The increasing interest in applying these techniques to other fields has
	resulted in a series of template tools which assess:
	
	-   The state of the architecture processes
	-   Completeness of the architecture description
	-   The organization’s buy-in to both
	
	The main issues addressed by these models include:
	
	-   Process implementation and audit
	-   Quality measurements
	-   People competencies
	-   Investment management
	
	They involve use of a multiplicity of models, and focus in particular on
	measuring business benefits and return on investment.
	
	A closely related topic is the Architecture Skills Framework (see the
	TOGAF Series Guide: Architecture Skills Framework), which can be used to
	plan the target skills and capabilities required by an organization to
	successfully develop and utilize Enterprise Architecture, and to
	determine the training and development needs of individuals.
	
snippet togaf_introduction_1_Introduction_1.3_Information_on_Using_the_TOGAF_Standard "1.3 Information on Using the TOGAF Standard"
	
snippet togaf_index_1.3_Information_on_Using_the_TOGAF_Standard "1.3 Information on Using the TOGAF Standard"
	
snippet togaf_adm-practitioners_INDEX_1.3_Referenced_Techniques "1.3 Referenced Techniques"
	
	References to key literature and their techniques within this Guide are
	intended only to be representative. This Guide does not suggest that the
	referenced tools, techniques, and literature are definitive. Other
	tools, techniques, and literature can readily be substituted.
	
snippet togaf_adm-practitioners_1_Introduction_1.3_Referenced_Techniques "1.3 Referenced Techniques"
	
	References to key literature and their techniques within this Guide are
	intended only to be representative. This Guide does not suggest that the
	referenced tools, techniques, and literature are definitive. Other
	tools, techniques, and literature can readily be substituted.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_1.3_Strategy "1.3. Strategy"
	
	In looking at the DPBoK Standard, the subject of building a digital
	enterprise, and how Enterprise Architecture and the TOGAF Standard
	specifically support the digital enterprise, it became obvious that a
	shift in focus would be useful. This resulted in spelling out two
	specific Enterprise Architecture strategies that are used throughout
	this document:
	
	-   The peek-ahead strategy
	
	    The first strategy is to move from a “do it if, and after, the
	    architect says OK” to a “do it with the architecture enablement”
	    approach. Enablement comes in the form of using just enough guidance
	    on risks, standards, and best practices to deliver the minimum
	    viable digital product per context, while looking ahead to ensure
	    that a smooth transition to the next context is enabled. This is not
	    meant to stop progress, but rather to ensure that decisions are
	    taken today with appropriate understanding of potential problems and
	    difficulties. This strategy can be done by someone undertaking the
	    role of an architect. Even in the Individual/Founder Context of the
	    DPBoK Standard, the individual/founder provides the business
	    analysis delivered by an Enterprise Architect, even if it is done in
	    an ad hoc fashion.
	
	-   Enterprise Architecture as services strategy
	
	    The second strategy further supports enablement by moving from
	    producing architectures, and gating progress, to developing just
	    enough architecture on demand to support the operations tempo of the
	    digital effort. This is accomplished through an Enterprise
	    Architecture services delivery model provided by those undertaking
	    the Enterprise Architect role. This is done in an
	    enabling-consulting fashion. This is especially significant:
	
	    -   At the Team of Teams level where the architect can serve to
	        improve cross-team communication and reduce the cognitive load
	        of teams working together
	
	    -   In a larger organization that offers consultative services to
	        founders/teams as part of an innovation/incubation strategy
	
	These two strategies along with the guidance contained in this document
	will improve the probability of success for the digital enterprise in
	any organization.
	
snippet togaf_reference-models_digital-business-reference-model_1.3_Structure_of_this_Document "1.3 Structure of this Document"
	
	This document is organized as follows:
	
	-   Chapter 2 – Key Concepts
	-   Chapter 3 – DBRM Elements – High-Level Breakdown
	-   Chapter 4 – DBRM Elements in Detail
	-   Chapter 5 – Digital Architecture Development
	-   Chapter 6 – TOGAF Standard Adoption
	
snippet togaf_guides_index_1.3_The_Demand_for_Agility_is_Not_New "1.3. The Demand for Agility is Not New!"
	
	The US Clinger-Cohen Act of 1996 was a major driver for the adoption of
	Enterprise Architecture because it required investment in new IT systems
	(in the US public sector) to demonstrate fit with existing systems.
	Almost immediately, it was recognized that it is not practical to
	develop a full Enterprise Architecture from the “top down”; it is
	necessary to structure work into smaller units to respond to the
	specific needs of the enterprise in a timely manner, and to have some
	form of “integration architecture” to ensure the pieces fit together and
	are aligned with the strategic direction of the enterprise.
	
	The TOGAF framework has embraced the call to respond to the needs of the
	enterprise in a timely manner, through the concepts of “partitions” and
	“levels”. Partitions define how the work is broken down into multiple
	architecture initiatives. Levels define how the overall architecture can
	be developed at different levels of granularity and detail.
	
	Each architecture initiative needs to be scoped to address the specific
	needs of the enterprise to be addressed.
	
	The major scoping dimensions are:
	
	-   Breadth (subject matter): what is the full extent of the enterprise,
	    and to what extent will this architecting effort deal with it?
	
	-   Depth (level of detail): to what level of detail should the
	    architecting effort go?
	
	-   Time period: what is the time period that needs to be articulated
	    for the Architecture Vision?
	
	-   Architecture domains: a complete Enterprise Architecture description
	    should contain all four architecture domains (Business, Data,
	    Application, Technology), but the realities of resource and time
	    constraints often mean there is not enough time, funding, resources,
	    or need to address them all
	
	The TOGAF Standard allows users to use the TOGAF ADM in an iterative
	way. The ADM can be used to deliver value incrementally following
	different iteration approaches. The concept of iteration is deep-rooted
	within the TOGAF ADM; as described in the TOGAF Standard – Applying the
	ADM (Applying Iteration to the ADM) [1].
	
	Iterative development, such as Agile practices like sprints with shorter
	iterations, is a useful technique to obtain early stakeholder feedback
	and results. It enables the Enterprise Architects to deliver value
	earlier and iteratively, whether in a planned or emergent manner.
	
	Dividing work into sprints does not only mean dividing work into small
	pieces, but also learning by doing in short cycles and adapting the work
	accordingly.
	
snippet togaf_business-architecture_value-streams_1.3_Value_Streams_in_Business_Architecture "1.3 Value Streams in Business Architecture"
	
	The approach to value analysis that is used in Business Architecture is
	derived from James Martin’s The Great Transition.^([1]) The value stream
	(a simple example of which is shown in Figure 1) is depicted as an
	end-to-end collection of value-adding activities that create an overall
	result for a customer, stakeholder, or end-user. In modeling terms,
	those value-adding activities are represented by value stream stages,
	each of which creates and adds incremental stakeholder value from one
	stage to the next.
	
	[]
	
	Figure 1: Example of a Value Stream
	
	Value streams may be externally triggered, such as a retail customer
	acquiring some merchandise, as shown in the example above. Value streams
	may also be internally triggered, such as a manager obtaining a new
	hire. Value streams may be defined at an enterprise level or at a
	business unit level. Either way, the complete set of value streams (as
	depicted in a value stream diagram or map) is simply the visual
	representation of all the value streams that denote an organization’s
	primary set of business activities. It is an aggregation of the multiple
	ways in which the enterprise creates value for its various stakeholders.
	
	A key principle of value streams is that value is always defined from
	the perspective of the stakeholder – the customer, end-user, or
	recipient of the product, service, or deliverable produced by the work.
	The value obtained is in the eye of the beholder; it depends more on the
	stakeholder’s perception of the worth of the product, service, outcome,
	or deliverable than on its intrinsic value; i.e., the cost to produce.
	
snippet togaf_reference-models_government-reference-model_1.3_What_is_the_Government_Reference_Model "1.3 What is the Government Reference Model?"
	
	The GRM is an exhaustive and mutually-exclusive reference model for the
	public sector. This model provides a categorization of terminology to
	describe the Business Architecture which can be leveraged as a framework
	across all governments.
	
	The GRM assumes the application estate for the government is split
	across the following departments:
	
	-   International Affairs and Trade
	-   Defense and Security
	-   General Government and Local Services
	-   Young People and Education
	-   Health and Community Wellbeing
	-   Judiciary, Justice, and Home Affairs
	-   Financial
	-   Growth, Housing, and Environment
	-   Policy, Performance, Population, and Innovation
	-   Shared Services
	-   Transport and Operations
	
	Table 1 shows the names and description of various types of sectors that
	are in the GRM.
	
	Table 1: Sectors and Descriptions
	
	  Sector                                                                          Definition
	  ------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  International Affairs and Trade                                                 Activities undertaken by the government to facilitate financial support and trade with international economies and related to the conduct and implementation of policies, aid programs, treaties, and diplomatic relations.
	  Defense and Security                                                            Corresponds to the research, maintenance, equipment, procurement, and development of forces, weapons, and related entities. This also comprises remuneration and benefits paid to all active and non-active civilians and personnel.
	  General Government (Customer Service, Customer Operations) and Local Services   The provision of general customer services and operations including registrations, licensing, applications, workforce planning, social services, management of labor rights, and local services.
	  Young People and Education                                                      Educational programs that correspond to early years, primary school, secondary school, higher education, and specialist schooling; children’s social services, safeguarding, and associated children and adolescent services; and skill or training activities undertaken by the government to promote education.
	  Health and Community Wellbeing                                                  Encompasses medical and nursing governance, strategy and care services provided to individuals and families, research, and the provision of hospital and community services to safeguard mental and physical health.
	  Judiciary, Justice, and Home Affairs                                            Covers the total cost of judiciary, prosecution, expenses connected with funding protection, law enforcement services, and the cost of criminal justice including incarceration, supervision, parole, and rehabilitation of prisoners.
	  Financial                                                                       Maintains controls over public spending, revenue, financial reporting, auditing, and providing the direction for future investment decisions and financial planning.
	  Growth, Housing, and Environment                                                Activities that ensure natural and urban environment responsibility, provision of core infrastructure, and protection of citizens’ standards of living and safety through the licensing and enforcement of regulation.
	  Policy, Performance, Population, and Innovation                                 Involves the development of policy across the government, the provision of statistics for population and performance against benchmarks to ensure continuous improvement, and incorporates strategic and long-term planning to identify future risks, opportunities, and solutions.
	  Shared Services                                                                 Co-ordinates and manages people, communications, finance, and transformation services on behalf of the public in order to facilitate the transfer of information and oversight of people, processes, and technology to support procurement and align to corporate strategy.
	  Transport and Operations                                                        Activities that enable general operations and guarantee the safe transfer and availability of people and goods over land, air, sea, and space.
	
	The reference model provides a taxonomy for each service provisioned by
	the government and a common language that simplifies complex information
	components, enables consistency of cross-government services and common
	capabilities, and delivers a consistent view of commonly required
	operational services.
	
	The intended audience of this GRM includes decision-makers and designers
	of change in the public sector.
	
	Subsequent sections will go into each of the three levels: Level 1
	(Sectors) and the corresponding Level 2 (Functions) and Level 3
	(Services). Recommended nomenclature and descriptions for these
	components are used to provide further detail and context of the
	organizational units that may be present in a public sector
	organization. Drivers for change will also be explored for each of the
	12 sectors.
	
	Figure 1 provides a view of the structure of each element of the GRM.
	
	[]
	
	Figure 1: Structure of the Government Reference Model
	
	Explanations of key terms:
	
	-   Sectors are identified as the business areas of the government
	-   Functions define what the government does at an aggregated level
	-   Services further define what the government does at a component
	    level
	-   Drivers for Change are meta-factors – drivers are identified as
	    shapers of the future; e.g., demographic changes or technological
	    innovation
	
snippet togaf_integrating-risk-and-security_INDEX_1.3_Where_is_the_Controls_Checklist "1.3 Where is the Controls Checklist?"
	
	First of all, integrating security is not a matter of selecting controls
	from a checklist. We advocate a holistic approach towards security, so
	that a trustworthy, robust, reliable, secure, and risk-managed
	architecture is delivered. To do this, the Enterprise Security
	Architecture makes sure that tight cooperation is obtained between the
	ADM and the processes for ISM and ERM. Therefore, most of the security
	concepts in this Guide refer to things needed to set up security
	properly.
	
	However, designing the operational security is part of the architecture
	as well. In the architecture context, security controls are bundled into
	security services. A security service can be seen as an Architecture
	Building Block (ABB). In the TOGAF Standard, ABBs capture architecture
	requirements that both direct and guide the development of Solution
	Building Blocks (SBBs). This can apply to all four of the TOGAF domain
	architectures: Business, Data, Application, and Technology. In the same
	way, security services capture security requirements and guide the
	development of sub-services and components.
	
	Examples of security services are:
	
	-   Identity & Access Management
	-   Continuity Management
	-   Security Intelligence
	-   Digital Forensics
	-   Audit
	-   Network Monitoring
	-   Compliance Management
	-   Training & Awareness Programs, etc.
	
	The security services are positioned in the logical layer of the
	SABSA^(®) architecture framework, which is developed in Phase C
	(Information Systems Architectures) of the TOGAF ADM. The Security
	Services Catalog provides the actual description of those security
	services.
	
	To support security practitioners in actually designing and using the
	security services, a Security Services Catalog is needed. For Security
	Architects, the Security Services Catalog is a register that supports
	filling in the logical layer of the SABSA architecture framework with
	security controls. Unlike existing control frameworks that contain
	requirements, the Security Services Catalog describes security building
	blocks that actually deliver protection. This architecture approach
	enables smooth integration of information security in the Enterprise
	Architecture.
	
	The standardized approach contributes to the professionalization of the
	security management organization and facilitates a more efficient,
	cost-effective way of working. One of the main advantages of the
	Security Services Catalog is that offers a common terminology and
	reference framework for the domain of security management allowing
	better cooperation between the parties concerned.
	
snippet togaf_integrating-risk-and-security_1_Introduction_1.3_Where_is_the_Controls_Checklist "1.3 Where is the Controls Checklist?"
	
	First of all, integrating security is not a matter of selecting controls
	from a checklist. We advocate a holistic approach towards security, so
	that a trustworthy, robust, reliable, secure, and risk-managed
	architecture is delivered. To do this, the Enterprise Security
	Architecture makes sure that tight cooperation is obtained between the
	ADM and the processes for ISM and ERM. Therefore, most of the security
	concepts in this Guide refer to things needed to set up security
	properly.
	
	However, designing the operational security is part of the architecture
	as well. In the architecture context, security controls are bundled into
	security services. A security service can be seen as an Architecture
	Building Block (ABB). In the TOGAF Standard, ABBs capture architecture
	requirements that both direct and guide the development of Solution
	Building Blocks (SBBs). This can apply to all four of the TOGAF domain
	architectures: Business, Data, Application, and Technology. In the same
	way, security services capture security requirements and guide the
	development of sub-services and components.
	
	Examples of security services are:
	
	-   Identity & Access Management
	-   Continuity Management
	-   Security Intelligence
	-   Digital Forensics
	-   Audit
	-   Network Monitoring
	-   Compliance Management
	-   Training & Awareness Programs, etc.
	
	The security services are positioned in the logical layer of the
	SABSA^(®) architecture framework, which is developed in Phase C
	(Information Systems Architectures) of the TOGAF ADM. The Security
	Services Catalog provides the actual description of those security
	services.
	
	To support security practitioners in actually designing and using the
	security services, a Security Services Catalog is needed. For Security
	Architects, the Security Services Catalog is a register that supports
	filling in the logical layer of the SABSA architecture framework with
	security controls. Unlike existing control frameworks that contain
	requirements, the Security Services Catalog describes security building
	blocks that actually deliver protection. This architecture approach
	enables smooth integration of information security in the Enterprise
	Architecture.
	
	The standardized approach contributes to the professionalization of the
	security management organization and facilitates a more efficient,
	cost-effective way of working. One of the main advantages of the
	Security Services Catalog is that offers a common terminology and
	reference framework for the domain of security management allowing
	better cooperation between the parties concerned.
	
snippet togaf_architecture-project-management_1.3_Why_do_we_need_a_Guide_on_Architecture_Project_Management "1.3 Why do we need a Guide on Architecture Project Management?"
	
	The TOGAF ADM details objectives, approach, inputs, steps, and outputs
	of the Enterprise Architecture development phases. However, it is not
	specific on how to manage an Architecture Project and leaves that to
	methods that focus on Project Management.[1]
	
	Project Management is the planning, delegating, monitoring, and control
	of all aspects of the project, and the motivation of those involved, to
	achieve the project objectives within the expected performance targets
	for time, cost, quality, scope, benefits, and risks.[2] Market-leading
	Project Management methods include PRINCE2 and PMBOK. They can be used
	to enhance an Architecture Project’s chances of success.
	
	Not all TOGAF practitioners are familiar with Project Management
	methods. Even for those who are, there is no guidance on how to use and
	align the TOGAF framework with these methods.
	
	The intent of this Guide is to provide guidelines for TOGAF architects
	on how to manage an Architecture Project. We suggest an approach that
	supplements the TOGAF ADM with selected Project Management techniques.
	The goal of this approach is to enhance an Architecture Project’s
	chances of success through better planning, monitoring, and
	communication.
	
snippet togaf_adm_1_Introduction_1.4_Architecture_Governance "1.4 Architecture Governance"
	
	The ADM, whether adapted by the organization or used as documented here,
	is a key process to be managed in the same manner as other architecture
	artifacts classified through the Enterprise Continuum and held in the
	Architecture Repository. The Architecture Board should be satisfied that
	the method is being applied correctly across all phases of an
	architecture development iteration. Compliance with the ADM is
	fundamental to the governance of the architecture, to ensure that all
	considerations are made and all required deliverables are produced.
	
	The management of all architectural artifacts, governance, and related
	processes should be supported by a controlled environment. Typically,
	this would be based on one or more repositories supporting versioned
	objects, process control, and status.
	
	The major information areas managed by a governance repository should
	contain the following types of information:
	
	-   Reference Data (collateral from the organization's own
	    repositories/Enterprise Continuum, including external data; e.g.,
	    COBIT®, the IT4IT Reference Architecture): used for guidance and
	    instruction during project implementation
	
	    This includes the details of information outlined above. The
	    reference data includes a description of the governance procedures
	    themselves.
	
	-   Process Status: all information regarding the state of any
	    governance processes will be managed
	
	    Examples of this include outstanding compliance requests,
	    dispensation requests, and compliance assessments investigations.
	
	-   Audit Information: this will record all completed governance process
	    actions and will be used to support:
	    -   Key decisions and responsible personnel for any architecture
	        project that has been sanctioned by the governance process
	    -   A reference for future architectural and supporting process
	        developments, guidance, and precedence
	
	The governance artifacts and process are themselves part of the contents
	of the Architecture Repository.
	
	Architecture Governance is addressed in detail in the TOGAF Standard —
	EA Capability and Governance.
	
snippet togaf_architecture-project-management_1.4_Document_Scope_and_Structure "1.4 Document Scope and Structure"
	
	This Guide is structured in the following sections, with a specific
	target audience in each case:
	
	-   Managing Architecture Projects (Chapter 2) describes a high-level
	    Project Management approach for developing an Enterprise
	    Architecture
	
	The target audience for this section is Enterprise Architects, Project
	Management professionals, and stakeholders of Architecture Projects who
	want to understand the key relationships between the TOGAF Standard and
	Project Management areas.
	
	-   Detailed Guidance (Chapter 3) describes a detailed Project
	    Management approach for developing an Enterprise Architecture
	
	It includes a step-by-step guide to Architecture Project initiating,
	planning, monitoring, and closing. The target audience of this section
	is Enterprise Architects who are familiar with the TOGAF Standard and
	who lead Architecture Projects.
	
	-   PRINCE2 to ADM Mapping (Chapter 4) and PMBOK to ADM Mapping (Chapter
	    5) present detailed mappings between the phases of the TOGAF ADM and
	    PRINCE2 and PMBOK processes, respectively
	
	These sections provide a foundation on which the guidance was built and
	are included for reference.
	
snippet togaf_reference-models_digital-business-reference-model_1.4_Future_Directions "1.4 Future Directions"
	
	It is expected that this document will need to be revised from time to
	time to remain current with both practice and technology developments.
	
	The various scenarios for the application of the DBRM may need to also
	be defined to enable the adoption of the DBRM as a consistent point of
	reference to enable Digital Transformation, digital architecture
	development, and assessment of digital maturity as possible examples of
	some of the scenarios for consideration. The specific elements related
	to information security, governance, and risk may also be addressed in
	line with all the respective domains and elements of the DBRM for the
	adoption model.
	
snippet togaf_guides_index_1.4_How_Does_that_Relate_to_Todays_Imperative_for_Increased_Agility "1.4. How Does that Relate to Today’s Imperative for Increased Agility?"
	
	There is an ongoing demand for the size and timescale of architecture
	segments and increments of capability to become ever shorter. This in
	turn is resulting in a tendency for enterprises to skip the development
	of Strategic and Segment Architectures, which in turn is resulting in
	some high-profile IT failures because of the unanticipated consequences
	of what appeared to be minor changes.
	
	The TOGAF Standard recognizes the need to recursively break down the
	Enterprise Architecture into more granular levels that can be
	architected following an Agile approach.
	
	Partitioning the architecture work is key for Agile delivery and implies
	the definition of segmentation based on the Strategic and Segment
	Architecture concepts as explained before.
	
	These smaller pieces, that cover a specific area of the organization,
	can then be more easily specified and implemented following an Agile
	approach, enabling a cross-cutting view across the TOGAF domains.
	
	The first step is to identify the segments scoped to address specific
	needs keeping the alignment with the Strategic Architecture. Once these
	segments have been identified they can be refined further into
	Capability Architectures that can be specified and implemented following
	an Agile approach.
	
	These Capability Architectures, delivered in increments, can be used to
	iteratively construct the final outcome (product, service, or solution).
	These iterations can be conducted in parallel depending on the level of
	interdependency between them. And, as stated in the TOGAF Standard –
	Applying the ADM (Applying Iteration to the ADM), Capability
	Architectures corresponding to a Segment Architecture can also be
	performed in parallel.
	
	The following chapters will explain these concepts in more detail; see
	in particular Section 4.1.
	
snippet togaf_business-architecture_value-streams_1.4_Relationship_of_Value_Streams_to_Other_Business_Architecture_Concepts "1.4 Relationship of Value Streams to Other Business Architecture Concepts"
	
	As part of the practice of Business Architecture, we separate the
	concern of what we do (business capability), from who does it
	(organization), from how value is achieved (value stream), from how it
	is implemented or performed at an operational level (process), from the
	information that is needed, from the systems that are used, and so on.
	Figure 2 shows the relationships between value, value streams, and value
	stream stages (discussed further in the next section), and other
	foundational Business Architecture concepts.
	
	[]
	
	Figure 2: Value Stream Modeling Relationships
	
	The complete set of value streams depicts the various ways in which an
	organization orchestrates its capabilities to create stakeholder value.
	The value stream has a direct linkage to an organization’s business
	model (specifically to the value proposition). As an organization
	translates its business model to an operating model, those value stream
	stages can be translated into business processes. Importantly, this
	translation (or mapping) is not a direct one-to-one type; a single value
	stream stage can map to one or more business processes. The process of
	mapping value stream stages to business processes is a reflection of
	operating model-level decisions about how to segregate a business model
	into the various different ways that an organization can structure
	itself.
	
	Another way to think about the relationship between value streams and
	business processes is to consider their viewpoint: value streams take an
	outside-in perspective – usually a customer or end-user – and show how
	value gets created and moved around in relation to that stakeholder
	only. Business processes, on the other hand, tend to have more of an
	inward-looking, operational-level focus that is primarily concerned with
	how work gets done – the operational implementation. While some business
	processes may cover the same stream of activity that forms a value
	stream, it usually occurs at a much more granular level. That
	granularity is ideal for optimizing workflow and efficiency (i.e.,
	incrementally improving existing activities), but it is far less suited
	to answering deeper questions about how a business should serve its
	customers in such a way that maximizes the value generated along the
	way.
	
snippet togaf_architecture-content_1_Introduction_1.4_The_Enterprise_Continuum "1.4 The Enterprise Continuum"
	
	It is usually impossible to create a single unified architecture that
	meets all the requirements of all stakeholders for all time. Therefore,
	the Enterprise Architect will need to deal not just with a single
	Enterprise Architecture, but with many related Enterprise Architectures.
	
	Each architecture may have a different purpose and architectures may
	relate to one another. Effectively bounding the scope of an architecture
	is therefore a Critical Success Factor (CSF) in allowing architects to
	break down a complex problem space into manageable components that can
	be individually addressed.
	
	The Enterprise Continuum provides a view of the Architecture Repository
	that shows the evolution of these related architectures from generic to
	specific, from abstract to concrete, and from logical to physical.
	
	6. Enterprise Continuum discusses the Enterprise Continuum; including
	the Architecture Continuum and the Solutions Continuum.
	
snippet togaf_reference-models_government-reference-model_1.4_The_TOGAF_Standard_and_the_Government_Reference_Model "1.4 The TOGAF Standard and the Government Reference Model"
	
	The intent of the GRM is that this will sit in Phase B: Business
	Architecture of the TOGAF Architecture Development Method (ADM) cycle.
	This will provide a reference for individuals in the public sector and a
	pattern for accelerating the development of a reference model within the
	Business Architecture space.
	
snippet togaf_introduction_1_Introduction_1.4_Why_Join_The_Open_Group "1.4 Why Join The Open Group?"
	
	Organizations wishing to reduce the time, cost, and risk of implementing
	multi-vendor solutions that integrate within and between enterprises
	need The Open Group as their key partner.
	
	The Open Group brings together the buyers and suppliers of information
	systems worldwide, and enables them to work together, both to ensure
	that IT solutions meet the needs of customers, and to make it easier to
	integrate IT across the enterprise. The TOGAF Standard is a key enabler
	in this task.
	
	Yes, the TOGAF Standard itself is freely available. But how much will
	you spend on developing or updating your Enterprise Architecture? And
	how much will you spend on procurements based on that architecture? The
	price of membership of The Open Group is insignificant in comparison
	with these amounts.
	
	In addition to the general benefits of membership, as a member of The
	Open Group you will be eligible to participate in The Open Group
	Architecture Forum, which is the development program within which the
	TOGAF Standard is evolved, and in which TOGAF users come together to
	exchange information and feedback. Members of the Architecture Forum
	gain:
	
	-   Immediate access to the fruits of the current TOGAF work program
	    (not publicly available until publication of the next edition of the
	    TOGAF Standard) — in effect, the latest information on the standard
	-   Exchange of experience with other customer and vendor organizations
	    involved in Enterprise Architecture in general, and networking with
	    architects using the TOGAF Standard in significant architecture
	    development projects around the world
	-   Peer review of specific architecture case study material
	
	------------------------------------------------------------------------
	
snippet togaf_adm_1_Introduction_1.5.1_Breadth "1.5.1 Breadth"
	
	One of the key decisions is the focus of the architecture effort, in
	terms of the breadth of overall enterprise activity to be covered (which
	specific business sectors, functions, organizations, geographical areas,
	etc.).
	
	It is often necessary to have a number of different architectures
	existing across an enterprise, focused on particular timeframes,
	business functions, or business requirements.
	
	For large complex enterprises, federated architectures — independently
	developed, maintained, and managed architectures that are subsequently
	integrated within an integration framework — are typical. Such a
	framework specifies the principles for interoperability, migration, and
	conformance. This allows specific business units to have architectures
	developed and governed as stand-alone architecture projects. More
	details and guidance on specifying the interoperability requirements for
	different solutions can be found in the TOGAF Standard — ADM Techniques.
	
	The feasibility of a single enterprise-wide architecture for every
	business function or purpose may be rejected as too complex and
	unwieldy. In these circumstances it is suggested that a number of
	different Enterprise Architectures exist across an enterprise. These
	Enterprise Architectures focus on particular timeframes, business
	segments or functions, and specific organizational requirements. In such
	a case we need to create the overarching Enterprise Architecture as a
	"federation" of these Enterprise Architectures. An effective way of
	managing and exploiting these Enterprise Architectures is to adopt a
	publish-and-subscribe model that allows architecture to be brought under
	a governance framework. In such a model, architecture developers and
	architecture consumers in projects (the supply and demand sides of
	architecture work) sign up to a mutually beneficial framework of
	governance that ensures that:
	
	-   Architectural material is of good quality, up-to-date,
	    fit-for-purpose, and published (reviewed and agreed to be made
	    public)
	-   Usage of architecture material can be monitored, and compliance with
	    standards, models, and principles can be exhibited, via:
	    -   A Compliance Assessment process that describes what the user is
	        subscribing to, and assesses their level of compliance
	    -   A dispensation process that may grant dispensations from
	        adherence to architecture standards and guidelines in specific
	        cases (usually with a strong business imperative)
	
	Publish and subscribe techniques are being developed as part of general
	IT governance and specifically for the Defense sphere.
	
snippet togaf_adm_1_Introduction_1.5.2_Depth "1.5.2 Depth"
	
	Care should be taken to judge the appropriate level of detail to be
	captured, based on the intended use of the Enterprise Architecture and
	the decisions to be made based on it. It is important that a consistent
	and equal level of depth be completed in each architecture domain
	(Business, Data, Application, Technology) included in the architecture
	effort. If pertinent detail is omitted, the architecture may not be
	useful. If unnecessary detail is included, the architecture effort may
	exceed the time and resources available, and/or the resultant
	architecture may be confusing or cluttered. Developing architectures at
	different levels of detail within an enterprise is discussed in more
	detail in the TOGAF Standard — Applying the ADM.
	
	It is also important to predict the future uses of the architecture so
	that, within resource limitations, the architecture can be structured to
	accommodate future tailoring, extension, or re-use. The depth and detail
	of the Enterprise Architecture needs to be sufficient for its purpose,
	and no more.
	
	Iterations of the ADM will build on the artifacts and the capabilities
	created during previous iterations.
	
	There is a need to document all the models in an enterprise, to the
	level of detail appropriate to the need of the current ADM cycle. The
	key is to understand the status of the enterprise's architecture work,
	and what can realistically be achieved with the resources and
	competencies available, and then focus on identifying and delivering the
	value that is achievable. Stakeholder value is a key focus: too broad a
	scope may deter some stakeholders (no return on investment).
	
snippet togaf_adm_1_Introduction_1.5.3_Time_Period "1.5.3 Time Period"
	
	The ADM is described in terms of a single cycle of Architecture Vision,
	and a set of Target Architectures (Business, Data, Application,
	Technology) that enable the implementation of the vision.
	
	In such cases, a wider view may be taken, whereby an enterprise is
	represented by several different architecture instances (for example,
	strategic, segment, capability), each representing the enterprise at a
	particular point in time. One architecture instance will represent the
	current enterprise state (the "as-is", or baseline). Another
	architecture instance, perhaps defined only partially, will represent
	the ultimate target end-state (the "vision"). In-between, intermediate
	or "Transition Architecture" instances may be defined, each comprising
	its own set of Target Architecture Descriptions. An example of how this
	might be achieved is given in the TOGAF Standard — ADM Techniques.
	
	By this approach, the Target Architecture work is split into two or more
	discrete stages:
	
	1.  First, develop Target Architecture Descriptions for the overall
	    (large-scale) system, demonstrating a response to stakeholder
	    objectives and concerns for a relatively distant timeframe (for
	    example, a six-year period).
	2.  Then develop one or more "Transition Architecture" descriptions, as
	    increments or plateaus, each in line with and converging on the
	    Target Architecture Descriptions, and describing the specifics of
	    the increment concerned.
	
	In such an approach, the Target Architectures are evolutionary in
	nature, and require periodic review and update according to evolving
	business requirements and developments in technology, whereas the
	Transition Architectures are (by design) incremental in nature, and in
	principle should not evolve during the implementation phase of the
	increment, in order to avoid the "moving target" syndrome. This, of
	course, is only possible if the implementation schedule is under tight
	control and relatively short (typically less than two years).
	
	The Target Architectures remain relatively generic, and are therefore
	less vulnerable to obsolescence than the Transition Architectures. They
	embody only the key strategic architectural decisions, which should be
	blessed by the stakeholders from the outset, whereas the detailed
	architectural decisions in the Transition Architectures are deliberately
	postponed as far as possible (i.e., just before implementation) in order
	to improve responsiveness vis a vis new technologies and products.
	
	The enterprise evolves by migrating to each of these Transition
	Architectures in turn. As each Transition Architecture is implemented,
	the enterprise achieves a consistent, operational state on the way to
	the ultimate vision. However, this vision itself is periodically updated
	to reflect changes in the business and technology environment, and in
	effect may never actually be achieved, as originally described. The
	whole process continues for as long as the enterprise exists and
	continues to change.
	
	Such a breakdown of the Architecture Description into a family of
	related architecture products of course requires effective management of
	the set and their relationships.
	
snippet togaf_adm_1_Introduction_1.5.4_Architecture_Domains "1.5.4 Architecture Domains"
	
	A complete Enterprise Architecture should address all four architecture
	domains (Business, Data, Application, Technology), but the realities of
	resource and time constraints often mean there is not enough time,
	funding, or resources to build a top-down, all-inclusive Architecture
	Description encompassing all four architecture domains.
	
	Architecture Descriptions will normally be built with a specific purpose
	in mind — a specific set of business drivers that drive the architecture
	development — and clarifying the specific issue(s) that the Architecture
	Description is intended to help explore, and the questions it is
	expected to help answer, is an important part of the initial phase of
	the ADM.
	
	For example, if the purpose of a particular architecture effort is to
	define and examine technology options for achieving a particular
	capability, and the fundamental business processes are not open to
	modification, then a full Business Architecture may well not be
	warranted. However, because the Data, Application, and Technology
	Architectures build on the Business Architecture, the Business
	Architecture still needs to be thought through and understood.
	
	While circumstances may sometimes dictate building an Architecture
	Description not containing all four architecture domains, it should be
	understood that such an architecture cannot, by definition, be a
	complete Enterprise Architecture. One of the risks is a lack of
	consistency and therefore an ability to integrate. Integration either
	needs to come later — with its own costs and risks — or the risks and
	trade-offs involved in not developing a complete and integrated
	architecture need to be articulated by the architect, and communicated
	to and understood by the enterprise management.
	
snippet togaf_business-architecture_value-streams_1.5_Benefits_of_Value_Streams_and_Value_Stream_Mapping "1.5 Benefits of Value Streams and Value Stream Mapping"
	
	Mapping value streams (typically performed as part of a broader Business
	Architecture initiative) is a quick and easy way to obtain a snapshot of
	the entire business, since those value streams represent all the work
	that the business needs to perform – at least from a value-delivery
	perspective. Doing so helps business leaders assess their organization’s
	effectiveness at creating, capturing, and delivering value for different
	stakeholders.
	
	Other benefits of value streams and value stream mapping include:
	
	-   Value streams help business leaders envision and prioritize the
	    impact of strategic plans, manage internal and external stakeholder
	    engagement, and deploy new business solutions
	-   Viewing business capabilities through the lens of a value stream
	    provides a value-based, customer-centric context for business
	    analysis and planning
	-   Value streams provide a framework for more effective business
	    requirements analysis, case management, and solution design
	-   By focusing on how business value is achieved and for whom, a fully
	    articulated value stream map can lead to more effective business and
	    operating models that would not otherwise be identified using an
	    inside-out or bottom-up design approach
	
snippet togaf_architecture-project-management_1.5_Constraints "1.5 Constraints"
	
	This Guide explores how Project Management methods can supplement the
	TOGAF ADM in Architecture Project delivery. It focuses on PRINCE2 and
	PMBOK as proven practices in the Project Management area.
	
	Agile Project Management methods are out of scope for this Guide. In our
	experience, the TOGAF framework can be tailored to use an agile
	approach. Such tailoring can provide important benefits. However, it is
	not explored in this Guide.
	
snippet togaf_adm_1_Introduction_1.5_Scoping_the_Architecture "1.5 Scoping the Architecture"
	
	There are many reasons to constrain (or restrict) the scope of the
	architectural activity to be undertaken, most of which relate to limits
	in:
	
	-   The organizational authority of the team producing the architecture
	-   The objectives and stakeholder concerns to be addressed within the
	    architecture
	-   The availability of people, finance, and other resources
	
	The scope chosen for the architecture activity should ideally allow the
	work of all architects within the enterprise to be effectively governed
	and integrated. This requires a set of aligned "architecture partitions"
	that ensure architects are not working on duplicate or conflicting
	activities. It also requires the definition of re-use and compliance
	relationships between architecture partitions.
	
	The division of the enterprise and its architecture-related activity is
	discussed in more detail in the TOGAF Standard — Applying the ADM.
	
	Four dimensions are typically used in order to define and limit the
	scope of an architecture:
	
	-   Breadth: what is the full extent of the enterprise, and what part of
	    that extent will this architecting effort deal with?
	    -   Many enterprises are very large, effectively comprising a
	        federation of organizational units that could validly be
	        considered enterprises in their own right
	    -   The modern enterprise increasingly extends beyond its
	        traditional boundaries, to embrace a fuzzy combination of
	        traditional business enterprise combined with suppliers,
	        customers, and partners
	
	-   Depth: to what level of detail should the architecting effort go?
	
	    How much architecture is "enough"? What is the appropriate
	    demarcation between the architecture effort and other, related
	    activities (system design, system engineering, system development)?
	
	-   Time Period: what is the time period that needs to be articulated
	    for the Architecture Vision, and does it make sense (in terms of
	    practicality and resources) for the same period to be covered in the
	    detailed Architecture Description?
	
	    If not, how many Transition Architectures are to be defined, and
	    what are their time periods?
	
	-   Architecture Domains: a complete Enterprise Architecture Description
	    should contain all four architecture domains (Business, Data,
	    Application, Technology), but the realities of resource and time
	    constraints often mean there is not enough time, funding, or
	    resources to build a top-down, all-inclusive Architecture
	    Description encompassing all four architecture domains, even if the
	    enterprise scope is chosen to be less than the full extent of the
	    overall enterprise
	
	Typically, the scope of an architecture is first expressed in terms of
	breadth, depth, and time. Once these dimensions are understood, a
	suitable combination of architecture domains can be selected that are
	appropriate to the problem being addressed. Techniques for using the ADM
	to develop a number of related architectures are discussed in the TOGAF
	Standard — Applying the ADM.
	
	The four dimensions of architecture scope are explored in detail below.
	In each case, particularly in large-scale environments where
	architectures are necessarily developed in a federated manner, there is
	a danger of architects optimizing within their own scope of activity,
	instead of at the level of the overall enterprise. It is often necessary
	to sub-optimize in a particular area, in order to optimize at the
	enterprise level. The aim should always be to seek the highest level of
	commonality and focus on scalable and re-usable modules in order to
	maximize re-use at the enterprise level.
	
snippet togaf_architecture-content_1_Introduction_1.5_The_Architecture_Repository "1.5 The Architecture Repository"
	
	Operating a mature Architecture Capability within a large enterprise
	creates a huge volume of architectural output. Effective management and
	leverage of these architectural work products require a formal taxonomy
	for different types of architectural asset alongside dedicated processes
	and tools for architectural content storage.
	
	7. Architecture Repository provides a structural framework for an
	Architecture Repository that allows an enterprise to distinguish between
	different types of architectural assets that exist at different levels
	of abstraction in the organization.
	
snippet togaf_adm_1_Introduction_1.6.1_Method "1.6.1 Method"
	
	It is most common that a single alternative does not exist that will
	meet all stakeholders' concerns. The TOGAF Standard (see the TOGAF
	Standard — ADM Techniques: Architecture Alternatives and Trade-offs)
	provides a technique to investigate different alternatives and to
	discuss these with the stakeholders.
	
	Commonly, alternatives are defined per domain. This is done to simplify
	the analysis of the different alternatives. Of course, the alternatives
	per domain can be merged into on overall analysis of the alternatives
	for the whole architecture. This approach is illustrated in Figure 1-2 .
	
	The first part of the method uses the vision, principles, requirements,
	and other information to select sets of criteria fitting for different
	alternatives.
	
	The second part of the method defines alternatives based on the criteria
	and builds an understanding of each.
	
	The third part of the method will either select one of the alternatives,
	or else combine features from more than one, to create the proposed
	alternative. Perform the following activities in just enough detail to
	support that decision. The method can be used for any phase at any level
	of an architecture.
	
	[]
	
	Figure 1-2: Architecture Alternatives Method
	
snippet togaf_adm_1_Introduction_1.6_Architecture_Alternatives "1.6 Architecture Alternatives"
	
	There is often more than one possible Target Architecture that would
	conform to the Architecture Vision, Architecture Principles, and
	Requirements. It is important to identify alternative Target
	Architectures and build understanding of different possibilities and
	identify trade-offs between the alternatives. Creating an architecture
	normally requires trade-offs among competing forces. Presenting
	different alternatives and trade-offs to stakeholders helps architects
	to extract hidden agendas, principles, and requirements that could
	impact the final Target Architecture.
	
snippet togaf_adm_1_Introduction_1.7_Architecture_Integration "1.7 Architecture Integration"
	
	Architectures that are created to address a subset of issues within an
	enterprise require a consistent frame of reference so that they can be
	considered as a group as well as point deliverables. The dimensions that
	are used to define the scope boundary of a single architecture (e.g.,
	level of detail, architecture domain, etc.) are typically the same
	dimensions that must be addressed when considering the integration of
	many architectures. Figure 1-3 illustrates how different types of
	architecture need to co-exist.
	
	At the present time, the state of the art is such that architecture
	integration can be accomplished only at the lower end of the
	integratability spectrum. Key factors to consider are the granularity
	and level of detail in each artifact, and the maturity of standards for
	the interchange of architectural descriptions.
	
	[]
	
	Figure 1-3: Integration of Architecture Artifacts
	
	As organizations address common themes (such as Service-Oriented
	Architecture (SOA), and integrated information infrastructure) and
	universal data models and standard data structures emerge, integration
	toward the high end of the spectrum will be facilitated. However, there
	will always be the need for effective standards governance to reduce the
	need for manual co-ordination and conflict resolution.
	
snippet togaf_adm_1_Introduction_1.8_Summary "1.8 Summary"
	
	The TOGAF ADM defines a recommended sequence for the various phases and
	steps involved in developing an architecture, but it cannot recommend a
	scope — this has to be determined by the organization itself, bearing in
	mind that the recommended sequence of development in the ADM process is
	an iterative one, with the depth and breadth of scope and deliverables
	increasing with each iteration. Each iteration will add resources to the
	organization's Architecture Repository.
	
	While a complete framework is useful (indeed, essential) to have in mind
	as the ultimate long-term goal, in practice there is a key decision to
	be made as to the scope of a specific Enterprise Architecture effort.
	This being the case, it is vital to understand the basis on which
	scoping decisions are being made, and to set clear expectations for the
	goal of the effort.
	
	The main guideline is to focus on what creates value to the enterprise,
	and to select horizontal and vertical scope, and time periods,
	accordingly. Whether or not this is the first time around, understand
	that this exercise will be repeated, and that future iterations will
	build on what is being created in the current effort, adding greater
	width and depth.
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.1_Decision-Making_Process_Integration_Model "10.1.1 Decision-Making Process Integration Model"
	
	EA Capability provides advice and illuminates constraints to support the
	decision-making process of the enterprise. All planning and budgeting
	processes are considered as decision-making processes. The specific type
	of decision-making will direct the form of interaction. The interaction
	is divided into advice and constraints feeding decision-making, and
	reporting feeding governance of the decision.
	
	Advice provided for decision-making is usually in the form of trade-off
	analysis, views, and an architecture roadmap. This advice leads to
	decisions, usually in the form of approval of a candidate architecture.
	Most constraints are prior decisions, often stated in the form of an
	architecture requirement specification.
	
	Supporting governance activity, the EA Capability provides reporting
	within the scope of the target architecture on decisions made by the
	appropriate process. This reporting is used to confirm execution, drive
	change to the target architecture, or changes to execution.
	
	Decisions direct the architecture support. Where there are subsidiary
	decisions the input will be guided and constrained.
	
	[]
	
	Figure 17: Decision-Making Process Integration
	
	The interaction model described above and represented in Figure 17
	remains constant with all decision-making processes. The interaction is
	dependent upon the type of decision-making process. The World-Class
	Enterprise Architecture White Paper classifies four decision-making
	processes with which an EA Capability can connect. The nature of this
	connection will depend upon the purpose of the EA Capability identified
	in Chapter 5 (Business Objectives for the EA Capability):
	
	-   Strategy development
	-   Portfolio/program planning
	-   Project planning
	-   Solution development
	
	Section 10.1.3 through Section 10.1.9 provide a discussion of how the EA
	Capability engages with decision-making processes.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.1.1_Scoping "10.1.1 Scoping"
	
	-   What are the conditions under which a change can be triggered to
	    architecture work?
	-   Having identified the neighbors and their interactions, what is the
	    frequency of interaction and integration?
	-   What can and cannot give?
	-   Are the stakeholders and portfolio guidance still relevant
	    (recency)?
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.2_Execution_Process_Integration_Model "10.1.2 Execution Process Integration Model"
	
	For execution processes, the EA Capability provides advice, direction,
	and constraints. All change and operational processes are considered
	execution processes. The type of execution processes will direct the
	form of interaction.
	
	Direction to execution processes is provided in the form of what needs
	to be done – gaps to be filled and work packages. Constraints are
	defined in the form of an architecture requirements specification.
	Advice is primarily provided in the form of implementation guidance and
	non-compliance recommendations. The set of advice, direction, and
	constraints is used in the execution of change efforts and operations.
	
	Supporting the governance processes, the EA Capability provides
	reporting within the scope of the target architecture on changes made by
	the execution process. This reporting is used to confirm execution,
	identify potential need to change the target architecture, or introduce
	early changes to execution. Reporting is also provided to the
	appropriate decision-making processes.
	
	Regardless of the type of execution process and major transformation
	project, the interaction model described above and represented in Figure
	18 remains constant. The interaction is dependent upon the type of
	execution process, and when the execution is taking place. The
	World-Class Enterprise Architecture White Paper classifies four
	execution management processes with which an EA Capability can connect.
	The nature of this connection will depend upon the purpose of the EA
	Capability identified in Chapter 5 (Business Objectives for the EA
	Capability):
	
	-   Portfolio/program management
	-   Project execution
	-   Operational change
	-   Operations
	
	[]
	
	Figure 18: Execution Process Integration
	
	Section 10.1.3 through Section 10.1.9 provide a discussion of how the EA
	Capability engages with execution processes.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.1.2_Function_Purity_and_Solution_Innovation "10.1.2 Function Purity and Solution Innovation"
	
	-   Are there multiple solution providers in this project? And who is
	    providing what solution?
	-   What kind of detail is needed in the viewpoints to align solution
	    providers and the superior architecture?
	-   How to drive integration across SBBs?
	-   How to select the best solution that aligns with the overall
	    operating model (custom in-house, custom managed service,
	    standardized managed service, standardized in-house)?
	-   What does governance mean in this context?
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.1.3_Handover_and_Closure "10.1.3 Handover and Closure"
	
	-   When does the engagement end?
	-   What is the appropriate value report?
	-   What are the lessons learned and impact to gaps in EA?
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.3_Strategy_Development_Process "10.1.3 Strategy Development Process"
	
	An EA Capability that is chartered to support strategy will be tightly
	integrated with strategy development processes. Strategic
	decision-making tends not to closely follow fixed cycles – this requires
	the EA Capability to be nimble.
	
	Supporting governance will be reporting on execution against the roadmap
	and value realization embedded within the target architecture supported
	by the roadmap.
	
	Predictable deliverables will be required before the budget planning
	process. Supporting strategy development decision-making would provide
	insight into the impact of the changes to existing initiatives,
	portfolios, and the extension of roadmaps. When the roadmap is extended,
	identify and recommend key work packages that deliver value.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.4_Portfolio_and_Program_Management_Processes "10.1.4 Portfolio and Program Management Processes"
	
	An EA Capability chartered to support portfolio will be tightly
	integrated with portfolio/program planning and budget cycles. This
	requires the EA Capability to be working well ahead of the
	decision-making cycle to ensure that necessary advice is available
	during and throughout the budget process.
	
	Governance of the portfolio and program execution is split between
	ensuring projects deliver on expected work packages and fill necessary
	gaps and reporting on success that creates the conditions for value
	realization.
	
	Ad hoc work will be required to support portfolio and program management
	activity. Central activity is to support the ongoing alignment of
	approach, jockeying the enterprise roadmap to ensure that all dependency
	is addressed and synergy maximized.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.5_Project_Initiation_Project_Management_and_Change_Management_Processes "10.1.5 Project Initiation, Project Management, and Change Management Processes"
	
	An EA Capability chartered to support solution delivery and project must
	be tightly integrated with the enterprise’s project initiation process
	and change process. A common problem for enterprises embarking on EA
	Capability initiatives is aligning the EA Capability after project
	initiation – architecting after decision. Performing high-value work
	after decisions is impossible.
	
	The second challenge is aligning with the change processes at the right
	level of detail. Many enterprises have change processes that are
	variable based upon the scope, objective, and sponsorship of the
	project. Best practice requires the EA Capability to engage ahead of
	decisions. Where the EA Capability supports strategy, portfolio, and
	program there is an additional governance activity. This activity is
	focused on highlighting misalignment of any change activity with the
	work packages and roadmap.
	
	Two key elements of advice must be provided before initiation. First,
	the final definition of the project (architecture to support project),
	or the solution architecture (architecture to support solution
	deployment). Second, integration and alignment between projects within
	the context of their portfolio and program. Alignment with project and
	solution delivery requires a high level of ad hoc work to support
	project initiation and governance activity within a project.
	
	Governance activity should be integrated within the project reporting
	and control scope. Best practice governance requires EA Capability
	personnel assigned to the project to remain neutral and not report to
	the project. Performing effective governance requires independence from
	the pressures of project delivery.
	
	Keep in mind that all change activity, whether a capital project or
	operational change, needs to be governed by the architecture
	requirements specification.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.6_Budgeting_Processes "10.1.6 Budgeting Processes"
	
	One of the demands from the EA Capability is to support the budgeting
	process, either for the fiscal year or for the entire planning horizon.
	As always, the EA Capability will be operating before decisions, advice,
	and supporting governance are confirmed. Best practice support requires
	the EA Capability to deliver the initial version of its advice before
	the start of any budget conversations.
	
	Integrating with budgeting processes is closely aligned with the
	integration for portfolio and program management processes.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.7_Operational_Management_Processes "10.1.7 Operational Management Processes"
	
	The primary association with operational processes is information
	capture during architecture analysis and ongoing governance of
	operational change.
	
	The EA Capability requires connections with any operational processes
	that are within the scope of the EA Capability. The primary connection
	is gathering and identifying value realization metrics; for example, is
	the specified architecture generating the value expected by the
	stakeholders? This can be a difficult relationship with an operational
	team when the architecture is specifying a value that does not align
	with the parochial preferences of an operational team.
	
	A secondary connection is operational change, and ensuring this change
	aligns with the architecture requirements specification.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.8_Governance_Processes "10.1.8 Governance Processes"
	
	A high-functioning EA Capability is dependent upon engagement with the
	enterprise’s governance processes. The EA Capability requires engagement
	at all points in the lifecycle of a target architecture.
	
	Governance is required for both the focus of the EA Capability and the
	architecture projects undertaken. How the Leader directs and controls
	the focus of the EA Capability is critical to realizing the available
	value. A high-functioning EA Capability works on the optimal mix of
	architecture projects.
	
	Approval of the target is one of the most important governance
	functions. IT-oriented teams routinely create an architecture board that
	is positioned with a decision-making role on both the target
	architecture and conformance of change projects. This pattern is
	unlikely to succeed, unless the EA Capability is restricted to IT
	functions, and specifically to infrastructure.
	
	At the core of good architecture is the set of preferences expressed by
	stakeholders. The target architecture must address the optimal set of
	stakeholder requirements – this optimal set requires trade-off between
	stakeholder requirements. When the EA Capability is chartered to support
	strategy and portfolio, the decision-making body to perform the
	trade-off will constantly face the breadth and variety of cross-domain
	stakeholder requirements.
	
	The most successful architecture boards work to control the process. A
	high-functioning architecture board will be structured to confirm that:
	
	1.  The EA Capability is working on the highest value architecture
	    projects.
	2.  The EA Capability addressed the correct stakeholders for a given
	    architecture project.
	3.  The EA Capability appropriately works with other implemented
	    enterprise frameworks, such as ERM.
	4.  The architecture description, supporting model, views, and
	    architecture requirements specification are internally consistent.
	5.  The implementation and migration plans conform to the roadmap.
	6.  The architecture contract associates the gap, work package, and
	    appropriate architecture requirements specification to programs and
	    projects.
	7.  Appropriate stakeholders review conformance reviews.
	8.  Decisions taken by a stakeholder based upon a non-conformance result
	    in a change to the target architecture or the change initiative’s
	    execution approach, or an exception.
	
	One of the most important activities of governance is reporting to
	appropriate stakeholders. This reporting needs to include:
	
	-   Conformance of baseline representation to target and expected value
	    representation
	
	Make sure that the views, dataset, and controls used for the target
	architecture and value of the target are used to represent the baseline
	as well. This might appear counter-intuitive. It is easier to
	communicate what did not exist or what was eliminated; hence the value
	of the baseline is less than the target.
	
	-   Conformance of implementation and migration plan to roadmap
	-   Conformance of realization activities (all solution delivery) to
	    target architecture
	-   Conformance to architecture principles
	
	Consider using summary reporting with a high visual impact. Below is an
	example of reporting against architecture principles. The same summary
	can be used for value, roadmap, and execution activity.
	
	Table 6: Example of Summary Governance Reporting
	
	                                                                       Principle 1      Principle 2      Principle 3
	  -------------------------------------------------------------------- ---------------- ---------------- ----------------
	  Portfolio: Assess the enterprise within the scope of a portfolio.    Conforms         Violates         Not Applicable
	  Project: Assess the enterprise within the scope of a project.        Violates         Not Applicable   Conforms
	  Component: Assess the components within the baseline architecture.   Not Applicable   Conforms         Violates
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1.9_Enterprise_Risk_Management_ERM_Process "10.1.9 Enterprise Risk Management (ERM) Process"
	
	A central role of the EA Capability is to facilitate creation of an
	environment where operational risk can be optimized for maximum business
	benefit and minimum business loss. This requires close integration with
	the enterprise’s risk management approach and an understanding of the
	scope and interests of ERM. Tight integration with ERM facilitates
	tilting the EA to improve realization of objectives, and the reduction
	of uncertainty.
	
	In all cases, the EA Capability needs to test the candidate
	architecture, roadmap, and value against the ERM. While close
	interaction with a robust ERM process should be undertaken, Table 7
	identifies key areas to test.
	
	Table 7: Key Touch-Points with Enterprise Risk Management (ERM)
	
	                             Candidate Architecture           Roadmap                                         Value Realized
	  -------------------------- -------------------------------- ----------------------------------------------- ----------------------------------------
	  Key Risk Areas             Flags areas of special concern   Flags areas of special concern                  Perform more detailed value assessment
	  Risk Appetite              Aligns with risk appetite        Aligns with risk appetite                       Aligns with risk appetite
	  Business Impact Analysis   Not applicable                   Roadmap aligns with & informs impact analysis   Not applicable
	  Risk Assessment            Performs as appropriate          Performs as appropriate                         Value aligns with risk assessment
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10.1_Concept "10.1 Concept"
	
	There is often more than one possible Target Architecture that would
	conform to the Architecture Vision, Architecture Principles, and
	Requirements. It is important to identify alternative Target
	Architectures and build understanding of different possibilities and
	identify trade-offs between the alternatives. Creating an architecture
	normally requires trade-offs among competing forces. Presenting
	different alternatives and trade-offs to stakeholders helps architects
	to extract hidden agendas, principles, and requirements that could
	impact the final Target Architecture.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.1_Introduction "10.1      Introduction"
	
	The success of this architecture and its outcome are driven by the
	degree of coordination between Architecture Practitioner and the
	Implementation Practitioner. The Architecture Practitioner hands over a
	well constrained, yet with sufficient room for creativity and
	innovation, box to the Implementation Practitioner. It is the duty of
	the Implementation Practitioner to not break the box or to morph its
	shape or appearance. It is the duty and responsibility of the
	Architecture Practitioner to define the context of this box within the
	EA Landscape, defining all of the push and pull forces. The candidate
	Architecture Project is now the Target Architecture.
	
	Note that there will be minimal discussion on Phase G in Table 9. All of
	these activities occur in the context of Phase G. The table informs how
	activities in other phases enable delivery of the solution and drive
	closure to an Architecture Project. Actual closure is triggered from
	Phase H, either identifying a new effort or signaling achievement of
	target state.
	
	Table 9 summarizes the activities and use of appropriate steps from the
	ADM phases. The content of the table is discussed in detail in the rest
	of this chapter.
	
	Table 9: Summary Table: ADM Phases and Architecture to Support Solution
	Delivery
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Align Implementers                | Partial Capability Level Phase A  |
	|                                   |                                   |
	|                                   | Project context:                  |
	|                                   |                                   |
	|                                   | -   Verify recency                |
	|                                   | -   Reaffirm stakeholders,        |
	|                                   |     outcomes, timeline            |
	|                                   | -   Communicate value proposition |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase B, |
	|                                   | C, D                              |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Elaborate architecture        |
	|                                   |     specification                 |
	|                                   | -   Reaffirm risk controls        |
	|                                   | -   Communicate SBBs              |
	|                                   |                                   |
	|                                   | Partial Project Level Phase G     |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Initiate project governance   |
	+-----------------------------------+-----------------------------------+
	| Guide Delivery                    | Partial Project Level Phases B,   |
	|                                   | C, and D                          |
	|                                   |                                   |
	|                                   | Project context:                  |
	|                                   |                                   |
	|                                   | -   Continuously update EA        |
	|                                   |     Landscape                     |
	|                                   | -   Refine SBBs and solution      |
	|                                   |     boundaries                    |
	|                                   | -   Monitor controls              |
	|                                   |                                   |
	|                                   | EA Capability specific context:   |
	|                                   |                                   |
	|                                   | -   Update EA Repository          |
	|                                   |     (contents and models)         |
	|                                   | -   Update standards and          |
	|                                   |     reference architectures       |
	|                                   | -   Distribute resources          |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase E  |
	|                                   |                                   |
	|                                   | Project context:                  |
	|                                   |                                   |
	|                                   | -   Analyze impact of trade-off   |
	|                                   |     with superior architecture    |
	|                                   | -   Update risk matrix            |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase G  |
	|                                   |                                   |
	|                                   | Project context:                  |
	|                                   |                                   |
	|                                   | -   Conduct stakeholder review    |
	|                                   | -   Obtain architecture approval  |
	|                                   | -   Validate alignment of         |
	|                                   |     solution to vision            |
	+-----------------------------------+-----------------------------------+
	| Realizing the Solution            | Partial Project Level Phase H     |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Assess solution for gaps      |
	|                                   | -   Assess risk closure           |
	|                                   | -   Update Enterprise roadmap     |
	|                                   |                                   |
	|                                   | Partial Project Level Phase F     |
	|                                   |                                   |
	|                                   | Project context:                  |
	|                                   |                                   |
	|                                   | -   Baseline transition state     |
	|                                   |     architecture                  |
	|                                   | -   Complete lessons learned      |
	|                                   | -   Close architecture work       |
	|                                   |                                   |
	|                                   | Partial Enterprise Level Phase H  |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Assess changes to Enterprise  |
	|                                   |     roadmap                       |
	|                                   | -   As required, create backlog   |
	|                                   |     for architecture work         |
	|                                   |                                   |
	|                                   | EA Capability specific context:   |
	|                                   |                                   |
	|                                   | -   Engage stakeholders           |
	|                                   | -   Update EA roadmap             |
	+-----------------------------------+-----------------------------------+
	
	Simple guidance for the Implementation Practitioner is to keep an eye on
	the target of the superior architecture. Be absolutely clear what the
	architecture is trying to optimize and what it is being asked to
	deliver. It may be tempting to remove all sub-optimization choices in
	the current delivery cycle. Refrain. Validate that sub-optimization is
	intentional and future work will address such concerns. All it takes is
	one bad driver to upset miles of traffic. Understand that the Solution
	Architecture is one of the many concurrently moving parts in the
	Enterprise.
	
	Top concerns to be addressed in developing and delivering this
	architecture are covered in the following sections.
	
snippet togaf_adm_10_F_Migration_Planning_10.1_Objectives "10.1 Objectives"
	
	The objectives of Phase F are to:
	
	-   Finalize the Architecture Roadmap and the supporting Implementation
	    and Migration Plan
	-   Ensure that the Implementation and Migration Plan is co-ordinated
	    with the enterprise's approach to managing and implementing change
	    in the enterprise's overall change portfolio
	-   Ensure that the business value and cost of work packages and
	    Transition Architectures is understood by key stakeholders
	
snippet togaf_guides_microservices-architecture_10.1_Overview "10.1      Overview"
	
	The TOGAF Opportunities & Solutions phase identifies delivery vehicles
	(projects, programs, or portfolios) that effectively deliver the Target
	Architecture defined in previous phases. It reviews the target business
	objectives and capabilities, consolidates the gaps from Phases B to D,
	and organizes groups of building blocks to address these capabilities.
	It then generates an outline Implementation and Migration Strategy.
	
	There are some nuances between a cloud-native solution and a
	microservices-based solution. Microservices are a type of cloud-native
	solution, but they can have non-cloud deployments as well. Cloud-native
	is exclusively designed for the cloud. The intent of cloud-native is to
	optimally use cloud-scale architecture and cloud services in the
	solution. Microservices have other constraints and motivations; refer to
	The Open Group White Paper: Microservices Architecture (see Referenced
	Documents) for a deeper understanding. The commonalities are that they
	are both very modular and highly distributed deployments. They are
	elastically scalable and resilient.
	
	Cloud-native and MSA, as explored in depth in other chapters, bring the
	following key considerations to the Target Architecture, the
	Architecture Roadmap, and the Transition Plan:
	
	-   Scope transformation
	-   Organizational transformation
	-   Technology transformation
	
	—  Data Transformation
	
snippet togaf_reference-models_government-reference-model_10.1_Policy_Performance_Population_and_Innovation_Taxonomy "10.1      Policy, Performance, Population, and Innovation Taxonomy"
	
	  Sector                                            Function                   Service                                                                                                                                         Description
	  ------------------------------------------------- -------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Policy, Performance, Population, and Innovation   Policy                     Develops and assesses the sustainability of current programs and policies that pertain to the environment, society, economy, and marketplace.   
	                                                                               Collaborative Policy                                                                                                                            Refers to activities that monitor, manage, and respond to the wants and meets of the marketplace.
	                                                                               Policy Secretariat                                                                                                                              Co-ordinates the analysis, needs assessment, and initiation of the drafting of strategic documents to establish public policies and streamline policy procedures.
	                                                                               Social Policy                                                                                                                                   Refers to activities, guidelines, principles, and legislation administered by the government to reduce inequality and ensure adequate welfare.
	                                                                               Environmental Policy                                                                                                                            Encompasses activities, guidelines, principles, and legislation administered by the government in order to minimize the environmental effects of society.
	                                                                               Economic Policy                                                                                                                                 Encompasses activities, guidelines, principles, and legislation administered by the government in order to analyze economic stability and growth.
	                                                    Planning and Performance   Refers to the continuous process of identifying and planning the best way to reach goals.                                                       
	                                                                               Capacity Planning                                                                                                                               Refers to activities used to determine the maximum amount of change and production capacity the government has available in order to meet planning requirements.
	                                                                               Key Performance Indicators                                                                                                                      Measures outcomes and activities to ascertain the success of the government by achieving strategic objectives and determining improvement criteria.
	                                                                               Population Statistics (and Census)                                                                                                              Comprises generating population statistics and census, including monitoring population trends and benchmarks to inform research, policy-making, and planning.
	                                                    Innovation and Strategy    Refers to plans, initiatives, and activities used to achieve goals, address unmet market needs, and utilize emerging technology to do so.       
	                                                                               Social Strategy                                                                                                                                 Refers to plans, initiatives, and activities used to achieve social goals and address social inequalities.
	                                                                               Environmental Strategy                                                                                                                          Refers to plans, initiatives, and activities used to achieve environmental goals and tackle climate change.
	                                                                               Economic Strategy                                                                                                                               Refers to plans, initiatives, and activities used to achieve economic goals and enhance performance through more efficient allocation and utilization of resources.
	                                                                               Population Strategy                                                                                                                             Refers to plans, initiatives, and activities used to achieve population goals and address risks.
	                                                                               Housing Strategy                                                                                                                                Refers to plans, initiatives, and activities used to achieve housing goals and promote flexibility and affordability of housing.
	                                                                               Short, Medium-Term Strategy                                                                                                                     Comprises the determination of annual and near-terms goals and the identification of the best method to achieve goals.
	                                                                               Long-Term Strategy                                                                                                                              Comprises the determination of strategic goals and the identification of the best method to achieve goals.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.1_What_are_the_Touch-Points_with_Existing_Enterprise_Processes "10.1      What are the Touch-Points with Existing Enterprise Processes?"
	
	Enterprise planning and budgeting and the operational and change
	processes all have connections with the EA Capability. The nature of
	this connection will depend upon the purpose of the EA Capability
	identified in Chapter 5 (Business Objectives for the EA Capability).
	
	This Guide uses a simple model for considering process integration – all
	planning and budgeting processes are considered as decision-making
	processes. Change and operational processes are considered execution
	processes. This simple model highlights the basic interaction of the
	process with the EA Capability. The type of decision-making and
	execution processes will direct the form of interaction.
	
	In all cases, the critical process alignment is to have the EA
	Capability work products provided before a decision and before the
	beginning of change execution activity. Keep in mind the TOGAF framework
	concept of iteration; for example, the architecture work required to
	support budget planning, project planning, and solution delivery have
	different levels of detail. As the enterprise moves through a business
	cycle more detailed work is required. The correct EA needs to be done at
	the right time in the business cycle.
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10.2.1_Criteria "10.2.1 Criteria"
	
	The criteria are used for the different alternatives and are derived
	from many different inputs to the architecture. Consider the influence
	of architecture principles, requirements, vision, and stakeholder
	concerns.
	
	Each alternative will have distinct advantages or disadvantages that
	will need to be discussed and agreed with stakeholders. Additional
	viewpoints and views may be needed to allow stakeholders to explore the
	alternatives and understand any dependencies, risks, and uncertainties.
	
	Typical examples of alternative types (based on criteria) include:
	
	-   Flexible alternative
	-   Time and cost of realizing the alternative, including any
	    transitions and plateaus ("islands of stability")
	-   Time period over which estimated benefits of the alternative will be
	    achieved
	-   Adherence to architecture styles or guidelines
	-   Solution delivery method (e.g., re-use, develop, buy)
	-   Minimal impact on business capabilities during implementation of the
	    alternative
	-   Minimized risk associated with the alternative and any mitigating
	    actions needed
	-   etc., ...
	
snippet togaf_adm_10_F_Migration_Planning_10.2.1_Reference_Materials_External_to_the_Enterprise "10.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10.2.2_Identify_Alternatives "10.2.2 Identify Alternatives"
	
	Identify a set of possible alternatives using the Architecture Vision,
	Principles, and Requirements.
	
	For each alternative:
	
	1.  Define the overview criteria for the alternative
	
	    Use the Architecture Vision, Principles, and Requirements to define
	    the criteria for the alternative. The criteria can be applied at
	    different abstraction levels and ADM phases to identify different
	    architecture alternatives.
	
	2.  Describe the architecture for the alternative
	
	    Create a set of necessary architecture views to reach a proper
	    understanding of the impact of the alternative. Add any other needed
	    information. Do not go into too much detail. It is important,
	    however, to carry out a good impact assessment and identify
	    inter-dependencies between alternatives and the existent landscape
	    and have a complete picture of the implications of the alternative
	    implementation.
	
	3.  Estimate gaps between the baseline and this alternative
	
	    Based on current understanding of the baseline state, outline the
	    gaps that exist between the baseline and this alternative. If the
	    baseline has not yet been defined, this gap analysis will be
	    informal. More detail on how to do gap analysis appears in 5. Gap
	    Analysis .
	
	4.  Understand the impacts and trade-offs of the alternative across the
	    Architecture Landscape:
	    -   Identify the impact that the alternative will have on any
	        existing architectures, and on any Transition Architecture
	        within the Architecture Landscape
	    -   Identify the impact the alternative will have on any running or
	        planned implementation projects
	    -   Identify constraints imposed on this alternative by any running
	        or planned implementation projects
	    -   Identify impacts on architecture in other ADM phases in this
	        architecture project
	    -   Identify Architecture Requirements/Change Requests from this
	        architecture that will constrain other architectures
	    -   Identify the final value delivered by the alternative, to what
	        extent it covers the gap to reach the future state, and the
	        purpose of the iteration
	
snippet togaf_adm_10_F_Migration_Planning_10.2.2_Non-Architectural_Inputs "10.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see TOGAF Standard — Architecture Content)
	
snippet togaf_adm_10_F_Migration_Planning_10.2.3_Architectural_Inputs "10.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Governance models and frameworks for:
	    -   Corporate Business Planning
	    -   Enterprise Architecture
	    -   Portfolio, Program, Project Management
	    -   System Development/Engineering
	    -   Operations (Service)
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain, and/or
	    Transition Architectures
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Architectural requirements
	    -   Gap analysis results (from Business, Data, Application, and
	        Technology Architecture)
	    -   IT Service Management requirements
	-   Change Requests for existing business programs and projects (see the
	    TOGAF Standard — Architecture Content)
	-   Architecture Roadmap, Draft (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Identification of work packages
	    -   Identification of Transition Architectures
	    -   Implementation Factor catalog
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Business Capability Assessment
	    -   IT Capability Assessment
	-   Implementation and Migration Plan, Draft (see the TOGAF Standard —
	    Architecture Content), including the high-level Implementation and
	    Migration Strategy
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10.2.3_Choose_from_Alternatives_and_Define_in_Detail "10.2.3 Choose from Alternatives and Define in Detail"
	
	This step draws on the alternatives to select or define an alternate
	alternative. Use trade-off analysis to resolve conflicts between
	alternatives:
	
	1.  Understand the strengths and weaknesses of each alternative
	2.  Compare the alternatives based on how well they align with the
	    defined criteria
	3.  Select the most suitable alternative or combine features from more
	    than one of the alternatives, to define an alternate alternative in
	    collaboration with stakeholders
	4.  Assemble the alternative:
	    -   Finalize the description of the alternative
	    -   Ensure that all the architecture viewpoints identified have been
	        worked through for the alternative
	    -   Ensure that the alternative is defined in enough detail to
	        support decision-making
	5.  Resolve impacts across the Architecture Landscape
	6.  Conduct formal stakeholder review to determine alternative decision
	    and funding
	
	The impact analysis of the alternatives was done in just enough detail
	to choose between them.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.2_Aligning_Implementers "10.2      Aligning Implementers"
	
	It is imperative that the Architecture Practitioner and Implementation
	Practitioner verify that the bottom-up view of the architecture aligns
	well on the “recency” measure. The next step is to validate the recency
	measure of the lateral set of architectures. The Architecture Project
	defines the boundary conditions to limit the impact to the overall
	architecture, accounting for all trade-off choices that would be made by
	the implementation architect. This doesn’t mean that there cannot be
	changes to how each solution interacts with another. The impact does not
	require reprinting all of the training manuals and redoing the training
	schedule for the users of the solution.
	
	In most cases, there would be more than one player; a solution provider
	and a solution consumer. The dynamic nature of business could ask for
	changes to the solution proposed mid-stream. The Architecture Project
	and hence the Solution Architecture clearly define the conditions that
	could trigger a change, stakeholder review, and architecture approval. A
	sizeable fraction of the projects will involve more than one solution
	implementer. Develop the architecture to identify, clarify, constrain,
	and liberate each of the solution implementers from the other. The
	Solution Architecture articulates conditions for integration and
	acceptance of the total solution.
	
	In-house or third-party solution implementers deliver against this
	architecture. When supplied by a third party, the onus is still on the
	in-house team to validate, integrate, and accept the solutions. At the
	end of the day, the consumers and end-users do not care who supplied the
	solution. Their question is: “Does this meet my expectations, does what
	it says, available as stated and defined?” Make sure that architecture,
	the governance plan and implementer are totally aligned on value
	proposition, conditions for trade-off, and the stakeholder matrix.
	
	If the solution delivery project is validating a concept, the primary
	outcome is unearthing all points of failure; the secondary outcome is
	feasibility of the idea; and the tertiary outcome is scalability of the
	idea to meet usage demands. If the solution delivery project is building
	a bridge, its primary objective is enabling transportation under most
	environmental conditions; its secondary objective is to set terms of
	use. The variances across the solution delivery project are so vast that
	this Guide cannot provide a sufficient set of examples to emphasize
	alignment with neighbors and completing the bottom-up view.
	
	There is the least amount of work done in Phase A. It is all about
	affirming scope, stakeholders, currency, and value proposition.
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10.2_How_is_ADM_Iteration_Realized_in_Practice "10.2      How is ADM Iteration Realized in Practice?"
	
	An often-misunderstood element of the TOGAF framework is actioning the
	ADM and the concept of iteration. The TOGAF ADM graphic provides a
	stylized representation that is often interpreted as a linear waterfall.
	To demonstrate the flexibility inherent in good practice, diagrams
	showing levels and fish-ladders up the waterfall have been used. The key
	point is that the ADM graphic shows essential information flow and is
	not a representation of activity sequence.
	
	The important thing to realize is every time the EA Capability is
	undertaking any roadmap development; it is exercising the steps in the
	TOGAF ADM Phase E (Opportunities and Solutions). It is expected to
	consume the mandatory inputs and produce the mandatory outputs. This
	applies to all ADM phases. Simply don’t worry about activity sequence;
	worry about information inputs and outputs.
	
	Consider the stylized Gantt chart in Figure 19. The inter-dependent
	nature of EA requires all ADM phases that develop a candidate
	architecture to be executed simultaneously until the candidate
	architecture is tested for acceptance against the stakeholders’
	requirements. They close to allow specific elements of supporting
	domains to be completed. This provides a process-oriented view of ADM
	iteration.
	
	[]
	
	Figure 19: Stylized Architecture Development Gantt Chart
	
	Keep in mind this is a simple stylized example. The real world is always
	more complex and aligns to the objectives that EA Capability is
	chartered to deliver.
	
	The process created is not dependent upon the work the EA Capability
	undertakes to produce, but the timing of completion. The essential
	question is when an EA Capability must deliver specific work products.
	Table 8 provides a summary of work products that are actively consumed
	by key enterprise processes.
	
	Table 8: Work Product Alignment with Key Processes
	
	+-------------+-------------+-------------+-------------+-------------+
	| Practice    | Strategy    | Portfo      | Project     | Solution    |
	| Supports    |             | lio/Program |             | Delivery    |
	+=============+=============+=============+=============+=============+
	| Phase A     | Key         | Key         | Often not   | Limited use |
	| Work        | deliverable | deliverable | used        |             |
	| Product:    |             |             |             | Primary use |
	| Vision      | Before      | Before      | Activity to | is early in |
	|             | framing of  | start of    | produce a   | imp         |
	|             | a strategic | budget      | vision      | lementation |
	|             | planning    | planning    | overlaps    | cycle (via  |
	|             | session     |             | with        | internal    |
	|             |             |             | portfo      | providers   |
	|             | Refresh     |             | lio/program | or          |
	|             | before      |             | candidate   | execution   |
	|             | initiation  |             | a           | partners)   |
	|             | of program  |             | rchitecture |             |
	|             | budgeting   |             | and roadmap |             |
	|             |             |             |             |             |
	|             |             |             | Technique   |             |
	|             |             |             | may be used |             |
	|             |             |             | at          |             |
	|             |             |             | initiation  |             |
	|             |             |             | of business |             |
	|             |             |             | case        |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase E     | During      | Key         | Before      | Before      |
	| Work        | strategic   | deliverable | project     | engagement  |
	| Product:    | planning    |             | initiation  | of          |
	| Candidate   | session     | Before      | and         | execution   |
	| A           |             | start of    | f           | partners    |
	| rchitecture | Refresh as  | budget      | inalization | (including  |
	|             | required in | planning    | of business | internal    |
	|             | program     |             | case        | providers)  |
	|             | budgeting   | Primary use |             |             |
	|             |             | is          | Primary use | Primary use |
	|             |             | stakeholder | is creation | is creation |
	|             |             | acceptance  | of          | of          |
	|             |             | of target   | a           | a           |
	|             |             | and         | rchitecture | rchitecture |
	|             |             | definition  | r           | r           |
	|             |             | of gap      | equirements | equirements |
	|             |             |             | sp          | sp          |
	|             |             |             | ecification | ecification |
	+-------------+-------------+-------------+-------------+-------------+
	| Roadmap     | During      | Before      | Limited use | Before      |
	|             | strategic   | start of    |             | engagement  |
	|             | planning    | budget      | Can be used | of          |
	|             | session     | planning    | as an input | execution   |
	|             |             |             | to projects | partners    |
	|             | Refresh as  | Refresh as  | with        | (including  |
	|             | required in | required to | multiple    | internal    |
	|             | program     | support     | interactive | providers)  |
	|             | budgeting   | budgeting   | changes     |             |
	|             |             | and program |             | Primary use |
	|             |             | management  |             | is          |
	|             |             |             |             | ide         |
	|             |             |             |             | ntification |
	|             |             |             |             | of required |
	|             |             |             |             | change, and |
	|             |             |             |             | preferences |
	|             |             |             |             | of how to   |
	|             |             |             |             | execute     |
	|             |             |             |             | change, to  |
	|             |             |             |             | manage      |
	|             |             |             |             | solution    |
	|             |             |             |             | delivery    |
	|             |             |             |             | partner     |
	|             |             |             |             | selection   |
	|             |             |             |             | and         |
	|             |             |             |             | engagement  |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase F     | Likely not  | Limited use | Key         | Key         |
	| Work        | used        |             | deliverable | deliverable |
	| Product:    |             |             |             |             |
	| A           |             |             | Before      | Before      |
	| rchitecture |             |             | completion  | engagement  |
	| Contract &  |             |             | of project  | and         |
	| A           |             |             | initiation  | contracting |
	| rchitecture |             |             |             |             |
	| R           |             |             |             |             |
	| equirements |             |             |             |             |
	| Sp          |             |             |             |             |
	| ecification |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Imp         | Likely not  | During      | Key         | Key         |
	| lementation | used        | portfolio   | deliverable | deliverable |
	| & Migration |             | budgeting   |             |             |
	| Plan        |             |             | Before      | Before      |
	|             |             | Refresh as  | project     | engagement  |
	|             |             | required to | start       | and         |
	|             |             | support     |             | contracting |
	|             |             | budgeting   |             |             |
	|             |             | and program |             |             |
	|             |             | management  |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase G     | Likely not  | Likely not  | Key         | Key         |
	| Work        | used        | used        | deliverable | deliverable |
	| Product:    |             |             |             |             |
	| Conformance |             |             | At key      | At key      |
	| Assessment  |             |             | points in   | points in   |
	|             |             |             | project     | project     |
	|             |             |             | that allow  | that allows |
	|             |             |             | reporting   | reporting   |
	|             |             |             | to          | to          |
	|             |             |             | s           | s           |
	|             |             |             | takeholders | takeholders |
	|             |             |             | and         | and         |
	|             |             |             | obtaining   | obtaining   |
	|             |             |             | decisions   | decisions   |
	|             |             |             | for         | for         |
	|             |             |             | non-        | non-        |
	|             |             |             | conformance | conformance |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase H     | Before      | Key         | Limited use | Limited use |
	| Work        | governance  | deliverable |             |             |
	| Product:    | review,     |             | Scope of    | Scope of    |
	| Value       | framing a   | Before      | significant | significant |
	| Assessment  | strategic   | governance  | a           | a           |
	|             | planning    | review and  | rchitecture | rchitecture |
	|             | session and | program     | change and  | change and  |
	|             | program     | budgeting   | value often | value often |
	|             | budgeting   |             | does not    | does not    |
	|             |             | Refresh as  | cleanly     | cleanly     |
	|             |             | required to | align to    | align to    |
	|             |             | support     | projects    | solution    |
	|             |             | program     |             | deployment  |
	|             |             | management  |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	
	As mentioned in the World-Class EA Practitioner’s White Paper,
	purpose-based architecture delivery exercises each of the ADM phases to
	the extent necessary, starts in Phase F, and performs work in Phase B,
	C, and D. Table 8 informs the Leader which deliverables are important
	for which purpose-based architecture and from which phase the
	deliverable is produced. When designing the process model for the EA
	Capability, align the steps to develop the architecture to the business
	cycle and the deliverables required to support decision-making and
	governance processes.
	
	Once the process model is created, use this checklist to validate
	completion of the customized EA method and a framework for related
	functions in the organization:
	
	-   Integration with enterprise processes that align to the purpose of
	    the EA Capability is defined: Y/N
	-   The architecture process links the publication of work products to
	    the overall rhythm of the business (budgeting cycle, planning cycle,
	    change execution cycle): Y/N
	-   Documentation approach to architecture development, change, and
	    communication is defined: Y/N
	-   The level of rigor built into the process to evaluate the
	    alternative candidate architectures as well as execution method
	    meets the expectation of the sponsor of the EA Capability: Y/N
	-   The process accounts for alignment and integration with other
	    processes discussed in this chapter: Y/N
	-   The process provides governance of any roadmap to achieve selected
	    target state, and the ability to course correct, or assure quality:
	    Y/N
	
	Leaving out any one of these will cause problems at later stages of
	execution, as the team will be splitting its capacity to address the
	process gap, build the architecture, and provide confidence to
	decision-makers.
	
snippet togaf_adm_10_F_Migration_Planning_10.2_Inputs "10.2 Inputs"
	
	This section defines the inputs to Phase F.
	
snippet togaf_reference-models_government-reference-model_10.2_Key_Drivers_for_Change "10.2      Key Drivers for Change"
	
	Several factors are driving change in the sector, whereby the government
	will need to consider the points below.
	
	Respond to Demographic Changes
	
	Ageing population due to declining worldwide fertility rates is having a
	significant effect on policy. This will reduce the number of individuals
	of working age, increase dependency on social care, and result in
	reductions in the growth rate of potential output and the natural rate
	of unemployment.
	
	Changes in population composition will also result in changes in social
	preferences, consequently affecting strategic goals, KPIs, and
	subsequently impacting long-term strategy.
	
	Automate and Innovate
	
	To make the workplace more competitive and counteract the decline in
	working population, there is increased pressure to use technology.
	Digital governments will soon be able to leverage open networks in the
	“cloud” to communicate and develop new ideas and applications. Cognitive
	computing and such mechanisms can subsequently collect, distribute, and
	access vast amounts of data that can assist government leaders to make
	better decisions, and enable government accountability, social
	inclusiveness, and partnerships.
	
	Adopt New Economic Metrics
	
	The traditional metrics that guide national policies and corporate
	investments focus narrowly on short-term financial value. As social
	values diverge, there is growing misalignment between businesses and
	governments that foments critical policy failures including inequality,
	climate change, and falling living standards.
	
	Incorporating a broader set of “social” metrics, such as hours worked,
	will dramatically change our understanding of the economy. Many groups
	are developing new metrics as social pressures stimulate a government
	response; for example, the United Nations supports a dashboard approach
	to measuring wellbeing.
	
	These changes to perceptions of strategic goals will subsequently have
	significant impacts on policy and strategy.
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10.2_Method "10.2 Method"
	
	It is most common that a single alternative does not exist that will
	meet all stakeholders' concerns. The TOGAF Standard supports a technique
	to investigate different alternatives and to discuss these with the
	stakeholders. Commonly, alternatives are defined per domain. This is
	done to simplify the analysis of the different alternatives. Of course,
	the alternatives per domain can be merged into on overall analysis of
	the alternatives for the whole architecture.
	
	Figure 10-1 illustrates the architecture trade-off method.
	
	[]
	
	Figure 10-1: Architecture Trade-Off Method
	
	The first part of the method uses the vision, principles, requirements,
	and other information to select sets of criteria fitting for different
	alternatives.
	
	This second part of the method defines alternatives based on the
	criteria and builds understanding of each.
	
	The third part of this method will either select one of the
	alternatives, or else combine features from more than one, to create the
	proposed alternative. Perform the following activities in just enough
	detail to support that decision. The method can be used for any phase at
	any level of an architecture.
	
snippet togaf_guides_microservices-architecture_10.2_Scope_Transformation "10.2      Scope Transformation"
	
	A key tenet of cloud-native and MSA is that its target state is a
	modular, distributed, and highly decoupled solution. The current state
	may be a Greenfield scenario or a decomposable monolith solution.
	Microservices are independent and self-contained. This characteristic
	allows for the scope of each module to be managed independently, with
	its own Roadmap and Transition Plan.
	
	[]
	
	Figure 8: Scope Transformation
	
snippet togaf_adm_10_F_Migration_Planning_10.3.1_Confirm_Management_Framework_Interactions_for_the_Implementation_and_Migration_Plan "10.3.1 Confirm Management Framework Interactions for the Implementation and Migration Plan"
	
	This step is about co-ordinating the Implementation and Migration Plan
	with the management frameworks within the organization. There are
	typically four management frameworks that have to work closely together
	for the Implementation and Migration Plan to succeed:
	
	-   Business Planning that conceives, directs, and provides the
	    resources for all of the activities required to achieve concrete
	    business objectives/outcomes
	-   Enterprise Architecture that structures and gives context to all
	    enterprise activities delivering concrete business outcomes
	    primarily but not exclusively in the IT domain
	-   Project/Portfolio Management that co-ordinates, designs, and builds
	    the business systems that deliver the concrete business outcomes
	-   Operations Management that integrates, operates, and maintains the
	    deliverables that deliver the concrete business outcomes
	
	The Implementation and Migration Plan will impact the outputs of each of
	these frameworks and consequently has to be reflected in them. In the
	course of this step, understand the frameworks within the organization
	and ensure that these plans are co-ordinated and inserted (in a summary
	format) within the plans of each one of these frameworks.
	
	The outcome of this step may well be that the Implementation and
	Migration Plan could be part of a different plan produced by another one
	of the frameworks with Enterprise Architecture participation.
	
snippet togaf_adm_10_F_Migration_Planning_10.3.2_Assign_a_Business_Value_to_Each_Work_Package "10.3.2 Assign a Business Value to Each Work Package"
	
	Establish and assign a business value to each of the work packages. The
	intent is to first establish what constitutes business value within the
	organization, how value can be measured, and then apply this to each one
	of the projects and project increments.
	
	There are several issues to address in this activity:
	
	-   Performance Evaluation Criteria are used by portfolio and capability
	    managers to approve and monitor the progress of the architecture
	    transformation
	
	-   Return-on-Investment Criteria have to be detailed and signed off by
	    the various executive stakeholders
	
	-   Business Value has to be defined as well as techniques, such as the
	    value chain, which are to be used to illustrate the role in
	    achieving tangible business outcomes
	
	    Business value will be used by portfolio and capability managers to
	    allocate resources and, in cases where there are cutbacks, business
	    value in conjunction with return on investment can be used to
	    determine whether an endeavor proceeds, is delayed, or is canceled.
	
	-   Critical Success Factors (CSFs) should be established to define
	    success for a project and/or project increment
	
	    These will provide managers and implementers with a gauge as to what
	    constitutes a successful implementation.
	
	-   Measures of Effectiveness (MOE) are often performance criteria and
	    many corporations include them in the CSFs
	
	    Where they are treated discretely, it should be clear as to how
	    these criteria are to be grouped.
	
	-   Strategic Fit based upon the overall Enterprise Architecture (all
	    tiers) will be the critical factor for allowing the approval of any
	    new project or initiative and for determining the value of any
	    deliverable
	
	Use the work packages as a basis of identifying projects that will be in
	the Implementation and Migration Plan. The identified projects will be
	fully developed in other steps in Phase F. The projects, and project
	increments, may require adjustment of the Architecture Roadmap and
	Architecture Definition Document.
	
	Risks should then be assigned to the projects and project increments by
	aggregating risks identified in the Consolidated Gaps, Solutions, and
	Dependencies Matrix (from Phase E).
	
	Estimate the business value for each project using the Business Value
	Assessment Technique (see the TOGAF Standard — ADM Techniques).
	
snippet togaf_adm_10_F_Migration_Planning_10.3.3_Estimate_Resource_Requirements_Project_Timings_and_Availability_Delivery_Vehicle "10.3.3 Estimate Resource Requirements, Project Timings, and Availability/Delivery Vehicle"
	
	This step determines the required resources and times for each project
	and their increments and provides the initial cost estimates. The costs
	should be broken down into capital (to create the capability) and
	operations and maintenance (to run and sustain the capability).
	Opportunities should be identified where the costs associated with
	delivering new and/or better capability can be offset by decommissioning
	existing systems. Assign required resources to each activity and
	aggregate them at the project increment and project level.
	
snippet togaf_adm_10_F_Migration_Planning_10.3.4_Prioritize_the_Migration_Projects_through_the_Conduct_of_a_Cost_Benefit_Assessment_and_Risk_Validation "10.3.4 Prioritize the Migration Projects through the Conduct of a Cost/Benefit Assessment and Risk Validation"
	
	Prioritize the projects by ascertaining their business value against the
	cost of delivering them. The approach is to first determine, as clearly
	as possible, the net benefit of all of the SBBs delivered by the
	projects, and then verify that the risks have been effectively mitigated
	and factored in. Afterwards, the intent is to gain the requisite
	consensus to create a prioritized list of projects that will provide the
	basis for resource allocation.
	
	It is important to discover all costs, and to ensure that
	decision-makers understand the net benefit over time.
	
	Review the risks to ensure that the risks for the project deliverables
	have been mitigated as much as possible. The project list is then
	updated with risk-related comments.
	
	Have the stakeholders agree upon a prioritization of the projects.
	Prioritization criteria will use elements identified in the creation of
	the draft Architecture Roadmap in Phase E as well as those relating to
	individual stakeholder agendas. Notice that it is possible for a project
	to earn a high priority if it provides a critical deliverable on the
	path to some large benefit, even if the immediate benefit of the project
	itself is small.
	
	Formally review the risk assessment and revise it as necessary ensuring
	that there is a full understanding of the residual risk associated with
	the prioritization and the projected funding line.
	
snippet togaf_adm_10_F_Migration_Planning_10.3.5_Confirm_Architecture_Roadmap_and_Update_Architecture_Definition_Document "10.3.5 Confirm Architecture Roadmap and Update Architecture Definition Document"
	
	Update the Architecture Roadmap including any Transition Architectures.
	Review the work to date to assess what the time-spans between Transition
	Architecture should be, taking into consideration the increments in
	business value and capability and other factors, such as risk. Once the
	capability increments have been finalized, consolidate the deliverables
	by project. This will result in a revised Architecture Roadmap.
	
	This is needed in order to co-ordinate the development of several
	concurrent instances of the various architectures. A Transition
	Architecture State Evolution Table (see the TOGAF Standard — ADM
	Techniques) can be used to show the proposed state of the domain
	architectures at various levels of detail.
	
	If the implementation approach has shifted as a result of confirming the
	implementation increments, update the Architecture Definition Document.
	This may include assigning project objectives and aligning projects and
	their deliverables with the Transition Architectures to create an
	Architecture Definition Increments Table (see the TOGAF Standard — ADM
	Techniques).
	
snippet togaf_adm_10_F_Migration_Planning_10.3.6_Complete_the_Implementation_and_Migration_Plan "10.3.6 Complete the Implementation and Migration Plan"
	
	Generate the completed Implementation and Migration Plan. Much of the
	detail for the plan has already been gathered and this step brings it
	all together using accepted planning and management techniques. This
	should include integrating all of the projects and activities as well as
	dependencies and impact of change into a project plan. Any Transition
	Architectures will act as portfolio milestones.
	
	All external dependencies should be captured and included, and the
	overall availability of resources assessed. Project plans may be
	included within the Implementation and Migration Plan.
	
snippet togaf_adm_10_F_Migration_Planning_10.3.7_Complete_the_Architecture_Development_Cycle_and_Document_Lessons_Learned "10.3.7 Complete the Architecture Development Cycle and Document Lessons Learned"
	
	This step transitions governance from the development of the
	architecture to the realization of the architecture. If the maturity of
	the Architecture Capability warrants, an Implementation Governance Model
	may be produced (see the TOGAF Standard — Architecture Content).
	
	Lessons learned during the development of the architecture should be
	documented and captured by the appropriate governance process in Phase H
	as inputs to managing the Architecture Capability.
	
	The detail of the Architecture Roadmap and the Implementation and
	Migration Plan should be expressed at a similar level of detail to the
	Architecture Definition Document developed in Phases B, C, and D. Where
	significant additional detail is required by the next phase the
	architecture is likely transitioning to a different level. Depending
	upon the level of the Target Architecture and Implementation and
	Migration Plan it may be necessary to iterate another ADM cycle at a
	lower level of detail. See the TOGAF Standard — Applying the ADM for
	techniques to manage iteration and different levels of detail.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.3_Guiding_Delivery "10.3      Guiding Delivery"
	
	Any SBB delivered by solution suppliers will have to be integrated with
	the rest of the ecosystem of the Enterprise. Until the solution is
	delivered and evaluated against future work (transition architecture
	n+1), it will not be clear that some of the current work could become an
	SBB. Do not work to create a building block. Assess and refine once the
	solution is delivered and put to work.
	
	In terms of architecture styles and patterns available at the time of
	writing, you may consider each Microservice or an aggregation of
	Microservices (SOA service) as an SBB.
	
	When the superior architecture indicates availability of ABBs and SBBs,
	reach into the Enterprise Repository to reuse and conform to the
	architecture. When the ABBs point to implementations outside the
	Enterprise, guide industry collaboration and context-specific trade-off
	to guide development and delivery of Enterprise-specific SBBs.
	
	Critical to success of architectures is retaining the ownership of
	integrating solution blocks within the Enterprise. Delegating the
	responsibility to any other party will lead to project management and
	governance issues, resulting in failed architecture.
	
	Architecture to Support Solution Delivery is where all realizations and
	regulatory compliance needs are met. Naturally, the next critical
	long-term success factor for the Enterprise is identification of core
	information and data that should be retained in-house. The superior
	architecture should define the “core” for the Enterprise. All other
	datasets need not be retained, mastered, or controlled by the
	Enterprise. This choice drives other decision points in the operating
	model. Should the solution be treated as a black box for the Enterprise
	(a managed service) or specialized in-house or an expert team employed?
	Superior architectures need not resolve this choice. The choice and
	selection of solution provider is made at the time of developing and
	delivering the solution. Some of the solution provider choices may be
	constrained by the Enterprise’s preference to restrict the number of
	suppliers. The Practitioner should not feel compelled to use a solution
	provider just because a constraint exists. Priority is fitness to
	deliver and accelerate time-to-market.
	
	Choice of integration, definition of “core” information, and managed
	service versus in-house decisions guide the level of granularity needed
	to describe the architecture.
	
	Populate the EA Landscape continuously; as each decision is made, the
	level of granularity of the architecture is arrived at, and interactions
	across solution blocks are defined. Quantifying and documenting the
	resource required by each solution block may not be the direct concern
	of the Implementation Practitioner or the Architecture Practitioner.
	Attributes like cost to procure, cost to deliver, and cost to operate
	are required by the Enterprise planning organization. It is a sensible
	option to capture these attributes within the EA tool. Financial
	investment data for each solution delivery project aids and reduces time
	to complete the trade-off analysis, roll-up and roll-down of budget,
	among other benefits.
	
	It is not the recommendation of this Guide that resource allocation data
	for solution delivery projects be mastered in the EA tool or the EA team
	to take responsibility. This Guide is calling out a dataset that enables
	the Practitioner to be productive and purposeful. The source of truth
	for resource allocation should be determined by the Practitioner,
	following the guidance set by the Enterprise. A good content model and
	EA tool are normally capable of capturing this data point at the lowest
	level of granularity, and enable roll-up and trade-off analysis. It is
	the position of this Guide to use an EA tool to do the computations that
	inform and impact trade-off analysis, instead of using other methods to
	speed up the time to inform trade-off.
	
	Another set of trade-offs and constraints that impact this architecture
	is the existence of solution families in the Enterprise. The choice of a
	supplier or technology for data hosting services or ERP package
	constrains other building blocks that can be employed in the project and
	sometimes across the Enterprise. Take an assessment of such solution
	families from the superior architecture. When not available, the
	Implementation Practitioner and the Architecture Practitioner should
	spend time identifying, analyzing, and escalating impact of choices on
	large functional areas like Enterprise resource management and planning.
	
	Even though the Architecture Project defines the boundary and the
	interface, change is bound to happen. Continuous interaction with the
	Architecture Practitioner and Implementation Practitioner is required to
	proactively mitigate barriers.
	
	The objective is to develop the architecture to the extent needed to
	govern the solution being delivered. Do not feel compelled to define the
	solution as well. Define and employ viewpoints necessary to communicate,
	guide, and govern the Solution Architecture. Monitor implementation
	risks and the controls being implemented for Enterprise risks. Every
	trade-off and implementation choice made impacts and potentially
	modifies the Target Architecture. Governing the selections impacts the
	gap in the Target Architecture, the roadmap, and therefore the
	Architecture to Support Portfolio of the following fiscal year.
	
	Work performed to deliver the solution mainly spans Phases B, C, D, and
	E. Innovations, research, and alternatives considered and employed
	follow the steps in Phase E. It is just that they do not go through
	rigorous architecture control. The alternatives are constrained by the
	architecture specification. Hence, it is a question of the ability to
	operate within constraints and not about controlling the selection.
	Specification created by following the steps in Phases B, C, and D
	assures appropriate selection.
	
snippet togaf_guides_microservices-architecture_10.3_Organizational_Transformation "10.3      Organizational Transformation"
	
	To successfully embrace cloud-native and MSA requires significant
	organizational transformation. The target state demands single team
	ownership of each module (microservice) and a lean, federated governance
	structure. Each team will autonomously own the entire lifecycle of the
	microservice, and there is a need for coordination to enable all
	capabilities of the desired target state solution.
	
	This new paradigm presents a good opportunity for adopting an
	Agile/DevOps methodology; see The Open Group White Paper: Benefits of
	DevOps Methodology for Microservices Solutions (see Referenced
	Documents).
	
snippet togaf_adm_10_F_Migration_Planning_10.3_Steps "10.3 Steps"
	
	The level of detail addressed in Phase F will depend on the scope and
	goals of the overall architecture effort.
	
	The order of the steps in Phase F as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance.
	
	All activities that have been initiated in these steps must be closed
	during the "Complete the Architecture Development Cycle and Document
	Lessons Learned" step (see 10.3.7 Complete the Architecture Development
	Cycle and Document Lessons Learned).
	
	The steps in Phase F are as follows:
	
	-   Confirm management framework interactions for Implementation and
	    Migration Plan (see 10.3.1 Confirm Management Framework Interactions
	    for the Implementation and Migration Plan)
	-   Assign a business value to each work package (see 10.3.2 Assign a
	    Business Value to Each Work Package)
	-   Estimate resource requirements, project timings, and
	    availability/delivery vehicle (see 10.3.3 Estimate Resource
	    Requirements, Project Timings, and Availability/Delivery Vehicle)
	-   Prioritize the migration projects through the conduct of a
	    cost/benefit assessment and risk validation (see 10.3.4 Prioritize
	    the Migration Projects through the Conduct of a Cost/Benefit
	    Assessment and Risk Validation )
	-   Confirm Architecture Roadmap and update Architecture Definition
	    Document (see 10.3.5 Confirm Architecture Roadmap and Update
	    Architecture Definition Document)
	-   Complete the Implementation and Migration Plan (see 10.3.6 Complete
	    the Implementation and Migration Plan)
	-   Complete the architecture development cycle and document lessons
	    learned (see 10.3.7 Complete the Architecture Development Cycle and
	    Document Lessons Learned)
	
snippet togaf_guides_microservices-architecture_10.4.1_Data_Transformation "10.4.1 Data Transformation"
	
	Proper data transformation underpins a successful microservices
	solution. Persistent data storage will be part of the framework (outer
	architecture), but needs to be similarly distributed, elastically
	scalable, and resilient as the microservices themselves, to achieve the
	desired benefits of an MSA. This phase should define the transformations
	necessary in the data layer of the architecture to meet the needs listed
	above.
	
snippet togaf_adm_10_F_Migration_Planning_10.4_Outputs "10.4 Outputs"
	
	The outputs of Phase F may include, but are not restricted to:
	
	-   Implementation and Migration Plan, Approved (see the TOGAF Standard
	    — Architecture Content), including:
	    -   Implementation and Migration Strategy
	    -   Project and portfolio breakdown of the implementation:
	        -   Allocation of work packages to project and portfolio
	        -   Capabilities delivered by projects
	        -   Relationship to Target Architecture and any Transition
	            Architectures
	        -   Milestones and timing
	        -   Work breakdown structure
	    -   Project charters (optional):
	        -   Related work packages
	        -   Business value
	        -   Risk, issues, assumptions, dependencies
	        -   Resource requirements and costs
	        -   Benefits of migration
	        -   Estimated costs of migration options
	-   Finalized Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Finalized Transition Architectures, if any
	-   Finalized Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content)
	-   Finalized Architecture Roadmap (see the TOGAF Standard —
	    Architecture Content)
	-   Re-Usable ABBs (see the TOGAF Standard — Architecture Content)
	-   Requests for Architecture Work (see the TOGAF Standard —
	    Architecture Content) for a new iteration of the ADM cycle (if any)
	-   Implementation Governance Model (if any) (see the TOGAF Standard —
	    Architecture Content)
	-   Change Requests for the Architecture Capability arising from lessons
	    learned
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.4_Realizing_the_Solution "10.4      Realizing the Solution"
	
	Contractually, this is the post-rollout, warranty period. Depending on
	the solution delivery method used in the Enterprise, this may be a
	parallel path to Guiding Delivery. It is the period of putting the
	solution in the hands of the beneficiaries (customers, end-users,
	support personnel, partners, etc.). The engagement of the Architecture
	Practitioner comes to a conclusion or shifts gear only when the solution
	is put to use. Depending on the appetite of the Enterprise, successful
	usage may be defined as the first 30, 60, or 90 days.
	
	At the end of this period, the Architecture Practitioner initiates a gap
	analysis between the realized architecture and the Baseline Architecture
	to be used for solution delivery. It is only at the end of this analysis
	that a determination can be made about releasing key resources – the
	project manager, the implementation architect, supplier representative,
	technology resources reserved for developing the solution, etc. Closure
	of the Architecture Project is achieved as soon as the Implementation
	Practitioner accepts the superior architecture. However, the oversight
	provided by the Architecture Practitioner is retained until the solution
	delivery completion criteria are met.
	
	Use the basis provided by the Architecture Project to report the value
	realized from time to time. Document the lessons learned, mainly the
	gaps in the description of the superior architecture that were filled
	while delivering the Solution Architecture. Document controls and
	constraints that accelerated overall delivery of the solution.
	
	Update the cascading impact of the project to the EA Landscape and
	roadmap. As needed, validate, close and update the Enterprise backlog.
	
snippet togaf_guides_microservices-architecture_10.4_Technology_Transformation "10.4      Technology Transformation"
	
	Cloud-native and microservice solutions adopt a polyglot paradigm. This
	opportunity introduces a heterogeneous technology landscape in the
	target state. A further complexity is that most of the distributed
	modular solutions have a dual reference architecture: one for the module
	or microservices (sometimes called inner architecture), and the other
	for the framework (aka outer architecture) in which it is deployed. Each
	of these has their unique characteristics and constraints. Hence the
	technology transformation plans and roadmaps need to account for the
	following:
	
	-   Transformation from (nearly) homogeneous to a heterogeneous
	    technology landscape
	-   Transformation from a single reference architecture to a dual
	    reference architecture
	-   Delivery and deployment infrastructure transformation
	
snippet togaf_adm_10_F_Migration_Planning_10.5_Approach "10.5 Approach"
	
	The focus of Phase F is the creation of an Implementation and Migration
	Plan in co-operation with the project and portfolio managers.
	
	Phase E provides an incomplete Architecture Roadmap and Implementation
	and Migration Plan that address the Statement of Architecture Work. In
	Phase F this Roadmap and the Implementation and Migration Plan are
	integrated with the enterprise's other change activity.
	
	Activities include assessing the dependencies, costs, and benefits of
	the various migration projects within the context of the enterprise's
	other activity. The Draft Architecture Roadmap, and Draft Implementation
	and Migration Plan, from Phase E will form the basis of the final
	Implementation and Migration Plan that will include portfolio and
	project-level detail.
	
	The architecture development cycle should then be completed and lessons
	learned documented to enable continuous process improvement.
	
snippet togaf_guides_microservices-architecture_10.5_Artifacts "10.5      Artifacts"
	
	As with the previous phases, there are several models, artifacts, and
	guidelines that are cloud-native and microservice-specific. Those for
	Phase E might include those listed below.
	
	  Artifact                                Purpose
	  --------------------------------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Application Decomposition Methodology   This is the detailed document explaining the methodology (Domain-Driven Design (DDD), etc.) and how it is used to decompose the current state solution to the target state.
	  Technology Guidelines                   This document provides the guidelines on how to use cloud-native and microservices infrastructure.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.5_Project_Request_for_Architecture_Work_Originating_from_the_Wild "10.5      Project Request for Architecture Work Originating from the Wild"
	
	Requests for Architecture Work from the wild for Architecture to Support
	Solution Delivery are typically not done. Instead, there is a
	fully-baked Implementation Project with a proposed solution. In this
	case the Practitioner has to assess the fully-baked solution against the
	superior architecture. This becomes more of fitment analysis with its
	own political implication. See Section 8.6 and Table 10: Example of
	Summary Governance Reporting for a broader discussion and assessment
	reporting example.
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10.6_Conclusion "10.6      Conclusion"
	
	Many Architecture Practitioners fail in their role when supporting
	solution delivery. It is quite normal to confuse their role with SME,
	auditor, stakeholder, and proxy for the Enterprise stakeholder and
	decision-maker. Review Chapter 11 and Section 15.2.
	
	The realized solution is the new baseline. It is the basis for evolving
	and analyzing the roadmap to the Target Architecture. All the
	development that happened in the Enterprise, and the industry, that were
	kept away from impacting solution delivery is added to the assessment
	set. This assessment is the next critical activity the Architecture
	Practitioner performs. It is this work that justifies closure of the
	current Architecture Project, Implementation Project, and resources. It
	also justifies the Request for Architecture Work for the next set of
	initiatives to achieve the target transition state (n+1). Involve all
	stakeholders, decision-makers, and implementers to complete the
	assessment, and gain the sign-off to close the effort.
	
snippet togaf_adm-techniques_INDEX_10_Architecture_Alternatives_and_Trade-Offs "-   10. Architecture Alternatives and Trade-Offs"
	    -   10.1 Concept
	    -   10.2 Method
	        -   10.2.1 Criteria
	        -   10.2.2 Identify Alternatives
	        -   10.2.3 Choose from Alternatives and Define in Detail
	
snippet togaf_adm-techniques_10_Architecture_Alternatives_and_Trade-Offs_10_Architecture_Alternatives_and_Trade-Offs "10. Architecture Alternatives and Trade-Offs"
	
	  -- ----------------------------------------------
	     Chapter Contents: 10.1 Concept | 10.2 Method
	  -- ----------------------------------------------
	
	This chapter describes a technique to identify alternative Target
	Architectures and perform trade-offs between the alternatives.
	
snippet togaf_adm_INDEX_10_F_Migration_Planning "-   10. Phase F: Migration Planning"
	    -   10.1 Objectives
	    -   10.2 Inputs
	        -   10.2.1 Reference Materials External to the Enterprise
	        -   10.2.2 Non-Architectural Inputs
	        -   10.2.3 Architectural Inputs
	    -   10.3 Steps
	        -   10.3.1 Confirm Management Framework Interactions for the
	            Implementation and Migration Plan
	        -   10.3.2 Assign a Business Value to Each Work Package
	        -   10.3.3 Estimate Resource Requirements, Project Timings, and
	            Availability/Delivery Vehicle
	        -   10.3.4 Prioritize the Migration Projects through the Conduct
	            of a Cost/Benefit Assessment and Risk Validation
	        -   10.3.5 Confirm Architecture Roadmap and Update Architecture
	            Definition Document
	        -   10.3.6 Complete the Implementation and Migration Plan
	        -   10.3.7 Complete the Architecture Development Cycle and
	            Document Lessons Learned
	    -   10.4 Outputs
	    -   10.5 Approach
snippet togaf_adm_10_F_Migration_Planning_10_F_Migration_Planning "10. Phase F: Migration Planning"
	
	  -- ---------------------------------------------------------------------------------------------
	     Chapter Contents: 10.1 Objectives | 10.2 Inputs | 10.3 Steps | 10.4 Outputs | 10.5 Approach
	  -- ---------------------------------------------------------------------------------------------
	
	This chapter addresses migration planning; that is, how to move from the
	Baseline to the Target Architectures by finalizing a detailed
	Implementation and Migration Plan.
	
	[]
	
	Figure 10-1: Phase F: Migration Planning
	
snippet togaf_guides_microservices-architecture_10_Phase_E_Opportunities_Solutions "10   Phase E: Opportunities & Solutions"
	
snippet togaf_reference-models_government-reference-model_10_Policy_Performance_Population_and_Innovation "10   Policy, Performance, Population, and Innovation"
	
	Policy, Performance, Population, and Innovation involves the development
	of policy across the government, the provision of statistics for
	population and performance against benchmarks to ensure continuous
	improvement, and incorporates strategic and long-term planning to
	identify future risks, opportunities, and solutions.
	
	[]
	
	Figure 10: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Policy, Performance, Population, and Innovation Sector
	
snippet togaf_togaf-leaders-guide_10_Process_Model_10_Process_Model "10   Process Model"
	
	It is a prerequisite to create a process model for EA Capability to
	integrate with the enterprise’s operational processes and business
	cycle. To create a process model, a logical model of the TOGAF
	Architecture Development Method (ADM) should be transformed to align
	with appropriate processes of the business cycles with which the EA
	Capability interacts.
	
	To provide an actionable process model, the following questions must be
	answered:
	
	-   What are the touch-points with existing enterprise processes?
	-   What are the strategy development processes?
	-   What are the portfolio and program management processes?
	-   What are the project initiation and management processes?
	-   What are the budgeting processes?
	-   What are the operational management processes?
	-   What are the change management processes?
	-   What are the governance processes?
	-   Are there any ERM processes?
	-   How is ADM iteration realized in practice (minimum or first time, by
	    layer)?
	
snippet togaf_business-architecture_business-scenarios_10_Roles "10   Roles"
	
	In order to develop a Business Scenario, there are multiple roles that
	need to be filled. There are roles that can be filled by the same
	person, so the sum of the roles means you may not need that many people.
	Configuring the people to perform the roles is something that should be
	done in the Planning step:
	
	-   Project Manager: plan, execute, and monitor a project that results
	    in a documented and vetted Business Scenario in time and on budget
	-   Business Scenario Consultant: guide the project so that it is moving
	    in the right direction to result in a quality Business Scenario
	-   Business Scenario Analyst: apply data gathering and analysis
	    techniques that result in consensus views of the elements of a
	    Business Scenario
	-   Business Scenario Author: produce a faithful and objective narrative
	    description of the Business Scenario
	-   Business Scenario Editor: take a draft and produce a high-quality
	    publishable document deserving of The Open Group brand identity
	-   Business Scenario Facilitator: conduct well-orchestrated meetings
	    and workshops that result in satisfied and fulfilled attendees
	-   SME Contributors: provide expert advice and content in a specific
	    subject germane to the propose premise
	-   SME Reviewers: review and provide objective and constructive
	    recommendations pertaining to the Business Scenario document
	-   Host: provide the welcome environment for participants that
	    represents the impetus for the effort to reassure attendees to be
	    open
	-   Sponsor: represent the executive-level “buy side” of the importance
	    of moving forward with the effort to reassure attendees that they
	    will support the effort and its follow-up
	-   Workshop Primary and Secondary Questioner: ask probing planned and
	    follow-up questions that pull out information germane to the subject
	-   Workshop Recorders: faithfully capture the answers to questions and
	    notes of workshops and meetings
	
snippet togaf_adm-practitioners_10_Walk_Through_Architecture_to_Support_Solution_Delivery_10_Walk_Through_Architecture_to_Support_Solution_Delivery "10   Walk Through Architecture to Support Solution Delivery"
	
snippet togaf_togaf-leaders-guide_11_Create_the_EA_Capability_Roadmap_11.1_Activities_to_Create_a_Roadmap "11.1      Activities to Create a Roadmap"
	
	Over time several assumptions could change and result in continual
	modification of the target state. This chapter will discuss approaches
	that will assure attaining the objectives, the target state, and keeping
	changes to the target state to an absolute necessity. To establish this
	approach:
	
	-   Create a multi-year project plan for three distinct efforts – EA
	    Capability management, project engagement for delivery of solutions,
	    and maturity assessment and quality of EA Capability
	-   Manage the interaction between purposes of the EA Capability
	-   Manage the interaction between the developing EA Capability and the
	    business cycle being supported
	-   Manage the interaction with architecture domains (business, data,
	    application, technology, and security)
	-   Execute on the governance model with tighter alignment with the
	    operating model of the business
	
	To deliver value, a structured plan is needed – just like a work
	breakdown structure. An architecture capability implementation should be
	treated like any other project. The plan will have milestones,
	deliverables, and measures. The objective is to have a plan to sell
	value, not metrics, build organizational maturity not just EA
	Capability, and align with the rhythm of the business.
	
	Establishing and enhancing an EA Capability is a multi-year initiative.
	The business environment morphs with time. A purpose-driven architecture
	generated based on an initial gap assessment is validated and updated
	each year. This periodic update also impacts the EA Capability. Rate and
	depth of change for the EA Capability may not be as significant as the
	changes to the enterprise. The roadmap for the EA Capability is also
	updated from time to time. Allocation of architects to purpose-based
	projects and development of the EA Capability presents too many moving
	parts for the Leader. One of the common mistakes an EA Capability Leader
	makes is not realizing the need for a project manager to keep them close
	and true to plans, manage change, and ensure quality and timely
	delivery.
	
	By definition, the roadmap presents alternative options and the
	preferred route from current state to target state. When modifications
	are made year-over-year, it might give an impression of chasing a moving
	target. The EA team should be able to trace the changes to the roadmap
	or creation of a new roadmap to the source of change; invariably the
	business environment and context change. Another mistake made is not
	retaining the rationale behind selection of a path. When driving change,
	it is important to keep track of the triggers and the interpretation.
	
	One of the common mistakes to avoid is not creating a dependency matrix
	of the organization that takes into account governance reporting, as
	shown in Table 6, and touch-points with ERM, as shown in Table 7, to
	manage effort and flow of funds to initiate, execute, and achieve target
	state. Other dependencies are internal to architecture capability –
	detail of which business process, software and applications
	architecture, master data (customers, partners, suppliers, inventory,
	pricing) are available.
	
snippet togaf_business-architecture_business-scenarios_11.1_Checklist_Premise_Formulation "11.1      Checklist – Premise Formulation"
	
	• Have a simple premise
	
	• Have initial capstone question
	
	• Have a candidate sponsor
	
	• One or more triggers present:
	
	•     No clear understanding of business need
	
	•     Problem looking for a solution
	
	•     Solution looking for a problem
	
	•     Dominance of technology speak
	
	•     Target market not identified
	
	•     “We just don’t know how to start”
	
	• Identified target buy-side participants
	
	• Identified target customer-side participants
	
	• Engaged target supply-side participants
	
	• Engaged target customer-side participants
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11.1_Failure_Pattern_Missing_the_Purpose "11.1      Failure Pattern: Missing the Purpose"
	
	As clearly articulated earlier in this Guide, different purposes require
	different architecture. The actual work product and analysis project to
	produce a view demonstrating to a change leader how a candidate
	architecture addresses agility for the purpose of strategy is radically
	different than for the purpose of solution deployment. Practitioners
	must adapt the basic structure and concepts to different purposes. Too
	much advice masks the essential differences by using terms such as
	high-level or aspirational or conceptual or logical. A good Practitioner
	will know how to distinguish high-level work for the purpose of strategy
	from high-level work for the purpose of solution delivery.
	
	Every stakeholder and every concern are addressed in every purpose.
	
	Practitioners miss the purpose when they tell themselves stories about
	breadth, depth, and timeframe. As discussed in Section 3.2.1, there is a
	set of rough guidelines regarding breadth, level of detail, and planning
	horizon. Further, regardless of the exact parts of the EA Landscape that
	must be addressed by any particular architecture development project, a
	Practitioner will find themselves without clean edges.
	
	Architecture to support a purpose is typically aligned to support
	different points in the business cycle, and required to inform different
	decisions, as all work must be aligned to the purpose at hand. This may
	change the key work product’s essential purpose, but is unlikely to
	substantially change which components in the architecture must be
	analyzed.
	
snippet togaf_guides_microservices-architecture_11.1_Microservices_Work_Packages "11.1      Microservices Work Packages"
	
	Work packages or projects related to microservices that could appear in
	the Implementation and Migration Plan include:
	
	-   Creation of an environment in which microservices can be developed
	    and deployed, and can execute
	-   Formation of development and operations teams, or DevOps teams, that
	    will be responsible for one or more microservices
	-   Development of a microservice
	-   Operation of a microservice
	-   Modification of non-microservice-based systems to interface with
	    microservices
	
	A microservice implements an ABF. A business capability could be
	provided by a single microservice or a group of related microservices.
	
	Formation of a development team, formation of an operations team,
	microservice development, microservice operation, and modification of
	other systems to work with microservices would likely be specified as
	part of a Capability Architecture, which provides an organizing
	framework for change activity and the development of effective
	Architecture Roadmaps realizing capability increments.
	
	Creation of a microservices environment might be specified as part of a
	Capability Architecture or as part of a Segment Architecture, which
	provides an organizing framework for operational and change activity and
	allows for direction-setting and the development of effective
	Architecture Roadmaps at a program or portfolio level.
	
snippet togaf_adm_11_G_Implementation_Governance_11.1_Objectives "11.1 Objectives"
	
	The objectives of Phase G are to:
	
	-   Ensure conformance with the Target Architecture by implementation
	    projects
	-   Perform appropriate Architecture Governance functions for the
	    solution and any implementation-driven architecture Change Requests
	
snippet togaf_reference-models_government-reference-model_11.1_Shared_Services_Taxonomy "11.1      Shared Services Taxonomy"
	
	  Sector            Function                        Service                                                                                                                                                                               Description
	  ----------------- ------------------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Shared Services   People and Corporate Services   Activities that combine or consolidate people and enterprise-wide needed support services.                                                                                            
	                                                    People and Organizational Change                                                                                                                                                      Encompasses the processes that surround altering the government’s strategy, processes, culture, and technology.
	                                                    Culture and Modernization                                                                                                                                                             Refers to activities used to update people services and manage employee culture.
	                                                    Human Resources                                                                                                                                                                       Refers to activities associated with the management of employees including hiring, training, and communication.
	                                                    Business Administration Support                                                                                                                                                       Refers to all activities that involve overseeing and supervising business operations.
	                                                    Business Continuity                                                                                                                                                                   Involves the creation of systems in order to deter potential threats.
	                                                    Compliance                                                                                                                                                                            Refers to the direct monitoring and oversight of people guidelines and regulations.
	                                                    Employee Health and Safety                                                                                                                                                            Consists of activities used to design, develop, and implement employee health and safety programs.
	                                                    Soft Facilities Management                                                                                                                                                            Refers to the management of non-essential facilities to make the workplace more comfortable and enjoyable.
	                    Communications                  Growth, provision, and management of information, regulation, and media services to support the provision of communication services.                                                  
	                                                    External Media                                                                                                                                                                        Refers to the movement of information between the government and the external environment.
	                                                    Internal Communications                                                                                                                                                               The regulation, growth, and management of industries that enable the transmission of information to domestic citizens.
	                                                    Marketing                                                                                                                                                                             The provision of content and presentation of marketing material distributed through any medium.
	                                                    Web Design                                                                                                                                                                            Refers to the design of interactive web content.
	                                                    International Communications                                                                                                                                                          The regulation, growth, and management of industries that enables the transmission of information abroad.
	                    Commercial Services             Activities related to sourcing, managing, and procuring contracts with vendors, suppliers, partners, and third parties to enable the development of new projects and opportunities.   
	                                                    Market Engagement                                                                                                                                                                     Refers to the activities by which the government engages with suppliers prior to procurement of a project.
	                                                    Market Creation                                                                                                                                                                       Refers to the elimination of trade barriers and provision of property rights to allow the development of a market for a good or service.
	                                                    Commercial Negotiations                                                                                                                                                               The identification, management, and conduct of strategic discussions to develop new opportunities.
	                                                    Contract Management                                                                                                                                                                   The creation, execution, and analysis of contracts with partners and suppliers.
	                                                    Procurement                                                                                                                                                                           Refers to the assessment of risk, evaluation of alternative options, award of contract to a supplier. and ongoing management of contracts for a product or service.
	                    Transformation                  The complete reassessment and overhaul of a function.                                                                                                                                 
	                                                    Business Processes                                                                                                                                                                    Refers to the monitoring, assessment, and enhancement of existing business processes, activities, and functions.
	                                                    IT Operations                                                                                                                                                                         Comprises processes and services administered by the IT department.
	                                                    Information Management                                                                                                                                                                Refers to activities that facilitate collection and migration of data and information.
	                                                    Information Security                                                                                                                                                                  Refers to the protection of information and systems from unauthorized access, use, modification, or destruction.
	                                                    Digital Government                                                                                                                                                                    Refers to the use of information and technology to provide digital offerings.
	                                                    Enterprise Architecture                                                                                                                                                               Activities used to define current, transition, and target strategies for an organization’s processes, people, and technology.
	                                                    Data Protection                                                                                                                                                                       Activities associated with the protection, collection, compliance, and distribution of personal data.
	                                                    Portfolio and Performance Management                                                                                                                                                  Supports the administration and effectiveness of investments and assets held by the government.
	                    Finance Hub                     Financial center whereby a large number and variety of financial services institutions are headquartered.                                                                             
	                                                    Standardized Processes                                                                                                                                                                Establishes a set of validated and accepted procedures that define appropriate and reliable practices.
	                                                    Analytics                                                                                                                                                                             All forms of data analysis from extremely large, complex data sets (Big Data) that are manipulated through to sparse rare-occurrence data.
	                                                    Reporting                                                                                                                                                                             Includes provision of financial information, reporting, and analysis of financial transactions.
	                                                    Transactional Services                                                                                                                                                                Oversees business transactions and deals such as mergers or acquisitions.
	                                                    Debt Management                                                                                                                                                                       The process of establishing and executing a strategy for managing debts, achieving risk and cost objectives, and meeting any other debt management goals set.
	                                                    Pension Fund Administration (PFA)                                                                                                                                                     Responsible for opening Retirement Savings Accounts (RSA), the payment of retirement benefits, and accounting for all transactions relating to pension funds.
	                                                    Payroll                                                                                                                                                                               The total compensation to be paid to employees for a set period of time.
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11.2.1_Architecture_after_Decision "11.2.1 Architecture after Decision"
	
	This Guide is designed to assist Practitioners to deliver useful
	architecture. Architecture produced after decisions is not only late but
	may cause conflict. At best, the architecture will validate the
	decision. Given the decision has already been made by leaders with the
	authority to make the decision, validation is pointless. At worst, the
	architecture will demonstrate the leaders made the wrong decision. It is
	technically useful to gain this knowledge and perform a course
	correction. The damage to the EA team and wasted time and effort
	executing the next steps following the decision are unlikely to be
	compensated by a better decision.
	
	Practitioners adept at establishing value will be keenly aware of the
	impact time has on almost every value calculation. Lastly, Practitioners
	adept at estimating the cost of change will be keenly aware of how
	expensive misfires are on the ability of an organization to execute an
	effective change.
	
	Few activities a Practitioner can perform are as dangerous as
	architecting after decision.
	
snippet togaf_adm_11_G_Implementation_Governance_11.2.1_Reference_Materials_External_to_the_Enterprise "11.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_adm_11_G_Implementation_Governance_11.2.2_Non-Architectural_Inputs "11.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	
snippet togaf_adm_11_G_Implementation_Governance_11.2.3_Architectural_Inputs "11.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see TOGAF Standard — Architecture
	    Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Requirements Specification (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Architectural requirements
	    -   Gap analysis results (from Business, Data, Application, and
	        Technology Architectures)
	-   Architecture Roadmap (see the TOGAF Standard — Architecture Content)
	-   Architecture Governance Framework (see the TOGAF Standard — EA
	    Capability and Governance)
	-   Implementation Governance Model (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Contract (standard) (see the TOGAF Standard — EA
	    Capability and Governance)
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content) identified during Phases E and F
	-   Implementation and Migration Plan (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_business-architecture_business-scenarios_11.2_Checklist_Plan "11.2      Checklist – Plan"
	
	• Named Project Manager
	
	• Named Business Scenario Consultant
	
	• Selected data gather mechanisms
	
	• Set project constraints:
	
	•     Time
	
	•     People
	
	•     Money
	
	• Resourced engagement activities
	
	• Resourced logistic activities
	
	• Resourced other roles
	
	• Held initial team meeting
	
	• Set up the dependencies
	
	• Established a reasonable timeline
	
	• Documented in a project plan
	
	• Resourced logistic activities:
	
	•     Meeting and workshop logistics
	
	•     Practice sessions
	
	•     Staging
	
	•     Contingencies
	
	•     Follow-ups
	
	•     Greasing the wheels
	
	•     Thank you notes
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11.2_Failure_Pattern_Missing_the_Business_Cycle "11.2      Failure Pattern: Missing the Business Cycle"
	
	Most leaders are interested in receiving effective advice about complex
	decisions. Usually, the Practitioners are waiting for an invitation to a
	planning process that will never come. Leaders may be surrounded by
	parochial champions who wish to pitch their pet projects. In response,
	they actively seek to reduce involvement in planning processes to those
	who provide useful, balanced advice and those they wish to hold
	accountable for the change.
	
	Delivering architecture to support the business cycle requires being
	ahead of decisions. The Practitioner works ahead of the planning cycle
	(see Figure 4). For many Practitioners, working ahead of the planning
	cycle is an uncomfortable position. They must be focused on preparing
	for activities that no one else is thinking about.
	
	For example, Architecture to Support Portfolio facilitates the budget
	process for an organization that operates an annual budget process. With
	such a cycle, the budget finalization is likely done near the end of the
	third quarter. This requires the budget planning to be done near the end
	of the second quarter, which requires the first draft of the candidate
	Target Architecture and candidate roadmap to be available for the second
	quarter. Stakeholders and decision-makers are then able to use the
	candidate architecture and candidate roadmap in planning and preparing
	their budget submission and defending their submission in any resulting
	budget negotiations. The Practitioner then needs to understand their
	candidate material is used, stretched, and changed through the entire
	budget preparation and negotiation. In short, the Practitioner is
	involved in iterating through Phase E and F through the second and third
	quarter.
	
	Practitioners who are unfamiliar with the give-and-take typical in most
	organizations’ planning processes will wait for clarity or decision.
	Both are only available at the end of the planning process, not in the
	middle. As a result, the Practitioner has missed their place in the
	business cycle.
	
snippet togaf_adm_11_G_Implementation_Governance_11.2_Inputs "11.2 Inputs"
	
	This section defines the inputs to Phase G.
	
snippet togaf_guides_microservices-architecture_11.2_Intentional_and_Emergent_Architecture "11.2      Intentional and Emergent Architecture"
	
	The Open Agile Architecture™ Standard, also known as the O-AA™ Standard
	(see Referenced Documents) views architecture development as a
	combination of intentional and emergent architecture. The description of
	Phase F in the TOGAF Standard is written using the language of
	intentional architecture, but the TOGAF framework can be used for agile
	architecture developments, where there is a greater focus on emergent
	architecture. This will often be the case for cloud-native and MSA.
	
	Creation of a microservices environment and formation of a DevOps team
	are activities that would normally be identified as work packages that
	appear in an Implementation and Migration Plan developed in Phase F,
	using an intentional approach. Microservice development and modification
	of other systems might also be intentionally planned activities.
	Alternatively, they might be emergent activities, with microservices
	created to meet business needs without being scheduled on the
	Implementation and Migration Plan. The guardrails defined for an agile
	development, supported by Enterprise Architecture governance, should
	make it clear whether this is allowed.
	
snippet togaf_reference-models_government-reference-model_11.2_Key_Drivers_for_Change "11.2      Key Drivers for Change"
	
	Shared Services will also change influenced by common drivers that the
	government will need to consider.
	
	People Reform
	
	To meet new demands and public sector needs, there is a requirement for
	changes in the composition of the workforce through modernizing people
	acquisition, training, and retention. Intellectual property is also the
	differentiating and competitive factor in the public sector. With
	shortages in younger, tech-savvy staff, training is therefore key,
	including in the public sector.
	
	Digitalization
	
	Advances in cognitive computing and blockchain can be leveraged to
	increase customer interactions and increase personalized services in
	order to tackle more complex problems and improve customer self-service.
	Virtual assistants can also be utilized in order to allow staff to focus
	on challenging tasks, leading to an increase in user experience and
	satisfaction across the board.
	
	Blockchain can be used to manage data and digital assets, and create a
	digital audit trail which can subsequently be used to optimize supply
	chains, improve procurement, and maintain employment, deeds, and
	suchlike records.
	
	Enhance Technology Capabilities
	
	Digitization increases the ability to enable collaboration between
	functions and sharing of important information. This will enable the
	potential for a significant increase in efficiency with the help of
	digital tools.
	
	This will include embracing the following technologies:
	
	-   Next-Generation ERP Systems: procuring these will enable governments
	    to create holistic and improved customer experience across front and
	    back-office processes
	-   Automation AI, RPA, and Automation: reduce the amount of manual work
	    and remove the administrative burden from employees so they can
	    focus on functional priorities
	-   Cloud: the cloud enables customer services and operations to be more
	    dynamic and flexible – enhancing the ability to test new projects
	    that are cost-effective and low-risk and allowing the government to
	    use technology to meet customer demands more quickly
	
snippet togaf_togaf-leaders-guide_11_Create_the_EA_Capability_Roadmap_11.2_Linking_the_EA_Value_Map_to_the_Enterprise_Value_Map "11.2      Linking the EA Value Map to the Enterprise Value Map"
	
	The value of EA is realized over a period. See the sample value driver
	document for business (Figure 20) and EA (Figure 21) below. Either a
	pictorial or verbal description of the value delivered by the EA
	Capability and the personnel constituting the EA Capability team along a
	timeline will be useful in creating the plan.
	
	An EA Capability Leader requires a tight engagement with business
	leaders to understand, anticipate, and provide a path to deliver on
	their vision. Creating a structure that defines periodic engagement
	related to strategic concerns and operational concerns goes a long way
	in managing the workload of the team providing the EA Capability. The
	structure or engagement plan allows for shifting focus for one or more
	of the architects and analysts in the team. The EA Capability Leader
	should track the depth of engagement and depth of detail, completion of
	architecture artifacts, and value. As neither EA Capability nor value
	can be delivered in one step, tracking earned value is key to validating
	alignment to the roadmap. Forrester Research on EA value summarizes this
	best:
	
	“Your progress tracker should be able to quantify what is needed (gaps),
	prescribe where we should be by what timeline, why this prescription is
	better and how it can be put to practice, and finally how to collaborate
	with other architects to translate these ‘prescriptions’ into reality.
	Complement these with an innovation and ‘get ahead’ plan.”
	
	It is the communication plan that demonstrates all the detailed work
	undertaken by the architects. EA value realization communication should
	follow both the project release and planning horizon cadence. For
	example, if the enterprise has a quarterly project release schedule and
	follows a January to December fiscal funding plan, then the EA value
	(cost elimination, revenue increase, or value realized) communications
	should be sent in between the release dates of the two consecutive
	project schedules. Likewise, communications for future activities should
	be sent well before the beginning of the annual planning cycle.
	
	Communicating EA Capability maturity may sound like an academic
	communication. However, a metric to show the value improvement over the
	previous communication period would suddenly make the maturity
	communication more attractive and meaningful. Complement the cadence of
	business leader engagement by communicating how the maturity of the
	capability improved the efficiency of the organizational initiatives.
	
	Members of the team providing EA Capability have two different day jobs
	– one to produce the artifacts and another to engage actively with
	technology and business leaders. The roadmap should consider the
	capacity of the team; articulate milestone dates to deliver on the
	objectives, and define appropriate checks and balances for the EA
	Capability and the projects it influences.
	
	[]
	
	Figure 20: Sample Business Objective Diagram
	
	[]
	
	Figure 21: Modified Version of Business Value Diagram to Represent EA
	Value
	
	A strategic enterprise roadmap links go-to market strategy milestones to
	business capability maturity milestones along with its related
	technology development and learning of personnel involved in the
	realization of the strategy. It is ideal if the team providing the EA
	Capability helped create this roadmap and supports all the data behind
	it. In situations where go-to market and business capability maturity
	milestones are predefined, having access to this view will inform the EA
	Capability team to create its roadmap for technology research and
	delivery.
	
	Other dimensions to address on the roadmap are as follows:
	
	-   When each version of gap analysis findings and recommendations will
	    be published
	-   When each version of the decision framework along with
	    decision-ready recommendations will be published – it is preferable
	    to align this with the planning horizon and project initiation or
	    ideation cycles
	-   EA Capability improvement (recruitment, training)
	-   A plan to gain visibility into developments within and outside the
	    enterprise impacting the EA Landscape
	-   A plan to acquire the right tools to use for EA
	-   A plan to use modern tools to be collaborative and communicative
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.1_Confirm_Scope_and_Priorities_for_Deployment_with_Development_Management "11.3.1 Confirm Scope and Priorities for Deployment with Development Management"
	
	-   Review migration planning outputs and produce recommendations on
	    deployment
	
	-   Identify Enterprise Architecture priorities for development teams
	
	-   Identify deployment issues and make recommendations
	
	-   Identify building blocks for replacement, update, etc.
	
	-   Perform gap analysis on Enterprise Architecture and solutions
	    framework
	
	    The gaps in the existing enterprise solutions framework need to be
	    identified and the specific SBBs required to fill these gaps will be
	    identified by the Solution Architects. These SBBs may have a
	    one-to-one or many-to-one relationship with the projects. The
	    Solution Architects need to define exactly how this will be done.
	    There may be other projects working on these same capabilities and
	    the Solution Architects need to ensure that they can leverage best
	    value from these investments.
	
	-   Produce a gap analysis report
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.2_Identify_Deployment_Resources_and_Skills "11.3.2 Identify Deployment Resources and Skills"
	
	The project resources will include the development resources which will
	need to be educated in the overall Enterprise Architecture deliverables
	and expectations from the specific development and implementation
	projects.
	
	The following considerations should be addressed in this step:
	
	-   Identify system development methods required for solutions
	    development
	
	    Note:
	        There are a range of systems development methods and tools
	        available to the project teams. The method should ideally be
	        able to interoperate with the architecture outputs; for example,
	        generate code from architecture artifacts delivered to date.
	        This could be achieved through the use of modeling languages
	        used for the Enterprise Architecture development that may be
	        captured as inputs to the systems development tools and thereby
	        reduce the cost of solutions development.
	-   Ensure that the systems development method enables feedback to the
	    architecture team on designs
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.3_Guide_Development_of_Solutions_Deployment "11.3.3 Guide Development of Solutions Deployment"
	
	-   Formulate project recommendation
	
	    For each separate implementation and deployment project, do the
	    following:
	
	    -   Document scope of individual project in impact analysis
	    -   Document strategic requirements (from the architectural
	        perspective) in impact analysis
	    -   Document Change Requests (such as support for a standard
	        interface) in impact analysis
	    -   Document rules for conformance in impact analysis
	    -   Document timeline requirements from roadmap in impact analysis
	
	-   Document Architecture Contract
	    -   Obtain signature from all developing organizations and
	        sponsoring organization
	
	-   Update Enterprise Continuum directory and repository for solutions
	
	-   Guide development of business & IT operating models for services
	
	-   Provide service requirements derived from Enterprise Architecture
	
	-   Guide definition of business & IT operational requirements
	
	-   Carry out gap analysis between the Solution Architecture and
	    operations
	
	-   Produce Implementation Plan
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.4_Perform_Enterprise_Architecture_Compliance_Reviews "11.3.4 Perform Enterprise Architecture Compliance Reviews"
	
	-   Review ongoing implementation governance and Architecture Compliance
	    for each building block
	-   Conduct post-development reviews
	-   Close development part of deployment projects
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.5_Implement_Business_and_IT_Operations "11.3.5 Implement Business and IT Operations"
	
	-   Carry out the deployment projects including: IT services delivery
	    implementation; business services delivery implementation; skills
	    development & training implementation; communications documentation
	    publication
	-   Publish new Baseline Architectures to the Architecture Repository
	    and update other impacted repositories, such as operational
	    configuration management stores
	
snippet togaf_adm_11_G_Implementation_Governance_11.3.6_Perform_Post-Implementation_Review_and_Close_the_Implementation "11.3.6 Perform Post-Implementation Review and Close the Implementation"
	
	-   Conduct post-implementation reviews
	-   Publish reviews and close projects
	
	Closure on Phase G will be when the solutions are fully deployed once.
	
snippet togaf_business-architecture_business-scenarios_11.3_Checklist_Gather "11.3      Checklist – Gather"
	
	• Questions are crafted
	
	• Data that is openly available is gathered
	
	• Preprocessed data that is openly available
	
	• Developed strawman of the key elements
	
	• Data gathering material prepared
	
	• Participants named
	
	• Participants on board
	
	• Taken steps to maintain desired anonymity
	
	• Considered:
	
	•     Workshop(s)
	
	•     Surveys
	
	•     Interviews
	
	•     Focus groups
	
	•     Market research, etc.
	
	If workshop:
	
	• Have an agenda
	
	• Workshop scripted and rehearsed:
	
	•     Facilitator and host
	
	•     Questioners and recorders
	
	• Room prepared (as appropriate):
	
	•     Flip charts
	
	•     U-shape table
	
	•     White board
	
	•     Conference hook-up
	
	• Invitations and instructions sent to SMEs
	
	• Prepared to capture all information electronically
	
	• Considered two separate workshops (buy-side and supply-side)
	
snippet togaf_togaf-leaders-guide_11_Create_the_EA_Capability_Roadmap_11.3_EA_Capability_Model "11.3      EA Capability Model"
	
	The ratio of projects or resources employed in the enterprise is
	normally several magnitudes higher than the capacity of the team
	providing the EA Capability. To replicate key efforts of the team
	providing the EA Capability, a capability model provides the template
	with which the EA function can be scaled to cover the entire enterprise.
	
	While there are some publicly available EA Capability models, such as
	NASCIO or the World-Class Enterprise Architecture White Paper, none of
	them can be directly applied to an enterprise. Context under which they
	were developed never really matches an enterprise, but they provide a
	great foundation. Experience shows that using existing capability models
	in the enterprise or publicly available models as a reference or base
	accelerates assessment, delivery, and adoption. Analyze these models in
	terms of the EA Capability context and purpose before selecting the
	base. Starting with a single model and adding or modifying to meet
	specific needs of the enterprise vastly reduces time to finalize.
	
	When the capability models presented in the World-Class Enterprise
	Architecture White Paper or the one shown in this Guide are not
	adequate, start with the TOGAF ADM phases as the base: manage business
	architecture, manage data architecture, identify architectural
	opportunities, and identify alternate viable options.
	
	EA is not a standalone capability. EA is supported by functions like HR,
	marketing, and product research. The capability model should specify
	such supporting functions and the extent to which they are leveraged. In
	the earlier chapters of this Guide, a need for engagement modes with all
	stakeholders of the EA Capability was addressed. Specific attention was
	paid to initiating projects and the factors that influenced creation of
	projects.
	
	To complete addressing all aspects for managing EA as a capability, the
	Leader should:
	
	-   Define and measure the team’s ability to respond to changes in
	    business environment, based on what has been learnt from collective
	    experiences of the team
	-   Define practices for planning, developing, collaborating, governing,
	    and managing architecture knowledge for the enterprise
	-   Identity, specify, and rollout an approach to training,
	    infrastructure (tools and equipment), and support needs for the team
	    providing the EA Capability
	-   Establish an environment to handle errors, reflect on efforts to
	    improve continuously, and an ability to use data insights for
	    decision-making
	-   While addressing the above dimensions, care must be taken to balance
	    processes becoming shackles that anchor EA efforts to the need for
	    agility and culture to respond to business stimuli; the measurement
	    of success should be about assuring quality of work (providing
	    decision-ready recommendations) with cost-optimized processes
	
	Here are some of the sample models that could help:
	
	[]
	
	Figure 22: Sample EA Capability Model – I[25]
	
	This model aligns to purpose. The purpose could be focused on operating
	EA or delivering value from EA viz., operational capabilities, and
	separates common Foundational Capabilities or General Business
	Capabilities. The capabilities required to support each of the purposes
	are not presented in this Guide.
	
	[]
	
	Figure 23: Sample EA Capability Model – II
	
	The model shown in Figure 23 aligns to classic architecture domains and
	development of architecture to support strategy. When applied to an
	enterprise that manufactures packaging material for food products,
	“monitor future trends” would mean how to improve the shelf life of
	products using techniques developed for defense use. Inputs from such
	monitoring could call for changes to business and technology
	architecture – retooling the plants, scouting for new raw material
	suppliers, and new processes. Obsolescence of a product can arise from
	regulatory changes – like a ban on use of plastic bags or CFC-based
	coolants in air conditioners and refrigerators. In this connected world
	of distributed sourcing and just-in-time manufacturing, a focus on IT
	infrastructure is required to track any impacts arising from disruptions
	in the supply chain.
	
	While a capability model makes it easy to establish an approach to
	measure the efficiency and outcome of the EA efforts, alternative
	approaches like process control or Balanced Scorecard are equally
	effective.
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11.3_Failure_Pattern_Not_Doing_Architecture "11.3      Failure Pattern: Not Doing Architecture"
	
	Practitioners will often fulfill multiple roles in the architecture
	development and change process. Chapter 15 identifies stakeholder, SME,
	architect, implementer, and auditor as the essential roles in
	architecture development. Practitioners will typically act as an agent
	for the stakeholder, making decisions by proxy through their
	understanding of the set of stakeholders’ preferences. Many
	Practitioners, by way of their growth path, would have expert knowledge
	in specific domains; they will tend to provide advice and guidance as
	SMEs to stakeholders, other architects, and implementers. Some
	Enterprise’s structure may demand a Practitioners to act as implementer.
	An implementer normally pays attention to details like product
	selection, configuration challenges, assuring quality and repeatability,
	etc. These tasks are often sufficiently time-consuming that the
	Practitioner does not have time to perform architecture.
	
	Many EA teams fall into the trap of performing implicit architecture.
	The Practitioner is so busy acting as a stakeholder’s agent, SME, and
	implementer that the architecture is never described and approved by a
	stakeholder. A work product that is really implementation design, and
	implementation specification and standards definition is provided as the
	end result of the “Architecture Project”. These work products are the
	end result – they are not architecture.
	
	Chapter 15 will discuss the need to deeply review implementation work
	products that exist unsupported by architecture description, views, and
	architecture specification. Bluntly, what evidence can a Practitioner
	provide that the implementation is in conformance with the architecture,
	provides the best available approach to addressing the stakeholders’
	preferences and the organization’s mission, vision, value proposition,
	and objectives? The only choice is compliance by assertion.
	
	Compliance by assertion is rife with personal bias and “tourist
	dashboard decisions”.
	
	Practitioners deliver value not by tripping over the correct
	implementation but by facilitating the complete set of stakeholders to
	understand the implications of their preferences in the context of the
	Enterprise’s mission, vision, value propositions, and objectives.
	Whether this is done on the easy path by preparing views addressing
	concerns or by facilitating trade-off between competing decisions is
	immaterial. The absence of understanding means the architecture, and the
	value it enables, is fragile. The moment the Practitioner is unengaged
	on landscape, there can be no expectation that the value will be
	sustained by operational teams and future implementation teams who are
	unaware of either preference, priority, or traceability to value.
	
	Without an architecture, the Enterprise has no choice but to jump to
	Phase G – completely unprepared, with no ability to exercise
	implementation governance.
	
	Not performing architecture to support decision-makers and implementers
	is the most pernicious practice a Practitioner can perform.
	
snippet togaf_adm_11_G_Implementation_Governance_11.3_Steps "11.3 Steps"
	
	The level of detail addressed in Phase G will depend on the scope and
	goals of the overall architecture effort.
	
	The order of the steps in Phase G as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance.
	
	The steps in Phase G are as follows:
	
	-   Confirm scope and priorities for deployment with development
	    management (see 11.3.1 Confirm Scope and Priorities for Deployment
	    with Development Management)
	-   Identify deployment resources and skills (see 11.3.2 Identify
	    Deployment Resources and Skills )
	-   Guide development of solutions deployment (see 11.3.3 Guide
	    Development of Solutions Deployment )
	-   Perform Enterprise Architecture Compliance reviews (see 11.3.4
	    Perform Enterprise Architecture Compliance Reviews)
	-   Implement business and IT operations (see 11.3.5 Implement Business
	    and IT Operations)
	-   Perform post-implementation review and close the implementation (see
	    11.3.6 Perform Post-Implementation Review and Close the
	    Implementation)
	
snippet togaf_guides_microservices-architecture_11.3_Value_and_Cost_Reporting "11.3      Value and Cost Reporting"
	
	The architecture team should maintain up-to-date catalogs of
	microservices that are implemented and microservices that are planned. A
	microservice implements an ABF, and the business functionality and value
	of each microservice should be clearly presented in its catalog
	description.
	
	The architecture team should also maintain records of the resources
	allocated and planned to be allocated to the development and operation
	of each microservice.
	
	These catalogs and records will ensure that the business value and cost
	of work packages and Transition Architectures can be understood by key
	stakeholders.
	
snippet togaf_business-architecture_business-scenarios_11.4_Checklist_Analyze "11.4      Checklist – Analyze"
	
	• All data collected in one place and locked as read-only
	
	• Prepared worksheets per element to analyze text
	
	• Prepared worksheets per element to analyze calculable data
	
	• Populated worksheets with raw data
	
	• Transformed textual into normalized and categorized list
	
	• Done the math
	
	• Prepared a unifying matrix to connect all key elements
	
	• Assessed for completeness and correctness:
	
	•     Should be at least one outcome for each pain point
	
	• Generated a set of business and technical capabilities
	
	• Drafted models of data collect
	
	• Drafted text of the results
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11.4_Managing_Innovation_Creativity_and_Circumstance "11.4      Managing Innovation, Creativity, and Circumstance"
	
	Top-down direction and planning provides part of the answer for a nimble
	organization. It provides the guidelines, constraints, and clarity
	required to make tactical decisions. Sometimes the correct decision is
	to embark on unplanned change.
	
	Whether the Practitioner has arrived at implementation of change
	unprepared because of a failure or because of a good deliberate
	decision, the Practitioner still needs to provide useful support of the
	change activity. Stakeholders simply have to have less confidence that
	the project will deliver the expected value with the expected cost and
	the projected time. The range of unknown ones precludes high confidence.
	
	This lack of confidence simply means the architecture has more
	uncertainty, or risk, associated with realizing the organization’s
	objectives. At this point, Practitioners have to focus all of their
	energy on risk mitigation.
	
	Pragmatically the Practitioner is going to be constantly performing a
	risk management function. Rather than diving into the details of
	implementation the Practitioner needs to find and expose uncertainty
	associated with the objective to provide tactical governance support.
	Every project will have some form of benefits statement. Every
	organization has some form of strategy. The Practitioner simply has to
	connect the dots without the benefit of any intermediate stepping
	stones. The important distinction here is that the Practitioner is not
	expected to correct the project regarding benefits statement and
	realization plan. The Practitioner is expected to mitigate uncertainty
	regarding realizing the benefits stated in the project.
	
	TOGAF Phase G provides a step for this activity where the Practitioner
	provides guidance to the Implementation Project. The Practitioner must
	walk a line between guiding and performing implementation.[32]
	Implementers are expected to live within the constraints of the project;
	Practitioners are expected to look at the context of the project. The
	most valuable actions when the organization jumps to Phase G are
	identical to addressing rapid implementation methods such as agile. The
	Practitioner must focus on the scope of the Implementation Project,
	facilitating good decision-making in the context not of project benefits
	realization but of Enterprise benefits realization, and ensuring the
	stakeholders and implementers understand the implications of their
	choices regarding Enterprise benefits not driving them to make different
	choices. This is a very fine distinction and is it a reiteration of not
	fixing the project but ensuring stakeholders and implementation teams
	understand what can honestly be expected in terms of value and benefit.
	
	Innovation and creativity are at the fore when an organization jumps to
	Phase G. Thoughtful architecture development providing guidance and
	constraints at the required level of detail will be missing. When the
	Practitioner’s organization is in a hurry they are focused on receiving
	value through differentiation and experimentation. Typically, a
	sustained efficiency gain is not achieved without clarifying dependency.
	Practitioners should expect that organizations in a hurry are usually
	fully aware of the difficulty sustaining experiments across time and
	when scaled. Hence, the Practitioner must focus on value realization.
	Bluntly, this is not different than a more thoughtful approach: The
	stakeholders’ preference and priority drives the architecture
	development.
	
	In terms of the TOGAF ADM phases, the Practitioner will be running
	constant micro-iterations exploring discrete statements of value through
	to the implementation, with the purpose of clarifying the value expected
	and what in the implementation creates uncertainty. In order to perform
	this, the Practitioner will have to focus all attention on a narrow set
	of concerns on the critical path to value realization.
	
	When the organization Jumps to Phase G, the Practitioner will routinely
	need to act as the stakeholders’ agent. Practitioners must be keenly
	aware of the danger acting as both the architect and the stakeholders’
	agent. Care must be taken to guard against tunnel vision, personal bias,
	and “tourist dashboard decisions”. Specialized reporting against the
	narrow set of concerns on the critical path to value and the
	Implementation Project form the control that mitigates lack of
	preparation and failing to separate duties.
	
snippet togaf_adm_11_G_Implementation_Governance_11.4_Outputs "11.4 Outputs"
	
	The outputs of Phase G may include, but are not restricted to:
	
	-   Architecture Contract (signed) (see the TOGAF Standard — EA
	    Capability and Governance), as recommended in the
	    architecture-compliant implemented architectures
	-   Compliance Assessments (see the TOGAF Standard — Architecture
	    Content)
	-   Change Requests (see the TOGAF Standard — Architecture Content)
	-   Architecture-compliant solutions deployed including:
	    -   The architecture-compliant implemented system
	
	        Note:
	            The implemented system is actually an output of the
	            development process. However, given the importance of this
	            output, it is stated here as an output of the ADM. The
	            direct involvement of architecture staff in implementation
	            will vary according to organizational policy, as described
	            in the TOGAF Standard — EA Capability and Governance.
	    -   Populated Architecture Repository
	    -   Architecture compliance recommendations and dispensations
	    -   Recommendations on service delivery requirements
	    -   Recommendations on performance metrics
	    -   Service-Level Agreements (SLAs)
	    -   Architecture Vision, updated post-implementation
	    -   Architecture Definition Document, updated post-implementation
	    -   Business and IT operating models for the implemented solution
	    -   Architecture Building Blocks (ABBs)
	
snippet togaf_adm_11_G_Implementation_Governance_11.5_Approach "11.5 Approach"
	
	It is here that all the information for successful management of the
	various implementation projects is brought together. Note that, in
	parallel with Phase G, there is the execution of an
	organizational-specific development process, where the actual
	development happens.
	
	To enable early realization of business value and benefits, and to
	minimize the risk in the transformation and migration program, the
	favored approach is to deploy the Target Architecture as a series of
	transitions. Each transition represents an incremental step towards the
	target, and each delivers business benefit in its own right. Therefore,
	the overall approach in Phase G is to:
	
	-   Establish an implementation program that will enable the delivery of
	    the Transition Architectures agreed for implementation during the
	    Migration Planning phase
	-   Adopt a phased deployment schedule that reflects the business
	    priorities embodied in the Architecture Roadmap
	-   Follow the organization's standard for corporate, IT, and
	    Architecture Governance
	-   Use the organization's established portfolio/program management
	    approach, where this exists
	-   Define an operations framework to ensure the effective long life of
	    the deployed solution
	
	Phase G establishes the connection between architecture and
	implementation organization, through the Architecture Contract.
	
	Project details are developed, including:
	
	-   Name, description, and objectives
	-   Scope, deliverables, and constraints
	-   Measures of effectiveness
	-   Acceptance criteria
	-   Risks and issues
	
	Implementation governance is closely allied to overall Architecture
	Governance, which is discussed in the TOGAF Standard — EA Capability and
	Governance.
	
	A key aspect of Phase G is ensuring compliance with the defined
	architecture(s), not only by the implementation projects, but also by
	other ongoing projects within the enterprise. The considerations
	involved with this are explained in detail in the TOGAF Standard — EA
	Capability and Governance.
	
snippet togaf_business-architecture_business-scenarios_11.5_Checklist_Document "11.5      Checklist – Document"
	
	• Named a primary author:
	
	•     Should have been done in the Planning step
	
	• Named the editor:
	
	•     Should have been done in the Planning step
	
	• Drafted the document
	
	• Included models as drawings in the document
	
	• Described the models in text form
	
	• Numbered drawings
	
	• Used a modeling language:
	
	•     The ArchiMate^(®) modeling language
	
	• Articulated the business-oriented issue and the desired outcomes
	
	• Have a “so what”
	
	• Have a “so that”
	
	• Conducted an informal internal review of content
	
	• Updated draft document and models
	
	• Proofread and edited for business folk
	
snippet togaf_business-architecture_business-scenarios_11.6_Checklist_Review "11.6      Checklist – Review"
	
	• Named the internal reviewers
	
	• Named the external reviewers
	
	• Allocated specific sections to specific reviewers
	
	• Provided formal instructions to reviewers
	
	• Formally managed change requests
	
	• Agreed on updates
	
	• Polled stakeholders on path forward
	
	• Updated document and models for publication
	
	• Sent document to publication process
	
	• Sent participants publication status and thank you notes
	
snippet togaf_business-architecture_business-scenarios_11_Checklists "11   Checklists"
	
snippet togaf_togaf-leaders-guide_11_Create_the_EA_Capability_Roadmap_11_Create_the_EA_Capability_Roadmap "11   Create the EA Capability Roadmap"
	
	A roadmap provides a set of possible paths and a preferred path to
	achieve the target state from the current state. The preferred path is
	arrived at via trade-offs considering the organizational maturity and
	needs resulting from the gap between current and future state. The
	process model created using activities in Chapter 10 (Process Model) is
	a tactical tool, whereas the roadmap is a communication tool. The
	roadmap should help to answer the following questions:
	
	-   What is required before an outcome can be produced?
	-   What kind of planning and decisions should be driven?
	-   What resources are required for the EA Capability to deliver?
	
snippet togaf_adm_INDEX_11_G_Implementation_Governance "-   11. Phase G: Implementation Governance"
	    -   11.1 Objectives
	    -   11.2 Inputs
	        -   11.2.1 Reference Materials External to the Enterprise
	        -   11.2.2 Non-Architectural Inputs
	        -   11.2.3 Architectural Inputs
	    -   11.3 Steps
	        -   11.3.1 Confirm Scope and Priorities for Deployment with
	            Development Management
	        -   11.3.2 Identify Deployment Resources and Skills
	        -   11.3.3 Guide Development of Solutions Deployment
	        -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	        -   11.3.5 Implement Business and IT Operations
	        -   11.3.6 Perform Post-Implementation Review and Close the
	            Implementation
	    -   11.4 Outputs
	    -   11.5 Approach
snippet togaf_adm_11_G_Implementation_Governance_11_G_Implementation_Governance "11. Phase G: Implementation Governance"
	
	  -- ---------------------------------------------------------------------------------------------
	     Chapter Contents: 11.1 Objectives | 11.2 Inputs | 11.3 Steps | 11.4 Outputs | 11.5 Approach
	  -- ---------------------------------------------------------------------------------------------
	
	This chapter provides an architectural oversight of the implementation.
	
	[]
	
	Figure 11-1: Phase G: Implementation Governance
	
snippet togaf_adm-practitioners_11_Jumping_to_Phase_G_11_Jumping_to_Phase_G "11   Jumping to Phase G"
	
	Many Practitioners will be regularly faced with their organization
	“Jumping to G”. Many organizations select leadership on their ability to
	get things done. This creates a bias to action. Enabling effective
	change requires balancing predictable planned change with innovation and
	creativity.
	
	Organizations that jump to Phase G will jump either because of
	organizational preference for visible action or execution failure by the
	EA team. In both cases, good Practitioners will respond to their
	organizational culture or to their failures. It is outside the scope of
	this Guide for Practitioners to discuss effective engagement and
	Enterprise processes; see the TOGAF^(®) Leader’s Guide to Establishing
	and Evolving an EA Capability (see Referenced Documents).
	
	The chapter will address classic failure patterns:
	
	-   Missing the purpose
	-   Missing the business cycle
	-   Not doing architecture
	
	This chapter will also identify how the Practitioner addresses
	unpredictable change resulting from innovation, creativity, and
	circumstance.
	
	An EA is developed for one very simple reason: to guide effective
	change. Guiding effective change involves serving decision-makers and
	implementers. Architecture to Support Strategy, Portfolio, and Project
	are focused on supporting decision-makers and are directly tied to
	planning stages in the business cycle. Architecture to Support Solution
	Delivery is primarily aimed at implementers. When the Practitioner does
	not provide timely support for strategy, portfolio, and project, the
	organization will continue to make decisions using the information at
	hand on the day the decision must be made.
	
	Without a good Target Architecture to Support Strategy, Portfolio, and
	Project, the organization has jumped to Phase G. Typically this happens
	for two reasons: misalignment and missing the purpose.
	
	Actual misalignment is outside the scope of this Guide. For advice on
	the alignment of the EA, see the TOGAF^(®) Leader’s Guide to
	Establishing and Evolving an EA Capability (see Referenced Documents).
	
	Most examples of misalignment in the industry are actually Practitioners
	missing purposes other than solution deployment.
	
snippet togaf_guides_microservices-architecture_11_Phase_F_Migration_Planning "11   Phase F: Migration Planning"
	
	The objectives of TOGAF Phase F are to:
	
	-   Finalize the Architecture Roadmap and the supporting Implementation
	    and Migration Plan
	-   Ensure that the Implementation and Migration Plan is co-ordinated
	    with the enterprise’s approach to managing and implementing change
	    in the enterprise’s overall change portfolio
	-   Ensure that the business value and cost of work packages and
	    Transition Architectures is understood by key stakeholders
	
	The Architecture Roadmap lists individual work packages that will
	realize the Target Architecture and lays them out on a timeline to show
	progression from the Baseline Architecture to the Target Architecture.
	The Architecture Roadmap highlights the business value of individual
	work packages at each stage. Transition Architectures necessary to
	effectively realize the Target Architecture are identified as
	intermediate steps. The Architecture Roadmap is incrementally developed
	throughout Phases E and F, and informed by readily identifiable roadmap
	components from Phase B, C, and D within the ADM.
	
	The Implementation and Migration Plan provides a schedule of the
	projects that will realize the Target Architecture. The Implementation
	and Migration Plan includes executable projects grouped into managed
	portfolios and programs. The Implementation and Migration Strategy
	identifying the approach to change is a key element of the
	Implementation and Migration Plan.
	
snippet togaf_reference-models_government-reference-model_11_Shared_Services "11   Shared Services"
	
	Shared Services co-ordinates and manages people, communications,
	finance, and transformation services on behalf of the public in order to
	facilitate the transfer of information and oversight of people,
	processes, and technology to support procurement and align to corporate
	strategy.
	
	[]
	
	Figure 11: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Shared Services Sector
	
snippet togaf_adm-practitioners_12_Special_Cases_12.1_Architecture_in_an_Agile_Enterprise "12.1      Architecture in an Agile Enterprise"
	
	There has been a great deal of conversation about aligning to agile
	implementation methods. Ink has been spilled trying to align the phases
	of the ADM to these development methods. All of this conversation has
	blurred the line between implementation and architecture. The TOGAF
	Standard aligns to agile development in Phase G. Full stop.
	
	A good Architecture to Support Portfolio, or Project, will identify what
	products the Enterprise needs, the boundary of the products, and what
	constraints a product owner has. In short, a good architecture defines
	the Enterprise’s backlog.
	
	Architecture to Support Project and Solution Delivery will have a set of
	constraints that limit the choices of the agile team. These constraints
	are where an individual product must bend to Enterprise issues and the
	parochial preference of a product owner is not valid.
	
	Then Phase G, Implementation Governance: the Practitioner serves the
	stakeholders guarding the mission, vision, goals, and investment
	roadmap. In short, guarding Enterprise value.
	
snippet togaf_guides_microservices-architecture_12.1_Microservices_Defined "12.1      Microservices Defined"
	
	For the purpose of discussing governance, it is important to remember
	that a microservice is a service that performs a single ABF and is
	independent of other microservices. In particular, it is developed
	independently, and is independently deployable.
	
	As a service, a microservice has a defined service contract, which
	includes the specification of an interface, usually termed an API. The
	microservices available to other architecture components are listed in a
	service catalog.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.1_Objectives "12.1 Objectives"
	
	The objectives of Phase H are to:
	
	-   Ensure that the architecture development cycle is maintained
	-   Ensure that the Architecture Governance Framework is executed
	-   Ensure that the Enterprise Architecture Capability meets current
	    requirements
	
snippet togaf_business-architecture_business-scenarios_12.1_On_Active_and_Reflective_Listening "12.1      On Active and Reflective Listening"
	
	-   Use whenever you want to ensure that someone is being heard – not
	    just by you, but by everyone
	-   Active listening from Wikipedia:
	
	—  A communication technique used in counselling, training, and conflict
	resolution, which requires the listener to feed back what they hear to
	the speaker, by way of re-stating or paraphrasing what they have heard
	in their own words, to confirm what they have heard and, moreover, to
	confirm the understanding of both parties
	
	-   Reflective listening from Wikipedia:
	
	—  A communication strategy involving two key steps: seeking to
	understand a speaker’s idea, then offering the idea back to the speaker,
	to confirm the idea has been understood correctly; it attempts to
	“reconstruct what the client is thinking and feeling and to relay this
	understanding”
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.1_Recap_of_Concepts "12.1      Recap of Concepts"
	
	Up to this point in the Guide, generic leadership and management
	concepts relative to the EA Capability, including the incarnations it
	could have had in the past, were presented. Some of the key takeaways
	from that discussion are:
	
	-   Purpose of the EA Capability
	-   Development of, using, and managing architecture
	-   The relationship of EA with other disciplines within the enterprise
	-   It is necessary to refer to this Guide and the TOGAF ADM more than
	    once to deliver value
	
	Afterwards, the Guide discussed the importance of the organizational
	context and the need for an EA practice. During this conversation,
	differences between the organizational outcomes and team structure were
	discussed. While discussing process model, the Guide presented different
	organizational cycles and budgeting ceremonies. Likewise, governance,
	risk, reporting, and financial model presented views for implementation
	controls. We also discussed that the team providing the EA Capability
	should assess why the architecture work has been initiated, readiness,
	and maturity in absorbing architectural information. This understanding
	drives the definition of the content model, viewpoints and views, and
	use of a repository.
	
	Having gained knowledge about the organization and its intent to engage
	in economic activity (values and business motivations), the Guide
	discussed the objectives and need for setting up an EA Capability. One
	of the key principles to focus on is the value delivered to and iterated
	by the TOGAF ADM to the extent required to deliver value. It is
	imperative to scope the depth and breadth of the EA work commensurate
	with time and objectives. Later in this chapter, there is a discussion
	called Sustaining and Maturing (in Section 12.5) relating to leveraging
	the span of control the EA Leader currently has, expanding it, and
	thereby iterating the ADM cycle to keep adding value.
	
	It may be a reality that there are people in the enterprise who perform
	architecture development without carrying appropriate titles or
	following a particular career path. Similar to following the money trail
	to create a forensic map of cash flow and value addition, following the
	artifacts will lead to where the architecture work gets done and who
	performs it. Creating a map of the diverse role titles to appropriate
	architecture domain roles will create a view of the architecture
	community. This is the community or extended team that the EA Leader
	should nurture and utilize to deliver EA Capability. To deliver on the
	charter, it is required to build the capability and capacity of the EA
	team, commensurate with the demand.
	
	Then the Guide discussed selection, customization, and use of EA and
	related delivery assurance frameworks. It is important to identify and
	define the interaction points between product and service delivery
	strategy to the TOGAF ADM (or the customized architecture method). This
	can also be evolved as the breadth and depth of the mandate for EA work
	evolves. The following chapter discussed the need to have a governance
	model that balances how the team providing the EA Capability goes about
	development of architecture artifacts and how it engages with rest of
	the enterprise.
	
	Finally, for the data that EA manages, the significance and need of
	structure, the Content Framework and Content Metamodel, and an
	automation tool were discussed.
	
snippet togaf_reference-models_government-reference-model_12.1_Transport_and_Operations_Taxonomy "12.1      Transport and Operations Taxonomy"
	
	  Sector                     Function     Service                                                                                                                                 Description
	  -------------------------- ------------ --------------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------
	  Transport and Operations   Transport    Activities pertaining to the safe transfer and availability of people and goods over land, air, sea, and space.                         
	                                          Ground Transport                                                                                                                        Involves the activities to ensure safe transfer and availability of people and goods over land.
	                                          Air Transport                                                                                                                           Involves the activities to ensure safe transfer and availability of people and goods through air.
	                                          Water Transport                                                                                                                         Involves the activities to ensure safe transfer and availability of people and goods over water.
	                                          Space Transport                                                                                                                         Involves the activities to ensure safe transfer and availability of people and goods in space.
	                                          Other Transport                                                                                                                         Involves all other movement of people and goods not covered by land, air, water, and space through latitude and longitude.
	                             Operations   Activities pertaining to the maintenance and general management of waste, public property, greenery, parking facilities, and streets.   
	                                          Waste Management                                                                                                                        Corresponds to the disposal, recycling, monitoring, collection, or movement of waste.
	                                          Property Maintenance                                                                                                                    Refers to ensuring the security, upkeep, and maintenance buildings and properties owned by the government.
	                                          Car Parks                                                                                                                               Refers to ensuring the security, upkeep, and maintenance of public car parks.
	                                          Street Maintenance and Highways                                                                                                         Refers to the repair, upkeep, and maintenance of roads, footways, and highways.
	                                          Parks and Trees                                                                                                                         Refers to the maintenance, planting, and conservation of trees and greenery in national parks, public parks, and conservation areas.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.2.1_Reference_Materials_External_to_the_Enterprise "12.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.2.2_Non-Architectural_Inputs "12.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.2.3_Architectural_Inputs "12.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Requirements Specification (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Gap analysis results (from Business, Data, Application, and
	        Technology Architectures)
	    -   Architectural requirements
	-   Architecture Roadmap (see the TOGAF Standard — Architecture Content)
	-   Change Request (see the TOGAF Standard — Architecture Content) —
	    technology changes:
	    -   New technology reports
	    -   Asset management cost reduction initiatives
	    -   Technology withdrawal reports
	    -   Standards initiatives
	-   Change Request (see the TOGAF Standard — Architecture Content) —
	    business changes:
	    -   Business developments
	    -   Business exceptions
	    -   Business innovations
	    -   Business technology innovations
	    -   Strategic change developments
	-   Change Request (see the TOGAF Standard — Architecture Content) —
	    from lessons learned
	-   Implementation Governance Model (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Contract (signed) (see the TOGAF Standard — EA
	    Capability and Governance)
	-   Compliance Assessments (see the TOGAF Standard — Architecture
	    Content)
	-   Implementation and Migration Plan (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_adm-practitioners_12_Special_Cases_12.2_Architecture_for_a_Domain "12.2      Architecture for a Domain"
	
	A common failure path is for domain architects to work to a different
	purpose, or pretend that they are working on a different Architecture
	Project than the rest of the team. A domain[33] must fit into the whole
	of the EA. Also, the rest of the EA must fit with a domain. Anything
	else is a tourist dashboard decision (see Section 6.2).
	
	A distinct domain is security. A security architecture only exists in
	reference to other domains and is best considered a concern.
	Practitioners will always address their stakeholders’ security[34] and
	risk concerns.
	
snippet togaf_guides_microservices-architecture_12.2_Governance_Approach "12.2      Governance Approach"
	
	This document draws heavily on the TOGAF Standard. Specifically, Phase G
	(Implementation Governance) describes the overall approach as follows:
	
	-   Establish an implementation program that will enable the delivery of
	    the Transition Architectures agreed for implementation during the
	    Migration Planning phase
	-   Adopt a phased deployment schedule that reflects the business
	    priorities embodied in the Architecture Roadmap
	-   Follow the organization’s standard for corporate, IT, and
	    architecture governance
	-   Use the organization’s established portfolio/program management
	    approach, where this exists
	-   Define an operations framework to ensure the effective long life of
	    the deployed solution
	
	It is also important to ensure that arbitrary choices are not made by
	the various DevOps teams creating microservices, leading to technology
	divergence and the attendant costs and risks associated with having too
	many different approaches and tools. That said, it is also important to
	recognize that different problems may require different tools for their
	solutions. The point of governance is to ensure that these differences
	are resolved in a reasonable, managed fashion and not arbitrarily.
	
	Consequently, the governance team will need to involve itself in such
	decisions, at least at the oversight level.
	
	One implication of having a proper governance process is the need for
	solutions to be able to consume existing services. In turn, this means
	that it must be possible to know just what services exist in the
	organization and their provenance(s). It is also important to know what
	expectations can be had about their use, in particular non-functional
	expectations in relation to their performance, availability, and
	security. This may be done using a service catalog product. There are
	several commercial products in this space but other approaches,
	including manual cataloging, can also be used. Another issue will be the
	ability to dynamically bind to/invoke services which will mean their
	addresses need to be known and stable. The ability to consume
	microservices across the organization will also require that the
	authentication and authorization processes are understandable.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.2_Inputs "12.2 Inputs"
	
	This section defines the inputs to Phase H.
	
snippet togaf_reference-models_government-reference-model_12.2_Key_Drivers_for_Change "12.2      Key Drivers for Change"
	
	For the Transport and Operations sector, effective mobility in cities
	remains a critical enabler for productivity, economic growth, and
	sustainability.
	
	The factors described below will be considered as drivers.
	
	Public Opinion
	
	Governments must respond to changes in public opinion towards climate
	change that will drive innovation and prompt greater focus on
	alternative fuels, energy availability, and global responses. There is
	also an expectation that vehicle emissions will drop as alternative
	fuels and energy sources emerge.
	
	Policy
	
	With increasing scrutiny on spending, governments are looking more
	closely at transportation infrastructure delivery and investment. The
	future of transport and regulation will look to:
	
	-   Enable innovation without compromising safety and overall
	    productivity
	-   Remove barriers to entry for mobility service providers
	-   Use behavioral economic advisory to help design and implement
	    policies more effectively
	
	Smart Mobility
	
	Intelligent mobility can be encouraged through autonomous vehicle
	technology whereby digital solutions and Big Data will be utilized to
	provide useful real-time information to journey makers including journey
	planning, route optimization, navigation, schedules, and performance
	reviews. This information can also be leveraged by government bodies to
	manage and adjust demand on busy roads by using demand-based pricing
	during peak times.
	
snippet togaf_business-architecture_business-scenarios_12.2_On_Brainstorming_and_Affinity_Analysis "12.2      On Brainstorming and Affinity Analysis"
	
	-   Use when you want to engage the entire team to put out ideas
	-   Brainstorming:
	
	—  A structured technique to gather all participant ideas – it is not a
	free-for-all
	
	—  Describe the exercise subject
	
	—  Describe rules for brainstorming
	
	—  Ask everyone to jot down their thoughts on the subject (set some
	limit like “in one sentence”)
	
	—  Proceed to get each participant’s ideas one at a time and record on
	sticky notes in a roundtable manner
	
	—  Post sticky notes
	
	—  Do affinity analysis on ideas
	
	-   Affinity analysis:
	
	—  A means to identify and group similar or related ideas
	
	—  Useful to faithfully combine many ideas into a manageable list
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.2_Start_with_Purpose "12.2      Start with Purpose"
	
	In a world of multi-point competition, ease of availability of
	substitutes, and continuous pressure of quarterly fiscal results,
	organizations are forced to create waves of revenue models via new
	products and services, contractual commitments, or expansion of customer
	base.
	
	Based on the alignment of the EA Capability team, the purpose for EA
	could be cost control, risk optimization, strategy development, or
	variants of these factors. Even if the charter evolves, expectation to
	deliver on the primary intent and focus generally does not go away. This
	assessment and grounding is based on the purpose for which the
	enterprise is engaged in the economic activity as well as why the team
	providing the EA Capability is formed.
	
	Just like how the enterprise approaches identifying new models to
	generate revenue, suppliers of products and services to the enterprise
	also come up with different methods, models, or versions of their
	products to force changes to the ecosystem. Based on the assessment of
	the enterprise, the EA team will have to identify and project out when
	the enterprise will have to start engagement with these emergent
	technologies and concepts. The EA Capability team acts as subject matter
	experts in providing a review of the emergent concepts, technologies,
	and patterns to the stakeholders and decisions-makers. Such review
	documents should align with the purpose for which the EA Capability
	effort was created.
	
	One of the key advantages an Enterprise Architect has is the ability to
	look at the system under discussion without any bias to the views of the
	executives and implementers, customers or support personnel, and
	security or compliance officers or developers, technology or time. When
	an Enterprise Architect presents a balanced view, supported with
	rationale addressing future needs, trade-off conditions applied,
	accounting for culture of the company, teams generally gravitate towards
	common goals setting aside emotional favorites. Stakeholders invariably
	want this insight from the Enterprise Architects to validate that they
	are on the right path or to fail fast and course correct with the least
	sunk cost. The expectation is also that the Enterprise Architect
	provides an honest impact assessment and risk mitigation alternatives.
	Experience has shown that raising what could normally be perceived as
	the most uncomfortable set of questions instigates a chain of positive
	changes in the enterprise.
	
	The EA team should create a periodic assessment of readiness the
	enterprise has for adopting EA practices or new technologies – the next
	leap of value delivery. This assessment helps the team providing the EA
	Capability to time the case for expansion of the charter. Ambitions for
	growth in charter as well as maturity aside, the goal is to ensure that
	the team providing the EA Capability stays relevant and current with the
	ecosystem and business needs.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.1_Establish_Value_Realization_Process "12.3.1 Establish Value Realization Process"
	
	Influence business projects to exploit the Enterprise Architecture for
	value realization (outcomes).
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.2_Deploy_Monitoring_Tools "12.3.2 Deploy Monitoring Tools"
	
	Ensure monitoring tools are deployed and applied to enable the
	following:
	
	-   Monitor technology changes which could impact the Baseline
	    Architecture
	-   Monitor business changes which could impact the Baseline
	    Architecture
	-   Business value tracking; e.g., investment appraisal method to
	    determine value metrics for the business objectives
	-   Monitor Enterprise Architecture Capability maturity
	-   Track and assess asset management programs
	-   Track the Quality of Service (QoS) performances and usage
	-   Determine and track business continuity requirements
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.3_Manage_Risks "12.3.3 Manage Risks"
	
	Manage Enterprise Architecture risks and provide recommendations for IT
	strategy.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.4_Provide_Analysis_for_Architecture_Change_Management "12.3.4 Provide Analysis for Architecture Change Management"
	
	Provide analysis for architecture change management:
	
	-   Analyze performance
	-   Conduct Enterprise Architecture performance reviews with service
	    management
	-   Assess Change Requests and reporting to ensure that the expected
	    value realization and Service-Level Agreement (SLA) expectations of
	    the customers are met
	-   Undertake a gap analysis of the performance of the Enterprise
	    Architecture
	-   Ensure change management requests adhere to the Enterprise
	    Architecture Governance and framework
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.5_Develop_Change_Requirements_to_Meet_Performance_Targets "12.3.5 Develop Change Requirements to Meet Performance Targets"
	
	Make recommendations on change requirements to meet performance targets
	and development of position to act.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.6_Manage_Governance_Process "12.3.6 Manage Governance Process"
	
	Manage governance process and framework for architecture:
	
	-   Arrange meeting of Architecture Board (or other Governing Council)
	-   Hold meeting of the Architecture Board with the aim of the meeting
	    to decide on handling changes (technology and business and
	    dispensations)
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3.7_Activate_the_Process_to_Implement_Change "12.3.7 Activate the Process to Implement Change"
	
	Activate the architecture process to implement change:
	
	-   Produce a new Request for Architecture Work and request for
	    investment
	-   Ensure any changes implemented in this phase are captured and
	    documented in the Architecture Repository
	
snippet togaf_adm-practitioners_12_Special_Cases_12.3_Architecture_in_Response_to_an_Incident "12.3      Architecture in Response to an Incident"
	
	Something happened, and the organization’s response is to fix it.
	
	As a starting point the Practitioner should understand risk as the
	effect of uncertainty on reaching objectives, risk appetite, and risk
	tolerance. Achieving all objectives is uncertain, and an Enterprise’s
	response is driven by risk tolerance and risk appetite.
	
	The risk appetite provides guidance balancing the amount of risk taken
	to achieve an expected outcome. Risk appetite is typically expressed as
	a boundary on a risk/business impact and likelihood grid, or qualitative
	measures. For example, the Enterprise will risk \$x for \$y reward this
	year, or has zero tolerance for loss of life. A well understood risk
	appetite defines both the level of risk the organization is willing to
	accept as well as its strategy in defining this level. For risks above
	this acceptable level, it defines the strategy used for mitigation.
	Strategy for risk in excess risk appetite is typically transference or
	avoidance.
	
	Risk tolerance addresses deviations from what is expected. In short,
	what to do when the Enterprise’s uncertainty is exceeded. The most
	common expression of uncertainty is failure to achieve expectations. At
	this point, the Enterprise is certain it will not achieve its
	objectives.
	
	An incident changes the stakeholders’ preferences with regard to risk.
	This is a change in requirement, and the architecture must adjust. The
	central role of the Practitioner is to provide solid advice on what
	changes to the target, and the associated work to achieve the change
	will reach an acceptable certainty of reaching the stakeholders’
	objective. Practitioners should not be surprised when there are few
	changes that have an acceptable cost, and the stakeholder is faced with
	the option of canceling the objective or canceling the change.
	
snippet togaf_business-architecture_business-scenarios_12.3_Introduce_your_Neighbor "12.3      Introduce your Neighbor"
	
	-   Use when you want to build a team from a group that doesn’t know
	    each other well
	-   Pair people up; e.g., Al and Betty
	-   Have them chat and introduce each other for a few minutes:
	
	—  Limit to five minutes maximum
	
	—  Ask them to chat about name, where they live, business, hobbies, etc.
	
	-   Then go around the room and have them introduce each other:
	
	—  Al introduces Betty and Betty introduces Al
	
	—  Have all participants introduced
	
	—  Have facilitator pair up if there is an odd number of participants
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.3_Steps "12.3 Steps"
	
	The level of detail addressed in Phase H will depend on the scope and
	goals of the overall architecture effort.
	
	The order of the steps in Phase H as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance.
	
	The steps in Phase H are as follows:
	
	-   Establish value realization process (see 12.3.1 Establish Value
	    Realization Process)
	-   Deploy monitoring tools (see 12.3.2 Deploy Monitoring Tools)
	-   Manage risks (see 12.3.3 Manage Risks)
	-   Provide analysis for architecture change management (see 12.3.4
	    Provide Analysis for Architecture Change Management)
	-   Develop change requirements to meet performance targets (see 12.3.5
	    Develop Change Requirements to Meet Performance Targets)
	-   Manage governance process (see 12.3.6 Manage Governance Process)
	-   Activate the process to implement change (see 12.3.7 Activate the
	    Process to Implement Change )
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.3_Trusted_Advisor_and_Instigator_of_Change "12.3      Trusted Advisor and Instigator of Change"
	
	Most organizations today are not starting blue ocean strategies;[26]
	several of their initiatives are the n+1^(th) attempt to solve a
	business problem. In such scenarios, when solution alternative
	evaluation or solution development efforts begin, modern lean
	methodologies do not lend themselves to view the broader context of the
	enterprise. An Enterprise Architect understands inter-dependencies
	within and outside the enterprise and can guide the teams to create
	appropriate points of isolation. An EA team should communicate clearly
	and continuously the shared vision for the enterprise and how all
	stakeholder groups are coming together behind that vision. Moving the
	focus of the vision from the typical inside-out view to an outside-in
	view elevates the thinking of key decision-makers. Instilling the
	thinking for points of isolation to manage change and to manage rapid
	response to market dynamics brings trust in the people and, hence, to
	the team providing the EA Capability.
	
	EA Capability teams that focus and deliver key organizational
	transformations are statistically more successful than teams that focus
	on standards, reference architectures, processes, and governance
	structures. Such a demand at times has caused scale issues for the team
	providing the EA Capability. To scale, successful EA teams have employed
	techniques like franchising typical work such as impact assessment
	questions and trade-off considerations. To employ such techniques, the
	process should be well defined.
	
	When engagement opportunities to land organizational changes or to
	franchise are not directly available, the development and publication of
	point of view documents has proven to be a successful technique to
	influence change. Monitoring and assessing which points of view get read
	and by whom presents the stakeholder interest. Tracking the changes
	those stakeholders initiate results in peer-level acceptance.
	Communicate and share the credits of initiatives to establish the team
	as agents of change.
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.4_Change_Management "12.4      Change Management"
	
	As business dynamics change, organizations undergo change – informed by
	the team providing the EA Capability or otherwise. It is necessary for
	the EA Capability team to track changes in the external ecosystem and
	create point of view documents. To sustain and grow the EA Capability,
	the Leader should prepare a list of recommendations for the
	decision-makers about transformation(s) needed to keep the enterprise
	abreast or ahead of ecosystem changes. Some transformations may require
	a change in operating model and some just an alteration in product mix.
	The range of coverage in point of view documents may include changes in
	operating model, technology adoption, risk reduction, or the nature of
	services offered or trade-off criteria to mitigate. Depending on the
	charter, the EA Leader should indicate to the decision-maker when a hype
	would become a necessity or cost of adoption and risk of failure is
	balanced appropriately.
	
	The trend since the new millennium is increased complexity of products
	and services that uniquely differentiate from potential current and
	future competitors. Some of these products and services reduce
	dependency on certain skill sets and some require new and specialized
	skills. Also, several products and services are being developed using
	deep collaboration with niche partners. The cost of collaboration has
	been falling, and diversity of service providers has been growing.
	Organizations have been shrinking the core and expanding at the edges.
	In such an era, success factors and competence drives the strategy based
	on how well the sets of activities performed by the enterprise dovetail
	with one another. When EA creates an enterprise map – that has the depth
	of capabilities, processes, technologies, training, investment flows –
	operational fit across teams and themes of strategy realization come to
	light. Once again, just like the advice provided to business, periodic
	development of the case for change of the EA Capability informs the team
	to update its skills and to stay ahead of rest of the enterprise.
	
	In general, enterprise plans do not question the assumptions made for an
	effort nor do they justify clearly why something has to be done and
	when. Most of the business cases are based on the affordability of the
	enterprise to spend its resources. EA roadmaps present the reason for
	something to be done and present the alternatives – each with
	implications – tracing assumptions to predictive outcomes. In this
	approach, ease of change, validating change as time passes, and an
	assessment of “what the end looks like” can be painted clearly to guide
	organizational, product, or process change.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.4_Outputs "12.4 Outputs"
	
	The outputs of Phase H may include, but are not restricted to:
	
	-   Architecture updates (for maintenance changes)
	-   Changes to architecture framework and principles (for maintenance
	    changes)
	-   New Request for Architecture Work (see the TOGAF Standard —
	    Architecture Content), to move to another cycle (for major changes)
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content), updated if necessary
	-   Architecture Contract (see the TOGAF Standard — EA Capability and
	    Governance), updated if necessary
	-   Compliance Assessments (see the TOGAF Standard — Architecture
	    Content), updated if necessary
	
snippet togaf_business-architecture_business-scenarios_12.4_We_Believe "12.4      We Believe"
	
	-   Use when the team is not converging or they are arguing in a
	    non-constructive way
	-   Take a step back and go to the original premise
	-   Ask “do we believe in this?”
	
	—  If not what do “we believe in”?
	
	-   Maintain a list of “we believes”
	-   Limit the list to important beliefs
	-   These “we believes” could become or lead to principles
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.5.1_Drivers_for_Change "12.5.1 Drivers for Change"
	
	The main purpose for the development of the Enterprise Architecture so
	far has been strategic direction and top-down architecture and project
	generation to achieve corporate capabilities. However, Enterprise
	Architecture does not operate in a vacuum. There is usually an existing
	infrastructure and business which is already providing value.
	
	There are also probably drivers for change which are often bottom-up,
	based upon modifying the existing infrastructure to enhance
	functionality. Enterprise Architecture changes this paradigm by a
	strategic top-down approach to a degree, although the delivery of
	increments makes the equation more complex.
	
	There are three ways to change the existing infrastructure that have to
	be integrated:
	
	-   Strategic, top-down directed change to enhance or create new
	    capability (capital)
	-   Bottom-up changes to correct or enhance capability (operations and
	    maintenance) for infrastructure under operations management
	-   Experiences with the previously delivered project increments in the
	    care of operations management, but still being delivered by ongoing
	    projects
	
	Governance will have to handle the co-ordination of these Requests for
	Change, plus there needs to be a lessons learned process to allow for
	problems with the recently delivered increments to be resolved and
	changes made to the Target Architectures being designed and planned.
	
	A lessons learned process ensures that mistakes are made once and not
	repeated. They can come from anywhere and anyone and cover any aspect of
	the Enterprise Architecture at any level (strategic, Enterprise
	Architecture definition, transition, or project). Often an Enterprise
	Architecture-related lesson may be an indirect outcome of a lesson
	learned elsewhere in the organization.
	
	The Architecture Board (see the TOGAF Standard — EA Capability and
	Governance) assesses and approves Requests for Change (RFC). An RFC is
	typically in response to known problems but can also include
	improvements. A challenge for the Architecture Board when handling an
	RFC is to determine whether it should be approved or whether a project
	in a Transition Architecture will resolve the issue.
	
	When assessing project or solution fit into the architecture, there may
	also be the case when an innovative solution or RFC drives a change in
	the architecture.
	
	In addition, there are many technology-related drivers for architecture
	Change Requests. For example:
	
	-   New technology reports
	-   Asset management cost reductions
	-   Technology withdrawal
	-   Standards initiatives
	
	This type of Change Request is normally manageable primarily through an
	enterprise's change management and Architecture Governance processes.
	
	In addition, there are business drivers for architecture change,
	including:
	
	-   Business-as-usual developments
	-   Business exceptions
	-   Business innovations
	-   Business technology innovations
	-   Strategic change
	
	This type of Change Request often results in a complete re-development
	of the architecture, or at least in an iteration of a part of the
	architecture development cycle, as explained below.
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.5.1_How_to_Engage_and_Promote_Value_Execution_of_the_Internal_Stakeholders "12.5.1 How to Engage and Promote Value Execution of the Internal Stakeholders"
	
	A team providing the EA Capability with adequate sponsorship has no cost
	or overhead to acquire new engagements. The challenge is that the buyer
	base of EA Capability is predefined – unless the enterprise decides to
	broaden its footprint. In this case, the focus should be about retention
	and repeat business from the same set of customers. Several techniques
	can be employed from the public relations and project management
	playbook to achieve this. Measure quantitatively and qualitatively to
	communicate every small improvement and value addition the EA Capability
	team has delivered in terms that are close to the primary and secondary
	consumer of the EA services. To sustain EA Capability, you need to focus
	on why, when, and how EA activities are performed and how the output
	produced by the team providing the EA Capability is being consumed and
	by whom.
	
	When the sponsorship is challenging, the focus should be on
	soft-selling, like communicating the need to subscribe to a retirement
	or insurance plan. One of the successful methods employed when
	sponsorship has been insufficient is to develop a roadmap and an
	implementation plan with reasonable financial projections and present
	them to executives when annual budget preparations are being initiated.
	Take time to understand or infer the strategy and direction of the
	enterprise from annual results, analyst calls, and objective statements
	of top 20 projects. Use this understanding to build a roadmap for at
	least one key business unit: if the focus is on improving sales, do it
	for marketing and sales; if the focus is operational cost management,
	create one for the operations team. There is heavy cost on acquiring
	sponsors. In a re-boot scenario, the cost is multi-fold higher.
	
	In EA, there is no right, wrong, or singularity of approach. EA forces
	itself and its consumers to almost always think of trade-offs; it forces
	them to look at data to help navigate the chaos. What it achieves is
	removing the bias for repeatable process and cost optimization. It
	brings focus to consider all viable alternatives. The change in thinking
	of organizational leadership is an example of qualitative value
	addition. All architects in the team should think of developing a set of
	trade-off criteria that is current with strategic and operational
	challenges. Providing decision-ready alternatives creates better
	sponsorship and acceptance of an EA team.
	
	Depending on the organizational culture, the EA team should question a
	few sponsorship assumptions, if the charter is not clear, and ask
	itself:
	
	-   What kind of financial control should the team providing the EA
	    Capability have?
	
	There are differences in views – from managing just EA’s operational
	cost (or considering the team providing the EA Capability as capital
	expense) to sponsoring technology research effort, all the way to
	validating every initiative for relevance and alignment to
	organizational goals.
	
	-   Should governance be used as a feedback mechanism for both
	    architecture output and project conformance?
	-   Even though it is suggested earlier in this Guide to use the TOGAF
	    ADM to the extent that immediate value can be realized and iterated,
	    is it the right approach, given the culture of the enterprise?
	-   Given internal and external forces, should the EA operating model be
	    target architecture or target operating model-driven?
	-   Should the planning be based on capabilities or process efficiencies
	    and differentiation offered to customers?
	-   Depending on the charging model in the enterprise, what is the
	    extent to which each of the project execution teams can be taxed for
	    EA engagement?
	
	One of the necessary periodic exercises is to move the focus of the
	enterprise and the team providing the EA Capability from rigor of
	documentation and static analysis to operational and strategic business
	outcomes. Experience shows that such a shift invariably results in
	increased sponsorship and demand for EA resources.
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.5.2_Enterprise_Architecture_Change_Management_Process "12.5.2 Enterprise Architecture Change Management Process"
	
	The Enterprise Architecture change management process needs to determine
	how changes are to be managed, what techniques are to be applied, and
	what methodologies used. The process also needs a filtering function
	that determines which phases of the architecture development process are
	impacted by requirements. For example, changes that affect only
	migration may be of no interest in the architecture development phases.
	
	There are many valid approaches to change management, and various
	management techniques and methodologies that can be used to manage
	change; for example, project management methods such as PRINCE2, service
	management methods such as ITIL, management consultancy methods such as
	Catalyst, and many others.
	
	An enterprise that already has a change management process in place in a
	field other than architecture (for example, in systems development or
	project management) may well be able to adapt it for use in relation to
	architecture.
	
	The following describes an approach to change management, aimed
	particularly at the support of a dynamic Enterprise Architecture, which
	may be considered for use if no similar process currently exists.
	
	The approach is based on classifying required architectural changes into
	one of three categories:
	
	-   Simplification change: a simplification change can normally be
	    handled via change management techniques
	-   Incremental change: an incremental change may be capable of being
	    handled via change management techniques, or it may require partial
	    re-architecting, depending on the nature of the change (see 12.5.3
	    Guidelines for Maintenance versus Architecture Redesign for
	    guidelines)
	-   Re-architecting change: a re-architecting change requires putting
	    the whole architecture through the architecture development cycle
	    again
	
	Another way of looking at these three choices is to say that a
	simplification change to an architecture is often driven by a
	requirement to reduce investment; an incremental change is driven by a
	requirement to derive additional value from existing investment; and a
	re-architecting change is driven by a requirement to increase investment
	in order to create new value for exploitation.
	
	To determine whether a change is simplification, incremental, or
	re-architecting, the following activities are undertaken:
	
	1.  Registration of all events that may impact the architecture
	2.  Resource allocation and management for architecture tasks
	3.  The process or role responsible for architecture resources has to
	    make an assessment of what should be done
	4.  Evaluation of impacts
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.5.3_Guidelines_for_Maintenance_versus_Architecture_Redesign "12.5.3 Guidelines for Maintenance versus Architecture Redesign"
	
	A good guideline is:
	
	-   If the change impacts two stakeholders or more, then it is likely to
	    require an architecture redesign and re-entry to the ADM
	-   If the change impacts only one stakeholder, then it is more likely
	    to be a candidate for change management
	-   If the change can be allowed under a dispensation, then it is more
	    likely to be a candidate for change management
	
	For example:
	
	-   If the impact is significant for the business strategy, then there
	    may be a need to redo the whole Enterprise Architecture — thus a
	    re-architecting approach
	-   If a new technology or standards emerge, then there may be a need to
	    refresh the Technology Architecture, but not the whole Enterprise
	    Architecture — thus an incremental change
	-   If the change is at an infrastructure level — for example, ten
	    systems reduced or changed to one system — this may not change the
	    architecture above the physical layer, but it will change the
	    Baseline Description of the Technology Architecture; this would be a
	    simplification change handled via change management techniques
	
	In particular, a refreshment cycle (partial or complete re-architecting)
	may be required if:
	
	-   The Foundation Architecture needs to be re-aligned with the business
	    strategy
	-   Substantial change is required to components and guidelines for use
	    in deployment of the architecture
	-   Significant standards used in the product architecture are changed
	    which have significant end-user impact; e.g., regulatory changes
	
	If there is a need for a refreshment cycle, then a new Request for
	Architecture Work must be issued (to move to another cycle).
	
snippet togaf_adm_12_H_Architecture_Change_Management_12.5_Approach "12.5 Approach"
	
	The goal of an architecture change management process is to ensure that
	the architecture achieves its original target business value. This
	includes managing changes to the architecture in a cohesive and
	architected way.
	
	This process will typically provide for the continual monitoring of such
	things as governance requests, new developments in technology, and
	changes in the business environment. When changes are identified, change
	management will determine whether to formally initiate a new
	architecture evolution cycle.
	
	Additionally, the architecture change management process aims to
	establish and support the implemented Enterprise Architecture as a
	dynamic architecture; that is, one having the flexibility to evolve
	rapidly in response to changes in the technology and business
	environment.
	
	Monitoring business growth and decline is a critical aspect of this
	phase. Usage of the Enterprise Architecture is the most important part
	of the architecture development cycle. All too often the business has
	been left with an Enterprise Architecture that works for the
	organization of yesterday but may not give back sufficient capability to
	meet the needs of the enterprise of today and tomorrow.
	
	In many cases the architecture continues to fit, but the solutions
	underlying them may not, and some changes are required. The Enterprise
	Architect needs to be aware of these change requirements and considers
	this an essential part of constant renewal of the architecture.
	
	Capacity measurement and recommendations for planning are a key aspect
	of this phase. While the architecture has been built to deliver a steady
	state Business Architecture with agreed capacity during the lifecycle of
	this Enterprise Architecture, the growth or decline in usage needs to be
	continually assessed to ensure that maximum business value is achieved.
	
	For example, some Solution Architectures may not lend themselves to be
	scalable by a large factor — say 10 — or alternative solutions may be
	more economic when scaled up. While the architecture specifications may
	not change, the solutions or their operational context may change.
	
	If the performance management and reporting has been built into the work
	products through previous phases, then this phase is about ensuring the
	effectiveness of these. If there needs to be additional monitoring or
	reporting, then this phase will handle the changes.
	
	The value and change management process, once established, will
	determine:
	
	-   The circumstances under which the Enterprise Architecture, or parts
	    of it, will be permitted to change after deployment, and the process
	    by which that will happen
	-   The circumstances under which the architecture development cycle
	    will be initiated again to develop a new architecture
	
	The architecture change management process is very closely related to
	the Architecture Governance processes of the enterprise, and to the
	management of the Architecture Contract (see the TOGAF Standard — EA
	Capability and Governance) between the architecture function and the
	business users of the enterprise.
	
	In Phase H it is critical that the governance body establish criteria to
	judge whether a Change Request warrants just an architecture update or
	whether it warrants starting a new cycle of the ADM. It is especially
	important to avoid "creeping elegance", and the governance body must
	continue to look for changes that relate directly to business value.
	
	An Architecture Compliance report should state whether the change is
	compliant to the current architecture. If it is non-compliant, an
	exemption may be granted with valid rationale. If the change has high
	impact on the architecture, then a strategy to manage its impact should
	be defined.
	
	Guidelines for establishing these criteria are difficult to prescribe,
	as many companies accept risk differently, but as the ADM is exercised,
	the maturity level of the governance body will improve, and criteria
	will become clear for specific needs.
	
snippet togaf_business-architecture_business-scenarios_12.5_On_Money_or_Credit_Voting_Prioritization "12.5      On Money or Credit Voting Prioritization"
	
	-   Use when you want to get a sense of what people will really put
	    their resources into
	-   Use fake money or “credits”
	-   Give each person a budget:
	
	—  Can’t spend over the budget
	
	—  Can apply to one item, or more
	
	—  If you have other rules then announce them
	
	-   Ask participants to allocate their budget against a list:
	
	—  Can do anonymously (preferred)
	
	—  Make it real by asking everyone to be prepared to defend their
	allocation as if defending it to their boss
	
	-   Tally the budgets
	-   Expose the results and discuss
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.5_Sustaining_and_Maturing "12.5      Sustaining and Maturing"
	
	To sustain and mature the EA Capability, the Leader should assess the
	capacity to execute and validate the possibility of change in charter or
	scope with the sponsors:
	
	-   A function-centric EA – focus would be on appropriate business and
	    process architecture, technology sourcing, and cost of operations.
	-   A strategy-centric EA Capability – enablement of sustainable
	    strategic advantage, leveraging technology as a business
	    accelerator, balancing inside-out and outside-in perspectives.
	    Irrespective of the nature of alignment, there is a need to have the
	    members of a team with varied styles of thinking and execution (star
	    gazers, anthropologists, and planners).
	-   An IT-centric team – the challenges are going to be pivoted on CIO
	    priorities: reducing cost of operations and agility to meet the
	    business needs, keeping the ecosystem current with technological
	    updates, and so on.
	
	The styles of these people complement the enterprise capabilities at
	strategic (executive engagement), value addition (managing composition
	of the enterprise), and coordination (common services) levels. As one of
	the former CEOs of Shell Oil puts it: “people are the difference”. EA –
	as much as it is about business strategy and technology – is
	people-centric. To grow the capability, the Leader’s motivations should
	be grounded on people engagement. It is the responsibility of the Leader
	to nurture these three styles and find a balance for the people
	possessing them to be executing on a common set of principles and
	beliefs, namely: connectedness, inclusivity, and relevance.
	
	[]
	
	Figure 24: Sustainable EA
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.6_Building_Community_and_Mentoring "12.6      Building Community and Mentoring"
	
	There are a few things in the enterprise that are everybody’s business –
	customer goals, quality goals, and EA. Every manager or product
	developer’s decision has an impact on the goals of the enterprise.
	Procuring services or products from a supplier introduces friction
	between objectives and the operating model of the enterprise and that of
	the service provider. In addition to the risk of engaging in an economic
	activity, the enterprise is now compounding its risk factors. Given the
	premise that EA reduces risk impact, objectives of service providers
	should be assessed periodically.
	
	As the TOGAF ADM cycle is explored in iterations to achieve maturity,
	develop a playbook to replicate the success with new sets of players,
	not directly under the team providing the EA Capability’s control.
	Success and sustainability of the team providing the EA Capability is
	determined by the belief of the next generation of personnel in the EA
	Capability team - the mentees of the team and that of the sponsor.
	Spreading the knowledge and practice of EA to new parts of the
	enterprise has never hurt the team providing the EA Capability.
	
	Mentoring is one of the techniques to employ to achieve maturity and
	replication of EA efforts in other parts of the enterprise. Being a
	trusted advisor is a form of mentoring. Care must be taken to
	differentiate grooming budding architects and coaching organizational
	leaders. It is likely that architecture work happens in different parts
	of the enterprise, with people who don’t have an architect title or are
	external to the enterprise. Develop deep and continuous engagement with
	such enthusiasts. Identify what aspects of the architecture work would
	become differentiators and intellectual property of the enterprise.
	Promote the differentiators and those who are developing and curating
	those assets.
	
	Identify the annual training cycles or online courses that the
	enterprise employs to build talent. Build targeted 20 to 30-minute talks
	on specific topics to create a pipeline of learning. Depending on the
	size of the enterprise, augment such training topics with periodic
	architecture summits. Another approach is consideration for individuals
	going through technical specialty or architect certifications. Pay
	attention to what certifications are being pursued – architecture
	processes or architecture development. Differentiate expertise in
	architecture method and practice from thought leadership with
	architecture.
	
snippet togaf_business-architecture_business-scenarios_12.6_On_Multi-Voting_and_Rank_Ordering_Prioritization "12.6      On Multi-Voting and Rank Ordering Prioritization"
	
	-   Use whenever you want to get to a consensus view on the priority of
	    items in a list
	-   Multi-voting:
	
	—  Structured system where votes are taken in successive steps where
	each step reduces a list ultimately to three to five items
	
	-   Rank ordering:
	
	—  Where items on a list are ranked 1 to n and the average of all the
	ranking produces a collective view
	
snippet togaf_business-architecture_business-scenarios_12.7_On_Role_Play "12.7      On Role Play"
	
	-   Use when you want to expand people’s perspectives and especially
	    consider another perspective:
	
	—  Often useful if you want two people or two groups to think about
	another person’s or another groups views
	
	-   Describe a situation and put two viewpoints on the table
	-   Ask a person or a group to take a specific role within that
	    situation and describe their views and concerns:
	
	—  Put a supplier in the situation of a buyer
	
	—  Put a buyer in the situation of a supplier
	
	—  Put a patient in the role of a doctor
	
	—  Put a doctor in the role of a patient
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12.7_Tools_and_Techniques "12.7      Tools and Techniques"
	
	In simple terms, create a standard operating procedure and execution
	process for the EA Capability. Tools without interoperability or
	seamless integration leave room for manual efforts and out-of-sync
	versions. Out-of-sync versions result in effort cleansing the
	information instead of effort delivering insights and intelligence. As a
	Leader, spend time and effort to get the right repository to hold the EA
	data with considerations for interoperability and reducing rework for
	downstream work.
	
	Care must be taken to differentiate a project document repository and an
	EA repository. EA artifacts and project artifacts feed each other. Any
	tool or process that requires part of the work to be recreated in
	different tools will lead to failure of adoption.
	
	Categories of documents and repositories to consider are:
	
	-   Diagram and visualizing tools for architecture
	-   Diagram and visualizing tools for solution and technology design
	-   Standards catalogs (industry, business domain, enterprise) and
	    look-up tools to understand the details of the standard
	-   Readiness and maturity assessments and progression management tools
	-   Roadmap management tools, potentially with time series analysis
	    capabilities
	-   Financial and investment analysis tools
	-   Architecture evolution management tools
	
snippet togaf_business-architecture_business-scenarios_12.8_On_Alternative_Analysis_and_Decision_Matrix "12.8      On Alternative Analysis and Decision Matrix"
	
	-   Use when there are too few approaches on the table, maybe looking as
	    if there may be bias towards a given approach
	-   Brainstorm alternatives and put in a normalized list
	-   Put list items in a matrix with additional columns for:
	
	—  Cost
	
	—  Required resources
	
	—  Contribution to problem
	
	—  Feasibility
	
	—  Calculated Rank
	
	-   Ask people to rank each cell 1 (worse) to 5 (best)
	-   Add weight if necessary and calculate
	
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Al        | Cost      | Resources | Con       | Fe        | C         |
	| ternative | (weight   | (weight   | tribution | asibility | alculated |
	|           | =1)       | =1)       | (weight   | (weight   | Rank      |
	|           |           |           | =1)       | =1)       |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Alt 1     |           |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Alt 2 …   |           |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	
snippet togaf_togaf-leaders-guide_12_Establishing_and_Evolving_the_EA_Capability_12_Establishing_and_Evolving_the_EA_Capability "12   Establishing and Evolving the EA Capability"
	
	By defining the process to implement the EA Capability framework,
	governance framework, and a roadmap to implement and manage EA
	initiatives, there should be a blueprint to assure the outcome expected
	from the team providing the EA Capability. By defining the organization
	model for the EA Capability team and building the structure to capture
	and manage architectural contents, the team’s ability to execute on the
	specified course of action (roadmap) is assured as well. Each of the
	chapters until now presented discrete topics of concern. This chapter is
	focused on providing the linkages across these topics to enable a
	“Sustainable EA” practice. It is better to use proven methods like a
	capability or value chain model to stitch the pieces together and
	formulate a management approach.
	
	An EA Capability team is a collection of people (architects, analysts)
	who employ a set of common processes to manage the set of information
	about the organization to enable achievement of the enterprise’s stated
	purpose. The EA Capability is the ability to develop, use, and sustain
	EA.
	
	The enterprise’s leadership are the EA Capability’s customers. The
	Leader should articulate purpose, ethos, and delivery to its customers.
	Focus on the outcome the EA Capability will deliver; foundations for
	future scale and function clarity; and the flexibility to adapt and
	change with the enterprise’s environment. Follow the same concepts of
	identifying the gaps, defining the constraints and controls, and
	incorporate the flexibility needed to periodically adapt the EA
	Capability when developing a roadmap.
	
	This chapter deals with the concept of capability in the context of a
	management model that allows for innovative applications and
	redeployment across the enterprise.
	
snippet togaf_adm_INDEX_12_H_Architecture_Change_Management "-   12. Phase H: Architecture Change Management"
	    -   12.1 Objectives
	    -   12.2 Inputs
	        -   12.2.1 Reference Materials External to the Enterprise
	        -   12.2.2 Non-Architectural Inputs
	        -   12.2.3 Architectural Inputs
	    -   12.3 Steps
	        -   12.3.1 Establish Value Realization Process
	        -   12.3.2 Deploy Monitoring Tools
	        -   12.3.3 Manage Risks
	        -   12.3.4 Provide Analysis for Architecture Change Management
	        -   12.3.5 Develop Change Requirements to Meet Performance
	            Targets
	        -   12.3.6 Manage Governance Process
	        -   12.3.7 Activate the Process to Implement Change
	    -   12.4 Outputs
	    -   12.5 Approach
	        -   12.5.1 Drivers for Change
	        -   12.5.2 Enterprise Architecture Change Management Process
	        -   12.5.3 Guidelines for Maintenance versus Architecture
	            Redesign
snippet togaf_adm_12_H_Architecture_Change_Management_12_H_Architecture_Change_Management "12. Phase H: Architecture Change Management"
	
	  -- ---------------------------------------------------------------------------------------------
	     Chapter Contents: 12.1 Objectives | 12.2 Inputs | 12.3 Steps | 12.4 Outputs | 12.5 Approach
	  -- ---------------------------------------------------------------------------------------------
	
	This chapter looks at establishing procedures for managing change to the
	new architecture.
	
	[]
	
	Figure 12-1: Phase H: Architecture Change Management
	
snippet togaf_guides_microservices-architecture_12_Phase_G_Implementation_Governance "12   Phase G: Implementation Governance"
	
	A key activity in delivering any type of system is governing the
	implementation. This is how the business can be assured that what is
	delivered has not diverged inappropriately from what was requested and
	architected. The objectives of TOGAF Phase G (Implementation Governance)
	are to:
	
	-   Ensure conformance with the Target Architecture by implementation
	    projects
	-   Perform appropriate Architecture Governance functions for the
	    solution and any implementation-driven architecture Change Requests
	
	It is important to note that the entire architecture of a solution which
	consumes microservices will almost certainly not be based solely on
	those microservices. Support for microservices may only determine part
	of the overall Technology Architecture. This reinforces the need for
	governance, so that those Solution Architectures can depend upon the
	microservices.
	
snippet togaf_adm-practitioners_12_Special_Cases_12_Special_Cases "12   Special Cases"
	
snippet togaf_business-architecture_business-scenarios_12_Techniques_and_Tips "12   Techniques and Tips"
	
	The following tips and techniques can be used in various situations
	during workshops and analysis:
	
	-   Use real-world examples
	-   Use exercises to solve a real and relevant issue
	-   Use roundtables and ensure you solicit everyone’s views
	-   Use active and reflective listening
	-   Use brainstorming with affinity analysis in meetings
	-   Use “introduce your neighbor” technique
	-   Use “we believe” exercise
	-   Use money or “credits” voting for prioritization
	-   Consider using multi-voting and/or rank ordering
	-   Consider using role play
	-   Consider using alternative analysis with a decision matrix
	-   Check the checklist
	
snippet togaf_reference-models_government-reference-model_12_Transport_and_Operations "12   Transport and Operations"
	
	Transport and Operations includes activities that enable general
	operations including maintenance and general management, and guarantee
	the safe transfer and availability of people and goods over land, air,
	sea and space.
	
	[]
	
	Figure 12: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Transport and Operations Sector
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_13.1_Mapping_the_EA_Leaders_Guide_to_TOGAF_ADM_Phases "13.1      Mapping the EA Leader’s Guide to TOGAF ADM Phases"
	
	The Preliminary Phase is designed as a customized journey of the TOGAF
	ADM. This journey is predicated on the best practice of developing EA.
	The ADM is not a linear process model; rather it is a logical method
	that places key activity steps together for the purpose of understanding
	the relationship of activity and clarifying information flow. In Table 9
	several TOGAF ADM phases are entered iteratively. Partial indicates work
	only to the extent needed to answer the question at hand. More
	elaboration can be done in subsequent architecture work.
	
	For a graphical representation of this journey see Figure 19. The
	graphic in Figure 19 focuses on Phase A. It highlights that in order to
	complete Phase A, some amount of work is needed in Phases B, C, and D.
	The ADM is used to develop the EA. There is no difference between
	exercising the ADM to architect an EA Capability, a finance capability,
	a portfolio, or an organizational strategy. We are using the concepts of
	ADM to support two different activities. Application of steps in ADM
	phases is limited by the context of supporting the EA Capability.
	
	Table 9: Activity and Key Deliverables
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Enterprise Context and EA Context | Partial Strategic Level Phase B   |
	| (Chapter 4)                       |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Goals, objectives,            |
	|                                   |     initiatives, competitive, and |
	|                                   |     tactic analysis               |
	|                                   | -   Operating model (partners,    |
	|                                   |     suppliers)                    |
	|                                   | -   Explore what-if scenarios and |
	|                                   |     scorecards                    |
	|                                   |                                   |
	|                                   | EA context specific for the EA    |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Goals                         |
	+-----------------------------------+-----------------------------------+
	| Business Objectives for the EA    | Capability Level Phase A          |
	| Capability                        |                                   |
	| (Chapter 5)                       | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Provide initial goals and     |
	|                                   |     objectives                    |
	|                                   | -   Select a reference EA         |
	|                                   |     Capability and maturity model |
	|                                   | -   Candidate EA Capability       |
	|                                   | -   Candidate operating model     |
	|                                   | -   EA Capability gap and         |
	|                                   |     priority roadmap              |
	+-----------------------------------+-----------------------------------+
	| Architecture Governance           | Partial Segment/Capability Level  |
	| (Chapter 6)                       | Phase B                           |
	|                                   |                                   |
	|                                   | For the enterprise:               |
	|                                   |                                   |
	|                                   | -   Enterprise Risk Management    |
	|                                   |     Model                         |
	|                                   | -   Governance Model              |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Risk Management Model         |
	|                                   | -   Governance Model              |
	|                                   | -   Extend candidate operating    |
	|                                   |     model to include EA           |
	|                                   |     governance                    |
	|                                   | -   Initial Architecture          |
	|                                   |     Partition Model               |
	|                                   | -   Trace to EA Capability goals  |
	+-----------------------------------+-----------------------------------+
	| Alignment with Other Frameworks   | Partial Capability Level Phase B  |
	| (Chapter 7)                       | & Partial Phase C (Data)          |
	|                                   |                                   |
	|                                   | For the enterprise:               |
	|                                   |                                   |
	|                                   | -   Reference models for key      |
	|                                   |     frameworks                    |
	|                                   | -   Capability assessment of key  |
	|                                   |     frameworks                    |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Framework touch-points        |
	|                                   | -   Extend candidate operating    |
	|                                   |     model to include other        |
	|                                   |     frameworks                    |
	|                                   | -   Extend EA governance and EA   |
	|                                   |     risk management               |
	|                                   | -   Initial EA Content Framework  |
	|                                   |     aligned to other frameworks   |
	|                                   |     and EA governance             |
	|                                   | -   Candidate architecture        |
	|                                   |     partition model               |
	|                                   | -   Trace to EA Capability goals  |
	|                                   | -   EA Capability and key         |
	|                                   |     framework gap and priority    |
	|                                   |     roadmap                       |
	+-----------------------------------+-----------------------------------+
	| Customization of Architecture     | Capability Level Phase C (Data)   |
	| Contents and Metamodel            |                                   |
	| (Chapter 8)                       | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   EA Content Framework          |
	|                                   | -   EA Content Metamodel          |
	|                                   | -   Viewpoint Library             |
	|                                   | -   Architecture Repository Model |
	|                                   | -   Trace to EA Capability goals  |
	|                                   | -   Initial EA Content Framework  |
	|                                   |     and architecture repository   |
	|                                   |     gap                           |
	+-----------------------------------+-----------------------------------+
	| Organization Model for the EA     | Partial Capability Level Phase B  |
	| Team                              |                                   |
	| (Chapter 9)                       | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   EA organizational model       |
	|                                   | -   Select reference EA skills    |
	|                                   |     framework                     |
	|                                   | -   Initial alignment with        |
	|                                   |     enterprise job titles and     |
	|                                   |     roles                         |
	|                                   | -   Initial accountability matrix |
	|                                   |     for EA Content Framework and  |
	|                                   |     initial architecture          |
	|                                   |     repository                    |
	|                                   | -   Organizational gap and        |
	|                                   |     priority roadmap              |
	+-----------------------------------+-----------------------------------+
	| Process Model                     | Partial Capability Level Phase B  |
	| (Chapter 10)                      |                                   |
	|                                   | Capability Level Phase C (App)    |
	|                                   | and Capability Level Phase D      |
	|                                   |                                   |
	|                                   | For the enterprise:               |
	|                                   |                                   |
	|                                   | -   Process model highlighting    |
	|                                   |     touch-points between EA       |
	|                                   |     Capability and enterprise     |
	|                                   |     processes the EA Capability   |
	|                                   |     supports[27]                  |
	|                                   | -   Performance matrix for key    |
	|                                   |     processes and organization    |
	|                                   | -   Accountability matrix for EA  |
	|                                   |     Content Framework and         |
	|                                   |     organization                  |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Process model                 |
	|                                   | -   Architecture repository       |
	|                                   |     application model             |
	|                                   | -   Matrix for EA Content         |
	|                                   |     Framework and architecture    |
	|                                   |     repository application        |
	|                                   |     architecture                  |
	|                                   | -   Process and architecture      |
	|                                   |     repository gap and priority   |
	|                                   |     roadmap                       |
	+-----------------------------------+-----------------------------------+
	| Create the EA Capability Roadmap  | Capability Level Phase E          |
	| (Chapter 11)                      |                                   |
	|                                   | Create a roadmap highlighting     |
	|                                   | development of the EA Capability  |
	|                                   | by changes in the:                |
	|                                   |                                   |
	|                                   | -   Organizational model          |
	|                                   | -   Process model                 |
	|                                   | -   EA Content Framework          |
	|                                   | -   Architecture repository       |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Trace roadmap to EA           |
	|                                   |     Capability goals              |
	+-----------------------------------+-----------------------------------+
	| Establishing and Evolving the EA  | Capability Level Phase F and      |
	| Capability                        | Capability Level Phase G          |
	| (Chapter 12)                      |                                   |
	|                                   | For the enterprise:               |
	|                                   |                                   |
	|                                   | -   Transition the EA Capability  |
	|                                   |     Roadmap to an Implementation  |
	|                                   |     & Migration Plan              |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Execute the Implementation &  |
	|                                   |     Migration Plan to build the   |
	|                                   |     EA Capability your enterprise |
	|                                   |     desires                       |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.1_Objectives "13.1 Objectives"
	
	The objectives of the Requirements Management phase are to:
	
	-   Ensure that the Requirements Management process is sustained and
	    operates for all relevant ADM phases
	-   Manage architecture requirements identified during any execution of
	    the ADM cycle or a phase
	-   Ensure that relevant architecture requirements are available for use
	    by each phase as the phase is executed
	
snippet togaf_guides_microservices-architecture_13.1_Organizational_Architecture_Processes "13.1      Organizational Architecture Processes"
	
	As an organization moves toward use of microservices as a preferred
	architectural style, this will require changes to the overall
	architecture process. Issues will include:
	
	-   Reviewing Solution Architectures for opportunities to use
	    microservices
	
	—  And, conversely, inappropriate use of microservices
	
	-   Reviewing the organization’s catalog of existing microservices,
	    microservices under development, and retired microservices
	-   Ensuring that microservices in development plan for use beyond the
	    initial solution for which they are intended
	-   Defining the authentication and authorization approach to be used
	    and ensuring that it is in harmony with the overall organization’s
	    authentication and authorization methodology and tooling
	-   Ensuring that a service contract is created for each service being
	    developed, including all the non-functional characteristics for the
	    service, plus expectations upon the infrastructure for the service
	
	The TOGAF Standard discusses organizational architecture management in
	Phase H.
	
snippet togaf_adm-practitioners_13_Transition_Architecture_Managing_Complex_Roadmaps_13.1_Roadmap_Grouping "13.1      Roadmap Grouping"
	
	Start with one version that supports the initial strategy. Flesh out the
	repository from strategy to project. Upon acceptance of the portfolio,
	create versions as necessary. Once the candidate versions are accepted,
	baseline both current and Target Architectures. Create multiple
	baselines of the current transitional state. Create copies of the
	architecture, one per variable, concern, or a related group of
	variables.
	
	Use the same planning horizon to showcase the impact and outcome. The
	moment planning horizons change, analysis becomes complex and results in
	loss of continuity for most decisions.
	
	Each distinct parent roadmap – say if there is a separate roadmap for
	European Union Operations and Australian Operations – name and identify
	them as such. Employ appropriate naming and versioning concepts for and
	derived roadmaps of those created for what-if analysis. Make it
	intuitive to identify discarded alternatives.
	
snippet togaf_adm-practitioners_13_Transition_Architecture_Managing_Complex_Roadmaps_13.2_Comparing_Architectures "13.2      Comparing Architectures"
	
	The point of creating separate roadmaps is to align the scope of each
	Architecture Project. When the Enterprise has any one of the
	characteristic or organizational factors identified earlier in this
	chapter, it would make sense to create a separate Architecture Project
	and roadmap to deal with this complexity.
	
	Employing a standard reference architecture for process, business terms,
	applications, etc., supports cross-project and cross-roadmap analysis.
	Using a standard model provides the flexibility required to map across
	implementation models of the solution suppliers. It also helps in
	evaluating bids and offers from potential suppliers. This is another
	place where use of ABBs would come in handy. Implementation and use of
	ABBs across projects can be analyzed with ease.
	
	Basing all of the architectures on an implementation-neutral reference
	model allows impact of modifications to a specific architecture to be
	identified easily. As shown in Figure 17, the EA Repository tool could
	provide support to identify the change, whether it is to one of the
	attributes of an architectural component or a modification to the
	catalog of components. While working with a federated team, uses of such
	a tool and use of common reference models can go a long way to
	coordinate and communicate the impact of architecture changes. Within
	the roadmap, it is better to keep the analysis patterns consistent.
	
	[]
	
	Figure 17: Using Repository for Managing Roadmaps – I
	
	This same concept of comparing architectures can be used to create and
	analyze year-over-year modifications to the architecture. In Figure 18,
	the EA Repository tool in use allows the Practitioner to trace a change
	to the baseline or the revised version.
	
	[]
	
	Figure 18: Impact Analysis of Architectures
	
	When creating the roadmap, pay attention to impact of change. Any
	change, when introduced, will tarnish the efficiency, overall
	throughput, and sometimes call for duplicative investments. Such
	short-term negative impacts can mask deviations from the roadmap. Inject
	appropriate markers to identify any unintended sub-optimization or
	deviations from the roadmap. The value and outcome map should present
	the time to value and gain/loss at the end of the planning horizon.
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.2_Inputs "13.2 Inputs"
	
	Inputs to the Requirements Management phase are:
	
	-   A populated Architecture Repository (see the TOGAF Standard —
	    Architecture Content)
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture requirements, populating an Architecture Requirements
	    Specification (see the TOGAF Standard — Architecture Content)
	-   Requirements Impact Assessment (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_13.2_Mapping_EA_Content_EA_Leaders_Approach_and_Metamodel "13.2      Mapping EA Content, EA Leader’s Approach, and Metamodel"
	
	None of the questions or concerns raised in this Guide are purely
	technical or isolated to a single field or dimension. To deliver on the
	expectation of EA Capability, other frameworks and best practices should
	be brought together and customized to meet specific needs of the
	enterprise’s environment, roles, and responsibilities.
	
	Based on the activities discussed in this Guide, here is a sample
	mapping of information and where it maps to the generic TOGAF Content
	Metamodel.
	
	Table 10: Mapping to TOGAF Content Metamodel
	
	Note: Mapping is dependent upon the final metamodel.
	
	+-----------------------+-----------------------+-----------------------+
	| Topic                 | Content               | TOGAF Content         |
	|                       |                       | Metamodel Grouping    |
	+=======================+=======================+=======================+
	| Enterprise Context    | Goals, strategies,    | Business Architecture |
	| and EA Context        | objectives,           |                       |
	| (Chapter 4)           | initiatives, success  | Portfolio Management  |
	|                       | measures              |                       |
	|                       |                       | Project Management    |
	|                       | Plans (business,      |                       |
	|                       | strategy, workforce,  | Financial Management  |
	|                       | cash flow)            |                       |
	|                       |                       |                       |
	|                       | Competitive and       |                       |
	|                       | tactic analysis,      |                       |
	|                       | operating model,      |                       |
	|                       | what-if scenarios,    |                       |
	|                       | scorecards            |                       |
	|                       |                       |                       |
	|                       | Locations, partners,  |                       |
	|                       | suppliers             |                       |
	+-----------------------+-----------------------+-----------------------+
	| Business Objectives   | Strategies,           | EA Capability and     |
	| for the EA Capability | objectives,           | Maturity Model        |
	| (Chapter 5)           | initiatives, success  |                       |
	|                       | measures              |                       |
	+-----------------------+-----------------------+-----------------------+
	| Scoping the Depth and | Process diagrams and  | Business Architecture |
	| Breadth of Business   | models, service and   |                       |
	| Impact with the EA    | servicing models,     | EA Capability and     |
	| Capability            | portfolio and         | Maturity Model        |
	| (Section 9.5)         | investments,          |                       |
	|                       | demand/need           | Reference             |
	|                       | descriptions          | Architectures and     |
	|                       |                       | Standards             |
	|                       | People, skills,       |                       |
	|                       | organizational charts |                       |
	+-----------------------+-----------------------+-----------------------+
	| Business Objectives   | People, skills,       | EA Capability and     |
	| for the EA Capability | organizational charts | Maturity Model        |
	| (Chapter 5)           |                       |                       |
	|                       | Customer interaction  | Requirement           |
	| Alignment with Other  | options, types/modes, | Management            |
	| Frameworks            | tools, demands,       |                       |
	| (Chapter 7)           | security/privacy      | Operating Models      |
	|                       | management plans,     |                       |
	| Organization Model    | operational           | Change Management     |
	| for the EA Team       | continuity plans      |                       |
	| (Chapter 9)           |                       | Maturity Management   |
	|                       | Information system    |                       |
	| Process Model         | data – requirements,  | Information           |
	| (Chapter 10)          | applications, tools,  | Technology Lifecycle  |
	|                       | solutions, defects,   | Management            |
	|                       | methods/methodology   |                       |
	|                       |                       |                       |
	|                       | Geospatial data IT    |                       |
	|                       | networks and their    |                       |
	|                       | con                   |                       |
	|                       | nectivity/interaction |                       |
	|                       | maps                  |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          | Knowledge management  | Risk Management       |
	| Governance            | plans, information    |                       |
	| (Chapter 6)           | exchange matrix,      | Governance Model      |
	|                       | events and            |                       |
	| Process Model         | interactions list,    |                       |
	| (Chapter 10)          | roles,                |                       |
	|                       | responsibilities,     |                       |
	|                       | escalation plans      |                       |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_guides_microservices-architecture_13.2_Solution_Architecture "13.2      Solution Architecture"
	
	The architecture of a solution which consumes or provides microservices
	must consider that other organizational solutions might and, in fact,
	are likely to consume or provide microservices. This means that care
	must be taken in a number of areas, including:
	
	-   Explicitly documenting the characteristics, including the
	    non-functional characteristics, of a given microservice; these
	    should be documented in the form of a service contract, to the
	    standards of the organization
	-   Not arbitrarily changing a microservice, given that other parties
	    are likely to depend upon that microservice; this will require
	    understanding who those other parties are and communicating with
	    them about changes
	
snippet togaf_adm-practitioners_13_Transition_Architecture_Managing_Complex_Roadmaps_13.3_General_Guidance "13.3      General Guidance"
	
	A work package or an architecture specification that intersects more
	than one Architecture Project or change effort also introduces
	complexity. The environment for every Enterprise is highly dynamic,
	forcing a need for trade-off and expert judgment every so often.
	Implementation Projects are invariably insulated from all impact from
	developments in the external environment. Complexity happens because
	every transitional state is a fully functional and operational state for
	the Enterprise. The architecture and roadmap evolve to stay abreast or
	ahead of such external changes.
	
	When starting afresh, the Practitioner potentially has the benefit of
	working with the limited set of information about the landscape. As the
	landscape is populated from ongoing Architecture Projects, continually
	pay attention to ruthless abstraction of detail. Set your biases and
	baggage aside. Set the stakeholder preference aside. It is all about the
	least and absolute necessary information to guide a choice. Keep the
	dataset consistent. Eliminate noise and distortions when performing
	analysis of architectures.
	
	Common traps while creating roadmaps include incorrect scoping. The
	Architecture Project may exclude certain functions from the scope.
	Earlier chapters of this Guide explicitly warned you not to stray away
	from the charter of the Architecture Project. The fine-print is that, if
	you identify a need, a gap, call it out – don’t work on developing the
	architecture. It is the responsibility of the Practitioner to call out
	the dependency and document its existence and the disposition of the gap
	in the roadmap. Such deferred items will become its own roadmap. When
	developing architecture for this gap at a later date, make sure that you
	operate in a fixed block of time (same end dates as related roadmaps),
	not a fixed block of duration (say three years for each roadmap).
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.3_Steps "13.3 Steps"
	
	The steps in the Requirements Management phase are described in the
	table below:
	
	+-----------------------+-----------------------+-----------------------+
	|                       | Requirements          | ADM Phase Steps       |
	|                       | Management Steps      |                       |
	+:======================+:======================+:======================+
	| Step 1                |                       | Identify requirements |
	|                       |                       | (typically by         |
	|                       |                       | analyzing how         |
	|                       |                       | business              |
	|                       |                       | goals/objectives can  |
	|                       |                       | be met through the    |
	|                       |                       | design of value       |
	|                       |                       | streams, business     |
	|                       |                       | scenarios, user       |
	|                       |                       | experiences, or the   |
	|                       |                       | provision of          |
	|                       |                       | management            |
	|                       |                       | information) and      |
	|                       |                       | document them in the  |
	|                       |                       | Architecture          |
	|                       |                       | Requirements          |
	|                       |                       | Specification and     |
	|                       |                       | Requirements          |
	|                       |                       | Repository.           |
	+-----------------------+-----------------------+-----------------------+
	| Step 2                | Establish baseline    |                       |
	|                       | requirements:         |                       |
	|                       | determine priorities, |                       |
	|                       | confirm stakeholder   |                       |
	|                       | agreement to          |                       |
	|                       | priorities, and       |                       |
	|                       | document them in the  |                       |
	|                       | Architecture          |                       |
	|                       | Requirements          |                       |
	|                       | Specification and     |                       |
	|                       | Requirements          |                       |
	|                       | Repository.           |                       |
	+-----------------------+-----------------------+-----------------------+
	| Step 3                | Monitor baseline      |                       |
	|                       | requirements.         |                       |
	+-----------------------+-----------------------+-----------------------+
	| Step 4                |                       | Identify new and      |
	|                       |                       | changed requirements: |
	|                       |                       |                       |
	|                       |                       | a.  Remove or         |
	|                       |                       |     re-assess         |
	|                       |                       |     priorities        |
	|                       |                       | b.  Add requirements  |
	|                       |                       |     and re-assess     |
	|                       |                       |     priorities        |
	|                       |                       | c.  Modify existing   |
	|                       |                       |     requirements      |
	+-----------------------+-----------------------+-----------------------+
	| Step 5                | Identify changed      |                       |
	|                       | requirements and      |                       |
	|                       | record priorities:    |                       |
	|                       |                       |                       |
	|                       | a.  Identify changed  |                       |
	|                       |     requirements and  |                       |
	|                       |     ensure the        |                       |
	|                       |     requirements are  |                       |
	|                       |     prioritized by    |                       |
	|                       |     the architect(s)  |                       |
	|                       |     responsible for   |                       |
	|                       |     the current       |                       |
	|                       |     phase, and by the |                       |
	|                       |     relevant          |                       |
	|                       |     stakeholders      |                       |
	|                       | b.  Record new        |                       |
	|                       |     priorities        |                       |
	|                       | c.  Ensure that any   |                       |
	|                       |     conflicts are     |                       |
	|                       |     identified and    |                       |
	|                       |     managed through   |                       |
	|                       |     the phases to a   |                       |
	|                       |     successful        |                       |
	|                       |     conclusion and    |                       |
	|                       |     prioritization    |                       |
	|                       | d.  Generate          |                       |
	|                       |     Requirements      |                       |
	|                       |     Impact Statement  |                       |
	|                       |     (see the TOGAF    |                       |
	|                       |     Standard —        |                       |
	|                       |     Architecture      |                       |
	|                       |     Content) for      |                       |
	|                       |     steering the      |                       |
	|                       |     architecture team |                       |
	|                       |                       |                       |
	|                       | Notes                 |                       |
	|                       |                       |                       |
	|                       | -   Changed           |                       |
	|                       |     requirements can  |                       |
	|                       |     come in through   |                       |
	|                       |     any route         |                       |
	|                       |                       |                       |
	|                       |     To ensure that    |                       |
	|                       |     the requirements  |                       |
	|                       |     are properly      |                       |
	|                       |     assessed and      |                       |
	|                       |     prioritized, this |                       |
	|                       |     process needs to  |                       |
	|                       |     direct the ADM    |                       |
	|                       |     phases and record |                       |
	|                       |     the decisions     |                       |
	|                       |     related to the    |                       |
	|                       |     requirements.     |                       |
	|                       |                       |                       |
	|                       | -   The Requirements  |                       |
	|                       |     Management phase  |                       |
	|                       |     needs to          |                       |
	|                       |     determine         |                       |
	|                       |     stakeholder       |                       |
	|                       |     satisfaction with |                       |
	|                       |     the decisions     |                       |
	|                       |                       |                       |
	|                       |     Where there is    |                       |
	|                       |     dissatisfaction,  |                       |
	|                       |     the phase remains |                       |
	|                       |     accountable to    |                       |
	|                       |     ensure the        |                       |
	|                       |     resolution of the |                       |
	|                       |     issues and        |                       |
	|                       |     determine next    |                       |
	|                       |     steps.            |                       |
	+-----------------------+-----------------------+-----------------------+
	| Step 6                |                       | a.  Assess impact of  |
	|                       |                       |     changed           |
	|                       |                       |     requirements on   |
	|                       |                       |     current (active)  |
	|                       |                       |     phase             |
	|                       |                       | b.  Assess impact of  |
	|                       |                       |     changed           |
	|                       |                       |     requirements on   |
	|                       |                       |     previous phases   |
	|                       |                       | c.  Determine whether |
	|                       |                       |     to implement      |
	|                       |                       |     change, or defer  |
	|                       |                       |     to later ADM      |
	|                       |                       |     cycle; if         |
	|                       |                       |     decision is to    |
	|                       |                       |     implement, assess |
	|                       |                       |     timescale for     |
	|                       |                       |     change management |
	|                       |                       |     implementation    |
	|                       |                       | d.  Issue             |
	|                       |                       |     Requirements      |
	|                       |                       |     Impact Statement, |
	|                       |                       |     Version n+1       |
	+-----------------------+-----------------------+-----------------------+
	| Step 7                |                       | Implement             |
	|                       |                       | requirements arising  |
	|                       |                       | from Phase H.         |
	|                       |                       |                       |
	|                       |                       | The architecture can  |
	|                       |                       | be changed through    |
	|                       |                       | its lifecycle by the  |
	|                       |                       | Architecture Change   |
	|                       |                       | Management phase      |
	|                       |                       | (Phase H). The        |
	|                       |                       | Requirements          |
	|                       |                       | Management process    |
	|                       |                       | ensures that new or   |
	|                       |                       | changing requirements |
	|                       |                       | that are derived from |
	|                       |                       | Phase H are managed   |
	|                       |                       | accordingly.          |
	+-----------------------+-----------------------+-----------------------+
	| Step 8                | Update the            |                       |
	|                       | Architecture          |                       |
	|                       | Requirements          |                       |
	|                       | Repository with       |                       |
	|                       | information relating  |                       |
	|                       | to the changes        |                       |
	|                       | requested, including  |                       |
	|                       | stakeholder views     |                       |
	|                       | affected.             |                       |
	+-----------------------+-----------------------+-----------------------+
	| Step 9                |                       | Implement change in   |
	|                       |                       | the current phase.    |
	+-----------------------+-----------------------+-----------------------+
	| Step 10               |                       | Assess and revise gap |
	|                       |                       | analysis for past     |
	|                       |                       | phases.               |
	|                       |                       |                       |
	|                       |                       | The gap analysis in   |
	|                       |                       | the ADM Phases B      |
	|                       |                       | through D identifies  |
	|                       |                       | the gaps between      |
	|                       |                       | Baseline and Target   |
	|                       |                       | Architectures.        |
	|                       |                       | Certain types of gap  |
	|                       |                       | can give rise to gap  |
	|                       |                       | requirements.         |
	|                       |                       |                       |
	|                       |                       | The ADM describes two |
	|                       |                       | kinds of gap:         |
	|                       |                       |                       |
	|                       |                       | -   Something that is |
	|                       |                       |     present in the    |
	|                       |                       |     baseline, but not |
	|                       |                       |     in the target     |
	|                       |                       |     (i.e., eliminated |
	|                       |                       |     — by accident or  |
	|                       |                       |     design)           |
	|                       |                       | -   Something not in  |
	|                       |                       |     the baseline, but |
	|                       |                       |     present in the    |
	|                       |                       |     target (i.e.,     |
	|                       |                       |     new)              |
	|                       |                       |                       |
	|                       |                       | A "gap requirement"   |
	|                       |                       | is anything that has  |
	|                       |                       | been eliminated by    |
	|                       |                       | accident, and         |
	|                       |                       | therefore requires a  |
	|                       |                       | change to the Target  |
	|                       |                       | Architecture.         |
	|                       |                       |                       |
	|                       |                       | If the gap analysis   |
	|                       |                       | generates gap         |
	|                       |                       | requirements, then    |
	|                       |                       | this step will ensure |
	|                       |                       | that they are         |
	|                       |                       | addressed,            |
	|                       |                       | documented, and       |
	|                       |                       | recorded in the       |
	|                       |                       | Architecture          |
	|                       |                       | Requirements          |
	|                       |                       | Repository, and that  |
	|                       |                       | the Target            |
	|                       |                       | Architecture is       |
	|                       |                       | revised accordingly.  |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.4_Outputs "13.4 Outputs"
	
	The outputs of the Requirements Management process may include, but are
	not restricted to:
	
	-   Requirements Impact Assessment (see the TOGAF Standard —
	    Architecture Content)
	-   Updated Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content: Architecture Requirements
	    Specification), if necessary
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which may be produced in this
	phase, describing them in detail and relating them to entities,
	attributes, and relationships in the TOGAF Enterprise Metamodel.
	
	The Architecture Requirements Repository will be updated as part of the
	Requirements Management phase and should contain all requirements
	information.
	
	When new requirements arise, or existing ones are changed, a
	Requirements Impact Statement is generated, which identifies the phases
	of the ADM that need to be revisited to address the changes. The
	statement goes through various iterations until the final version, which
	includes the full implications of the requirements (e.g., costs,
	timescales, and business metrics) on the architecture development. Once
	requirements for the current ADM cycle have been finalized then the
	Architecture Requirements Specification should be updated.
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5.1_General "13.5.1 General"
	
	As indicated by the "Requirements Management" circle at the center of
	the ADM graphic, the ADM is continuously driven by the Requirements
	Management process.
	
	It is important to note that the Requirements Management circle denotes
	not a static set of requirements, but a dynamic process whereby
	requirements for Enterprise Architecture and subsequent changes to those
	requirements are identified, stored, and fed into and out of the
	relevant ADM phases, and also between cycles of the ADM.
	
	The ability to deal with changes in requirements is crucial.
	Architecture is an activity that by its very nature deals with
	uncertainty and change — the "grey area" between what stakeholders
	aspire to and what can be specified and engineered as a solution.
	Architecture requirements are therefore invariably subject to change in
	practice. Moreover, architecture often deals with drivers and
	constraints, many of which by their very nature are beyond the control
	of the enterprise (changing market conditions, new legislation, etc.),
	and which can produce changes in requirements in an unforeseen manner.
	
	Note also that the Requirements Management process itself does not
	dispose of, address, or prioritize any requirements; this is done within
	the relevant phase of the ADM. It is merely the process for managing
	requirements throughout the overall ADM.
	
	It is recommended that an Architecture Requirements Repository (see the
	TOGAF Standard — Architecture Content) is used to record and manage all
	architecture requirements. Unlike the Architecture Requirements
	Specification, and the Requirements Impact Assessment, the Architecture
	Requirements Repository can hold information from multiple ADM cycles.
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5.2_Requirements_Development "13.5.2 Requirements Development"
	
	The first high-level requirements are articulated as part of the
	Architecture Vision, generated by means of the business scenario or
	analogous technique.
	
	Each phase of the ADM, from Preliminary to Phase H, must select the
	approved requirements for that phase as held in the Architecture
	Requirements Repository and Architecture Requirements Specification. At
	the completion of the phase the status of all such requirements needs to
	be updated. During the phase execution, new requirements generated for
	future architecture work within the scope of the current Statement of
	Architecture Work need to be documented within the Architecture
	Requirements Specification, and new requirements which are outside of
	the scope of the current Statement of Architecture Work must be input to
	the Architecture Requirements Repository for management through the
	Requirements Management process.
	
	In each relevant phase of the ADM the architect should identify types of
	requirement that must be met by the architecture, including applicable:
	
	-   Functional requirements
	-   Non-functional requirements
	
	When defining requirements the architect should take into account:
	
	-   Assumptions for requirements
	-   Constraints for requirements
	-   Domain-specific principles that drive requirements
	-   Policies affecting requirements
	-   Standards that requirements must meet
	-   Organization guidelines for requirements
	-   Specifications for requirements
	
	Deliverables in later ADM phases also contain mappings to the design
	requirements, and may also generate new types of requirements (for
	example, conformance requirements, time windows for implementation).
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5.3.1_Business_Scenarios "13.5.3.1 Business Scenarios"
	
	A technique used to analyze how a business goal or objective can be met
	by a process or value stream. Analyzing where the activities in that
	process are performed by human and computer actors is a highly effective
	way to identify and clarify architecture requirements. The technique is
	detailed in the TOGAF® Series Guide: Business Scenarios.
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5.3.2_Requirements_Tools "13.5.3.2 Requirements Tools"
	
	There is a large, and increasing, number of Commercial Off-The-Shelf
	(COTS) tools available for the support of Requirements Management,
	albeit not necessarily designed for architecture requirements.
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5.3_Resources "13.5.3 Resources"
	
	The world of requirements engineering is rich with emerging
	recommendations and processes for Requirements Management. The TOGAF
	Standard does not mandate or recommend any specific process or tool; it
	simply states what an effective Requirements Management process should
	achieve (i.e., the "requirements for requirements", if you like).
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13.5_Approach "13.5 Approach"
	
snippet togaf_adm_INDEX_13_ADM_Architecture_Requirements_Management "-   13. ADM Architecture Requirements Management"
	    -   13.1 Objectives
	    -   13.2 Inputs
	    -   13.3 Steps
	    -   13.4 Outputs
	    -   13.5 Approach
	        -   13.5.1 General
	        -   13.5.2 Requirements Development
	        -   13.5.3 Resources
	            -   13.5.3.1 Business Scenarios
	            -   13.5.3.2 Requirements Tools
	
snippet togaf_adm_13_ADM_Architecture_Requirements_Management_13_ADM_Architecture_Requirements_Management "13. ADM Architecture Requirements Management"
	
	  -- ---------------------------------------------------------------------------------------------
	     Chapter Contents: 13.1 Objectives | 13.2 Inputs | 13.3 Steps | 13.4 Outputs | 13.5 Approach
	  -- ---------------------------------------------------------------------------------------------
	
	This chapter looks at the process of managing architecture requirements
	throughout the ADM.
	
	[]
	
	Figure 13-1: ADM Architecture Requirements Management
	
snippet togaf_reference-models_government-reference-model_13_Conclusion "13   Conclusion"
	
	The GRM provides public sector organizations with a common framework and
	methodology to plan and execute change. The 11 sectors provide a view by
	which government organizations can segment departments to facilitate the
	identification of change impacts and map dependencies. The drivers for
	change provide a view of common themes within the government and can be
	leveraged to inform overall outcomes.
	
	Ultimately. this document provides direction to develop Business
	Architecture assets that will help public sector decision-makers to
	resolve problems, manage change, and enable effective future planning.
	
	Appendix A: Government Reference Model Visual
	
	This appendix provides an overview of the structure and content of the
	L1-L3 elements of the proposed GRM across the 11 sectors.
	
	[]
	
	[]
	
	[]
	
	[]
	
	[]
	
	Acronyms & Abbreviations
	
	ABB        Architecture Building Block
	
	AI         Artificial Intelligence
	
	DMaSC      Defence Modeling and Simulation Coherence (British Army)
	
	ERP        Enterprise Resource Planning
	
	GRM        Government Reference Model
	
	IoT        Internet of Things
	
	KPI        Key Performance Indicator
	
	PFA        Pension Fund Administration
	
	RPA        Robotic Process Automation
	
	RSA        Retirement Savings Account
	
	SCTA       Service Command Technical Authority (British Army)
	
	VR         Virtual Reality
	
	------------------------------------------------------------------------
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework "13   Mapping the EA Leader’s Guide to the TOGAF Framework"
	
	The EA Leader’s approach described in this Guide can be mapped to two
	central elements in the TOGAF framework: the Architecture Development
	Method (ADM) and the TOGAF Content Framework.
	
	The activity described in this Guide follows the ADM’s Preliminary
	Phase; the Preliminary Phase is a customized path through the TOGAF ADM.
	This journey highlights a practical example of the TOGAF concept of
	iteration, answering the correct question at the right level of detail
	to inform the next question and decision.
	
	The answers to the questions represent information that may be aligned
	with the contents of the TOGAF Content Framework. How this information
	is rendered is dependent upon:
	
	-   How the EA team is structured
	-   The tools it uses
	-   The nature of the EA Repository
	-   How the EA Capability performs information management
	
	High-functioning teams will take a more rigorous approach to information
	management (EA Content Framework), employ a more formal architecture
	description discipline (EA Content Metamodel), and utilize purpose-built
	modeling and repository management tools (EA Repository). For more
	detail, see Section 8.4 (Information Managed by the EA Capability).
	
snippet togaf_guides_microservices-architecture_13_Phase_H_Architecture_Change_Management "13   Phase H: Architecture Change Management"
	
	There are two focus areas for Phase H (Architecture Change Management)
	as an organization transitions to and employs microservices. Those are
	changes in the overall, organizational architecture processes and then,
	at the solution level, change management for an approved Solution
	Architecture.
	
snippet togaf_business-architecture_business-scenarios_13_Summary "13   Summary"
	
	Business Scenarios help to address one of the most common issues facing
	executives: aligning significant transformation, such as those supported
	by IT changes, with the business.
	
	The success of any major project is measured by the extent to which it
	is linked to business requirements, and demonstrably supports and
	enables the enterprise to achieve its business outcomes. The Business
	Scenario method is an important technique that may be used at various
	stages of defining an Enterprise Architecture, or in support of any
	other major project, to derive the characteristics of the architecture
	directly from the high-level requirements of the business. Business
	Scenarios are used to help identify and understand business needs, and
	thereby to derive the business requirements that the architecture
	development, and ultimately the solution, has to address.
	
	However, it is important to remember that Business Scenarios are just a
	tool, not the objective. They are a part of, and enable, the larger
	process of architecture and downstream development. The architect should
	use them, but not get lost in them. The key is to stay focused – watch
	out for “feature creep”, and address the most important issues that tend
	to return the greatest value.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] Taken from
	www.kinesisinc.com/how-to-write-a-powerful-value-proposition.
	
snippet togaf_adm-practitioners_13_Transition_Architecture_Managing_Complex_Roadmaps_13_Transition_Architecture_Managing_Complex_Roadmaps "13   Transition Architecture: Managing Complex Roadmaps"
	
	Until now, this Guide made the effort and process simple by describing
	most of the concepts using a linear time scale. It gave an impression
	that creating a well aligned set of work packages vectored by business
	cycle and planning horizon gives you potential transition states and a
	near linear roadmap. Recall this simple statement made in Chapter 5 in
	the context of the EA Repository: “Baseline provides reference for all
	change. The target state is what stakeholders have approved. Transition
	states are partially realized targets between current state and target
	state. Mix the four characteristics of the EA Landscape: breadth, depth,
	time, and recency. Mix the different Architecture Projects that can work
	on the same subject at different times and at different levels of
	detail.” That’s the only hint to indicate real-world complexity.
	
	In addition to characteristics, other organizational factors that add to
	complexity are:
	
	-   Advancements and changes outside the Enterprise
	-   Shared services
	-   Collaboration with suppliers and partners, including portfolio
	    ownership model
	-   Impenetrable dependencies
	-   Multiple geopolitical boundaries (fiscal calendars, regulations,
	    cultures)
	-   Varying rate of maturity and growth of teams
	-   EA team model (federated, centralized, etc.)
	-   Availability of multiple solutions or announcement of end-of-life
	    for products currently in use
	
	This is the reality. One Enterprise roadmap gets broken down into
	segment, portfolio, or geography. The Enterprise will be pursuing more
	than one concurrent goal, say efficiency and retooling. For each
	business cycle, the roadmap is revisited to make adjustments, bottom-up
	and at times top-down. This is a clear use-case that drives the need for
	a good EA Repository: a repository that maintains the integrity of the
	current state and target state, but allows creation of variants.
	
snippet togaf_adm-practitioners_14_Phase_H_Coordination_and_Business_Cycle_in_Action_14_Phase_H_Coordination_and_Business_Cycle_in_Action "14   Phase H (Coordination and Business Cycle in Action)"
	
	An EA is developed for one very simple reason: to guide effective
	change. The change can be materialized only when it is adequately
	supported with resources. Every Enterprise has a business cycle that
	plans and allocates resources, normally one fiscal year. The fiscal year
	dates are inflexible and decisions will be made with the data available
	and reasonable judgment.
	
	If the EA Capability has been requested by the Enterprise, it is an
	acknowledgement of the fact that “implicit” architecture and the
	resulting judgments that drove investments and changes are not
	delivering what the Enterprise wants. It is likely that the EA effort
	was kicked off after the budget allocation for the current business
	cycle or with very limited time to influence the decisions of the
	current business cycle. Do not waste time in the current cycle. Stay
	happy with the “implicit acknowledgement” and focus on building the data
	for the next cycle. Though not stated, the sponsor is looking to protect
	“future” decisions with EA. The moment the Practitioner realizes they
	are late for the next cycle, shift the time investment to refurbish the
	résumé of the entire team (see Section 11.2).
	
	Phase H demands the Practitioner to identify the bottom-up drivers for
	change; change due to improvements in available technologies or
	conditions controlling the operations or environment of the Enterprise;
	and initiate the architecture work for the next target transition state
	(top-down driver). This does not mean that the Practitioner need to
	flesh out everything that is covered by the charter for the EA
	Capability or the budget.
	
	Earlier chapters impressed upon “just enough architecture” and
	characteristics of the EA Landscape. Understand the capacity and
	capability of the team to scope the work. Remember, the definition of
	“Enterprise” is fungible and used to control the scope of analysis. If
	this is the first pass in developing the Architecture to Support
	Strategy, scope the effort accordingly. Define and distribute the work
	packages in proportion to the capability and readiness of the
	Enterprise. All of these are aimed at one thing – influencing and
	garnering the resources in the next cycle.
	
	Tying everything to the budget cycle simply highlights the importance of
	good EA in guiding and constraining the change decisions. When there is
	no practical input from a good EA team before the decision an
	organization needs to take is made, the decision is still made. It might
	even be a good choice, but it was a less informed choice.
	
	The moment there is awareness that data was available, but late,
	irrespective of the quality of the decision made, the EA team loses its
	relevance. It is a fail-fail scenario resulting in questioning the value
	and purpose of the EA team.
	
	Depending on the size of the Enterprise (irrespective of the scope of
	the EA work), budget preparation may start two to four months before the
	start of the fiscal year. The Practitioner, the Implementation Project
	architect, and the Implementation Project manager need to play the role
	of SME to assess the ability of the implementation team to complete all
	the work packages at least two to four weeks before the start of budget
	preparation date.
	
	Other than the first year of operation of the EA team, most subsequent
	architecture work is initiated from Phase H. Phase H provides ongoing
	review of value realization and monitoring of change. Change and failure
	to realize value provide entry points to the ADM. Never be late – four
	weeks before the start of budget planning is too late. The EA team needs
	to be aligned with the organization’s planning, budgeting, operational,
	and change processes. Figure 19 shows a timeline view, depicting an
	alignment of key decisions made during a business cycle and the purpose
	architectures.
	
	[]
	
	Figure 19: Business Cycle and Architecture by Purpose
	
	Once the Practitioner’s communication informs and influences the budget
	planning, the path forward is set. This superior architecture governs
	and constrains the rest of the activities.
	
	The second most important activity is supporting budget control. The
	architect of the Architecture Project is the agent for the stakeholder
	for the implementation team; the architect is also the SME for the
	portfolio manager in validating the progress earned to value. It is
	common to see a Practitioner tripped by the duality of role in the
	budget control phase to lose focus on the budget planning activities.
	Never forget that the sole purpose of the Practitioner is to influence
	and guide change – not to get into the detail of implementation.
	
	The EA team is intentional about every effort, irrespective of the name
	used – process improvement, operations, Keep-The-Lights-On (KTLO),
	growth, transformation, etc. Every effort and idea contributes to the
	Target Architecture. Even through the superior architecture constrains
	the Architecture to Support Portfolio and Project, nothing is committed
	and accepted as the next transition state until resources (budget) are
	allocated. Random ideas from the wild (see Section 8.6) will find their
	way into the process. The Practitioner watches like a hawk to identify
	such interesting work packages and triggers a review, trade-off, and
	governance of the “new” portfolio. Unless sufficient insight is gained
	about the “behavioral” patterns of the organization, it is difficult to
	discern “pet projects” and “random ideas” disguised as “bottom-up”
	effort from a legitimate initiative to bridge a gap. Perform a simple
	sniff test – is the architecture specification trying to accomplish more
	than one thing; stakeholder trade-off – are the concerns aligned or
	being accepted for lack of time to analyze. Create a change request and
	leave a bread crumb to revisit and stabilize the architecture in the
	next cycle.
	
	Understand how the Enterprise employs discretionary funds; use them
	wisely. A practical approach would be guiding allocation of such
	discretionary funds for exploratory work packages, until the alignment
	to roadmap could be rationalized and included in the portfolio.
	Acceptance of such requests is an explicit change to the Target
	Architecture. Avoid as much as possible. Follow the change management
	processes. No exceptions. The role being played by the Practitioner at
	this stage is more of a mediator and negotiator, applying the
	architectural knowledge. At the end of the day, the Practitioner is
	responsible and accountable for the stability and integrity of the
	architecture.
	
	At the time of finalizing the allocation of funds, good architecture
	will speak for itself. The Practitioner need not be in the room to guide
	the decision. When the allocation happens, the decision-makers are
	validating that the project manager, portfolio manager, and the
	implementation architect fully understand and agree to deliver the
	outcome in conformance to the architecture. The decision-makers are
	already convinced of the need for the project and its outcome. If the
	Practitioner enters a scenario requiring change to the architecture, it
	is too late. The foundation is faulty. The Architecture Project and the
	Implementation Project cannot proceed. Go back to the architecture
	specifications and stakeholder concerns. Be prepared to face the
	consequence of incomplete work.
	
	If the Practitioner had followed everything in this document up until
	Chapter 12, everything mentioned in this chapter should appear to be a
	foreign concept. Otherwise, start over with this document.
	
snippet togaf_guides_microservices-architecture_14_Summary "14   Summary"
	
	In summary, there are a number of methods, tools, and reference
	materials available to help the Enterprise Architect develop
	Microservices Architecture (MSA) for distributed applications. The Open
	Group standards and publications are suggested. Some are directly
	focused on SOAs and the readiness of an organization to adopt them, such
	as OSIMM; others are not directly focused but regularly useful, such as
	outputs of The Open Group Security Forum.
	
	The adoption of an architecture capability to support an MSA requires
	considerable activity in the TOGAF Preliminary Phase. These activities
	and service-specific Work Group tools include:
	
	-   Adapting the principles of MSA for appropriate levels of Enterprise
	    Architecture practices – recognize that an MSA will be a significant
	    part of the Enterprise Architecture, but will never be a complete
	    Enterprise Architecture in itself
	-   Determining organizational readiness for service-orientation (OSIMM)
	-   Governance: adapting The Open Group SOA Governance Vitality Method
	    (SGVM), recognizing that governance of an MSA in a distributed
	    environment requires distributed, federated governance, as detailed
	    in this document
	-   Organization: ensuring that the organization is skilled, arranged,
	    and governed in such a way as to support distributed MSA
	    applications; compatible practices such as DevOps are suggested
	
	The changes in the rest of the TOGAF ADM phases cover how an
	architecture is described, analyzed, and documented. During an iteration
	of the ADM the practitioner needs to consider the relationship between
	the MSA layers and the overall enterprise, and the artifacts necessary
	to document the interfaces between them.
	
	At different levels of granularity the purpose of the ADM cycle will
	vary. In strategic-level work, the purpose is identifying whether MSA is
	needed, and in which segments. In segment-level work, describing the
	structure and capability requirements of the MSA takes place. Finally,
	in capability-level work, the purpose is to identify and describe the
	requirements of the MSA services that will be implemented.
	
	When delivering MSA with the TOGAF framework, the practitioner should
	never lose sight of the final objective: MSA solutions that address
	management of the enterprise’s complexity and provide business agility
	in efficiently meeting the needs of specific business capabilities.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.1.1_Target_Architecture "15.1.1 Target Architecture"
	
	The TOGAF Standard provides a key concept to govern the Target
	Architecture: the Architecture Project.
	
	The Architecture Project is used to direct and control the EA team to
	address issues in the Enterprise. An Architecture Project starts with a
	Request for Architecture Work. The primary control is Architecture
	Project management using the Statement of Architecture Work. For a
	broader discussion of controlling the development of the Target
	Architecture, see the Architecture Project Management White Paper.[36]
	
	In short, the Practitioner is directed to develop an architecture within
	a controlled scope. Within that controlled scope, the Practitioner is
	directed to the stakeholder’s preferences. Preferences are expressed in
	terms of objective, priority, and specification. Best practice
	requirements management chases objective and priority as the baseline.
	The governance test will ask whether the Practitioner is addressing the
	stakeholder’s concerns.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.1.2_Implementation_Projects_and_Other_Change "15.1.2 Implementation Projects and Other Change"
	
	The TOGAF Standard provides two key concepts to govern Implementation
	Projects and other change: the Architecture Contract and the
	Architecture Requirements Specification.
	
	The Architecture Contract is used to direct and control the
	implementation team to work towards a deliberant future. Regardless of
	the document structure an Architecture Contract takes in a
	Practitioner’s organization it will contain the same directional
	elements and provide a means to test compliance.
	
	The Architecture Requirements Specification is used to direct and
	control the creativity of the implementation team. Every Architecture
	Requirements Specification enables control of the implementation team.
	Design, implementation, and other change choices can be tested against
	the Architecture Requirements Specification.
	
	In short, the implementation team is directed to create changes with
	intentional value-based outcomes. Best practice governance enables the
	organization to control value realization.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.1_What_is_Governed_and_Why "15.1      What is Governed and Why?"
	
	Two distinct things must be governed. First, the development of the
	Target Architecture. Second, all change within the scope of the Target
	Architecture. Without the first, the Practitioner cannot support their
	organization’s leadership directing and controlling change. Without the
	latter, there was no point in developing a good target that provides an
	organization’s best achievable course forward.
	
	Central to the definition of governance is “directs and controls”.
	Typically, the Practitioner and implementer are directed, and both are
	controlled by the stakeholder. This chapter will use the terms direct
	and control for focus.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.2.1_Target_Checklist "15.2.1 Target Checklist"
	
	Use the following checklist to execute architecture governance. Good
	Practitioners understand that only stakeholders can approve
	architecture. A good governance process will require the Practitioner to
	demonstrate the following when assessing a Target Architecture:
	
	
	  1.   Were the correct stakeholders identified?                                                                                                        Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, direct the architect to engage with the stakeholders appropriate to the scope of the architecture being developed.
	  2.   Were constraints and guidance from the superior architecture taken into account?                                                                 Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, direct the Practitioner to perform their job and take into account guidance and constraints from the superior architecture. Where the Practitioner identifies a conflict, obtain a recommendation on whether to grant relief from the superior architecture or enforce the superior architecture. This decision must be made by the superior architecture stakeholders.
	  3.   Do appropriate SMEs agree with the facts and interpretation of the facts in the architecture?                                                    Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner has to do their job and engage with the SMEs. Where the Practitioner identifies a conflict with, or between, SMEs, develop a recommendation for the stakeholders that they should have limitations in confidence.
	  4.   Do any constraints or guidance produced reflect the views produced for stakeholders and any underpinning architecture models and analysis?       Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner needs to do their job and develop appropriate views that are consistent with analysis.
	  5.   Do the views produced for the stakeholders reflect their concerns and reflect any underpinning architecture models and analysis?                 Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner needs to do their job and develop appropriate views.
	  6.   Do the stakeholders understand the value, and any uncertainty in achieving the value, provided by reaching the target state?                     Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner needs to do their job and develop appropriate views, and other work products, then return to the stakeholders.
	  7.   Do the stakeholders understand the work necessary to reach the target state and any uncertainty (risk) in successfully accomplishing the work?   Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner needs to do their job and develop appropriate work products and return to the stakeholders.
	  8.   Do the stakeholders understand any limitations in confidence they should have in the Target Architecture?                                        Yes/No
	                                                                                                                                                        If yes, proceed.
	                                                                                                                                                        If no, the Practitioner needs to do their job and develop appropriate guidance on the limitations in confidence and return to the stakeholders.
	  9.   Have the stakeholders approved the views?                                                                                                        Yes/No
	
	
	If the answer to the last question is yes, the governance process is
	done. The architecture, associated view, architecture specifications,
	controls, and work packages are ready for publication in the EA
	Repository as an approved Target Architecture.
	
	If the answer to the last question is no, then there is a decision on
	whether the Practitioner should rework the architecture or the
	Architecture Project should be canceled. Reworking the architecture
	typically requires the Practitioner to finally embrace the stakeholder’s
	preferences. Rework may require more advanced trade-off.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.2.2_Implementation_and_Other_Change_Checklist "15.2.2 Implementation and Other Change Checklist"
	
	When the architecture is being used, changes to the Enterprise are
	guided and constrained. Two factors impact governance of change. First,
	organizations operate in a dynamic environment, and the analysis of the
	Target Architecture cannot have assessed every circumstance or change
	option possible. Second, the target was produced for a purpose and may
	not have been developed to the level of detail required for the current
	use. The governance process requires flexibility. When non-compliance is
	identified, the Enterprise must either change the architecture, provide
	temporary relief from constraint, or enforce the architecture. If relief
	is not temporary, the Enterprise has chosen the worst available option:
	changing the target without bothering with analysis and approval.
	
	Two governance roles are often performed by the Practitioner: the
	auditor and the architect. Compliance assessment is an auditor role.
	When non-compliance is identified, the architect needs to produce an
	impact assessment and recommendation on what to do. The recommendation
	will have three choices: First, enforce compliance; second, provide
	temporary relief; and third change the Target Architecture.
	
	The choice in the recommendation will be driven by the impact
	assessment. Practitioners must assess impact on the same terms as the
	target was developed. Assessing on any other terms invalidates the
	assessment and recommendation.
	
	Implementation governance assesses compliance. Compliance assessment
	needs to be done soon enough that course correction is viable. As
	identified in the walk-through chapters, compliance assessment against
	value and operational change are as important as project-driven change.
	
	This checklist is designed to assist the Practitioner understand what
	must be demonstrated during the governance process to address a
	non-compliance report:
	
	  ---- --------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  1.   Did the organization embarking on a change reasonably interpret the Target Architecture’s guidance and constraints?                                             Yes/No
	                                                                                                                                                                       If yes, their interpretation should be accepted as compliance and any issues addressed through a change to the architecture. This is a key point. Good architecture can have multiple implementation choices, and the implementer is not required to adhere to opinion. If the implementation choice is a reasonable interpretation, it should be judged compliant.
	                                                                                                                                                                       If no, proceed.
	  2.   Do appropriate SMEs agree with the facts and interpretation of the facts in the impact assessment?                                                              Yes/No
	                                                                                                                                                                       If yes, proceed.
	                                                                                                                                                                       If no, the Practitioner has to do their job an engage with the SMEs. Where the Practitioner identifies a conflict with, or between, SMEs, develop a report for the stakeholders identifying what limitations in confidence they should have in the impact assessment.
	  3.   Do appropriate SMEs agree with the recommendation to enforce the target, grant time-bound relief, or change the architecture?                                   Yes/No
	                                                                                                                                                                       If yes, proceed.
	                                                                                                                                                                       If no, the Practitioner has to do their job and engage with the SMEs. Where the Practitioner identifies a conflict with, or between, SMEs, develop a report identifying what limitations in confidence the stakeholder should have in the compliance recommendation.
	  4.   Do the views and other materials produced for the stakeholders reflect the impact assessment and reflect any underpinning architecture models and analysis?     Yes/No
	                                                                                                                                                                       If yes, proceed to the stakeholders for approval.
	                                                                                                                                                                       If no, the Practitioner has to do their job.
	  5.   Do the stakeholders understand any limitations in confidence they should have in the impact assessment?                                                         Yes/No
	                                                                                                                                                                       If yes, proceed.
	                                                                                                                                                                       If no, the Practitioner has to do their job and provide the appropriate work products that highlight the impact of limitations in confidence and return to the stakeholders.
	  6.   Do the stakeholders understand the impact on prior expected value, and any change in certainty in achieving the value, provided by reaching the target state?   Yes/No
	                                                                                                                                                                       If yes, proceed.
	                                                                                                                                                                       If no, the Practitioner has to do their job and provide the appropriate work products that highlight the impact on expected value, and on uncertainly in reaching the expected value and return to the stakeholders.
	  7.   Have the stakeholders approved the recommendation to enforce the target, grant relief, or change the architecture?                                              Yes/No
	
	
	If the answer to the last questions is yes, the organization should
	action the recommendation. How this is actioned is context and
	organization-specific. Where compliance is enforced, the governance
	process should look for evidence of a course correction to the
	Implementation Project. Lastly, where relief is provided, the
	Practitioner should ensure that future compliance assessment and
	reporting take place to review time-bound relief. Without this step, the
	Enterprise has simply agreed to change the Target Architecture without
	the bother of approval.
	
	If the answer is no, the stakeholder has spoken. A Practitioner can make
	the choice to try and convince the stakeholder through expanded
	information provided to the stakeholder. One of the common mistakes is
	that the Practitioner either switched terms of assessment from those
	used to develop the target, or failed to embrace the stakeholder’s
	preferences when developing the impact assessment.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.2.3_Long-Term_Compliance_Reporting "15.2.3 Long-Term Compliance Reporting"
	
	The chapters discussing walk-throughs for Architecture to Support
	Strategy, Portfolio, and Project all included assessments of in-flight
	change and consider using summary reporting with a high visual impact.
	Below is an example of reporting against constraints, expected value,
	and known gaps. In all cases, the assessment will return either not
	applicable, conformance, or non-conformance. Good Practitioners will
	look for binary tests: compliance and con-compliance (Red/Green) where
	possible. Where binary testing is not possible, a 1-to-3 scale
	(Red/Yellow/Green) should provide sufficient range to provide a summary
	report.
	
	Table 10: Example of Summary Governance Reporting
	
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Constraint      | Value           | Gap             |
	|                 |                 |                 |                 |
	|                 | (Architecture   | (Best done in   |                 |
	|                 | Principle,      | terms of the    |                 |
	|                 | Architecture    | Enterprise’s    |                 |
	|                 | Requirements    | mandatory       |                 |
	|                 | Specification,  | concerns)       |                 |
	|                 | or Control)     |                 |                 |
	+=================+=================+=================+=================+
	| Current state:  | Conforms        | Fails to        | Not Applicable  |
	| assess what the |                 | Deliver         |                 |
	| Enterprise has  |                 |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Implementation  | Violates        | Not Applicable  | Filling         |
	| Project: assess |                 |                 |                 |
	| project,        |                 |                 |                 |
	| design, and     |                 |                 |                 |
	| implementation  |                 |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Roadmap,        | Not Applicable  | Delivers        | Leaving Open    |
	| portfolio, or   |                 |                 |                 |
	| program: assess |                 |                 |                 |
	| plans and       |                 |                 |                 |
	| directions      |                 |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.2_Roles_Duties_and_Decision_Rights "15.2      Roles, Duties, and Decision Rights"
	
	Decision rights about the Target Architecture, relief, and enforcement
	are always vested in the architecture’s stakeholders. The most common
	failure pattern is to confuse roles.
	
	Each role is involved in the governance of developing and using
	architecture, with different accountability and decision rights. The
	roles are:
	
	-   Stakeholder: owner of the architecture
	
	    Provides priority, preference, and direction. All decision rights
	    about the Target Architecture, and any relief from and enforcement
	    of the target, are vested in the stakeholders.
	
	-   Stakeholder Agent: representative of the stakeholder
	
	-   Subject Matter Expert: possesses specialized knowledge about some
	    aspect of the Enterprise or the environment in which it operates
	
	    Provides knowledge, advice, and validation of interpretation.
	
	-   Implementer: responsible for performing all change activity
	
	    Scope of change is not relevant. Transformative capital projects and
	    incremental operational changes are changes performed by an
	    implementer. All decision rights about proposed implementation
	    choices, such as design, product selection, and change sequence, are
	    vested with the implementer.
	
	-   Architect: developer of the Target Architecture
	
	    Provides recommendations when non-compliance with the target is
	    determined.
	
	-   Auditor: performs systematic reviews of both the target and
	    implementation
	
	    Best performed at multiple stages to capture errors before the cost
	    of correction exceeds potential value realization. All decision
	    rights about compliance during the development of the architecture
	    and implementation are vested with the implementer. Auditing can be
	    performed within a formal structure such as an architecture
	    governing board or by a peer reviewer. Auditing can also be
	    self-performed but the role being performed needs to be clear in the
	    mind of the individual and that they are acting in accordance with
	    the role.
	
	In many organizations, the Practitioner will fill the role of
	stakeholder agent, subject matter expert, and implementer. This
	typically occurs when the organization does not use architecture to
	direct and control change. Instead, the organization attempts to use
	skilled thoughtful individuals to make tactical decisions. The value is
	illusionary.
	
	The governance process does not have to be a heavyweight bureaucracy. It
	is simply based on demonstrating sufficient traceability that the
	organization can have confidence in the target being the best path to
	reaching the Enterprise’s preferences. With confidence, the Enterprise
	will enforce the target in deliberate change activity.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15.3_Conclusion "15.3      Conclusion"
	
	The Practitioner serves the Enterprise’s stakeholders regardless of
	where they are employed in an organization. This requires the
	Practitioner to identify with and guard the stakeholders’ preferences.
	Good Practitioners use their position in front of decisions and outside
	of the change program to guard value. In practice, a high fraction of
	governance is informal, with the Practitioner thinking as the
	stakeholders’ agent and deciding when to push for compliance. For every
	change initiative, understanding and guarding the Enterprise’s expected
	value is the most important and arguably the only job of architecture
	governance.
	
	------------------------------------------------------------------------
	
	Part 6: Appendices
	
snippet togaf_adm-practitioners_15_Architecture_Governance_15_Architecture_Governance "15   Architecture Governance"
	
	ISO/IEC 38500:2015[35] defines governance as: “a system that directs and
	controls the current and future state”. The process by which direction
	and control are provided should imbibe equality of concern and
	transparency, protecting the rights and interests of the organization.
	
	Governance is a decision-making process, with a defined structure of
	relationships to direct and control the Enterprise in order to achieve
	stated goals. The key difference between governance and management rests
	on the cornerstone of fiduciary and sustainable responsibility.
	
	Most discussion on governance confuses management and governance. John
	Carver’s Policy Governance is written to support public agencies, where
	there are often competing priorities and strong distinctions between
	those who pay and those who benefit. It is one of the best pieces of
	guidance a Practitioner can get. Lastly, John’s work clearly
	distinguishes between governance and management. The parallels to EA
	governance are striking.
	
	The development and use of EA must be governed. To define a customized
	governance approach, let us start to define the following:
	
	-   What is to be governed?
	-   Why should something be governed?
	-   When and who should decide on the recommended alternatives?
	
snippet togaf_metadata-management_16_Strategy_Roadmaps_Definition "| Strategy & Roadmaps Definition    |                                   |"
	+-----------------------------------+-----------------------------------+
	| Define the business drivers and   | Describe the vision, context, and |
	| requirements                      | strategy that the Metadata        |
	|                                   | Management capability has to      |
	|                                   | support. Capture and document     |
	|                                   | business use-cases and            |
	|                                   | priorities. Maintain this list    |
	|                                   | over time.                        |
	+-----------------------------------+-----------------------------------+
	| Define roles and responsibilities | Define the roles and              |
	|                                   | responsibilities of each actor    |
	|                                   | (business, IT) in the build and   |
	|                                   | run of the Metadata Management    |
	|                                   | capability.                       |
	+-----------------------------------+-----------------------------------+
	| Build the roadmap                 | Build and maintain the roadmap.   |
	|                                   | Have a list of documented and     |
	|                                   | prioritized business requirements |
	|                                   | to implement the Metadata         |
	|                                   | Management capability. Define the |
	|                                   | target and overall journey.       |
	+-----------------------------------+-----------------------------------+
	| Identify and develop sponsorship  | Have the IT and business sponsors |
	|                                   | initiated in Metadata Management  |
	|                                   | platform governance.              |
	+-----------------------------------+-----------------------------------+
	| Define KPIs                       | Define Key Performance Indicators |
	|                                   | (KPIs) to measure and steer the   |
	|                                   | effectiveness of the Metadata     |
	|                                   | Management platform for           |
	|                                   | delivering business goals.        |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_17_Governance_Measurement "| Governance & Measurement          |                                   |"
	+-----------------------------------+-----------------------------------+
	| Define business data domain       | Define the data domain for        |
	|                                   | governance purposes. A domain is  |
	|                                   | a consistent grouping of data and |
	|                                   | metadata assets. It allows        |
	|                                   | stewardship and ownership of the  |
	|                                   | data and metadata assets.         |
	+-----------------------------------+-----------------------------------+
	| Onboard and appoint data steward, | Identify the key stakeholders     |
	| business data owner, data privacy | that will maintain and govern the |
	| officer per data domain           | metadata repository.              |
	+-----------------------------------+-----------------------------------+
	| Measure metadata documentation    | Define the KPIs to monitor the    |
	| quality and usage                 | quality and usage of the metadata |
	|                                   | in the repository.                |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_18_Business_Glossary_Documentation "| Business Glossary Documentation   |                                   |"
	+-----------------------------------+-----------------------------------+
	| Document business concepts        | Define the names and semantics of |
	|                                   | business concepts such as         |
	|                                   | business term, business data      |
	|                                   | object, business data elements,   |
	|                                   | or any other meaningful business  |
	|                                   | concept.                          |
	+-----------------------------------+-----------------------------------+
	| Classify data objects and data    | Classify data for security and    |
	| elements (privacy, business       | compliance purposes. Identify     |
	| criticality)                      | valuable data assets for the      |
	|                                   | business (critical data, “crown   |
	|                                   | jewels”).                         |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_19_Data_Dictionary_Documentation "| Data Dictionary Documentation     |                                   |"
	+-----------------------------------+-----------------------------------+
	| Document application              | -   Describe and maintain data    |
	|                                   |     flows between applications    |
	|                                   | -   Identify data location and    |
	|                                   |     data collection point         |
	|                                   | -   Document and maintain         |
	|                                   |     applications list and related |
	|                                   |     IT managers                   |
	|                                   | -   Contacts (including           |
	|                                   |     applications managed by third |
	|                                   |     parties)                      |
	|                                   | -   Collect and maintain SLAs for |
	|                                   |     applications where critical   |
	|                                   |     data elements are stored or   |
	|                                   |     processed                     |
	+-----------------------------------+-----------------------------------+
	| Document database                 | Document the database system      |
	|                                   | where the data is stored.         |
	|                                   | Identify the related data         |
	|                                   | custodians to be included in      |
	|                                   | operational data governance. The  |
	|                                   | notion of the database can be     |
	|                                   | understood here as any means to   |
	|                                   | store a collection of data.       |
	+-----------------------------------+-----------------------------------+
	| Document data set and data field  | Capture within each database      |
	|                                   | system relevant data set and data |
	|                                   | field for the purpose of making   |
	|                                   | data documentation available for  |
	|                                   | everyone to foster re-use and     |
	|                                   | enforce data governance and       |
	|                                   | compliance.                       |
	+-----------------------------------+-----------------------------------+
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_1_Introduction "1. Introduction"
	
	This document sets out to answer two overarching questions:
	
	1.  How do Enterprise Architecture and the TOGAF^(®) Standard (see
	    Referenced Documents) enable the digital enterprise?
	
	2.  When and how to apply TOGAF methods and best practices to guide a
	    digital enterprise through its stages of development, which the
	    Digital Practitioner Body of Knowledge™ Standard (see Referenced
	    Documents) refers to as the emergence model?
	
	The TOGAF Standard supports strategic decision-making and a sustainable
	delivery of architecture specifications to support organizations to
	become a digital enterprise. It can be used in the Individual/Founder,
	Team, Team of Teams, and Enduring Enterprise contexts in the DPBoK™
	Standard to inform and make decisions. The implementation of the TOGAF
	Standard is always adapted to fit the scale, culture, and operation of
	the organization in which it is used.
	
	This document provides insight on how to adapt the standard to support
	the digital enterprise in alignment with the DPBoK Standard concepts and
	contexts of the emergence model.^([1])
	
snippet togaf_applying-the-adm_INDEX_1_Introduction "-   1. Introduction"
	    -   1.1 Using the TOGAF Framework with Different Architecture Styles
snippet togaf_adm-techniques_INDEX_1_Introduction "-   1. Introduction"
snippet togaf_reference-models_government-reference-model_1_Introduction "1 Introduction"
	
	The Business Architecture defines the business strategy, governance,
	organization, business information, and key business processes of an
	Enterprise Architecture. An architecture approach determines how to
	effect change within the appropriate cost, benefit, and risk parameters.
	
	A challenge to this approach arises due to a lack of consistency in the
	application of architecture standards used to inform Business Architects
	or those intending to develop a Business Architecture or technical
	solution on the expected Architecture Building Blocks (ABBs) for
	governments worldwide.
	
	The Government Reference Model (GRM) gives public sector organizations a
	common way to view themselves in order to plan and execute effective
	transformational change.
	
snippet togaf_business-architecture_value-streams_1_Introduction "1 Introduction"
	
snippet togaf_reference-models_digital-business-reference-model_1_Introduction "1 Introduction"
	
snippet togaf_business-architecture_business-scenarios_1_Introduction "1 Introduction"
	
	A key factor in the success of an Enterprise Architecture is the extent
	to which it is linked to business requirements, and demonstrably
	supporting and enabling the enterprise to achieve its business
	objectives. Any architectural effort must begin with a baseline view of
	the needs to be fulfilled by the solution or solutions. Consider guiding
	the construction of a warehouse building without understanding why the
	warehouse is needed. This could result in a fine warehouse solution for
	housing large-scale mechanical parts; however, the need was a warehouse
	for household goods. Creating an architecture without understanding
	“why” typically results in mismatches between solutions and needs.
	
	The Business Scenario method is a technique to validate, elaborate,
	and/or change the premise behind an architecture effort by understanding
	and documenting the key elements of a Business Scenario in successive
	iterations where:
	
	-   Each iteration requires planning, data gathering, analysis,
	    documentation, and review
	-   Each iteration should improve one or more of the key elements
	-   Iterations are repeated until your understanding is fit-for-purpose
	    for deciding to move forward
	
	Not examining all elements of a Business Scenario carries a risk of
	producing an incomplete solution, but care must be taken not to iterate
	unnecessarily.
	
	The Business Scenario method may be used at various stages of developing
	an Enterprise Architecture – principally the Preliminary, Architecture
	Vision, and Business Architecture phases – but in other architecting
	phases as well, if required, to derive the characteristics of the
	architecture directly from the high-level requirements of the business.
	The technique is used to help identify, understand, and document
	business needs, and thereby to derive the business requirements that the
	architecture development has to address. These business requirements are
	documented as a Business Scenario.
	
	A Business Scenario is a uniform description of:
	
	-   Real business problems
	-   The business and technology environment in which those problems
	    occur
	-   Value streams enabled by capabilities
	-   The desired outcome(s) of proper execution
	-   The human and computing components (the “actors”) who provide the
	    capabilities
	
	A good Business Scenario is also “SMART”:
	
	-   Specific, by defining what needs to be done in the business
	-   Measurable, through clear metrics for success
	-   Actionable, by:
	
	—  Clearly segmenting the problem
	
	—  Providing the basis for determining elements and plans for the
	solution
	
	-   Realistic, in that the problem can be solved within the bounds of
	    physical reality, time, and cost constraints
	-   Time-bound, in that there is a clear statement of when the solution
	    opportunity expires
	
	Chapter 9 provides detailed examples of outcomes that should be
	considered. Whatever outcomes are used, the idea is to make those
	outcomes SMART.
	
	Below are further notes on Business Scenarios and the Business Scenario
	method:
	
	-   Business Scenarios are not just about IT, even though that was their
	    genesis
	
	Business Scenarios are just as much about understanding business value,
	value streams, and business outcomes and what resources in general are
	required to improve the value streams and meet outcomes to deliver
	business value.
	
	-   Business Scenarios are not specific to the IT industry, rather the
	    technique can be applied to help understand the requirements in any
	    industry such as Healthcare, Transportation, Oil and Gas, Lottery,
	    etc.
	-   Business Scenarios are not just relevant to big problem areas; the
	    technique can be applied to very large general problems areas such
	    as standards for National Lotteries, or very small focused problem
	    areas such as retail Point of Sale upgrades
	-   Business Scenarios, just like architectures, are not the end game –
	    the end game is achieving the desired business outcomes
	
	Thus, there must be a downstream path for using the Business Scenario to
	drive the architecture work which must faithfully drive implementation
	of solutions.
	
	-   Business Scenarios are statements at a specific time and should be
	    updated to reflect significant changes
	
	Business Scenarios are not:
	
	-   Use-cases (as in OMG, Rational SW, …); use-cases are:
	
	—  More detailed descriptions of human to computer interaction
	
	—  Typically used in software development projects
	
	-   Business models nor business cases nor Business Scenario plans (as
	    in Forbes …):
	
	—  However, a Business Scenario can be informed by a company’s business
	model
	
	—  A SMART Business Scenario can inform a business case and/or a
	business model and/or Business Scenario plan
	
	-   SPIN (as in Situation, Problem, Implication, Need Payoff selling
	    strategy):
	
	—  SPIN is a sales technique that can be used to gather information for
	a Business Scenario
	
	—  A Business Scenario can provide the seller some relevant “context”
	for a SPIN engagement
	
	-   A substitute for any typical engineering specifications (as from
	    IEEE):
	
	—  Which are much more detailed, material-specific, and tied more to
	science
	
snippet togaf_business-architecture_business-models_1_Introduction "1 Introduction"
	
	This TOGAF^(®) Series Guide to Business Models provides a basis for
	Enterprise Architects to understand and utilize business models, which
	describe the rationale of how an organization creates, delivers, and
	captures value.^([1]) Business models provide a powerful construct to
	help focus and align an organization around its strategic vision and
	execution. In this Guide we cover different forms of business models and
	approaches to modeling, from the conceptual down to a practical example.
	
	There is a direct relationship between the business innovation captured
	in these models and the approach to implementing that innovation through
	Enterprise Architecture. We explore that relation through Business
	Architecture methods such as value streams and business capabilities,
	then provide a specific example based on a generic retail company
	undertaking a Digital Transformation. An appendix delves deeper into the
	structure of one of the most commonly used business model frameworks for
	architects interested in working with business leaders to execute their
	strategy.
	
snippet togaf_business-architecture_business-capabilities_1_Introduction "1 Introduction"
	
	Many organizations struggle with managing the complexity of their
	business. They want to answer questions about their progress toward
	realizing their strategic aims. Are their strategic investments targeted
	appropriately? Are there areas of redundancy or duplication that are
	suitable for rationalization? Does the business have what is necessary,
	or too much to succeed?
	
	As the discipline and practice of Business Architecture continues to
	grow and mature, the concept of the “business capability” has emerged to
	become a fundamental component in the development of a Business
	Architecture. The business capability map represents one of the four
	core elements of Business Architecture, along with the value stream map,
	information map, and organization map.[1]
	
	Business capabilities provide an abstraction of the business reality in
	a way that helps to simplify conversations between interested
	stakeholders. Defining a business capability’s supporting components
	(people, processes, information, and tangible resources) provides a
	business context for those supporting components. In addition, creating
	a business capability map for the enterprise promotes more of a common
	understanding of the business.
	
	Defining business capabilities and a capability map is a means to an
	end. Understanding a business’s capabilities provides architects and
	planners with a foundation for making better business decisions. This
	insight is gained through mapping the business capabilities to different
	business perspectives and viewpoints. The mapping allows for a more
	coherent view of the business to emerge.
	
	This document looks to answer some important questions about what a
	business capability is, and how it is used to enhance business analysis
	and planning:
	
	-   What exactly do we mean by the term “business capability”?
	-   Why are business capabilities such an integral part of Business
	    Architecture and Enterprise Architecture, and the architecture
	    development process?
	-   How do we describe business capabilities?
	-   How (and why) should we construct a business capability map?
	-   How do business capabilities map to other business perspectives?
	
snippet togaf_guides_agile-sprints_1_Introduction "1 Introduction"
	
	The purpose of this document is to show how sprints can be used to:
	
	-   Collaboratively apply Enterprise Architecture and the TOGAF^(®)
	    Architecture Development Method (ADM) following an Agile approach
	-   Create an Enterprise Architecture tuned for use together with Agile
	    practices
	-   Support and collaborate with Agile teams for a given business need
	-   Enable Enterprise Architects to leverage an Agile practice to assure
	    that the Agile delivery of a solution is in alignment with strategic
	    objectives and takes into account the existing landscape
	
	This document illustrates how you can use a pattern for situational
	engagement with all the stakeholders of a solution in varying Agile
	states. When we create great solutions, we combine analysis and
	synthesis from system thinking with innovation and intuition from design
	thinking. We allow the stakeholders (internal, external customers,
	business, Enterprise Architecture, and solution teams) to together
	become the designers. This is sometimes referred to as the “Third
	Generation of Design”.[1]
	
	This document will show different collaboration patterns between
	Enterprise Architecture and Agile solution development using the TOGAF
	ADM. Of course, these patterns are not the only possible patterns; they
	are just a sample of those most likely to be used. As with any pattern,
	they should be adapted to the way your organization uses Agile
	practices. You may just be starting your Agile journey or you may
	already have gone a long way, but you should be able to get inspiration
	from these patterns and the suggested ways of adapting the ADM to fit
	your organization.
	
	This document shows how four different collaboration patterns can be
	used to apply sprints to Enterprise Architecture work:
	
	-   Enterprise Architecture development agility
	-   Solution collaboration
	-   Cross-development collaboration
	-   Cross-functional agility
	
	This document is written from the viewpoint of Enterprise Architects
	engaging with other team members involved in Agile transformations.
	There is value in Agile team members leveraging Enterprise Architecture
	based on The Open Group TOGAF Standard, so those viewpoints can be
	inferred here also.
	
	The focus of this document is the way sprints can be used to deliver
	Enterprise Architecture deliverables in an Agile manner. It is not in
	scope to map any full sprint framework to the TOGAF ADM.
	
	This document assumes that the reader is familiar with sprints and
	understands the purpose of time-boxing activities.[2] Collaboration in
	Agile teams has to be present in the full lifecycle of engagement from
	early visioning, architecting, cross-iterative solution deliveries, and
	into maintenance. The goal is to understand the outcomes stakeholders
	want in the short, medium, and long term, and how that will affect the
	business, Enterprise Architecture, and solutions over time.
	
	The TOGAF Standard allows users to use the ADM in an iterative way. The
	TOGAF ADM can be used to deliver value incrementally following different
	iteration approaches. The concept of iteration is deep-rooted within the
	TOGAF ADM. As stated in the TOGAF Standard – Applying the ADM (Applying
	Iteration to the ADM):
	
	“The ADM supports a number of concepts that are characterized as
	iteration.”
	
	This document is a generalized example of an adaptation of the TOGAF
	Standard, described in a way that could provide inspiration for your own
	situational solution development or enterprise adaptation.
	
	Agile, DevOps, DevSecOps, and Continuous Integration/Continuous
	Deployment (CI/CD) are four distinct practices, each important in their
	own right. When a development organization uses all four for their
	intended purposes, the results are transformational.
	
	This document focuses on patterns of how the Agile sprint process
	concept is used by architects in collaborating and adding value with
	other members of the Agile teams. This Enterprise Architecture work and
	decision-making may occur in advance of technology-specific decisions or
	concurrently with them. This depends on the makeup and outcomes within
	the remit of the teams.
	
snippet togaf_togaf-leaders-guide_1_Introduction_1_Introduction "1 Introduction"
	
	This Guide presents advice on establishing an Enterprise Architecture
	(EA) Capability that aligns to a set of requirements and expectations
	that are specific to each enterprise.[1] It proposes an approach for the
	standing-up and enhancement of an enterprise’s EA Capability based upon
	established best practices. This approach follows a configured path
	through the TOGAF^(®) Architecture Development Method (ADM).
	
	This Guide is written for the EA Capability Leader, the person who is
	tasked to lead the effort to establish or evolve an EA Capability. We
	have selected the term Leader deliberately to reflect the role rather
	than any one of the myriad titles in an enterprise the Leader may have.
	This Guide is structured to provide the context, content, and rationale
	behind choices and steps that an EA Leader can consult at any point in
	time to set up, operate, and improve the value extracted from the
	practice of EA in the organization. A high-functioning EA Capability
	optimizes Boundaryless Information Flow™ within and between enterprises
	based on open standards and global interoperability.
	
	Practicing EA requires in-depth interaction with several specialized
	functions such as strategy development, HR policies, and corporate
	accounting. This Guide:
	
	-   Introduces key topics of concern
	-   Defines the terms related to the topic
	-   Shows the terms that are related to an EA Capability
	-   Discusses what the Leader needs to know
	-   Describes what the Leader should do with this knowledge
	
	This Guide transitions its focus between setting up a new EA Capability
	practice and evolving or re-establishing the practice. It is presented
	this way to reflect the reality of the state of EA prevalent in the
	industry at the time of writing.
	
	This Guide is divided into six parts.
	
	Part 1 (this part) is the introduction, including an assessment of the
	state of EA, definitions, and key concepts used in this Guide.
	
	Parts 2 and 3 present a narrative that leads the reader through a series
	of topics and related steps to assist in stepping back from the current
	operational context to seek a broader perspective. Ideally, the contents
	of these first two parts should form a companion to the TOGAF ADM or
	similar architecture development processes, methods, or frameworks that
	an enterprise may choose to adopt. This Guide takes this approach
	deliberately. It focuses on outcomes without being distracted by
	implementation or evolution. This is done by simply focusing on what
	must be done and what needs to be achieved out of the steps.
	
	Part 4 covers adoption of the EA Capability. This includes preparation
	and initiation activities required to establish or enhance the EA
	Capability that would be relevant to an enterprise.
	
	Part 5 shows a simple mapping of how the TOGAF ADM can be practically
	used. This follows a “configuration” of the TOGAF ADM for architecting
	and establishing an EA Capability. It serves as an example to show how
	the TOGAF ADM could be customized to address the purpose for which an EA
	Capability is being established.
	
	Part 6 contains appendices.
	
	Not all scenarios or related fields discussed in this Guide will be
	relevant for every enterprise, and especially in the first attempts at
	creating an EA Capability. Establishing any capability is an iterative
	process. This Guide is intended as a starting point to create or evolve
	an EA Capability, when the purpose for performing EA changes, or when
	the charter for a team changes.
	
	Even though this Guide has a logical structure, it is not designed as a
	simple task-list. The depth and detail of every step taken by the EA
	Leader is iterative, and the only variable is time spent for each step.
	As with all change work, listing what you need to know is not the same
	as defining the level of detail in documentation. This Guide provides a
	concise summary of what you need to know to establish the EA Capability
	in Table 9.
	
	It is the EA Leader’s judgment to consider the level of depth and
	documentation and how to iterate in a manner that best suits an
	enterprise. The intent of this Guide is that you read Chapter 4
	(Enterprise Context and EA Context) and Chapter 5 (Business Objectives
	for the EA Capability) before making any judgment call on the approach
	to building an EA Capability.
	
	Experience has shown that there is no one right EA Capability model.
	There are numerous examples of EA Capability being focused on strategy
	or portfolio or project or a combination of these. EA Capability has
	been aligned to organizational change leaders, supporting specific
	transformation efforts, or has focused on continuous improvement and
	change or embedded within an IT organization. This Guide will help the
	Leader of an EA Capability to identify an approach that is:
	
	-   Appropriate to the enterprise
	-   Appropriate to the context of the EA Capability
	-   Appropriate to the purpose of the EA Capability
	
	This Guide presents a tailored approach to establish and evolve EA
	Capability, aligned to the TOGAF Preliminary Phase. The EA Capability is
	designed to deliver architectures for a purpose and to drive effective
	change. However, when presenting the concepts supporting each of the
	steps, the Guide presents a few leading alternative techniques and
	approaches. It is up to the Leader to identify and employ concepts or
	school of thought that best meets the needs of the enterprise.
	
	The importance of aligning an enterprise’s context to its purpose is
	paramount. It is dubious to suggest that there is a single, correct
	approach to align context to purpose and this Guide makes no
	suppositions to that effect.
	
snippet togaf_introduction_1_Introduction_1_Introduction "1. Introduction"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 1.1 Executive Overview | 1.2 Structure of this Document | 1.3 Information on Using the TOGAF Standard | 1.4 Why Join The Open Group?
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------
	
	The TOGAF Standard is a framework for Enterprise Architecture. It may be
	used freely by any organization wishing to develop an Enterprise
	Architecture for use within that organization (see 1.3.1 Conditions of
	Use).
	
	The TOGAF Standard is developed and maintained by members of The Open
	Group, working within the Architecture Forum (refer to
	www.opengroup.org/architecture). The original development of TOGAF
	Version 1 in 1995 was based on the Technical Architecture Framework for
	Information Management (TAFIM), developed by the US Department of
	Defense (DoD). The DoD gave The Open Group explicit permission and
	encouragement to create Version 1 of the TOGAF Standard by building on
	the TAFIM, which itself was the result of many years of development
	effort and many millions of dollars of US Government investment.
	
	Starting from this sound foundation, the members of The Open Group
	Architecture Forum have developed successive versions of the TOGAF
	Standard and published each one on The Open Group public website.
	
	This version builds on previous versions of the TOGAF Standard and
	updates the material available to architecture practitioners to assist
	them in building a sustainable Enterprise Architecture. Work on White
	Papers and Guides describing how to integrate and use this standard with
	other frameworks and architectural styles has highlighted the universal
	framework parts of the standard, as well as industry, architecture
	style, and purpose-specific tools, techniques, and guidance. This work
	is embodied in the TOGAF Library.¹
	
	Although all of the TOGAF documentation works together as a whole, it is
	expected that organizations will customize it during adoption, and
	deliberately choose some elements, customize some, exclude some, and
	create others. For example, an organization may wish to adopt the TOGAF
	metamodel, but elect not to use any of the guidance on how to develop an
	in-house Technology Architecture because they are heavy consumers of
	cloud services.
	
	You are recommended to first read the Executive Overview (see 1.1
	Executive Overview), which includes an outline of The Open Group
	understanding of Enterprise Architecture and answers to fundamental
	questions, such as:
	
	-   Why is an Enterprise Architecture needed?
	-   Why use the TOGAF Standard as a framework for Enterprise
	    Architecture?
	
snippet togaf_integrating-risk-and-security_1_Introduction_1_Introduction "1 Introduction"
	
	Enterprise Architecture (including Security Architecture) is all about
	aligning business systems and supporting information systems to realize
	business goals in an effective and efficient manner (systems being the
	combination of processes, people, and technology). One of the important
	quality aspects of an Enterprise Architecture is information security
	and the way this can be managed. For too long, information security has
	been considered a separate discipline, isolated from the business
	processes and Enterprise Architecture.
	
	A Security Architecture is a structure of organizational, conceptual,
	logical, and physical components that interact in a coherent fashion in
	order to achieve and maintain a state of managed risk and security (or
	information security). It is both a driver and enabler of secure, safe,
	resilient, and reliable behavior, as well as for addressing risk areas
	throughout the enterprise.
	
	However, an Enterprise Security Architecture does not exist in
	isolation. As part of the enterprise, it builds on enterprise
	information that is already available in the Enterprise Architecture,
	and it produces information that influences the Enterprise Architecture.
	This is why a close integration of Security Architecture in the
	Enterprise Architecture is beneficial. In the end, doing it right the
	first time saves costs and increases effectiveness compared to bolting
	on security afterwards. To achieve this, Security Architects and
	Enterprise Architects need to speak the same language. That language is
	introduced in this Guide, which describes how to integrate security and
	risk into an Enterprise Architecture. It provides guidance for both
	security practitioners and Enterprise Architects working with the
	TOGAF^(®) standard, a standard of The Open Group [1], to develop an
	Enterprise Architecture.
	
	Figure 1 summarizes this Guide. It shows how Enterprise Architecture and
	Enterprise Security Architecture relate to each other, highlighting the
	core security and risk concepts that are used in Information Security
	Management (ISM) and Enterprise Risk Management (ERM). These concepts
	are listed in the center column, and form a set of foundation concepts
	that complement and enhance the TOGAF Standard. Concepts with an
	underscore in the figure are additions to the TOGAF framework and
	brought in by ISM or ERM.
	
	[]
	
	Figure 1: Essential Security and Risk Concepts and their Position in the
	TOGAF ADM
	
snippet togaf_ea-capability-and-governance_1_Introduction_1_Introduction "1. Introduction"
	
	This chapter provides an introduction to the guidance provided in the
	TOGAF Standard — EA Capability and Governance (this document).
	
	In order to successfully operate an architecture function within an
	enterprise, it is necessary to put in place appropriate organization
	structures, processes, roles, responsibilities, and governance.
	
	Guidelines included within this document are as follows:
	
	-   Establishing an Architecture Capability (see 2. Establishing an
	    Architecture Capability ) provides guidelines on how to use the ADM
	    to establish an Architecture Capability
	-   Architecture Governance (see 3. Architecture Governance) provides a
	    framework and guidelines for Architecture Governance
	-   Architecture Board (see 4. Architecture Board) provides guidelines
	    for establishing and operating an Enterprise Architecture Board
	-   Architecture Contracts (see 5. Architecture Contracts) provides
	    guidelines for defining and using Architecture Contracts
	-   Architecture Compliance (see 6. Architecture Compliance) provides
	    guidelines for ensuring project compliance to the architecture
	
snippet togaf_architecture-content_1_Introduction_1_Introduction "1. Introduction"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 1.1 Overview | 1.2 TOGAF Content Framework and Enterprise Metamodel | 1.3 Content Framework and the TOGAF ADM | 1.4 The Enterprise Continuum | 1.5 The Architecture Repository
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter provides an introduction to the guidance provided in the
	TOGAF Standard — Architecture Content (this document).
	
snippet togaf_applying-the-adm_1_Introduction_1_Introduction "1. Introduction"
	
	  -- ------------------------------------------------------------------------------------
	     Chapter Contents: 1.1 Using the TOGAF Framework with Different Architecture Styles
	  -- ------------------------------------------------------------------------------------
	
	This chapter provides an introduction to the guidance provided in the
	TOGAF Standard — Applying the ADM (this document).
	
	The Architecture Development Method (ADM) process can be adapted to deal
	with many different usage scenarios, including different process styles
	(e.g., the use of iteration) and also specific specialist architectures
	(such as security). Guidelines included within this document are as
	follows:
	
	-   Using the TOGAF Framework with Different Architecture Styles (see
	    1.1 Using the TOGAF Framework with Different Architecture Styles)
	    discusses how the framework can be adapted to different
	    architectural styles
	-   Applying Iteration to the ADM (see 2. Applying Iteration to the ADM)
	    discusses the concept of iteration and shows potential strategies
	    for applying iterative concepts to the ADM
	-   Applying the ADM across the Architecture Landscape (see 3. Applying
	    the ADM Across the Architecture Landscape) discusses the different
	    types of architecture engagement that may occur at different levels
	    of the enterprise — this section then also discusses how the ADM
	    process can be focused to support different types of engagement
	-   Architecture Partitioning (see 4. Architecture Partitioning)
	    discusses how partitions are used to simplify the development and
	    management of the Enterprise Architecture
	
snippet togaf_adm-techniques_1_Introduction_1_Introduction "1. Introduction"
	
	This chapter provides an introduction to the guidance provided in the
	TOGAF Standard — ADM Techniques (this document).
	
	Guidelines included within this document are as follows:
	
	-   Architecture Principles (see 2. Architecture Principles) describes
	    principles for the use and deployment of IT resources across the
	    enterprise, and how to develop the set of general rules and
	    guidelines for the architecture being developed
	-   Stakeholder Management (see 3. Stakeholder Management) describes
	    stakeholder management, an important discipline that successful
	    architecture practitioners can use to win support for their projects
	-   Architecture Patterns (see 4. Architecture Patterns) provides
	    guidance on using architectural patterns
	-   Gap Analysis (see 5. Gap Analysis) describes the technique known as
	    gap analysis; it is widely used in the TOGAF ADM to validate an
	    architecture that is being developed
	-   Migration Planning Techniques (see 6. Migration Planning Techniques)
	    describes a number of techniques to support migration planning in
	    Phases E and F
	-   Interoperability Requirements (see 7. Interoperability Requirements)
	    describes a technique for determining interoperability requirements
	-   Business Transformation Readiness Assessment (see 8. Business
	    Transformation Readiness Assessment) describes a technique for
	    identifying business transformation issues
	-   Risk Management (see 9. Risk Management) describes a technique for
	    managing risk during an architecture/business transformation project
	-   Architecture Alternatives and Trade-Offs (see 10. Architecture
	    Alternatives and Trade-Offs) describes a technique to identify
	    alternative Target Architectures and perform trade-offs between the
	    alternatives
	
snippet togaf_adm-practitioners_1_Introduction_1_Introduction "1 Introduction"
	
snippet togaf_adm_1_Introduction_1_Introduction "1. Introduction"
	
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 1.1 ADM Overview | 1.2 Architecture Development Cycle | 1.3 Adapting the ADM | 1.4 Architecture Governance | 1.5 Scoping the Architecture | 1.6 Architecture Alternatives | 1.7 Architecture Integration | 1.8 Summary
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter introduces the Architecture Development Method (ADM) cycle,
	adapting the ADM, architecture scope, and architecture integration.
	
snippet togaf_digital-technology-adoption_1_Introduction "1 Introduction"
	
snippet togaf_metadata-management_1_Introduction "1 Introduction"
	
	In this document, information architecture best practices are shared to
	support architecture work on the specific topic of Metadata Management
	among other guides that deal with IT-based data management capabilities
	described in the TOGAF Series Guide: Information Architecture –
	Introduction (in development). It aims to provide a framework to:
	
	-   Accelerate the delivery of architecture study
	-   Inform Data Architects and other data professionals about good
	    practices
	-   Provide a common language to describe the Metadata Management
	    capability to data professionals: Chief Data Officers, Data
	    Managers, Architects, Data Engineers, and Data Scientists
	
	Metadata Management is instrumental in delivering value from data. This
	document intends also to emphasize the benefits of data documentation,
	and the necessary efforts required to set up an effective Metadata
	Management capability within an organization.
	
snippet togaf_business-architecture_organization-mapping_1_Introduction "1 Introduction"
	
	The organization map is a key element of Business Architecture because
	it provides the organizational context for the whole Enterprise
	Architecture effort. While capability mapping exposes what a business
	does and value stream mapping exposes how it delivers value to specific
	stakeholders, the organization map identifies the business units or
	third parties that possess or use those capabilities, and which
	participate in the value streams.
	
	As one of the four core elements of Business Architecture,[1] the
	organization map provides a key perspective: the organizational context
	for Enterprise Architecture. For example, it provides visibility of what
	organization units are relevant for a particular architecture design or
	solution. These key insights mean that the organization map becomes
	foundational for Enterprise Architecture and the deployment of strategy.
	
	Taken together with the methods outlined in Phase B of the TOGAF^(®)
	framework as well as the associated Business Architecture-focused
	Guides,[2] the organization map provides an understanding of which
	organizational units to involve in the architecture effort, who with and
	when to talk about a given requirement, and how to measure the impact of
	various decisions.
	
snippet togaf_master-data-management_1_Introduction "1 Introduction"
	
	This document describes an approach for implementing Customer Master
	Data Management (C-MDM). The purpose of C-MDM in an organization is to
	increase the value of customer information shared across the
	organization. It includes people, process, organizations, and systems to
	manage this information as an asset.
	
snippet togaf_index_1_Introduction "1. Introduction"
	
	The TOGAF Standard is a framework for Enterprise Architecture. It may be
	used freely by any organization wishing to develop an Enterprise
	Architecture for use within that organization (see 1.3.1 Conditions of
	Use).
	
	The TOGAF Standard is developed and maintained by members of The Open
	Group, working within the Architecture Forum (refer to
	www.opengroup.org/architecture). The original development of TOGAF
	Version 1 in 1995 was based on the Technical Architecture Framework for
	Information Management (TAFIM), developed by the US Department of
	Defense (DoD). The DoD gave The Open Group explicit permission and
	encouragement to create Version 1 of the TOGAF Standard by building on
	the TAFIM, which itself was the result of many years of development
	effort and many millions of dollars of US Government investment.
	
	Starting from this sound foundation, the members of The Open Group
	Architecture Forum have developed successive versions of the TOGAF
	Standard and published each one on The Open Group public website.
	
	This version builds on previous versions of the TOGAF Standard and
	updates the material available to architecture practitioners to assist
	them in building a sustainable Enterprise Architecture. Work on White
	Papers and Guides describing how to integrate and use this standard with
	other frameworks and architectural styles has highlighted the universal
	framework parts of the standard, as well as industry, architecture
	style, and purpose-specific tools, techniques, and guidance. This work
	is embodied in the TOGAF Library.¹
	
	Although all of the TOGAF documentation works together as a whole, it is
	expected that organizations will customize it during adoption, and
	deliberately choose some elements, customize some, exclude some, and
	create others. For example, an organization may wish to adopt the TOGAF
	metamodel, but elect not to use any of the guidance on how to develop an
	in-house Technology Architecture because they are heavy consumers of
	cloud services.
	
	You are recommended to first read the Executive Overview (see 1.1
	Executive Overview), which includes an outline of The Open Group
	understanding of Enterprise Architecture and answers to fundamental
	questions, such as:
	
	-   Why is an Enterprise Architecture needed?
	-   Why use the TOGAF Standard as a framework for Enterprise
	    Architecture?
	
snippet togaf_architecture-skills-framework_1_Introduction "1 Introduction"
	
snippet togaf_architecture-project-management_1_Introduction "1 Introduction"
	
snippet togaf_architecture-maturity-models_1_Introduction "1 Introduction"
	
snippet togaf_guides_microservices-architecture_1_Introduction "1 Introduction"
	
	The purpose of this document is to contribute to The Open Group mission
	of Boundaryless Information Flow™ by providing guidance on how the
	architect can use the TOGAF^(®) Standard (see Referenced Documents) to
	develop, manage, and govern Microservices Architecture (MSA) or any
	architecture where MSA is part of the scope.
	
	This should promote the shared understanding of the MSA creation process
	according to the principles of distributed architecture, and
	significantly strengthen the alignment between the cultures of business
	and information technology. The further adoption of MSA as an
	architectural style in a cloud environment would result in the use of
	the method, metamodel, references, and other TOGAF facilities.
	
	While many of MSA characteristics are similar to Service-Oriented
	Architecture (SOA), this document is dedicated to MSA only, and readers
	looking for SOA should reference the existing TOGAF^(®) Series Guide:
	Using the TOGAF^(®) Framework to Define and Govern Service-Oriented
	Architectures (see Referenced Documents).
	
snippet togaf_business-architecture_information-mapping_1_Introduction "1 Introduction"
	
	Information plays an increasingly important role in successful
	businesses and agencies. Accurate, timely, and relevant information is
	crucial for good decision-making and innovation. Knowledge results from
	the ability to apply information in a particular way to solve a problem
	or create value. It is therefore necessary for architects to understand
	what information matters most to a business before developing or
	proposing solutions. An Information Map provides a framework to give
	rise to that understanding.
	
	Businesses acquire, use, store, and manipulate many types of information
	in the process of their operations. As businesses become more focused on
	using information as a strategic resource, it becomes critical to
	understand what information they will be manipulating.
	
	In Business Architecture terms, information is considered to be an
	intangible, conceptual representation of things that exist in the real
	world. “Information concepts” are the basis of the architectural
	elements that are used to make those intangible things explicit.
	Information concepts are used to model a business rather than an IT
	system. Defining the core information concepts that support a particular
	enterprise provides the core of the Information Mapping view in Business
	Architecture, which then enables analysis of the relationship between
	information and other Business Architecture concepts such as business
	capabilities and value streams.
	
	Information Mapping provides the architect with a means to articulate,
	characterize, and visually represent the information that is critical to
	the business, and to shape its representation in ways that enable a more
	detailed analysis of how the business operates today – or how it should
	operate at some future point in time.
	
snippet togaf_introduction_INDEX_1_Introduction "-   1. Introduction"
	    -   1.1 Executive Overview
	        -   What is an enterprise?
	        -   Why is an Enterprise Architecture needed?
	        -   What are the benefits of an Enterprise Architecture?
	        -   What specifically would prompt the development of an
	            Enterprise Architecture?
	        -   What is an architecture framework?
	        -   Why use the TOGAF Standard as a framework for Enterprise
	            Architecture?
	        -   Who would benefit from using the TOGAF Standard?
	        -   When should Enterprise Architecture be done?
	    -   1.2 Structure of this Document
	    -   1.3 Information on Using the TOGAF Standard
	        -   1.3.1 Conditions of Use
	        -   1.3.2 How Much Does the TOGAF Standard Cost?
	        -   1.3.3 Downloads
	    -   1.4 Why Join The Open Group?
	        -   Footnotes
snippet togaf_integrating-risk-and-security_INDEX_1_Introduction "1 Introduction"
	
	Enterprise Architecture (including Security Architecture) is all about
	aligning business systems and supporting information systems to realize
	business goals in an effective and efficient manner (systems being the
	combination of processes, people, and technology). One of the important
	quality aspects of an Enterprise Architecture is information security
	and the way this can be managed. For too long, information security has
	been considered a separate discipline, isolated from the business
	processes and Enterprise Architecture.
	
	A Security Architecture is a structure of organizational, conceptual,
	logical, and physical components that interact in a coherent fashion in
	order to achieve and maintain a state of managed risk and security (or
	information security). It is both a driver and enabler of secure, safe,
	resilient, and reliable behavior, as well as for addressing risk areas
	throughout the enterprise.
	
	However, an Enterprise Security Architecture does not exist in
	isolation. As part of the enterprise, it builds on enterprise
	information that is already available in the Enterprise Architecture,
	and it produces information that influences the Enterprise Architecture.
	This is why a close integration of Security Architecture in the
	Enterprise Architecture is beneficial. In the end, doing it right the
	first time saves costs and increases effectiveness compared to bolting
	on security afterwards. To achieve this, Security Architects and
	Enterprise Architects need to speak the same language. That language is
	introduced in this Guide, which describes how to integrate security and
	risk into an Enterprise Architecture. It provides guidance for both
	security practitioners and Enterprise Architects working with the
	TOGAF^(®) standard, a standard of The Open Group [1], to develop an
	Enterprise Architecture.
	
	Figure 1 summarizes this Guide. It shows how Enterprise Architecture and
	Enterprise Security Architecture relate to each other, highlighting the
	core security and risk concepts that are used in Information Security
	Management (ISM) and Enterprise Risk Management (ERM). These concepts
	are listed in the center column, and form a set of foundation concepts
	that complement and enhance the TOGAF Standard. Concepts with an
	underscore in the figure are additions to the TOGAF framework and
	brought in by ISM or ERM.
	
	[]
	
	Figure 1: Essential Security and Risk Concepts and their Position in the
	TOGAF ADM
	
snippet togaf_guides_index_1_Introduction "1. Introduction"
	
	This document describes in general terms how the TOGAF^(®) Standard [1]
	can be adapted to support an “Agile enterprise”. It is written to be
	applicable to any Agile delivery method that follows the commonly
	accepted Agile approach of iterative development through a series of
	sprints. It will be supported by other standards, guides, white papers,
	and case studies from The Open Group, which will provide more detail
	about specific approaches.
	
snippet togaf_ea-capability-and-governance_INDEX_1_Introduction "-   1. Introduction"
snippet togaf_architecture-content_INDEX_1_Introduction "-   1. Introduction"
	    -   1.1 Overview
	    -   1.2 TOGAF Content Framework and Enterprise Metamodel
	        -   1.2.1 Overview
	        -   1.2.2 Content Framework
	        -   1.2.3 Enterprise Metamodel
	        -   1.2.4 The TOGAF Content Framework
	    -   1.3 Content Framework and the TOGAF ADM
	    -   1.4 The Enterprise Continuum
	    -   1.5 The Architecture Repository
snippet togaf_business-architecture_business-capabilities_2.1.1_Naming_Convention "2.1.1 Naming Convention"
	
	Naming the business capability is the first step in the capability
	definition process. It establishes a clear need for the existence of the
	business capability and helps to ensure it is clearly distinguishable
	from other business capabilities.
	
	The naming convention involves expressing the business capability in a
	noun-verb format, whereby each outcome (input, output, or deliverable)
	is described as a noun and each activity that is associated with
	producing or controlling or monitoring the outcome is described as a
	verb; e.g., “Project Management” or “Strategy Planning”. The noun part
	of the business capability is a unique business object – a single,
	persistent thing that is of interest to the business. The advantage of
	making a business object the focal point of the business capability is
	that it simplifies the process of identifying the information objects
	that are tied to and used by the business capability.
	
	A business object is typically tangible – for example, “Customer” or
	“Loan” – but it can also be more conceptual and intangible, such as
	“Research”. The most important consideration is to use names that
	resonate with business leaders and stakeholders. Commonly understood
	names enable better understanding and improve communication across
	different stakeholder groups. However, resist the urge to simply repeat
	the organizational department names. Unlike business capabilities (which
	are inherently stable), organizational structures are not enduring and
	frequently change in most organizations.
	
snippet togaf_business-architecture_business-capabilities_2.1.2_Description "2.1.2 Description"
	
	A brief description helps to clarify the scope and purpose of the
	business capability and to differentiate it from other business
	capabilities. A useful syntax is to phrase the description of each
	business capability as “the ability [or capacity] to …”. For example, a
	business capability named “Strategic Planning” might be described as
	“the ability to develop and maintain the strategic plan and overall
	direction of the organization”.
	
	As with the business capability name, write all descriptions using
	language that is relevant and appropriate to the business stakeholders.
	Two important considerations are to:
	
	1.  Be concise: Provide just enough detail over one or two sentences to
	    enable greater understanding than can be gained from the business
	    capability name alone.
	2.  Be precise: Do not simply repeat the name of the business capability
	    in the description, such as “the ability to manage projects” when
	    describing “Project Management”.
	
snippet togaf_reference-models_digital-business-reference-model_2.10_Business_System "2.10      Business System"
	
	Hardware, software, policy statements, processes, activities, standards,
	and people which together implement a business capability.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.10_Phase_H_Architecture_Change_Management "2.10 Phase H: Architecture Change Management"
	
	Changes to the architecture of the architecture practice should be
	managed by this phase. These changes are usually triggered during the
	execution of architecture projects. A typical change would be the
	requirement for a new architecture deliverable. This would impact on all
	the architecture domains of the architecture practice.
	
snippet togaf_reference-models_digital-business-reference-model_2.11_Course_of_Action "2.11      Course of Action"
	
	Direction and focus provided by strategic goals and objectives, often to
	deliver the value proposition characterized in the business model.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.11_Requirements_Management "2.11 Requirements Management"
	
	Understanding and managing the requirements for the architecture
	practice is crucial. Requirements should be clearly articulated and
	align to the architecture practice vision.
	
	Additional guidance on how to construct an Enterprise Architecture
	Capability can be found in the TOGAF® Series Guide: The TOGAF Leader's
	Guide to Establishing and Evolving an EA Capability.
	
snippet togaf_reference-models_digital-business-reference-model_2.12_Customer "2.12      Customer"
	
	The customer is a source of revenue for the service
	
	-   If the service is part of a profit center, the customer is the
	    person purchasing the product (e.g., demand deposit banking)
	-   If the service is part of a cost center (e.g., a human resource
	    system), the customer is best seen as an internal executive, as the
	    actual revenue-producing customers are too far removed
	
snippet togaf_reference-models_digital-business-reference-model_2.13_Customer_Experience "2.13      Customer Experience"
	
	The sum-totality of how customers engage with the company and brand, not
	just in a snapshot in time, but throughout the entire arc of being a
	customer. (Source: Richardson 2010)
	
snippet togaf_reference-models_digital-business-reference-model_2.14_Customer_Journey "2.14      Customer Journey"
	
	The series of interactions between a customer and a company that occur
	as the customer pursues a specific goal. (Source: Forrester^(®))
	
snippet togaf_reference-models_digital-business-reference-model_2.15_Digitalization "2.15      Digitalization"
	
	The application of digital technology to create additional business
	value within the primary value chain of enterprises.
	
snippet togaf_reference-models_digital-business-reference-model_2.16_Digitization "2.16      Digitization"
	
	The conversion of analog information into digital form.
	
snippet togaf_reference-models_digital-business-reference-model_2.17_Digital_Architecture "2.17      Digital Architecture"
	
	The inclusive architecture focused on a combination of Enterprise
	Architecture, data science, telecommunications and IoT, security, AI,
	cognitive science, neuroscience, robotics, and social medias to deliver
	operational services.
	
snippet togaf_reference-models_digital-business-reference-model_2.18_Digital_Enterprise "2.18      Digital Enterprise"
	
	An enterprise characterized as follows:
	
	1.  Where the creation of digitalized products or services are delivered
	    fully digitally (e.g., digital media or online banking)
	
	2.  Where physical products and services are obtained by the customer by
	    digital means (e.g., online car-sharing services) (Source: The DPBoK
	    Standard)
	
snippet togaf_reference-models_digital-business-reference-model_2.19_Digital_Platform "2.19      Digital Platform"
	
	A software system composed of application and infrastructure components
	that can be rapidly reconfigured using DevOps and cloud-native
	computing.
	
snippet togaf_reference-models_digital-business-reference-model_2.1_Adaptive_Systems_Architecture "2.1 Adaptive Systems Architecture"
	
	Complex Adaptive Systems (CAS) are composed of elements, called agents,
	that learn or adapt in response to interactions with other agents. The
	activities of semi-autonomous agents are only partially controlled by
	current input. So agents can examine different courses of action prior
	to execution. (Source: Holland 2006)
	
snippet togaf_guides_index_2.1_Agile "2.1. Agile"
	
	To move/change quickly and easily, often to provide value-generating
	outcomes.
	
snippet togaf_architecture-project-management_2.1_Architecture_Project_Definition "2.1 Architecture Project Definition"
	
	An Architecture Project is an endeavor undertaken to define and describe
	the Enterprise Architecture to be implemented. In TOGAF terms, as shown
	in Figure 1, it encompasses all activities undertaken within the Phases
	A to F and Requirements Management of the ADM. Practically, it can be a
	stand-alone project or part of a larger effort (e.g., a program).
	
	+-----------------------------------+-----------------------------------+
	|                                   | An Architecture Project does not  |
	|                                   | include the Preliminary Phase,    |
	|                                   | Phase G, or Phase H of the ADM.   |
	|                                   |                                   |
	|                                   | The Preliminary Phase focuses on  |
	|                                   | establishing an Architecture      |
	|                                   | Capability rather than delivery   |
	|                                   | of an Architecture Definition. It |
	|                                   | can initiate an Architecture      |
	|                                   | Project when necessary (outputs   |
	|                                   | from the Preliminary Phase,       |
	|                                   | especially Request for            |
	|                                   | Architecture Work, are treated as |
	|                                   | an input to the Architecture      |
	|                                   | Project).                         |
	|                                   |                                   |
	|                                   | Phase G (Implementation           |
	|                                   | Governance) is about implementing |
	|                                   | the architecture, not defining    |
	|                                   | it. It can be a separate project  |
	|                                   | or a program (or even a part of   |
	|                                   | the same program as the           |
	|                                   | Architecture Project), but it is  |
	|                                   | not concerned with delivery of an |
	|                                   | architecture (outputs from the    |
	|                                   | Architecture Project are treated  |
	|                                   | as inputs to Phase G).            |
	|                                   |                                   |
	|                                   | Phase H (Change Management) is a  |
	|                                   | continuous process concerned with |
	|                                   | maintaining the architecture and  |
	|                                   | initiating Architecture Projects  |
	|                                   | when necessary and it should be   |
	|                                   | treated as an operational         |
	|                                   | activity.                         |
	+-----------------------------------+-----------------------------------+
	
	An Architecture Project starts with a Request for Architecture Work,
	which – according to the TOGAF ADM – is an input initiating Phase A. It
	delivers an Architecture Definition, a Roadmap, and an Implementation
	Plan. It is finished when these outputs are handed over for
	implementation.
	
	An Architecture Project can concern one or more architecture domains.
	The TOGAF Standard defines four architecture domains (Business, Data,
	Application, Technology) – an Architecture Project typically covers a
	few or all of them.
	
	An Architecture Project can concern different levels of architecture.
	The TOGAF Standard defines three levels of architecture – an
	Architecture Project typically covers exactly one of these:
	
	-   Strategic Level: covers the entire enterprise and defines the
	    high-level vision, principles, and strategic directions for the
	    entire Enterprise Architecture
	-   Segment Level: defines the Enterprise Architecture for a segment
	    (business domain) of the enterprise
	-   Capability Level: defines the Enterprise Architecture for a single
	    business capability
	
	Enterprise Architecture at this level is the most detailed and leads
	directly to capability implementation.
	
	[]
	
	Figure 2: Levels of Enterprise Architecture (the TOGAF Standard: Summary
	Classification Model for Architecture Landscapes)
	
	Architecture developed by an Architecture Project on the strategic level
	typically is an input to a segment-level Architecture Project.
	Similarly, segment-level Architecture Projects provide input for
	capability-level Architecture Projects.
	
	An Architecture Project can be executed as a stand-alone endeavor or as
	part of a larger effort:
	
	-   A stand-alone Architecture Project is usually executed as a separate
	    project (in line with the Project Management regulations of the
	    enterprise)
	
	It has its own set of goals that can be achieved by the project itself
	(i.e., the Architecture Definition not its implementation). Stand-alone
	Architecture Projects are often executed on the strategic and segment
	architecture level.
	
	-   Part of a larger effort means that the Architecture Project is a
	    part of a project or program, typically a work stream or a group of
	    tasks
	
	Its key goal is to develop the architecture for implementation within
	the larger effort. Architecture Projects that are a part of a larger
	effort are usually executed on the capability architecture level and
	sometimes on the strategic and segment levels.
	
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     An Architecture Project that is a part of a larger effort does not have to be recognized as a project in terms of the Project Management regulations of the enterprise. More often, it can be a work stream or simply a group of tasks. The approach recommended in this Guide can be applied to both stand-alone Architecture Projects and architecture work that is part of a larger effort.
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	Table 1 presents a few examples of real-world Architecture Projects.
	These examples cover different possible characteristics of an
	Architecture Project (e.g., level, domains, relationship to other
	projects).
	
	Table 1: Examples of Architecture Projects
	
	+-----------------------------------+-----------------------------------+
	| Overall Goal                      | Architecture Project Overview     |
	+===================================+===================================+
	| (A) Assess current application    | Describe application landscape    |
	| portfolio and recommend           | and identify IT improvement       |
	| improvement options               | options.                          |
	|                                   |                                   |
	|                                   | There are about 50 applications   |
	|                                   | of different scales (precise      |
	|                                   | number to be determined), mostly  |
	|                                   | custom-built. Key concerns are:   |
	|                                   |                                   |
	|                                   | -   Determining relationships and |
	|                                   |     data flows between            |
	|                                   |     applications                  |
	|                                   | -   Mapping application           |
	|                                   |     capabilities (overlaps and    |
	|                                   |     gaps)                         |
	|                                   | -   Identification of key         |
	|                                   |     technological constraints for |
	|                                   |     application development       |
	|                                   |                                   |
	|                                   | Required views are to be          |
	|                                   | determined. Improvement options   |
	|                                   | should include initiatives with   |
	|                                   | assigned priorities. Timeframe is |
	|                                   | flexible within 22 weeks maximum. |
	+-----------------------------------+-----------------------------------+
	| (B) Improve logistics process     | Project scope is to model and     |
	| efficiency and shorten            | plan target logistics process     |
	| time-to-order                     | improvements to:                  |
	|                                   |                                   |
	|                                   | -   Provide current information   |
	|                                   |     on parcel location, resource  |
	|                                   |     use, and process bottlenecks  |
	|                                   | -   Optimize resources usage      |
	|                                   |     through more accurate         |
	|                                   |     planning and use of the above |
	|                                   |     information                   |
	|                                   | -   Shorten order-to-delivery     |
	|                                   |     through faster resource       |
	|                                   |     allocation and use of         |
	|                                   |     preallocated resources        |
	|                                   |                                   |
	|                                   | The logistics process is one of   |
	|                                   | the core business processes of a  |
	|                                   | transportation company. Three     |
	|                                   | large business units play key     |
	|                                   | roles in the process, each of     |
	|                                   | them divided into about five      |
	|                                   | subunits.                         |
	|                                   |                                   |
	|                                   | The team, apart from a business   |
	|                                   | analyst and an Enterprise         |
	|                                   | Architect, includes a subject     |
	|                                   | matter expert who already         |
	|                                   | understands some parts of this    |
	|                                   | process.                          |
	+-----------------------------------+-----------------------------------+
	| (C) Consolidate IT environment of | Define target IT architecture and |
	| recently merged businesses        | a three-year roadmap to           |
	|                                   | consolidate merged businesses.    |
	|                                   |                                   |
	|                                   | Power & Utilities holding         |
	|                                   | includes eight recently merged    |
	|                                   | business units, which distribute  |
	|                                   | and sell energy. These units      |
	|                                   | operate in different areas        |
	|                                   | geographically. They are similar, |
	|                                   | but each of them has its own      |
	|                                   | business processes and IT         |
	|                                   | applications. Nothing is shared   |
	|                                   | between them.                     |
	|                                   |                                   |
	|                                   | The Architecture Project goal is  |
	|                                   | to formulate a consolidation      |
	|                                   | roadmap, which would include      |
	|                                   | common business services, IT      |
	|                                   | applications, and infrastructure. |
	|                                   | The approach includes three       |
	|                                   | stages: as-is analysis, to-be     |
	|                                   | modeling, and roadmapping.        |
	|                                   |                                   |
	|                                   | The Architecture Project must     |
	|                                   | meet defined budget and timeframe |
	|                                   | constraints.                      |
	+-----------------------------------+-----------------------------------+
	| (D) Define a solution             | Analyze changes in an operating   |
	| architecture for a Customer       | model in a retail sales area of a |
	| Information System supporting a   | P&U company and requirements for  |
	| new operating model in a retail   | a solution architecture resulting |
	| sales area of a P&U company       | from it.                          |
	|                                   |                                   |
	|                                   | Identify issues with current IT   |
	|                                   | systems supporting this area that |
	|                                   | prevent the implementation of a   |
	|                                   | new operating model.              |
	|                                   |                                   |
	|                                   | Develop a solution architecture   |
	|                                   | for a Customer Information System |
	|                                   | that addresses identified issues  |
	|                                   | and supports the operating model  |
	|                                   | along with a map of data exchange |
	|                                   | between the system and other IT   |
	|                                   | solutions located in its          |
	|                                   | environment.                      |
	|                                   |                                   |
	|                                   | Develop a tender documentation    |
	|                                   | for a Customer Information System |
	|                                   | containing the description of the |
	|                                   | solution architecture.            |
	+-----------------------------------+-----------------------------------+
	| (E) New management information    | Define and implement new elastic  |
	| system to address expanding bank  | management information system     |
	| reporting needs                   | that will address expanding bank  |
	|                                   | reporting needs and shorten       |
	|                                   | information delay. Project scope  |
	|                                   | includes:                         |
	|                                   |                                   |
	|                                   | -   Analyze current state – old   |
	|                                   |     data warehouse inbound and    |
	|                                   |     outbound interfaces, data     |
	|                                   |     processing logic and report   |
	|                                   |     types                         |
	|                                   | -   Define target architecture    |
	|                                   |     including moving deprecated   |
	|                                   |     functionality to other        |
	|                                   |     solutions                     |
	|                                   | -   Prepare High Level Design     |
	|                                   |     documentation                 |
	+-----------------------------------+-----------------------------------+
	
	These examples were chosen to encompass different kinds of Architecture
	Projects. Generally, they can be characterized by:
	
	-   Levels of architecture[3] covered: Strategic (A, C), Segment (B, D),
	    Capability (E)
	-   Architecture domains[4] covered: Business (B, C, D, E), Data (B, C,
	    D, E), Application (A, B, C, D, E), Technology (C, D, E)
	-   Relationship to other projects: stand-alone (A, B, D), part of a
	    larger program (C, E)
	
	These project examples are used throughout Detailed Guidance (Chapter 3)
	to enhance presented guidance with a practical context. Examples that
	refer to these projects are denoted using gray boxes.
	
snippet togaf_business-architecture_business-capabilities_2.1_Defining_a_Business_Capability "2.1 Defining a Business Capability"
	
	Defining a business capability involves identifying and describing what
	needs to be done by the business in support of its overall mission. A
	business capability description does not imply how well something needs
	to be done, simply that it needs to exist. The following guidelines
	explain how to define an individual business capability.
	
snippet togaf_architecture-skills-framework_2.1_Definitional_Rigor "2.1 Definitional Rigor"
	
	“Enterprise Architecture” and “Enterprise Architect” are widely used but
	poorly defined terms in industry today. They are used to denote a
	variety of practices and skills applied in a wide variety of
	architecture domains. There is a need for better classification to
	enable more implicit understanding of what type of
	architecture/architect is being described.
	
	This lack of uniformity leads to difficulties for organizations seeking
	to recruit or assign/promote staff to fill positions in the architecture
	field. Because of the different usage of terms, there is often
	misunderstanding and miscommunication between those seeking to recruit
	for, and those seeking to fill, the various roles of the architect.
	
snippet togaf_business-architecture_value-streams_2.1_Describing_a_Value_Stream "2.1 Describing a Value Stream"
	
	While they are most commonly represented in diagrammatic form, value
	streams are defined using four standard elements:
	
	1.  Name – The value stream name must be clearly understandable from the
	    initiating stakeholder’s perspective. In contrast to the way that
	    business capabilities are named, value streams use an active rather
	    than passive tense. That usually means a verb-noun construct. For
	    example, the two value streams that we use throughout this Guide are
	    “Acquire Retail Product” and “Recruit Employee”.
	2.  Description – While the value stream name should be
	    self-explanatory, a short, precise description can provide
	    additional clarity on the scope of activities that the value stream
	    deals with.
	3.  Stakeholder – The person or role that initiates or triggers the
	    value stream.
	4.  Value – The value (expressed in stakeholder terms) that the
	    stakeholder expects to receive upon successful completion of the
	    value stream. That value is an aggregation of the incremental value
	    items that are delivered by each value stream stage.
	
	Continuing with our earlier example:
	
	  ------------- --------------------------------------------------------------------------------------------
	  Name          Acquire Retail Product
	  Description   The activities involved in looking for, selecting, and obtaining a desired retail product.
	  Stakeholder   A retail shopper wishing to purchase a product.
	  Value         Customers are able to locate desired products and obtain them in a timely manner.
	  ------------- --------------------------------------------------------------------------------------------
	
snippet togaf_togaf-leaders-guide_2_Definitions_2.1_Enterprise "2.1 Enterprise"
	
	The highest level of description of an organization used to identify the
	boundary encompassed by the Enterprise Architecture and EA Capability.
	
	Note: This definition is deliberately flexible and not associated with
	an organization’s legal or functional boundaries. It covers monolithic
	organizations and extended organizations that include separate
	organizations connected by a mission or supply chain, as well as to the
	operating entities within an organization. Examples include the
	outsourced partners that provide manufacturing, logistics, and other
	support to an organization; a multi-national peacekeeping force; and a
	multi-billion dollar division of a Fortune 50 firm. All are enterprises.
	
snippet togaf_adm-practitioners_2_Definitions_2.1_Enterprise "2.1 Enterprise"
	
	The highest level of description of an organization used to identify the
	boundary encompassed by the EA and EA Capability.
	
	Note: This definition is deliberately flexible and not associated with
	an organization’s legal or functional boundaries. It must cover
	monolithic organizations and extended organizations that include
	separate organizations connected by a mission or supply chain, as well
	as operating entities within an organization. Consider an organization
	that uses outsourced partners to provide manufacturing, logistics, and
	support; a multi-national peacekeeping force; and a multi-billion-dollar
	division of a Fortune 50 firm. All are Enterprises.
	
snippet togaf_reference-models_government-reference-model_2.1_International_Affairs_and_Trade_Taxonomy "2.1 International Affairs and Trade Taxonomy"
	
	  Sector                            Function                Service                                                                                                                                   Description
	  --------------------------------- ----------------------- ----------------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------
	  International Affairs and Trade   Development and Aid     Services that aid development and provide humanitarian assistance to less developed economies.                                            
	                                                            International Development                                                                                                                 Comprises activities that aid development to developing economies through voluntary transfer of goods and services.
	                                                            Humanitarian Aid                                                                                                                          Refers to activities that support less developed economies in order to facilitate growth and recovery from conflict.
	                                    Trade                   Services to increase prosperity through enabling overseas trade.                                                                          
	                                                            Global Trade                                                                                                                              Pertains to activities undertaken to increase economic wealth by enabling trade overseas and facilitating the movement of goods and services.
	                                                            Export Control                                                                                                                            Regulates the international sale and movement of goods from the country and ensures compliance with domestic and international protocols and guidelines.
	                                                            Import Control                                                                                                                            Regulates the international purchase and movement of goods into the country and ensures compliance with domestic and international protocols and guidelines.
	                                    International Affairs   Services that maintain international relationships by providing overseas diplomatic advice and negotiating partnerships and agreements.   
	                                                            Foreign Affairs                                                                                                                           Refers to international contributions by providing diplomatic assistance and conducting consultations with international governments.
	                                                            Foreign Treaties                                                                                                                          Activities that maintain relationships with international governments by monitoring existing treaties and negotiating partnerships and formal agreements.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2.1_Introduction "2.1. Introduction"
	
	The TOGAF Standard began to evolve at a time when server hardware and
	networking equipment needed to be purchased; data center space, power,
	and cooling needed to be planned for, and product licenses negotiated
	and purchased. Technology infrastructure had to be well-planned and in
	place in the early stages of a project to allow for adequate lead time.
	Now, there are alternatives to purchasing and staging hardware and
	networking, and many product licenses are open-source licensing.
	
	While the environment has changed, the business functions needed to
	deliver an IT capability still exist. These functions still require an
	understanding of the concepts behind the business process, and an
	approach or methodology to accomplish their associated tasks. The TOGAF
	Standard and Enterprise Architecture are relevant to understand business
	functions and the tasks that must be completed by people in order to
	enable the business functions.
	
	The need for companies to evolve into digital enterprises can be linked
	to a variety of drivers, least of which is the rapid change in
	technologies that lend themselves to new ways of working, socializing,
	and entertaining. The Enterprise Architecture capability and the TOGAF
	Standard support Agile software delivery environments. An Enterprise
	Architecture should be seen as supporting and enabling the Agile
	environment in delivering and enhancing digital products and services
	quicker and easier by providing insight into various areas; including:
	
	-   Reactively managing technical debt as the result of sprints in a
	    cohesive and connected fashion
	
	-   Proactively managing technical debt and anticipating Agile
	    development needs by:
	
	    -   Identifying standards and reusable standard components that
	        support shortened Agile development cycles
	
	    -   Appropriate governance or guardrails to oversee the reuse of
	        components
	
	-   Managing matured digital products and delivering operational
	    excellence by:
	
	    -   Simplifying complexity in the digital ecosystem using the TOGAF
	        Architecture Development Method (ADM)
	
	    -   Establishing an Enterprise Architecture capability that drives
	        operational excellence in the management of digital products and
	        services
	
	    -   Institutionalizing Agile development methods by enabling them as
	        another framework used in the organization
	
	Having an Agile culture and using Agile delivery methods does not
	necessarily lead to products with Agile characteristics. Agile delivery
	must balance the business value of early delivery to market ^([2]) with
	the future value of leveraging and connecting to other components in the
	ecosystem that would add value to the product. As a result, a more
	appropriate approach to developing an Agile backbone may be one that
	looks at the enterprise, particularly in the Team of Teams and Enduring
	Enterprise contexts of the DPBoK Standard. In other words, the TOGAF
	Core Concepts and ADM. For more information on Enterprise Architecture
	supporting Agile delivery using the TOGAF Standard; see the TOGAF^(®)
	Series Guide: Enabling Enterprise Agility (see Referenced Documents).
	Often the quickest delivery involves solutions that are not easily
	adaptable with other features and difficult to connect to other
	components in the ecosystem that would add value to the product.
	
	It is important to consider that for organizations to become digital
	they must improve their digital offerings with products and services
	that offer additional value not considered by competitors. To achieve
	this, experimentation is important, using iterative test-and-learn
	approaches to identify new digital products. Enterprise Architecture is
	well-suited to support this experimentation, providing the alignment of
	business objectives to the digital vision; for example, by applying
	techniques like design thinking. The use of architecture alternatives to
	select different potential implementation roadmaps is also a plus. More
	details on how to handle architecture alternatives can be found in the
	TOGAF Standard – ADM Techniques (see Referenced Documents), Chapter 10,
	“Architecture Alternatives and Trade-Off”.
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.1_Introduction "2.1 Introduction"
	
	Principles are general rules and guidelines, intended to be enduring and
	seldom amended, that inform and support the way in which an organization
	sets about fulfilling its mission.
	
	In their turn, principles may be just one element in a structured set of
	ideas that collectively define and guide the organization, from values
	through to actions and results.
	
	Depending on the organization, principles may be established within
	different domains and at different levels. Two key domains inform the
	development and utilization of architecture:
	
	-   Enterprise Principles provide a basis for decision-making throughout
	    an enterprise, and inform how the organization sets about fulfilling
	    its mission
	
	    Such principles are commonly found as a means of harmonizing
	    decision-making across an organization. In particular, they are a
	    key element in a successful Architecture Governance strategy (see
	    the TOGAF Standard — EA Capability and Governance).
	
	    Within the broad domain of enterprise principles, it is common to
	    have subsidiary principles within a business or organizational unit.
	    Examples include IT, HR, domestic operations, or overseas
	    operations. These principles provide a basis for decision-making
	    within the subsidiary domain and will inform architecture
	    development within the domain. Care must be taken to ensure that the
	    principles used to inform architecture development align to the
	    organizational context of the Architecture Capability.
	
	-   Architecture Principles are a set of principles that relate to
	    architecture work
	
	    They reflect a level of consensus across the enterprise, and embody
	    the spirit and thinking of existing enterprise principles.
	    Architecture Principles govern the architecture process, affecting
	    the development, maintenance, and use of the Enterprise
	    Architecture.
	
	It is common to have sets of principles form a hierarchy, in that
	segment principles will be informed by, and elaborate on, the principles
	at the enterprise level. Architecture Principles will be informed and
	constrained by enterprise principles.
	
	Architecture Principles may restate other enterprise guidance in terms
	and form that effectively guide architecture development.
	
	The remainder of this section deals exclusively with Architecture
	Principles.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.1_ISO_IEC_27001_2013_Information_Security_Management "2.1 ISO/IEC 27001:2013: Information Security Management"
	
	“ISO/IEC 27001:2013 is a standard that specifies the requirements for
	establishing, implementing, maintaining, and continually improving an
	information security management system within the context of the
	organization. This International Standard also includes requirements for
	the assessment and treatment of information security risks tailored to
	the needs of the organization.” [4]
	
	The core concepts of ISO/IEC 27001:2013 are taken as a basis for the ISM
	process in this Guide. This explains a sound security management process
	and helps readers to understand the logic behind specific risk concepts
	that are needed in the TOGAF framework. However, no fixed mapping has
	been made to that standard. It is seen as one of the good references
	that is very useful for this work.
	
snippet togaf_adm_2_Preliminary_Phase_2.1_Objectives "2.1 Objectives"
	
	The objectives of the Preliminary Phase are to:
	
	1.  Determine the Architecture Capability desired by the organization:
	    -   Review the organizational context for conducting Enterprise
	        Architecture
	    -   Identify and scope the elements of the enterprise organizations
	        affected by the Architecture Capability
	    -   Identify the established frameworks, methods, and processes that
	        intersect with the Architecture Capability
	    -   Establish Capability Maturity target
	2.  Establish the Architecture Capability:
	    -   Define and establish the Organizational Model for Enterprise
	        Architecture
	    -   Define and establish the detailed process and resources for
	        Architecture Governance
	    -   Select and implement tools that support the Architecture
	        Capability
	    -   Define the Architecture Principles
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.1_Overview "2.1 Overview"
	
	The TOGAF ADM provides a process lifecycle to create and manage
	architectures within an enterprise. At each phase within the ADM, a
	discussion of inputs, outputs, and steps describes a number of
	architectural work products or artifacts, such as process and
	application.
	
	The Content Framework and Enterprise Metamodel provided here define a
	formal structure for these terms to ensure consistency within the ADM
	and also to provide guidance for organizations that wish to implement
	their architecture within an architecture tool.
	
	The Content Framework defines a categorization framework to be used to
	structure the Architecture Description, the work product used to express
	an architecture, and the collection of models that describe the
	architecture.
	
	The Enterprise Metamodel defines the types of entities to appear in the
	models that describe the enterprise, together with the relationships
	between these entities.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.1_Overview "2.1 Overview"
	
	As with any business capability, the establishment of an Enterprise
	Architecture Capability can be supported by the TOGAF Architecture
	Development Method (ADM). Successful use of the ADM will provide a
	customer-focused, value-adding, and sustainable architecture practice
	that enables the business, helps maximize the value of investments, and
	pro-actively identifies opportunities to gain business benefits and
	manage risk.
	
	Establishing a sustainable architecture practice within an organization
	can be achieved by adhering to the same approach that is used to
	establish any other capability — such as a Business Process Management
	(BPM) capability — within an organization. The ADM is an ideal method to
	be used to architect and govern the implementation of such a capability.
	Applying the ADM with the specific Architecture Vision to establish an
	architecture practice within the organization would achieve this
	objective.
	
	The establishment of the architecture practice should not be seen as a
	phase of an architecture project, or a one-off project, but rather as an
	ongoing discipline that provides the context, environment, and resources
	to govern and enable architecture delivery to the organization. As an
	architecture project is executed within this environment it might
	request a change to the architecture practice that would trigger another
	cycle of the ADM to extend the architecture practice.
	
	Implementing any capability within an organization would require the
	design of the four domain architectures: Business, Data, Application,
	and Technology. Establishing the architecture practice within an
	organization would therefore require the design of:
	
	-   The Business Architecture of the architecture practice that will
	    highlight the Architecture Governance, architecture processes,
	    architecture organizational structure, architecture information
	    requirements, architecture products, etc.
	-   The Data Architecture that would define the structure of the
	    organization's Enterprise Continuum and Architecture Repository
	-   The Application Architecture specifying the functionality and/or
	    applications services required to enable the architecture practice
	-   The Technology Architecture that depicts the architecture practice's
	    infrastructure requirements and deployment in support of the
	    architecture applications and Enterprise Continuum
	
	The steps in establishing an architecture practice are explained below,
	against the context of the ADM phases. The reader should therefore refer
	to the relevant ADM phase in the TOGAF Standard — Architecture
	Development Method to understand the complete scope of each step. In
	this section, key aspects will be highlighted for each ADM phase that
	should be considered and are specific to establishing an architecture
	practice. The intent is therefore not to repeat each ADM phase
	description, but to guide the reader to apply each ADM phase within the
	context of establishing an architecture practice.
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.1_Overview "2.1 Overview"
	
	The graphical representation of the TOGAF ADM and the description of the
	ADM phases discretely in order, as shown in the TOGAF Standard —
	Architecture Development Method, can be read to imply a deterministic
	waterfall methodology. This method of presentation is provided for the
	purpose of quickly communicating the basics of architecture development
	and the architecture development cycle. In practice, two key concepts
	are used to manage the complexity of developing an Enterprise
	Architecture and managing its lifecycle — iteration and levels (see 3.
	Applying the ADM Across the Architecture Landscape). The two concepts
	are tightly linked.
	
	The ADM supports a number of concepts that are characterized as
	iteration. First, iteration describes the process of describing a
	comprehensive Architecture Landscape through multiple ADM cycles based
	upon individual initiatives bound to the scope of the Request for
	Architecture Work. Second, iteration describes the integrated process of
	developing an architecture where the activities described in different
	ADM phases interact to produce an integrated architecture. In order to
	concisely describe the activity and outputs, this latter iteration is
	described in sequential terms. Third, iteration describes the process of
	managing change to the organization's Architecture Capability.
	
	Iteration to develop a comprehensive Architecture Landscape:
	
	-   Projects will exercise through the entire ADM cycle, commencing with
	    Phase A
	
	    Each cycle of the ADM will be bound by a Request for Architecture
	    Work. The architecture output will populate the Architecture
	    Landscape, either extending the landscape described, or changing the
	    landscape where required.
	
	-   Separate projects may operate their own ADM cycles concurrently,
	    with relationships between the different projects
	
	-   One project may trigger the initiation of another project
	
	    Typically, this is used when higher-level architecture initiatives
	    identify opportunities or solutions that require more detailed
	    architecture, or when a project identifies landscape impacts outside
	    the scope of its Request for Architecture Work.
	
	Iteration within an ADM cycle (Architecture Development iteration):
	
	-   Projects may operate multiple ADM phases concurrently
	
	    Typically, this is used to manage the inter-relationship between
	    Business Architecture, Information Systems Architecture, and
	    Technology Architecture.
	
	-   Projects may cycle between ADM phases, in planned cycles covering
	    multiple phases
	
	    Typically, this is used to converge on a detailed Target
	    Architecture when higher-level architecture does not exist to
	    provide context and constraint.
	
	-   Projects may return to previous phases to update work products with
	    new information
	
	    Typically, this is used to converge on an executable Architecture
	    Roadmap or Implementation and Migration Plan, when the
	    implementation details and scope of change trigger a change or
	    re-prioritization of stakeholder requirements.
	
	Iteration to manage the Architecture Capability (Architecture Capability
	iteration):
	
	-   Projects may require a new iteration of the Preliminary Phase to
	    (re-)establish aspects of the Architecture Capability identified in
	    Phase A to address a Request for Architecture Work
	-   Projects may require a new iteration of the Preliminary Phase to
	    adjust the organization's Architecture Capability as a result of
	    identifying new or changed requirements for Architecture Capability
	    as a result of a Change Request in Phase H
	
snippet togaf_digital-technology-adoption_2.1_Overview "2.1 Overview"
	
	Most of the enterprises that have already onboarded the Digital
	Transformation journey are working on key aspects of leveraging the
	latest technologies to offer business services in a digital form.
	Enterprises undergoing Digital Transformation must eventually adopt
	digital technologies while keeping Information Technology (IT) as the
	foundation. As per the Digital Practitioner Body of Knowledge™ Standard,
	also known as the DPBoK™ Standard [6], digital technology is defined as:
	“information technology in the form of a product or service that is
	digitally consumable to create or enable business value”.
	
	Traditionally, IT is used by an enterprise to enable the operations of
	employees and businesses to function in terms of hardware and software.
	Commonly, the IT department would run everything (or manage the
	contracts with third parties who delivered part or all of the service).
	
	Enterprises, as part of their Digital Transformation, also tend to adopt
	various strategies like social, mobile, analytics, and cloud. All these
	are treated in isolation, which does not provide for end-to-end digital
	technology adoption. Again, substituting physical resources with digital
	equivalents does not equate to Digital Transformation. The DPBoK
	Standard defines digital enterprise as: “an enterprise characterized by
	the creation of digitalized products or services that are either
	delivered fully digitally (e.g., digital medial or online banking), or
	where physical products and services are obtained by the customer by
	digital means”.
	
	A few things to better understand digital technology include:
	
	-   The nature of digital technologies like cloud, IoT, mobile, social
	    media, analytics, AI/Machine Learning (ML) is different; these
	    technologies complement each other instead of competing with
	    existing systems and information enabling more leverage with less
	    disruption
	-   Digital technologies and the strategies associated with them bring
	    together digital and physical resources, enabling business
	    innovation instead of disruption
	-   Digital technologies are leveraged to concentrate on specific
	    business outcomes rather than just trying to implement large
	    strategies that have no clear focus and visibility of the magnitude
	    of effort required
	
snippet togaf_architecture-maturity-models_2.1_Overview "2.1 Overview"
	
	As an example of the trend towards increased interest in applying CMM
	techniques to Enterprise Architecture, all US Federal agencies are
	expected to provide maturity models and ratings as part of their IT
	investment management and audit requirements.
	
	In particular, the US Department of Commerce (DoC) has developed an
	Architecture Capability Maturity Model (ACMM) to aid in conducting
	internal assessments. The ACMM provides a framework that represents the
	key components of a productive Enterprise Architecture process. The goal
	is to enhance the overall odds for success of Enterprise Architecture by
	identifying weak areas and providing a defined evolutionary path to
	improving the overall architecture process.
	
	The ACMM comprises three sections:
	
	1.  The Enterprise Architecture maturity model
	2.  Enterprise Architecture characteristics of operating units’
	    processes at different maturity levels
	3.  The Enterprise Architecture CMM scorecard
	
	The first two sections explain the Architecture Capability maturity
	levels and the corresponding Enterprise Architecture element and
	characteristics for each maturity level to be used as measures in the
	assessment process. The third section is used to derive the Architecture
	Capability maturity level that is to be reported to the DoC Chief
	Information Officer (CIO).
	
snippet togaf_introduction_2_The_TOGAF_Documentation_Set_2.1_Structure_of_the_TOGAF_Documentation_Set "2.1 Structure of the TOGAF Documentation Set"
	
	The TOGAF documentation set consists of a portfolio of documents
	illustrated in Figure 2-1 .
	
	[]
	
	Figure 2-1: The TOGAF Documentation Set
	
	The TOGAF Standard
	
	The TOGAF Standard describes the generally applicable approach to
	Enterprise and IT Architecture. It is presented as a series of
	free-standing, but closely linked documents, as shown in Figure 2-1 .
	
	The TOGAF Standard is a standard of The Open Group. The Open Group works
	with customers and suppliers of technology products and services, and
	with consortia and other standards organizations to capture, clarify,
	and integrate current and emerging requirements, establish standards and
	policies, and share best practices. Standards ensure openness,
	interoperability, and consensus.
	
	The TOGAF Library
	
	The TOGAF Library is a portfolio of additional guidance material, which
	supports the practical application of the TOGAF approach.
	
snippet togaf_metadata-management_2.1_The_ArchiMate_Specification "2.1 The ArchiMate^(®) Specification"
	
	This document uses the formal notation from the ArchiMate Specification
	to describe the Metadata Management architecture reference models.
	
	The ArchiMate elements used in this document are shown in Figure 1.
	
	[]
	
	Figure 1: The ArchiMate Modeling Notation Elements Used in This Document
	
	Definitions taken from the ArchiMate Specification are as follows:
	
	-   Goal: represents a high-level statement of intent, direction, or
	    desired end state for an organization and its stakeholders
	-   Requirement: represents a statement of need defining a property that
	    applies to a specific system as described by the architecture
	-   Business function: represents a collection of business behavior
	    based on a chosen set of criteria (typically required business
	    resources and/or competencies), closely aligned to an organization,
	    but not necessarily explicitly governed by the organization
	-   Application function: represents automated behavior that can be
	    performed by an application component
	
snippet togaf_master-data-management_2.1_The_ArchiMate_Specification "2.1 The ArchiMate Specification"
	
	In order to properly describe the C-MDM architecture reference models,
	this document is based on the ArchiMate Specification (see Referenced
	Documents).
	
	To cater for the specific modeling needs in this document, a subset of
	ArchiMate elements is chosen. This subset is given in Figure 3, followed
	by the definition of each concept.
	
	[]
	
	Figure 3: ArchiMate Modeling Notation Elements Used in this Document
	
	The ArchiMate definitions of each concept are as follows:
	
	-   A principle represents a statement of intent defining a general
	    property that applies to any system in a certain context in the
	    architecture
	
	Principles are general rules or guidelines, intended to be enduring and
	seldom amended, that inform and support the way in which an organization
	sets about fulfilling its mission. They are a qualitative statement of
	intent that should be met by the architecture.
	
	-   A business actor represents a business entity that is capable of
	    performing behavior
	
	A business actor is a person, an organization, or system that has a role
	that initiates or interacts with activities; for example, a sales
	representative who travels to visit customers. Actors may be internal or
	external to an organization. A business actor is a business entity as
	opposed to a technical entity; i.e., it belongs to the Business Layer.
	Examples of business actors are humans, departments, and business units.
	
	-   A business function represents a collection of business behavior
	    based on a chosen set of criteria (typically required business
	    resources and/or competencies), closely aligned to an organization,
	    but not necessarily explicitly governed by the organization
	-   A business object represents a concept used within a particular
	    business domain.
	
	This matches with TOGAF “business information”, representing a concept
	and its semantics used within the business.
	
	-   An application function represents automated behavior that can be
	    performed by an application component
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.2.1_Overview_of_the_TOGAF_Enterprise_Metamodel "2.2.1 Overview of the TOGAF Enterprise Metamodel"
	
	The TOGAF Enterprise Metamodel includes a set of entities, defined in
snippet togaf_business-architecture_business-capabilities_2.2.1_People "2.2.1 People"
	
	People represent individual actors, stakeholders, business units, or
	partners involved in delivering a business capability. A single
	organizational group or team may be wholly responsible for delivering
	the capability, or multiple business entities may share the delivery of
	a particular business capability. Do not describe people in ways that
	are organizationally specific. Role-specific business capabilities
	should be reviewed as they may be just a component of another business
	capability, or they may need further elaboration to become a more fully
	described business capability.
	
snippet togaf_adm_2_Preliminary_Phase_2.2.1_Reference_Materials_External_to_the_Enterprise "2.2.1 Reference Materials External to the Enterprise"
	
	-   The TOGAF Library
	-   Other architecture framework(s), if required
	
snippet togaf_adm_2_Preliminary_Phase_2.2.2_Non-Architectural_Inputs "2.2.2 Non-Architectural Inputs"
	
	-   Board strategies and board business plans, business strategy, IT
	    strategy, business principles, business goals, and business drivers,
	    when pre-existing
	-   Major frameworks operating in the business; e.g., project/portfolio
	    management
	-   Governance and legal frameworks, including Architecture Governance
	    strategy, when pre-existing
	-   Architecture capability
	-   Partnership and contract agreements
	
snippet togaf_business-architecture_business-capabilities_2.2.2_Processes "2.2.2 Processes"
	
	Individual business capabilities may be enabled or delivered through a
	range of business processes. Identifying and analyzing the efficiency of
	the underlying processes helps to optimize the business capability’s
	effectiveness. Identifying the processes within a business capability
	provides a focus for maturing the capability in concert with the other
	capability components.
	
snippet togaf_adm_2_Preliminary_Phase_2.2.3_Architectural_Inputs "2.2.3 Architectural Inputs"
	
	Pre-existing models for operating an Enterprise Architecture Capability
	can be used as a baseline for the Preliminary Phase. Inputs would
	include:
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Budget requirements
	    -   Governance and support strategy
	-   Existing Architecture Framework, if any, including:
	    -   Architecture method
	    -   Architecture content
	    -   Configured and deployed tools
	    -   Architecture Principles
	    -   Architecture Repository
	
snippet togaf_business-architecture_business-capabilities_2.2.3_Information "2.2.3 Information"
	
	Information represents the business data, knowledge, and insight
	required or consumed by the business capability (as distinct from
	IT-related data entities). There may also be information that the
	capability exchanges with other capabilities to support the execution of
	value streams. Examples include information about customers and
	prospects, products and services, business policies and rules, sales
	reports, and performance metrics.
	
snippet togaf_business-architecture_business-capabilities_2.2.4_Resources "2.2.4 Resources"
	
	Business capabilities rely on a range of tools, materials, and assets
	for successful execution. Such resources may include:
	
	-   Information technology systems and applications
	-   Physical assets, such as buildings, machinery, and vehicles
	-   Intangible assets, such as money and intellectual property
	
snippet togaf_reference-models_digital-business-reference-model_2.20_Digital_Practices "2.20      Digital Practices"
	
	A synthesis of methods and guidance from a wide variety of practitioners
	and professional communities active in digital technology (lean, agile,
	DevOps, etc.) designed to create and manage products with an increasing
	digital component or lead their organization through Digital
	Transformation.
	
snippet togaf_reference-models_digital-business-reference-model_2.21_Digital_Product "2.21      Digital Product"
	
	A service, physical item, or digital item that provides an agreed and
	specific outcome for a consumer; that incorporates and requires software
	to realize that outcome; that is expected to require active management
	of the software and its required resources over its lifecycle, in a
	manner prescribed by the provider; and that is described by a formal
	offer of the outcome to be provided in exchange for an explicit price.
	
	Digital product refers primarily to the perspective of a product manager
	and represents a complete product line over its lifetime, to include
	product variants, types and locations of consumers, annual and lifetime
	financial models, dependencies on other products and services, supplier
	relationships, capacity, service-level options, distribution models,
	pricing and usage rules, delivery and management of digital product
	instances, and so on.
	
snippet togaf_reference-models_digital-business-reference-model_2.22_Digital_Technology "2.22      Digital Technology"
	
	Information technology in the form of a product or service that is
	digitally consumable to create or enable business value.
	
snippet togaf_reference-models_digital-business-reference-model_2.23_Digital_Transformation "2.23      Digital Transformation"
	
	The radical, fundamental change towards becoming a Digital Enterprise.
	
snippet togaf_reference-models_digital-business-reference-model_2.24_Domain_Model_Domain-Driven_Design "2.24      Domain Model: Domain-Driven Design"
	
	The representation of a selected abstraction of domain knowledge that is
	rigorously organized. (Source: Evans 2003)
	
snippet togaf_reference-models_digital-business-reference-model_2.25_Ecosystem "2.25      Ecosystem"
	
	The complex community of organisms and their environment, functioning as
	an ecological unit. (Source: Wind & Hays 2015)
	
snippet togaf_reference-models_digital-business-reference-model_2.26_Event_Storming "2.26      Event Storming"
	
	The identification of domain events, commands, persona, or entities to
	facilitate a structured conversation about the domain.
	
snippet togaf_reference-models_digital-business-reference-model_2.27_Information_Map "2.27      Information Map"
	
	A collection of information concepts and their relationships to one
	another. Information concepts, in effect, reflect the business’
	vocabulary; e.g., client, account, or product. Mapping information in
	Business Architecture starts with listing those elements that matter
	most to the business as well as how they are described in business
	terms.
	
snippet togaf_reference-models_digital-business-reference-model_2.28_Journey_Mapping "2.28      Journey Mapping"
	
	Laying out the entire end-to-end Customer Experience.
	
snippet togaf_reference-models_digital-business-reference-model_2.29_Operational_Context_Domain "2.29      Operational Context Domain"
	
	Refers to those elements that together describe the requirements and
	implications of operations. (Source: Wind & Hays 2015)
	
snippet togaf_guides_index_2.2_Agile_Architecture "2.2. Agile Architecture"
	
	1.  The “act” – the development of architecture that reacts quickly and
	    easily to changes through the delivery of iterative architectures
	    that provides incremental value-generating outcomes.
	
	2.  The “thing” – an architecture that is flexible; i.e., easy to change
	    or adapt.
	
snippet togaf_reference-models_digital-business-reference-model_2.2_Architecture "2.2 Architecture"
	
	1.  The fundamental concepts or properties of a system in its
	    environment embodied in its elements, relationships, and in the
	    principles of its design and evolution. (Source: ISO/IEC/IEEE
	    42010:2011)
	2.  (System Engineering Context) The embodiment of concept, and the
	    allocation of physical/informational function (process) to elements.
	
snippet togaf_architecture-project-management_2.2_Architecture_Project_Lifecycle "2.2 Architecture Project Lifecycle"
	
	The Architecture Project can be executed as a single, preplanned stage,
	but usually it is divided into a few stages. Use of stages allows for a
	more elastic approach, as each of the stages is typically planned in
	detail just before it starts (rather than at the start of the whole
	project). The TOGAF Standard advocates iterative execution of
	Architecture Projects – in this case, each iteration can be considered a
	separate stage.
	
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Dividing the Architecture Project into stages is discussed in detail in this Guide. For more information on the iterative approach, refer to architecture development in the TOGAF^(®) Standard – Applying the ADM: Applying Iteration to the ADM.
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	The Architecture Project encompasses management activities that can be
	grouped and sequenced as follows:
	
	-   Architecture Project start-up, which raises issues related to
	    appointing the Executive and Project Manager, as well as the Project
	    Management team, capturing previous lessons, selecting the project
	    approach, assembling the project brief, and planning the following
	    stage
	-   Architecture Project planning, which describes project scoping and
	    planning activities based on Project Management methods
	-   Planning a stage, which describes how to split an Architecture
	    Project into stages and plan a stage in alignment with an overall
	    Project Plan
	-   Execute, monitor, and control a stage, which describes how to
	    monitor and control architecture development activities of the ADM
	    Phases B to F using Project Management methods
	-   Ending a stage, which describes key steps performed at a stage end
	-   Architecture Project closing (and handover of architecture
	    deliverables for implementation), which describes the project
	    closing activities and handover of the Architecture Project products
	    to implementation programs and projects, and also the approach for
	    documenting lessons learned
	
	The above sequence forms an Architecture Project lifecycle, which is
	used as the basic structure to discuss Architecture Project Management
	in this Guide. This lifecycle maps into the TOGAF ADM (which describes
	architecture development phases and steps). It can be represented by
	Figure 3.
	
	[Figure 3 NEW.png]
	
	Figure 3: Architecture Project Lifecycle from the TOGAF ADM Perspective
	
	+-----------------------------------+-----------------------------------+
	|                                   | Please note: to simplify Figure 3 |
	|                                   | it assumes Architecture Project   |
	|                                   | is divided into stages that       |
	|                                   | resemble the ADM phases (each     |
	|                                   | stage covers one ADM phase).      |
	|                                   | Usually, this is not the case –   |
	|                                   | and in most cases should not be;  |
	|                                   | the TOGAF Standard recommends an  |
	|                                   | iterative approach, in which a    |
	|                                   | stage can cover a few phases and  |
	|                                   | can be executed repeatedly.       |
	|                                   |                                   |
	|                                   | Dividing the Architecture Project |
	|                                   | into stages is discussed in       |
	|                                   | detail in this Guide. For more    |
	|                                   | information on the iterative      |
	|                                   | approach to architecture          |
	|                                   | development, refer to the         |
	|                                   | TOGAF^(®) Standard – Applying the |
	|                                   | ADM: Applying Iteration to the    |
	|                                   | ADM.                              |
	+-----------------------------------+-----------------------------------+
	
	The Architecture Project lifecycle also maps to Project Management
	methods. Generally, these methods abstract from actual subject matter
	work in the project (i.e., architecture development), as they focus on
	management processes and steps needed for successful project execution.
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------
	     Detailed mapping of the TOGAF ADM and most popular Project Management methods is presented in Chapter 4 and Chapter 5 of this Guide.
	  -- --------------------------------------------------------------------------------------------------------------------------------------
	
	High-level mapping of the Architecture Project lifecycle to the TOGAF
	ADM phases and Project Management methods is presented in Table 2.
	Please note that the TOGAF Standard focuses on architecture development
	activities in the Architecture Project, and Project Management methods
	focus on managing successful execution of this endeavor.
	
	Table 2: Architecture Project Lifecycle Mapped to the TOGAF ADM and
	Project Management Methods
	
	+-----------------+-----------------+-----------------+-----------------+
	| Architecture    | TOGAF ADM       | PRINCE2         | PMBOK           |
	| Project         | Phases          |                 |                 |
	| Lifecycle       |                 |                 |                 |
	+=================+=================+=================+=================+
	| Architecture    | Phase A         | Starting up the | Initiation      |
	| Project         | (Architecture   | Project Process | Process group:  |
	| start-up        | Vision) –       | – all steps     |                 |
	|                 | Establish an    |                 | §4.1 Develop    |
	|                 | Architecture    |                 | Project Charter |
	|                 | Project step    |                 |                 |
	|                 |                 |                 | §13.1 Identify  |
	|                 |                 |                 | Stakeholders    |
	+-----------------+-----------------+-----------------+-----------------+
	| Architecture    | Phase A         | Initiation      | Planning        |
	| Project         | (Architecture   | Process –       | processes from  |
	| planning        | Vision) –       | Create the      | all process     |
	|                 | Develop a       | Project Plan,   | groups – create |
	|                 | Statement of    | Assemble the    | and collect     |
	|                 | Architecture    | Project         | Project         |
	|                 | Work step and   | Initiation      | Management plan |
	|                 | previous steps  | Documentation   |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Planning a      | No direct       | PRINCE2         |                 |
	| stage           | mapping, but    | highlights the  |                 |
	|                 | can be thought  | concept of      |                 |
	|                 | of as a closing | project stages  |                 |
	|                 | step of the     | more than       |                 |
	|                 | preceding phase | PMBOK. The      |                 |
	|                 |                 | concept         |                 |
	|                 |                 | described in    |                 |
	|                 |                 | this Guide is   |                 |
	|                 |                 | mostly based on |                 |
	|                 |                 | PRINCE2         |                 |
	|                 |                 | processes, but  |                 |
	|                 |                 | it is also      |                 |
	|                 |                 | consistent with |                 |
	|                 |                 | PMBOK.          |                 |
	|                 |                 |                 |                 |
	|                 |                 | The Execute,    |                 |
	|                 |                 | Monitor, and    |                 |
	|                 |                 | Control a Stage |                 |
	|                 |                 | section maps to |                 |
	|                 |                 | the Execute and |                 |
	|                 |                 | Monitor and     |                 |
	|                 |                 | Control process |                 |
	|                 |                 | groups defined  |                 |
	|                 |                 | in PMBOK.       |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Execute,        | Each of the     |                 |                 |
	| monitor, and    | Phases B to F   |                 |                 |
	| control a stage |                 |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Ending a stage  | No direct       |                 |                 |
	|                 | mapping, but    |                 |                 |
	|                 | can be thought  |                 |                 |
	|                 | of as a closing |                 |                 |
	|                 | step of the     |                 |                 |
	|                 | preceding phase |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Architecture    | Phase F         | Closing the     | Closing the     |
	| hand-over       | (Migration      | Project Process | project section |
	|                 | Planning) –     | – hand over     |                 |
	|                 | closing steps   | products        |                 |
	+-----------------+-----------------+-----------------+-----------------+
	
	(Source: Derived from the TOGAF Standard, PRINCE2, and the PMBOK Guide,
	5th Edition)
	
	To sum up, the Architecture Project lifecycle consists of six types of
	activities, which can be mapped to both the TOGAF ADM phases and Project
	Management method processes and steps. It is used to structure the
	detail presented in Detailed Guidance (Chapter 3).
	
snippet togaf_architecture-skills-framework_2.2_Basis_of_an_Enterprise_Architecture_Practice "2.2 Basis of an Enterprise Architecture Practice"
	
	Despite the lack of uniform terminology, architecture skills are in
	increasing demand, as the discipline of architecture gains increasing
	attention within industry.
	
	Many enterprises have set up, or are considering setting up, an
	Enterprise Architecture Practice, One of the benefits is the development
	of the necessary skills and experience among in-house staff to undertake
	the various architecting tasks required by the enterprise.
	
	An Enterprise Architecture Practice requires a formal program of
	development and certification, by which an enterprise formally
	recognizes the skills of its practicing architects, as demonstrated by
	their work. Such a program is essential in order to ensure the alignment
	of staff skills and experience with the architecture tasks that the
	enterprise wishes to be performed.
	
	The role and skill definitions on which such a program needs to be based
	are also required, by both recruiting and supplying organizations, in
	cases where external personnel are to be engaged to perform architecture
	work (for example, as part of a consultancy engagement).
	
	An Enterprise Architecture Practice is both difficult and costly to set
	up. It is normally built around a process of peer review, and involves
	the time and talent of the strategic technical leadership of an
	enterprise. Typically it involves establishment of a peer review board,
	and documentation of the process, and of the requirements for internal
	certification. Time is also required of candidates to prepare for peer
	review, by creating a portfolio of their work to demonstrate their
	skills, experiences, and contributions to the profession.
	
	The TOGAF Architecture Skills Framework attempts to address this need by
	providing definitions of the architecting skills and proficiency levels
	required of personnel, internal or external, who are to perform the
	various architecting roles defined within the TOGAF framework.
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.2_Characteristics_of_Architecture_Principles "2.2 Characteristics of Architecture Principles"
	
	Architecture Principles define the underlying general rules and
	guidelines for the use and deployment of all IT resources and assets
	across the enterprise. They reflect a level of consensus among the
	various elements of the enterprise, and form the basis for making future
	IT decisions.
	
	Each Architecture Principle should be clearly related back to the
	business objectives and key architecture drivers.
	
snippet togaf_business-architecture_value-streams_2.2_Decomposing_a_Value_Stream "2.2 Decomposing a Value Stream"
	
	Stakeholder value is rarely produced as the result of a single step or
	activity. More often, value is achieved through a series of sequential
	and/or parallel actions, or value stream stages, that incrementally
	create and add stakeholder value from one stage to the next.
	
	Each value stream stage comprises the following elements:
	
	1.  Name – Two to three words identifying what is (or will be) achieved
	    by this stage.
	2.  Description – A few sentences explaining the purpose and the
	    activities performed during the value stream stage.
	3.  Stakeholders – Actors who receive measurable value from the value
	    stream stage, or who contribute to creating or delivering that
	    value.
	4.  Entrance Criteria – The starting condition or state change that
	    either triggers the value stream stage or enables it to be
	    activated.
	5.  Exit Criteria – The end state condition that denotes the completion
	    of the value stream stage; i.e., when the required value has been
	    created or delivered to the stakeholders. This information becomes
	    the entry criteria for the next value stream stage.
	6.  Value Item – The incremental value that is created or delivered to
	    the participating stakeholder(s) by the value stream stage.
	
	A value stream does not necessarily flow continuously and uninterrupted
	from initiation through to conclusion. Following each value stream
	stage, there is an opportunity to stop the value stream if the desired
	value has not been created or delivered. This could be at the request of
	the participating stakeholder. For example, the Acquire Retail Product
	value stream may stop because the customer decides that they no longer
	want to purchase the merchandise after they see the price.
	
snippet togaf_architecture-maturity-models_2.2_Elements_of_the_ACMM "2.2 Elements of the ACMM"
	
	The DoC ACMM consists of six maturity levels and nine architecture
	elements. The six levels are:
	
	0 None
	
	1 Initial
	
	2 Under development
	
	3 Defined
	
	4 Managed
	
	5 Measured
	
	The nine Enterprise Architecture elements are:
	
	1 Architecture process
	
	2 Architecture development
	
	3 Business linkage
	
	4 Senior management involvement
	
	5 Operating unit participation
	
	6 Architecture communication
	
	7 IT security
	
	8 Architecture Governance
	
	9 IT investment and acquisition strategy
	
	Two complementary methods are used in the ACMM to calculate a maturity
	rating. The first method obtains a weighted mean Enterprise Architecture
	maturity level. The second method shows the percentage achieved at each
	maturity level for the nine architecture elements.
	
snippet togaf_business-architecture_business-capabilities_2.2_Elements_to_Implement_Business_Capabilities "2.2 Elements to Implement Business Capabilities"
	
	A combination of roles, processes, information, and tools enables a
	business capability. The process of reviewing each of the business
	capability components helps refine the business capability name and
	description, and supports the subsequent analysis of business capability
	gaps, duplications, and redundancies. This decomposition can be used as
	a test to check that the capability definition is, in fact, a business
	capability (rather than a process, organizational function, or service).
	
	Business capabilities are coarse-grained concepts that enable business
	planning from different viewpoints. Business capabilities are built to
	focus on what the business does rather than how the business uses
	capabilities to deliver value. That said, in order for a capability to
	be defined, we need to understand how the capability is realized in the
	form of people, processes, information, and resources. The key
	distinction is that the elements of a business capability can change
	regularly, whereas the business capability itself can endure over longer
	planning horizons. The how of a capability must be self-contained within
	the capability.
	
snippet togaf_togaf-leaders-guide_2_Definitions_2.2_Enterprise_Architecture_EA "2.2 Enterprise Architecture (EA)"
	
	Gartner defines Enterprise Architecture as “the process of translating
	business vision and strategy into effective enterprise change by
	creating, communicating, and improving the key principles and models
	that describe the enterprise’s future state and enable its
	evolution”.[3]
	
snippet togaf_adm-practitioners_2_Definitions_2.2_Enterprise_Architecture_EA "2.2 Enterprise Architecture (EA)"
	
	As the focus of this Guide is to explain the TOGAF framework and the
	concept of Enterprise Architecture, it is better to define this concept
	in some detail. Succinct definitions tend to require specialized
	knowledge to understand the nuance. See Chapter 3 for a discussion of
	EA.
	
	Two concise definitions that can be used are from Gartner and DoDAF.
	Gartner[4] defines Enterprise Architecture as: “the process of
	translating business vision and strategy into effective Enterprise
	change by creating, communicating, and improving the key principles and
	models that describe the Enterprise’s future state and enable its
	evolution”. DoDAF defines architecture as: “a set of abstractions and
	models that simplify and communicate complex structures, processes,
	rules, and constraints to improve understanding, implementation,
	forecasting, and resourcing”.
	
	While many in the EA profession find distinguishing the terms
	“architecture” and “architecture description” useful, this document does
	not make any such distinction.
	
snippet togaf_adm_2_Preliminary_Phase_2.2_Inputs "2.2 Inputs"
	
	This section defines the inputs to the Preliminary Phase.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.2_ISO_31000_2009_Risk_Management_Principles_and_Guidelines "2.2 ISO 31000:2009: Risk Management – Principles and Guidelines"
	
	ISO 31000:2009 [6] sets out principles, a framework, and a process for
	the management of risk that are applicable to any type of organization
	in the public or private sector. It does not mandate a “one size fits
	all” approach, but rather emphasizes the fact that the management of
	risk must be tailored to the specific needs and structure of the
	particular organization. It has a related standard IEC 31010:2009 [7]
	that describes examples of qualitative risk assessment methods.
	
	The core concepts of ISO 31000:2009 are taken as a basis for the ERM
	process in this Guide. Just as with ISO/IEC 27001:2013, no fixed mapping
	has been made to that standard but it is seen as one of the good
	references that is very useful for this work.
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.2_Iteration_Cycles "2.2 Iteration Cycles"
	
	The suggested iteration cycles for the TOGAF ADM are shown in Figure 2-1
	, and can be used to effectively group related architectural activities
	to achieve a specific purpose. These iteration cycles are referenced in
	2.3 Classes of Architecture Engagement and 2.5 Iteration Considerations
	.
	
	[]
	
	Figure 2-1: Iteration Cycles
	
	-   Architecture Capability iterations support the creation¹ and
	    evolution of the required Architecture Capability
	
	    This includes the initial mobilization of the architecture activity
	    for a given purpose or architecture engagement type by establishing
	    or adjusting the architecture approach, principles, scope, vision,
	    and governance.
	
	-   Architecture Development iterations allow the creation of
	    architecture content by cycling through, or integrating, Business,
	    Information Systems, and Technology Architecture phases
	
	    These iterations ensure that the architecture is considered as a
	    whole. In this type of iteration stakeholder reviews are typically
	    broader. As the iterations converge on a target, extensions into the
	    Opportunities & Solutions and Migration Planning phases ensure that
	    the architecture's implementability is considered as the
	    architecture is finalized.
	
	-   Transition Planning iterations support the creation of formal change
	    roadmaps for a defined architecture
	
	-   Architecture Governance iterations support governance of change
	    activity progressing towards a defined Target Architecture
	
snippet togaf_reference-models_government-reference-model_2.2_Key_Drivers_for_Change "2.2 Key Drivers for Change"
	
	The future of international affairs and trade will be impacted by the
	trends captured below.
	
	Powerful Political Forces Setting Agenda
	
	Current demographics have led to a tacit assumption among rich and
	economically powerful nations that a mix of representative government,
	free market economies, and reformed state structures should represent
	future norms. However, the increased role of governance has led to
	growing tendencies to impose normative and administrative frameworks on
	aid organizations in order to regulate, register, and control their
	activities.
	
	New Types of Vulnerabilities
	
	Supply-side shocks have caused reductions in the prices of primary
	goods. The COVID-19 pandemic has contributed to contractions in
	investment and international trade as markets shut down businesses
	temporarily and restrict travel and the movement of people, leading to
	contractions in household spending and output levels.
	
	This has revealed the fragility of global supply chains and, when
	combined with diplomatic tensions, could motivate multinationals to
	explore near-shoring more seriously.
	
	De-Globalization
	
	Trends in populism and nationalism have ensued from leading economies,
	undermining global organizations by promoting protectionist practices
	through the creation of barriers in technology. Moreover, East Asian
	economies are becoming more self-reliant and less dependent on the
	Western world. These factors will play a part in the fragmentation of
	global supply chains whereby newly industrialized countries will start
	to take a regional approach to trade and investment flows.
	
	Technology
	
	Investment in digital trade will enable organizations to maximize
	business value from information, improve decision-making, and drive
	efficiencies. The following technologies are expected to be leveraged in
	the coming years:
	
	-   Blockchain technology: this will be used to increase accountability,
	    transparency, and potentially remove corruption
	
	This technology will be used to distribute and trace aid funding,
	provide and manage IDs in refugee camps, or create trustworthy land
	registries enabling decentralized ledgers by recording transactions
	across a peer-to-peer network.
	
	-   Digital Identity: in the future, it is likely that citizens will be
	    required to use their biometric identification through, for example,
	    retina scans, fingerprints, or facial recognition to open a bank
	    account, register to vote, and obtain permits and licenses
	-   Data Analytics: dashboards created through the consolidation of
	    databases will help identify safe delivery paths for aid in conflict
	    zones and help find better locations to store warehouse goods
	-   Collaboration Tools: treaty creation/treaty management solution and
	    refinement and dispute resolution will be enabled by collaborative
	    software and tools (e.g., document sharing, instant messaging, cloud
	    storage, videoconferencing, analytics, cross-reference searching)
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.2_Phase_A_Architecture_Vision "2.2 Phase A: Architecture Vision"
	
	The purpose of this phase within the context of establishing an
	architecture practice is to define or review the vision, stakeholders,
	and principles of the architecture practice. The focus in this phase
	would be on the architecture practice as a whole and not on a particular
	architecture project.
	
	The following should be considered in terms of understanding the steps
	in the context of establishing an architecture practice:
	
	-   Establish the Project: this step should focus on defining the
	    stakeholders in the architecture practice
	
	    The stakeholders would include the roles and organization units
	    participating in the architecture practice, as well as people who
	    will benefit from the deliverables generated by the architecture
	    practice and who can therefore be defined as customers of the
	    architecture practice.
	
	-   Identify Stakeholders and Concerns, Business Requirements, and
	    Architecture Vision: this step generates the first, very high-level
	    definitions of the baseline and target environments, from the
	    perspectives of business information systems and technology, for the
	    architecture practice
	
	-   Identify Business Goals and Business Drivers: an understanding of
	    the business goals and drivers is essential to align the
	    architecture practice to the business
	
	-   Define Scope: defining the scope of the architecture practice is a
	    high-level project plan of what is scheduled to be addressed in
	    terms of architecture for the next period
	
	-   Define Constraints: the focus in this step is the enterprise-wide
	    constraints that impact on all architecture projects
	
	-   Review Architecture Principles, including Business Principles: the
	    intent in this step is to define the principles that govern and
	    guide the running of the architecture practice
	
	    Where Architecture Principles usually govern the architecture
	    deliverables, the architecture practice principles address the
	    architecture practice organization, content, tools, and process.
	
	-   Develop Statement of Architecture Work and Secure Approval: this
	    step generates the architecture practice vision and scope
	
	Another step that can be considered during this phase is to conduct an
	architecture maturity assessment. Refer to the TOGAF® Series Guide:
	Architecture Maturity Models for guidance on this topic.
	
snippet togaf_digital-technology-adoption_2.2_Problem_Statement "2.2 Problem Statement"
	
	Every enterprise that has decided to embark on an enterprise-wide
	Digital Transformation needs to assess how prepared it is for the
	transformation journey. A readiness assessment needs to be performed to
	get a view of how ready the enterprise is for a big change. A readiness
	assessment is a measurement of the preparedness of enterprises to
	undergo a large transformation. Enterprises do not want to start a big
	transformation without knowing if they have the resources to accomplish
	the evolution effectively and derive the full benefits sustainably.
	
	The DTRA gives decision-makers the knowledge and assurance that their
	company’s proposed endeavor will be successful if they decide to go
	ahead and do it. It also saves the company’s reputation by avoiding a
	potentially high-profile failure by engaging in a transformation that
	the enterprise is not ready to complete.
	
	A readiness assessment usually assesses the following at a high level:
	
	-   Transformation goals and objectives
	-   Expectations and concerns, and potential value
	-   Leadership support for the program
	-   Ability to adapt to change
	-   Ways to minimize potential transformation failure
	-   Transformation governance and decision-making
	-   Internal capability to make the transformation happen
	-   Other critical program needs like process management and governance
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2.2_Reactively_Managing_Technical_Debt "2.2. Reactively Managing Technical Debt"
	
	  “Technical debt (also known as design debt or code debt) is a concept
	  in software development that reflects the implied cost of additional
	  rework caused by choosing an easy solution now instead of using a
	  better approach that would take longer.” Wikipedia^(®) (see Referenced
	  Documents)
	
	  “The issue is that there is not just the typical hack, the technical
	  shortcut that is beneficial today, but expensive tomorrow that creates
	  technical debt. (A not uncommon tactic in feature factories.) There is
	  also a kind of technical debt that is passively created when the Scrum
	  team learns more about the problem it is trying to solve. Today, the
	  product team might prefer a different solution by comparison to the
	  one the team implemented just six months ago. Or, the product team
	  upgrades the definition of “done”, thus introducing rework in former
	  product increments. No matter from what angle you look at the problem,
	  you cannot escape it, and Scrum does not offer a silver bullet
	  either.” Scrum.org™ (see Referenced Documents)
	
	One area of Agile development that can be helped by an Enterprise
	Architecture approach is the management of technical and architectural
	debt. Technical debt is not bad, but a debt may bring a short-term
	benefit at the cost of future delay and inflexibility in bringing new
	features to market.^([3])
	
	Once you incur technical debt, you have to do something with it. This
	can be considered as reactively managing technical debt. Many technical
	debt issues can be dealt with in the product backlog by having the
	principle that technical debt is tracked and continually paid down as
	part of items in the sprints. However, there are other forms of
	technical debt that are better dealt with from an enterprise perspective
	because of their extremely complex or cross-cutting nature, which may be
	better managed using Enterprise Architecture and/or following the
	approaches in the TOGAF Standard. Other forms of technical debt that do
	not require Enterprise Architecture or approaches from the TOGAF
	Standard are technical debts that can be mitigated by following software
	or middleware patterns. This approach might be preferred to simplify
	maintainability. Technical debt of this nature can also appear in the
	technology domain.
	
	An approach based on the TOGAF Standard is also well-suited to
	identifying technical debt incurred due to redundancy. As all products
	are based in the same digital ecosystem, multiple Scrum teams may have
	run into the same “architecture roadblocks”. Using the TOGAF ADM as an
	Enterprise Architecture approach should uncover these overlaps and not
	only address the issues specific to particular product architectures,
	but also gain insight into fundamental and systematic deficiencies in
	the digital ecosystem itself. This can enable teams to develop or
	acquire solutions to address issues from which multiple products might
	suffer.
	
snippet togaf_introduction_2_The_TOGAF_Documentation_Set_2.2_The_TOGAF_Standard "2.2 The TOGAF Standard"
	
	The TOGAF Standard is an open, industry consensus framework for
	Enterprise Architecture.
	
	It is a foundational framework, which means that it is applicable to the
	development of any kind of architecture in any context. This
	foundational framework is supplemented by The Open Group TOGAF Library,
	an extensive and growing portfolio of guidance material, providing
	practical guidance in the application of the TOGAF framework in specific
	contexts.
	
	The structure of the TOGAF Standard reflects the structure and content
	of an Architecture Capability within an enterprise, as shown in Figure
	2-2 .
	
	[]
	
	Figure 2-2: Structure of the TOGAF Standard
	
	The TOGAF Standard Fundamental Content is presented as six free-standing
	documents:
	
	-   The TOGAF Standard — Introduction and Core Concepts (this document)
	
	-   The TOGAF Standard — Architecture Development Method
	
	    This document describes the TOGAF Architecture Development Method
	    (ADM) — an iterative approach to developing an Enterprise
	    Architecture.
	
	-   The TOGAF Standard — ADM Techniques
	
	    This document contains a collection of techniques available for use
	    in applying the TOGAF approach and the TOGAF ADM.
	
	-   The TOGAF Standard — Applying the ADM
	
	    This document contains guidelines for adapting the TOGAF ADM to
	    address the specific style of architecture required in a practical
	    context.
	
	-   The TOGAF Standard — Architecture Content
	
	    This document describes the TOGAF Content Framework and a structured
	    metamodel for architectural artifacts, the use of re-usable
	    Architecture Building Blocks (ABBs), and an overview of typical
	    architecture deliverables.
	
	-   The TOGAF Standard — EA Capability and Governance
	
	    This document discusses the organization, processes, skills, roles,
	    and responsibilities required to establish and operate an
	    architecture function within an enterprise and describes an
	    Enterprise Architecture governance framework.
	
	The intention of dividing the TOGAF Standard into these independent
	documents is to allow for different areas of specialization to be
	considered in detail and potentially addressed in isolation. Although
	all the constituent documents work together as a whole, it is also
	feasible to select particular documents for adoption while excluding
	others. For example, an organization may wish to adopt the ADM process,
	but elect not to use any of the materials relating to Architecture
	Capability. As an open framework, such use is encouraged, particularly
	in the following situations:
	
	-   Organizations that are new to the TOGAF approach and wish to
	    incrementally adopt TOGAF concepts are expected to focus on
	    particular constituent documents of the standard for initial
	    adoption, with other areas tabled for later consideration
	-   Organizations that have already deployed architecture frameworks may
	    choose to merge these frameworks with aspects of the TOGAF Standard
	
	The TOGAF Standard comprises the TOGAF Fundamental Content and a
	collection of TOGAF Series Guides, which provide the practical guidance
	in the application of the TOGAF Standard.
	
	Figure 2-3 depicts the structure and scope of the TOGAF Standard.
	
	[]
	
	Figure 2-3: The TOGAF Standard
	
	Besides the core framework content covered by the six documents
	explained above, the standard provides guidance to address specific
	concerns and use-cases through the TOGAF Series Guides.
	
	The TOGAF Series Guides are designed to support more specific needs from
	practitioners who need further explanation or more detail than that
	provided in the core content.
	
	Not all the TOGAF Series Guides will be relevant in every situation.
	However, Enterprise Architects who are planning the deployment of the
	TOGAF Standard should be aware of the guidance available.
	
	This content will evolve more rapidly than the core content to cover new
	needs as they emerge from market trends and the needs of the industry.
	There is a set of activities running continuously in The Open Group
	Architecture Forum to deliver this content following a continuous and
	incremental delivery pipeline.
	
	Examples of the areas covered by this guidance material are:
	
	-   Strategy decision-making and business value-oriented decisions
	-   Business Architecture and operating model description
	-   Information and data management
	-   Information system guidance
	-   Information reference models and data integration models
	-   Technology Architecture: how Enterprise Architecture as a practice
	    can be applied to adopt new technology trends to assess if the
	    organization owns the right capabilities to support the new
	    technology adoption
	-   Security Architecture: how the TOGAF Standard can be applied to
	    deliver and support Security Architecture and risk management
	-   How Enterprise Architecture as a practice and the TOGAF Standard can
	    be applied to support the agile enterprise, to be delivered
	    following an agile style, and how the standard can support
	    organizations using agile methodologies
	-   How Enterprise Architecture as a practice and the TOGAF Standard
	    support the digital enterprise so that organizations can deliver
	    digital products, and improve their digital offering and digital
	    value proposition
	-   How the standard can be applied with other standards and
	    methodologies of The Open Group such as the O-AA^(TM) Standard, the
	    DPBoK^(TM) Standard, the IT4IT^(TM) Reference Architecture, the
	    ArchiMate® Specification, Microservices Architecture (MSA), security
	    standards, and also with other standards bodies' standards and best
	    practices
	
	The complete set of TOGAF Series Guides can be found at
	www.opengroup.org/library/guides/togaf/togaf-series-guides.
	
snippet togaf_metadata-management_2.2_The_TOGAF_Standard_and_Data_Architecture "2.2 The TOGAF^(®) Standard and Data Architecture"
	
	This document proposes:
	
	-   A focus on Metadata Management to guide the design of the capability
	    including reference models with business function and application
	    function descriptions (see Section 5.1 and Section 5.2)
	-   An adaptation of the TOGAF ADM phases to support the execution of a
	    Metadata Management transformation program (see Section 4.1)
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.2_TOGAF_Enterprise_Metamodel_Vision "2.2 TOGAF Enterprise Metamodel Vision"
	
	The TOGAF Standard includes the TOGAF Enterprise Metamodel which
	captures the entities and relationships that are likely to be
	encountered in the majority of enterprises. This may be used as the
	basis for developing an Organization-Specific Metamodel when
	establishing the Enterprise Architecture Capability in the Preliminary
	Phase and also provides the context for the specific artifacts
	referenced in the descriptions of the ADM phases and described in detail
	in 3. Architectural Artifacts .
	
	When developing an Organization-Specific Metamodel, architects may
	choose not to include entities and relationships from the TOGAF
	Enterprise Metamodel which are not relevant and/or add additional
	entities and relationships.
	
	This section provides an overview of the TOGAF Enterprise Metamodel.
	Subsequent sections discuss each area of the metamodel in more detail.
	
snippet togaf_master-data-management_2.2_TOGAF_Framework_Extension "2.2 TOGAF Framework Extension"
	
	This document proposes:
	
	-   A focus on C-MDM to guide the design of the capability including
	    reference models with business function and application function
	    descriptions (see Chapter 5)
	-   An adaptation of the TOGAF Architecture Development Method (ADM)
	    phases to support the execution of a C-MDM transformation program
	    (see Chapter 4)
	
snippet togaf_adm_2_Preliminary_Phase_2.3.1_Scope_the_Enterprise_Organizations_Impacted "2.3.1 Scope the Enterprise Organizations Impacted"
	
	-   Identify core enterprise (units) — those who are most affected and
	    achieve most value from the work
	-   Identify soft enterprise (units) — those who will see change to
	    their capability and work with core units but are otherwise not
	    directly affected
	-   Identify extended enterprise (units) — those units outside the
	    scoped enterprise who will be affected in their own Enterprise
	    Architecture
	-   Identify communities involved (enterprises) — those stakeholders who
	    will be affected and who are in groups of communities
	-   Identify governance involved, including legal frameworks and
	    geographies (enterprises)
	
snippet togaf_adm_2_Preliminary_Phase_2.3.2_Confirm_Governance_and_Support_Frameworks "2.3.2 Confirm Governance and Support Frameworks"
	
	The architecture framework will form the keystone to the flavor
	(centralized or federated, light or heavy, etc.) of Architecture
	Governance organization and guidelines that need to be developed. Part
	of the major output of this phase is a framework for Architecture
	Governance. We need to understand how architectural material (standards,
	guidelines, models, compliance reports, etc.) is brought under
	governance; i.e., what type of governance repository characteristics are
	going to be required, what relationships and status recording are
	necessary to ascertain which governance process (dispensation,
	compliance, take-on, retirement, etc.) has ownership of an architectural
	artifact.
	
	It is likely that the existing governance and support models of an
	organization will need to change to support the newly adopted
	architecture framework.
	
	To manage the organizational change required to adopt the new
	architectural framework, the current enterprise governance and support
	models will need to be assessed to understand their overall shape and
	content. Additionally, the sponsors and stakeholders for architecture
	will need to be consulted on potential impacts that could occur.
	
	Upon completion of this step, the architecture touch-points and likely
	impacts should be understood and agreed by relevant stakeholders.
	
snippet togaf_adm_2_Preliminary_Phase_2.3.3_Define_and_Establish_Enterprise_Architecture_Team_and_Organization "2.3.3 Define and Establish Enterprise Architecture Team and Organization"
	
	-   Determine existing enterprise and business capability
	-   Conduct an Enterprise Architecture/business change maturity
	    assessment, if required
	-   Identify gaps in existing work areas
	-   Allocate key roles and responsibilities for Enterprise Architecture
	    Capability management and governance
	-   Define requests for change to existing business programs and
	    projects:
	    -   Inform existing Enterprise Architecture and IT architecture work
	        of stakeholder requirements
	    -   Request assessment of impact on their plans and work
	    -   Identify common areas of interest
	    -   Identify any critical differences and conflicts of interest
	    -   Produce requests for change to stakeholder activities
	-   Determine constraints on Enterprise Architecture work
	-   Review and agree with sponsors and board
	-   Assess budget requirements
	
snippet togaf_adm_2_Preliminary_Phase_2.3.4_Identify_and_Establish_Architecture_Principles "2.3.4 Identify and Establish Architecture Principles"
	
	Architecture Principles (see the TOGAF Standard — ADM Techniques) are
	based on business principles and are critical in setting the foundation
	for Architecture Governance. Once the organizational context is
	understood, define a set of Architecture Principles that is appropriate
	to the enterprise.
	
snippet togaf_adm_2_Preliminary_Phase_2.3.5_Tailor_the_TOGAF_Framework_and_if_any_Other_Selected_Architecture_Frameworks "2.3.5 Tailor the TOGAF Framework and, if any, Other Selected Architecture Framework(s)"
	
	In this step, determine what tailoring of the TOGAF framework is
	required. Consider the need for:
	
	-   Terminology Tailoring: architecture practitioners should use
	    terminology that is generally understood across the enterprise
	
	    Tailoring should produce an agreed terminology set for description
	    of architectural content. Consideration should be given to the
	    creation of an Enterprise Glossary, to be updated throughout the
	    architecture process.
	
	-   Process Tailoring: the TOGAF ADM provides a generic process for
	    carrying out architecture
	
	    Process tailoring provides the opportunity to remove tasks that are
	    already carried out elsewhere in the organization, add
	    organization-specific tasks (such as specific checkpoints), and to
	    align the ADM processes to external process frameworks and
	    touch-points. Key touch-points to be addressed would include:
	
	    -   Links to (project and service) portfolio management processes
	    -   Links to project lifecycle
	    -   Links to operations handover processes
	    -   Links to operational management processes (including
	        configuration management, change management, and service
	        management)
	    -   Links to procurement processes
	
	-   Content Tailoring: using the TOGAF Architecture Content Framework
	    and Enterprise Continuum as a basis, tailoring of content structure
	    and classification approach allows adoption of third-party content
	    frameworks and also allows for customization of the framework to
	    support organization-specific requirements
	
snippet togaf_adm_2_Preliminary_Phase_2.3.6.1_Issues_in_Tools_Standardization "2.3.6.1 Issues in Tools Standardization"
	
	In the current state of the tools market, many enterprises developing
	Enterprise Architectures struggle with the issue of standardizing on
	tools, whether they seek a single "one size fits all" tool or a
	multi-tool suite for modeling architectures and generating the different
	architecture views required.
	
	There are ostensible advantages associated with selecting a single tool.
	Organizations following such a policy can hope to realize benefits such
	as reduced training, shared licenses, quantity discounts, maintenance,
	and easier data interchange. However, there are also reasons for
	refusing to identify a single mandated tool, including reasons of
	principle (endorsing a single architecture tool would not encourage
	competitive commercial innovation or the development of advanced tool
	capability); and the fact that a single tool would not accommodate a
	variety of architecture development "maturity levels" and specific needs
	across an enterprise.
	
	Successful Enterprise Architecture teams are often those that harmonize
	their architecture tools with their architecture maturity level,
	team/organizational capabilities, and objectives or focus. If different
	organizations within an enterprise are at different architecture
	maturity levels and have different objectives or focus (e.g., Enterprise
	versus Business versus Technology Architecture), it becomes very
	difficult for one tool to satisfy all organizations' needs.
	
snippet togaf_adm_2_Preliminary_Phase_2.3.6_Develop_a_Strategy_and_Implementation_Plan_for_Tools_and_Techniques "2.3.6 Develop a Strategy and Implementation Plan for Tools and Techniques"
	
	There are many tools and techniques which may be used to develop
	Enterprise Architecture across many domains. The development of a tools
	strategy is recommended that reflects the understanding and level of
	formality required by the enterprise's stakeholders. Architecture
	content will be highly dependent on the scale, sophistication, and
	culture of both the stakeholders and the Architecture Capability within
	the organization. A tools strategy which recognizes the stakeholders'
	articulation requirements will enable more effective and rapid
	decision-making by stakeholders and their ownership of artifacts.
	
	The strategy should encompass management techniques, decision
	management, workshop techniques, business modeling, detailed
	infrastructure modeling, office products, languages, and repository
	management as well as more formal architecture tools. For example, the
	Balanced Scorecard technique is a best practice performance measurement
	tool used by business schools and many organizations that can be used
	successfully in architecture projects.
	
	The implementation of the tools strategy may be based on common desktop
	and office tools or may be based on a customized deployment of
	specialist management and architecture tools. Change management of the
	artifact deliverables is a major consideration and a degree of
	management control and governance of artifacts needs to be considered.
	Access to decisions needs to be managed carefully as many of the
	artifacts may contain sensitive information. Therefore the tools
	implementation, access, and security of the content needs to reflect the
	sensitivity requirements.
	
snippet togaf_reference-models_digital-business-reference-model_2.30_Organizational_Competency "2.30      Organizational Competency"
	
	An organizational mechanism composed of related capabilities,
	commitments, knowledge, and skills that enable an organization to
	accomplish its strategic intent and objectives
	
snippet togaf_reference-models_digital-business-reference-model_2.31_Organization_Map "2.31      Organization Map"
	
	A Business Architecture blueprint that shows:
	
	1.  The main organizational units, partners, and stakeholder groups that
	    comprise the ecosystem of an enterprise.
	2.  The working relationships (informal as well as formal) between each
	    of those entities.
	
snippet togaf_reference-models_digital-business-reference-model_2.32_Portfolio "2.32      Portfolio"
	
	A collection of initiatives (e.g., programs, projects), epics and
	services/products managed as a group to achieve strategic objectives.
	For example: portfolio backlog with epics, project portfolio, service
	and product portfolio, or technology portfolio.
	
snippet togaf_reference-models_digital-business-reference-model_2.33_Product "2.33      Product"
	
	An outcome generated by the business to be offered to customers.
	Products include materials and/or services.
	
snippet togaf_reference-models_digital-business-reference-model_2.34_Product_Architecture "2.34      Product Architecture"
	
	1.  The arrangement of functional elements
	2.  The mapping from functional elements to physical components
	3.  The specification of the interfaces among interacting physical
	    components (Source: Ulrich 1993)
	
snippet togaf_reference-models_digital-business-reference-model_2.35_Program "2.35      Program"
	
	A coordinated set of change projects, epics, and services/products that
	deliver business benefit to the organization.
	
snippet togaf_reference-models_digital-business-reference-model_2.36_Project "2.36      Project"
	
	A single change activity which delivers business benefit to the
	organization.
	
snippet togaf_reference-models_digital-business-reference-model_2.37_Use-Case "2.37      Use-Case"
	
	A view of organization, application, or product functionality that
	illustrates capabilities in context with the user of that capability.
	
snippet togaf_reference-models_digital-business-reference-model_2.38_User "2.38      User"
	
	1.  Any person, organization, or functional unit that uses the services
	    of an information processing system.
	2.  In a conceptual schema language, any person or any thing that may
	    issue or receive commands and messages to or from the information
	    system.
	
snippet togaf_reference-models_digital-business-reference-model_2.39_Value_Stream "2.39      Value Stream"
	
	A representation of an end-to-end collection of activities that create
	an overall result for a customer, stakeholder, or end user. In modeling
	terms, those value-adding activities are represented by value stream
	stages, each of which creates and adds incremental stakeholder value
	from one stage to the next.
	
snippet togaf_architecture-maturity-models_2.3_ACMM_Scoring_Characteristics_for_Each_Level_of_the_Maturity_Model "2.3 ACMM Scoring Characteristics for Each Level of the Maturity Model"
	
	The following sections show the detailed characteristics of the
	Enterprise Architecture maturity levels as applied to each of the nine
	elements of the maturity model. For example, Level 3: Defined, point
	number 8 (Explicit documented governance of majority of IT investments)
	shows Maturity Level 3’s state for Element 8 (Architecture Governance).
	
	Level 0: None
	
	No Enterprise Architecture program. No Enterprise Architecture to speak
	of.
	
	Level 1: Initial
	
	Informal Enterprise Architecture process underway.
	
	1.  Processes are ad hoc and localized. Some Enterprise Architecture
	    processes are defined. There is no unified architecture process
	    across technologies or business processes. Success depends on
	    individual efforts.
	2.  Enterprise Architecture processes, documentation, and standards are
	    established by a variety of ad hoc means and are localized or
	    informal.
	3.  Minimal, or implicit linkage to business strategies or business
	    drivers.
	4.  Limited management team awareness or involvement in the architecture
	    process.
	
	5.  Limited operating unit acceptance of the Enterprise Architecture
	    process.
	6.  The latest version of the operating unit’s Enterprise Architecture
	    documentation is online. Little communication exists about the
	    Enterprise Architecture process and possible process improvements.
	7.  IT security considerations are ad hoc and localized.
	8.  No explicit governance of architectural standards.
	9.  Little or no involvement of strategic planning and acquisition
	    personnel in the Enterprise Architecture process. Little or no
	    adherence to existing standards.
	
	Level 2: Under Development
	
	Enterprise Architecture process is under development.
	
	1.  The Basic Enterprise Architecture process is clearly documented. The
	    architecture process has developed clear roles and responsibilities.
	
	2.  IT vision, principles, business linkages, Baseline, and Target
	    Architecture are identified. Architecture standards exist, but not
	    necessarily linked to Target Architecture. Technical Reference Model
	    (TRM) and Standards Profile framework established.
	3.  Explicit linkage to business strategies.
	4.  Management awareness of architecture effort.
	5.  Responsibilities are assigned and work is underway.
	6.  The DoC and operating unit Enterprise Architecture web pages are
	    updated periodically and are used to document architecture
	    deliverables.
	7.  IT Security Architecture has defined clear roles and
	    responsibilities.
	8.  Governance of a few architectural standards and some adherence to
	    existing Standards Profile.
	9.  Little or no formal governance of IT investment and acquisition
	    strategy. Operating unit demonstrates some adherence to existing
	    Standards Profile.
	
	Level 3: Defined
	
	Defined Enterprise Architecture including detailed written procedures
	and TRM.
	
	1.  The architecture is well defined and communicated to IT staff and
	    business management with operating unit IT responsibilities. The
	    process is largely followed.
	
	2.  Gap analysis and Migration Plan are completed. Fully developed TRM
	    and Standards Profile. IT goals and methods are identified.
	3.  Enterprise Architecture is integrated with capital planning and
	    investment control.
	4.  Senior management team aware of and supportive of the
	    enterprise-wide architecture process. Management actively supports
	    architectural standards.
	5.  Most elements of operating unit show acceptance of or are actively
	    participating in the Enterprise Architecture process.
	6.  Architecture documents updated regularly on the DoC Enterprise
	    Architecture web page.
	7.  IT Security Architecture Standards Profile is fully developed and is
	    integrated with Enterprise Architecture.
	8.  Explicit documented governance of majority of IT investments.
	9.  IT acquisition strategy exists and includes compliance measures to
	    IT Enterprise Architecture. Cost benefits are considered in
	    identifying projects.
	
	Level 4: Managed
	
	Managed and measured Enterprise Architecture process.
	
	1.  Enterprise Architecture process is part of the culture. Quality
	    metrics associated with the architecture process are captured.
	
	2.  Enterprise Architecture documentation is updated on a regular cycle
	    to reflect the updated Enterprise Architecture. Business, Data,
	    Application, and Technology Architectures defined by appropriate de
	    jure and de facto standards.
	3.  Capital planning and investment control are adjusted based on the
	    feedback received and lessons learned from updated Enterprise
	    Architecture. Periodic re-examination of business drivers.
	4.  Senior management team directly involved in the architecture review
	    process.
	5.  The entire operating unit accepts and actively participates in the
	    Enterprise Architecture process.
	6.  Architecture documents are updated regularly, and frequently
	    reviewed for the latest architecture developments/standards.
	7.  Performance metrics associated with IT Security Architecture are
	    captured.
	8.  Explicit governance of all IT investments. Formal processes for
	    managing variances feed back into Enterprise Architecture.
	9.  All planned IT acquisitions and purchases are guided and governed by
	    the Enterprise Architecture.
	
	Level 5: Measured
	
	Continuous improvement of Enterprise Architecture process.
	
	1.  Concerted efforts to optimize and continuously improve architecture
	    process.
	
	2.  A standards and waivers process is used to improve architecture
	    development process.
	3.  Architecture process metrics are used to optimize and drive business
	    linkages. Business involved in the continuous process improvements
	    of Enterprise Architecture.
	4.  Senior management involvement in optimizing process improvements in
	    architecture development and governance.
	5.  Feedback on architecture process from all operating unit elements is
	    used to drive architecture process improvements.
	6.  Architecture documents are used by every decision-maker in the
	    organization for every IT-related business decision.
	7.  Feedback from IT Security Architecture metrics are used to drive
	    architecture process improvements.
	8.  Explicit governance of all IT investments. A standards and waivers
	    process is used to make governance-process improvements.
	9.  No unplanned IT investment or acquisition activity.
	
	3 Capability Maturity Models Integration (CMMI)
	
	In recent years the industry has witnessed significant growth in the
	area of maturity models. The multiplicity of models available has led to
	problems of its own, in terms of how to integrate all the different
	models to produce a meaningful metric for overall process maturity.
	
snippet togaf_guides_index_2.3_Agile_Product_Owner "2.3. Agile Product Owner"
	
	A member of an Agile product team responsible for defining user stories
	and prioritizing the backlog, ensuring these are understood by other
	team members while maintaining the conceptual integrity of the features
	or components for the delivery team. In the TOGAF framework, product has
	a wider context, but is used here in the Agile product context.
	
snippet togaf_architecture-project-management_2.3_Architecture_Project_Management_Concepts "2.3 Architecture Project Management Concepts"
	
	Every method or framework defines its own set of core concepts and
	definitions. Sometimes they overlap. Sometimes the meaning of
	overlapping concepts is similar, sometimes not – and they can be
	considered “false friends” for people who go from one subject matter
	world to another.
	
	The TOGAF Standard is more recent[5] than the most popular Project
	Management methods and uses some of the terms and concepts defined by
	them. In some cases, it gave these terms a new life and there are
	significant differences in the meaning of some key definitions used
	throughout the TOGAF Standard and Project Management methods. They are
	discussed in detail throughout this Guide.
	
	Table 3 presents the TOGAF and Project Management concepts that are key
	from the perspective of Architecture Project Management. It discusses
	definitions presented in the TOGAF Standard, PRINCE2, and PMBOK and
	presents how each term is used throughout this Guide.
	
	Table 3: Key Concepts of the TOGAF Standard, PRINCE2, and PMBOK for this
	Guide
	
	+-----------------------------------+-----------------------------------+
	| Concept                           | Discussion and Definitions        |
	+===================================+===================================+
	| Architecture Project              | As defined earlier in this Guide, |
	|                                   | an Architecture Project is an     |
	|                                   | endeavor undertaken to define and |
	|                                   | describe the Enterprise           |
	|                                   | Architecture to be implemented.   |
	|                                   | In TOGAF terms, it encompasses    |
	|                                   | all activities undertaken within  |
	|                                   | the ADM Phases A to F, and        |
	|                                   | Requirements Management for these |
	|                                   | phases. Practically, it can be a  |
	|                                   | stand-alone project or part of a  |
	|                                   | larger effort (e.g., a program).  |
	|                                   |                                   |
	|                                   | It has not been defined           |
	|                                   | explicitly in the TOGAF Standard; |
	|                                   | however, it is used in the        |
	|                                   | framework on a few occasions.     |
	|                                   |                                   |
	|                                   | There are no corresponding        |
	|                                   | definitions for this concept in   |
	|                                   | Project Management methods.       |
	+-----------------------------------+-----------------------------------+
	| Deliverables                      | Deliverables are unique and       |
	|                                   | verifiable products, results,     |
	|                                   | outputs that are required to be   |
	|                                   | prepared to complete the project  |
	|                                   | or particular phase of the        |
	|                                   | project. Deliverables may be part |
	|                                   | of the final product, any         |
	|                                   | auxiliary products, or Project    |
	|                                   | Management products. This term is |
	|                                   | similar in both the TOGAF         |
	|                                   | Standard (where it is more        |
	|                                   | specific, by defining more of the |
	|                                   | characteristics, acceptance       |
	|                                   | process, etc.) and Project        |
	|                                   | Management methods (more          |
	|                                   | generic), so the most appropriate |
	|                                   | is the definition from the TOGAF  |
	|                                   | Standard; however, the            |
	|                                   | definitions from Project          |
	|                                   | Management methods are also       |
	|                                   | applicable.                       |
	|                                   |                                   |
	|                                   | TOGAF Standard: “An architectural |
	|                                   | work product that is              |
	|                                   | contractually specified and in    |
	|                                   | turn formally reviewed, agreed,   |
	|                                   | and signed off by the             |
	|                                   | stakeholders.                     |
	|                                   |                                   |
	|                                   | Note: Deliverables represent the  |
	|                                   | output of projects and those      |
	|                                   | deliverables that are in          |
	|                                   | documentation form will typically |
	|                                   | be archived at completion of a    |
	|                                   | project, or transitioned into an  |
	|                                   | Architecture Repository as a      |
	|                                   | reference model, standard, or     |
	|                                   | snapshot of the Architecture      |
	|                                   | Landscape at a point in time.”    |
	|                                   |                                   |
	|                                   | PRINCE2: Synonymous with          |
	|                                   | “Output”, which is defined as: “A |
	|                                   | specialist product that is handed |
	|                                   | over to a user(s)”.               |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “Any    |
	|                                   | unique and verifiable product,    |
	|                                   | result, or capability to perform  |
	|                                   | a service that is required to be  |
	|                                   | produced to complete a process,   |
	|                                   | phase, or project.”               |
	+-----------------------------------+-----------------------------------+
	| Executive                         | The Executive is the owner of the |
	|                                   | business goal, responsible for    |
	|                                   | realization of expected benefits, |
	|                                   | and ultimate success of the       |
	|                                   | project. Its role is comparable   |
	|                                   | with the roles of Sponsor and     |
	|                                   | Executive (which can be           |
	|                                   | considered synonymous with        |
	|                                   | Architecture Sponsor from the     |
	|                                   | Skills Framework) in PMBOK and    |
	|                                   | the TOGAF Standard, respectively, |
	|                                   | though in the case of PMBOK the   |
	|                                   | involvement of the Sponsor versus |
	|                                   | Executive is more limited. For    |
	|                                   | the sake of clarity, in this      |
	|                                   | document we will use “Executive”  |
	|                                   | to define such enabling role, no  |
	|                                   | matter what method we refer to in |
	|                                   | a particular context.             |
	|                                   |                                   |
	|                                   | TOGAF Standard: No explicitly     |
	|                                   | stated definition, but has named  |
	|                                   | key concerns as “On-time,         |
	|                                   | on-budget delivery of a change    |
	|                                   | initiative that will realize      |
	|                                   | expected benefits for the         |
	|                                   | organization”.                    |
	|                                   |                                   |
	|                                   | PRINCE2: “The single individual   |
	|                                   | with overall responsibility for   |
	|                                   | ensuring that a project meets its |
	|                                   | objectives and delivers the       |
	|                                   | projected benefits. This          |
	|                                   | individual should ensure that the |
	|                                   | project maintains its business    |
	|                                   | focus, that it has clear          |
	|                                   | authority, and that the work,     |
	|                                   | including risks, is actively      |
	|                                   | managed.”                         |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition:         |
	|                                   | (Sponsor) “A person or group who  |
	|                                   | provides resources and support    |
	|                                   | for the project, program, or      |
	|                                   | portfolio and is accountable for  |
	|                                   | enabling success.”                |
	+-----------------------------------+-----------------------------------+
	| Phase                             | In this Guide, we use the term    |
	|                                   | “phase” for the TOGAF ADM phases. |
	|                                   | This is different from the        |
	|                                   | “project phase” term used         |
	|                                   | throughout PMBOK – we use the     |
	|                                   | term “stage” for project phases   |
	|                                   | (see Stage below).                |
	|                                   |                                   |
	|                                   | TOGAF Standard: Used extensively  |
	|                                   | to describe a collection of       |
	|                                   | logically-related work within the |
	|                                   | ADM, which is divided into        |
	|                                   | specified phases; e.g., Phase A – |
	|                                   | Architecture Vision.              |
	|                                   |                                   |
	|                                   | PRINCE2: No special meaning.      |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “A      |
	|                                   | project may be divided into any   |
	|                                   | number of phases. A project phase |
	|                                   | is a collection of                |
	|                                   | logically-related project         |
	|                                   | activities that culminates in the |
	|                                   | completion of one or more         |
	|                                   | deliverables.”                    |
	+-----------------------------------+-----------------------------------+
	| Project Manager                   | In this Guide, we use the term    |
	|                                   | “Project Manager” to describe a   |
	|                                   | person responsible for ensuring   |
	|                                   | that the project (in this case,   |
	|                                   | Architecture Project) delivers    |
	|                                   | the required product that         |
	|                                   | satisfies the stakeholders’       |
	|                                   | needs.                            |
	|                                   |                                   |
	|                                   | This constitutes the common part  |
	|                                   | of the definitions from both      |
	|                                   | Project Management methods. The   |
	|                                   | TOGAF Standard does not           |
	|                                   | explicitly define Project         |
	|                                   | Manager, so use of the term based |
	|                                   | on the Project Management methods |
	|                                   | was necessary.                    |
	|                                   |                                   |
	|                                   | Please note that the role of      |
	|                                   | Project Manager can be appointed  |
	|                                   | to an Enterprise Architect or to  |
	|                                   | a Project Management              |
	|                                   | professional; refer to the        |
	|                                   | Appoint the Project Manager       |
	|                                   | (Section 3.1.2) for details.      |
	|                                   |                                   |
	|                                   | TOGAF Standard: No special        |
	|                                   | meaning.                          |
	|                                   |                                   |
	|                                   | PRINCE2: “The person given the    |
	|                                   | authority and responsibility to   |
	|                                   | manage the project on a           |
	|                                   | day-to-day basis to deliver the   |
	|                                   | required products within the      |
	|                                   | constraints agreed with the       |
	|                                   | Project Board.”                   |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “The    |
	|                                   | person assigned by the performing |
	|                                   | organization to lead the team     |
	|                                   | that is responsible for achieving |
	|                                   | the project objectives.”          |
	+-----------------------------------+-----------------------------------+
	| Risk                              | Project risk management is an     |
	|                                   | important aspect of Project       |
	|                                   | Management. According to the      |
	|                                   | PRINCE2 and PMBOK, risk           |
	|                                   | management is one of the key      |
	|                                   | knowledge areas in which a        |
	|                                   | Project Manager must be           |
	|                                   | competent.                        |
	|                                   |                                   |
	|                                   | Project risk is defined by        |
	|                                   | PRINCE2 as “a set of events that, |
	|                                   | should they occur, will have an   |
	|                                   | effect on achieving the project   |
	|                                   | objectives”,^([6]) and by PMBOK   |
	|                                   | as “an uncertain event or         |
	|                                   | condition that, if it occurs, has |
	|                                   | a positive or negative effect on  |
	|                                   | a project’s objectives”.^([7])    |
	|                                   |                                   |
	|                                   | It is important to note that risk |
	|                                   | impact on a project can be either |
	|                                   | negative (and actions taken       |
	|                                   | should be focused on minimizing   |
	|                                   | the effect or probability of      |
	|                                   | occurrence) or positive, when we  |
	|                                   | would like to increase the impact |
	|                                   | or probability of occurrence of   |
	|                                   | such an event.                    |
	|                                   |                                   |
	|                                   | Risk and compliance are an        |
	|                                   | inherent part of any business     |
	|                                   | activity or transformation, thus  |
	|                                   | the TOGAF Standard requires       |
	|                                   | proper consideration throughout   |
	|                                   | the ADM, as defined in the        |
	|                                   | Architecture Capability           |
	|                                   | Framework.                        |
	|                                   |                                   |
	|                                   | The key difference is that the    |
	|                                   | TOGAF Standard understands risk   |
	|                                   | as a potential threat of the      |
	|                                   | transformation to the technical   |
	|                                   | environment and compliance, while |
	|                                   | PRINCE2 and PMBOK are also        |
	|                                   | considering risk as an event that |
	|                                   | can affect the project itself     |
	|                                   | (timeline, budget, quality,       |
	|                                   | etc.).                            |
	+-----------------------------------+-----------------------------------+
	| Scope                             | In this Guide, we use the term    |
	|                                   | “scope: as defined in the Project |
	|                                   | Management methods. This is a     |
	|                                   | broader meaning than described in |
	|                                   | the Define Scope step of the      |
	|                                   | TOGAF ADM Phase A, and it means   |
	|                                   | the scope of work that is to be   |
	|                                   | performed in order to achieve     |
	|                                   | projects goals. In contrast, the  |
	|                                   | TOGAF Standard restricts use of   |
	|                                   | the term scope to the scope of    |
	|                                   | the architecture to be defined.   |
	|                                   |                                   |
	|                                   | TOGAF Standard: The Define Scope  |
	|                                   | step of the ADM Phase A restricts |
	|                                   | the scope definition to the scope |
	|                                   | of architecture: “what is inside  |
	|                                   | and what is outside the scope of  |
	|                                   | the Baseline Architecture and     |
	|                                   | Target Architecture efforts”.     |
	|                                   |                                   |
	|                                   | PRINCE2: “The scope of a plan is  |
	|                                   | the sum total of its products and |
	|                                   | the extent of their requirements. |
	|                                   | It is described by the product    |
	|                                   | breakdown structure for the plan  |
	|                                   | and associated product            |
	|                                   | descriptions.”                    |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “The    |
	|                                   | sum of the products, services,    |
	|                                   | and results to be provided as a   |
	|                                   | project.”                         |
	+-----------------------------------+-----------------------------------+
	| Stage                             | In this Guide, we use the term    |
	|                                   | “stage” for stages (as defined in |
	|                                   | PRINCE2) or project phases (as    |
	|                                   | defined in PMBOK). We do not use  |
	|                                   | the term “project phase” as we    |
	|                                   | reserve it for the TOGAF ADM      |
	|                                   | phases (see Phase above).         |
	|                                   |                                   |
	|                                   | TOGAF Standard: No defined        |
	|                                   | meaning.                          |
	|                                   |                                   |
	|                                   | PRINCE2: “A section of a          |
	|                                   | project.”                         |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: No      |
	|                                   | defined meaning.                  |
	+-----------------------------------+-----------------------------------+
	| Stakeholder                       | The meaning of stakeholder in the |
	|                                   | TOGAF Standard and Project        |
	|                                   | Management methods is generally   |
	|                                   | the same. The TOGAF Standard, as  |
	|                                   | an architecture lifecycle         |
	|                                   | standard, highlights that the     |
	|                                   | stakeholder focuses on the        |
	|                                   | outcomes of the architecture.     |
	|                                   |                                   |
	|                                   | TOGAF Standard: “An individual,   |
	|                                   | team, organization, or class      |
	|                                   | thereof, having an interest in a  |
	|                                   | system.”^([8])                    |
	|                                   |                                   |
	|                                   | PRINCE2: “Any individual, group,  |
	|                                   | or organization that can affect,  |
	|                                   | be affected by, or perceive       |
	|                                   | itself to be affected by, an      |
	|                                   | initiative (program, project,     |
	|                                   | activity, risk).”^([9])           |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “An     |
	|                                   | individual, group, or             |
	|                                   | organization who may affect, be   |
	|                                   | affected by, or perceive itself   |
	|                                   | to be affected by a decision,     |
	|                                   | activity, or outcome of a         |
	|                                   | project.”^([10])                  |
	+-----------------------------------+-----------------------------------+
	| Work Package                      | The TOGAF Standard uses the term  |
	|                                   | work package to describe change   |
	|                                   | initiatives that will be          |
	|                                   | implemented in the enterprise.    |
	|                                   | These initiatives are typically   |
	|                                   | large groups of tasks (i.e., they |
	|                                   | may encompass a whole program).   |
	|                                   |                                   |
	|                                   | Project Management methods use    |
	|                                   | the term work package to describe |
	|                                   | a low-level part of work to be    |
	|                                   | performed – the most granular     |
	|                                   | part of work that needs the       |
	|                                   | Project Manager’s authorization   |
	|                                   | before it is started by the team. |
	|                                   |                                   |
	|                                   | The two meanings are vastly       |
	|                                   | different. In this Guide, we use  |
	|                                   | the term “Project Work Package”   |
	|                                   | for project tasks (in line with   |
	|                                   | the PRINCE2 use of the term and   |
	|                                   | the PMBOK definition below) and   |
	|                                   | “work package” for change         |
	|                                   | initiatives identified by         |
	|                                   | Architecture Projects (in line    |
	|                                   | with the TOGAF definition below). |
	|                                   |                                   |
	|                                   | TOGAF Standard: “A set of actions |
	|                                   | identified to achieve one or more |
	|                                   | objectives for the business. A    |
	|                                   | work package can be a part of a   |
	|                                   | project, a complete project, or a |
	|                                   | program.”                         |
	|                                   |                                   |
	|                                   | PRINCE2: “An input or output,     |
	|                                   | whether tangible or intangible,   |
	|                                   | that can be described in advance, |
	|                                   | created, and tested.”             |
	|                                   |                                   |
	|                                   | PMBOK Guide, 5th Edition: “The    |
	|                                   | work defined at the lowest level  |
	|                                   | of the work breakdown structure   |
	|                                   | for which cost and duration can   |
	|                                   | be estimated and managed.”        |
	+-----------------------------------+-----------------------------------+
	
	(Source: Derived from the TOGAF Standard, PRINCE2, PMBOK Guide, 5th
	Edition)
	
	In this Guide we use concepts from both Enterprise Architecture (TOGAF
	Standard) and Project Management (PRINCE2, PMBOK) disciplines. As this
	Guide is addressed primarily to architects, in case of conflicts, we
	usually stick to the TOGAF definitions. If you have a different
	background, please keep Table 2 in mind.
	
snippet togaf_reference-models_digital-business-reference-model_2.3_Business_Architecture "2.3 Business Architecture"
	
	A representation of holistic, multi-dimensional business views of
	capabilities, end-to-end value delivery, information, and organizational
	structure; and the relationships among these business views and
	strategies, products, policies, initiatives, and stakeholders.
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.3_Classes_of_Architecture_Engagement "2.3 Classes of Architecture Engagement"
	
	An architecture function or services organization may be called upon to
	assist an enterprise in a number of different contexts, as the
	architectures developed can range from summary to detail, broad to
	narrow coverage, and current state to future state. In these contexts
	the concept of iteration should be used in developing the architecture.
	
	Typically, there are three areas of engagement for architects:
	
	-   Identification of Required Change: outside the context of any change
	    initiative, architecture can be used as a technique to provide
	    visibility of the IT capability in order to support strategic
	    decision-making and alignment of execution
	
	-   Definition of Change: where a need to change has been identified,
	    architecture can be used as a technique to define the nature and
	    extent of change in a structured fashion
	
	    Within large-scale change initiatives, architectures can be
	    developed to provide detailed Architecture Definition for change
	    initiatives that are bounded by the scope of a program or portfolio.
	
	-   Implementation of Change: architecture at all levels of the
	    enterprise can be used as a technique to provide design governance
	    to change initiatives by providing big-picture visibility, supplying
	    structural constraints, and defining criteria on which to evaluate
	    technical decisions
	
	Figure 2-2 and the following table show the classes of Enterprise
	Architecture engagement.
	
	[]
	
	Figure 2-2: Classes of Enterprise Architecture Engagement
	
	Each of these architecture engagement types is described in the table
	below.
	
	+-----------------------+-----------------------+-----------------------+
	| Area of Engagement    | Architecture          | Description           |
	|                       | Engagement            |                       |
	+:======================+:======================+:======================+
	| Identification of     | Supporting Business   | As the business       |
	| Required Change       | Strategy              | strategies,           |
	|                       |                       | objectives, goals,    |
	|                       |                       | and drivers change,   |
	|                       |                       | it is necessary for   |
	|                       |                       | the enterprise to     |
	|                       |                       | change in order to    |
	|                       |                       | maintain alignment.   |
	|                       |                       |                       |
	|                       |                       | The creation of new   |
	|                       |                       | business strategies   |
	|                       |                       | can be supported by   |
	|                       |                       | Enterprise            |
	|                       |                       | Architecture by:      |
	|                       |                       |                       |
	|                       |                       | -   Providing         |
	|                       |                       |     visibility of     |
	|                       |                       |     change            |
	|                       |                       |     opportunities     |
	|                       |                       | -   Providing         |
	|                       |                       |     elaboration on    |
	|                       |                       |     the practical     |
	|                       |                       |     impacts of a      |
	|                       |                       |     particular        |
	|                       |                       |     strategic choice  |
	|                       |                       | -   Providing tests   |
	|                       |                       |     on the            |
	|                       |                       |     feasibility or    |
	|                       |                       |     viability of a    |
	|                       |                       |     particular        |
	|                       |                       |     strategic         |
	|                       |                       |     direction         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Architectural         | It is common practice |
	|                       | Portfolio Management  | across large          |
	|                       | of the Landscape      | organizations for a   |
	|                       |                       | service management    |
	|                       |                       | organization to       |
	|                       |                       | provide operational   |
	|                       |                       | reporting and         |
	|                       |                       | management of the IT  |
	|                       |                       | portfolio.            |
	|                       |                       |                       |
	|                       |                       | Enterprise            |
	|                       |                       | Architecture can add  |
	|                       |                       | a further dimension   |
	|                       |                       | to service management |
	|                       |                       | reporting, by         |
	|                       |                       | supporting a linkage  |
	|                       |                       | between operational   |
	|                       |                       | performance and the   |
	|                       |                       | strategic need for    |
	|                       |                       | IT.                   |
	|                       |                       |                       |
	|                       |                       | Using the             |
	|                       |                       | traceability between  |
	|                       |                       | IT and business       |
	|                       |                       | inherent in           |
	|                       |                       | Enterprise            |
	|                       |                       | Architecture, it is   |
	|                       |                       | possible to evaluate  |
	|                       |                       | the IT portfolio      |
	|                       |                       | against operational   |
	|                       |                       | performance data and  |
	|                       |                       | business needs (e.g., |
	|                       |                       | cost, functionality,  |
	|                       |                       | availability,         |
	|                       |                       | responsiveness) to    |
	|                       |                       | determine areas where |
	|                       |                       | misalignment is       |
	|                       |                       | occurring and change  |
	|                       |                       | needs to take place.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Architectural         | It is common practice |
	|                       | Portfolio Management  | across large          |
	|                       | of Projects           | organizations for a   |
	|                       |                       | program management    |
	|                       |                       | organization to       |
	|                       |                       | provide operational   |
	|                       |                       | reporting and         |
	|                       |                       | management of the     |
	|                       |                       | change portfolio.     |
	|                       |                       |                       |
	|                       |                       | Enterprise            |
	|                       |                       | Architecture can add  |
	|                       |                       | a further dimension   |
	|                       |                       | to project portfolio  |
	|                       |                       | management reporting, |
	|                       |                       | by supporting a       |
	|                       |                       | linkage between       |
	|                       |                       | project scope,        |
	|                       |                       | architectural impact, |
	|                       |                       | and business value.   |
	|                       |                       |                       |
	|                       |                       | Architectural factors |
	|                       |                       | can be added to other |
	|                       |                       | quantitative project  |
	|                       |                       | factors to support    |
	|                       |                       | strategic             |
	|                       |                       | decision-making on    |
	|                       |                       | project priority and  |
	|                       |                       | funding levels.       |
	+-----------------------+-----------------------+-----------------------+
	| Definition of Change  | Architectural         | Foundational change   |
	|                       | Definition of         | initiatives are       |
	|                       | Foundational Change   | change efforts that   |
	|                       | Initiatives           | have a known          |
	|                       |                       | objective, but are    |
	|                       |                       | not strictly scoped   |
	|                       |                       | or bounded by a       |
	|                       |                       | shared vision or      |
	|                       |                       | requirements.         |
	|                       |                       |                       |
	|                       |                       | In foundational       |
	|                       |                       | change initiatives,   |
	|                       |                       | the initial priority  |
	|                       |                       | is to understand the  |
	|                       |                       | nature of the problem |
	|                       |                       | and to bring          |
	|                       |                       | structure to the      |
	|                       |                       | definition of the     |
	|                       |                       | problem.              |
	|                       |                       |                       |
	|                       |                       | Once the problem is   |
	|                       |                       | more effectively      |
	|                       |                       | understood, it is     |
	|                       |                       | possible to define    |
	|                       |                       | appropriate solutions |
	|                       |                       | and to align          |
	|                       |                       | stakeholders around a |
	|                       |                       | common vision and     |
	|                       |                       | purpose.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Architectural         | Bounded change        |
	|                       | Definition of Bounded | initiatives are       |
	|                       | Change Initiatives    | change efforts that   |
	|                       |                       | typically arise as    |
	|                       |                       | the outcome of a      |
	|                       |                       | prior architectural   |
	|                       |                       | strategy, evaluation, |
	|                       |                       | or vision.            |
	|                       |                       |                       |
	|                       |                       | In bounded change     |
	|                       |                       | initiatives, the      |
	|                       |                       | desired outcome is    |
	|                       |                       | already understood    |
	|                       |                       | and agreed upon. The  |
	|                       |                       | focus of              |
	|                       |                       | architectural effort  |
	|                       |                       | in this class of      |
	|                       |                       | engagement is to      |
	|                       |                       | effectively elaborate |
	|                       |                       | a baseline solution   |
	|                       |                       | that addresses the    |
	|                       |                       | identified            |
	|                       |                       | requirements, issues, |
	|                       |                       | drivers, and          |
	|                       |                       | constraints.          |
	+-----------------------+-----------------------+-----------------------+
	| Implementation of     | Architectural         | Once an architectural |
	| Change                | Governance of Change  | solution model has    |
	|                       | Implementation        | been defined, it      |
	|                       |                       | provides a basis for  |
	|                       |                       | design and            |
	|                       |                       | implementation.       |
	|                       |                       |                       |
	|                       |                       | In order to ensure    |
	|                       |                       | that the objectives   |
	|                       |                       | and value of the      |
	|                       |                       | defined architecture  |
	|                       |                       | are appropriately     |
	|                       |                       | realized, it is       |
	|                       |                       | necessary for         |
	|                       |                       | continuing            |
	|                       |                       | Architecture          |
	|                       |                       | Governance of the     |
	|                       |                       | implementation        |
	|                       |                       | process to support    |
	|                       |                       | design review,        |
	|                       |                       | architecture          |
	|                       |                       | refinement, and issue |
	|                       |                       | escalation.           |
	+-----------------------+-----------------------+-----------------------+
	
	Different classes of architecture engagement at different levels of the
	enterprise will require focus in specific areas, as shown below.
	
	+-----------------------+-----------------------+-----------------------+
	| Engagement Type       | Focus Iteration       | Scope Focus           |
	|                       | Cycles                |                       |
	+:======================+:======================+:======================+
	| Supporting Business   | Architecture          | Broad, shallow        |
	| Strategy              | Capability            | consideration given   |
	|                       |                       | to the Architecture   |
	|                       | Architecture          | Landscape in order to |
	|                       | Development           | address a specific    |
	|                       | (Baseline First)      | strategic question    |
	|                       |                       | and define terms for  |
	|                       |                       | more detailed         |
	|                       |                       | architecture efforts  |
	|                       |                       | to address strategy   |
	|                       |                       | realization.          |
	+-----------------------+-----------------------+-----------------------+
	| Architectural         | Architecture          | Focus on physical     |
	| Portfolio Management  | Capability            | assessment of         |
	| of the Landscape      |                       | baseline applications |
	|                       | Architecture          | and technology        |
	|                       | Development           | infrastructure to     |
	|                       | (Baseline First)      | identify improvement  |
	|                       |                       | opportunities,        |
	|                       |                       | typically within the  |
	|                       |                       | constraints of        |
	|                       |                       | maintaining business  |
	|                       |                       | as usual.             |
	+-----------------------+-----------------------+-----------------------+
	| Architectural         | Transition Planning   | Focus on projects,    |
	| Portfolio Management  |                       | project dependencies, |
	| of Projects           | Architecture          | and landscape impacts |
	|                       | Governance            | to align project      |
	|                       |                       | sequencing in a way   |
	|                       |                       | that is               |
	|                       |                       | architecturally       |
	|                       |                       | optimized.            |
	+-----------------------+-----------------------+-----------------------+
	| Architectural         | Architecture          | Focus on elaborating  |
	| Definition of         | Capability            | a vision through      |
	| Foundational Change   |                       | definition of         |
	| Initiatives           | Architecture          | baseline and          |
	|                       | Development           | identifying what      |
	|                       | (Baseline First)      | needs to change to    |
	|                       |                       | transition the        |
	|                       | Transition Planning   | baseline to the       |
	|                       |                       | target.               |
	+-----------------------+-----------------------+-----------------------+
	| Architectural         | Architecture          | Focus on elaborating  |
	| Definition of Bounded | Development           | the target to meet a  |
	| Change Initiatives    | (Target First)        | previously defined    |
	|                       |                       | and agreed vision,    |
	|                       | Transition Planning   | scope, or set of      |
	|                       |                       | constraints. Use the  |
	|                       |                       | target as a basis for |
	|                       |                       | analysis to avoid     |
	|                       |                       | perpetuation of       |
	|                       |                       | baseline, sub-optimal |
	|                       |                       | architectures.        |
	+-----------------------+-----------------------+-----------------------+
	| Architectural         | Architecture          | Use the Architecture  |
	| Governance of Change  | Governance            | Vision, constraints,  |
	| Implementation        |                       | principles,           |
	|                       |                       | requirements, Target  |
	|                       |                       | Architecture          |
	|                       |                       | definition, and       |
	|                       |                       | transition roadmap to |
	|                       |                       | ensure that projects  |
	|                       |                       | realize their         |
	|                       |                       | intended benefit, are |
	|                       |                       | aligned with each     |
	|                       |                       | other, and are        |
	|                       |                       | aligned with wider    |
	|                       |                       | business need.        |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.3_Components_of_Architecture_Principles "2.3 Components of Architecture Principles"
	
	It is useful to have a standard way of defining principles. In addition
	to a definition statement, each principle should have associated
	rationale and implications statements, both to promote understanding and
	acceptance of the principles themselves, and to support the use of the
	principles in explaining and justifying why specific decisions are made.
	
	A recommended template is given in Table 2-1 .
	
	
	  Name           Should both represent the essence of the rule as well as be easy to remember. Specific technology platforms should not be mentioned in the name or statement of a principle. Avoid ambiguous words in the Name and in the Statement such as: "support", "open", "consider", and for lack of good measure the word "avoid", itself, be careful with "manage(ment)", and look for unnecessary adjectives and adverbs (fluff).
	  Statement      Should succinctly and unambiguously communicate the fundamental rule. For the most part, the principles statements for managing information are similar from one organization to the next. It is vital that the principles statement is unambiguous.
	  Rationale      Should highlight the business benefits of adhering to the principle, using business terminology. Point to the similarity of information and technology principles to the principles governing business operations. Also describe the relationship to other principles, and the intentions regarding a balanced interpretation. Describe situations where one principle would be given precedence or carry more weight than another for making a decision.
	  Implications   Should highlight the requirements, both for the business and IT, for carrying out the principle — in terms of resources, costs, and activities/tasks. Although it may often be apparent that current systems, standards, or practices would be incongruent with the principle upon adoption, context will drive the degree of scope. The impact to the business and consequences of adopting a principle should be clearly stated. The reader should readily discern the answer to: "How does this affect me?". It is important not to oversimplify, trivialize, or judge the merit of the impact. Some of the implications will be identified as potential impacts only, and may be speculative rather than fully analyzed.
	
	
	Table 2-1: Recommended Format for Defining Principles
	
	An example set of Architecture Principles following this template is
	given in 2.6 Example Set of Architecture Principles .
	
snippet togaf_digital-technology-adoption_2.3_Current_Landscape "2.3 Current Landscape"
	
	A staggering 70% of transformation programs fail [7] and, similarly, 70%
	of Digital Transformation programs fail [8]. Although most companies and
	executives know how crucial it is to evolve with technology and create
	digital processes and solutions, putting it into action is a different
	story. Many companies have embarked on Digital Transformations only to
	hit roadblocks and give up. Understanding what went wrong with the
	following three examples provides critical insights and guidelines of
	things to avoid, to point future Digital Transformations in the right
	direction:
	
	-   A global multi-national created a new digital business unit but was
	    focused on size instead of quality; too large an organization to
	    transform all at once especially without a true business vision of
	    what it was trying to achieve
	
	-   A major car manufacturer started a new digital service that was
	    separate from the rest of the company instead of integrating digital
	    solutions
	
	-   A multi-national consumer goods corporation failed to consider the
	    competition or impending economic crash; it failed to look at what
	    was going on in the industry – to see if it was already ahead of
	    competitors – and what was going on with the economy
	
	    A Digital Transformation for transformation’s sake only is not
	    effective; it must, rather, consider all outside factors and be
	    tightly tied to strategy.
	
	Such missteps can spell doom for Digital Transformation, but all three
	companies managed to try again with better success.
	
snippet togaf_togaf-leaders-guide_2_Definitions_2.3_Enterprise_Architecture_EA_Capability "2.3 Enterprise Architecture (EA) Capability"
	
	The enterprise’s ability to develop, maintain, and evolve an enterprise
	Architecture as well as its ability to use the architecture to govern
	change activity in the enterprise.
	
snippet togaf_business-architecture_value-streams_2.3_Mapping_Capabilities_to_Value_Stream_Stages "2.3 Mapping Capabilities to Value Stream Stages"
	
	Having defined the end-to-end value stream, the next step is to identify
	which business capabilities are required to enable each value stream
	stage. This is done by reviewing the business capability map, and
	linking (i.e., cross-mapping) the relevant business capabilities to each
	value stream stage (see the value stream to business capabilities
	mapping example in Section 4.2).
	
	The purpose of this activity is to identify which business capabilities
	(out of the total set of capabilities) are critical to delivering
	stakeholder value, and therefore which ones need to be performed to a
	sufficient standard of quality to meet stakeholder expectations. It also
	helps to identify those business capabilities that do not contribute
	toward any of the core value streams, and which may be eliminated from
	the business.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.3_National_Cybersecurity_Frameworks "2.3 National Cybersecurity Frameworks"
	
	Internationally there are many country-specific cybersecurity standards.
	A leading example is the NIST Cybersecurity Framework, introduced in
	2014. This framework aims to help organizations in critical
	infrastructure sectors to reduce risk, and protect their critical
	infrastructure. The NIST Cybersecurity Framework groups security
	functions into these five areas: Identify, Protect, Detect, Respond, and
	Recover. Many of the security and risk concepts introduced in this Guide
	and in future work (including the Security Services Catalog) will be
	highly useful to Security Architects in critical infrastructure areas
	seeking to integrate security and risk into their TOGAF Standard
	practices, and into their Enterprise Architectures.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.3_Phase_B_Business_Architecture "2.3 Phase B: Business Architecture"
	
	Key areas of focus during this phase of establishing or refining the
	Business Architecture of the architecture practice are:
	
	-   An Architecture Ontology defining the architectural terms and
	    definitions that will be used in the organization in order to
	    establish a common understanding of these terms
	
	-   The Architecture Process where the ADM would form the base of the
	    process and need to be customized to meet the organization's
	    requirements and architecture practice vision
	
	    Refer to the TOGAF Standard — Architecture Development Method for
	    guidance on developing this process. The required Architecture
	    Governance processes should be included in the overall architecture
	    process.
	
	-   The Architecture Viewpoints and Views that list all the viewpoints
	    and views that should be addressed by the architecture practice
	
	    The identified architecture practice stakeholders would guide the
	    development of this definition. One of the viewpoints to be included
	    is the Architecture Governance viewpoint; refer to the TOGAF
	    Standard — Architecture Content for guidance on this output.
	
	-   The Architecture Framework describing the various architecture
	    deliverables that will be generated by the architecture practice,
	    the inter-relationships and dependencies between the architecture
	    deliverables, as well as the rules and guidelines governing the
	    design of these deliverables
	
	    The defined architecture viewpoints and views should be used to
	    guide the definition of the architecture framework. The TOGAF
	    Standard — Architecture Development Method and the TOGAF Standard —
	    Architecture Content are useful references that will assist in
	    describing the architecture framework.
	
	-   The Architecture Accountability Matrix defining the roles in the
	    architecture practice and allocating accountability of the roles to
	    architecture deliverables and processes
	
	    This matrix would include the required Architecture Governance
	    structures and roles. The TOGAF Standard — Architecture Development
	    Method as well as 4. Architecture Board , 3. Architecture Governance
	    , and the TOGAF® Series Guide: Architecture Skills Framework would
	    provide guidance on this output.
	
	-   The Architecture Performance Metrics identifying and describing the
	    metrics that will be used to monitor the performance of the
	    architecture practice against its stated architecture practice
	    vision and objectives
	
	-   The Architecture Governance Framework which is a specific view of
	    the defined architecture process and Architecture Accountability
	    Matrix
	
snippet togaf_adm-practitioners_2_Definitions_2.3_Practitioner "2.3 Practitioner"
	
	The person tasked to develop, maintain, and use an Enterprise
	Architecture.
	
	Note: This term reflects the role, rather than one of the myriad job
	titles that may apply.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2.3_Proactively_Managing_Technical_Debt "2.3. Proactively Managing Technical Debt"
	
	In principle, technical debt is avoidable, but in practice it is
	incurred. However, the amount of debt that an organization takes on can
	be proactively managed. The TOGAF Standard has a number of features
	that, when applied at the enterprise level, can help in the proactive
	management of the infrastructure. In Digital Transformation Strategy to
	Implementation using The Open Group Standards (see Referenced
	Documents), debt is described as:
	
	“The gap between desired state and current state is a liability – a debt
	incurred by the enterprise. When trade-off decisions result in adding to
	the backlog of work, the architect and the enterprise are wilfully
	increasing the chasm between current and target state – an increase in
	debt. Using assessments from maturity and service design, the
	practitioner constrains and guides the enterprise from tripping up
	during trade-off decisions. It also provides insights and compels the
	enterprise to involve all skill verticals – Human Resources, Finance,
	Product and Service lines, Strategy, etc.”
	
	When creating a strategy to proactively manage technical debt by using
	the TOGAF Standard, consider the following:
	
	-   Standards include internally agreed upon ways of implementing
	    systems and some of those can help to proactively manage technical
	    debt
	
	    Some standards are driven by government regulations and are subject
	    to audit, such as General Data Protection Regulation (GDPR),
	    SWIFT^(®), BASEL II, and BASEL III. Other standards are adopted as
	    best practices. Regardless of their origin, once adopted as a
	    standard they can cut across product domains and often the entire
	    ecosystem. Identifying standards and managing the lifecycle of the
	    standards removes some of the guess work for Scrum teams. Beyond
	    identifying the standards used, communicating them, and making them
	    visible, the Enterprise Architect stands ready to assist Scrum teams
	    in using the standards. In a rigid culture, a formalized
	    Architecture Board examines the use of standards in architectures
	    and implemented systems. However, in Agile development environments,
	    the architecture board acts more like guardrails to ensure the
	    systems avoid implementation decisions that are difficult and
	    expensive to reverse, or that can lead to integration and
	    operational excellence issues. Components used in solutions that are
	    not internally developed will have standards and a standards
	    lifecycle which will impact the maintainability of digital products.
	
	-   An Architecture Repository and Enterprise Continuum are assets to
	    the digital enterprise that Agile delivery teams can use to make
	    more informed design choices and to use proven designs from their
	    own company
	
	    While Agile processes do not focus on documentation, a large part of
	    the TOGAF Standard does focus on documenting and analyzing the
	    environment. Product architectures can make use of components that
	    are not developed, managed, or controlled by the environment, and
	    the Enterprise Continuum provides a way to classify and organize
	    components that enhance the sustainability of a digital product.
	
	-   Digital Practitioners concern themselves with capabilities to
	    support the digital enterprise as described in The Seven Levers of
	    Digital Transformation (see Referenced Documents), not just the
	    digital products and services, and IT and delivery layers
	
	    TOGAF Standard techniques can be applied to product architectures,
	    such as stakeholder management, business transformation readiness
	    assessment, risk management, and several other competency areas
	    described in the DPBoK Standard.
	
snippet togaf_adm_2_Preliminary_Phase_2.3_Steps "2.3 Steps"
	
	The TOGAF ADM is a generic method, intended to be used by a wide variety
	of different enterprises, and in conjunction with a wide variety of
	other architecture frameworks, if required. The Preliminary Phase
	therefore involves doing any necessary work to initiate and adapt the
	ADM to define an organization-specific framework. The issues involved
	with adapting the ADM to a specific organizational context are discussed
	in detail in 1.3 Adapting the ADM .
	
	The level of detail addressed in the Preliminary Phase will depend on
	the scope and goals of the overall architecture effort.
	
	The order of the steps in the Preliminary Phase as well as the time at
	which they are formally started and completed should be adapted to the
	situation at hand in accordance with the established Architecture
	Governance.
	
	The steps within the Preliminary Phase are as follows:
	
	-   Scope the enterprise organizations impacted (see 2.3.1 Scope the
	    Enterprise Organizations Impacted )
	-   Confirm governance and support frameworks (see 2.3.2 Confirm
	    Governance and Support Frameworks )
	-   Define and establish Enterprise Architecture team and organization
	    (see 2.3.3 Define and Establish Enterprise Architecture Team and
	    Organization)
	-   Identify and establish Architecture Principles (see 2.3.4 Identify
	    and Establish Architecture Principles)
	-   Tailor the TOGAF framework and, if any, other selected architecture
	    frameworks (see 2.3.5 Tailor the TOGAF Framework and, if any, Other
	    Selected Architecture Framework(s))
	-   Develop a strategy and implementation plan for tools and techniques
	    (see 2.3.6 Develop a Strategy and Implementation Plan for Tools and
	    Techniques)
	
snippet togaf_introduction_2_The_TOGAF_Documentation_Set_2.3_The_TOGAF_Library "2.3 The TOGAF Library"
	
	Accompanying the TOGAF Standard is a broad portfolio of guidance
	material, known as the TOGAF Library,¹ to support the practical
	application of the TOGAF approach. The TOGAF Library is a reference
	library containing guidelines, templates, patterns, and other forms of
	reference material to accelerate the creation of new architectures for
	the enterprise.
	
	The TOGAF Library is maintained under the governance of The Open Group
	Architecture Forum.
	
	The TOGAF Library supports one of the classes of information in the
	TOGAF Enterprise Architecture Repository, the Reference Library.
	
	The Reference Library provides guidelines, templates, patterns, and
	other forms of reference material that can be leveraged in order to
	accelerate the creation of new architectures for the enterprise.
	
	The TOGAF Library is a Reference Library of potentially useful
	resources. The TOGAF Library follows a categorization model based on
	capabilities and features that can be delivered into the market through
	different sets of documents and resources, as depicted in Figure 2-4 .
	
	[]
	
	Figure 2-4: The TOGAF Library Continuum
	
	------------------------------------------------------------------------
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.3_TOGAF_Enterprise_Metamodel_in_Detail "2.4 TOGAF Enterprise Metamodel Entities , that allow architectural"
	concepts to be captured, stored, filtered, queried, and represented in a
	way that supports consistency, completeness, and traceability.
	
	The categorization mechanism of the Content Framework may be used to
	structure a representation of the TOGAF Enterprise Metamodel, as shown
	in Figure 2-1 .
	
	[]
	
	Figure 2-1: Using the Content Framework to Structure the TOGAF
	Enterprise Metamodel
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.4.1_Qualities_of_Principles "2.4.1 Qualities of Principles"
	
	Merely having a written statement that is called a principle does not
	mean that the principle is good, even if everyone agrees with it.
	
	A good set of principles will be founded in the beliefs and values of
	the organization and expressed in language that the business understands
	and uses. Principles should be few in number, future-oriented, and
	endorsed and championed by senior management. They provide a firm
	foundation for making architecture and planning decisions, framing
	policies, procedures, and standards, and supporting resolution of
	contradictory situations. A poor set of principles will quickly become
	disused, and the resultant architectures, policies, and standards will
	appear arbitrary or self-serving, and thus lack credibility.
	Essentially, principles drive behavior.
	
	There are five criteria that distinguish a good set of principles:
	
	-   Understandable: the underlying tenets can be quickly grasped and
	    understood by individuals throughout the organization
	
	    The intention of the principle is clear and unambiguous, so that
	    violations, whether intentional or not, are minimized.
	
	-   Robust: enable good quality decisions about architectures and plans
	    to be made, and enforceable policies and standards to be created
	
	    Each principle should be sufficiently definitive and precise to
	    support consistent decision-making in complex, potentially
	    controversial situations.
	
	-   Complete: every potentially important principle governing the
	    management of information and technology for the organization is
	    defined — the principles cover every situation perceived
	
	-   Consistent: strict adherence to one principle may require a loose
	    interpretation of another principle
	
	    The set of principles must be expressed in a way that allows a
	    balance of interpretations. Principles should not be contradictory
	    to the point where adhering to one principle would violate the
	    spirit of another. Every word in a principle statement should be
	    carefully chosen to allow consistent yet flexible interpretation.
	
	-   Stable: principles should be enduring, yet able to accommodate
	    changes
	
	    An amendment process should be established for adding, removing, or
	    altering principles after they are ratified initially.
	
snippet togaf_reference-models_digital-business-reference-model_2.40_Work_System "2.40      Work System"
	
	Human participants and/or machines perform processes and activities
	using software, hardware, and other resources to deliver products or
	experiences.
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.4_Approaches_to_Architecture_Development "2.4 Approaches to Architecture Development"
	
	Two approaches can be adopted within the ADM for the development of
	architectures:
	
	-   Baseline First: in this style, an assessment of the baseline
	    landscape is used to identify problem areas and improvement
	    opportunities
	
	    This process is most suitable when the baseline is complex, not
	    clearly understood, or agreed upon. This approach is common where
	    organizational units have had a high degree of autonomy.
	
	-   Target First: in this style, the target solution is elaborated in
	    detail and then mapped back to the baseline, in order to identify
	    change activity
	
	    This process is suitable when a target state is agreed at a high
	    level and where the enterprise wishes to effectively transition to
	    the target model.
	
	Typically, if the baseline is broadly understood a higher value will be
	obtained focusing on the target first then baseline to the extent
	necessary to identify changes.
	
	In practical terms, an architecture team will always give informal
	consideration to the baseline when analyzing the target (and vice
	versa). In situations where baseline and target are expected to be
	considered in parallel by stakeholders, it is recommended that the
	architecture team focuses priority on one state in order to maintain
	focus and consistency of execution.
	
snippet togaf_reference-models_digital-business-reference-model_2.4_Business_Capability "2.4 Business Capability"
	
	A particular ability that a business may possess or exchange to achieve
	a specific purpose.
	
snippet togaf_togaf-leaders-guide_2_Definitions_2.4_Capability "2.4 Capability"
	
	A management concept that facilitates planning improvements in the
	ability to do something that leads to enhanced outcomes. It enables the
	ability to measure resources employed and outcomes or goals achieved
	within a specified context.
	
	Note: Formal modeling often requires a crisp definition. Without the
	recurrent formal model definition debates we would not have defined the
	term and relied upon the simplest standard English definition as “the
	ability or potential for an indicated use” and “something that has the
	potential to be improved”.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.4_COBIT "2.4 COBIT^(®)"
	
	“COBIT 5 provides a comprehensive framework that assists enterprises in
	achieving their objectives for the governance and management of
	enterprise IT. Simply stated, it helps enterprises create optimal value
	from Information Technology (IT) by maintaining a balance between
	realizing benefits and optimizing risk levels and resource use. COBIT 5
	for Information Security builds on the COBIT 5 framework in that it
	focuses on information security and provides more detailed and more
	practical guidance for information security professionals and other
	interested parties at all levels of the enterprise.” [10]
	
	COBIT 5 for Information Security is regarded as a relevant framework for
	security governance. However, in this Guide the structure of ISO/IEC
	27001:2013 is used because that is a broader recognized definition of a
	security management system.
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.4_Developing_Architecture_Principles "2.4 Developing Architecture Principles"
	
	Architecture Principles are typically developed by the Enterprise
	Architects, in conjunction with the key stakeholders, and are approved
	by the Architecture Board.
	
	Architecture Principles will be informed by principles at the enterprise
	level, if they exist.
	
	Architecture Principles must be clearly traceable and clearly
	articulated to guide decision-making. They are chosen so as to ensure
	alignment of the architecture and implementation of the Target
	Architecture with business strategies and visions.
	
	Specifically, the development of Architecture Principles is typically
	influenced by the following:
	
	-   Enterprise mission and plans: the mission, plans, and organizational
	    infrastructure of the enterprise
	-   Enterprise strategic initiatives: the characteristics of the
	    enterprise — its strengths, weaknesses, opportunities, and threats —
	    and its current enterprise-wide initiatives (such as process
	    improvement and quality management)
	-   External constraints: market factors (time-to-market imperatives,
	    customer expectations, etc.); existing and potential legislation
	-   Current systems and technology: the set of information resources
	    deployed within the enterprise, including systems documentation,
	    equipment inventories, network configuration diagrams, policies, and
	    procedures
	-   Emerging industry trends: predictions about economic, political,
	    technical, and market factors that influence the enterprise
	    environment
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2.4_Mature_Digital_Products_and_Operational_Excellence "2.4. Mature Digital Products and Operational Excellence"
	
	Digital products and services have a lifecycle from inception to
	retirement. The length of the lifecycle is dependent on its viability to
	its ecosystem. The strength of Agile processes lies in the
	evidence-based testing of features, which means that some experiments
	will be a success. For the products that fail for one reason or another
	the long-term consequence of their viability is not relevant. It is the
	product that has proven its viability without necessarily being
	engineered for sustainability or deeply embedded integration, which may
	require rework to address integration into the larger ecosystem.
	
	A new digital product triggers a chain of events. Products that
	incorporate any sort of technology are constantly evolving. If they are
	not evolving, they are becoming obsolete. The evolution of products and
	services is driven by ever-increasing value to the customer. Value can
	be measured from many perspectives, but one common perspective is the
	capability of the product or service to connect to other things.
	
	The TOGAF Standard can be used to manage and mature digital products,
	and to help deliver operational excellence. However, at times it can
	feel like quite a challenge as Agile processes focus on delivering code
	over documentation and the TOGAF Standard centers much of its
	methodology around artifact collection and management.
	
	Although there can be a feeling amongst agilists that there is no need
	for architecture, the authors of this document assert that there is. It
	may be that the architecture is not understood, or written down, or it
	may be a poorly designed architecture; but as long as there is a system,
	there is an architecture. Without suggesting a best practice for
	architecture documentation, each architecture description can be plotted
	on the matrix described in Figure 1, “Example of Documentation Matrix”.
	
	[Example of a documentation matrix]
	
	Figure 1. Example of Documentation Matrix
	
	A system, whether large, small, simple, complex, just invented
	yesterday, or as old as the punch card mainframes, has an architecture.
	And that architecture has a description; we can describe it visually,
	verbally, or in a written form.
	
	The job of the architect is to do just enough architecture, just in
	time. The TOGAF Standard describes what the architecture description
	should contain, such as information about stakeholders, concerns, views
	(for example, the views of stakeholders – to address their concerns),
	and viewpoints. Separate and apart from the evolutionary state of the
	architecture is the form of architecture measured by its formality,
	which is a separate measurement of its completeness, soundness, and
	robustness. Obvious problem areas are the extremes, when:
	
	-   The system (and its architecture) is complex and undocumented
	    (insufficient architecture)
	
	-   There is an “architecture mandate” for every potential system,
	    product, or idea before we have even tested its viability (too much
	    architecture)
	
	The architect should have the experience to be able to apply a format of
	architecture that achieves the best result within the context of the
	architectural environment.
	
snippet togaf_guides_index_2.4_Minimum_Viable_Architecture "2.4. Minimum Viable Architecture"
	
	An architecture that enables the delivery of product features with just
	enough content to be deployed in a given phase of a project and
	satisfies known requirements (especially quality attribute
	requirements), and no more.
	
snippet togaf_digital-technology-adoption_2.4_Motivation_and_Drivers "2.4 Motivation and Drivers"
	
	Therefore, this makes the DTRA an imperative; the consideration of all
	the key factors well in advance to have the risk and mitigation
	strategies, preparedness, and appetite for change planned as part of the
	roadmap for transition. This makes a readiness assessment a prerequisite
	for onboarding or moving forward in digital technology adoption.
	
	Some factors that are driving the adoption of digital technology
	adoption for enterprises are:
	
	The evolution of business models
	
	Digital technologies enable radically new go-to-market approaches and
	product/service combinations. Entire value chains are impacted, creating
	new customer value propositions and monetization paths. Business model
	changes enabled by technology are causing disruption across all sectors
	of the global economy. Established businesses must recognize these
	changes and transform their organizations to mitigate new threats and
	take advantage of new opportunities created by digital technologies.
	
	The modernization of business channels and the need to increase customer
	reach
	
	Digital Transformation is the integration of digital technology into all
	areas of a business, resulting in fundamental changes to how a business
	operates and the value it delivers to its customers. Put simply, it is
	about changing the way a business interacts with its customers and how
	they provide their customers with a consistent experience whenever and
	wherever they need it. In fact, when asked about factors that influence
	a business decision to implement a Digital Transformation strategy,
	nearly half of all organizations cited customer experience and customer
	satisfaction as their leading influences.
	
	Ever-increasing computing power on the cloud
	
	Ever-increasing computing power and maturity of the cloud has enabled
	the exploration of new innovative ideas at scale. This also enables
	enterprises to fail fast and improve or do it right the first time in an
	iterative, Minimum Viable Product (MVP)-based approach.
	
	The ubiquity of the Internet as a platform
	
	The ubiquity of the Internet as a platform enables connected things to
	be a reality. This opens up new avenues for exploring an enormous amount
	of data collected to create insights driving the Digital Transformation.
	
	The emergence of open-source software
	
	Open-source software is driving Digital Transformation through the
	co-creation of software. Community-based crowd-sourced development of
	new digital technologies and maturing existing open-source software
	creates positive disruption through the engagement of both customers and
	employees, encouraging collaboration and improved productivity.
	Open-source software comes in handy to quickly prototype ideas,
	experiment with trending technologies, and build on these trends.
	
	The emergence of technopreneurs
	
	Technopreneurs are on the rise and are creating successful startups
	through digital technologies. Technopreneurs come up with an idea and
	bring in disruption by thinking out of the box with different ideas that
	challenge the status quo. They create products or solutions using
	digital technologies on the rise, to change the traditional ways of
	doing business. This is only possible due to the ease of access to
	digital technologies that is in turn powered by ever-increasing
	computing power, inexpensive hardware, the ubiquity of the Internet as a
	platform, and an ever-maturing and advancing broadband speed.
	
	The rise of digital enterprises as market disruptors
	
	Digital Transformation is all about the positive disruption of standard
	practices of doing business using technology, people, and processes to
	radically change business performance and outcomes. It is about the
	transformation of organizational decision-making enabled through
	technological advancement. Organizations can work in a more Agile way
	and scale their business to become more competitive through new ways of
	thinking and transforming standard business-as-usual processes. Digital
	technologies play an integral role in helping organizations transform
	these processes. Digital technologies enable organizations to drive
	higher levels of innovation and to easily reengineer business processes.
	For organizations looking to kickstart organizational Digital
	Transformation, it is important to focus on what is not changing to help
	speed adoption and reduce the resistance to change. Digital technologies
	help organizations to take the next step by automating processes,
	leaving their employees to focus on high-level tasks.
	
snippet togaf_adm_2_Preliminary_Phase_2.4_Outputs "2.4 Outputs"
	
	The outputs of the Preliminary Phase may include, but are not restricted
	to:
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Architecture Principles (see the TOGAF Standard — Architecture
	        Content)
	    -   Configured and deployed tools
	-   Initial Architecture Repository (see the TOGAF Standard —
	    Architecture Content), populated with framework content
	-   Restatement of, or reference to, business principles, business
	    goals, and business drivers (see the TOGAF Standard — Architecture
	    Content)
	-   Request for Architecture Work (optional) (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Governance Framework (see the TOGAF Standard — EA
	    Capability and Governance)
	-   The Architecture of the Enterprise Architecture Capability (see the
	    TOGAF Standard — EA Capability and Governance)
	
	The outputs may include some or all of the following:
	
	-   Catalogs:
	    -   Principles catalog
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.4_Phase_C_Data_Architecture "2.4 Phase C: Data Architecture"
	
	The Data Architecture of the architecture practice would specify and
	govern the structure of the organization's Enterprise Continuum and
	Architecture Repository. The Data Architecture should be defined based
	on the architecture framework. The Data Architecture is sometimes
	referred to as the metamodel of the architecture practice.
	
snippet togaf_architecture-project-management_2.4_Project_Management_Documentation "2.4 Project Management Documentation"
	
	Project Management is about communication. The Project Manager is
	responsible for communicating project plans, statuses, and risks to
	project stakeholders – the Project Sponsor, Steering Committee, and
	other stakeholders. This can be effectively achieved formally or
	informally, and in many forms – such as phone calls, meetings,
	presentations, or written reports. It depends on project size,
	organizational culture, and stakeholder requirements among other things.
	
	In this Guide, we often refer to plans, reports, and other artifacts
	that can or should be documented. This does not mean every such artifact
	should be a separate document. In smaller projects and more agile
	organizations, very little documentation may be required or necessary.
	However, we do recommend that Project Management artifacts are
	documented in a written form, even as simple as email. This allows for
	tracing back plans, important decisions, and project milestones. In
	addition, documentation that is more formal can be prepared based on it,
	if necessary.
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.4_TOGAF_Enterprise_Metamodel_Entities "2.3 TOGAF Enterprise Metamodel in Detail"
	
	The relationships between entities in the TOGAF Enterprise Metamodel are
	shown in Figure 2-2 .
	
	[]
	
	Figure 2-2: Relationships between Entities in the TOGAF Enterprise
	Metamodel
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.4_TOGAF_Enterprise_Metamodel_Entities_that_allow_architectural "2.4 TOGAF Enterprise Metamodel Entities"
	
	The following table lists and describes the entities within the
	Enterprise Metamodel.
	
	+-----------------------------------+-----------------------------------+
	| Metamodel Entity                  | Description                       |
	+:==================================+:==================================+
	| Actor                             | A person, organization, or system |
	|                                   | that has a role that initiates or |
	|                                   | interacts with activities; for    |
	|                                   | example, a sales representative   |
	|                                   | who travels to visit customers.   |
	|                                   | Actors may be internal or         |
	|                                   | external to an organization. In   |
	|                                   | the automotive industry, an       |
	|                                   | original equipment manufacturer   |
	|                                   | would be considered an actor by   |
	|                                   | an automotive dealership that     |
	|                                   | interacts with its supply chain   |
	|                                   | activities.                       |
	+-----------------------------------+-----------------------------------+
	| Application Service               | The automated elements of a       |
	|                                   | business service. An application  |
	|                                   | service may deliver or support    |
	|                                   | part or all of one or more        |
	|                                   | business services.                |
	+-----------------------------------+-----------------------------------+
	| Assumption                        | A statement of probable fact that |
	|                                   | has not been fully validated at   |
	|                                   | this stage, due to external       |
	|                                   | constraints. For example, it may  |
	|                                   | be assumed that an existing       |
	|                                   | application will support a        |
	|                                   | certain set of functional         |
	|                                   | requirements, although those      |
	|                                   | requirements may not yet have     |
	|                                   | been individually validated.      |
	+-----------------------------------+-----------------------------------+
	| Business Capability               | A particular ability that a       |
	|                                   | business may possess or exchange  |
	|                                   | to achieve a particular purpose.  |
	+-----------------------------------+-----------------------------------+
	| Business Information              | Represents a concept and its      |
	|                                   | semantics used within the         |
	|                                   | business.                         |
	+-----------------------------------+-----------------------------------+
	| Business Service                  | Supports the business by          |
	|                                   | encapsulating a unique element of |
	|                                   | business behavior; a service      |
	|                                   | offered external to the           |
	|                                   | enterprise may be supported by    |
	|                                   | business services.                |
	+-----------------------------------+-----------------------------------+
	| Capability                        | An ability that an organization,  |
	|                                   | person, or system possesses.      |
	|                                   |                                   |
	|                                   | Note:                             |
	|                                   |     This a general-purpose        |
	|                                   |     definition. See Business      |
	|                                   |     Capability for how this       |
	|                                   |     concept is refined for usage  |
	|                                   |     in Business Architecture.     |
	+-----------------------------------+-----------------------------------+
	| Constraint                        | An external factor that prevents  |
	|                                   | an organization from pursuing     |
	|                                   | particular approaches to meet its |
	|                                   | goals. For example, customer data |
	|                                   | is not harmonized within the      |
	|                                   | organization, regionally or       |
	|                                   | nationally, constraining the      |
	|                                   | organization's ability to offer   |
	|                                   | effective customer service.       |
	+-----------------------------------+-----------------------------------+
	| Contract                          | An agreement between a consumer   |
	|                                   | and a provider that establishes   |
	|                                   | functional and non-functional     |
	|                                   | parameters for interaction. This  |
	|                                   | applies to all types of service   |
	|                                   | interactions within the           |
	|                                   | metamodel.                        |
	+-----------------------------------+-----------------------------------+
	| Control                           | A decision-making step with       |
	|                                   | accompanying decision logic used  |
	|                                   | to determine execution approach   |
	|                                   | for a process or to ensure that a |
	|                                   | process complies with governance  |
	|                                   | criteria. For example, a sign-off |
	|                                   | control on the purchase request   |
	|                                   | processing process that checks    |
	|                                   | whether the total value of the    |
	|                                   | request is within the sign-off    |
	|                                   | limits of the requester, or       |
	|                                   | whether it needs escalating to    |
	|                                   | higher authority.                 |
	+-----------------------------------+-----------------------------------+
	| Course of Action                  | Direction and focus provided by   |
	|                                   | strategic goals and objectives,   |
	|                                   | often to deliver the value        |
	|                                   | proposition characterized in the  |
	|                                   | business model.                   |
	+-----------------------------------+-----------------------------------+
	| Data Entity                       | Represents data that is           |
	|                                   | recognized by the business as a   |
	|                                   | distinct concept.                 |
	+-----------------------------------+-----------------------------------+
	| Driver                            | An external or internal condition |
	|                                   | that motivates the organization   |
	|                                   | to define its goals. An example   |
	|                                   | of an external driver is a change |
	|                                   | in regulation or compliance rules |
	|                                   | which, for example, require       |
	|                                   | changes to the way an             |
	|                                   | organization operates; i.e.,      |
	|                                   | Sarbanes-Oxley in the US.         |
	+-----------------------------------+-----------------------------------+
	| Event                             | An organizational state change    |
	|                                   | that triggers processing events;  |
	|                                   | may originate from inside or      |
	|                                   | outside the organization and may  |
	|                                   | be resolved inside or outside the |
	|                                   | organization.                     |
	+-----------------------------------+-----------------------------------+
	| Function                          | A set of business behaviors based |
	|                                   | on a chosen set of criteria.      |
	|                                   | Functions are usually             |
	|                                   | close-coupled to/with             |
	|                                   | organizational units.             |
	+-----------------------------------+-----------------------------------+
	| Gap                               | A statement of difference between |
	|                                   | two states. Used in the context   |
	|                                   | of gap analysis, where the        |
	|                                   | difference between the Baseline   |
	|                                   | and Target Architecture is        |
	|                                   | identified.                       |
	|                                   |                                   |
	|                                   | Note:                             |
	|                                   |     Gap analysis is described in  |
	|                                   |     the TOGAF Standard — ADM      |
	|                                   |     Techniques.                   |
	+-----------------------------------+-----------------------------------+
	| Goal                              | A high-level statement of intent  |
	|                                   | or direction for an organization. |
	|                                   | Typically used to measure success |
	|                                   | of an organization.               |
	+-----------------------------------+-----------------------------------+
	| Location                          | A place where activities occur.   |
	|                                   | Locations can be composed and     |
	|                                   | decomposed.                       |
	+-----------------------------------+-----------------------------------+
	| Logical Application               | An encapsulation of application   |
	| Component                         | functionality that is definable   |
	|                                   | by services offered and data      |
	|                                   | maintained, independently of      |
	|                                   | implementation and technology.    |
	+-----------------------------------+-----------------------------------+
	| Logical Data                      | A data structure composed of      |
	| Component                         | logically-related data entities.  |
	+-----------------------------------+-----------------------------------+
	| Logical Technology                | An implementation-independent     |
	| Component                         | encapsulation of technology       |
	|                                   | services.                         |
	+-----------------------------------+-----------------------------------+
	| Measure                           | An indicator or factor that can   |
	|                                   | be tracked, usually on an ongoing |
	|                                   | basis, to determine success or    |
	|                                   | alignment with objectives and     |
	|                                   | goals.                            |
	+-----------------------------------+-----------------------------------+
	| Objective                         | An organizational aim that is     |
	|                                   | declared in a Simple, Measurable, |
	|                                   | Actionable, Realistic, and        |
	|                                   | Timebound (SMART) way. For        |
	|                                   | example, "Increase capacity       |
	|                                   | utilization by 30% by the end of  |
	|                                   | the year, to support the planned  |
	|                                   | increase in market share".        |
	+-----------------------------------+-----------------------------------+
	| Organization Unit                 | A self-contained unit of          |
	|                                   | resources with goals, objectives, |
	|                                   | and measures. Organization units  |
	|                                   | may include external parties and  |
	|                                   | business partner organizations.   |
	+-----------------------------------+-----------------------------------+
	| Physical Application              | A realization of logical          |
	| Component                         | application functionality using   |
	|                                   | components of functionality in    |
	|                                   | applications that may be hired,   |
	|                                   | procured, or built.               |
	+-----------------------------------+-----------------------------------+
	| Physical Data                     | A data structure that realizes    |
	| Component                         | related logical data components   |
	|                                   | represented in the format or      |
	|                                   | schema required by a particular   |
	|                                   | technology.                       |
	+-----------------------------------+-----------------------------------+
	| Physical Technology               | A realization of logical          |
	| Component                         | technology functionality using a  |
	|                                   | particular technology product     |
	|                                   | that may be deployed.             |
	+-----------------------------------+-----------------------------------+
	| Principle                         | A qualitative statement of intent |
	|                                   | that should be met by the         |
	|                                   | architecture. It has at least a   |
	|                                   | supporting rationale and a        |
	|                                   | measure of importance.            |
	|                                   |                                   |
	|                                   | Note:                             |
	|                                   |     A sample set of Architecture  |
	|                                   |     Principles is defined in the  |
	|                                   |     TOGAF Standard — ADM          |
	|                                   |     Techniques.                   |
	+-----------------------------------+-----------------------------------+
	| Process                           | A process represents a sequence   |
	|                                   | of activities that together       |
	|                                   | achieve a specified outcome, can  |
	|                                   | be decomposed into sub-processes, |
	|                                   | and can show operation of a       |
	|                                   | business capability or service    |
	|                                   | (at next level of detail).        |
	|                                   |                                   |
	|                                   | Processes may also be used to     |
	|                                   | link organizations, business      |
	|                                   | capabilities, services, and       |
	|                                   | processes. A process may realize  |
	|                                   | one service and/or orchestrate    |
	|                                   | subordinate services.             |
	+-----------------------------------+-----------------------------------+
	| Product                           | An outcome generated by the       |
	|                                   | business to be offered to         |
	|                                   | customers. Products include       |
	|                                   | materials and/or services.        |
	+-----------------------------------+-----------------------------------+
	| Requirement                       | A quantitative statement of       |
	|                                   | business need that must be met by |
	|                                   | a particular architecture or work |
	|                                   | package.                          |
	+-----------------------------------+-----------------------------------+
	| Role                              | The usual or expected behavior of |
	|                                   | an actor, or the part somebody or |
	|                                   | something plays in a particular   |
	|                                   | process or event. An actor may    |
	|                                   | have a number of roles.           |
	|                                   |                                   |
	|                                   | See also Actor.                   |
	+-----------------------------------+-----------------------------------+
	| Service Quality                   | A configuration of non-functional |
	|                                   | requirements or attributes that   |
	|                                   | may be assigned to a business,    |
	|                                   | application, or technology        |
	|                                   | service.                          |
	+-----------------------------------+-----------------------------------+
	| Technology Service                | A technical capability required   |
	|                                   | to provide enabling               |
	|                                   | infrastructure that supports the  |
	|                                   | delivery of applications.         |
	+-----------------------------------+-----------------------------------+
	| Value Stream                      | A representation of an end-to-end |
	|                                   | collection of activities that     |
	|                                   | create an overall result for a    |
	|                                   | customer, stakeholder, or         |
	|                                   | end-user.                         |
	+-----------------------------------+-----------------------------------+
	| Work Package                      | A set of actions identified to    |
	|                                   | achieve one or more objectives    |
	|                                   | for the business. A work package  |
	|                                   | can be a part of a project, a     |
	|                                   | complete project, or a program.   |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm_2_Preliminary_Phase_2.5.1_Enterprise "2.5.1 Enterprise"
	
	One of the main challenges of Enterprise Architecture is that of
	enterprise scope.
	
	The scope of the enterprise, and whether it is federated, will determine
	those stakeholders who will derive most benefit from the Enterprise
	Architecture Capability. It is imperative that a sponsor is appointed at
	this stage to ensure that the resultant activity has resources to
	proceed and the clear support of the business management. The enterprise
	may encompass many organizations and the duties of the sponsor are to
	ensure that all stakeholders are included in defining, establishing, and
	using the Architecture Capability.
	
snippet togaf_adm_2_Preliminary_Phase_2.5.2_Organizational_Context "2.5.2 Organizational Context"
	
	In order to make effective and informed decisions about the framework
	for architecture to be used within a particular enterprise, it is
	necessary to understand the context surrounding the architecture
	framework. Specific areas to consider would include:
	
	-   The commercial models for Enterprise Architecture and budgetary
	    plans for Enterprise Architecture activity; where no such plans
	    exist, the Preliminary Phase should be used to develop a budget plan
	
	-   The stakeholders for architecture in the enterprise; their key
	    issues and concerns
	
	-   The intentions and culture of the organization, as captured within
	    board business directives, business imperatives, business
	    strategies, business principles, business goals, and business
	    drivers
	
	-   Current processes that support execution of change and operation of
	    the enterprise, including the structure of the process and also the
	    level of rigor and formality applied within the organization
	
	    Areas for focus should include:
	
	    -   Current methods for architecture description
	    -   Current project management frameworks and methods
	    -   Current systems management frameworks and methods
	    -   Current project portfolio management processes and methods
	    -   Current application portfolio management processes and methods
	    -   Current technology portfolio management processes and methods
	    -   Current information portfolio management processes and methods
	    -   Current systems design and development frameworks and methods
	
	-   The Baseline Architecture landscape, including the state of the
	    enterprise and also how the landscape is currently represented in
	    documentation form
	
	-   The skills and capabilities of the enterprise and specific
	    organizations that will be adopting the framework
	
	Review of the organizational context should provide valuable
	requirements on how to tailor the architecture framework in terms of:
	
	-   Level of formality and rigor to be applied
	-   Level of sophistication and expenditure required
	-   Touch-points with other organizations, processes, roles, and
	    responsibilities
	-   Focus of content coverage
	
snippet togaf_adm_2_Preliminary_Phase_2.5.3_Requirements_for_Architecture_Work "2.5.3 Requirements for Architecture Work"
	
	The business imperatives behind the Enterprise Architecture work drive
	the requirements and performance metrics for the architecture work. They
	should be sufficiently clear so that this phase may scope the business
	outcomes and resource requirements, and define the outline enterprise
	business information requirements and associated strategies of the
	Enterprise Architecture work to be done. For example, these may include:
	
	-   Business requirements
	-   Cultural aspirations
	-   Organization intents
	-   Strategic intent
	-   Forecast financial requirements
	
	Significant elements of these need to be articulated so that the sponsor
	can identify all the key decision-makers and stakeholders involved in
	defining and establishing an Architecture Capability.
	
snippet togaf_adm_2_Preliminary_Phase_2.5.4_Principles "2.5.4 Principles"
	
	The Preliminary Phase defines the Architecture Principles that will form
	part of the constraints on any architecture work undertaken in the
	enterprise. The issues involved in this are explained in the TOGAF
	Standard — ADM Techniques.
	
	The definition of Architecture Principles is fundamental to the
	development of an Enterprise Architecture. Architecture work is informed
	by business principles as well as Architecture Principles. The
	Architecture Principles themselves are also normally based in part on
	business principles. Defining business principles normally lies outside
	the scope of the architecture function. However, depending on how such
	principles are defined and promulgated within the enterprise, it may be
	possible for the set of Architecture Principles to also restate, or
	cross-refer to a set of business principles, business goals, and
	strategic business drivers defined elsewhere within the enterprise.
	Within an architecture project, the architect will normally need to
	ensure that the definitions of these business principles, goals, and
	strategic drivers are current, and to clarify any areas of ambiguity.
	
	The issue of Architecture Governance is closely linked to that of
	Architecture Principles. The body responsible for governance will also
	normally be responsible for approving the Architecture Principles, and
	for resolving architecture issues. The issues involved in governance are
	explained in the TOGAF Standard — EA Capability and Governance.
	
snippet togaf_adm_2_Preliminary_Phase_2.5.5_Management_Frameworks "2.5.5 Management Frameworks"
	
	The TOGAF ADM is a generic method, intended to be used by enterprises in
	a wide variety of industry types and geographies. It is also designed
	for use with a wide variety of other Enterprise Architecture frameworks,
	if required (although it can be used perfectly well in its own right,
	without adaptation).
	
	The TOGAF framework has to co-exist with and enhance the operational
	capabilities of other management frameworks that are present within any
	organization either formally or informally. In addition to these
	frameworks, most organizations have a method for the development of
	solutions, most of which have an IT component. The significance of
	systems is that they bring together the various domains (also known as
	People, Processes, and Material/Technology) to deliver a business
	capability.
	
	The main frameworks suggested to be co-ordinated with the TOGAF
	framework are:
	
	-   Business Capability Management that determines what business
	    capabilities are required to deliver business value including the
	    definition of return on investment and the requisite
	    control/performance measures
	-   Project/Portfolio Management Methods that determine how a company
	    manages its change initiatives
	-   Operations Management Methods that describe how a company runs its
	    day-to-day operations, including IT
	-   Solution Development Methods that formalize the way that business
	    systems are delivered in accordance with the structures developed in
	    the IT architecture
	
	As illustrated in Figure 2-2 , these frameworks are not discrete and
	there are significant overlaps between them and the Business Capability
	Management. The latter includes the delivery of performance measured
	business value.
	
	The overall significance is that the Enterprise Architect applying the
	TOGAF framework cannot narrowly focus on the IT implementation, but must
	be aware of the impact that the architecture has on the entire
	enterprise.
	
	[]
	
	Figure 2-2: Management Frameworks to Co-ordinate with the TOGAF
	Framework
	
	The Preliminary Phase therefore involves doing any necessary work to
	adapt the ADM to define an organization-specific framework, using either
	the TOGAF deliverables or the deliverables of another framework. The
	issues involved in this are discussed in 1.3 Adapting the ADM .
	
snippet togaf_adm_2_Preliminary_Phase_2.5.6_Relating_the_Management_Frameworks "2.5.6 Relating the Management Frameworks"
	
	Figure 2-3 illustrates a more detailed set of dependencies between the
	various frameworks and business planning activity that incorporates the
	enterprise's strategic plan and direction. The Enterprise Architecture
	can be used to provide a structure for all of the corporate initiatives,
	the Portfolio Management Framework can be used to deliver the components
	of the architecture, and the Operations Management Framework supports
	incorporation of these new components within the corporate
	infrastructure.
	
	The business planners are present throughout the process and are in a
	position to support and enforce the architecture by retaining approval
	for resources at the various stages of planning and development.
	
	The solution development methodology is used within the Portfolio
	Management Framework to plan, create, and deliver the architectural
	components specified in the project and portfolio charters. These
	deliverables include, but are not exclusively, IT; for example, a new
	building, a new set of skills, production equipment, hiring, marketing,
	and so on. Enterprise Architecture potentially provides the context for
	all enterprise activities.
	
	The management frameworks are required to complement each other and work
	in close harmony for the good of the enterprise.
	
	[]
	
	Figure 2-3: Interoperability and Relationships between Management
	Frameworks
	
	Business planning at the strategy level provides the initial direction
	to Enterprise Architecture. Updates at the annual planning level provide
	a finer level of ongoing guidance. Capability-based planning is one of
	many popular techniques for business planning.
	
	Enterprise Architecture structures the business planning into an
	integrated framework that regards the enterprise as a system or system
	of systems. This integrated approach will validate the business plan and
	can provide valuable feedback to the corporate planners. In some
	organizations, the Enterprise Architects have been moved to or work very
	closely with the strategic direction groups. The TOGAF approach delivers
	a framework for Enterprise Architecture.
	
	Project/portfolio management is the delivery framework that receives the
	structured, detailed direction that enables them to plan and build what
	is required, knowing that each assigned deliverable will be in context
	(i.e., the piece of the puzzle that they deliver will fit into the
	corporate puzzle that is the Enterprise Architecture). Often this
	framework is based upon the Project Management Institute or UK Office of
	Government Commerce (PRINCE2®) project management methodologies. Project
	architectures and detailed out-of-context design are often based upon
	systems design methodologies.
	
	Guidance on how to use the TOGAF ADM along with a Project Management
	framework may be found in the TOGAF® Series Guide: Architecture Project
	Management.
	
	Operations management receives the deliverables and then integrates and
	sustains them within the corporate infrastructure. Often the IT service
	management services are based upon the IT4IT Reference Architecture,
	ITIL®, and ISO/IEC 20000:2011.
	
snippet togaf_adm_2_Preliminary_Phase_2.5.7_Planning_for_Enterprise_Architecture_Business_Change_Maturity_Evaluation "2.5.7 Planning for Enterprise Architecture/Business Change Maturity Evaluation"
	
	Capability Maturity Models are useful ways of assessing the ability of
	an enterprise to exercise different capabilities.
	
	Capability Maturity Models typically identify selected factors that are
	required to exercise a capability. An organization's ability to execute
	specific factors provides a measure of maturity and can be used to
	recommend a series of sequential steps to improve a capability. It is an
	assessment that gives executives an insight into pragmatically improving
	a capability.
	
	A good Enterprise Architecture maturity model covers the characteristics
	necessary to develop and consume Enterprise Architecture. Organizations
	can determine their own factors and derive the appropriate maturity
	models, but it is recommended to take an existing model and customize it
	as required.
	
	Several good models exist, including National Association of State CIOs
	(NASCIO), and the US Department of Commerce Architecture Capability
	Maturity Model. Other examples include the US Federal Enterprise
	Architecture Maturity Model. Even though the models are originally from
	government, they are equally applicable to industry.
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.5_Applying_Architecture_Principles "2.5 Applying Architecture Principles"
	
	Architecture Principles are used to capture the fundamental truths about
	how the enterprise will use and deploy IT resources and assets. The
	principles are used in a number of different ways:
	
	1.  To provide a framework within which the enterprise can start to make
	    conscious decisions about Enterprise Architecture and projects that
	    implement the target Enterprise Architecture
	2.  As a guide to establishing relevant evaluation criteria, thus
	    exerting strong influence on the selection of products, solutions,
	    or solution architectures in the later stages of managing compliance
	    to the Enterprise Architecture
	3.  As drivers for defining the functional requirements of the
	    architecture
	4.  As an input to assessing both existing implementations and the
	    strategic portfolio, for compliance with the defined architectures;
	    these assessments will provide valuable insights into the transition
	    activities needed to implement an architecture, in support of
	    business goals and priorities
	5.  The Rationale statements within an Architecture Principle highlight
	    the business value of implementations consistent with the principle
	    and provide guidance for difficult decisions with conflicting
	    drivers or objectives
	6.  The Implications statements within an Architecture Principle provide
	    an outline of the key tasks, resources, and potential costs to the
	    enterprise of following the principle; they also provide valuable
	    inputs to future transition initiative and planning activities
	7.  Support the Architecture Governance activities in terms of:
	    -   Providing a "back-stop" for the standard Architecture Compliance
	        assessments where some interpretation is allowed or required
	    -   Supporting the decision to initiate a dispensation request where
	        the implications of a particular architecture amendment cannot
	        be resolved within local operating procedure
	
	Principles may be inter-related, and need to be applied as a set.
	
	Principles will sometimes compete; for example, the principles of
	"accessibility" and "security" tend towards conflicting decisions. Each
	principle must be considered in the context of "all other things being
	equal".
	
	At times a decision will be required as to which principle will take
	precedence on a particular issue. The rationale for such decisions
	should always be documented.
	
	A common reaction on first reading of a principle is "this is obvious
	and does not need to be documented". The fact that a principle seems
	self-evident does not mean that the guidance in a principle is followed.
	Having principles that appear obvious helps ensure that decisions
	actually follow the desired outcome.
	
	Although specific penalties are not prescribed in a declaration of
	principles, violations of principles generally cause operational
	problems and inhibit the ability of the organization to fulfil its
	mission.
	
snippet togaf_adm_2_Preliminary_Phase_2.5_Approach "2.5 Approach"
	
	This Preliminary Phase is about defining "where, what, why, who, and how
	we do architecture" in the enterprise concerned. The main aspects are as
	follows:
	
	-   Defining the enterprise
	-   Identifying key drivers and elements in the organizational context
	-   Defining the requirements for architecture work
	-   Defining the Architecture Principles that will inform any
	    architecture work
	-   Defining the framework to be used
	-   Defining the relationships between management frameworks
	-   Evaluating the Enterprise Architecture maturity
	
	The Enterprise Architecture provides a strategic, top-down view of an
	organization to enable executives, planners, architects, and engineers
	to coherently co-ordinate, integrate, and conduct their activities. The
	Enterprise Architecture framework provides the strategic context within
	which this team can operate.
	
	Therefore, developing the Enterprise Architecture is not a solitary
	activity and the Enterprise Architects need to recognize the
	interoperability between their frameworks and the rest of the business.
	
	Strategic, interim, and tactical business objectives and aspirations
	need to be met. Similarly, the Enterprise Architecture needs to reflect
	this requirement and allow for operation of architecture discipline at
	different levels within the organization.
	
	Depending on the scale of the enterprise and the level of budgetary
	commitment to Enterprise Architecture discipline, a number of approaches
	may be adopted to sub-divide or partition architecture teams, processes,
	and deliverables. Approaches for architecture partitioning are discussed
	in the TOGAF Standard — Architecture Content. The Preliminary Phase
	should be used to determine the desired approach to partitioning and to
	establish the groundwork for the selected approach to be put into
	practice.
	
	The Preliminary Phase may be revisited, from the Architecture Vision
	phase (see the TOGAF Standard — Applying the ADM), in order to ensure
	that the organization's Architecture Capability is suitable to address a
	specific architecture problem.
	
	The Preliminary Phase is about creating an architecture for the
	Enterprise Architecture Capability in an organization. As such, the same
	best practices employed in developing any architecture should be used
	here. Refer to the TOGAF Standard — EA Capability and Governance for an
	explanation about the application of the TOGAF ADM to establish the
	Enterprise Architecture Capability.
	
	Further guidance on how to construct an Enterprise Architecture
	Capability may be found in the following document:
	
	-   TOGAF® Series Guide: The TOGAF Leader's Guide to Establishing and
	    Evolving an EA Capability
	
snippet togaf_reference-models_digital-business-reference-model_2.5_Business_Ecosystem "2.5 Business Ecosystem"
	
	A composition of multiple businesses that come together to deliver
	something of value to the customer.
	
snippet togaf_digital-technology-adoption_2.5_Focus_and_Goals "2.5 Focus and Goals"
	
	This document focuses exclusively on identifying, elaborating, and
	structuring the factors for conducting a readiness assessment concerning
	adoption of digital technologies. An assessment tool (in the form of a
	questionnaire) is provided for ready-use. The content in this document
	and in the tool are domain, sector, industry, and technology-agnostic.
	In other words, it can be used by any kind of organization.
	
	The goals of this document are to:
	
	-   Raise awareness of the risks associated with the adoption of digital
	    technologies, which includes the ability to understand the full
	    spectrum of risks associated with the adoption of digital
	    technologies, and how these risks can impact the adoption and derail
	    transformation programs
	-   Provide a generic tool for evaluating the degree of readiness to
	    adopt digital technologies, not limited to the current set of
	    technologies but also with applicability for future yet-to-be
	    available digital technologies
	-   Provide insights into the impact of the DTRA by introducing factors
	    that enterprises need to be cognizant of in order to plan their
	    strategy and execution plan
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.5_Iteration_Considerations "2.5 Iteration Considerations"
	
	Some iteration cycles can be executed once, whereas others have a
	natural minimum number of cycles. For some iteration cycles, each
	iteration follows the same process; where there is more than one
	iteration within a cycle, the process differs slightly for each of the
	iterations.
	
	When considering the usage of iteration cycles, it is also necessary to
	consider where to place appropriate checkpoints within the process. If
	the expected level of stakeholder involvement is high, it may be
	sensible to carry out very frequent but informal checkpoints to ensure
	that the process is moving in the intended direction. If stakeholders
	are less closely involved, then checkpoints may be less frequent but
	more formal. Checkpoints at the completion of each iteration cycle, or
	at the end of several iteration cycles, are common.
	
	2.5.1 Iteration between ADM Cycles
	
	Each iteration completes an ADM cycle at a single level of Architecture
	Description. This approach to the ADM uses Phase F (Migration Planning)
	to initiate new more detailed architecture development projects. This
	approach is illustrated in Figure 2-3 . This type of iteration
	highlights the need for higher-level architecture to guide and constrain
	more detailed architecture. It also highlights that the complete
	Architecture Landscape is developed by multiple ADM iterations.
	
	[]
	
	Figure 2-3: A Hierarchy of ADM Processes Example
	
	2.5.2 Iteration within an ADM Cycle
	
	Each iteration cycle crosses multiple TOGAF ADM phases. The following
	tables show at a high level which phases should be completed for which
	iteration cycle, showing activity that is core (i.e., the primary focus
	of the iteration), activity that is light (i.e., the secondary focus of
	the iteration), and activity that may be informally conducted (i.e.,
	some activity may be carried out, but it is not explicitly mentioned in
	the ADM).
	
	[]
	
	Figure 2-4: Activity by Iteration for Baseline First Architecture
	Definition
	
	[]
	
	Figure 2-5: Activity by Iteration for Target First Architecture
	Definition
	
	The suggested iteration cycles mapped to the TOGAF phases are described
	in the following table:
	
	+-----------------+-----------------+-----------------+-----------------+
	| Iteration Cycle | Iteration       | Purpose         | Description     |
	+:================+:================+:================+:================+
	| Architecture    | Iteration 1     | Define the      | This iteration  |
	| Development     |                 | Baseline        | comprises a     |
	| (Baseline       |                 | Architecture.   | pass through    |
	| First)          |                 |                 | the Business    |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | Information     |
	|                 |                 |                 | Systems         |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | and Technology  |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | phases of the   |
	|                 |                 |                 | ADM, focusing   |
	|                 |                 |                 | on definition   |
	|                 |                 |                 | of the          |
	|                 |                 |                 | baseline.       |
	|                 |                 |                 |                 |
	|                 |                 |                 | Opportunities,  |
	|                 |                 |                 | solutions, and  |
	|                 |                 |                 | migration plans |
	|                 |                 |                 | are also        |
	|                 |                 |                 | considered to   |
	|                 |                 |                 | drive out the   |
	|                 |                 |                 | focus for       |
	|                 |                 |                 | change and test |
	|                 |                 |                 | feasibility.    |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration 2     | Define the      | This iteration  |
	|                 |                 | Target          | comprises a     |
	|                 |                 | Architecture    | pass through    |
	|                 |                 | and gaps.       | the Business    |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | Information     |
	|                 |                 |                 | Systems         |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | and Technology  |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | phases of the   |
	|                 |                 |                 | ADM, focusing   |
	|                 |                 |                 | on definition   |
	|                 |                 |                 | of the target   |
	|                 |                 |                 | and analyzing   |
	|                 |                 |                 | gaps against    |
	|                 |                 |                 | the baseline.   |
	|                 |                 |                 |                 |
	|                 |                 |                 | Opportunities,  |
	|                 |                 |                 | solutions, and  |
	|                 |                 |                 | migration plans |
	|                 |                 |                 | are also        |
	|                 |                 |                 | considered to   |
	|                 |                 |                 | test viability. |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration n     | Refine          | Subsequent      |
	|                 |                 | baseline,       | Architecture    |
	|                 |                 | target, and     | Development     |
	|                 |                 | gaps.           | iterations      |
	|                 |                 |                 | attempt to      |
	|                 |                 |                 | correct and     |
	|                 |                 |                 | refine the      |
	|                 |                 |                 | target to       |
	|                 |                 |                 | achieve an      |
	|                 |                 |                 | outcome that is |
	|                 |                 |                 | beneficial,     |
	|                 |                 |                 | feasible, and   |
	|                 |                 |                 | viable.         |
	+-----------------+-----------------+-----------------+-----------------+
	| Architecture    | Iteration 1     | Define the      | This iteration  |
	| Development     |                 | Target          | comprises a     |
	| (Target First)  |                 | Architecture.   | pass through    |
	|                 |                 |                 | the Business    |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | Information     |
	|                 |                 |                 | Systems         |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | and Technology  |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | phases of the   |
	|                 |                 |                 | ADM, focusing   |
	|                 |                 |                 | on definition   |
	|                 |                 |                 | of the target.  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Opportunities,  |
	|                 |                 |                 | solutions, and  |
	|                 |                 |                 | migration plans |
	|                 |                 |                 | are also        |
	|                 |                 |                 | considered to   |
	|                 |                 |                 | drive out the   |
	|                 |                 |                 | focus for       |
	|                 |                 |                 | change and test |
	|                 |                 |                 | feasibility.    |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration 2     | Define the      | This iteration  |
	|                 |                 | Baseline        | comprises a     |
	|                 |                 | Architecture    | pass through    |
	|                 |                 | and gaps.       | the Business    |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | Information     |
	|                 |                 |                 | Systems         |
	|                 |                 |                 | Architecture,   |
	|                 |                 |                 | and Technology  |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | phases of the   |
	|                 |                 |                 | ADM, focusing   |
	|                 |                 |                 | on definition   |
	|                 |                 |                 | of the baseline |
	|                 |                 |                 | and analyzing   |
	|                 |                 |                 | gaps against    |
	|                 |                 |                 | the target.     |
	|                 |                 |                 |                 |
	|                 |                 |                 | Opportunities,  |
	|                 |                 |                 | solutions, and  |
	|                 |                 |                 | migration plans |
	|                 |                 |                 | are also        |
	|                 |                 |                 | considered to   |
	|                 |                 |                 | test viability. |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration n     | Refine          | Subsequent      |
	|                 |                 | baseline,       | Architecture    |
	|                 |                 | target, and     | Development     |
	|                 |                 | gaps.           | iterations      |
	|                 |                 |                 | attempt to      |
	|                 |                 |                 | correct and     |
	|                 |                 |                 | refine the      |
	|                 |                 |                 | target to       |
	|                 |                 |                 | achieve an      |
	|                 |                 |                 | outcome that is |
	|                 |                 |                 | beneficial,     |
	|                 |                 |                 | feasible, and   |
	|                 |                 |                 | viable.         |
	+-----------------+-----------------+-----------------+-----------------+
	| Transition      | Iteration 1     | Define and      | The initial     |
	| Planning        |                 | agree a set of  | iteration of    |
	|                 |                 | improvement     | Transition      |
	|                 |                 | opportunities,  | Planning seeks  |
	|                 |                 | aligned against | to gain buy-in  |
	|                 |                 | a provisional   | to a portfolio  |
	|                 |                 | Transition      | of solution     |
	|                 |                 | Architecture.   | opportunities   |
	|                 |                 |                 | in the          |
	|                 |                 |                 | Opportunities & |
	|                 |                 |                 | Solutions phase |
	|                 |                 |                 | of ADM.         |
	|                 |                 |                 |                 |
	|                 |                 |                 | This iteration  |
	|                 |                 |                 | also delivers a |
	|                 |                 |                 | provisional     |
	|                 |                 |                 | Migration Plan. |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration n     | Agree the       | Subsequent      |
	|                 |                 | Transition      | iterations of   |
	|                 |                 | Architecture,   | Transition      |
	|                 |                 | refining the    | Planning seek   |
	|                 |                 | identified      | to refine the   |
	|                 |                 | improvement     | Migration Plan, |
	|                 |                 | opportunities   | feeding back    |
	|                 |                 | to fit.         | issues into the |
	|                 |                 |                 | Opportunities & |
	|                 |                 |                 | Solutions phase |
	|                 |                 |                 | for refinement. |
	+-----------------+-----------------+-----------------+-----------------+
	| Architecture    | Iteration 1     | Mobilize        | The initial     |
	| Governance      |                 | Architecture    | Architecture    |
	|                 |                 | Governance and  | Governance      |
	|                 |                 | change          | iteration       |
	|                 |                 | management      | establishes a   |
	|                 |                 | processes.      | process for     |
	|                 |                 |                 | governance of   |
	|                 |                 |                 | change and also |
	|                 |                 |                 | puts in place   |
	|                 |                 |                 | the appropriate |
	|                 |                 |                 | people,         |
	|                 |                 |                 | processes, and  |
	|                 |                 |                 | technology to   |
	|                 |                 |                 | support managed |
	|                 |                 |                 | access to and   |
	|                 |                 |                 | change of the   |
	|                 |                 |                 | defined         |
	|                 |                 |                 | architecture.   |
	+-----------------+-----------------+-----------------+-----------------+
	|                 | Iteration n     | Carry out       | Subsequent      |
	|                 |                 | Architecture    | iterations of   |
	|                 |                 | Governance and  | the             |
	|                 |                 | change control. | Architecture    |
	|                 |                 |                 | Governance      |
	|                 |                 |                 | cycle focus on  |
	|                 |                 |                 | periodic        |
	|                 |                 |                 | reviews of      |
	|                 |                 |                 | change          |
	|                 |                 |                 | initiatives to  |
	|                 |                 |                 | resolve issues  |
	|                 |                 |                 | and ensure      |
	|                 |                 |                 | compliance.     |
	|                 |                 |                 | Results of a    |
	|                 |                 |                 | Change Request  |
	|                 |                 |                 | may trigger     |
	|                 |                 |                 | another phase   |
	|                 |                 |                 | to be           |
	|                 |                 |                 | revisited; for  |
	|                 |                 |                 | example,        |
	|                 |                 |                 | feeding back a  |
	|                 |                 |                 | new requirement |
	|                 |                 |                 | to the          |
	|                 |                 |                 | Preliminary     |
	|                 |                 |                 | Phase to        |
	|                 |                 |                 | improve the     |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | Capability, or  |
	|                 |                 |                 | a new           |
	|                 |                 |                 | requirement for |
	|                 |                 |                 | the             |
	|                 |                 |                 | architecture    |
	|                 |                 |                 | into the        |
	|                 |                 |                 | Architecture    |
	|                 |                 |                 | Development     |
	|                 |                 |                 | phases.         |
	+-----------------+-----------------+-----------------+-----------------+
	
snippet togaf_togaf-leaders-guide_2_Definitions_2.5_Leader "2.5 Leader"
	
	The person tasked to lead the establishment and/or evolution of an EA
	Capability.
	
	Note: This term reflects the role, rather than one of the myriad titles,
	that may apply.
	
snippet togaf_guides_index_2.5_Minimum_Viable_Product "2.5. Minimum Viable Product"
	
	The smallest possible outcome that generates acceptable learning,
	delivery of value to the customer (internal or external), and is a basis
	for future extension.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.5_O-ESA "2.5 O-ESA"
	
	The Open Enterprise Security Architecture (O-ESA) standard [14],
	published by The Open Group in 2011, is a reference Security
	Architecture and guide to building a security program. While it contains
	useful information on information security governance, security
	principles, and technology components and services needed in Security
	Architectures, this reference architecture can be also applied to
	support the implementation of security and risk in Enterprise
	Architectures using the TOGAF Standard.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.5_Phase_C_Application_Architecture "2.5 Phase C: Application Architecture"
	
	The Application Architecture of the architecture practice defines the
	functionality required to generate, maintain, publish, distribute, and
	govern the architecture deliverables as defined in the architecture
	framework. A key focus should be on the modeling toolsets required for
	modeling, but it should not be the only focus. Refer to the TOGAF
	Standard — Architecture Development Method for guidance on selecting a
	toolset. Publishing the architecture deliverables to address specific
	views in the architecture framework would sometimes require specialized
	or customized functionality and should not be neglected.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2.5_Simplifying_Complexity_The_TOGAF_ADM "2.5. Simplifying Complexity (The TOGAF ADM)"
	
	Digital products must adapt to their evolving ecosystem or they will
	lose their value. The digital products might become inefficient,
	obsolete, or too expensive to maintain. A well-constructed ecosystem
	that is adaptable, scalable, and flexible is the purpose of an
	architecture.
	
	The TOGAF ADM provides guidance for understanding and describing the
	larger digital ecosystem in the form of Enterprise Architecture. The
	TOGAF Standard can also be used to partition the ecosystem into segment
	architectures, while digital products can be described as solution
	architectures.
	
	As digital products and services increase in complexity, more rigorous
	forms of architecture can and should be applied to maintain the “Agile”
	aspects of digital products. The question becomes how much rigor to
	apply? Using guidance available in the TOGAF Standard, the Digital
	Practitioner can mitigate slow-downs in continuous delivery caused by
	complexity; for example, by evangelizing the rigorous and structured
	development of reusable components that are relatively easy to
	integrate. Conversely, the architect can select TOGAF components that
	help to address complexity and deselect components that are
	over-engineered for the context in which they are operating. The TOGAF
	Standard states that it should be adapted and “right-sized” for smaller
	or less complex environments.
	
	Most importantly, the TOGAF Standard focuses on business outcomes
	described as valuable to the customer or end user. This aligns with how
	the value of digital products and services are measured. However, the
	Agile approach of “you build it, you operate it” may not be
	operationally efficient, especially when the digital product begins to
	embed itself into the core operational model of the technology
	infrastructure. The TOGAF Standard provides the framework that
	accommodates not only product architectures but entire capabilities in
	which the product participates.
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.5_TOGAF_Enterprise_Metamodel_Attributes "2.5 TOGAF Enterprise Metamodel Attributes"
	
	The following table shows typical attributes for each of the metamodel
	entities described previously.
	
	+-----------------------+-----------------------+-----------------------+
	| Metamodel Entity      | Attribute             | Description           |
	+:======================+:======================+:======================+
	| All Metamodel         | ID                    | Unique identifier for |
	| Entities              |                       | the architecture      |
	|                       |                       | entity.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Name                  | Brief name of the     |
	|                       |                       | architecture entity.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Description           | Textual description   |
	|                       |                       | of the architecture   |
	|                       |                       | entity.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Category              | User-definable        |
	|                       |                       | categorization        |
	|                       |                       | taxonomy for each     |
	|                       |                       | metamodel entity.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Source                | Location from where   |
	|                       |                       | the information was   |
	|                       |                       | collected.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Owner                 | Owner of the          |
	|                       |                       | architecture entity.  |
	+-----------------------+-----------------------+-----------------------+
	| Capability            | Business value        | Describes how this    |
	|                       |                       | capability provides   |
	|                       |                       | value to the          |
	|                       |                       | enterprise.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Increments            | Lists possible        |
	|                       |                       | maturity/quality      |
	|                       |                       | levels for the        |
	|                       |                       | capability.           |
	+-----------------------+-----------------------+-----------------------+
	| Constraint            | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Gap                   | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Location              | Category              | The following         |
	|                       |                       | categories of         |
	|                       |                       | Location apply:       |
	|                       |                       | Region (applies to a  |
	|                       |                       | grouping of countries |
	|                       |                       | or territory; e.g.,   |
	|                       |                       | South East Asia, UK,  |
	|                       |                       | and Ireland), Country |
	|                       |                       | (applies to a single  |
	|                       |                       | country; e.g., US),   |
	|                       |                       | Building (applies to  |
	|                       |                       | a site of operation;  |
	|                       |                       | where several offices |
	|                       |                       | are collected in a    |
	|                       |                       | single city, this     |
	|                       |                       | category may          |
	|                       |                       | represent a city),    |
	|                       |                       | and Specific Location |
	|                       |                       | (applies to any       |
	|                       |                       | specific location     |
	|                       |                       | within a building,    |
	|                       |                       | such as a server      |
	|                       |                       | room). The nature of  |
	|                       |                       | the business may      |
	|                       |                       | introduce other       |
	|                       |                       | Locations: Ship or    |
	|                       |                       | Port for a ferry      |
	|                       |                       | company, Mine for a   |
	|                       |                       | gold company, Car for |
	|                       |                       | a police force, Hotel |
	|                       |                       | for any firm's        |
	|                       |                       | traveling workers,    |
	|                       |                       | and so on.            |
	+-----------------------+-----------------------+-----------------------+
	| Principle             | Category              | The following         |
	|                       |                       | categories of         |
	|                       |                       | principle apply:      |
	|                       |                       | Guiding Principle,    |
	|                       |                       | Business Principle,   |
	|                       |                       | Data Principle,       |
	|                       |                       | Application           |
	|                       |                       | Principle,            |
	|                       |                       | Integration           |
	|                       |                       | Principle, Technology |
	|                       |                       | Principle.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Priority              | Priority of this      |
	|                       |                       | principle relative to |
	|                       |                       | other principles.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Statement of          | Statement of what the |
	|                       | principle             | principle is.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Rationale             | Statement of why the  |
	|                       |                       | principle is required |
	|                       |                       | and the desired       |
	|                       |                       | outcome to be         |
	|                       |                       | reached.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Implication           | Statement of what the |
	|                       |                       | principle means in    |
	|                       |                       | practical terms.      |
	+-----------------------+-----------------------+-----------------------+
	|                       | Metric                | Identifies mechanisms |
	|                       |                       | that will be used to  |
	|                       |                       | measure whether the   |
	|                       |                       | principle has been    |
	|                       |                       | met or not.           |
	+-----------------------+-----------------------+-----------------------+
	| Requirement           | Statement of          | Statement of what the |
	|                       | requirement           | requirement is,       |
	|                       |                       | including a           |
	|                       |                       | definition of whether |
	|                       |                       | the requirement shall |
	|                       |                       | be met, should be     |
	|                       |                       | met, or may be met.   |
	+-----------------------+-----------------------+-----------------------+
	|                       | Rationale             | Statement of why the  |
	|                       |                       | requirement exists.   |
	+-----------------------+-----------------------+-----------------------+
	|                       | Acceptance criteria   | The parameters that   |
	|                       |                       | will be fulfilled if  |
	|                       |                       | the requirement is    |
	|                       |                       | being met, together   |
	|                       |                       | with the tests that   |
	|                       |                       | will be carried out   |
	|                       |                       | to assess the state   |
	|                       |                       | of the parameters.    |
	+-----------------------+-----------------------+-----------------------+
	| Actor                 | # FTEs                | Estimated number of   |
	|                       |                       | FTEs that operate as  |
	|                       |                       | this actor.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Actor goal            | Objectives that this  |
	|                       |                       | actor has, in general |
	|                       |                       | terms.                |
	+-----------------------+-----------------------+-----------------------+
	|                       | Actor tasks           | Tasks that this actor |
	|                       |                       | performs, in general  |
	|                       |                       | terms.                |
	+-----------------------+-----------------------+-----------------------+
	| Business Service      | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the business       |
	|                       | date                  | service is a          |
	|                       |                       | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Contract              | Behavior              | Functional behavior   |
	|                       | characteristics       | to be supported       |
	|                       |                       | within the scope of   |
	|                       |                       | the contract.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Service name "caller" | Consuming service.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Service name "called" | Providing service.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Service quality       | Non-functional        |
	|                       | characteristics       | behavior to be        |
	|                       |                       | supported within the  |
	|                       |                       | scope of the          |
	|                       |                       | contract.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Availability          | Degree to which       |
	|                       | characteristics       | something is          |
	|                       |                       | available for use.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Service times         | Hours during which    |
	|                       |                       | the service must be   |
	|                       |                       | available.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Manageability         | Ability to gather     |
	|                       | characteristics       | information about the |
	|                       |                       | state of something    |
	|                       |                       | and control it.       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Serviceability        | Ability to identify   |
	|                       | characteristics       | problems and take     |
	|                       |                       | corrective action,    |
	|                       |                       | such as to repair or  |
	|                       |                       | upgrade a component   |
	|                       |                       | in a running system.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Performance           | Ability of a          |
	|                       | characteristics       | component to perform  |
	|                       |                       | its tasks in an       |
	|                       |                       | appropriate time.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Response requirements | Response times that   |
	|                       |                       | the service provider  |
	|                       |                       | must meet for         |
	|                       |                       | particular            |
	|                       |                       | operations.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Reliability           | Resistance to         |
	|                       | characteristics       | failure.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Quality of            | Contracted            |
	|                       | information required  | requirements on       |
	|                       |                       | accuracy and          |
	|                       |                       | completeness of       |
	|                       |                       | information.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Contract control      | Level of governance   |
	|                       | requirements          | and enforcement       |
	|                       |                       | applied to the        |
	|                       |                       | contractual           |
	|                       |                       | parameters for        |
	|                       |                       | overall service.      |
	+-----------------------+-----------------------+-----------------------+
	|                       | Result control        | Measures in place to  |
	|                       | requirements          | ensure that each      |
	|                       |                       | service request meets |
	|                       |                       | contracted criteria.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Recoverability        | Ability to restore a  |
	|                       | characteristics       | system to a working   |
	|                       |                       | state after an        |
	|                       |                       | interruption.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Locatability          | Ability of a system   |
	|                       | characteristics       | to be found when      |
	|                       |                       | needed.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Security              | Ability of a system   |
	|                       | characteristics       | to prevent            |
	|                       |                       | unauthorized access   |
	|                       |                       | to functions and      |
	|                       |                       | data.                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | Privacy               | Protection of data    |
	|                       | characteristics       | from unauthorized     |
	|                       |                       | access.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Integrity             | Ability of a system   |
	|                       | characteristics       | to ensure that data   |
	|                       |                       | has not been          |
	|                       |                       | corrupted.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Credibility           | Ability of a system   |
	|                       | characteristics       | to ensure that the    |
	|                       |                       | service request       |
	|                       |                       | originates from an    |
	|                       |                       | authorized source.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Localization          | Ability of a service  |
	|                       | characteristics       | to support localized  |
	|                       |                       | variants for          |
	|                       |                       | different consumer    |
	|                       |                       | groups.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Internationalization  | Ability of a service  |
	|                       | characteristics       | to support            |
	|                       |                       | international         |
	|                       |                       | variations in         |
	|                       |                       | business logic and    |
	|                       |                       | data representation   |
	|                       |                       | (such as character    |
	|                       |                       | set).                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | Interoperability      | Ability of the        |
	|                       | characteristics       | service to            |
	|                       |                       | interoperate with     |
	|                       |                       | different technical   |
	|                       |                       | environments, inside  |
	|                       |                       | and outside of the    |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Scalability           | Ability of the        |
	|                       | characteristics       | service to grow or    |
	|                       |                       | shrink its            |
	|                       |                       | performance or        |
	|                       |                       | capacity              |
	|                       |                       | appropriately to the  |
	|                       |                       | demands of the        |
	|                       |                       | environment in which  |
	|                       |                       | it operates.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Portability           | Of data, people,      |
	|                       | characteristics       | applications, and     |
	|                       |                       | components.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Extensibility         | Ability to accept new |
	|                       | characteristics       | functionality.        |
	+-----------------------+-----------------------+-----------------------+
	|                       | Capacity              | Contracted capacity   |
	|                       | characteristics       | of the service        |
	|                       |                       | provider to meet      |
	|                       |                       | requests.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Throughput            | Required throughput   |
	|                       |                       | capacity.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Throughput period     | Time period needed to |
	|                       |                       | deliver throughput    |
	|                       |                       | capacity.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Growth                | Expected future       |
	|                       |                       | growth rate of        |
	|                       |                       | service request.      |
	+-----------------------+-----------------------+-----------------------+
	|                       | Growth period         | Time period needed to |
	|                       |                       | reach the expected    |
	|                       |                       | growth rate.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Peak profile short    | Short-term profile of |
	|                       | term                  | peak service traffic. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Peak profile long     | Long-term profile of  |
	|                       | term                  | peak service traffic. |
	+-----------------------+-----------------------+-----------------------+
	| Control               | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Driver                | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Event                 | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Function              | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Goal                  | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Measure               | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Objective             | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Organization Unit     | Headcount             | Number of FTEs        |
	|                       |                       | working within the    |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	| Process               | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Process criticality   | Criticality of this   |
	|                       |                       | process to business   |
	|                       |                       | operations.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Manual or automated   | Whether this process  |
	|                       |                       | is supported by IT or |
	|                       |                       | is a manual process.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Process volumetrics   | Data on frequency of  |
	|                       |                       | process execution.    |
	+-----------------------+-----------------------+-----------------------+
	| Product               | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Role                  | Estimated number of   | This metamodel entity |
	|                       | FTEs that operate in  | has only basic        |
	|                       | this Role             | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Service Quality       | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Service               | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Application Component | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Application Service   | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Logical Application   | Standards class       | Non-Standard,         |
	| Component             |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Physical Application  | Lifecycle status      | Proposed, In          |
	| Component             |                       | Development, Live,    |
	|                       |                       | Phasing Out, Retired. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Initial live date     | Date when the first   |
	|                       |                       | release of the        |
	|                       |                       | application was/will  |
	|                       |                       | be released into      |
	|                       |                       | production.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Date of last release  | Date when the last    |
	|                       |                       | release of the        |
	|                       |                       | application was       |
	|                       |                       | released into         |
	|                       |                       | production.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Date of next release  | Date when the next    |
	|                       |                       | release of the        |
	|                       |                       | application will be   |
	|                       |                       | released into         |
	|                       |                       | production.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retirement date       | Date when the         |
	|                       |                       | application was/will  |
	|                       |                       | be retired.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Availability          | Degree to which       |
	|                       | characteristics       | something is          |
	|                       |                       | available for use.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Service times         | Hours during which    |
	|                       |                       | the application must  |
	|                       |                       | be available.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Manageability         | Ability to gather     |
	|                       | characteristics       | information about the |
	|                       |                       | state of something    |
	|                       |                       | and control it.       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Serviceability        | Ability to identify   |
	|                       | characteristics       | problems and take     |
	|                       |                       | corrective action,    |
	|                       |                       | such as to repair or  |
	|                       |                       | upgrade a component   |
	|                       |                       | in a running system.  |
	+-----------------------+-----------------------+-----------------------+
	|                       | Performance           | Ability of a          |
	|                       | characteristics       | component to perform  |
	|                       |                       | its tasks in an       |
	|                       |                       | appropriate time.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Reliability           | Resistance to         |
	|                       | characteristics       | failure.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Recoverability        | Ability to restore a  |
	|                       | characteristics       | system to a working   |
	|                       |                       | state after an        |
	|                       |                       | interruption.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Locatability          | Ability of a system   |
	|                       | characteristics       | to be found when      |
	|                       |                       | needed.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Security              | Ability of a system   |
	|                       | characteristics       | to prevent            |
	|                       |                       | unauthorized access   |
	|                       |                       | to functions and      |
	|                       |                       | data.                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | Privacy               | Protection of data    |
	|                       | characteristics       | from unauthorized     |
	|                       |                       | access.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Integrity             | Ability of a system   |
	|                       | characteristics       | to ensure that data   |
	|                       |                       | has not been          |
	|                       |                       | corrupted.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Credibility           | Ability of a system   |
	|                       | characteristics       | to ensure that the    |
	|                       |                       | service request       |
	|                       |                       | originates from an    |
	|                       |                       | authorized source.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Localization          | Ability of a service  |
	|                       | characteristics       | to support localized  |
	|                       |                       | variants for          |
	|                       |                       | different consumer    |
	|                       |                       | groups.               |
	+-----------------------+-----------------------+-----------------------+
	|                       | Internationalization  | Ability of a service  |
	|                       | characteristics       | to support            |
	|                       |                       | international         |
	|                       |                       | variations in         |
	|                       |                       | business logic and    |
	|                       |                       | data representation   |
	|                       |                       | (such as character    |
	|                       |                       | set).                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | Interoperability      | Ability of the        |
	|                       | characteristics       | service to            |
	|                       |                       | interoperate with     |
	|                       |                       | different technical   |
	|                       |                       | environments, inside  |
	|                       |                       | and outside of the    |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Scalability           | Ability of the        |
	|                       | characteristics       | service to grow or    |
	|                       |                       | shrink its            |
	|                       |                       | performance or        |
	|                       |                       | capacity              |
	|                       |                       | appropriately to the  |
	|                       |                       | demands of the        |
	|                       |                       | environment in which  |
	|                       |                       | it operates.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Portability           | Of data, people,      |
	|                       | characteristics       | applications, and     |
	|                       |                       | components.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Extensibility         | Ability to accept new |
	|                       | characteristics       | functionality.        |
	+-----------------------+-----------------------+-----------------------+
	|                       | Capacity              | Contracted capacity   |
	|                       | characteristics       | of the service        |
	|                       |                       | provider to meet      |
	|                       |                       | requests.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Throughput            | Required throughput   |
	|                       |                       | capacity.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Throughput period     | Time period needed to |
	|                       |                       | deliver throughput    |
	|                       |                       | capacity.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Growth                | Expected future       |
	|                       |                       | growth rate of        |
	|                       |                       | service request.      |
	+-----------------------+-----------------------+-----------------------+
	|                       | Growth period         | Time period needed to |
	|                       |                       | reach the expected    |
	|                       |                       | growth rate.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Peak profile short    | Short-term profile of |
	|                       | term                  | peak service traffic. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Peak profile long     | Long-term profile of  |
	|                       | term                  | peak service traffic. |
	+-----------------------+-----------------------+-----------------------+
	| Data Entity           | Category              | The following         |
	|                       |                       | categories of data    |
	|                       |                       | entity apply:         |
	|                       |                       | Message, Internally   |
	|                       |                       | Stored Entity.        |
	+-----------------------+-----------------------+-----------------------+
	|                       | Privacy               | Level of restriction  |
	|                       | classification        | placed on access to   |
	|                       |                       | the data.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retention             | Level of retention to |
	|                       | classification        | be placed on the      |
	|                       |                       | data.                 |
	+-----------------------+-----------------------+-----------------------+
	| Logical Data          | Standards class       | Non-Standard,         |
	| Component             |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Physical Data         | Standards class       | Non-Standard,         |
	| Component             |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	| Logical Technology    | Standards class       | Non-Standard,         |
	| Component             |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Category              | Logical Technology    |
	|                       |                       | Components are        |
	|                       |                       | categorized according |
	|                       |                       | to the defined        |
	|                       |                       | taxonomy (such as the |
	|                       |                       | TOGAF Technical       |
	|                       |                       | Reference Model       |
	|                       |                       | (TRM)), adapted to    |
	|                       |                       | meet the needs of an  |
	|                       |                       | individual            |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	| Physical Technology   | Standards class       | Non-Standard,         |
	| Component             |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Standard creation     | If the product is a   |
	|                       | date                  | standard, when the    |
	|                       |                       | standard was created. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last standard review  | Last date that the    |
	|                       | date                  | standard was          |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Next standard review  | Next date for the     |
	|                       | date                  | standard to be        |
	|                       |                       | reviewed.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Retire date           | Date when the         |
	|                       |                       | standard was/will be  |
	|                       |                       | retired.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Category              | Physical Technology   |
	|                       |                       | Components are        |
	|                       |                       | categorized according |
	|                       |                       | to the defined        |
	|                       |                       | taxonomy (such as the |
	|                       |                       | TOGAF TRM), adapted   |
	|                       |                       | to meet the needs of  |
	|                       |                       | an individual         |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Product name          | Name of the product   |
	|                       |                       | making up the         |
	|                       |                       | technology component. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Module name           | Module, or other      |
	|                       |                       | sub-product, name     |
	|                       |                       | making up the         |
	|                       |                       | technology component. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Vendor                | Vendor providing the  |
	|                       |                       | technology component. |
	+-----------------------+-----------------------+-----------------------+
	|                       | Version               | Version of the        |
	|                       |                       | product making up the |
	|                       |                       | technology component. |
	+-----------------------+-----------------------+-----------------------+
	| Technology Service    | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Category              | Technology Services   |
	|                       |                       | are categorized       |
	|                       |                       | according to the      |
	|                       |                       | defined taxonomy      |
	|                       |                       | (such as the TOGAF    |
	|                       |                       | TRM), adapted to meet |
	|                       |                       | the needs of an       |
	|                       |                       | individual            |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	| Business Capability   | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Technology Component  | Standards class       | Non-Standard,         |
	|                       |                       | Proposed Standard,    |
	|                       |                       | Provisional Standard, |
	|                       |                       | Standard, Phasing-Out |
	|                       |                       | Standard, Retired     |
	|                       |                       | Standard.             |
	+-----------------------+-----------------------+-----------------------+
	| Course of Action      | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Value Stream          | No additional         | This metamodel entity |
	|                       | attributes            | has only basic        |
	|                       |                       | attributes.           |
	+-----------------------+-----------------------+-----------------------+
	| Work Package          | Category              | The following         |
	|                       |                       | categories of work    |
	|                       |                       | package apply: Work   |
	|                       |                       | Package, Work Stream, |
	|                       |                       | Project, Program,     |
	|                       |                       | Portfolio.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Capability delivered  | Describes the         |
	|                       |                       | contribution this     |
	|                       |                       | work package makes to |
	|                       |                       | capability delivery.  |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.6.1_Business_Principles "2.6.1 Business Principles"
	
	Principle 1: Primacy of Principles
	
	Statement:
	
	These principles of information management apply to all organizations
	within the enterprise.
	
	Rationale:
	
	The only way we can provide a consistent and measurable level of quality
	information to decision-makers is if all organizations abide by the
	principles.
	
	Implications:
	
	-   Without this principle, exclusions, favoritism, and inconsistency
	    would rapidly undermine the management of information
	-   Information management initiatives will not begin until they are
	    examined for compliance with the principles
	-   A conflict with a principle will be resolved by changing the
	    framework of the initiative
	
	Principle 2: Maximize Benefit to the Enterprise
	
	Statement:
	
	Information management decisions are made to provide maximum benefit to
	the enterprise as a whole.
	
	Rationale:
	
	This principle embodies "service above self". Decisions made from an
	enterprise-wide perspective have greater long-term value than decisions
	made from any particular organizational perspective. Maximum return on
	investment requires information management decisions to adhere to
	enterprise-wide drivers and priorities. No minority group will detract
	from the benefit of the whole. However, this principle will not preclude
	any minority group from getting its job done.
	
	Implications:
	
	-   Achieving maximum enterprise-wide benefit will require changes in
	    the way we plan and manage information — technology alone will not
	    bring about this change
	
	-   Some organizations may have to concede their own preferences for the
	    greater benefit of the entire enterprise
	
	-   Where feasible, application development priorities must be
	    established by the entire enterprise for the entire enterprise
	
	-   Applications components should be shared across organizational
	    boundaries
	
	-   Information management initiatives should be conducted in accordance
	    with the enterprise plan
	
	    Individual organizations should pursue information management
	    initiatives which conform to the blueprints and priorities
	    established by the enterprise. The plan will be changed as needed.
	
	-   As needs arise, priorities must be adjusted; a forum with
	    comprehensive enterprise representation should make these decisions
	
	Principle 3: Information Management is Everybody's Business
	
	Statement:
	
	All organizations in the enterprise participate in information
	management decisions needed to accomplish business objectives.
	
	Rationale:
	
	Information users are the key stakeholders, or customers, in the
	application of technology to address a business need. In order to ensure
	information management is aligned with the business, all organizations
	in the enterprise must be involved in all aspects of the information
	environment. The business experts from across the enterprise and the
	technical staff responsible for developing and sustaining the
	information environment need to come together as a team to jointly
	define the goals and objectives of IT.
	
	Implications:
	
	-   To operate as a team, every stakeholder, or customer, will need to
	    accept responsibility for developing the information environment
	-   Commitment of resources will be required to implement this principle
	
	Principle 4: Business Continuity
	
	Statement:
	
	Enterprise operations are maintained in spite of system interruptions.
	
	Rationale:
	
	As system operations become more pervasive, we become more dependent on
	them; therefore, we must consider the reliability of such systems
	throughout their design and use. Business premises throughout the
	enterprise must be provided with the capability to continue operations
	regardless of external events. Hardware failure, natural disasters, and
	data corruption should not be allowed to disrupt or stop enterprise
	activities. The enterprise must be capable of operating on alternative
	information delivery mechanisms.
	
	Implications:
	
	-   Dependency on shared system applications mandates that the risks of
	    business interruption must be established in advance and managed
	
	    Management includes but is not limited to periodic reviews, testing
	    for vulnerability and exposure, or designing mission-critical
	    services to ensure business continuity through redundant or
	    alternative capabilities.
	
	-   Recoverability, redundancy, and maintainability should be addressed
	    at the time of design
	
	-   Applications must be assessed for criticality and impact on the
	    enterprise mission, in order to determine what level of continuity
	    is required and what corresponding recovery plan is necessary
	
	Principle 5: Common Use Applications
	
	Statement:
	
	Development of applications used across the enterprise is preferred over
	the development of similar or duplicative applications which are only
	provided to a particular organization.
	
	Rationale:
	
	Duplicative capability is expensive and proliferates conflicting data.
	
	Implications:
	
	-   Organizations which depend on a capability which does not serve the
	    entire enterprise must change over to the replacement
	    enterprise-wide capability; this will require establishment of and
	    adherence to a policy requiring this
	
	-   Organizations will not be allowed to develop capabilities for their
	    own use which are similar/duplicative of enterprise-wide
	    capabilities; in this way, expenditures of scarce resources to
	    develop essentially the same capability in marginally different ways
	    will be reduced
	
	-   Data and information used to support enterprise decision-making will
	    be standardized to a much greater extent than previously
	
	    This is because the smaller, organizational capabilities which
	    produced different data (which was not shared among other
	    organizations) will be replaced by enterprise-wide capabilities. The
	    impetus for adding to the set of enterprise-wide capabilities may
	    well come from an organization making a convincing case for the
	    value of the data/information previously produced by its
	    organizational capability, but the resulting capability will become
	    part of the enterprise-wide system, and the data it produces will be
	    shared across the enterprise.
	
	Principle 6: Service Orientation
	
	Statement:
	
	The architecture is based on a design of services which mirror
	real-world business activities comprising the enterprise (or
	inter-enterprise) business processes.
	
	Rationale:
	
	Service orientation delivers enterprise agility and Boundaryless
	Information Flow.
	
	Implications:
	
	-   Service representation utilizes business descriptions to provide
	    context (i.e., business process, goal, rule, policy, service
	    interface, and service component) and implements services using
	    service orchestration
	-   Service orientation places unique requirements on the
	    infrastructure, and implementations should use open standards to
	    realize interoperability and location transparency
	-   Implementations are environment-specific; they are constrained or
	    enabled by context and must be described within that context
	-   Strong governance of service representation and implementation is
	    required
	-   A "Litmus Test", which determines a "good service", is required
	
	Principle 7: Compliance with Law
	
	Statement:
	
	Enterprise information management processes comply with all relevant
	laws, policies, and regulations.
	
	Rationale:
	
	Enterprise policy is to abide by laws, policies, and regulations. This
	will not preclude business process improvements that lead to changes in
	policies and regulations.
	
	Implications:
	
	-   The enterprise must be mindful to comply with laws, regulations, and
	    external policies regarding the collection, retention, and
	    management of data
	
	-   Education and access to the rules
	
	    Efficiency, need, and common sense are not the only drivers. Changes
	    in the law and changes in regulations may drive changes in our
	    processes or applications.
	
	Principle 8: IT Responsibility
	
	Statement:
	
	The IT organization is responsible for owning and implementing IT
	processes and infrastructure that enable solutions to meet user-defined
	requirements for functionality, service levels, cost, and delivery
	timing.
	
	Rationale:
	
	Effectively align expectations with capabilities and costs so that all
	projects are cost-effective. Efficient and effective solutions have
	reasonable costs and clear benefits.
	
	Implications:
	
	-   A process must be created to prioritize projects
	-   The IT function must define processes to manage business unit
	    expectations
	-   Data, application, and technology models must be created to enable
	    integrated quality solutions and to maximize results
	
	Principle 9: Protection of Intellectual Property
	
	Statement:
	
	The enterprise's Intellectual Property (IP) must be protected. This
	protection must be reflected in the IT architecture, implementation, and
	governance processes.
	
	Rationale:
	
	A major part of an enterprise's IP is hosted in the IT domain.
	
	Implications:
	
	-   While protection of IP assets is everybody's business, much of the
	    actual protection is implemented in the IT domain — even trust in
	    non-IT processes can be managed by IT processes (email, mandatory
	    notes, etc.)
	-   A security policy, governing human and IT actors, will be required
	    that can substantially improve protection of IP; this must be
	    capable of both avoiding compromises and reducing liabilities
	-   Resources on such policies can be found at the SANS Institute (refer
	    to www.sans.org/security-resources/policies)
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.6.2_Data_Principles "2.6.2 Data Principles"
	
	Principle 10: Data is an Asset
	
	Statement:
	
	Data is an asset that has value to the enterprise and is managed
	accordingly.
	
	Rationale:
	
	Data is a valuable corporate resource; it has real, measurable value. In
	simple terms, the purpose of data is to aid decision-making. Accurate,
	timely data is critical to accurate, timely decisions. Most corporate
	assets are carefully managed, and data is no exception. Data is the
	foundation of our decision-making, so we must also carefully manage data
	to ensure that we know where it is, can rely upon its accuracy, and can
	obtain it when and where we need it.
	
	Implications:
	
	-   This is one of three closely-related principles regarding data: data
	    is an asset; data is shared; and data is easily accessible
	
	    The implication is that there is an education task to ensure that
	    all organizations within the enterprise understand the relationship
	    between value of data, sharing of data, and accessibility to data.
	
	-   Stewards must have the authority and means to manage the data for
	    which they are accountable
	
	-   We must make the cultural transition from "data ownership" thinking
	    to "data stewardship" thinking
	
	-   The role of data steward is critical because obsolete, incorrect, or
	    inconsistent data could be passed to enterprise personnel and
	    adversely affect decisions across the enterprise
	
	-   Part of the role of data steward, who manages the data, is to ensure
	    data quality
	
	    Procedures must be developed and used to prevent and correct errors
	    in the information and to improve those processes that produce
	    flawed information. Data quality will need to be measured and steps
	    taken to improve data quality — it is probable that policy and
	    procedures will need to be developed for this as well.
	
	-   A forum with comprehensive enterprise-wide representation should
	    decide on process changes suggested by the steward
	
	-   Since data is an asset of value to the entire enterprise, data
	    stewards accountable for properly managing the data must be assigned
	    at the enterprise level
	
	Principle 11: Data is Shared
	
	Statement:
	
	Users have access to the data necessary to perform their duties;
	therefore, data is shared across enterprise functions and organizations.
	
	Rationale:
	
	Timely access to accurate data is essential to improving the quality and
	efficiency of enterprise decision-making. It is less costly to maintain
	timely, accurate data in a single application, and then share it, than
	it is to maintain duplicative data in multiple applications. The
	enterprise holds a wealth of data, but it is stored in hundreds of
	incompatible stovepipe databases. The speed of data collection,
	creation, transfer, and assimilation is driven by the ability of the
	organization to efficiently share these islands of data across the
	organization.
	
	Shared data will result in improved decisions since we will rely on
	fewer (ultimately one virtual) sources of more accurate and timely
	managed data for all of our decision-making. Electronically shared data
	will result in increased efficiency when existing data entities can be
	used, without re-keying, to create new entities.
	
	Implications:
	
	-   This is one of three closely-related principles regarding data: data
	    is an asset; data is shared; and data is easily accessible
	
	    The implication is that there is an education task to ensure that
	    all organizations within the enterprise understand the relationship
	    between value of data, sharing of data, and accessibility to data.
	
	-   To enable data sharing we must develop and abide by a common set of
	    policies, procedures, and standards governing data management and
	    access for both the short and the long term
	
	-   For the short term, to preserve our significant investment in legacy
	    systems, we must invest in software capable of migrating legacy
	    system data into a shared data environment
	
	-   We will also need to develop standard data models, data elements,
	    and other metadata that defines this shared environment and develop
	    a repository system for storing this metadata to make it accessible
	
	-   For the long term, as legacy systems are replaced, we must adopt and
	    enforce common data access policies and guidelines for new
	    application developers to ensure that data in new applications
	    remains available to the shared environment and that data in the
	    shared environment can continue to be used by the new applications
	
	-   For both the short term and the long term we must adopt common
	    methods and tools for creating, maintaining, and accessing the data
	    shared across the enterprise
	
	-   Data sharing will require a significant cultural change
	
	-   This principle of data sharing will continually "bump up against"
	    the principle of data security — under no circumstances will the
	    data sharing principle cause confidential data to be compromised
	
	-   Data made available for sharing will have to be relied upon by all
	    users to execute their respective tasks
	
	    This will ensure that only the most accurate and timely data is
	    relied upon for decision-making. Shared data will become the
	    enterprise-wide "virtual single source" of data.
	
	Principle 12: Data is Accessible
	
	Statement:
	
	Data is accessible for users to perform their functions.
	
	Rationale:
	
	Wide access to data leads to efficiency and effectiveness in
	decision-making, and affords a timely response to information requests
	and service delivery. Using information must be considered from an
	enterprise perspective to allow access by a wide variety of users. Staff
	time is saved and consistency of data is improved.
	
	Implications:
	
	-   This is one of three closely-related principles regarding data: data
	    is an asset; data is shared; and data is easily accessible
	
	    The implication is that there is an education task to ensure that
	    all organizations within the enterprise understand the relationship
	    between value of data, sharing of data, and accessibility to data.
	
	-   Accessibility involves the ease with which users obtain information
	
	-   The way information is accessed and displayed must be sufficiently
	    adaptable to meet a wide range of enterprise users and their
	    corresponding methods of access
	
	-   Access to data does not constitute understanding of the data —
	    personnel should take caution not to misinterpret information
	
	-   Access to data does not necessarily grant the user access rights to
	    modify or disclose the data
	
	    This will require an education process and a change in the
	    organizational culture, which currently supports a belief in
	    "ownership" of data by functional units.
	
	Principle 13: Data Trustee
	
	Statement:
	
	Each data element has a trustee accountable for data quality.
	
	Rationale:
	
	One of the benefits of an architected environment is the ability to
	share data (e.g., text, video, sound, etc.) across the enterprise. As
	the degree of data sharing grows and business units rely upon common
	information, it becomes essential that only the data trustee makes
	decisions about the content of data. Since data can lose its integrity
	when it is entered multiple times, the data trustee will have sole
	responsibility for data entry which eliminates redundant human effort
	and data storage resources.
	
	Note:
	    A trustee is different than a steward — a trustee is responsible for
	    accuracy and currency of the data, while responsibilities of a
	    steward may be broader and include data standardization and
	    definition tasks.
	
	Implications:
	
	-   Real trusteeship dissolves the data "ownership" issues and allows
	    the data to be available to meet all users' needs
	
	    This implies that a cultural change from data "ownership" to data
	    "trusteeship" may be required.
	
	-   The data trustee will be responsible for meeting quality
	    requirements levied upon the data for which the trustee is
	    accountable
	
	-   It is essential that the trustee has the ability to provide user
	    confidence in the data based upon attributes such as "data source"
	
	-   It is essential to identify the true source of the data in order
	    that the data authority can be assigned this trustee responsibility
	
	    This does not mean that classified sources will be revealed nor does
	    it mean the source will be the trustee.
	
	-   Information should be captured electronically once and immediately
	    validated as close to the source as possible
	
	    Quality control measures must be implemented to ensure the integrity
	    of the data.
	
	-   As a result of sharing data across the enterprise, the trustee is
	    accountable and responsible for the accuracy and currency of their
	    designated data element(s) and, subsequently, must then recognize
	    the importance of this trusteeship responsibility
	
	Principle 14: Common Vocabulary and Data Definitions
	
	Statement:
	
	Data is defined consistently throughout the enterprise, and the
	definitions are understandable and available to all users.
	
	Rationale:
	
	The data that will be used in the development of applications must have
	a common definition throughout the Headquarters to enable sharing of
	data. A common vocabulary will facilitate communications and enable
	dialog to be effective. In addition, it is required to interface systems
	and exchange data.
	
	Implications:
	
	-   We are lulled into thinking that this issue is adequately addressed
	    because there are people with "data administration" job titles and
	    forums with charters implying responsibility
	
	    Significant additional energy and resources must be committed to
	    this task. It is key to the success of efforts to improve the
	    information environment. This is separate from but related to the
	    issue of data element definition, which is addressed by a broad
	    community — this is more like a common vocabulary and definition.
	
	-   The enterprise must establish the initial common vocabulary for the
	    business; the definitions will be used uniformly throughout the
	    enterprise
	
	-   Whenever a new data definition is required, the definition effort
	    will be co-ordinated and reconciled with the corporate "glossary" of
	    data descriptions
	
	    The enterprise data administrator will provide this co-ordination.
	
	-   Ambiguities resulting from multiple parochial definitions of data
	    must give way to accepted enterprise-wide definitions and
	    understanding
	
	-   Multiple data standardization initiatives need to be co-ordinated
	
	-   Functional data administration responsibilities must be assigned
	
	Principle 15: Data Security
	
	Statement:
	
	Data is protected from unauthorized use and disclosure. In addition to
	the traditional aspects of national security classification, this
	includes, but is not limited to, protection of pre-decisional,
	sensitive, source selection-sensitive, and proprietary information.
	
	Rationale:
	
	Open sharing of information and the release of information via relevant
	legislation must be balanced against the need to restrict the
	availability of classified, proprietary, and sensitive information.
	
	Existing laws and regulations require the safeguarding of national
	security and the privacy of data, while permitting free and open access.
	Pre-decisional (work-in-progress, not yet authorized for release)
	information must be protected to avoid unwarranted speculation,
	misinterpretation, and inappropriate use.
	
	Implications:
	
	-   Aggregation of data, both classified and not, will create a large
	    target requiring review and de-classification procedures to maintain
	    appropriate control
	
	    Data owners and/or functional users must determine whether the
	    aggregation results in an increased classification level.
	    Appropriate policy and procedures will be needed to handle this
	    review and de-classification. Access to information based on a
	    need-to-know policy will force regular reviews of the body of
	    information.
	
	-   The current practice of having separate systems to contain different
	    classifications needs to be rethought
	
	    Is there a software solution to separating classified and
	    unclassified data? The current hardware solution is unwieldy,
	    inefficient, and costly. It is more expensive to manage unclassified
	    data on a classified system. Currently, the only way to combine the
	    two is to place the unclassified data on the classified system,
	    where it must remain.
	
	-   In order to adequately provide access to open information while
	    maintaining secure information, security needs must be identified
	    and developed at the data level, not the application level
	
	-   Data security safeguards can be put in place to restrict access to
	    "view only" or "never see"
	
	    Sensitivity labeling for access to pre-decisional, decisional,
	    classified, sensitive, or proprietary information must be
	    determined.
	
	-   Security must be designed into data elements from the beginning; it
	    cannot be added later
	
	    Systems, data, and technologies must be protected from unauthorized
	    access and manipulation. Information at Headquarters must be
	    safeguarded against inadvertent or unauthorized alteration,
	    sabotage, disaster, or disclosure.
	
	-   New policies are needed on managing duration of protection for
	    pre-decisional information and other works-in-progress, in
	    consideration of content freshness
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.6.3_Application_Principles "2.6.3 Application Principles"
	
	Principle 16: Technology Independence
	
	Statement:
	
	Applications are independent of specific technology choices and
	therefore can operate on a variety of technology platforms.
	
	Rationale:
	
	Independence of applications from the underlying technology allows
	applications to be developed, upgraded, and operated in the most
	cost-effective and timely way. Otherwise technology, which is subject to
	continual obsolescence and vendor dependence, becomes the driver rather
	than the user requirements themselves.
	
	Realizing that every decision made with respect to IT makes us dependent
	on that technology, the intent of this principle is to ensure that
	Application Software is not dependent on specific hardware and operating
	systems software.
	
	Implications:
	
	-   This principle will require standards which support portability
	-   For Commercial Off-The-Shelf (COTS) and Government Off-The-Shelf
	    (GOTS) applications, there may be limited current choices, as many
	    of these applications are technology and platform-dependent
	-   Subsystem interfaces will need to be developed to enable legacy
	    applications to interoperate with applications and operating
	    environments developed under the Enterprise Architecture
	-   Middleware should be used to decouple applications from specific
	    software solutions
	-   As an example, this principle could lead to use of Java®, and future
	    Java-like protocols, which give a high degree of priority to
	    platform-independence
	
	Principle 17: Ease-of-Use
	
	Statement:
	
	Applications are easy to use. The underlying technology is transparent
	to users, so they can concentrate on tasks at hand.
	
	Rationale:
	
	The more a user has to understand the underlying technology, the less
	productive that user is. Ease-of-use is a positive incentive for use of
	applications. It encourages users to work within the integrated
	information environment instead of developing isolated systems to
	accomplish the task outside of the enterprise's integrated information
	environment. Most of the knowledge required to operate one system will
	be similar to others. Training is kept to a minimum, and the risk of
	using a system improperly is low.
	
	Using an application should be as intuitive as driving a different car.
	
	Implications:
	
	-   Applications will be required to have a common "look-and-feel" and
	    support ergonomic requirements; hence, the common look-and-feel
	    standard must be designed and usability test criteria must be
	    developed
	
	-   Guidelines for user interfaces should not be constrained by narrow
	    assumptions about user location, language, systems training, or
	    physical capability
	
	    Factors such as linguistics, customer physical infirmities (visual
	    acuity, ability to use keyboard/mouse), and proficiency in the use
	    of technology have broad ramifications in determining the
	    ease-of-use of an application.
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.6.4_Technology_Principles "2.6.4 Technology Principles"
	
	Principle 18: Requirements-Based Change
	
	Statement:
	
	Only in response to business needs are changes to applications and
	technology made.
	
	Rationale:
	
	This principle will foster an atmosphere where the information
	environment changes in response to the needs of the business, rather
	than having the business change in response to IT changes. This is to
	ensure that the purpose of the information support — the transaction of
	business — is the basis for any proposed change.
	
	Unintended effects on business due to IT changes will be minimized.
	
	A change in technology may provide an opportunity to improve the
	business process and, hence, change business needs.
	
	Implications:
	
	-   Changes in implementation will follow full examination of the
	    proposed changes using the Enterprise Architecture
	
	-   There is no funding for a technical improvement or system
	    development unless a documented business need exists
	
	-   Change management processes conforming to this principle will be
	    developed and implemented
	
	-   This principle may bump up against the responsive change principle
	
	    We must ensure the requirements documentation process does not
	    hinder responsive change to meet legitimate business needs. The
	    purpose of this principle is to keep the focus on business, not
	    technology needs — responsive change is also a business need.
	
	Principle 19: Responsive Change Management
	
	Statement:
	
	Changes to the enterprise information environment are implemented in a
	timely manner.
	
	Rationale:
	
	If people are to be expected to work within the enterprise information
	environment, that information environment must be responsive to their
	needs.
	
	Implications:
	
	-   Processes for managing and implementing change must be developed
	    that do not create delays
	-   A user who feels a need for change will need to connect with a
	    "business expert" to facilitate explanation and implementation of
	    that need
	-   If changes are going to be made, the architecture must be kept
	    updated
	-   Adopting this principle might require additional resources
	-   This will conflict with other principles (e.g., maximum
	    enterprise-wide benefit, enterprise-wide applications, etc.)
	
	Principle 20: Control Technical Diversity
	
	Statement:
	
	Technological diversity is controlled to minimize the non-trivial cost
	of maintaining expertise in and connectivity between multiple processing
	environments.
	
	Rationale:
	
	There is a real, non-trivial cost of infrastructure required to support
	alternative technologies for processing environments. There are further
	infrastructure costs incurred to keep multiple processor constructs
	interconnected and maintained.
	
	Limiting the number of supported components will simplify
	maintainability and reduce costs.
	
	The business advantages of minimum technical diversity include: standard
	packaging of components; predictable implementation impact; predictable
	valuations and returns; redefined testing; utility status; and increased
	flexibility to accommodate technological advancements. Common technology
	across the enterprise brings the benefits of economies of scale to the
	enterprise. Technical administration and support costs are better
	controlled when limited resources can focus on this shared set of
	technology.
	
	Implications:
	
	-   Policies, standards, and procedures that govern the acquisition of
	    technology must be tied directly to this principle
	
	-   Technology choices will be constrained by the choices available
	    within the technology blueprint
	
	    Procedures for augmenting the acceptable technology set to meet
	    evolving requirements will have to be developed and put in place.
	
	-   The technology baseline is not being frozen
	
	    Technology advances are welcomed and will change the technology
	    blueprint when compatibility with the current infrastructure,
	    improvement in operational efficiency, or a required capability has
	    been demonstrated.
	
	Principle 21: Interoperability
	
	Statement:
	
	Software and hardware should conform to defined standards that promote
	interoperability for data, applications, and technology.
	
	Rationale:
	
	Standards help ensure consistency, thus improving the ability to manage
	systems and improve user satisfaction, and protect existing IT
	investments, thus maximizing return on investment and reducing costs.
	Standards for interoperability additionally help ensure support from
	multiple vendors for their products, and facilitate supply chain
	integration.
	
	Implications:
	
	-   Interoperability standards and industry standards will be followed
	    unless there is a compelling business reason to implement a
	    non-standard solution
	-   A process for setting standards, reviewing and revising them
	    periodically, and granting exceptions must be established
	-   The existing IT platforms must be identified and documented
	
snippet togaf_reference-models_digital-business-reference-model_2.6_Business_Model "2.6 Business Model"
	
	A model describing the rationale for how an enterprise creates,
	delivers, and captures value.
	
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2.6_Conclusions "2.6 Conclusions"
	
	All of these techniques are valid applications of the ADM. Combined
	together, they represent how the ADM can be used in practice. The ADM
	should always be used in an iterative process. How this process is
	exercised is dependent upon organizational factors. Particular factors
	for consideration include:
	
	-   The formality and nature of established process checkpoints within
	    the organization
	
	    Does the organization mandate that certain groups of activities are
	    carried out between checkpoints? Does the organization mandate that
	    certain activities must be finalized before other activities can be
	    carried out?
	
	-   The level of stakeholder involvement expected within the process
	
	    Are stakeholders expecting to be closely involved within the
	    development of a solution, or are they expecting to see a complete
	    set of deliverables for review and approval?
	
	-   The number of teams involved and the relationships between different
	    teams
	
	    Is the entire architecture being developed by a specific team, or is
	    there a hierarchy of teams with governance relationships between
	    them?
	
	-   The maturity of the solution area and the expected amount of rework
	    and refinement required to arrive at an acceptable solution
	
	    Can the solution be achieved in a single pass, or does it require
	    extensive proof-of-concept and prototyping work to evolve a suitable
	    outcome?
	
	-   Attitude to risk
	
	    Does the organizational culture react negatively to partially
	    complete work products being circulated? Does the organizational
	    culture require solutions to be proved in a trial environment before
	    they can be implemented for mainstream application?
	
	-   The class of engagement
	
	    What is the context for development of the Enterprise Architecture?
	
	------------------------------------------------------------------------
	
	Footnotes
	
	1. Guidance on how to use a full ADM cycle for initially establishing an
	organization's Architecture Capability is found in the TOGAF Standard —
	EA Capability and Governance.
	
	
snippet togaf_adm-techniques_2_Architecture_Principles_2.6_Example_Set_of_Architecture_Principles "2.6 Example Set of Architecture Principles"
	
	Too many principles can reduce the flexibility of the architecture. Many
	organizations prefer to define only high-level principles, and to limit
	the number to between 10 and 20.
	
	The following example illustrates both the typical content of a set of
	Architecture Principles, and the recommended format for defining them,
	as explained above.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.6_O-ISM3 "2.6 O-ISM3"
	
	The Open Information Security Management Maturity Model (O-ISM3)
	standard [9], published by The Open Group in 2011, describes a
	process-based approach towards building and operating an Information
	Security Management System (ISMS). Successful operation of the ISMS is
	generally a prerequisite for Enterprise Architectures to meet the
	security objectives established by an organization. A chapter of the
	Security Architecture Practitioners Guide will be devoted to the
	relationship between Enterprise Architecture, the TOGAF Standard, and
	ISMSs. The O-ISM3 standard defines security services as strategic,
	tactical, or operational processes, and provides a metrics-based
	approach to continuous improvement of the processes. Many of the
	services or processes described in the O-ISM3 standard are expected to
	be referenced in the Security Services Catalog Project as well.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.6_Phase_D_Technology_Architecture "2.6 Phase D: Technology Architecture"
	
	The Technology Architecture of the architecture practice should define
	technology infrastructure supporting the architecture practice.
	
snippet togaf_guides_index_2.6_Product "2.6. Product"
	
	An outcome generated by the business to be offered to customers.
	Products include materials and/or services.
	
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2.6_TOGAF_Enterprise_Metamodel_Relationships "2.6 TOGAF Enterprise Metamodel Relationships"
	
	  Source Entity                    Target Entity                    Name
	  -------------------------------- -------------------------------- ---------------------------------------
	  Actor                            Actor                            Decomposes
	  Actor                            Business Service                 Consumes
	  Actor                            Data Entity                      Supplies or consumes
	  Actor                            Event                            Generates
	  Actor                            Event                            Resolves
	  Actor                            Function                         Interacts with
	  Actor                            Function                         Performs
	  Actor                            Organization Unit                Belongs to
	  Actor                            Process                          Participates in
	  Actor                            Process                          Triggers
	  Actor                            Role                             Performs task in
	  Actor                            Value Stream                     Performs a task in
	  Application Service              Business Service                 Automates some or all of
	  Application Service              Data Entity                      Used by
	  Application Service              Logical Application Component    Is realized through
	  Application Service              Technology Service               Is served by
	  Business Capability              Business Information             Uses
	  Business Capability              Course of Action                 Is influenced by
	  Business Capability              Function                         Is delivered by
	  Business Capability              Organization Unit                Is used by
	  Business Capability              Process                          Is operationalized by
	  Business Capability              Value Stream                     Enables
	  Business Information             Business Capability              Is used by
	  Business Information             Business Service                 Used to derive
	  Business Information             Course of Action                 Is influenced by
	  Business Information             Data Entity                      Is realized by
	  Business Information             Process                          Uses
	  Business Service                 Actor                            Is provided to
	  Business Service                 Application Service              Uses
	  Business Service                 Business Information             Is derived from
	  Business Service                 Business Service Quality         Meets
	  Business Service                 Business Service                 Consumes
	  Business Service                 Business Service                 Decomposes
	  Business Service                 Contract                         Is governed and measured by
	  Business Service                 Data Entity                      Is accessed and updated through
	  Business Service                 Event                            Resolves
	  Business Service                 Function                         Provides governed interface to access
	  Business Service                 Logical Technology Component     Is implemented on
	  Business Service                 Organization Unit                Is owned and governed by
	  Business Service                 Process                          Is realized by
	  Business Service                 Process                          Supports
	  Capability                       Work Package                     Is delivered by
	  Contract                         Business Service                 Governs, measures
	  Contract                         Service Quality                  Meets
	  Control                          Process                          Ensures correct operation of
	  Course of Action                 Business Capability              Influences
	  Course of Action                 Business Information             Influences
	  Course of Action                 Function                         Influences
	  Course of Action                 Goal                             Realizes
	  Course of Action                 Organization Unit                Influences
	  Course of Action                 Product                          Influences
	  Course of Action                 Value Stream                     Influences
	  Data Entity                      Actor                            Is supplied or consumed by
	  Data Entity                      Application Service              Used by
	  Data Entity                      Business Information             Realizes
	  Data Entity                      Business Service                 Is accessed and updated through
	  Data Entity                      Data Entity                      Decomposes
	  Data Entity                      Data Entity                      Relates to
	  Data Entity                      Logical Data Component           Resides within
	  Driver                           Driver                           Decomposes
	  Driver                           Goal                             Creates
	  Driver                           Organization Unit                Motivates
	  Event                            Actor                            Is generated by
	  Event                            Actor                            Is resolved by
	  Event                            Business Service                 Is resolved by
	  Event                            Process                          Is generated by
	  Event                            Process                          Is resolved by
	  Function                         Actor                            Supports
	  Function                         Business Capability              Delivers
	  Function                         Business Service                 Is bounded by
	  Function                         Course of Action                 Is influenced by
	  Function                         Function                         Communicates with
	  Function                         Function                         Decomposes
	  Function                         Organization Unit                Is owned by
	  Function                         Process                          Orchestrates
	  Function                         Process                          Decomposes
	  Goal                             Course of Action                 Is realized by
	  Goal                             Driver                           Addresses
	  Goal                             Goal                             Decomposes
	  Goal                             Objective                        Is made specific
	  Logical Application Component    Application Service              Implements
	  Logical Application Component    Logical Application Component    Decomposes
	  Logical Application Component    Logical Application Component    Communicates with
	  Logical Application Component    Logical Data Component           Used by
	  Logical Application Component    Logical Technology Component     Is served by
	  Logical Application Component    Physical Application Component   Is realized by
	  Logical Data Component           Data Entity                      Encapsulates
	  Logical Data Component           Logical Application Component    Uses
	  Logical Data Component           Physical Data Component          Is realized by
	  Logical Technology Component     Business Service                 Provides platform for
	  Logical Technology Component     Logical Application Component    Serves
	  Logical Technology Component     Logical Technology Component     Decomposes
	  Logical Technology Component     Logical Technology Component     Is dependent on
	  Logical Technology Component     Physical Technology Component    Is realized by
	  Logical Technology Component     Technology Service               Supplies
	  Measure                          Measure                          Decomposes
	  Measure                          Objective                        Sets performance criteria for
	  Objective                        Goal                             Realizes
	  Objective                        Measure                          Is tracked against
	  Objective                        Objective                        Decomposes
	  Organization Unit                Actor                            Contains
	  Organization Unit                Business Capability              Delivers
	  Organization Unit                Business Service                 Owns and governs
	  Organization Unit                Course of Action                 Participates in
	  Organization Unit                Driver                           Is motivated by
	  Organization Unit                Function                         Enables
	  Organization Unit                Organization Unit                Decomposes
	  Organization Unit                Product                          Delivers
	  Physical Application Component   Logical Application Component    Realizes
	  Physical Application Component   Physical Application Component   Decomposes
	  Physical Application Component   Physical Application Component   Communicates with
	  Physical Application Component   Physical Data Component          Used by
	  Physical Application Component   Physical Technology Component    Is served by
	  Physical Data Component          Logical Data Component           Realizes
	  Physical Data Component          Physical Application Component   Used by
	  Physical Data Component          Physical Data Component          Decomposes
	  Physical Technology Component    Logical Technology Component     Realizes
	  Physical Technology Component    Physical Application Component   Serves
	  Physical Technology Component    Physical Technology Component    Decomposes
	  Physical Technology Component    Physical Technology Component    Is dependent on
	  Process                          Actor                            Is produced by
	  Process                          Actor                            Supports
	  Process                          Business Capability              Operationalizes
	  Process                          Business Information             Is used by
	  Process                          Business Service                 Orchestrates
	  Process                          Business Service                 Decomposes
	  Process                          Control                          Is guided by
	  Process                          Event                            Generates
	  Process                          Event                            Resolves
	  Process                          Function                         Supports
	  Process                          Function                         Is realized by
	  Process                          Process                          Decomposes
	  Process                          Process                          Precedes, follows
	  Process                          Product                          Delivers
	  Process                          Role                             Involves
	  Process                          Role                             Is performed by
	  Process                          Value Stream                     Operationalizes
	  Product                          Course of Action                 Is produced by
	  Product                          Organization Unit                Is produced by
	  Product                          Process                          Is produced by
	  Role                             Actor                            Is performed by
	  Role                             Process                          Participates in
	  Role                             Process                          Performs
	  Role                             Role                             Decomposes
	  Service Quality                  Contract                         Applies to
	  Service Quality                  Service                          Applies to
	  Technology Service               Application Service              Serves
	  Technology Service               Logical Technology Component     Is supplied by
	  Value Stream                     Actor                            Involves
	  Value Stream                     Actor                            Is triggered by
	  Value Stream                     Business Capability              Is enabled by
	  Value Stream                     Course of Action                 Is influenced by
	  Value Stream                     Process                          Is operationalized by
	  Work Package                     Capability                       Delivers
	
snippet togaf_reference-models_digital-business-reference-model_2.7_Business_Process "2.7 Business Process"
	
	An ordered, countable set of activities; an event-driven, value-adding
	sequence that can be measured and improved.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.7_Open_FAIR "2.7 Open FAIR"
	
	The Open FAIR Body of Knowledge comprises the Risk Taxonomy (O-RT)
	Standard [15] and the Risk Analysis (O-RA) Standard [16]. These
	standards help organizations to better measure their information
	security and operational risks. The Open FAIR quantitative risk analysis
	approach is highly useful during threat assessments and helps to
	understand the impact of threat mitigation options during the ADM cycle.
	Open FAIR can be thought of as a tool or technique in analyzing risk
	throughout the TOGAF ADM.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.7_Phase_E_Opportunities_Solutions "2.7 Phase E: Opportunities & Solutions"
	
	A critical factor to consider during this phase of planning the
	establishment of the architecture practice is the organizational change
	that is required and how this will be achieved.
	
snippet togaf_reference-models_digital-business-reference-model_2.8_Business_Product "2.8 Business Product"
	
	Output generated by the business; the business product of the execution
	of a process.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.8_Phase_F_Migration_Planning "2.8 Phase F: Migration Planning"
	
	The focus should not only be on the Information Systems Architecture
	components in this phase, but include the Business Architecture. The
	adoption of the architecture process and framework will have a major
	impact on the overall establishment of the architecture practice in the
	organization.
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2.8_SABSA "2.8 SABSA^(®)"
	
	SABSA is a methodology for developing risk-driven enterprise information
	security and information assurance architectures and for delivering
	security infrastructure solutions that support critical business
	initiatives. It is an open standard, comprising a number of frameworks,
	models, methods, and processes. As an Enterprise Security Architecture
	framework, it allows for the usage of existing standards and practices
	(such as ISO/IEC 27001:2013, COBIT, and ISO 31000:2009) within the
	Security Architecture. SABSA is free for use by all, with no licensing
	required for end-user organizations that make use of the standard in
	developing and implementing architectures and solutions.
	
	SABSA is well described in the SABSA^(®) Blue Book [2]. In addition, new
	SABSA thinking is published at www.sabsa.org [3]. The fundamental idea
	behind SABSA is that the Security Architecture is there to facilitate
	the business. This is in line with TOGAF concepts.
	
snippet togaf_reference-models_digital-business-reference-model_2.9_Business_Service "2.9 Business Service"
	
	Supports the business by encapsulating a unique element of business
	behavior; a service offered external to the enterprise may be supported
	by business service.
	
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2.9_Phase_G_Implementation_Governance "2.9 Phase G: Implementation Governance"
	
	The implementation of the Business Architecture of the architecture
	practice should be the focus of this phase. Changing practices within
	the organization to adopt a more structured and disciplined approach
	will be a challenge and should be addressed by the appropriate
	organizational change techniques.
	
snippet togaf_metadata-management_20_Data_Usage_Documentation "| Data Usage Documentation          |                                   |"
	+-----------------------------------+-----------------------------------+
	| Document data processing activity | Document data usage and           |
	|                                   | manipulation such as collection,  |
	|                                   | recording, organization,          |
	|                                   | structuring, storage, adaptation  |
	|                                   | or alteration, retrieval,         |
	|                                   | consultation, use, disclosure by  |
	|                                   | transmission, dissemination or    |
	|                                   | otherwise making available,       |
	|                                   | alignment or combination,         |
	|                                   | restriction, erasure or           |
	|                                   | destruction.                      |
	+-----------------------------------+-----------------------------------+
	| Document data transfer            | -   Document the legal conditions |
	|                                   |     binding the disclosure by     |
	|                                   |     transmission of any personal  |
	|                                   |     data to a third party in the  |
	|                                   |     context of data usage         |
	|                                   | -   Document the third parties    |
	|                                   |     receiving personal data in    |
	|                                   |     the context of data usage     |
	+-----------------------------------+-----------------------------------+
	| Document DPIA results             | Document the Data Privacy Impact  |
	|                                   | Assessment (DPIA) results when    |
	|                                   | personal data processing is       |
	|                                   | involved in the data usage and    |
	|                                   | manipulation.                     |
	+-----------------------------------+-----------------------------------+
	| Rule & Policy Documentation       |                                   |
	+-----------------------------------+-----------------------------------+
	| Document business rules           | Document the data deletion, data  |
	|                                   | quality, and other relevant       |
	|                                   | business rules that apply to the  |
	|                                   | data.                             |
	+-----------------------------------+-----------------------------------+
	| Document data policies            | Document the data policies that   |
	|                                   | should be enforced by the data    |
	|                                   | governance board(s).              |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_21_Data_Issue_Documentation "| Data Issue Documentation          |                                   |"
	+-----------------------------------+-----------------------------------+
	| Document business data issues     | Document business problems and    |
	|                                   | related business impacts          |
	|                                   | (quantitative and qualitative).   |
	+-----------------------------------+-----------------------------------+
	| Document data quality issues      | Document the data quality         |
	|                                   | problems identified during the    |
	|                                   | information lifecycle analysis.   |
	|                                   | Document the costs of poor data   |
	|                                   | quality and the costs of          |
	|                                   | improving data quality.           |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_22_Business_Assets_Technical "| Business Assets & Technical       |                                   |"
	| Assets Association                |                                   |
	+-----------------------------------+-----------------------------------+
	| Document the link between the     | Document the link between         |
	| business glossary concepts and    | business data object/data         |
	| their implementation in the       | element/business term and the     |
	| information systems               | application/database/data         |
	|                                   | set/data field.                   |
	+-----------------------------------+-----------------------------------+
	| Document the link between the     | Document the link between data    |
	| data usage and the systems that   | processing activity and the       |
	| enable this usage                 | application/database involved in  |
	|                                   | the data usage.                   |
	+-----------------------------------+-----------------------------------+
	| Link business rules to data       | Document the business rules       |
	| processing activity               | involved in the data usage and/or |
	|                                   | manipulation.                     |
	+-----------------------------------+-----------------------------------+
	| Link business rules to business   | Document the data elements to be  |
	| data elements                     | evaluated by each business rule.  |
	+-----------------------------------+-----------------------------------+
	| Metadata Repository Design        |                                   |
	+-----------------------------------+-----------------------------------+
	| Design metadata repository model  | Design the data model underlying  |
	|                                   | the metadata repository.          |
	+-----------------------------------+-----------------------------------+
	| Design metadata access model      | Define, manage, and control the   |
	|                                   | way in which metadata can be      |
	|                                   | accessed.                         |
	+-----------------------------------+-----------------------------------+
	| Design workflow                   | Define the workflow and processes |
	|                                   | to review and validate the        |
	|                                   | metadata to guarantee consistency |
	|                                   | and integrity of the metadata or  |
	|                                   | to ease metadata collection       |
	|                                   | (minimum of controls at metadata  |
	|                                   | entry level).                     |
	+-----------------------------------+-----------------------------------+
	| Communication & Training          |                                   |
	+-----------------------------------+-----------------------------------+
	| Train end users                   | Train end users to ease adoption  |
	|                                   | of the Metadata Management        |
	|                                   | processes and tools.              |
	+-----------------------------------+-----------------------------------+
	| Communicate about the metadata    | Share with a broad audience the   |
	| currently available in the        | scope of metadata documented and  |
	| repository                        | how it can be used to generate    |
	|                                   | value for the organization.       |
	+-----------------------------------+-----------------------------------+
	| Communicate about the usage of    | Share with a broad audience the   |
	| the metadata available            | actual usage of the metadata      |
	|                                   | documented to generate awareness. |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_metadata-management_23_5.2_Metadata_Management_Reference_Model_Detailed_Application_Functions "5.2 Metadata Management Reference Model – Detailed Application Functions"
	
	Figure 14 shows detailed business applications of the Metadata
	Management capability.
	
	[]
	
	Figure 14: Metadata Management Detailed Application Functions
	
	Table 3 provides detailed descriptions of the application functions
	shown in Figure 14.
	
	Table 3: Detailed Application Functions
	
	+-----------------------------------+-----------------------------------+
	| Application Function              | Description                       |
	+===================================+===================================+
snippet togaf_metadata-management_24_Acquisition "| Acquisition                       |                                   |"
	+-----------------------------------+-----------------------------------+
	| Metadata creation, revision, and  | Create and maintain metadata      |
	| deletion                          | objects such as (but not limited  |
	|                                   | to):                              |
	|                                   |                                   |
	|                                   | -   Data glossary:                |
	|                                   |                                   |
	|                                   |     —   Business data object      |
	|                                   |                                   |
	|                                   |     —   Business data element     |
	|                                   |                                   |
	|                                   |     —   Business term             |
	|                                   |                                   |
	|                                   |     —   Deletion/retention date   |
	|                                   |                                   |
	|                                   | -   Data dictionary:              |
	|                                   |                                   |
	|                                   |     —   Environment               |
	|                                   |                                   |
	|                                   |     —   Application (and related  |
	|                                   |     technology)                   |
	|                                   |                                   |
	|                                   |     —   Data set (database)       |
	|                                   |                                   |
	|                                   |     —   Table                     |
	|                                   |                                   |
	|                                   |     —   Column                    |
	|                                   |                                   |
	|                                   | -   Data usage:                   |
	|                                   |                                   |
	|                                   |     —   Data processing activity  |
	|                                   |                                   |
	|                                   |     —   Data recipient            |
	|                                   |                                   |
	|                                   |     —   Data transfer             |
	|                                   |                                   |
	|                                   |     —   Data protection impact    |
	|                                   |     assessment                    |
	|                                   |                                   |
	|                                   |     —   Data provider             |
	|                                   |                                   |
	|                                   |     —   Data access and           |
	|                                   |     privileges                    |
	|                                   |                                   |
	|                                   |     —   Add URL links to external |
	|                                   |     documentation reference       |
	|                                   |                                   |
	|                                   | -   Data classification:          |
	|                                   |                                   |
	|                                   |     —   Data confidentiality      |
	|                                   |     classification                |
	|                                   |                                   |
	|                                   |     —   Data privacy              |
	|                                   |     classification                |
	|                                   |                                   |
	|                                   |     —   Business value            |
	|                                   |     classification                |
	|                                   |                                   |
	|                                   |     —   Define custom metadata    |
	|                                   |     classification dimension      |
	|                                   |                                   |
	|                                   | -   Rule and policy:              |
	|                                   |                                   |
	|                                   |     —   Data policy               |
	|                                   |                                   |
	|                                   |     —   Business data quality     |
	|                                   |     rule                          |
	|                                   |                                   |
	|                                   | -   Issue:                        |
	|                                   |                                   |
	|                                   |     —   Business data issue       |
	|                                   |     including related business    |
	|                                   |     problem and business impact   |
	|                                   |                                   |
	|                                   |     —   Data quality issue        |
	|                                   |     reported following data       |
	|                                   |     quality rules execution       |
	|                                   |                                   |
	|                                   | -   Governance assets:            |
	|                                   |                                   |
	|                                   |     —   Logical group of          |
	|                                   |     metadata, not limited to, but |
	|                                   |     such as subject area (e.g.,   |
	|                                   |     policy, claim, product),      |
	|                                   |     business area (e.g., home,    |
	|                                   |     motor, travel, health),       |
	|                                   |     geographical area (e.g.,      |
	|                                   |     Italy, France, Spain, Paris)  |
	|                                   |                                   |
	|                                   |     —   Data domain as the        |
	|                                   |     combination of two or more    |
	|                                   |     groups of metadata            |
	|                                   |                                   |
	|                                   |     —   Data steward, data owner, |
	|                                   |     data manager, data privacy    |
	|                                   |     officer, data custodian,      |
	|                                   |     application owner             |
	|                                   |                                   |
	|                                   | -   Data quality rules execution: |
	|                                   |                                   |
	|                                   |     —   Technical data quality    |
	|                                   |     rule                          |
	+-----------------------------------+-----------------------------------+
	| Metadata classification           | Capability to classify metadata:  |
	|                                   |                                   |
	|                                   | -   Data confidentiality          |
	|                                   |     classification                |
	|                                   | -   Data privacy classification   |
	|                                   | -   Define custom metadata        |
	|                                   |     classification dimension      |
	+-----------------------------------+-----------------------------------+
	| Metadata association              | Linking metadata assets to        |
	|                                   | describe the full value chain of  |
	|                                   | the data and data lineage.        |
	+-----------------------------------+-----------------------------------+
	| Metadata inference                | Documentation of metadata through |
	|                                   | an automated process such as      |
	|                                   | machine learning or Artificial    |
	|                                   | Intelligence (AI) algorithm; for  |
	|                                   | example (but not limited to):     |
	|                                   |                                   |
	|                                   | -   Automatically process         |
	|                                   |     available data to discover    |
	|                                   |     metadata relationships        |
	|                                   | -   Identify metadata from        |
	|                                   |     patterns (email, phone        |
	|                                   |     number, credit cards, etc.)   |
	|                                   | -   Identify relations between    |
	|                                   |     data (same values,            |
	|                                   |     repartition, etc.)            |
	|                                   | -   Identify metadata from        |
	|                                   |     dictionaries (company name,   |
	|                                   |     city, first name, last name,  |
	|                                   |     synonyms, etc.)               |
	+-----------------------------------+-----------------------------------+
	| Data quality rules execution      | Execute and capture the results   |
	|                                   | of data quality rules defined in  |
	|                                   | the metadata repository.          |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_25_Governance "| Governance                        |                                   |"
	+-----------------------------------+-----------------------------------+
	| Workflow validation               | Create workflows, visualize       |
	|                                   | status and tasks.                 |
	+-----------------------------------+-----------------------------------+
	| Task assignment                   | Assign tasks to people.           |
	+-----------------------------------+-----------------------------------+
	| Impact analysis                   | View change impact. (For example, |
	|                                   | if I change the business          |
	|                                   | definition, how many technical    |
	|                                   | definitions are based on it ?.)   |
	+-----------------------------------+-----------------------------------+
	| Metadata activity monitoring      | Report on metadata usage.         |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_26_Reporting "| Reporting                         |                                   |"
	+-----------------------------------+-----------------------------------+
	| Data compliance reporting         | Visualize end-to-end data         |
	|                                   | lifecycle (data origin, data      |
	|                                   | transformation, data transfer,    |
	|                                   | data classification) to support   |
	|                                   | regulatory requirements.          |
	+-----------------------------------+-----------------------------------+
	| Data documentation reporting      | -   Visualize metadata completion |
	|                                   |     within the repository         |
	|                                   | -   Visualize metadata            |
	|                                   |     associations                  |
	|                                   | -   Measure metadata quality and  |
	|                                   |     share it within the           |
	|                                   |     organization                  |
	+-----------------------------------+-----------------------------------+
	| Data accountability reporting     | Reporting capability to visualize |
	|                                   | who is accountable for the data   |
	|                                   | within the organization.          |
	+-----------------------------------+-----------------------------------+
	| Data quality reporting            | Measure data quality through time |
	|                                   | (history and present) and share   |
	|                                   | it within the organization.       |
	+-----------------------------------+-----------------------------------+
	| Metadata searching                | -   Multi-criteria search on      |
	|                                   |     metadata                      |
	|                                   | -   Full-text search on metadata  |
	|                                   |     (Google™ like)                |
	|                                   | -   Search on metadata with       |
	|                                   |     auto-completion               |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_27_Reference_Data_Management "| Reference Data Management         |                                   |"
	+-----------------------------------+-----------------------------------+
	| List of values management         | -   Create and maintain           |
	| (category list, code list, etc.)  |     normalized list of values     |
	|                                   |     (category list, code list,    |
	|                                   |     etc.)                         |
	|                                   | -   Administrate reference data   |
	|                                   |     (list of values)              |
	+-----------------------------------+-----------------------------------+
snippet togaf_metadata-management_28_Administration "| Administration                    |                                   |"
	+-----------------------------------+-----------------------------------+
	| Environment management            | Manage multiple environments,     |
	|                                   | each with its own governance      |
	|                                   | (e.g., workflow validation) and   |
	|                                   | administration (e.g., access      |
	|                                   | management, database versioning)  |
	|                                   | settings.                         |
	+-----------------------------------+-----------------------------------+
	| Access management                 | -   Manage, create, delete,       |
	|                                   |     update metadata rights access |
	|                                   | -   Create user, group, and give  |
	|                                   |     authorizations on metadata    |
	|                                   |     depending on roles (including |
	|                                   |     batch or user role)           |
	+-----------------------------------+-----------------------------------+
	| Internationalization and          | Provide the means to adapt the    |
	| localization                      | Metadata Management tool to       |
	|                                   | different languages and local     |
	|                                   | requirements.                     |
	+-----------------------------------+-----------------------------------+
	| Event logging management          | Log any event in the system. Keep |
	|                                   | history, source, and author of    |
	|                                   | metadata modifications.           |
	+-----------------------------------+-----------------------------------+
	| Database versioning               | Support versioning of the         |
	|                                   | metadata database.                |
	+-----------------------------------+-----------------------------------+
	| Metadata Integration              |                                   |
	+-----------------------------------+-----------------------------------+
	| Metadata querying                 | Query metadata assets in the      |
	|                                   | repository using native SQL or    |
	|                                   | any other query language or       |
	|                                   | interface (e.g., API).            |
	+-----------------------------------+-----------------------------------+
	| Bulk import                       | Import multiple metadata in the   |
	|                                   | metadata repository from a file   |
	|                                   | (e.g., CSV, JSON, XML) or via an  |
	|                                   | application interface (e.g.,      |
	|                                   | API).                             |
	+-----------------------------------+-----------------------------------+
	| Bulk export                       | Export multiple metadata from the |
	|                                   | repository in a non-proprietary   |
	|                                   | file format (e.g., CSV), via an   |
	|                                   | API or any other application      |
	|                                   | interface.                        |
	+-----------------------------------+-----------------------------------+
	| Events subscription               | Listen to one or multiple events  |
	|                                   | from an event broker.             |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_metadata-management_29_Appendix_A_Metadata_Asset_Definitions "Appendix A: Metadata Asset Definitions"
	
	+-----------------------+-----------------------+-----------------------+
	| Category              | Name                  | Description           |
	+=======================+=======================+=======================+
	| Business              | Activity              | A business task or    |
	|                       |                       | group of business     |
	|                       |                       | tasks that are        |
	|                       |                       | undertaken by the     |
	|                       |                       | business to achieve a |
	|                       |                       | well-defined goal.    |
	|                       |                       | (Source: Integrated   |
	|                       |                       | Architecture          |
	|                       |                       | Framework (IAF))      |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data         | A business rule       |
	|                       | Deletion Rule         | related to the        |
	|                       |                       | removal of a set of   |
	|                       |                       | business data         |
	|                       |                       | elements that can be  |
	|                       |                       | executed to meet      |
	|                       |                       | regulatory or         |
	|                       |                       | business              |
	|                       |                       | requirements. It is   |
	|                       |                       | typically the         |
	|                       |                       | responsibility of     |
	|                       |                       | business data owners, |
	|                       |                       | as part of their data |
	|                       |                       | governance            |
	|                       |                       | responsibilities, to  |
	|                       |                       | define data deletion  |
	|                       |                       | rules for the data    |
	|                       |                       | domains they own.     |
	|                       |                       | They should seek      |
	|                       |                       | input from other data |
	|                       |                       | actors (business data |
	|                       |                       | owner, data steward,  |
	|                       |                       | internal controllers, |
	|                       |                       | data protection       |
	|                       |                       | officer, data         |
	|                       |                       | manager, etc.) as     |
	|                       |                       | they define these     |
	|                       |                       | rules.                |
	|                       |                       |                       |
	|                       |                       | These are an          |
	|                       |                       | essential component   |
	|                       |                       | for an ethical use of |
	|                       |                       | the data and build    |
	|                       |                       | trust with the data   |
	|                       |                       | providers and         |
	|                       |                       | consumers.            |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data Domain  | A combination of one  |
	|                       |                       | subject area, one     |
	|                       |                       | business area, and    |
	|                       |                       | (when relevant) other |
	|                       |                       | dimensions (e.g.,     |
	|                       |                       | geographical area,    |
	|                       |                       | organization) that    |
	|                       |                       | constitutes a         |
	|                       |                       | consistent grouping   |
	|                       |                       | of data and/or        |
	|                       |                       | metadata for data     |
	|                       |                       | governance purposes.  |
	|                       |                       | Fine-grained data     |
	|                       |                       | domains usually focus |
	|                       |                       | on governance of data |
	|                       |                       | (e.g., the data       |
	|                       |                       | domain in charge of   |
	|                       |                       | the data quality of a |
	|                       |                       | claim) or highly      |
	|                       |                       | specific metadata     |
	|                       |                       | (e.g., one data       |
	|                       |                       | element or data       |
	|                       |                       | quality rule that     |
	|                       |                       | makes sense in a      |
	|                       |                       | restricted context).  |
	|                       |                       | Data domains defined  |
	|                       |                       | at macro level        |
	|                       |                       | usually focus on      |
	|                       |                       | governance of shared  |
	|                       |                       | metadata (e.g., one   |
	|                       |                       | data element or data  |
	|                       |                       | quality rule that is  |
	|                       |                       | widely used around    |
	|                       |                       | the enterprise).      |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data Element | A fundamental,        |
	|                       |                       | conceptual unit of    |
	|                       |                       | data. Often, the      |
	|                       |                       | terms “variable” and  |
	|                       |                       | “field” are used      |
	|                       |                       | synonymously to mean  |
	|                       |                       | a data element (e.g., |
	|                       |                       | Individual Contract   |
	|                       |                       | Status, Claim Event   |
	|                       |                       | Date, and Employee    |
	|                       |                       | First Name). A data   |
	|                       |                       | element is comprised  |
	|                       |                       | of three components:  |
	|                       |                       |                       |
	|                       |                       | -   A data object –   |
	|                       |                       |     the idea, person, |
	|                       |                       |     or thing that is  |
	|                       |                       |     of interest and   |
	|                       |                       |     is being          |
	|                       |                       |     described (e.g.,  |
	|                       |                       |     the Customer)     |
	|                       |                       | -   A property – the  |
	|                       |                       |     property is the   |
	|                       |                       |     characteristic of |
	|                       |                       |     the data object   |
	|                       |                       |     that is of        |
	|                       |                       |     interest (e.g.,   |
	|                       |                       |     Customer          |
	|                       |                       |     Preferred         |
	|                       |                       |     Language)         |
	|                       |                       | -   A value domain –  |
	|                       |                       |     establishes the   |
	|                       |                       |     permissible       |
	|                       |                       |     values that can   |
	|                       |                       |     be used to        |
	|                       |                       |     represent the     |
	|                       |                       |     data element      |
	|                       |                       |                       |
	|                       |                       | A value domain has a  |
	|                       |                       | data type (e.g.,      |
	|                       |                       | boolean, decimal, and |
	|                       |                       | integer) and,         |
	|                       |                       | optionally, a minimum |
	|                       |                       | length, a maximum     |
	|                       |                       | length, and a decimal |
	|                       |                       | precision. A value    |
	|                       |                       | domain can be         |
	|                       |                       | enumerated (specified |
	|                       |                       | through a list of     |
	|                       |                       | values of a least two |
	|                       |                       | individual            |
	|                       |                       | permissible values)   |
	|                       |                       | or non-enumerated.    |
	|                       |                       | For example, the      |
	|                       |                       | Customer Preferred    |
	|                       |                       | Language is           |
	|                       |                       | represented by a list |
	|                       |                       | of language codes     |
	|                       |                       | from ISO 639-1:2002). |
	|                       |                       | Data elements can be  |
	|                       |                       | thought of as         |
	|                       |                       | belonging to one of   |
	|                       |                       | the following groups: |
	|                       |                       |                       |
	|                       |                       | -   Input: if a data  |
	|                       |                       |     element is of the |
	|                       |                       |     input type, this  |
	|                       |                       |     indicates that    |
	|                       |                       |     the data is used  |
	|                       |                       |     or stored         |
	|                       |                       |     essentially as it |
	|                       |                       |     is collected,     |
	|                       |                       |     without major     |
	|                       |                       |     modification;     |
	|                       |                       |     most data         |
	|                       |                       |     elements are of   |
	|                       |                       |     this type         |
	|                       |                       | -   Derived: one or   |
	|                       |                       |     more data         |
	|                       |                       |     elements which    |
	|                       |                       |     are modified in   |
	|                       |                       |     some way; for     |
	|                       |                       |     example, multiple |
	|                       |                       |     data elements     |
	|                       |                       |     might be          |
	|                       |                       |     aggregated        |
	|                       |                       |     together for      |
	|                       |                       |     output or logical |
	|                       |                       |     purposes          |
	|                       |                       |                       |
	|                       |                       | See Table 2 for more  |
	|                       |                       | information.          |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data Issue   | Describes a business  |
	|                       |                       | problem occurring as  |
	|                       |                       | the result of a data  |
	|                       |                       | issue and the impact  |
	|                       |                       | of this problem,      |
	|                       |                       | either qualitative or |
	|                       |                       | quantitative. Also    |
	|                       |                       | describes the nature  |
	|                       |                       | of the business       |
	|                       |                       | impact such as        |
	|                       |                       | financial,            |
	|                       |                       | regulatory, legal,    |
	|                       |                       | reputational,         |
	|                       |                       | operational, etc.     |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data Object  | A key idea, person,   |
	|                       |                       | or thing that         |
	|                       |                       | provides context for  |
	|                       |                       | the data collected    |
	|                       |                       | through the           |
	|                       |                       | enterprise. Data      |
	|                       |                       | objects aid           |
	|                       |                       | understanding and are |
	|                       |                       | useful for defining   |
	|                       |                       | objects against which |
	|                       |                       | multiple data         |
	|                       |                       | elements are          |
	|                       |                       | collected. For        |
	|                       |                       | example, “contact”    |
	|                       |                       | may be defined as a   |
	|                       |                       | data object, which    |
	|                       |                       | aids in the           |
	|                       |                       | application of data   |
	|                       |                       | elements, including   |
	|                       |                       | contact date, contact |
	|                       |                       | delivery mode, and    |
	|                       |                       | contact customer      |
	|                       |                       | present status. The   |
	|                       |                       | use of data objects   |
	|                       |                       | reduces the           |
	|                       |                       | repetition of large   |
	|                       |                       | sections of text      |
	|                       |                       | across multiple data  |
	|                       |                       | elements.             |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Data Quality | A business rule       |
	|                       | Rule                  | related to a business |
	|                       |                       | data element or a set |
	|                       |                       | of business data      |
	|                       |                       | elements that can be  |
	|                       |                       | tested to determine   |
	|                       |                       | if the business data  |
	|                       |                       | elements meet the     |
	|                       |                       | data quality          |
	|                       |                       | requirements. It is   |
	|                       |                       | typically the         |
	|                       |                       | responsibility of     |
	|                       |                       | business data owners, |
	|                       |                       | as part of their data |
	|                       |                       | governance            |
	|                       |                       | responsibilities, to  |
	|                       |                       | define data quality   |
	|                       |                       | rules for data        |
	|                       |                       | domains they own.     |
	|                       |                       | They should seek      |
	|                       |                       | input from other data |
	|                       |                       | actors (business data |
	|                       |                       | owner, data steward,  |
	|                       |                       | internal controllers, |
	|                       |                       | data protection       |
	|                       |                       | officer, data         |
	|                       |                       | manager, etc.) as     |
	|                       |                       | they define the data  |
	|                       |                       | quality rules. The    |
	|                       |                       | definition, design,   |
	|                       |                       | and implementation of |
	|                       |                       | data quality rules    |
	|                       |                       | are at the heart of a |
	|                       |                       | solid data quality    |
	|                       |                       | management program.   |
	|                       |                       |                       |
	|                       |                       | Examples: Date of     |
	|                       |                       | Birth must be a valid |
	|                       |                       | date. Surname must    |
	|                       |                       | not be empty. Email   |
	|                       |                       | address must match    |
	|                       |                       | patternuser@domain.   |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Rule         | A rule that is        |
	|                       |                       | practicable and that  |
	|                       |                       | is under business     |
	|                       |                       | jurisdiction. Derived |
	|                       |                       | from business policy. |
	|                       |                       | (Source: Object       |
	|                       |                       | Management Group      |
	|                       |                       | (OMG))                |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Business Term         | Words or phrases used |
	|                       |                       | to describe a thing   |
	|                       |                       | to express a concept  |
	|                       |                       | in language or branch |
	|                       |                       | of business.          |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Code Set              | Defines a list of     |
	|                       |                       | values that enumerate |
	|                       |                       | the possible values   |
	|                       |                       | for a data element.   |
	|                       |                       | We can, for instance, |
	|                       |                       | define a code set for |
	|                       |                       | the business data     |
	|                       |                       | element “Gender” of   |
	|                       |                       | the business data     |
	|                       |                       | object “Person” with  |
	|                       |                       | the following         |
	|                       |                       | possible values:      |
	|                       |                       | male, female,         |
	|                       |                       | unknown.              |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Code Value            | An instance or a      |
	|                       |                       | single value of a     |
	|                       |                       | code set.             |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Data Classification   | An important activity |
	|                       | Taxonomies            | of the data           |
	|                       |                       | documentation which   |
	|                       |                       | requires              |
	|                       |                       | collaboration between |
	|                       |                       | at least four         |
	|                       |                       | professional groups:  |
	|                       |                       | Information Security, |
	|                       |                       | Data Privacy,         |
	|                       |                       | Information Risk      |
	|                       |                       | Management, and Data  |
	|                       |                       | Management.           |
	|                       |                       | Consequently, it has  |
	|                       |                       | impacts on security   |
	|                       |                       | measures, on          |
	|                       |                       | regulatory            |
	|                       |                       | constraints on        |
	|                       |                       | personal and          |
	|                       |                       | sensitive data, and   |
	|                       |                       | on data management    |
	|                       |                       | and quality           |
	|                       |                       | priorities. It has    |
	|                       |                       | increased in          |
	|                       |                       | importance following  |
	|                       |                       | regulatory            |
	|                       |                       | requirements such as  |
	|                       |                       | GDPR. Data            |
	|                       |                       | classification        |
	|                       |                       | taxonomies are        |
	|                       |                       | applicable labels     |
	|                       |                       | that should be used   |
	|                       |                       | to classify each data |
	|                       |                       | element. Even if they |
	|                       |                       | are essentially code  |
	|                       |                       | set and code values,  |
	|                       |                       | we have chosen to     |
	|                       |                       | highlight data        |
	|                       |                       | classifications       |
	|                       |                       | taxonomies as they    |
	|                       |                       | require alignment     |
	|                       |                       | between multiple      |
	|                       |                       | stakeholders.         |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Data Policy           | A set of rules,       |
	|                       |                       | guidelines,           |
	|                       |                       | standards, and        |
	|                       |                       | patterns that are     |
	|                       |                       | applied to the data.  |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Data Privacy          | A process designed to |
	|                       | Assessment            | identify risks        |
	|                       |                       | related to the use of |
	|                       |                       | personal data and     |
	|                       |                       | define mitigation     |
	|                       |                       | plans to be compliant |
	|                       |                       | with regulatory       |
	|                       |                       | requirements.         |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Data Processing       | The collection and    |
	|                       | Activity              | manipulation of data  |
	|                       |                       | elements to produce   |
	|                       |                       | meaningful            |
	|                       |                       | information. It       |
	|                       |                       | represents any        |
	|                       |                       | operation or set of   |
	|                       |                       | operations which is   |
	|                       |                       | performed on data or  |
	|                       |                       | on sets of data,      |
	|                       |                       | whether by automated  |
	|                       |                       | means, such as        |
	|                       |                       | collection,           |
	|                       |                       | recording,            |
	|                       |                       | organization,         |
	|                       |                       | structuring, storage, |
	|                       |                       | adaptation or         |
	|                       |                       | alteration,           |
	|                       |                       | retrieval,            |
	|                       |                       | consultation, use,    |
	|                       |                       | disclosure by         |
	|                       |                       | transmission,         |
	|                       |                       | dissemination or      |
	|                       |                       | otherwise making      |
	|                       |                       | available, alignment  |
	|                       |                       | or combination,       |
	|                       |                       | restriction, erasure  |
	|                       |                       | or destruction. In    |
	|                       |                       | the context of GDPR,  |
	|                       |                       | the record of data    |
	|                       |                       | processing activities |
	|                       |                       | is the subset of data |
	|                       |                       | processing activities |
	|                       |                       | which collect and     |
	|                       |                       | manipulate personal   |
	|                       |                       | data.                 |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Organization          | Used to describe a    |
	|                       |                       | group of stakeholders |
	|                       |                       | within the company    |
	|                       |                       | that are bounded by a |
	|                       |                       | common purpose. It    |
	|                       |                       | often describes       |
	|                       |                       | organizational units  |
	|                       |                       | such as branches,     |
	|                       |                       | departments, teams,   |
	|                       |                       | etc.                  |
	|                       |                       |                       |
	|                       |                       | Used to animate the   |
	|                       |                       | operational           |
	|                       |                       | governance within the |
	|                       |                       | metadata repository.  |
	|                       |                       | It may be required in |
	|                       |                       | some context to       |
	|                       |                       | specialize the        |
	|                       |                       | business data domain  |
	|                       |                       | per organization      |
	|                       |                       | units.                |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Process               | A set of interrelated |
	|                       |                       | or interacting        |
	|                       |                       | activities that use   |
	|                       |                       | inputs to deliver an  |
	|                       |                       | intended result.      |
	|                       |                       | (Source: ISO          |
	|                       |                       | 9000:2015)            |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Role                  | A business role is    |
	|                       |                       | the responsibility    |
	|                       |                       | for performing        |
	|                       |                       | specific behavior, to |
	|                       |                       | which an actor can be |
	|                       |                       | assigned, or the part |
	|                       |                       | an actor plays in a   |
	|                       |                       | particular action or  |
	|                       |                       | event. (Source:       |
	|                       |                       | ArchiMate             |
	|                       |                       | Specification)        |
	+-----------------------+-----------------------+-----------------------+
	| Business              | Service-Level         | Essential components  |
	|                       | Agreements (SLAs)     | to operate data       |
	|                       |                       | governance. They      |
	|                       |                       | describe within each  |
	|                       |                       | business context the  |
	|                       |                       | applicable level of   |
	|                       |                       | service required to   |
	|                       |                       | support business      |
	|                       |                       | use-cases. For        |
	|                       |                       | example, a data       |
	|                       |                       | quality rule on an    |
	|                       |                       | individual email      |
	|                       |                       | address may have      |
	|                       |                       | different acceptable  |
	|                       |                       | thresholds depending  |
	|                       |                       | on the business       |
	|                       |                       | operating model: B2C  |
	|                       |                       | or B2B2C. In the      |
	|                       |                       | second scenario       |
	|                       |                       | (B2B2C), the quality  |
	|                       |                       | of the email address  |
	|                       |                       | may be irrelevant for |
	|                       |                       | the company if they   |
	|                       |                       | do not have any       |
	|                       |                       | direct relationship   |
	|                       |                       | with the customer.    |
	+-----------------------+-----------------------+-----------------------+
	| Operational           | Data Access Event     | Any event recorded in |
	|                       |                       | the information       |
	|                       |                       | system to track       |
	|                       |                       | access to a subset of |
	|                       |                       | data by a user        |
	|                       |                       | account.              |
	+-----------------------+-----------------------+-----------------------+
	| Operational           | Data Quality Anomaly  | An issue detected     |
	|                       |                       | following the         |
	|                       |                       | execution of a        |
	|                       |                       | technical data        |
	|                       |                       | quality rule within   |
	|                       |                       | the information       |
	|                       |                       | system.               |
	+-----------------------+-----------------------+-----------------------+
	| Operational           | Data Volume           | Measure of the        |
	|                       |                       | quantity of data      |
	|                       |                       | within a data set or  |
	|                       |                       | database.             |
	+-----------------------+-----------------------+-----------------------+
	| Operational           | Metadata Activity     | A set of events       |
	|                       | Logs                  | related to any        |
	|                       |                       | activity undertaken   |
	|                       |                       | within the metadata   |
	|                       |                       | repository.           |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Application           | A classification of   |
	|                       |                       | computer programs     |
	|                       |                       | designed to perform   |
	|                       |                       | specific tasks, such  |
	|                       |                       | as word processing,   |
	|                       |                       | database management,  |
	|                       |                       | or graphics.          |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Data Flow             | Describes the data    |
	|                       |                       | flows between         |
	|                       |                       | applications.         |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Database              | An organized          |
	|                       |                       | collection of data,   |
	|                       |                       | generally stored and  |
	|                       |                       | accessed              |
	|                       |                       | electronically from a |
	|                       |                       | computer system. The  |
	|                       |                       | Database Management   |
	|                       |                       | System (DBMS) is the  |
	|                       |                       | software that         |
	|                       |                       | interacts with end    |
	|                       |                       | users, applications,  |
	|                       |                       | and the database      |
	|                       |                       | itself to capture and |
	|                       |                       | analyze the data.     |
	|                       |                       | (Source: Wikipedia)   |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Data Field            | A place where data    |
	|                       |                       | can be stored.        |
	|                       |                       | Commonly used to      |
	|                       |                       | refer to a column in  |
	|                       |                       | a database or a field |
	|                       |                       | in a data entry form  |
	|                       |                       | or web form. (Source: |
	|                       |                       | Wikipedia)            |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Data Set              | A collection of       |
	|                       |                       | related, discrete     |
	|                       |                       | items of related data |
	|                       |                       | that may be accessed  |
	|                       |                       | individually or in    |
	|                       |                       | combination or        |
	|                       |                       | managed as a whole    |
	|                       |                       | entity. (Source:      |
	|                       |                       | TechTarget)           |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Technical Data        | The physical          |
	|                       | Deletion Rule         | executable component  |
	|                       |                       | (in most cases an SQL |
	|                       |                       | SELECT statement) of  |
	|                       |                       | the business data     |
	|                       |                       | deletion rule         |
	|                       |                       | description. It is    |
	|                       |                       | the responsibility of |
	|                       |                       | IT to design and      |
	|                       |                       | develop data deletion |
	|                       |                       | rules that can then   |
	|                       |                       | be implemented,       |
	|                       |                       | executed, and         |
	|                       |                       | monitored within      |
	|                       |                       | batch or near         |
	|                       |                       | real-time             |
	|                       |                       | applications across   |
	|                       |                       | the enterprise.       |
	|                       |                       | Output of a data      |
	|                       |                       | deletion rule is the  |
	|                       |                       | list of all business  |
	|                       |                       | references (e.g.,     |
	|                       |                       | contract              |
	|                       |                       | references/numbers,   |
	|                       |                       | employee              |
	|                       |                       | references/numbers,   |
	|                       |                       | vendor                |
	|                       |                       | references/numbers,   |
	|                       |                       | etc.) that do not     |
	|                       |                       | comply with the rule  |
	|                       |                       | (e.g., the list of    |
	|                       |                       | all customers contact |
	|                       |                       | details that should   |
	|                       |                       | not be kept in the BI |
	|                       |                       | & Analytics           |
	|                       |                       | platform).            |
	+-----------------------+-----------------------+-----------------------+
	| Technical             | Technical Data        | The physical          |
	|                       | Quality Rule          | executable component  |
	|                       |                       | of the business data  |
	|                       |                       | quality rule. It is   |
	|                       |                       | the responsibility of |
	|                       |                       | IT to design and      |
	|                       |                       | develop data quality  |
	|                       |                       | rules that can then   |
	|                       |                       | be implemented,       |
	|                       |                       | executed, and         |
	|                       |                       | monitored within      |
	|                       |                       | batch or near         |
	|                       |                       | real-time             |
	|                       |                       | applications across   |
	|                       |                       | the enterprise.       |
	|                       |                       | Output of a data      |
	|                       |                       | quality rule is the   |
	|                       |                       | list of all business  |
	|                       |                       | references (e.g.,     |
	|                       |                       | contract              |
	|                       |                       | references/numbers,   |
	|                       |                       | employee              |
	|                       |                       | references/numbers,   |
	|                       |                       | vendor                |
	|                       |                       | references/numbers,   |
	|                       |                       | etc.) that do not     |
	|                       |                       | comply with the rule  |
	|                       |                       | (e.g., the list of    |
	|                       |                       | all contract          |
	|                       |                       | references for which  |
	|                       |                       | the contract start    |
	|                       |                       | date is not a valid   |
	|                       |                       | date).                |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_applying-the-adm_INDEX_2_Applying_Iteration_to_the_ADM "-   2. Applying Iteration to the ADM"
	    -   2.1 Overview
	    -   2.2 Iteration Cycles
	    -   2.3 Classes of Architecture Engagement
	    -   2.4 Approaches to Architecture Development
	    -   2.5 Iteration Considerations
	        -   2.5.1 Iteration between ADM Cycles
	        -   2.5.2 Iteration within an ADM Cycle
	    -   2.6 Conclusions
	        -   Footnotes
snippet togaf_applying-the-adm_2_Applying_Iteration_to_the_ADM_2_Applying_Iteration_to_the_ADM "2. Applying Iteration to the ADM"
	
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Overview | 2.2 Iteration Cycles | 2.3 Classes of Architecture Engagement | 2.4 Approaches to Architecture Development | 2.5 Iteration Considerations | 2.6 Conclusions
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_adm-techniques_INDEX_2_Architecture_Principles "-   2. Architecture Principles"
	    -   2.1 Introduction
	    -   2.2 Characteristics of Architecture Principles
	    -   2.3 Components of Architecture Principles
	    -   2.4 Developing Architecture Principles
	        -   2.4.1 Qualities of Principles
	    -   2.5 Applying Architecture Principles
	    -   2.6 Example Set of Architecture Principles
	        -   2.6.1 Business Principles
	            -   Principle 1: Primacy of Principles
	            -   Principle 2: Maximize Benefit to the Enterprise
	            -   Principle 3: Information Management is Everybody's
	                Business
	            -   Principle 4: Business Continuity
	            -   Principle 5: Common Use Applications
	            -   Principle 6: Service Orientation
	            -   Principle 7: Compliance with Law
	            -   Principle 8: IT Responsibility
	            -   Principle 9: Protection of Intellectual Property
	        -   2.6.2 Data Principles
	            -   Principle 10: Data is an Asset
	            -   Principle 11: Data is Shared
	            -   Principle 12: Data is Accessible
	            -   Principle 13: Data Trustee
	            -   Principle 14: Common Vocabulary and Data Definitions
	            -   Principle 15: Data Security
	        -   2.6.3 Application Principles
	            -   Principle 16: Technology Independence
	            -   Principle 17: Ease-of-Use
	        -   2.6.4 Technology Principles
	            -   Principle 18: Requirements-Based Change
	            -   Principle 19: Responsive Change Management
	            -   Principle 20: Control Technical Diversity
	            -   Principle 21: Interoperability
snippet togaf_adm-techniques_2_Architecture_Principles_2_Architecture_Principles "2. Architecture Principles"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Introduction | 2.2 Characteristics of Architecture Principles | 2.3 Components of Architecture Principles | 2.4 Developing Architecture Principles | 2.5 Applying Architecture Principles | 2.6 Example Set of Architecture Principles
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter describes principles for use in the development of an
	Enterprise Architecture.
	
snippet togaf_business-architecture_business-scenarios_2_Benefits_of_Business_Scenarios "2 Benefits of Business Scenarios"
	
	A Business Scenario is essentially a complete description of a business
	problem, both in business and in architectural terms, which enables
	individual requirements to be viewed in relation to one another in the
	context of the overall problem. Without such a complete description to
	serve as context:
	
	-   There is a danger of the architecture being based on an incomplete
	    set of requirements that do not add up to a whole problem
	    description, and that can therefore misguide architecture work
	-   The business value of solving the problem is unclear
	-   The relevance of potential solutions is unclear
	
	Also, because the technique requires the involvement of business line
	management and other stakeholders at an early stage in the architecture
	project, it also plays an important role in gaining the buy-in of these
	key personnel to the overall project and its end-product – the
	Enterprise Architecture.
	
	An additional advantage of Business Scenarios is in communication with
	vendors. Most architecture today is implemented by making maximum use of
	Commercial Off-The-Shelf (COTS) software solutions, often from multiple
	vendors, procured in the open market. The use of Business Scenarios by a
	customer can be an important aid to vendors in delivering appropriate
	solutions. Vendors need to ensure that their solution components add
	value to an open solution and are marketable. Business Scenarios provide
	a language with which the vendor community can link customer problems
	and solutions. Besides making obvious what is needed, and why, they
	allow vendors to solve problems optimally, using open standards and
	leveraging each other’s skills.
	
	Creating a Business Scenario takes time and effort and if done right
	there is a return on this investment summarized in the following list.
	If not done, or done wrong, more of the same issues will exist between
	solutions developers and the actual business.
	
	-   Better solutions – by understanding the real needs and how solving
	    these needs are valued by the business, solutions can be brought to
	    bear that are clearly aligned to the business and enable new
	    capabilities
	
	By meeting with the leaders of the business and bringing better
	solutions to the table, a relationship develops that is repeatable,
	resulting in a virtuous cycle of bringing in new capabilities.
	
	-   Faster to realize capabilities – by understanding the real needs,
	    and the timeline requirements associated with fulfillment of those
	    needs, solutions can be brought to bear in a timed sequence rather
	    than in a single big-bang approach
	
	This results in faster implementations of incremental value aligned to
	business needs. This is also consistent with Agile and DevOps approaches
	to solving problems.
	
	-   Cheaper costs – by understanding real business needs and addressing
	    them incrementally the ultimate savings are in costs – both costs
	    saved and costs avoided
	
	Examples of costs saved are implementing only what is needed and
	eliminating redundancy. Examples of costs avoided are eliminating the
	costs of failed implementations and lowering the costs of integration
	and interoperation.
	
snippet togaf_guides_index_2_Definitions "2. Definitions"
	
	For the purposes of this document, the following terms and definitions
	apply. The definitions within the TOGAF Standard or the
	Merriam-Webster’s Collegiate Dictionary should be referenced for terms
	not defined in this section.
	
snippet togaf_togaf-leaders-guide_2_Definitions_2_Definitions "2 Definitions"
	
	The following terms are highlighted and defined to distinguish them from
	their common English usage. As such, the terms below are distinctly
	defined and capitalized wherever found in this Guide. The Open Group
	intends for these definitions to be assumed when referenced in this
	Guide.
	
snippet togaf_adm-practitioners_2_Definitions_2_Definitions "2 Definitions"
	
	To share a clear understanding a few terms need to be defined distinctly
	from common English usage. The terms below are distinctly defined, and
	capitalized wherever found. They mean exactly these definitions and
	nothing else in this document.
	
snippet togaf_guides_agile-sprints_2_Definitions_used_in_this_Guide "2 Definitions used in this Guide"
	
	Agile means to move/change quickly and easily, often to provide
	value-generating outcomes.
	
	A Backlog is an ever-evolving list of requirements, prioritized by the
	stakeholders, that conveys to an Agile team which requirements to handle
	first. Business change design and development typically employ a
	top-level backlog, known as a business change backlog, and each Agile
	team working on a sprint typically creates a backlog for each sprint,
	known as a sprint backlog.
	
	Business Development is defined as the tasks and processes concerning
	the analytical preparation of potential growth or efficiency
	opportunities, and the support and monitoring of the implementation of
	these opportunities, but does not include decisions on strategy and
	implementation of these opportunities.
	
	Business Stakeholders can be product customers, ecosystem partners,
	internal business users, etc. The TOGAF definition is “an individual,
	team, organization, or class thereof, having an interest in a system”.
	
	Continuous Deployment (CD) is a software engineering approach in which
	software functionalities are delivered frequently through automated
	deployments.[3]
	
	Continuous Integration (CI) is the practice of merging all developers’
	working copies to a shared mainline several times a day.[4]
	
	A Demonstration (Demo) is a meeting, held at the end of a sprint, at
	which the sprint team demonstrates outcomes from the sprint and solicits
	feedback from the stakeholders and other sprint teams.
	
	DevOps is an organizational culture that aims to improve the flow of
	value to customers. DevOps focuses on Culture, Automation Lean,
	Measurement, and Sharing (CALMS)/ITIL^(®) V4.
	
	DevSecOps is a mindset where “everyone is responsible for security” with
	the goal of safely distributing security decisions at speed and scale to
	those who hold the highest level of context without sacrificing the
	safety required.
	
	A DORP is the set of four activities that each sprint team conducts at
	the end of each sprint: a demonstration (demo) of what they have done,
	outcome management, a retrospective analysis of sprint performance, and
	planning for the next sprint.
	
	A Minimum Viable Architecture (MVA) defines the minimum (Enterprise)
	Architecture that is realizable and add business value.
	
	A Minimum Viable Business Development (MVBD) defines the minimum set of
	business change that delivers significant value to the stakeholders.
	
	A Minimum Viable Product (MVP) is an output that satisfies a minimum set
	of functional and non-functional requirements and can be realized when
	implemented in a live operational environment.
	
	A Product is an outcome generated by the business to be offered to
	customers. Products include materials and/or services.
	
	A Retrospective is a time-boxed meeting held at the end of a sprint, in
	which the sprint team examines its processes to determine what succeeded
	and what could be improved. The retrospective is key to an Agile team’s
	ability to “inspect and adapt” in the pursuit of “continuous
	improvement”.
	
	A Solution is a product, service, or system delivered to the customer,
	whether internal or external to the enterprise.
	
	A Sprint is a short, time-boxed period when an Agile team works to
	complete a set amount of work supporting the delivery of a working
	solution. Sprints are at the very heart of Agile methodologies.
	
	Velocity is the rate at which an Agile team completes work. It is used
	not to measure progress per se, but to accurately estimate the team’s
	capacity for future sprints and guide the team in planning upcoming
	sprints.
	
	VUCA (Volatility, Uncertainty, Complexity, Ambiguity) is an acronym
	first used in 1987 to describe or to reflect on the volatility,
	uncertainty, complexity, and ambiguity of general conditions and
	situations.
	
snippet togaf_ea-capability-and-governance_INDEX_2_Establishing_an_Architecture_Capability "-   2. Establishing an Architecture Capability"
	    -   2.1 Overview
	    -   2.2 Phase A: Architecture Vision
	    -   2.3 Phase B: Business Architecture
	    -   2.4 Phase C: Data Architecture
	    -   2.5 Phase C: Application Architecture
	    -   2.6 Phase D: Technology Architecture
	    -   2.7 Phase E: Opportunities & Solutions
	    -   2.8 Phase F: Migration Planning
	    -   2.9 Phase G: Implementation Governance
	    -   2.10 Phase H: Architecture Change Management
	    -   2.11 Requirements Management
snippet togaf_ea-capability-and-governance_2_Establishing_an_Architecture_Capability_2_Establishing_an_Architecture_Capability "2. Establishing an Architecture Capability"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Overview | 2.2 Phase A: Architecture Vision | 2.3 Phase B: Business Architecture | 2.4 Phase C: Data Architecture | 2.5 Phase C: Application Architecture | 2.6 Phase D: Technology Architecture | 2.7 Phase E: Opportunities & Solutions | 2.8 Phase F: Migration Planning | 2.9 Phase G: Implementation Governance | 2.10 Phase H: Architecture Change Management | 2.11 Requirements Management
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter provides guidelines on how to use the ADM to establish an
	Architecture Capability.
	
snippet togaf_reference-models_government-reference-model_2_International_Affairs_and_Trade "2 International Affairs and Trade"
	
	International Affairs and Trade consists of activities undertaken by the
	government to facilitate financial support and trade with international
	economies and related to the conduct and implementation of policies, aid
	programs, treaties, and diplomatic relations.
	
	[]
	
	Figure 2: Structure and Content Overview of the L1-L3 Elements of the
	Proposed International Affairs and Trade Sector
	
snippet togaf_reference-models_digital-business-reference-model_2_Key_Concepts "2 Key Concepts"
	
snippet togaf_architecture-project-management_2_Managing_Architecture_Projects "2 Managing Architecture Projects"
	
	This section describes a general, high-level Project Management approach
	for developing an Enterprise Architecture. The target audience for this
	section is Enterprise Architects, Project Management professionals, and
	stakeholders of Architecture Projects who want to understand the key
	relationships between the TOGAF Standard and Project Management areas.
	
snippet togaf_guides_microservices-architecture_2_Microservices_Architecture_Defined "2 Microservices Architecture Defined"
	
	Microservices Architecture (MSA) is an architecture style, in which
	software systems or applications are composed of one or more independent
	and self-contained services. It is not a product, framework, or
	platform. It is a strategy for building large distributed systems.
	Microservices are loosely-coupled and deployed independently of one
	another.
	
	The SOA Source Book (see Referenced Documents) defines a service as an
	instantiation of a logical representation of a repeatable business
	activity that has a specified outcome. We define a microservice as a
	self-contained service that implements an Atomic Business Function (ABF)
	and is independent of other services. MSA is a style of architecture
	that defines and creates systems through the use of small, independent,
	and self-contained services that closely align with business activities.
	
	Microservices are the primary ABBs of an MSA. An MSA has the following
	three key characteristics:
	
	-   Service-independence: each microservice is independent of other
	    microservices; each microservice is developed, deployed, and changed
	    independently
	-   Single responsibility: each microservice is mapped to an atomic
	    (single) business activity for which it is responsible
	-   Self-containment: a microservice is a self-contained, independent
	    deployable unit encompassing all external Information Technology
	    (IT) resources (e.g., data sources, business rules) necessary to
	    support the unique business activity
	
	For more detail on characteristics, features, and governing principles
	of microservices and MSA, refer to The Open Group White Paper:
	Microservices Architecture (see Referenced Documents).
	
	The key benefits of using microservices are:
	
	-   Technology-independence: each microservice can be built on its own
	    technology, which enables the system to move away from any
	    technology at any point in time and adapt to newer models
	-   Re-usable: microservices are highly re-usable and can be composed
	    with other services
	-   Deployment flexibility: a microservice has its own lifecycle, and
	    can be built (or changed), tested, and deployed on its own
	-   Flexible scaling: scaling of an MSA-based solution is easily
	    achieved because instantiation of additional services can be
	    performed independently
	-   Decoupling: independence, the inherent characteristic of
	    microservices, enables decoupling where clients are not aware of the
	    implementation details, and microservices are not aware of each
	    other’s function – consequently, decoupling is at a high level in
	    the microservices environment
	
snippet togaf_architecture-skills-framework_2_Need_for_an_Enterprise_Architecture_Skills_Framework "2 Need for an Enterprise Architecture Skills Framework"
	
snippet togaf_adm_INDEX_2_Preliminary_Phase "-   2. Preliminary Phase"
	    -   2.1 Objectives
	    -   2.2 Inputs
	        -   2.2.1 Reference Materials External to the Enterprise
	        -   2.2.2 Non-Architectural Inputs
	        -   2.2.3 Architectural Inputs
	    -   2.3 Steps
	        -   2.3.1 Scope the Enterprise Organizations Impacted
	        -   2.3.2 Confirm Governance and Support Frameworks
	        -   2.3.3 Define and Establish Enterprise Architecture Team and
	            Organization
	        -   2.3.4 Identify and Establish Architecture Principles
	        -   2.3.5 Tailor the TOGAF Framework and, if any, Other Selected
	            Architecture Framework(s)
	        -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	            and Techniques
	            -   2.3.6.1 Issues in Tools Standardization
	    -   2.4 Outputs
	    -   2.5 Approach
	        -   2.5.1 Enterprise
	        -   2.5.2 Organizational Context
	        -   2.5.3 Requirements for Architecture Work
	        -   2.5.4 Principles
	        -   2.5.5 Management Frameworks
	        -   2.5.6 Relating the Management Frameworks
	        -   2.5.7 Planning for Enterprise Architecture/Business Change
	            Maturity Evaluation
snippet togaf_adm_2_Preliminary_Phase_2_Preliminary_Phase "2. Preliminary Phase"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Objectives | 2.2 Inputs | 2.3 Steps | 2.4 Outputs | 2.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the preparation and initiation activities
	required to meet the business directive for a new Enterprise
	Architecture, including the definition of an Organization-Specific
	Architecture framework and the definition of principles.
	
	[]
	
	Figure 2-1: Preliminary Phase
	
snippet togaf_metadata-management_2_Relationship_to_Existing_Standards_from_The_Open_Group "2 Relationship to Existing Standards from The Open Group"
	
snippet togaf_master-data-management_2_Relationship_to_Existing_Standards_of_The_Open_Group "2 Relationship to Existing Standards of The Open Group"
	
snippet togaf_integrating-risk-and-security_2_Relationship_to_Other_IT_Security_and_Risk_Standards_2_Relationship_to_Other_IT_Security_and_Risk_Standards "2 Relationship to Other IT Security and Risk Standards"
	
	This chapter documents relationships among selected standards in this
	subject area.
	
snippet togaf_introduction_INDEX_2_The_TOGAF_Documentation_Set "-   2. The TOGAF Documentation Set"
	    -   2.1 Structure of the TOGAF Documentation Set
	        -   The TOGAF Standard
	        -   The TOGAF Library
	    -   2.2 The TOGAF Standard
	    -   2.3 The TOGAF Library
	        -   Footnotes
snippet togaf_introduction_2_The_TOGAF_Documentation_Set_2_The_TOGAF_Documentation_Set "2. The TOGAF Documentation Set"
	
	  -- -----------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Structure of the TOGAF Documentation Set | 2.2 The TOGAF Standard | 2.3 The TOGAF Library
	  -- -----------------------------------------------------------------------------------------------------------------
	
snippet togaf_architecture-content_INDEX_2_TOGAF_Content_Framework_and_Enterprise_Metamodel "-   2. TOGAF Content Framework and Enterprise Metamodel"
	    -   2.1 Overview
	    -   2.2 TOGAF Enterprise Metamodel Vision
	        -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	    -   2.3 TOGAF Enterprise Metamodel in Detail
	    -   2.4 TOGAF Enterprise Metamodel Entities
	    -   2.5 TOGAF Enterprise Metamodel Attributes
	    -   2.6 TOGAF Enterprise Metamodel Relationships
snippet togaf_architecture-content_2_TOGAF_Content_Framework_and_Enterprise_Metamodel_2_TOGAF_Content_Framework_and_Enterprise_Metamodel "2. TOGAF Content Framework and Enterprise Metamodel"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 2.1 Overview | 2.2 TOGAF Enterprise Metamodel Vision | 2.3 TOGAF Enterprise Metamodel in Detail | 2.4 TOGAF Enterprise Metamodel Entities | 2.5 TOGAF Enterprise Metamodel Attributes | 2.6 TOGAF Enterprise Metamodel Relationships
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_architecture-maturity-models_2_US_DoC_ACMM_Framework "2 US DoC ACMM Framework"
	
snippet togaf_business-architecture_value-streams_2_Value_Stream_Description_Decomposition_and_Mapping "2 Value Stream Description, Decomposition, and Mapping"
	
	This chapter describes the composition and structure of value streams,
	and the mechanics involved with breaking them down into value stream
	stages. It also explores the tight connection between value streams and
	business capabilities. Mapping value stream stages to their respective
	enabling business capabilities provides a much richer level of
	understanding about what a business should be focusing on (beyond the
	individual business capability map/model or value stream diagram).
	
snippet togaf_business-architecture_information-mapping_2_What_is_an_Information_Map "2 What is an Information Map?"
	
	An Information Map is a collection of information concepts and their
	relationships to one another. Information concepts, in effect, reflect
	the business’ vocabulary; e.g., client, account, or product. Mapping
	information in Business Architecture starts with listing those elements
	that matter most to the business as well as how they are described in
	business terms.
	
	A useful way to discern an information concept is to listen for the
	nouns that are used when talking about the business. Every noun is
	potentially an information concept. By using a noun-challenge process,
	it is possible to determine if the noun represents an item of
	information that the business cares about. In other words, does anyone
	in the business need to know, store, or manipulate the thing that the
	noun represents?
	
	A simple, high-level example of an Information Map is shown in Figure 1.
	This illustrates some key information concepts and inter-relationships
	that might be found at a financial company. Appendix A provides more
	detailed examples and techniques for modeling information than this
	simple representation and includes the use of specific modeling
	languages.
	
	[]
	
	Figure 1: Simple Information Map for a Financial Institution
	
snippet togaf_business-architecture_organization-mapping_2_What_is_an_Organization_Map "2 What is an Organization Map?"
	
	An organization map is a Business Architecture blueprint that shows:
	
	1.  The main organizational units, partners, and stakeholder groups that
	    comprise the ecosystem of an enterprise.
	2.  The working relationships (informal as well as formal) between each
	    of those entities.
	
	These two primary characteristics also reflect what distinguishes
	organization maps from traditional organization charts, which are more
	likely to portray the reporting lines that exist between named
	individuals who are in charge of each department (refer to Chapter 3 for
	a more detailed explanation). Instead of describing the business in
	terms of a top-down hierarchy that is focused on people and titles, an
	organization map depicts it in more fluid terms – as a network of
	relationships and interactions between business entities that may extend
	beyond the legal boundaries of the enterprise.
	
	The lack of fluidity with organization charts, along with the broadening
	of what constitutes an enterprise in today’s business world, are what
	led to the creation of the concept of organization mapping by Mintzberg
	and Van der Heyden (see Referenced Documents). They saw the organization
	chart as increasingly irrelevant to understanding a business, and for
	strategy and planning. Instead, they proposed the web concept (something
	that is not too dissimilar to how social networks function) as being
	more suited to describing how organizations actually operate across
	formal boundaries and siloes.
	
	[]
	
	Figure 1: Web-Styled Organigraph
	
	The notion that an organization is something that is unconstrained by
	corporate or legal boundaries may require redefining the organization
	concept as being “a social unit of people that is structured and managed
	to meet a need or to pursue collective goals.”.[3] By not constraining
	organizational boundaries, it follows that organization mapping is
	similarly unconstrained. That is, the organization map covers the entire
	enterprise including the broader ecosystem of suppliers, partners, and
	stakeholders. If there is a formal working relationship, it can even
	extend to customers. The organization map therefore provides greater
	visibility of the enterprise as a whole, rather than just the formal,
	legal business entity.
	
	Each node in an organization map represents an organization unit. An
	organization unit can be a business unit or service line, a functional
	area or department that operates within the business unit, a third-party
	partner or supplier, or a less formally recognized group such as a
	collaborative team. Collaborative teams are typically cross-functional
	and have a relatively temporary lifespan – much shorter than a business
	unit or department that is shown on the organization chart. Table 1
	shows the various types and levels of organization units that may be
	shown in an organization map.
	
	Table 1: Organization Unit Types and Levels
	
	  -------------------- ------------------- -------------------- ------------------------------------------------------------------------------------
	  Organization Level   Organization Unit   Organization Type    Description
	  0                    <name>              Enterprise           Name of overarching entity (the scope of the map)
	  1                    <name>              Line of business     Major lines of reporting within the enterprise
	  2                    <name>              Function             A functional area such as Marketing or Finance
	  2                    <name>              Partner              External partners with key relationships inside the enterprise
	  3                    <name>              Collaborative team   A program or team created by and operating across two or more organizational units
	  -------------------- ------------------- -------------------- ------------------------------------------------------------------------------------
	
snippet togaf_business-architecture_business-capabilities_2_What_is_a_Business_Capability "2 What is a Business Capability?"
	
	Within The Open Group, a capability is defined as “an ability to do
	something”. A business capability represents the ability for a business
	to do something. A more formal definition is as follows:
	
	According to Ulrich Homann (see Referenced Documents): “A business
	capability is a particular ability or capacity that a business may
	possess or exchange to achieve a specific purpose or outcome.”
	
	Critically, a business capability delineates what a business does
	without attempting to explain how, why, or where the business uses the
	capability.
	
	As part of the practice of Business Architecture, we separate the
	concern of what we do from who does it within the organization and from
	how the business achieves value from that activity. A business
	capability can be something that exists today or something that is
	required to enable a new direction or strategy. When integrated into a
	business capability map, business capabilities represent all of the
	abilities that an enterprise has at its disposal to run its business.
	
snippet togaf_business-architecture_business-models_2_What_is_a_Business_Model "2 What is a Business Model?"
	
	A business model describes the rationale for how an organization
	creates, delivers, and captures value. This may refer only to an
	abstract concept that may exist in a leader’s mind. Or it may be more
	concrete, whereby business model artifacts provide specific views of an
	instance of a business model, defining the structural elements of the
	business model as well as the relationships between each element.
	
	Business models can be represented in different ways. The three-element
	framework shown in Figure 1 describes the structure of a business model
	in its most abstract form.
	
	[]
	
	(Source: The Business Model Innovation Factory, Saul Kaplan, 2012)
	
	Figure 1: Abstract View of a Business Model
	
	Other well-known framework examples include the Four-Box Framework
	(Figure 2) and the Business Model Cube (Figure 3).
	
	[]
	
	(Source: Seizing the White Space, Mark W. Johnson, 2010)
	
	Figure 2: Four-Box Framework
	
	[]
	
	(Source: The Business Model Cube, Peter Lindgren, Ole Horn Rasmussen,
	2013)
	
	Figure 3: Business Model Cube
	
	The theoretical arguments supporting different representations of
	business models have been in play for many years, yet it was Alexander
	Osterwalder and Yves Pigneur’s simple-to-use methods and tools described
	in their book Business Model Generation that popularized the Business
	Model Canvas (see Figure 4) and established it as the baseline for
	business model innovation. We use this form to show business model
	alignment between strategy and Business Architecture, followed by a
	deeper look in Appendix A. Note this type of business model has been
	introduced in earlier work of The Open Group through the IT4IT Forum.[3]
	
	[]
	
	(Source: Business Model Generation, Alexander Osterwalder, Yves Pigneur,
	2010)
	
	Figure 4: The Business Model Canvas
	
snippet togaf_digital-technology-adoption_2_What_is_a_Digital_Technology_Readiness_Assessment "2 What is a Digital Technology Readiness Assessment?"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_2_Why_the_TOGAF_Standard_Supports_the_Digital_Enterprise "2. Why the TOGAF Standard Supports the Digital Enterprise"
	
snippet togaf_architecture-project-management_3.1.1_Appoint_the_Executive "3.1.1 Appoint the Executive"
	
	The project should be a response to an identified business need, as its
	execution is connected with tangible and usually quantifiable costs for
	the organization, in the form of, for example, cash expenditure,
	man-hours of employees, and even disruptions in normal operations. The
	project can only be executed when there are necessary resources
	provided, usually on the assumption that they will achieve some business
	goal and provide sufficient return in some form (like business benefits,
	ability to continue operations, etc.).
	
	+-----------------------------------+-----------------------------------+
	| Example                           | There are multiple possible       |
	|                                   | benefits of Architecture          |
	|                                   | Projects; for example:            |
	|                                   |                                   |
	|                                   | -   A more efficient operation    |
	|                                   | -   Better return on existing     |
	|                                   |     investment                    |
	|                                   | -   Reduced risk for future       |
	|                                   |     investment                    |
	|                                   | -   Faster, simpler, and cheaper  |
	|                                   |     procurement                   |
	|                                   | -   Improved ability to respond   |
	|                                   |     to threats and opportunities  |
	|                                   |     identified from a context     |
	|                                   |     analysis, as well as          |
	|                                   |     competitor pressure, through  |
	|                                   |     design of new business models |
	|                                   |     and identification of new     |
	|                                   |     business lines                |
	|                                   | -   Improved customer experience  |
	|                                   |     through different channels    |
	|                                   |                                   |
	|                                   | which all stem from having good,  |
	|                                   | thoroughly planned Enterprise     |
	|                                   | Architecture (or, at the very     |
	|                                   | least, are facilitated by it) or  |
	|                                   | undertaking architectural         |
	|                                   | efforts. In other cases,          |
	|                                   | Architecture Projects are         |
	|                                   | enablers of other initiatives,    |
	|                                   | projects, and programs, and do    |
	|                                   | not deliver value on their own,   |
	|                                   | or are just necessarily grounded  |
	|                                   | in external factors (like         |
	|                                   | compliance with regulatory        |
	|                                   | requirements).                    |
	+-----------------------------------+-----------------------------------+
	
	The Executive is the owner of the project’s business goal, and therefore
	an incarnation of organizational support for the initiative at hand,
	responsible for realization of expected benefits. Depending on the
	organization (especially its Project Management framework) and the
	project itself (its type), the Executive can have different names and
	structures. The term was originally taken from the PRINCE2 method, where
	it is the name of the role representing the “Customer”, who is the
	ultimate resource provider for the project.[11] A very similar role,
	though more limited, is played by the “Sponsor” in PMBOK. The same is
	the case with the TOGAF Standard, where the Executive is responsible for
	ensuring “on-time, on-budget delivery of a change initiative that will
	realize expected benefits for the organization”.[12]
	
	The TOGAF Standard does not elaborate on the Executive much. It is named
	as a stakeholder organizational role, which can be played by, for
	example, a sponsor or program manager. It defines the necessary skill
	set (see the TOGAF^(®) Series Guide: Architecture Skills Framework
	(Goals/Rationale)) in the skills framework, provides information on the
	sponsorship of the initial Enterprise Architecture effort (namely that
	it is usually a CIO or other Executive), names the sponsor of the
	architecture (Architecture Board), as well as the “sponsor of sponsors”
	(Executive sponsor from the highest level of the corporation).
	
	As pointed out earlier, there can be no project without an Executive,
	who provides the necessary resources for the project’s execution and
	represents the need to be addressed. The Executive is the person that
	appoints the Project Manager and tasks them with Architecture Project
	execution at the operational level.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | Examples of Architecture Project  |
	|                                   | Executives are:                   |
	|                                   |                                   |
	|                                   |   Overal                          |
	|                                   | l Goal                            |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |       Architecture Project Goal   |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |    Architecture Project Executive |
	|                                   |   ------------------------------  |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | -------------- ------------------ |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ----------- --------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   |   (B) Improve                     |
	|                                   | logistics process efficiency and  |
	|                                   | shorten time-to-order             |
	|                                   |                                   |
	|                                   | Determine and design possible imp |
	|                                   | rovements in the business process |
	|                                   | es in the area of logistics   CIO |
	|                                   |   (E) Implement new data wareh    |
	|                                   | ouse and management information s |
	|                                   | ystem to address expanding bank r |
	|                                   | eporting needs   Enable efficient |
	|                                   |  and successful implementation of |
	|                                   |  the solution                     |
	|                                   |               Program Manager, re |
	|                                   | sponsible for Management Informat |
	|                                   | ion System transformation program |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.1.1_Definition_of_Risk "3.1.1 Definition of Risk"
	
	Risk is the “effect of uncertainty on objectives” (ISO 31000:2009 [6]).
	
	The effect of uncertainty is any deviation from what is expected –
	positive and negative.
	
	Understanding the term “risk” is central to understanding the broader
	concepts of ERM, and the role of effective Enterprise Architecture and
	Enterprise Security Architecture. In this Guide we define risk in line
	with ISO 31000:2009. Risk is the effect that uncertainty has on the
	achievement of business objectives. The uncertainty is concerned with
	predicting future outcomes, given the limited amount of information
	available when making a business decision. This information can never be
	perfect, although our expectation is that given better quality
	information we can make better quality decisions. Every decision is
	based on assessing the balance between potential opportunities and
	threats, the likelihood of beneficial outcomes versus damaging outcomes,
	the magnitude of these potential positive or negative events, and the
	likelihood associated with each identified outcome. Identifying and
	assessing these factors is known as “risk assessment” or “risk
	analysis”. “Risk management” is the art and science of applying these
	concepts in the decision-making process. Risk can be seen at the
	strategic long-term level (overall direction of the business), the
	medium term tactical level (transformation projects and programs), and
	at the operational level (regular day-to-day operational decisions,
	processes, and practices). The objective of risk management is to
	optimize business outcomes to maximize business value and minimize
	business losses. Risk can be seen at any level in the business stack
	(see Figure 2), but is always driven top-down from assessment of
	business value and its optimization.
	
	[]
	
	© The SABSA Institute
	
	Figure 2: Business Risk versus Cyber Risk Areas
	
	Uncertainty typically involves a deficiency of information and leads to
	inadequate or incomplete knowledge or understanding. In the context of
	risk management, uncertainty exists whenever the knowledge or
	understanding of an event, consequence, or likelihood is inadequate or
	incomplete.
	
	This balanced view of risk is also embedded in SABSA, including the
	enabling of benefits arising from opportunities as well as the control
	of the effects of threats. Arguably, the sole role of the Enterprise
	Architect is to create an operational environment in which operational
	risk can be optimized for maximum business benefit and minimum business
	loss.
	
	[]
	
	© The SABSA Institute
	
	Figure 3: The SABSA Operational Risk Model
	
	Operational risk is concerned with the threats and opportunities arising
	in business operations. SABSA is an architectural and operational
	framework for reaching out to opportunities and enabling positive
	outcomes to attain defined business targets and managing negative
	outcomes of loss events to within an enterprise’s tolerance towards risk
	– namely their risk appetite.
	
snippet togaf_architecture-maturity-models_3.1.1_Introduction "3.1.1 Introduction"
	
	The CMMI is a proven set of global best practices that drives business
	performance through building and benchmarking key capabilities.
	
	Originally created for the US Department of Defense to assess the
	quality and capability of their software contractors, CMMI models have
	expanded beyond software engineering to help any organization in any
	industry to build, improve, and measure their capabilities and improve
	performance. For over 25 years, high-performing organizations around the
	world have achieved demonstrable, sustainable business results with the
	CMMI.
	
	CMMI best practices focus on what needs to be done to improve
	performance and align operations to business goals. Designed to be
	understandable, accessible, flexible, and integrate with other
	methodologies such as agile, CMMI models help organizations to
	understand their current level of capability and performance and offer a
	guide to optimize business results.
	
	The CMMI Institute helps enterprises to meet the challenges of the
	changing global business landscape.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.1_Levels_of_Governance_within_the_Enterprise "3.1.1 Levels of Governance within the Enterprise"
	
	Architecture Governance is the practice and orientation by which
	Enterprise Architectures and other architectures are managed and
	controlled at an enterprise-wide level.
	
	Architecture Governance typically does not operate in isolation, but
	within a hierarchy of governance structures, which, particularly in the
	larger enterprise, can include all of the following as distinct domains
	with their own disciplines and processes:
	
	-   Corporate Governance
	-   Technology Governance
	-   IT Governance
	-   Architecture Governance
	
	Each of these domains of governance may exist at multiple geographic
	levels — global, regional, and local — within the overall enterprise.
	
	Corporate governance is thus a broad topic, beyond the scope of an
	Enterprise Architecture framework such as the TOGAF framework.
	
	This and related subsections are focused on Architecture Governance; but
	they describe it in the context of enterprise-wide governance, because
	of the hierarchy of governance structures within which it typically
	operates, as explained above.
	
	In particular, this and following sections aim to:
	
	-   Provide an overview of the nature of governance as a discipline in
	    its own right
	-   Describe the governance context in which Architecture Governance
	    typically functions within the enterprise
	-   Describe a practical Architecture Governance Framework that can be
	    adapted and applied, both for Enterprise Architecture and for other
	    forms of IT architecture
	
snippet togaf_business-architecture_business-capabilities_3.1.1_Organizational_Structure "3.1.1 Organizational Structure"
	
	Organizations are often structured in ways that closely align to
	business capabilities. People execute processes and allocate resources
	or tools like money, information technology, or other company assets.
	The organizational structure of a business can thus be used to inform
	the capability map.
	
	A common mistake is to transpose the organizational chart onto the frame
	of the business capability map itself. Quite often, multiple business
	units are involved in creating or delivering a single business
	capability. Organizational structures are naturally also far more
	transient than business capabilities. Avoid, where possible, a tight
	alignment between the functional names that denote business units and
	the top-level business capabilities.
	
	For example, ABC Company has four main functional areas, each with
	smaller departments that report up to the parent business unit, as shown
	in Figure 1.
	
	[]
	
	Figure 1: ABC Company Organization Chart
	
	An initial investigation with the managers responsible for each of the
	business units in the organization chart yields the following starter
	set of business capabilities, where names are modified to apply the
	capability naming guidelines identified above:[2]
	
	-   Sales:
	
	—  Account Management
	
	—  Customer Management
	
	—  Market Planning
	
	—  Channel Management
	
	—  Partner Management
	
	—  Agent Management
	
	-   Finance:
	
	—  Finance Management
	
	—  IT Management
	
	-   Human Resources:
	
	—  HR Management
	
	-   Operations:
	
	—  Capital Management
	
	—  Policy Management
	
	—  Product Management
	
	—  Government Relations Management
	
	—  Distribution Management
	
	—  Procurement Management
	
	—  Operations Management
	
	—  Training Management
	
	While organizational structure is roughly aligned to capabilities, the
	alignment is not perfect. It is not uncommon to find duplication or
	silos of capabilities in organization structures, because organizations
	do not align clearly to business objects. So, the starter set of
	capabilities needs to be analyzed to identify the business objects and
	refine the capability map for better alignment to business objects.
	Looking at the starter set of capabilities above there are cases in
	which it is not clear what the operative business concept is:
	
	-   IT Management: IT is generally an organization that handles all
	    aspects of information technology systems
	
	As such, it is a common source of duplication in which IT may have its
	own Finance, HR, or other capabilities. If we ask what the new business
	object/concept is that is associated with IT, the clearest concept is
	“Information”.
	
	-   Distribution and Procurement Management: distribution and
	    procurement are best thought of as stages in a value stream
	
	The question is: distribution of what? Procurement of what? Procurement
	is usually of an asset. Distribution can be of an asset or a product.
	Product Management is already a defined capability, whereas Asset
	Management is something new.
	
	-   Government Relations Management: the issue here is that “Relations”
	    is a vague concept that covers a variety of concepts
	
	For example, there could be lobbying efforts to try to influence
	legislation, or compliance efforts to ensure the organization adheres to
	regulatory mandates. Therefore, Regulatory Compliance Management is a
	potential capability; influencing regulations through lobbying could be
	considered an aspect of that capability.
	
	-   Business Planning: it is also the case that some capabilities will
	    not have a clear alignment to a particular business unit in the
	    organization, and so may be missed in an organizational
	    structure-based capability analysis
	
	Strategic business planning may be done at a variety of levels by a
	number of different business units, none of which may have business
	planning defined as their sole or even main responsibility.
	
	After this analysis, we have the candidate list of first-level
	capabilities as follows:
	
	-   ABC Company:
	
	—  Business Planning
	
	-   Sales:
	
	—  Account Management
	
	—  Customer Management
	
	—  Market Planning
	
	—  Channel Management
	
	—  Partner Management
	
	—  Agent Management
	
	-   Finance:
	
	—  Finance Management
	
	—  Information Management
	
	-   Human Resources
	
	—  HR Management
	
	-   Operations:
	
	—  Capital Management
	
	—  Policy Management
	
	—  Product Management
	
	—  Regulatory Compliance Management
	
	—  Asset Management
	
	—  Operations Management
	
	—  Training Management
	
	This detail enables the identification of duplication, redundancy, or
	gaps in capabilities across organizational units.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.1.1_Simple_Example_of_an_Architecture_Viewpoint_and_Architecture_View "3.1.1 Simple Example of an Architecture Viewpoint and Architecture View"
	
	For many architectures, a useful architecture viewpoint is that of
	business domains, which can be illustrated by an example from The Open
	Group itself.
	
	The architecture viewpoint is specified as follows:
	
	+-----------------------------------+-----------------------------------+
	| Architecture Viewpoint Element    | Description                       |
	+:==================================+:==================================+
	| Stakeholders                      | Management Board, Chief Executive |
	|                                   | Officer                           |
	+-----------------------------------+-----------------------------------+
	| Concerns                          | Show the top-level relationships  |
	|                                   | between US/UK geographical sites  |
	|                                   | and business functions.           |
	+-----------------------------------+-----------------------------------+
	| Modeling technique                | Nested boxes diagram.             |
	|                                   | Outer boxes = locations; inner    |
	|                                   | boxes = business functions.       |
	|                                   | Semantics of nesting = functions  |
	|                                   | performed in the locations.       |
	+-----------------------------------+-----------------------------------+
	
	The corresponding architecture view of The Open Group (in 2017) is shown
	in Figure 3-2 .
	
	[]
	
	Figure 3-2: Example Architecture View — The Open Group Business Domains
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.2.1_Governance_A_Generic_Perspective "3.1.2.1 Governance: A Generic Perspective"
	
	Governance is essentially about ensuring that business is conducted
	properly. It is less about overt control and strict adherence to rules,
	and more about guidance and effective and equitable usage of resources
	to ensure sustainability of an organization's strategic objectives.
	
	The following outlines the basic principles of corporate governance, as
	identified by the Organization for Economic Co-operation and Development
	(OECD):
	
	-   Focuses on the rights, roles, and equitable treatment of
	    shareholders
	-   Disclosure and transparency and the responsibilities of the board
	-   Ensures:
	    -   Sound strategic guidance of the organization
	    -   Effective monitoring of management by the board
	    -   Board accountability for the company and to the shareholders
	-   Responsibilities of the Board:
	    -   Reviewing and guiding corporate strategy
	    -   Setting and monitoring achievement of management's performance
	        objectives
	
	Supporting this, the OECD considers a traditional view of governance as:
	"... the system by which business corporations are directed and
	controlled. The corporate governance structure specifies the
	distribution of rights and responsibilities among different participants
	in the corporation — such as the board, managers, shareholders, and
	other stakeholders — and spells out the rules and procedures for making
	decisions on corporate affairs. By doing this, it also provides the
	structure through which the company objectives are set, and the means of
	attaining those objectives and monitoring performance" (Source: OECD,
	2001).
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.2.2_Characteristics_of_Governance "3.1.2.2 Characteristics of Governance"
	
	The following characteristics have been adapted from Corporate
	Governance (Naidoo, 2002) and are positioned here to highlight both the
	value and necessity for governance as an approach to be adopted within
	organizations and their dealings with all involved parties:
	
	Discipline
	
	All involved parties will have a commitment to adhere to procedures,
	processes, and authority structures established by the organization.
	
	Transparency
	
	All actions implemented and their decision support will be available for
	inspection by authorized organization and provider parties.
	
	Independence
	
	All processes, decision-making, and mechanisms used will be established
	so as to minimize or avoid potential conflicts of interest.
	
	Accountability
	
	Identifiable groups within the organization — e.g., governance boards
	who take actions or make decisions — are authorized and accountable for
	their actions.
	
	Responsibility
	
	Each contracted party is required to act responsibly to the organization
	and its stakeholders.
	
	Fairness
	
	All decisions taken, processes used, and their implementation will not
	be allowed to create unfair advantage to any one particular party.
	
snippet togaf_architecture-project-management_3.1.2_Appoint_the_Project_Manager "3.1.2 Appoint the Project Manager"
	
	As stated in the Appoint the Executive step above, the Project Manager
	is appointed by the Executive to lead the Architecture Project on the
	operational level.
	
	A Project Manager is a person responsible for ensuring that the project
	delivers the required product that satisfies the stakeholders’ needs.
	Therefore, a Project Manager must have strong leadership, communication,
	and negotiation skills in order to lead the stakeholders to the
	project’s successful outcome.
	
	+-----------------------------------+-----------------------------------+
	|                                   | According to PRINCE2, the Project |
	|                                   | Manager is a person given the     |
	|                                   | authority and responsibility to   |
	|                                   | manage the project on a           |
	|                                   | day-to-day basis to deliver the   |
	|                                   | required products with the        |
	|                                   | constraints agreed with the       |
	|                                   | Project Board. The Project        |
	|                                   | Manager’s prime responsibility is |
	|                                   | to ensure that the project        |
	|                                   | produces the required products    |
	|                                   | within the specified tolerances   |
	|                                   | of time, cost, quality, scope,    |
	|                                   | risk, and benefits. The Project   |
	|                                   | Manager is also responsible for   |
	|                                   | the project delivering a result   |
	|                                   | capable of achieving the benefits |
	|                                   | defined in the business           |
	|                                   | case.^([13])                      |
	|                                   |                                   |
	|                                   | According to PMBOK, the Project   |
	|                                   | Manager is a person assigned by   |
	|                                   | the performing organization to    |
	|                                   | lead the team that is responsible |
	|                                   | for achieving the project         |
	|                                   | objectives. In general, Project   |
	|                                   | Managers have the responsibility  |
	|                                   | to satisfy the needs: task needs, |
	|                                   | team needs, and individual        |
	|                                   | needs.^([14])                     |
	+-----------------------------------+-----------------------------------+
	
	A common question is: who should be an Architecture Project Manager?
	Project Management methods advocate assigning such a role to a Project
	Management professional.
	
	The TOGAF Standard does not answer this question, but the Architecture
	Skills Framework[15] provides an assessment of the skills required to
	deliver a successful Enterprise Architecture. According to the
	framework, the Enterprise Architect is responsible for ensuring the
	completeness (fitness-for-purpose) of the architecture, in terms of
	adequately addressing all the pertinent concerns of its stakeholders;
	and the integrity of the architecture, in terms of connecting all the
	various views to each other, satisfactorily reconciling the conflicting
	concerns of different stakeholders, and showing the trade-offs made.
	Therefore, for most Architecture Projects, the role of an Enterprise
	Architect satisfies the definition of the Project Manager. In addition,
	excellent communication with stakeholders required from the Enterprise
	Architect lowers the need to designate a dedicated Project Manager that
	is typical for IT projects.
	
	However, in some cases there may be a need to delegate Architecture
	Project Management and control to a dedicated Project Manager. The
	decision to include a dedicated Project Manager in an Architecture
	Project will depend on the Project Management rules and principles
	adopted in the organization, the scale of the Architecture Project, the
	number of internal entities and external suppliers involved in the
	project, the number of project streams, its timeframe, etc. You may find
	that the Architecture Project is so complex that combining an Enterprise
	Architect role with the Project Manager role may not be effective
	because the workload connected with managing and controlling the project
	according to the organization’s Project Management rules and principles
	limits the Enterprise Architect to focus on core architecture work.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project B, an Enterprise       |
	|                                   | Architect served as a Project     |
	|                                   | Manager. This was possible due to |
	|                                   | the low complexity of the project |
	|                                   | – it covered only one business    |
	|                                   | domain, engaged people from three |
	|                                   | business units, and five to ten   |
	|                                   | IT systems. Moreover, the Project |
	|                                   | Management rules and principles   |
	|                                   | adopted in the organization were  |
	|                                   | focused only on reporting issues  |
	|                                   | and risks associated with         |
	|                                   | delivering the project within the |
	|                                   | specified tolerances of time and  |
	|                                   | cost.                             |
	|                                   |                                   |
	|                                   | In Project D, there was a need to |
	|                                   | include a dedicated Project       |
	|                                   | Manager due to the complexity of  |
	|                                   | the project – it consisted of     |
	|                                   | five work streams (architecture   |
	|                                   | was one of them) whose products   |
	|                                   | were inter-dependent, covered     |
	|                                   | over 25 IT systems, and engaged   |
	|                                   | over 50 people from various       |
	|                                   | business units. The Enterprise    |
	|                                   | Architect was responsible for     |
	|                                   | managing the work in the          |
	|                                   | architecture stream and reporting |
	|                                   | its status to the Project Manager |
	|                                   | who was, among others,            |
	|                                   | responsible for consolidating     |
	|                                   | status reports from all streams   |
	|                                   | and presenting an overall status  |
	|                                   | of the project to its             |
	|                                   | stakeholders on a weekly basis.   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	In the rest of this Guide, we use “Project Manager” for a role
	responsible for the execution of the Architecture Project. This role can
	be assigned to an Enterprise Architect or to a Project Management
	professional, as discussed above.
	
snippet togaf_business-architecture_business-capabilities_3.1.2_Business_Model "3.1.2 Business Model"
	
	Business capabilities provide the building blocks upon which to execute
	an organization’s business model. If an overarching business model
	exists, individual business capabilities (which support each of the core
	business model elements) can be derived from that. Mapping individual
	business capabilities back to the business model also ensures that the
	organization’s activities and investments are tightly aligned or
	targeted in support of the overall enterprise vision and strategy.
	
snippet togaf_architecture-maturity-models_3.1.2_CMMI_Views_and_Models "3.1.2 CMMI Views and Models"
	
	CMMI Institute models help to identify and improve the key capabilities
	that elevate your organization’s performance, quality, and
	profitability. Many times, in business, the problem or solution is not
	obvious. With proven best practices, CMMI Institute models allow you to
	see how your organization’s existing processes measure up and where
	performance improvements are needed.
	
	Use of the models and views results in reduced risk, rework, defects,
	delivery errors, and cost. It also results in increased customer
	satisfaction, productivity, decision-making ability, quality, and
	competitive advantage.
	
	The CMMI family of resources is broken into views (as per the TOGAF
	Standard and ISO/IEC/IEEE 42010) and models, both of which are sets of
	best practices and key capabilities.
	
	The CMMI views are as follows:
	
	-   The CMMI V2.0 Model – Development View is an integrated set of best
	    practices that improves an organization’s capability to develop
	    quality products and services that meet the needs of customers and
	    end users
	
	Key benefits are Increase Quality, Reduce Cost, Improve Time-to-Market,
	Improve Product Lifecycle Management, and Gain Organizational Agility.
	
	-   The CMMI V2.0 Model – Services View is an integrated set of best
	    practices that improves an organization’s capability to efficiently
	    and effectively deliver quality service offerings that meet market
	    and customer needs
	
	Key benefits are Gain Customer Loyalty, Develop Resiliency, Improve
	Time-to-Market, Increase Quality, and Reduce Cost.
	
	-   The CMMI V2.0 Model – Supplier Management View is an integrated set
	    of best practices that improves an organization’s capability to
	    identify and manage suppliers and vendors in a way that maximizes
	    supply chain efficiency and reduces risk
	
	Key benefits are Meet Growth Demands, Keep Pace with Product Demands,
	and Reduce Supply Chain Risk.
	
	The CMMI models are as follows:
	
	-   The People Capability Maturity Model (People CMM) provides guidance
	    for improving the capability of an organization’s workforce
	
	These best practices help to identify skill gaps to break down workflow
	bottlenecks and empower team members to develop skills that will help
	the organization succeed.
	
	Key process areas are Communication & Coordination, Empowered
	Workgroups, Compensation, Continuous Workforce Innovation & Planning,
	Competency & Career Development.
	
	-   The Data Management Maturity (DMM) model provides guidance for
	    improving your organization’s capability across the enterprise to
	    build a customized roadmap for data management improvement
	
	The DMM provides best practices for implementing data strategy,
	governance, quality, operations, and architecture.
	
	Key process areas are Data Management Strategy, Data Governance, Data
	Quality, Data Operations, and Data Architecture.
	
	According to the SEI, the use of the CMMI models improves on the best
	practices of previous models in many important ways, in particular
	enabling organizations to:
	
	-   More explicitly link management and engineering activities to
	    business objectives
	-   Expand the scope of and visibility into the product lifecycle and
	    engineering activities to ensure that the product or service meets
	    customer expectations
	-   Incorporate lessons learned from additional areas of best practice
	    (e.g., measurement, risk management, and supplier management)
	-   Implement more robust high-maturity practices
	-   Address additional organizational functions critical to its products
	    and services
	-   More fully comply with relevant ISO standards
	
	CMMI is being adopted worldwide.
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.1.2_Core_Concepts_for_Enterprise_Risk_Management "3.1.2 Core Concepts for Enterprise Risk Management"
	
	According to ISO 31000:2009, the risk management process aids
	decision-making by taking account of uncertainty and the possibility of
	future events or circumstances (intended or unintended) and their
	effects on agreed objectives. It also gives a risk management process
	model, as illustrated in Figure 4. The ISO 31000:2009 approach makes it
	clear that risk management should be embedded deeply and firmly in all
	business activities. It also states that it is a continuous lifecycle
	rather than an isolated activity. This definition of risk management is
	adopted in this work.
	
	The heart of this definition is that effective risk management is about
	managing to the expected objective. Every step has an element of risk
	that needs to be managed and every outcome is uncertain. ERM is about
	reducing uncertainty.
	
	[]
	
	Figure 4: ISO 31000:2009 Model for Risk Management (Derived from[6])
	
	The following concepts are important for ERM:
	
	-   Key Risk Areas
	-   Business Impact Analysis
	-   Risk Assessment
	-   Business Risk Model/Risk Register
	-   Risk Appetite
	-   Risk Mitigation Plan/Risk Treatment Plan
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.2_Nature_of_Governance "3.1.2 Nature of Governance"
	
snippet togaf_architecture-project-management_3.1.3_Capture_Previous_Lessons "3.1.3 Capture Previous Lessons"
	
	One of the first things the Project Manager is expected to do after
	being appointed, as per the PRINCE2 method, is preparation of a Lessons
	Log.[16] This document should function as an informal repository of
	knowledge about the current project. At the very beginning, it should be
	completed with all relevant information available about similar
	projects, including key information from previous projects’ Lessons Logs
	(or Lessons Reports, if these exist) and other relevant documentation,
	experiences of people involved in such endeavors, and all other
	potential sources of knowledge (in case of Architecture Projects, the
	input should be obtained, among other sources, from the lessons learned
	documented in Phase F.[17]) It enables the Project Manager to gain
	better insight into the nature of the project and better prepare and
	execute the project by avoiding mistakes made previously by others and
	using developed know-how.
	
	The document should undergo regular updates when it should be filled in
	with additional information acquired as well as developed good and best
	practices, which will support the Project Manager in his duties on this
	and other projects.
	
	The level of detail in this document should be adequate to the
	requirements of the project (its scale and complexity) and compliant
	with the internal regulations of the particular organization. There is
	no need to create sophisticated Lessons Logs for small projects. In some
	cases even a bullet list, containing the most important observations,
	might be sufficient.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager has been      |
	|                                   | appointed to manage the project   |
	|                                   | focusing on the architecture      |
	|                                   | design and implementation of a    |
	|                                   | new Data Warehouse and Management |
	|                                   | Information System (Project E).   |
	|                                   | As a first step, the Project      |
	|                                   | Manager gathered information      |
	|                                   | about the project at hand and     |
	|                                   | interviewed the Sponsor.          |
	|                                   |                                   |
	|                                   | In order to ensure integrity,     |
	|                                   | completeness, and constant        |
	|                                   | availability of potentially       |
	|                                   | useful information, he created    |
	|                                   | the Lessons Log, where he         |
	|                                   | intended to put all the           |
	|                                   | information he considered useful  |
	|                                   | at the beginning, and where he    |
	|                                   | will include all the insights     |
	|                                   | gained during the project         |
	|                                   | execution. As it turned out,      |
	|                                   | there was another project         |
	|                                   | executed in the company, which    |
	|                                   | resembled the current project in  |
	|                                   | scope and budget and ended in     |
	|                                   | failure due to not being          |
	|                                   | completed in the estimated time.  |
	|                                   | The documented reason for that    |
	|                                   | was tasking the main architect    |
	|                                   | with Project Management duties,   |
	|                                   | which proved to be too much to    |
	|                                   | handle for one person in this     |
	|                                   | project type and set-up. The      |
	|                                   | Project Manager included the note |
	|                                   | in the Lessons Log: “In projects  |
	|                                   | with such scope, the Project      |
	|                                   | Management and Enterprise         |
	|                                   | Architecture duties should be     |
	|                                   | separated; otherwise, there is a  |
	|                                   | risk of neither of these          |
	|                                   | functions being executed properly |
	|                                   | due to the excessive workload.”   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_business-capabilities_3.1.3_Strategic_Plans_Business_Plans_and_Financial_Plans "3.1.3 Strategic Plans, Business Plans, and Financial Plans"
	
	Use the published strategy and operational business plans to identify
	any business capabilities that are considered strategic or core to the
	organization. These represent business capabilities that provide a
	competitive advantage or that are core competencies, unique to the
	particular industry and market that the business is targeting.
	
	An assessment of the business’s financial plans should also highlight
	additional business capabilities that are essential for the business to
	operate, especially those that consume significant financial resources.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.3_Technology_Governance "3.1.3 Technology Governance"
	
	Technology governance controls how an organization utilizes technology
	in the research, development, and production of its goods and services.
	Although it may include IT governance activities, it often has a broader
	scope.
	
	Technology governance is a key capability, requirement, and resource for
	most organizations because of the pervasiveness of technology across the
	organizational spectrum.
	
	Recent studies have shown that many organizations have a balance in
	favor of intangibles rather than tangibles that require management.
	Given that most of these intangibles are informational and digital
	assets, it is evident that businesses are becoming more reliant on IT:
	and the governance of IT — IT governance — is therefore becoming an even
	more important part of technology governance.
	
	These trends also highlight the dependencies of businesses on not only
	the information itself but also the processes, systems, and structures
	that create, deliver, and consume it. As the shift to increasing value
	through intangibles increases in many industry sectors, so risk
	management must be considered as key to understanding and moderating new
	challenges, threats, and opportunities.
	
	Not only are organizations increasingly dependent on IT for their
	operations and profitability, but also their reputation, brand, and
	ultimately their values are also dependent on that same information and
	supporting technology.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.4.1_An_IT_Controls_Framework_COBIT "3.1.4.1 An IT Controls Framework — COBIT"
	
	As with corporate governance, IT governance is a broad topic, beyond the
	scope of an Enterprise Architecture framework such as the TOGAF
	framework. A good source of detailed information on IT governance is the
	COBIT® framework (Control OBjectives for Information and related
	Technology). This is an open standard for control over IT, developed and
	promoted by the IT Governance Institute (ITGI), and published by the
	Information Systems Audit and Control Foundation (ISACF). COBIT controls
	may provide useful aides to running a compliance strategy.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.4_IT_Governance "3.1.4 IT Governance"
	
	IT governance provides the framework and structure that links IT
	resources and information to enterprise goals and strategies.
	Furthermore, IT governance institutionalizes best practices for
	planning, acquiring, implementing, and monitoring IT performance, to
	ensure that the enterprise's IT assets support its business objectives.
	
	In recent years, IT governance has become integral to the effective
	governance of the modern enterprise. Businesses are increasingly
	dependent on IT to support critical business functions and processes;
	and to successfully gain competitive advantage, businesses need to
	manage effectively the complex technology that is pervasive throughout
	the organization in order to respond quickly and safely to business
	needs.
	
	In addition, regulatory environments around the world are increasingly
	mandating stricter enterprise control over information, driven by
	increasing reports of information system disasters and electronic fraud.
	The management of IT-related risk is now widely accepted as a key part
	of enterprise governance.
	
	It follows that an IT governance strategy, and an appropriate
	organization for implementing the strategy, must be established with the
	backing of executive management, clarifying who owns the enterprise's IT
	resources, and, in particular, who has ultimate responsibility for their
	enterprise-wide integration.
	
snippet togaf_architecture-project-management_3.1.4_Prepare_Outline_Business_Case "3.1.4 Prepare Outline Business Case"
	
	Simultaneously, the PRINCE2 method expects the preparation of an outline
	business case, which will be an integral part of the Project Brief,
	providing information on expected costs, risks, and benefits of the
	project. The outline business case is an attempt at providing
	quantitative and qualitative assessment of the project, enabling the
	decision-makers (i.e., the Executive or similar body) to make a more
	informed choice about whether the project is feasible and beneficial,
	and whether it is the best project to undertake from the whole portfolio
	of project ideas.
	
	The document is a responsibility of the Executive, though it does not
	mean that they prepare it. This task might be delegated to, for example,
	business analysts or the Project Manager.
	
	This document should become more detailed later on, as additional
	planning efforts are conducted, and should be regularly verified and
	continuously maintained to provide the current state of knowledge about
	all factors that might affect the outcome of the project. This
	constitutes a basis for strategic decisions regarding the project,
	including a decision on whether the continuing project is still
	beneficial, feasible, and needed (see Execute, Monitor, and Control a
	Stage, Section 3.4). After the completion of the project, the business
	case should also be confirmed, to see whether the forecasts regarding
	benefits were correct (see Architecture Project Closing, Section 3.6).
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager has been      |
	|                                   | tasked with creating the business |
	|                                   | case for Project C (Consolidate   |
	|                                   | IT environment of recently merged |
	|                                   | businesses). The newly created IT |
	|                                   | environment is largely redundant, |
	|                                   | allowing for a significant        |
	|                                   | reduction of IT costs through     |
	|                                   | application and infrastructure    |
	|                                   | consolidation. Possible savings   |
	|                                   | are estimated at 20-50M EUR       |
	|                                   | yearly. The Architecture Project  |
	|                                   | that will define the target model |
	|                                   | and consolidation roadmap is      |
	|                                   | estimated to involve four FTE of  |
	|                                   | Enterprise Architects and eight   |
	|                                   | FTE of other staff for six months |
	|                                   | (total cost of 0.5M EUR including |
	|                                   | expected risk materialization     |
	|                                   | costs). The resulting roadmap     |
	|                                   | implementation is estimated to    |
	|                                   | cost between 40M and 100M EUR.    |
	|                                   |                                   |
	|                                   | The Project Manager has           |
	|                                   | documented these preliminary      |
	|                                   | findings in an outline business   |
	|                                   | case and communicated them to the |
	|                                   | Executive, mentioning that these  |
	|                                   | require further analysis, but the |
	|                                   | project looks promising and       |
	|                                   | should be, in his opinion,        |
	|                                   | continued, at least until a more  |
	|                                   | precise cost benefit analysis can |
	|                                   | be prepared based on Architecture |
	|                                   | Project findings.                 |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.5.1_Architecture_Governance_Characteristics "3.1.5.1 Architecture Governance Characteristics"
	
	Architecture Governance is the practice and orientation by which
	Enterprise Architectures and other architectures are managed and
	controlled at an enterprise-wide level. It includes the following:
	
	-   Implementing a system of controls over the creation and monitoring
	    of all architectural components and activities, to ensure the
	    effective introduction, implementation, and evolution of
	    architectures within the organization
	-   Implementing a system to ensure compliance with internal and
	    external standards and regulatory obligations
	-   Establishing processes that support effective management of the
	    above processes within agreed parameters
	-   Developing practices that ensure accountability to a clearly
	    identified stakeholder community, both inside and outside the
	    organization
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.5.2_Architecture_Governance_as_a_Board-Level_Responsibility "3.1.5.2 Architecture Governance as a Board-Level Responsibility"
	
	This section aims to provide the impetus for opening up IT and
	Architecture Governance so that the business responsibilities associated
	with architecture activities and artifacts can be elucidated and
	managed.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.5.3_The_TOGAF_Standard_and_Architecture_Governance "3.1.5.3 The TOGAF Standard and Architecture Governance"
	
	Phase G of the TOGAF ADM (see the TOGAF Standard — Architecture
	Development Method) is dedicated to implementation governance, which
	concerns itself with the realization of the architecture through change
	projects. Implementation governance is just one aspect of Architecture
	Governance, which covers the management and control of all aspects of
	the development and evolution of Enterprise Architectures and other
	architectures within the enterprise.
	
	Architecture Governance needs to be supported by an Architecture
	Governance Framework (described in 3.2 Architecture Governance
	Framework) which assists in identifying effective processes so that the
	business responsibilities associated with Architecture Governance can be
	elucidated, communicated, and managed effectively.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1.5_Architecture_Governance_Overview "3.1.5 Architecture Governance: Overview"
	
snippet togaf_architecture-project-management_3.1.5_Select_the_Project_Approach "3.1.5 Select the Project Approach"
	
	PRINCE2 expects the Project Manager to select the approach to project
	execution. Decisions to be made mentioned by the PRINCE2 method are,
	among others: what resources to use (internal or external), whether to
	build a solution from scratch or modify existing solutions, or whether
	to base it on a Commercial Off-The-Shelf (COTS) solution, or create a
	tailor-made one.
	
	In the case of Architecture Projects, only the first decision is
	relevant. However, from the perspective of Architecture Project
	Management, the approach should be understood more broadly: what methods
	and frameworks should be used to manage the Architecture Project and how
	to plan the project.
	
	The choice of methods and frameworks used in the Architecture Project
	Management should stem from the characteristics of the problem the
	project aims to solve and be connected with the adopted planning
	approach. Since the area of Architecture Project Management is a
	composite of Project Management and Enterprise Architecture fields,
	decisions should be made regarding tools used in each of these domains.
	
	1. Choosing the Resources to Use
	
	From our experience, the decision on whether to use internal or external
	resources should be made taking into consideration at least the
	following:
	
	-   Estimated complexity of the project and amount of work needed
	-   Time and budget constraints
	-   Necessary skills – note that knowledge of the existing architecture
	    may be highly relevant; cost of obtaining it (i.e., current state
	    analysis) should be carefully considered for external consultants
	-   Available resources inside the organization
	-   Previous experiences and organizational guidelines
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager tasked with   |
	|                                   | managing Project E has concluded  |
	|                                   | that due to broad estimated       |
	|                                   | scope, high complexity, and       |
	|                                   | difficulty of the project, as     |
	|                                   | well as strict time constraints   |
	|                                   | resulting from legal obligations  |
	|                                   | of the bank, the project requires |
	|                                   | multiple architects with high     |
	|                                   | competency in the data domain.    |
	|                                   | The resources at hand were        |
	|                                   | assessed as insufficient and      |
	|                                   | there was neither possibility to  |
	|                                   | recruit more people in time, nor  |
	|                                   | to train the available architects |
	|                                   | to the adequate skill level.      |
	|                                   |                                   |
	|                                   | The Project Manager has decided   |
	|                                   | to approach the project using     |
	|                                   | external resources by engaging a  |
	|                                   | group of architects from the      |
	|                                   | consulting firm, with which the   |
	|                                   | bank has a longstanding, positive |
	|                                   | relationship and has successfully |
	|                                   | completed other projects.         |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	2. Choosing a Planning Approach
	
	The decisions regarding planning approach and methods/frameworks are
	inter-dependent, as each may influence the other. The TOGAF Standard
	advocates an iterative approach with iterations repeated until the
	product achieves the expected quality and consistency, which many people
	equate with the agile approach and methods. This is not the case, and
	there is no fundamental contradiction between the proposed approach and
	the waterfall methods. Nevertheless, it might require tailoring of the
	TOGAF framework to fit within the constraints of the Project Management
	methods and particular projects. For more information on how to plan the
	project, with particular focus on dividing it into stages, refer to
	Architecture Project Planning (Section 3.2) and Planning a Stage
	(Section 3.3).
	
	3. Choosing a Method
	
	Useful in the case of choosing the best approach (from the Project
	Management method viewpoint) to the particular problem could be the
	Cynefin Framework. It divides the so-called problem domain into four
	main categories: complex, complicated, obvious (simple), and
	chaotic.[18] Depending on the category of the problem, different methods
	are recommended, due to them being best suited for different
	circumstances as they have different strengths and weaknesses. In our
	experience, the following methods are recommended for particular problem
	categories:
	
	-   Complex – SCRUM method, specifically designed to deal with a high
	    level of volatility and uncertainty
	-   Complicated – e.g., Kanban and SCRUM methods, as the category covers
	    sophisticated problems, requiring careful analysis, highly expert
	    knowledge to solve, and some amount of probing different solutions,
	    as there is no one best solution
	-   Obvious (simple) – all of the waterfall approaches, as the category
	    covers known problems and has best practices prepared, enabling use
	    of a carefully preplanned approach
	-   Chaotic –no method recommended, due to complete unpredictability of
	    the systems’ behavior
	
	Problems in the area of Enterprise Architecture tend to fulfill the
	criteria for simple and complicated categories, especially when
	architecture is already present in the organization, as it aims at
	increasing the level of order and predictability. The cause-and-effect
	relationships are present and possible to discern, and the only case in
	which the problems might become complex or chaotic is high volatility of
	the environment (usually combined with lack of knowledge about the
	organization at hand and its exterior). To which domain a particular
	problem belongs depends, inter alia, on the expertise in the
	organization, its architecture maturity, scope of the project, and
	additional constraints imposed. The task to classify the problem is up
	to the Project Manager.
	
	4. Choosing an Enterprise Architecture Framework
	
	In the area of Enterprise Architecture, the choice to be made is between
	one of different architecture frameworks. There are at least a few
	different major frameworks which provide tools and resources for
	Enterprise Architects (including the Zachman Framework and the Federal
	Enterprise Architecture (FEA)). However, not all of them are useful in
	the case of Architecture Project Management. This is the consequence of
	the different focus of each of the frameworks. As Architecture Project
	Management is, in fact, a process of creating an architecture, only the
	frameworks which provide methods of creating architectures should be
	taken into consideration. This is where the TOGAF framework, as compared
	to other frameworks, excels, thanks to its detailed description of the
	ADM.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | has no clear understanding what   |
	|                                   | views are necessary to achieve    |
	|                                   | the goals of the project, making  |
	|                                   | it a complicated problem. He      |
	|                                   | therefore has decided to include  |
	|                                   | on “overview” stage at the        |
	|                                   | beginning, enabling him to        |
	|                                   | determine scope, which will allow |
	|                                   | completion of the project in the  |
	|                                   | set timeframe and with set        |
	|                                   | resources. After the thorough     |
	|                                   | analysis of two applications      |
	|                                   | during this phase, he confirmed   |
	|                                   | with the Executive what is        |
	|                                   | feasible to do in the following   |
	|                                   | stages and will address the       |
	|                                   | existing business need of the     |
	|                                   | Executive. Later on, the Project  |
	|                                   | Manager has decided to adopt an   |
	|                                   | iterative approach by splitting   |
	|                                   | the 50 applications used into     |
	|                                   | groups of eight, which will be    |
	|                                   | assessed in every two-week        |
	|                                   | iteration.                        |
	|                                   |                                   |
	|                                   | In Project E, the Project Manager |
	|                                   | has to deliver precisely          |
	|                                   | described artifacts and products  |
	|                                   | to a set date, making the problem |
	|                                   | a simple one, assuming the        |
	|                                   | presence of necessary resources.  |
	|                                   | Failure to do so will result in   |
	|                                   | potentially costly delays in the  |
	|                                   | project, including fines for not  |
	|                                   | complying with regulatory         |
	|                                   | requirements, as the architecture |
	|                                   | stream is on the critical path.   |
	|                                   | Therefore, the Project Manager    |
	|                                   | has adopted the preplanned        |
	|                                   | approach with time-bound stages   |
	|                                   | with some buffer, focusing        |
	|                                   | initially on the baseline         |
	|                                   | (baseline first approach). This   |
	|                                   | plan has been assessed as         |
	|                                   | feasible by the external          |
	|                                   | consulting experts involved in    |
	|                                   | the project, who have             |
	|                                   | participated in similar projects  |
	|                                   | in the past. Nevertheless, the    |
	|                                   | risk has been assessed and        |
	|                                   | communicated, and its significant |
	|                                   | part has been transferred to the  |
	|                                   | consulting firm in the form of    |
	|                                   | additional provisions in the      |
	|                                   | contract.                         |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	In this Guide we assume the Architecture Projects are conducted
	according to the TOGAF framework, supplemented with practices stemming
	from the most popular Project Management methods.
	
snippet togaf_architecture-project-management_3.1.6_Design_and_Appoint_the_Project_Management_Team "3.1.6 Design and Appoint the Project Management Team"
	
	Project Managers of Architecture Projects do not operate in a void and
	do not deliver products singlehandedly. They use support provided by
	other institutions within an enterprise and are regulated by them in
	order to ensure that the goals of the organization are met. They are
	part of the team, working together to deliver the products and realize
	the benefits for the organization.
	
	In PRINCE2, they are part of a Project Management Team, which provides
	them with oversight and support. These Project Management Teams are the
	whole Project Management structure comprising bodies responsible for
	governance,[19] management, and support. There are also Project
	Management Teams in PMBOK, but, in comparison to PRINCE2, they are
	limited to Project Management and leadership activities, and do not
	include governance bodies (they only cooperate with them).
	
	[]
	
	Figure 5: Simplified Chart Representing Model Project Team Based on the
	PRINCE2 Method
	
	1. Governance in Architecture Projects
	
	The bodies which are responsible for successful delivery of the product
	should naturally be the ones most interested in “ensuring that the
	business is conducted properly” (which is the most general definition of
	governance, found also in the TOGAF Standard). This is exactly the case:
	the governing body in the case of PMBOK is the Sponsor, in PRINCE2 it is
	the Steering Committee, led by an Executive (who is the ultimate
	decision-maker, only advised by optional representatives of users and
	suppliers), and in the TOGAF Standard it is the Architecture Board
	(which is a sponsor of architecture in an enterprise).
	
	It is necessary to bear in mind, though, that there is a difference in
	the type of governance provided by the Architecture Board (i.e.,
	Architecture Governance) and the other two bodies mentioned (i.e.,
	Project Governance). Architecture Governance is the practice and
	orientation by which Enterprise Architectures and other architectures
	are managed and controlled at an enterprise-wide level, while Project
	Governance (according to PMBOK) is an “oversight function that is
	aligned with the organization’s governance model and that encompasses
	the project lifecycle … providing a comprehensive, consistent method of
	controlling the project and ensuring its success”. As a result,
	Architecture Projects should be subject to both types of governance,
	first allowing to provide alignment with strategic architecture and
	sub-architectures, second to ensure that the project delivers expected
	results in terms of quality, budget, and time.
	
	Does this mean that the Project Manager on the Architecture Project
	should be overseen by two different bodies? Often yes. However, it
	depends on the Project Management and Enterprise Architecture
	organization. Is the architecture governance body (such as the
	Architecture Board) already established in the organization? If it is,
	can the architecture governance body take the role of project governance
	as well? If it is not and the project is the organization’s initial
	Enterprise Architecture effort, can the Steering Committee transform
	into an Architecture Board after the project is completed? There are
	many possibilities and the approach should be different depending on
	project and organization characteristics.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager has been      |
	|                                   | tasked with managing Project B    |
	|                                   | (improve logistics process). The  |
	|                                   | project is sponsored by the CIO   |
	|                                   | of the company, who has been      |
	|                                   | tasked by the business to provide |
	|                                   | current information to allow for  |
	|                                   | better planning and resource      |
	|                                   | allocation, to shorten            |
	|                                   | order-to-delivery time as an end  |
	|                                   | result. The CIO presides over the |
	|                                   | Architecture Board, which also    |
	|                                   | includes some leaders of business |
	|                                   | units involved in the company’s   |
	|                                   | logistics process.                |
	|                                   |                                   |
	|                                   | The CIO decided there is no need  |
	|                                   | to set up additional bodies to    |
	|                                   | provide project governance, as    |
	|                                   | most of the key stakeholders are  |
	|                                   | already part of the body          |
	|                                   | providing architecture            |
	|                                   | governance. There are no          |
	|                                   | inter-dependencies or planned     |
	|                                   | follow-ups at the moment, and all |
	|                                   | decisions will be made on the     |
	|                                   | basis of its outcome.             |
	|                                   |                                   |
	|                                   | As a result, the Project Manager  |
	|                                   | turns to the Architecture Board   |
	|                                   | and CIO in particular to provide  |
	|                                   | not only architecture governance, |
	|                                   | but also project governance as a  |
	|                                   | Sponsor of the project, and, if   |
	|                                   | possible, to include the rest of  |
	|                                   | the affected business leaders on  |
	|                                   | the Board.                        |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager has been      |
	|                                   | ordered to lead Project E, aiming |
	|                                   | to design the to-be architecture  |
	|                                   | in a bank, which includes new     |
	|                                   | data warehouse and management     |
	|                                   | information systems. The          |
	|                                   | Architecture Project is part of a |
	|                                   | larger program of new solution    |
	|                                   | implementation, making            |
	|                                   | architecture effort only one of   |
	|                                   | multiple streams, which are       |
	|                                   | closely related and dependent on  |
	|                                   | each other. This is especially    |
	|                                   | true for the Architecture         |
	|                                   | Project, which functions as an    |
	|                                   | enabler for further work. The     |
	|                                   | project has been initiated by the |
	|                                   | Program Management of the whole   |
	|                                   | information system transformation |
	|                                   | initiative, which is not in any   |
	|                                   | way connected with the            |
	|                                   | Architecture Board. It is         |
	|                                   | strictly bound by budget,         |
	|                                   | timeframe, and scope, requiring   |
	|                                   | strict adherence to the plans and |
	|                                   | requirements.                     |
	|                                   |                                   |
	|                                   | The Project Manager is            |
	|                                   | responsible in this case to the   |
	|                                   | Program Management, while         |
	|                                   | simultaneously has to adhere to   |
	|                                   | the rules and constraints imposed |
	|                                   | by the Architecture Board in the  |
	|                                   | organization. Depending on the    |
	|                                   | type of issue, whether it is      |
	|                                   | connected with architecture, or   |
	|                                   | Project Management and execution, |
	|                                   | he is obliged to follow different |
	|                                   | escalation routes.                |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	2. Project Manager’s Support in Architecture Projects
	
	Sometimes, Architecture Projects are too big and complex for a single
	Project Manager to undertake and manage, even with support provided from
	the enterprise leadership. Furthermore, some projects may require
	specific skills and competencies, which are not possessed by the Project
	Manager designated to lead the project. This creates the need for
	additional people, other than those in the Architecture Board or other
	governing body, who ultimately become the core of the Project Management
	Team.
	
	The TOGAF Standard describes the roles that are usually part of an
	“architecture team” in the TOGAF^(®) Series Guide: Architecture Skills
	Framework: Enterprise Architecture Role and Skill Categories, and
	Enterprise Architecture Role and Skill Definitions. These include both
	roles responsible for governing the architecture and supporting the
	project and roles responsible for operational management and delivery
	(architects for different domains and solution designers). These roles
	are part of the Architecture Capability Framework and are separate from
	the structure of a Project Management Team. The TOGAF Standard does not
	describe how the Project Management Team supporting the project should
	be staffed or organized. However, some hints are provided in the Project
	Management methods.
	
	PMBOK provides general information about Project Teams[20] in Section
	2.3 and hardly any regarding Project Management Team (a subset of
	Project Team responsible for the Project Management and leadership
	activities). It says that the only constant with regards to the Project
	Team is Project Manager’s role as its leader, giving a lot of freedom to
	the Project Manager. Among the factors which should be considered while
	devising the Project Team structure, PMBOK mentions culture, scope,
	location, and organizational structure. It does not provide guidelines
	on how it should be organized, other than giving information on some of
	possible roles within the Project Team (for more information, see
	Section 2.3 of the PMBOK Guide) and tools supporting the Project
	Manager’s decision-making and management processes (see Chapter 9 of the
	PMBOK Guide).
	
	PRINCE2 is more specific and points out team managers, who are people
	responsible for delivery of products assigned by the Project Manager, as
	defined in the Project Work Packages later on (for more information on
	Project Work Packages and Work Packages see Architecture Project
	Management Concepts, Section 2.3) and people being part of Project
	Support (usually as part of the Project Management Office), whose duties
	are limited to support in administration and operations and providing
	guidance regarding Project Management tools and techniques).
	
	The decision on whether to appoint team managers, how to define their
	roles and duties, is entirely up to the Project Manager (but this
	decision should be approved by the bodies providing project governance),
	but shouldn't be made without serious consideration, as it impacts how
	the work will be divided during the project. The factors, which should
	be considered are, among others:
	
	-   Estimated scope of the project, with regard to both domains and
	    segments, that will be affected by the project
	-   Project constraints, especially with regard to timeframe
	-   Size of the team involved
	
	Based on what we know about Architecture Projects and having a general
	knowledge of Project Management methods, it is possible to propose at
	least two ways of selecting team managers:
	
	-   By architecture domain, where particular team managers are
	    architects responsible for either business, data, application, or
	    technology architecture
	-   By enterprise continuum level, where particular team managers are
	    architects responsible for different segments or solutions, which
	    are affected by the project (however, we recommend that the
	    Architecture Project has a clear scope restricted to one of the
	    levels: strategic, segment, or capability)
	
	  Example   In Project E, architecture is just one of work streams of a large project. The architecture work stream can use a general Project Support team (PMO) for administrative tasks such as setting up meetings or managing the work stream repository. Therefore, the architecture work stream leader decided he would not need any separate support staff.
	  --------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	The team structure is established in the Project Start-up stage.
	However, after the initial stages of the project, the Project Team
	structure should be reviewed and may be adapted to changing needs.
	
	3. Delivery Team in Architecture Projects
	
	The last group (but no less important than those mentioned earlier) are
	people engaged in operational execution by working on project
	deliverables. They are organized in teams, managed by the Project
	Manager directly or team-level managers, depending on the Project
	Management structure in a particular project.
	
	Selection of people to be involved in the project is critical to its
	success. It depends mainly on the goals and scope of the Architecture
	Project, and the resources available. The TOGAF^(®) Series Guide:
	Architecture Skills Framework can be helpful in planning and selecting
	delivery team members. More general techniques in this area are
	described in the PMBOK Guide, Chapter 9.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project B, the delivery team   |
	|                                   | was selected among available      |
	|                                   | resources. The aim was to ensure  |
	|                                   | the team has skills strong enough |
	|                                   | to cover each of the business     |
	|                                   | subunits with a single workshop.  |
	|                                   | This required careful planning    |
	|                                   | and the right mix of skills and   |
	|                                   | knowledge of current information  |
	|                                   | flows and systems within the      |
	|                                   | team.                             |
	|                                   |                                   |
	|                                   | The delivery team consisted of:   |
	|                                   |                                   |
	|                                   | -   Enterprise Architect – who    |
	|                                   |     was also the Project Manager; |
	|                                   |     responsible for planning the  |
	|                                   |     project, engaging             |
	|                                   |     stakeholders, preparing       |
	|                                   |     templates, reviewing work     |
	|                                   |     products, and preparing final |
	|                                   |     deliverables; would also take |
	|                                   |     an active part in business    |
	|                                   |     workshops to ensure they are  |
	|                                   |     fit-for-purpose               |
	|                                   | -   Business Process Analyst –    |
	|                                   |     who would facilitate business |
	|                                   |     workshops and document their  |
	|                                   |     results in line with the      |
	|                                   |     approach developed with the   |
	|                                   |     Enterprise Architect          |
	|                                   | -   Logistics Information Systems |
	|                                   |     Architect – who would take an |
	|                                   |     active part in business       |
	|                                   |     workshops and provide         |
	|                                   |     knowledge on the current IT   |
	|                                   |     systems capabilities and      |
	|                                   |     their development potential   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.1.7_Assemble_the_Project_Brief "3.1.7 Assemble the Project Brief"
	
	According to PRINCE2 and PMBOK, the project becomes authorized when a
	document summarizing the project’s assumptions is assembled and
	approved. At minimum, the document should define the high-level
	boundaries of the project.
	
	+-----------------------------------+-----------------------------------+
	|                                   | According to PRINCE2, the Project |
	|                                   | Brief is a statement that         |
	|                                   | describes the purpose, cost,      |
	|                                   | time, and performance             |
	|                                   | requirements, and constraints for |
	|                                   | a project.^([21])                 |
	|                                   |                                   |
	|                                   | According to PMBOK, the project   |
	|                                   | becomes authorized when the       |
	|                                   | Project Charter is approved. The  |
	|                                   | Project Charter documents the     |
	|                                   | business needs, assumptions,      |
	|                                   | constraints, the understanding of |
	|                                   | the customer’s needs and          |
	|                                   | high-level requirements, and the  |
	|                                   | new product, service, or result   |
	|                                   | that it is intended to satisfy.   |
	+-----------------------------------+-----------------------------------+
	
	The document is issued by the Executive that formally authorizes the
	existence of a project and provides the Project Manager with the
	authority to apply organizational resources to project activities. It is
	recommended that the Project Manager participates in the development of
	the Project Charter to obtain a foundational understanding of the
	project requirements. This understanding will better allow for efficient
	resources allocation to project activities.
	
	The information from the document is relevant for the Project Manager to
	plan key milestones, a detailed schedule, as well as key resources
	essential to perform particular tasks in the planning phase. They are
	also important at the end of the project in order to verify whether the
	project delivered the desired results within the specified tolerances of
	time, cost, quality, and scope. The information included in the document
	may be updated along with the progress of work in the planning phase.
	
	The type and scope of the information needed at the beginning of an
	Architecture Project, as well as documents that they will be included
	in, depends on the Project Management rules and principles adopted in
	the organization conducting the project.
	
	  Example   In Project D, the Project Manager utilized the information presented in the Project Brief to develop a kick-off presentation and conduct a meeting informing key stakeholders of the Architecture Project about its scope, business needs to be addressed, as well as imposed constraints. Furthermore, the information was utilized by the Project Manager to plan key milestones and develop a detailed schedule for the Architecture Project.
	  --------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_architecture-project-management_3.1.8_Define_the_Management_Approach "3.1.8 Define the Management Approach"
	
	After initial project start-up – selecting the project approach and
	appointing the Project Management Team – the Project Manager determines
	how the project will be managed. In PRINCE2, it is called preparing a
	Management Strategy. In PMBOK, it is a part of the Develop Project
	Charter process.
	
	The Define the Management Approach step includes determining an approach
	to:
	
	-   Risk management
	-   Quality management
	-   Stakeholder and communication management
	-   Project controls
	
	1. Risk Management Approach
	
	As part of project initiation, the Project Manager determines the risk
	management approach and confirms it with the project governance body.
	Typically, an approach to risk management includes the following steps:
	
	-   Risk identification and classification
	-   Risk analysis (qualitative and quantitative)
	-   Risk mitigation and response strategy design
	-   Risk monitoring
	
	The Project Manager also performs an initial risk assessment, which
	includes risk identification, classification, analysis, and design at
	the beginning of the project. The key result of this activity is a risk
	log, which documents identified risks and their characteristics together
	with designed responses. The risk log will be used throughout the
	project to monitor and manage risk; see Execute, Monitor, and Control a
	Stage (Section 3.4) for details.
	
	For more information on project risk management techniques, refer to the
	PMBOK Guide, Chapter 11.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project E, initial risk        |
	|                                   | assessment is performed first on  |
	|                                   | a work stream level, then on the  |
	|                                   | project level (the project        |
	|                                   | consists of a few work streams).  |
	|                                   | In the architecture work stream,  |
	|                                   | initial risk assessment is        |
	|                                   | performed on a deliverable level, |
	|                                   | then consolidated and extended on |
	|                                   | the work stream level.            |
	|                                   |                                   |
	|                                   | For a risk log example, refer to  |
	|                                   | the example in Capture and        |
	|                                   | Examine Issues and Risks, in      |
	|                                   | Section 3.4.5.                    |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	
	     Risk management from the Project Management perspective is concerned with risks to meeting projects goals. Please note that the Architecture Project has to deal with another key type of risk – risk to the enterprise associated with the Architecture Vision and related to implementing it. This type of risk – we can call it “architecture risk” – has to be managed and mitigated. Techniques of managing architecture risk are similar to that applied to project risk; they are described in the TOGAF^(®) Standard – ADM Techniques: Risk Management.
	
	
	2. Quality Management Approach
	
	As part of project initiation, the Project Manager determines the
	quality management approach and confirms it with the project governance
	body. The quality management approach should be compatible with the
	organization’s quality management system. Typically, it should
	establish:
	
	-   Key quality characteristics of the project deliverables – conditions
	    that would be used to assess conformance when the deliverable is
	    handed over
	-   Documentation requirements – how these quality characteristics would
	    be documented to allow for conformance checks
	-   Quality assurance processes – how these quality characteristics
	    would be checked for conformance (before and on deliverable
	    handover)
	
	The quality management approach will be used throughout the project.
	Established criteria are key for stage and project closing activities
	(see Ending a Stage, Section 3.5, and Architecture Project Closing,
	Section 3.6).
	
	For more information on project quality management techniques, refer to
	the PMBOK Guide, Chapter 8.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project E, each of the project |
	|                                   | deliverables is described with a  |
	|                                   | Deliverable Charter. The          |
	|                                   | Deliverable Charter defines the   |
	|                                   | deliverable name, its scope,      |
	|                                   | required inputs, acceptance       |
	|                                   | criteria, and acceptance process. |
	|                                   | Two types of acceptance processes |
	|                                   | are designed – one for            |
	|                                   | documentation deliverables        |
	|                                   | (analysis, architecture, etc.)    |
	|                                   | and one for software deliverables |
	|                                   | which includes the system testing |
	|                                   | approach.                         |
	|                                   |                                   |
	|                                   | The document acceptance process   |
	|                                   | consists of five steps: initial   |
	|                                   | hand over of the deliverable,     |
	|                                   | initial deliverable review (two   |
	|                                   | weeks), review meeting (one day), |
	|                                   | deliverable revision (two weeks), |
	|                                   | final deliverable review (one     |
	|                                   | week). It is assumed that the     |
	|                                   | final deliverable review confirms |
	|                                   | the deliverable’s conformance to  |
	|                                   | quality requirements.             |
	|                                   |                                   |
	|                                   | Acceptance processes and          |
	|                                   | Deliverable Charters are          |
	|                                   | discussed and accepted by the     |
	|                                   | project governing body.           |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	3. Stakeholder and Communication Management Approach
	
	TOGAF ADM Phase A includes stakeholder identification and determining an
	approach to stakeholder communication. It is one of the core activities
	that the Project Manager has to assure during the Architecture Project
	initiation.
	
	Specifically, the Project Manager should:
	
	-   Identify all stakeholders and their concerns about the resulting
	    Enterprise Architecture
	-   Determine the stakeholder communication management approach
	-   Determine the stakeholder engagement deliverables
	-   Document all the above information in a form of stakeholder map and
	    communication plan
	
	The TOGAF stakeholder management technique fulfils needs related to the
	proper stakeholder management approach. This technique is described in
	the TOGAF^(®) Standard – ADM Techniques: Stakeholder Management. PMBOK
	uses a similar approach, which is described in Project Stakeholder
	Management (Chapter 13).
	
	  Example   In Project A, during initiation of the project and Phase A of the ADM, the Project Manager uses the approach described in the TOGAF Standard to manage stakeholders. At first he identified the stakeholders, then he grouped the stakeholders with common concerns into stakeholder groups (e.g., C-level management, IT operations), then he defined the stakeholder communication approach using the power-interest matrix. He defined for each of four groups how and how often the Project Team would communicate with each of the four groups. (e.g., the stakeholders with low level of interest and low power receive only the weakly project brief on their emails). At the end, the Project Manager defined the stakeholder engagement deliverables and created the stakeholder map matrix. He added this matrix to the project communication plan.
	
	
	The output deliverables stakeholder maps and communication plans are
	used by the Project Manager during project execution and control. The
	stakeholder map is also the important source of knowledge about
	engagement deliverables (catalogs, matrices diagrams) for Enterprise
	Architects that participate in the project.
	
	4. Project Controls Approach
	
	Project controls define the level of control that is demanded to ensure
	proper project execution and the effectiveness of Project Management.
	Project controls should be defined during initiation of the project.
	
	PRINCE2 defines the project controls as:[22]
	
	-   The frequency and format of communication between the Project
	    Management levels
	-   The number of stages and hence end stage assessments
	-   Mechanisms to capture and analyze issues and changes
	-   Mechanisms to escalate exceptions
	-   Tolerances for delegated authority
	-   How delegated authority from one level of management to another will
	    be monitored
	
	Project controls should be defined as part of the management approach.
	They are executed throughout the project (see Execute, Monitor, and
	Control a Stage, Section 3.4).
	
	+-----------------------------------+-----------------------------------+
	| Example                           | During the initiation of Project  |
	|                                   | A, the Project Manager defined    |
	|                                   | several project controls:         |
	|                                   |                                   |
	|                                   | -   He set up weakly status       |
	|                                   |     report meetings for the       |
	|                                   |     Architecture Project Team.    |
	|                                   | -   He decided to divide the      |
	|                                   |     analyzed applications to tree |
	|                                   |     packages and assign the       |
	|                                   |     responsible application       |
	|                                   |     architect for each package.   |
	|                                   | -   He stated that all issues     |
	|                                   |     will be registered in a       |
	|                                   |     shared issue log and all      |
	|                                   |     changes will be registered in |
	|                                   |     a shared change log in the    |
	|                                   |     form of Excel^(®)             |
	|                                   |     spreadsheets in the project   |
	|                                   |     intranet repository.          |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_3_Core_Concepts_3.10_Enterprise_Continuum "3.10 Enterprise Continuum"
	
	The TOGAF Standard includes the concept of the Enterprise Continuum,
	which sets the broader context for an architect and explains how generic
	solutions can be leveraged and specialized in order to support the
	requirements of an individual organization.
	
	The Enterprise Continuum is a categorization for assets held in the
	Enterprise Repositories that provides methods for classifying assets,
	including architecture and solution artifacts as they evolve from
	generic Foundation Architectures to Organization-Specific Architectures.
	The Enterprise Continuum comprises two complementary concepts: the
	Architecture Continuum and the Solutions Continuum.
	
	The Enterprise Continuum is described in detail in the TOGAF Standard —
	Architecture Content.
	
	An overview of the structure and context for the Enterprise Continuum is
	shown in Figure 3-4 .
	
	[]
	
	Figure 3-4: Enterprise Continuum
	
snippet togaf_introduction_3_Core_Concepts_3.11_Architecture_Repository "3.11 Architecture Repository"
	
	Supporting the Enterprise Continuum is the concept of an Architecture
	Repository which can be used to store different classes of architectural
	output at different levels of abstraction, created by the ADM. In this
	way, the TOGAF Standard facilitates understanding and co-operation
	between stakeholders and practitioners at different levels.
	
	By means of the Enterprise Continuum and Architecture Repository,
	architects are encouraged to leverage all other relevant architectural
	resources and assets in developing an Organization-Specific
	Architecture. In this context, the TOGAF ADM can be regarded as
	describing a process lifecycle that operates at multiple levels within
	the organization, operating within a holistic governance framework and
	producing aligned outputs that reside in an Architecture Repository. The
	Enterprise Continuum provides a valuable context for understanding
	architectural models: it shows building blocks and their relationships
	to each other, and the constraints and requirements on a cycle of
	architecture development.
	
	The structure of the TOGAF Architecture Repository is shown in Figure
	3-5 .
	
	[]
	
	Figure 3-5: TOGAF Architecture Repository Structure
	
	The major components within an Architecture Repository are as follows:
	
	-   The Architecture Metamodel describes the organizationally tailored
	    application of an architecture framework, including a metamodel for
	    architecture content
	-   The Architecture Capability defines the parameters, structures, and
	    processes that support governance of the Architecture Repository
	-   The Architecture Landscape is the architectural representation of
	    assets deployed within the operating enterprise at a particular
	    point in time — the landscape is likely to exist at multiple levels
	    of abstraction to suit different architecture objectives
	-   The Standards Library captures the standards with which new
	    architectures must comply, which may include industry standards,
	    selected products and services from suppliers, or shared services
	    already deployed within the organization
	-   The Reference Library provides guidelines, templates, patterns, and
	    other forms of reference material that can be leveraged in order to
	    accelerate the creation of new architectures for the enterprise
	-   The Governance Repository provides a record of governance activity
	    across the enterprise
	-   The Architecture Requirements Repository provides a view of all
	    authorized architecture requirements which have been agreed with the
	    Architecture Board
	-   The Solutions Landscape presents an architectural representation of
	    the SBBs supporting the Architecture Landscape which have been
	    planned or deployed by the enterprise
	
	The TOGAF Architecture Repository is described in the TOGAF Standard —
	Architecture Content.
	
snippet togaf_introduction_3_Core_Concepts_3.12.1_Overview "3.12.1 Overview"
	
	The TOGAF ADM provides lifecycle management to create and manage
	architectures within an enterprise. At each phase within the ADM, a
	discussion of inputs, outputs, and steps describes a number of
	architectural work products.
	
	An essential task when establishing the enterprise-specific Enterprise
	Architecture Capability in the Preliminary Phase of the ADM is to
	define:
	
	-   A categorization framework to be used to structure the Architecture
	    Descriptions, the work products used to express an architecture, and
	    the collection of models that describe the architecture; this is
	    referred to as the Content Framework
	-   An understanding of the types of entities within the enterprise and
	    the relationships between them that need to be captured, stored, and
	    analyzed in order to create the Architecture Description; this
	    Enterprise Metamodel depicts this information in the form of a
	    formal model
	-   The specific artifacts to be developed (see 3.6 Deliverables,
	    Artifacts, and Building Blocks)
	
	The Content Framework chosen is likely to be influenced by:
	
	-   The Architecture Framework selected as the basis for the Enterprise
	    Architecture Capability
	-   The chosen software tool used to support the Enterprise Architecture
	    Capability
	
snippet togaf_introduction_3_Core_Concepts_3.12.2_Content_Framework "3.12.2 Content Framework"
	
	The Content Framework defines a categorization framework to be used to
	describe the building blocks and artifacts reflecting decisions taken in
	creating the overall architecture deliverables.
	
	The Architecture Repository, which is explained in 3.11 Architecture
	Repository , is structured to store the artifacts and work products
	identified in the Content Framework. The Content Framework is one
	element of the Enterprise-Specific Architecture Framework.
	
	There are many alternative Content Frameworks (e.g., the TOGAF Content
	Framework, the Zachman Framework, DoDAF, NAF, etc.). Selecting a Content
	Framework is essential even though the choice of Content Framework is
	less important. The final Content Framework is usually adapted to fit
	specific organization needs.
	
	The TOGAF Content Framework is intended to:
	
	-   Provide a detailed model of architectural work products
	-   Drive consistency in the outputs created when following the ADM
	-   Provide a comprehensive checklist of architecture output that could
	    be created
	-   Reduce the risk of gaps within the final architecture deliverable
	    set
	-   Help an enterprise mandate standard architecture concepts, terms,
	    and deliverables
	
	At the highest level, the TOGAF Content Framework (see Figure 3-6) is
	structured in line with the phases of the ADM.
	
	[]
	
	Figure 3-6: Content Framework by ADM Phase
	
	-   Architecture Principles, Vision, Motivation, and Requirements models
	    are intended to capture the surrounding context of formal
	    architecture models, including general Architecture Principles,
	    strategic context that forms input for architecture modeling, and
	    requirements generated from the architecture
	
	    The relevant aspects of the business context that have given rise to
	    the Request for Architecture work are typically investigated,
	    refined, validated, and recorded in the Preliminary and Architecture
	    Vision phases.
	
	-   Business Architecture captures architecture models of the business,
	    looking specifically at factors that motivate the enterprise, its
	    structure, and its capabilities
	
	-   Information Systems Architecture models capture architecture models
	    of IT systems, looking at applications and data in line with the
	    TOGAF ADM phases
	
	-   Technology Architecture models capture technology assets that are
	    used to implement and realize information system solutions
	
	-   Architecture Realization/Transformation models capture change
	    roadmaps showing transition between architecture states and binding
	    statements that are used to steer and govern an implementation of
	    the architecture
	
	-   Architecture Change Management models capture value realization
	    management events, internal and external, that impact the Enterprise
	    Architecture and the generation of requirements for action
	
	The TOGAF Content Framework is described in detail in the TOGAF Standard
	— Architecture Content.
	
snippet togaf_introduction_3_Core_Concepts_3.12.3_Enterprise_Metamodel "3.12.3 Enterprise Metamodel"
	
	The TOGAF Standard encourages development of an Enterprise Metamodel,
	which defines the types of entity to appear in the models that describe
	the enterprise, together with the relationships between these entities.
	
	For example, one type in an Enterprise Metamodel might be Role. Then the
	enterprise's Business Architecture models might include such instances
	of Role as Teller, Pilot, Manager, Volunteer, Customer, or Firefighter.
	Of course it would be an unusual enterprise that had all of these roles.
	
	An Enterprise Metamodel provides value in several ways:
	
	-   It gives architects a starter set of the types of thing to
	    investigate and to cover in their models
	
	-   It provides a form of completeness-check for any architecture
	    modeling language, or architecture metamodel, that is proposed for
	    use in an enterprise
	
	    Namely, how completely does it handle the types of entity in the
	    Enterprise Metamodel, and manage required facts about them such as
	    their attributes and relationships?
	
	-   It can help ensure:
	    -   Consistency
	    -   Completeness
	    -   Traceability
	
	Note that the TOGAF Standard does not aim to constrain an enterprise's:
	
	-   Selection of artifacts
	
	-   Modeling notation
	
	    The TOGAF Standard may use a variety of modeling languages, such as
	    the ArchiMate® modeling language, Business Process Modeling
	    Notation^(TM) (BPMN^(TM)), Unified Modeling Language^(TM) (UML®),
	    entity relationship diagramming, flowcharting, or any other notation
	    that can express some TOGAF ideas.
	
	The types of entity within an enterprise and the relationships between
	them are specific to the individual enterprise. Developing a
	high-quality metamodel is an important aspect of establishing the
	Enterprise Architecture Capability.
	
snippet togaf_introduction_3_Core_Concepts_3.12.4_Developing_the_Enterprise_Metamodel "3.12.4 Developing the Enterprise Metamodel"
	
	The Enterprise Metamodel is an important part of the
	Organization-Specific Architecture Framework, as highlighted here.
	Figure 3-7 shows how the Enterprise Continuum (see 3.10 Enterprise
	Continuum) provides a way to consider resources on a scale ranging from
	the most general ("Foundation") to most specific
	("Organization-Specific"):
	
	[]
	
	Figure 3-7: Applying the Enterprise Continuum
	
	To support development of the enterprise's metamodel, the TOGAF Library
	includes a Foundation-level Core Enterprise Metamodel, detailed in the
	TOGAF Standard — Architecture Content. It shows types of entity, and
	relationships between them, that are likely to be required in modeling
	most enterprises and provides a context for the artifacts suggested in
	the ADM.
	
	The Foundation Enterprise Metamodel is illustrated in Figure 3-8 .
	
	[]
	
	Figure 3-8: The TOGAF Core Enterprise Metamodel
	
snippet togaf_introduction_3_Core_Concepts_3.12_TOGAF_Content_Framework_and_Enterprise_Metamodel "3.12 TOGAF Content Framework and Enterprise Metamodel"
	
snippet togaf_introduction_3_Core_Concepts_3.13_Establishing_and_Maintaining_an_Enterprise_Architecture_Capability "3.13 Establishing and Maintaining an Enterprise Architecture Capability"
	
	In order to carry out architectural activity effectively within an
	enterprise, it is necessary to put in place an appropriate business
	capability for architecture, through organization structures, roles,
	responsibilities, skills, and processes. An overview of the TOGAF
	Architecture Capability is shown in Figure 3-9 .
	
	[]
	
	Figure 3-9: TOGAF Architecture Capability Overview
	
snippet togaf_introduction_3_Core_Concepts_3.14_Establishing_the_Architecture_Capability_as_an_Operational_Entity "3.14 Establishing the Architecture Capability as an Operational Entity"
	
	Barring Architecture Capabilities set up to purely support change
	delivery programs, it is increasingly recognized that a successful
	Enterprise Architecture practice must sit on a firm operational footing.
	In effect, an Enterprise Architecture practice must be run like any
	other operational unit within a business; i.e., it should be treated
	like a business. To this end, and over and above the core processes
	defined within the ADM, an Enterprise Architecture practice should
	establish capabilities in the following areas:
	
	-   Financial Management
	-   Performance Management
	-   Service Management
	-   Risk and Opportunity Management (see B.34 Risk Management)
	-   Resource Management
	-   Communications and Stakeholder Management (see 4.36 Communications
	    and Stakeholder Management)
	-   Quality Management
	-   Supplier Management (see B.40 Supplier Management)
	-   Configuration Management (see B.7 Configuration Management)
	-   Environment Management
	
	Central to the notion of operating an ongoing architecture is the
	execution of well-defined and effective governance, whereby all
	architecturally significant activity is controlled and aligned within a
	single framework.
	
	As governance has become an increasingly visible requirement for
	organizational management, the inclusion of governance within the TOGAF
	Standard aligns the framework with current business best practice and
	also ensures a level of visibility, guidance, and control that will
	support all architecture stakeholder requirements and obligations.
	
	The benefits of Architecture Governance include:
	
	-   Increased transparency of accountability, and informed delegation of
	    authority
	-   Proactive risk and opportunity management
	-   Protection of the existing asset base through maximizing re-use of
	    existing architectural components
	-   Proactive control, monitoring, and management mechanisms
	-   Process, concept, and component re-use across all organizational
	    business units
	-   Value creation through monitoring, measuring, evaluation, and
	    feedback
	-   Increased visibility supporting internal processes and external
	    parties' requirements; in particular, increased visibility of
	    decision-making at lower levels ensures oversight at an appropriate
	    level within the enterprise of decisions that may have far-reaching
	    strategic consequences for the organization
	-   Greater shareholder value; in particular, Enterprise Architecture
	    increasingly represents the core intellectual property of the
	    enterprise — studies have demonstrated a correlation between
	    increased shareholder value and well-governed enterprises
	-   Integrates with existing processes and methodologies and complements
	    functionality by adding control capabilities
	
	Further detail on establishing an Enterprise Architecture Capability is
	given in the TOGAF Standard — EA Capability and Governance.
	
snippet togaf_introduction_3_Core_Concepts_3.15_Using_the_TOGAF_Standard_with_Other_Frameworks "3.15 Using the TOGAF Standard with Other Frameworks"
	
	Two of the key elements of any Enterprise Architecture framework are:
	
	-   A definition of the deliverables that the architecting activity
	    should produce
	-   A description of the method by which this should be done
	
	With some exceptions, the majority of Enterprise Architecture frameworks
	focus on the first of these — the specific set of deliverables — and are
	relatively silent about the methods to be used to generate them
	(intentionally so, in some cases).
	
	Because the TOGAF Standard is a generic framework and intended to be
	used in a wide variety of environments, it provides a flexible and
	extensible content framework that underpins a set of generic
	architecture deliverables.
	
	As a result, the TOGAF framework may be used either in its own right,
	with the generic deliverables that it describes; or else these
	deliverables may be replaced or extended by a more specific set, defined
	in any other framework that the architect considers relevant.
	
	In all cases, it is expected that the architect will adapt and build on
	the TOGAF framework in order to define a tailored method that is
	integrated into the processes and organization structures of the
	enterprise. This architecture tailoring may include adopting elements
	from other architecture frameworks, or integrating TOGAF methods with
	other standard frameworks or best practices, such as ITIL®, CMMI®,
	COBIT®, PRINCE2, PMBOK, and MSP®. It may also include adopting reference
	materials from the TOGAF Library, such as the IT4IT^(TM) Reference
	Architecture. Guidelines for adapting the TOGAF ADM in such a way are
	given in the TOGAF Standard — ADM Techniques.
	
	As a generic framework and method for Enterprise Architecture, the TOGAF
	Standard provides the capability and the collaborative environment to
	integrate with other frameworks. Organizations are able to fully utilize
	vertical business domains, horizontal technology areas (such as security
	or manageability), or application areas (such as e-Commerce) to produce
	a competitive Enterprise Architecture framework which maximizes their
	business opportunities.
	
snippet togaf_introduction_3_Core_Concepts_3.16_Using_the_TOGAF_Framework_with_Different_Architecture_Styles "3.16 Using the TOGAF Framework with Different Architecture Styles"
	
	The TOGAF framework is designed to be flexible and is used with various
	architectural styles.
	
	Architectural styles differ in terms of focus, form, techniques,
	materials, subject, and time period. The TOGAF Standard is a generic
	framework intended to be used in a wide variety of environments. It is a
	flexible and extensible framework that can be readily adapted to a
	number of architectural styles.
	
	An organization's Architecture Landscape can be expected to contain
	architecture work that is developed in many architectural styles. The
	TOGAF Standard ensures that the needs of each stakeholder are
	appropriately addressed in the context of other stakeholders and the
	Baseline Architecture.
	
	When using the TOGAF Standard to support a specific architectural style
	the practitioner must take into account the combination of distinctive
	features in which architecture is performed or expressed. As a first
	step, the distinctive features of a style must be identified.
	
	The second step is determining how these distinctive features will be
	addressed. Addressing a distinctive style should not call for
	significant changes to the TOGAF framework; instead it should adjust the
	models, viewpoints, and tools used by the practitioner.
	
	In Phase B, Phase C, and Phase D the practitioner is expected to select
	the relevant architecture resources, including models, viewpoints, and
	tools, to properly describe the architecture domain and demonstrate that
	stakeholder concerns are addressed (see the TOGAF Standard — ADM
	Techniques). Depending upon the distinctive features, different
	architectural styles will add new elements that must be described,
	highlight existing elements, adjust the notation used to describe the
	architecture, and focus the architect on some stakeholders or
	stakeholder concerns.
	
	Addressing the distinctive features will usually include extensions to
	the Architecture Content Metamodel and the use of specific notation or
	modeling techniques and the identification of viewpoints. Dominance of a
	particular architectural style can direct the practitioner to revisit
	the Preliminary Phase to make changes to the Architecture Capability or
	to address a distinctive feature in the expected scope of a single ADM
	cycle.
	
	Style-specific reference models and maturity models are commonly used
	tools that support a practitioner.
	
	During the lifetime of the TOGAF framework many architectural styles
	have been developed to address key problems facing practitioners and to
	demonstrate how the TOGAF framework can be made more relevant within
	defined contexts.
	
	Some of these have been developed by The Open Group Forums and Work
	Groups working in specific areas and have been published in Guides,
	White Papers, and Standards. Examples include:
	
	-   TOGAF® Series Guide: Using the TOGAF® Framework to Define and Govern
	    Service-Oriented Architectures
	-   TOGAF® Series Guide: Integrating Risk and Security within a TOGAF®
	    Enterprise Architecture
	
	Some of these have been developed collaboratively between The Open Group
	and other bodies. Examples include:
	
	-   TOGAF® and SABSA® Integration
	-   Archi Banking Group: Combining the BIAN Reference Model, ArchiMate®
	    Modeling Notation, and the TOGAF® Framework
	-   Exploring Synergies between TOGAF® and Frameworx
	-   TOGAF® 9 and DoDAF 2.0
	
	The TOGAF Library (see www.opengroup.org/togaf-library) is a structured
	library of resources that support the TOGAF Standard.
	
snippet togaf_introduction_3_Core_Concepts_3.17_Architecture_Views_and_Viewpoints "3.17 Architecture Views and Viewpoints"
	
	The ability to create specific "views" of parts of a complex
	architecture is fundamental in being able to communicate with and allay
	concerns of stakeholders or groups of stakeholders. To gain full
	understanding and support from stakeholders it is necessary to present
	information in a form that each stakeholder will relate to and
	understand.
	
	The role of architecture views is shown in Figure 3-10 , adapted from
	more formal definitions contained in ISO/IEC/IEEE 42010:2011 and
	ISO/IEC/IEEE 15288:2015.
	
	[]
	
	Figure 3-10: Basic Architectural Concepts
	
snippet togaf_introduction_3_Core_Concepts_3.18_Enterprise_Agility "3.18 Enterprise Agility"
	
	Enterprise agility is a commonly used term, but the exact definition
	differs among practitioners. Regardless of how the term is defined, it
	is important because it enables an enterprise to better react to change
	by being more customer and product-centric, more efficient, and better
	able to ensure regulatory compliance.
	
	The term "agile" is frequently associated with agile software
	development processes associated with the Manifesto for Agile Software
	Development.
	
	While these "agile" principles and techniques can be applied to adapt
	the TOGAF framework, enterprise agility is a broader context than agile
	software development. Therefore, additional techniques are employed in
	adapting the TOGAF framework to an agile enterprise.
	
	Enterprise Architecture provides a framework for change, linked to both
	strategic direction and business value. It provides a sufficient view of
	the organization to manage complexity, support continuous change, and
	manage the risk of unanticipated consequences.
	
	The TOGAF framework has embraced the call to respond to the needs of the
	enterprise in a timely manner, through the concepts of "partitions" and
	"levels". Partitions define how the work is broken down into multiple
	architecture initiatives. Levels define how the overall architecture can
	be developed at different levels of granularity and detail.
	
	In addition, the TOGAF ADM supports a number of concepts that are
	characterized as iteration.
	
	More detailed descriptions of how to adapt the TOGAF ADM to support
	enterprise agility can be found in:
	
	-   TOGAF® Series Guide: Applying the ADM Using Agile Sprints
	-   TOGAF® Series Guide: Enabling Enterprise Agility
	-   The Open Agile Architecture^(TM) Standard
	
snippet togaf_introduction_3_Core_Concepts_3.19_Risk_Management "3.19 Risk Management"
	
	There will always be risk with any architecture/business transformation
	effort. It is important to identify, classify, and mitigate these risks
	before starting so that they can be tracked throughout the
	transformation effort.
	
	Mitigation is an ongoing effort and often the risk triggers may be
	outside the scope of the transformation planners (e.g., merger,
	acquisition) so planners must monitor the transformation context
	constantly.
	
	It is also important to note that the Enterprise Architect may identify
	the risks and mitigate certain ones, but it is within the governance
	framework that risks have to be first accepted and then managed.
	
	There are two levels of risk that should be considered, namely:
	
	-   Initial level of risk: risk categorization prior to determining and
	    implementing mitigating actions
	-   Residual level of risk: risk categorization after implementation of
	    mitigating actions (if any)
	
	The process for risk management consists of the following activities:
	
	-   Risk classification
	-   Risk identification
	-   Initial risk assessment
	-   Risk mitigation and residual risk assessment
	-   Risk monitoring
	
	A qualitative approach to risk management is described in the TOGAF
	Standard — ADM Techniques.
	
	Risk concepts are included in the Enterprise Security Architecture
	described in the TOGAF® Series Guide: Integrating Risk and Security
	within a TOGAF® Enterprise Architecture.
	
	A more rigorous quantitative approach is described in the Open FAIR^(TM)
	Body of Knowledge which comprises two standards from The Open Group:
	Open Risk Taxonomy (O-RT) and Open Risk Analysis (O-RA).
	
snippet togaf_business-architecture_business-capabilities_3.1_Approach "3.1 Approach"
	
	The first goal of business capability mapping is to capture and document
	all of the business capabilities that represent the full scope of what
	the business does today (irrespective of how well it does it) or what it
	desires to be able to do in the future. The second step is to organize
	that information in a logical manner. This activity is discussed further
	in Section 3.2.
	
	There are two approaches for identifying a starter set of business
	capabilities: top-down and bottom-up:
	
	-   Top-down: a top-down business capability mapping approach starts by
	    identifying (from an enterprise-level perspective) the 20 to 30
	    highest-level business capabilities, each of which can decompose
	    into more detailed levels
	
	Senior business leaders can help to develop the top-level business
	capabilities in the first instance. In practice, developing a draft
	business capability map from the top down is a more efficient use of
	time, but is usually only successful if there is meaningful involvement
	from senior executives.
	
	-   Bottom-up: When more time is available, business capabilities can be
	    defined from within different parts of the business and built from
	    the bottom up
	
	However, this approach can be more difficult to reconcile across the
	business without strong governance and senior leadership support toward
	ultimately developing an enterprise-wide business capability map.
	
	Usually, a combination of top-down and bottom-up approaches allows for
	the refinement of the business capability map. Regardless of the
	approach, there are three good sources of information with which to
	create an initial draft of the business capability map:
	
	-   The organizational structure
	-   The business model
	-   Current strategic, business, and financial plans
	
snippet togaf_architecture-project-management_3.1_Architecture_Project_Start-Up "3.1 Architecture Project Start-Up"
	
	The first step of Phase A of the ADM cycle is defined in the TOGAF
	Standard, Phase A: Establish the Architecture Project. The chapter is
	very concise and refers the reader to other sources, by stating:
	“execution of ADM cycles should be conducted within the Project
	Management framework of the enterprise”. It does not detail steps to be
	undertaken at the very beginning of the Architecture Project, but leaves
	it to the Project Manager and other bodies within the enterprise to
	decide on what has to be done based on their experience and a set of
	organizational standards.
	
	According to PRINCE2 to ADM Mapping (Chapter 4), the ADM step Establish
	the Architecture Project can be mapped to the PRINCE2 Starting up a
	Project process. PMBOK, due to its different nature, does not provide
	such elaborate systematic processes, nevertheless its Develop Project
	Charter process can be mapped to this TOGAF step as well (see PMBOK to
	ADM Mapping, Chapter 5). Therefore, the following activities are
	necessary for starting up a project:
	
	-   Appoint the Executive and Project Manager
	-   Capture Previous Lessons
	-   Prepare Outline Business Case
	-   Select the Project Approach
	-   Design and Appoint the Project Management Team
	-   Assemble the Project Brief
	-   Define the Management Approach
	
	The above-mentioned activities form a basis for the following
	subsections.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.1_Basic_Concepts "3.1 Basic Concepts"
	
	Architectural artifacts are created in order to describe a system,
	solution, or state of the enterprise. The concepts discussed in this
	section have been adapted from more formal definitions contained in
	ISO/IEC/IEEE 42010:2011 and ISO/IEC/IEEE 15288:2015. They are
	illustrated in Figure 3-1 .
	
	The "environment" of a system is the context determining the setting and
	circumstances of all influences upon a system. The environment of a
	system includes developmental, technological, business, operational,
	organizational, political, economic, legal, regulatory, ecological, and
	social influences.
	
	A "system" is a combination of interacting elements organized to achieve
	one or more stated purposes.
	
	The "architecture" of a system is the fundamental concepts or properties
	of a system in its environment embodied in its elements, relationships,
	and in the principles of its design and evolution.
	
	An "Architecture Description" is a work product used to express an
	architecture; a collection of architecture views and models that
	together document the architecture.
	
	"Stakeholders" are individuals, teams, organizations, or classes
	thereof, having an interest in a system.
	
	"Concerns" are interests in a system relevant to one or more of its
	stakeholders. Concerns may pertain to any aspect of the system's
	functioning, development, or operation, including considerations such as
	performance, reliability, security, distribution, and evolvability and
	may determine the acceptability of the system.
	
	An "architecture view" is a representation of a system from the
	perspective of a related set of concerns. It consists of one or more
	architecture models of the system.
	
	An "Architecture Model" is a representation of a subject of interest. A
	model provides a smaller scale, simplified, and/or abstract
	representation of the subject matter.
	
	In capturing or representing the design of a system architecture, the
	architect will typically create one or more architecture models,
	possibly using different tools. An architecture view will comprise
	selected parts of one or more models, chosen so as to demonstrate to a
	particular stakeholder or group of stakeholders that their concerns are
	being adequately addressed in the design of the system architecture.
	
	[]
	
	Figure 3-1: Basic Architectural Concepts
	
	An "architecture viewpoint" is a specification of the conventions for a
	particular kind of architecture view. It can also be called the
	definition or schema for that kind of architecture view. It establishes
	the conventions for constructing, interpreting, and using an
	architecture view to address a specific concern (or set of concerns)
	about a system-of-interest.
	
	A "Model Kind" establishes conventions for a type of modeling.
	
	An architecture viewpoint references one or more model kinds; an
	architecture view incorporates one or more models.
	
	A "viewpoint library" is a collection of the specifications of
	architecture viewpoints contained in the Reference Library portion of
	the Architecture Repository.
	
	-   An architecture view is what you see; an architecture viewpoint is
	    where you are looking from — the vantage point or perspective that
	    determines what you see
	
	-   Architecture viewpoints are generic, and can be stored in libraries
	    for re-use; an architecture view is always specific to the
	    architecture for which it is created
	
	-   Every architecture view has an associated architecture viewpoint
	    that describes it, at least implicitly
	
	    ISO/IEC/IEEE 42010:2011 encourages architects to define architecture
	    viewpoints explicitly. Making this distinction between the content
	    and schema of a view may seem at first to be an unnecessary
	    overhead, but it provides a mechanism for re-using architecture
	    viewpoints across different architectures.
	
	In summary, then, architecture views are representations of the overall
	architecture in terms meaningful to stakeholders. They enable the
	architecture to be communicated to and understood by the stakeholders,
	so they can verify that the system will address their concerns.
	
	Concerns are often related to requirements. A concern can be a general
	requirement type, such as availability. It may lead to the definition of
	several particular requirements. It may be an interest related to some
	goal of a stakeholder. Identifying concerns helps ensure stakeholders'
	interests are addressed and requirements are identified. Associating
	concerns with general artifact types helps architects to select and
	develop particular artifacts for presentation to stakeholders.
	
snippet togaf_architecture-skills-framework_3.1_Certification_of_Enterprise_Architects "3.1 Certification of Enterprise Architects"
	
	The main purpose behind an enterprise setting up an internal Enterprise
	Architect certification program is three-fold:
	
	1.  To define needed architectural competencies while aligning necessary
	    staff skills and experience with the architecture tasks the
	    enterprise wishes to be performed, whether these are to be performed
	    internally to the enterprise or externally; for example, as part of
	    a consultancy engagement.
	2.  To formally recognize the skill of its practicing architects, as
	    part of the task of establishing and maintaining a professional
	    architecting organization.
	3.  To provide a competency development path for persons working with
	    Enterprise Architecture and to ensure a minimal competency level
	    whereby the enterprise’s confidence in the architecture activities
	    performed by those certified meets an acceptable level.
	
snippet togaf_architecture-maturity-models_3.1_CMMI "3.1 CMMI"
	
	The SEI is currently involved in developing, expanding, and maintaining
	several capability models, one of which is the Capability Maturity Model
	Integration (CMMI^(®)).
	
snippet togaf_reference-models_government-reference-model_3.1_Defense_and_Security_Taxonomy "3.1 Defense and Security Taxonomy"
	
	  Sector                 Function                                  Service                                                                                                                         Description
	  ---------------------- ----------------------------------------- ------------------------------------------------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Defense and Security   Defense Activities                        Programs leveraged by national defense that include defense-related activities, threat reduction, and counter-terrorism.        
	                                                                   Military Operations                                                                                                             Corresponds to all miscellaneous defense-related events (e.g., expenses related to procurement external to national defense).
	                                                                   Threat Reduction                                                                                                                Corresponds to the activities to reduce and prevent the spread of goods or confidential data related to threats. This will include data exploitation, effective information maneuver, and cybersecurity operations.
	                                                                   Counter-Terrorism                                                                                                               Includes domestic and international responses that correspond to the elimination and deterrence of acts of terrorism.
	                         Defense Readiness and Preparation         Maintenance, equipment, procurement, and development of forces, infrastructure, remuneration, and benefits paid to personnel.   
	                                                                   Defense Training and Allocation                                                                                                 Corresponds to the improvement of individuals and collective performance within defense through real-life tasks and functions and simulated training environments to integrate the use of maneuver and engagement activities.
	                                                                   Defense Application                                                                                                             Includes activities used to achieve defense objectives in all environments through amalgamation of the use of engagement and maneuver.
	                                                                   Defense Network and IT Infrastructure                                                                                           Corresponds to the movement of information in order to satisfy the connectivity and interoperability needs of the defense.
	                                                                   Population Protection                                                                                                           Includes all activities that ensure the security of and protect the general population, government, and leaders.
	                         Intelligence and International Security   Activities to protect, analyze, and comprehend the needs and interests of the government and allies.                            
	                                                                   International Security Assistance                                                                                               Corresponds to all activities used to protect the government’s interests and respond to potential threats by exploiting cross-governmental IT infrastructure, networks, and information.
	                                                                   Intelligence and Counter-Intelligence Operations                                                                                Includes all activities that encompass the ability to analyze and comprehend the needs of the government and citizens.
	                                                                   Special Intelligence                                                                                                            Pertains to advanced services that process, analyze, and collect information in order to support national interests.
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.1_Enterprise_Risk_Management "3.1 Enterprise Risk Management"
	
	The Information Technology security and information security industry
	has evolved over its lifetime a view of operational risk that is
	concerned only with threats, vulnerabilities, and loss events (negative
	impacts). However, as noted earlier in Section 1.2, this Guide uses the
	ISO 31000:2009 [6] definition of “risk”, an “uncertainty of outcomes”,
	and risk management is presented as striking a balance between positive
	and negative outcomes resulting from the realization of either
	opportunities or threats.
	
snippet togaf_business-architecture_value-streams_3.1_Guiding_Principles "3.1 Guiding Principles"
	
	1.  There must be a clearly defined triggering stakeholder – For
	    example, the triggering stakeholder may be a customer initiating a
	    discussion with a customer services agent.
	2.  Start with external (usually customer-based) value streams – These
	    value streams help to frame the range of possible internally focused
	    value streams.
	3.  Value streams are not capabilities, nor components of capabilities –
	    Value streams and value stream stages help to inform and validate
	    the business capability model, and vice versa. They specifically
	    describe the sequence of activities that the business needs to
	    undertake to produce or realize value. Whether the business can
	    perform those activities to the level needed is a function of the
	    set of business capabilities that it can call upon at each value
	    stream stage.
	4.  Keep it concise – Creating value streams and mapping them to
	    business capabilities should not require going down to operational
	    levels of detail. That is normally the domain of business process
	    design. The operational level of detail can be derived from the
	    value streams but that detail does not usually provide the overall,
	    end-to-end perspective that is needed for strategy-level discussions
	    and analysis.
	
snippet togaf_reference-models_digital-business-reference-model_3.1_Introduction "3.1 Introduction"
	
	This chapter describes the major elements of the DBRM.
	
	The high-level view of the DBRM is depicted in Figure 1.
	
	The DBRM consists of the ten (10) core elements: Customer Focus, Digital
	Enterprise, Strategic Context, Business Motivation, Business Services
	and Products, Ecosystem and Business Model, Operating Model, Business
	Capability Model, Business Operating Environment, and Digital
	Enablement.
	
	The core elements are categorized into four (4) domains – Digital,
	Strategy, Structural, and Operational – to enable the DBRM to address
	specific stakeholder concerns and enable consistent stakeholder
	management.
	
	[]
	
	Figure 1: DBRM Elements – High-Level View
	
	Figure 1 says nothing about the detailed relationships between the
	entities; only that they exist.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.1_Introduction "3.1 Introduction"
	
	Stakeholder management is an important discipline that successful
	architecture practitioners can use to win support from others. It helps
	them ensure that their projects succeed where others fail.
	
	The benefits of successful stakeholder management are that:
	
	-   The most powerful stakeholders can be identified early and their
	    input can then be used to shape the architecture; this ensures their
	    support and improves the quality of the models produced
	-   Support from the more powerful stakeholders will help the engagement
	    win more resources, thus making the architecture engagement more
	    likely to succeed
	-   By communicating with stakeholders early and frequently, the
	    architecture team can ensure that they fully understand the
	    architecture process, and the benefits of Enterprise Architecture;
	    this means they can support the architecture team more actively when
	    necessary
	-   The architecture team can more effectively anticipate likely
	    reactions to the architecture models and reports, and can build into
	    the plan the actions that will be needed to capitalize on positive
	    reactions while avoiding or addressing any negative reactions
	-   The architecture team can identify conflicting or competing
	    objectives among stakeholders early and develop a strategy to
	    resolve the issues arising from them
	
	It is essential in any initiative to identify the individuals and groups
	within the organization who will contribute to the development of the
	architecture, identify those that will gain and those that will lose
	from its introduction, and then develop a strategy for dealing with
	them.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.1_Introduction "3.1 Introduction"
	
	This section describes the nature of governance, and the levels of
	governance.
	
snippet togaf_metadata-management_3.1_Metadata_Management_High-Level_Reference_Model "3.1 Metadata Management High-Level Reference Model"
	
	[]
	
	Figure 2: Metadata Management Capability – High-Level Functions
	
snippet togaf_adm_3_A_Architecture_Vision_3.1_Objectives "3.1 Objectives"
	
	The objectives of Phase A are to:
	
	-   Develop a high-level aspirational vision of the capabilities and
	    business value to be delivered as a result of the proposed
	    Enterprise Architecture
	-   Obtain approval for a Statement of Architecture Work that defines a
	    program of works to develop and deploy the architecture outlined in
	    the Architecture Vision
	
snippet togaf_guides_microservices-architecture_3.1_Overview "3.1 Overview"
	
	The TOGAF Standard describes the scope of the “Enterprise Architecture”
	as encompassing all of the enterprise’s business activities and
	capabilities, information, and technology that make up the entire
	infrastructure and governance of the enterprise.
	
	The architecture crosses multiple systems and multiple functional groups
	within the enterprise. This is one of the key factors that has driven
	the evolution of all domains of architecture – i.e., Business, Data,
	Application, and Technology – to more optimally cater to the needs of
	this distributed enterprise.
	
	Distributed architectures have organizational and people implications,
	in addition to technology implications. Typically, a greater degree of
	alignment is needed between the modular nature of the solutions as well
	as the teams. Large, centralized models should be decomposed into
	leaner, federated models.
	
	Each entity of the enterprise has different solution needs – their
	agility and time-to-market, and their pace of change. A modular approach
	to solutions enables the enterprise to build in flexibility for both
	short-term and long-term needs. The benefits of modular solutions, such
	as microservices, are more justifiably covered in other documents
	published by The Open Group, such as The Open Group White Paper:
	Microservices Architecture (see Referenced Documents).
	
	The mandate of an Enterprise Architecture, in a distributed enterprise,
	is to ensure the congruency and homogeneity of capabilities and
	standards amongst these distributed, modular solutions (including
	partner solutions), while simultaneously allowing for the independence
	and polyglot needs of each, so that they are aligned with business
	strategy and provide clear business value. Areas that require particular
	attention include:
	
	-   Interoperability through standardized, well-defined contracts for
	    APIs and other interfaces
	-   A reference architecture that has the ABBs to address
	    interoperability (integrations, APIs, events, state, and data),
	    visibility (telemetry, monitoring, reporting), management and
	    operations (paramount if the deployment architecture includes a
	    footprint in the cloud), and security
	-   Well established standards for the enterprise in each of the TOGAF
	    Enterprise Architecture domains (Business, Data, Application, and
	    Technology) to enable synergy across the organization
	
	These standards should be for enterprise strategic alignment, and should
	not hinder the needs of the individual modular units. Each unit should
	inherit from the enterprise standards and extend those with their own.
	
	-   Appropriate level of governance, which addresses the needs of the
	    enterprise without sacrificing the autonomy of the individual
	    entities of the enterprise – a federated governance model is a
	    better fit than a centralized one
	
	One of the challenges of distributed architectures is the ability to
	provide an aggregated view of multiple ecosystems that could include any
	combination of public cloud, traditional infrastructure, mainframe, and
	Software as a Service (SaaS) workloads. This requires robust
	enterprise-level foundations for DevOps, monitoring, and reporting, test
	automation, governance, and security.
	
	The role of Enterprise Architecture in a distributed, hybrid cloud world
	is to design, incubate, and propagate re-usable assets such as reference
	architectures, patterns, DevOps pipelines, and service management
	solutions. These assets are able to support traditional and cloud
	platform governance. Governance can be centralized; however, optimized
	and agile enterprises have seen better success with de-centralized
	governance – i.e., small “g” governance; see Chapter 5 (Preliminary
	Phase) and Chapter 12 (Phase G: Implementation Governance) – allowing
	each business value stream to inspire open innovation from self-directed
	teams composed of business and IT members working in integrated units.
	
	The following sections provide a summary view of the implications of
	distributed architectures from each of the Enterprise Architecture
	domains. A more comprehensive coverage of each is in their respective
	chapters of this document.
	
	Note that this document covers MSA as an architecture style supported by
	Enterprise Architecture, and therefore does not cover Enterprise
	Architecture as a whole.
	
snippet togaf_applying-the-adm_3_Applying_the_ADM_Across_the_Architecture_Landscape_3.1_Overview "3.1 Overview"
	
	In a typical enterprise, many architectures will be described in the
	Architecture Landscape at any point in time. Some architectures will
	address very specific needs; others will be more general. Some will
	address detail; some will provide a big picture. To address this
	complexity, the TOGAF Standard uses the concepts of levels and the
	Enterprise Continuum to provide a conceptual framework for organizing
	the Architecture Landscape. These concepts are tightly linked with
	organizing actual content in the Architecture Repository and any
	architecture partitions discussed in the TOGAF Standard — Architecture
	Content.
	
snippet togaf_business-architecture_business-scenarios_3.1_The_Overall_Process "3.1 The Overall Process"
	
	Creating a Business Scenario involves the following, which ultimately
	documents the elements of a Business Scenario depicted in Figure 1:
	
	1.  Identifying, documenting, and ranking the problem driving the
	    scenario
	2.  Identifying the business and technical environment of the scenario
	    and documenting it in scenario models including value streams and
	    business capabilities
	3.  Identifying and documenting desired outcomes (the results of
	    handling the problems successfully); get “SMART”
	4.  Identifying the human actors (participants) and their place in the
	    business model
	5.  Identifying computer actors (computing elements) and their place in
	    the technology model
	6.  Checking for “fitness-for-purpose” and refining only if necessary
	
	[]
	
	Figure 1: Creating a Business Scenario
	
	Below are explanations of a few key terms:
	
	-   Outcomes are the changes, benefits, learning, or other effects that
	    happen as a result of what the project or organization offers or
	    provides
	-   A capability is an ability that an organization, person, or system
	    possesses
	
	When developing a Business Scenario, this means the ability to achieve
	an outcome within a known environment through application of human
	and/or material resources in a value stream
	
	-   A business capability is a particular ability or capacity that a
	    business may possess or exchange to achieve a specific purpose or
	    outcome
	-   A value stream is a representation of an end-to-end collection of
	    value-adding activities that create an overall result for a
	    customer, stakeholder, or end user
	
	When developing a Business Scenario, this is a set of activities that a
	firm operating in a specific industry performs in order to deliver a
	valuable product or service for the market.
	
	-   A value proposition is “a clear statement of the concrete results a
	    customer will get from purchasing and using your products and/or
	    services. ... It is focused on outcomes. Your value proposition
	    statement details the value you provide in an easy-to-remember
	    synopsis that your client can easily grasp and remember. … your
	    value proposition … should relieve their pain …”[1]
	
	Value propositions are not explicitly documented in a Business Scenario;
	however, the importance of understanding a customer’s Business Scenario
	to a solutions provider cannot be understated.
	
	A Business Scenario is developed over a number of phases that formulate,
	verify, and refine a premise of the business requirements driving an
	effort. Each phase is comprised of steps to plan the phase, gather
	information, analyze information gathered, document the results, and
	review the results of the Business Scenario, as depicted in Figure 2.
	
	In each phase, each of the elements of a Business Scenario (listed
	above) is successively improved. The refinement phase involves deciding
	whether to consider the scenario complete and go to the next phase of
	the TOGAF Architecture Development Method (ADM), or whether further
	refinement is necessary. This is accomplished by asking whether the
	current state of the Business Scenario is fit for the purpose of
	carrying requirements downstream in the architecture process.
	
	The three phases of developing a Business Scenario and steps are
	described in detail in Figure 2 and Section 3.2.
	
	[]
	
	Figure 2: Phases and Steps of Developing a Business Scenario
	
snippet togaf_introduction_3_Core_Concepts_3.1_What_is_the_TOGAF_Standard "3.1 What is the TOGAF Standard?"
	
	The TOGAF Standard is an architecture framework. It provides the methods
	and tools for assisting in the acceptance, production, use, and
	maintenance of an Enterprise Architecture. It is based on an iterative
	process model supported by best practices and a re-usable set of
	existing architecture assets. See 2.2 The TOGAF Standard .
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.1_Who_is_an_EA_Capability_Leader "3.1 Who is an EA Capability Leader?"
	
	This Guide is written for a Leader – the person tasked to lead the
	establishment and/or evolution of an EA Capability. We have selected the
	term Leader deliberately to reflect the role, rather than one of the
	myriad titles in an enterprise the Leader may have. Key to the
	successful establishment of an EA Capability is the Leader’s ability to
	step back from his or her current operational context to seek broader
	perspective before making a decision and then following through with the
	decision to lead the change.
	
	This type of Leader takes into account multiple dimensions, like
	business drivers, organizational culture, and maturity, as well as the
	context within which his or her enterprise operates. Such a Leader is
	cognizant of the fact that their decisions are likely to live longer
	than their tenure in their current role. This person understands that
	there are multiple systems in play that interact with each other.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.1_Why_is_it_Important_to_Develop_an_Enterprise_Architecture "3.1 Why is it Important to Develop an Enterprise Architecture?"
	
	An EA is developed for one very simple reason: to guide effective
	change.
	
	All Enterprises are seeking to improve. Regardless of whether it is a
	public, private, or social Enterprise, there is a need for deliberate,
	effective change to improve. Improvement can be shareholder value or
	agility for a private Enterprise, mandate-based value proposition or
	efficiency for a public Enterprise, or simply an improvement of mission
	for a social Enterprise.
	
	Guidance on effective change will take place during the activity to
	realize the approved EA. During implementation,[5] EA is used by the
	stakeholders to govern change. The first part of governance is to direct
	change activity – align the change with the optimal path to realizing
	the expected value. The second part of governance is to control the
	change activity – ensuring the change stays on the optimal path.
	
	The scope of the improvement drives everything that is done. A
	methodology that serves to validate both the objective and the change,
	ensuring that both are feasible, delivers the desired value, and in a
	cost-effective manner. An architected approach provides a rigorous
	planning and change governance methodology.
	
	In its simplest terms, EA must describe the future state and the current
	state of the Enterprise. The description of the future state enables the
	right people to understand what must be done to meet the Enterprise’s
	goals, objective, mission, and vision in the context within which the
	Enterprise operates. The gap between the Enterprise’s current state and
	future state highlights what must change. A good EA facilitates
	effective governance, management, risk management, and exploitation
	opportunities. A list of gaps makes obvious what must change and the
	implications of that change: is the proposed project in alignment with
	what is needed? In alignment with priority? In alignment with the
	complete set of goals and objectives?
	
	The preceding paragraphs highlight the conceptual scope of EA. This
	scope often leads to the assumption that EA is only used to answer the
	big questions. Nothing can be further from the truth. The same concepts,
	methods, techniques, and frameworks can readily be used to address the
	end state, preference trade-off, and value realization for big and
	little questions. The essential difference is not what you do; it is
	what the documented architecture looks like. The scope of the system
	varies; the detailed description of elements and properties vary. All of
	the concepts remain the same.
	
snippet togaf_guides_agile-sprints_3.1_Why_Sprints "3.1 Why Sprints?"
	
	There are multiple reasons why sprints can and should be used with the
	TOGAF Standard:
	
	-   Speed of competition means that solutions or products must be
	    delivered ever more quickly
	-   Innovation in ways of working and technologies make this possible
	    and essential
	-   Architects have to be ready to react quickly at a pace demanded by
	    the enterprise in response to changes in its external and internal
	    environment (VUCA)
	-   Feature delivery and time-to-market should be as short as possible
	-   Delivering monolithic Enterprise Architectures, processes, and
	    applications in a waterfall approach is an anti-pattern established
	    and recognized in the 1980s; this is not advocated, recommended, or
	    in the nature of the TOGAF framework[5]
	-   Successful organizations deploy more loosely-coupled architectures
	    (where appropriate) with multiple independent building blocks with
	    known interfaces delivered quickly by small teams in a timely
	    manner[6]
	-   Further decomposing and decoupling of functions and granularity
	    beyond Service-Oriented Architecture (SOA) enabled by Microservices
	    Architecture (MSA) is common practice[7]
	-   Short cycles of work (sprints) is a way to deal with
	    unpredictability and risk such as late arriving information
	-   In an iterative approach (Agile/TOGAF framework) we experiment and
	    make decisions based on what we know at the time and on the real
	    outcome from those experiments (empirical approach)
	-   Testing concepts early and avoiding attempts to make up details and
	    potential scenarios before work begins
	-   As the business environment becomes more adaptive to changing
	    customer demands the iterative approach delivered in the TOGAF
	    framework and Agile is essential to responding quickly and
	    efficiently
	
	Iterative development of an Enterprise Architecture as a way to apply
	the TOGAF ADM has long been part of the TOGAF Standard.[8] Iterative
	development using Agile practices like sprints with shorter iterations
	is similarly a useful tool to obtain early stakeholder feedback and
	results.
	
	Agile iterative practices enable Enterprise Architects to deliver value
	earlier and iteratively, whether in a planned or emergent manner.
	
	Dividing work into sprints does not only mean dividing work into small
	pieces, but also learning by doing in short cycles and adapting based on
	sprint reviews and sprint retrospectives (ways of working). Those cycles
	should be short to react quickly to everything that emerges during
	definition of the business need. Adapting means two things:
	
	-   Adapting the solutions to changing needs and priorities
	-   Adapting how the ADM is applied to deliver the solutions based on
	    experiences during the sprint
	
	The requirements in a sprint are divided into smaller, more manageable
	incremental requirements enabling transparency and ease-of-change.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.1.1_Key_Concepts "3.2.1.1 Key Concepts"
	
	Conceptually, Architecture Governance is an approach, a series of
	processes, a cultural orientation, and set of owned responsibilities
	that ensure the integrity and effectiveness of the organization's
	architectures.
	
	The key concepts are illustrated in Figure 3-1 .
	
	[]
	
	Figure 3-1: Architecture Governance Framework — Conceptual Structure
	
	The split of process, content, and context are key to the support of the
	Architecture Governance initiative, by allowing the introduction of new
	governance material (legal, regulatory, standards-based, or legislative)
	without unduly impacting the processes. This content-agnostic approach
	ensures that the framework is flexible. The processes are typically
	independent of the content and implement a proven best practice approach
	to active governance.
	
	The Architecture Governance Framework is integral to the Enterprise
	Continuum, and manages all content relevant both to the architecture
	itself and to Architecture Governance processes.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.1.2_Key_Architecture_Governance_Processes "3.2.1.2 Key Architecture Governance Processes"
	
	Governance processes are required to identify, manage, audit, and
	disseminate all information related to architecture management,
	contracts, and implementation. These governance processes will be used
	to ensure that all architecture artifacts and contracts, principles, and
	Operational-Level Agreements (OLAs) are monitored on an ongoing basis
	with clear auditability of all decisions made.
	
	Policy Management and Take-On
	
	All architecture amendments, contracts, and supporting information must
	come under governance through a formal process in order to register,
	validate, ratify, manage, and publish new or updated content. These
	processes will ensure the orderly integration with existing governance
	content such that all relevant parties, documents, contracts, and
	supporting information are managed and audited.
	
	Compliance
	
	Compliance assessments against Service-Level Agreements (SLAs), OLAs,
	standards, and regulatory requirements will be implemented on an ongoing
	basis to ensure stability, conformance, and performance monitoring.
	These assessments will be reviewed and either accepted or rejected
	depending on the criteria defined within the governance framework.
	
	Dispensation (also known as Waiver)
	
	A Compliance Assessment can be rejected where the subject area (design,
	operational, service level, or technology) are not compliant. In this
	case the subject area can:
	
	1.  Be adjusted or realigned in order to meet the compliance
	    requirements
	2.  Request a dispensation
	
	Where a Compliance Assessment is rejected, an alternate route to meeting
	interim conformance is provided through dispensations. These are granted
	for a given time period and a set of identified service and operational
	criteria that must be enforced during the lifespan of the dispensation.
	Dispensations are not granted indefinitely, but are used as a mechanism
	to ensure that service levels and operational levels are met while
	providing a level of flexibility in their implementation and timing. The
	time-bound nature of dispensations ensures that they are a major trigger
	in the compliance cycle.
	
	Monitoring and Reporting
	
	Performance management is required to ensure that both the operational
	and service elements are managed against an agreed set of criteria. This
	will include monitoring against SLAs and OLAs, feedback for adjustment,
	and reporting.
	
	Internal management information will be considered in Environment
	Management .
	
	Business Control
	
	Business Control relates to the processes invoked to ensure compliance
	with the organization's business policies.
	
	Environment Management
	
	This identifies all the services required to ensure that the
	repository-based environment underpinning the governance framework is
	effective and efficient. This includes the physical and logical
	repository management, access, communication, training, and
	accreditation of all users.
	
	All architecture artifacts, service agreements, contracts, and
	supporting information must come under governance through a formal
	process in order to register, validate, ratify, manage, and publish new
	or updated content. These processes will ensure the orderly integration
	with existing governance content such that all relevant parties,
	documents, contracts, and supporting information are managed and
	audited.
	
	The governance environment will have a number of administrative
	processes defined in order to effect a managed service and process
	environment. These processes will include user management, internal SLAs
	(defined in order to control its own processes), and management
	information reporting.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.1_Architecture_Governance_Framework_Conceptual_Structure "3.2.1 Architecture Governance Framework — Conceptual Structure"
	
snippet togaf_business-architecture_business-capabilities_3.2.1_Business_Capability_Stratification "3.2.1 Business Capability Stratification"
	
	Stratification is the process of classifying, grouping, and aligning
	business capabilities within categories, tiers, or layers. The purpose
	of stratification is to break down a business capability map so that it
	can be more easily understood; a collection of 20 to 30 capabilities
	without some form of stratification is difficult to read and process.
	
	Each stratification tier provides a different perspective or focal point
	for different stakeholder groups, allowing each group to organize their
	analysis and subsequent planning activities in more structured ways. For
	example, the top tier is often aimed at the executive function’s span of
	control: business capabilities related to strategy and
	direction-setting. The middle tier typically represents the core,
	customer-facing elements of the business, while the bottom tier deals
	with those business capabilities that are essential for the business to
	function but play a supporting role behind the scenes.
	
	Figure 2 represents an example of a Level 1 business capability map for
	ABC Company, derived from all the inputs discussed in the previous
	section.
	
	  ------------ ------------------------ --------------------- ----------------------------------
	  Strategic    Business Planning        Market Planning       Partner Management
	               Capital Management       Policy Management     Regulatory Compliance Management
	  Core         Account Management       Product Management    Distribution Management
	               Customer Management      Channel Management    Agent Management
	  Supporting   Financial Management     HR Management         Asset Management
	               Information Management   Training Management   Operations Management
	  ------------ ------------------------ --------------------- ----------------------------------
	
	Figure 2: ABC Company L1 Business Capability Map
	
snippet togaf_architecture-project-management_3.2.1_Define_the_Architecture_Project_Scope "3.2.1 Define the Architecture Project Scope"
	
	Defining the Architecture Project and its scope is the most important
	activity which should be performed with great care and awareness. The
	output of this activity will have significant impact on the
	understanding and achievement of the project’s goals.
	
	
	     Note that the definition of an Architecture Project Scope is broader than described in the Define Scope step of the TOGAF ADM Phase A. The Define Scope ADM step describes what is in the scope of the Baseline Architecture and Target Architecture efforts. The Architecture Project Scope, in line with the Project Management methods, means the scope of work which is to be performed in order to achieve the project’s goals. Of course, performing the Define Scope ADM step is a critical initial task to understand and define the Architecture Project Scope.
	
	
	The scope of the Architecture Project should be defined using the ADM
	scope definition activities and other essential Phase A outputs, such as
	the Architecture Vision (see the list in Architecture Project Planning,
	Section 3.2). According to the TOGAF Standard, it is critical to define
	what level of the Architecture Landscape, breadth and time will be
	covered (as shown in Figure 2).[23]
	
	The Project Management methods provide tools and techniques which too
	can be used during definition of the detailed Project Scope and Project
	Plan; the most important of them are presented in the following
	subsections.
	
	As part of the scope definition, a summary Architecture Project
	Description should be created. The Architecture Project Description is a
	short summary of the work that will be performed under the project along
	with the project’s goals. All outputs from the above ADM tasks should be
	gathered and analyzed together in order to prepare the Project Scope
	Statement that is the description of the scope, major deliverables,
	assumptions, and constraints.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, after completion of |
	|                                   | the essential tasks from the ADM  |
	|                                   | Phase A, the Project Manager had  |
	|                                   | enough knowledge to prepare a     |
	|                                   | description of the Architecture   |
	|                                   | Project. He decided to start by   |
	|                                   | defining the main goal of the     |
	|                                   | project and came up with the      |
	|                                   | following: Assess current         |
	|                                   | application portfolio and         |
	|                                   | recommend improvement options.    |
	|                                   |                                   |
	|                                   | After that, he defined the main   |
	|                                   | goal, he prepared a more detailed |
	|                                   | description of the Architecture   |
	|                                   | Project:                          |
	|                                   |                                   |
	|                                   | Describe the application          |
	|                                   | landscape and identify IT         |
	|                                   | improvement options. There are    |
	|                                   | about 50 applications of          |
	|                                   | different scales (precise number  |
	|                                   | to be determined during project   |
	|                                   | execution), mostly custom-built.  |
	|                                   | Key concerns are:                 |
	|                                   |                                   |
	|                                   | -   Determining relationships and |
	|                                   |     data flows between            |
	|                                   |     applications                  |
	|                                   | -   Mapping application           |
	|                                   |     capabilities (overlaps and    |
	|                                   |     gaps)                         |
	|                                   | -   Identification of key         |
	|                                   |     technological constraints for |
	|                                   |     application development       |
	|                                   |                                   |
	|                                   | Required views are to be          |
	|                                   | determined. Improvement options   |
	|                                   | should include initiatives with   |
	|                                   | assigned priorities.              |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.2.1_General_Guidelines "3.2.1 General Guidelines"
	
	The choice of which particular architecture views to develop is one of
	the key decisions that the architect has to make.
	
	The architect has a responsibility for ensuring the completeness
	(fitness-for-purpose) of the architecture, in terms of adequately
	addressing all the pertinent concerns of its stakeholders; and the
	integrity of the architecture, in terms of connecting all the various
	views to each other, satisfactorily reconciling the conflicting concerns
	of different stakeholders, and showing the trade-offs made in so doing
	(as between security and performance, for example).
	
	The choice has to be constrained by considerations of practicality, and
	by the principle of fitness-for-purpose (i.e., the architecture should
	be developed only to the point at which it is fit-for-purpose, and not
	reiterated ad infinitum as an academic exercise).
	
	As explained in the TOGAF Standard — Architecture Development Method,
	the development of architecture views is an iterative process. The
	typical progression is from business to technology, using a technique
	such as business scenarios (see the TOGAF® Series Guide: Business
	Scenarios) to properly identify all pertinent concerns; and from
	high-level overview to lower-level detail, continually referring back to
	the concerns and requirements of the stakeholders throughout the
	process.
	
	Moreover, each of these progressions has to be made for two distinct
	environments: the existing environment (referred to as the baseline in
	the ADM) and the target environment. The architect must develop
	pertinent architecture views of both the Baseline Architecture and the
	Target Architecture. This provides the context for the gap analysis at
	the end of Phases B, C, and D of the ADM, which establishes the elements
	of the Baseline Architecture to be carried forward and the elements to
	be added, removed, or replaced.
	
	This whole process is explained in the TOGAF Standard — ADM Techniques.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.2.1_Introduction_to_the_EA_Landscape "3.2.1 Introduction to the EA Landscape"
	
	The TOGAF framework uses a concept of the EA Landscape to refer to the
	complete set of descriptions for the EA. This Guide distinguishes EA
	Landscape from EA, because there will not be a single description in a
	comprehensive EA Landscape. At any point in time, a typical Enterprise
	will have several architectures described. Some architectures will
	address very specific needs; others will be more general. Some will
	address detail; some will provide a big picture. Some will address the
	same topics in different states (current, target, and transition), or
	different periods of time. To address this complexity, the TOGAF
	Standard provides a framework for organizing the EA Landscape. The EA
	Landscape identifies the boundary of all potential architecture, and
	associated constraints and guidance.
	
	Many characteristics can be used to organize an EA Landscape. An
	essential concept to recognize is that any initiative to develop and
	maintain EA populates part of the EA Landscape. Over time, over multiple
	actions, the EA Landscape is filled and refreshed. Much of the
	commentary on iteration in the TOGAF framework is designed to address
	this point.
	
	Instead of considering iteration regarding re-sequencing and looping the
	ADM, combine the TOGAF concept of an Architecture Project with the
	concept of the EA Landscape. Every Architecture Project knowingly
	develops just enough of the EA Landscape to serve the need at hand. The
	development is done in the context of prior architecture that guides or
	constrains the current work. Each Architecture Project will create,
	refine, and potentially change components in the EA Landscape.
	
	When populated, the EA Landscape contains a description, constraints, or
	guidance that can be used. Without performing repeated information
	gathering, analysis, review, and approval, the Practitioner cannot
	proceed with confidence. Existing decisions, guidance, and constraints
	inform current architecture development. Best practice limits
	information gathering and analysis to the minimum necessary to address
	the question at hand. Effort spent on EA returns the highest value when
	the EA is used. The EA cannot be used until the architect is “done”. All
	architecture development must be assessed against Time-To-Market (TTM).
	Filling in only the required parts of the EA Landscape, and following
	the constraints and guidance already in place, speeds TTM.
	
	Four common independent characteristics frame the EA Landscape:
	
	-   Breadth: The subject matter covered by an Architecture Project.
	    Breadth is easy to find confusing since it can refer to a wide range
	    of subjects. Consider domain, organization, and initiative as
	    examples. Breadth can be a hierarchy of specific subject areas. For
	    example, an organization can be broken down through the
	    organizational hierarchy. Subjects are supple. For example,
	    addressing a specific initiative will include all impacted
	    organizations, and an organization will address all impacted
	    initiatives. Breadth is one of the most important scoping
	    dimensions. It provides the Practitioner the context of their
	    analysis.
	-   Level of Detail: The level of detail should be self-explanatory. It
	    is easy to get carried away to explore and elaborate continually
	    within the scope of a domain, organization, or initiative. As the
	    architectures are developed, elaborate to the extent needed to
	    answer the question at hand. A good enough answer to support a
	    decision or directionally guide is sufficient to make progress.
	    Always develop to the least detail required to address the purpose
	    of the Architecture Project. Always keep in mind that working on
	    more detailed architecture is guided and constrained by less
	    detailed or superior architecture. Lastly, the more detail required,
	    the longer the TTM. Detail takes time to gather, analyze, describe,
	    and get approved.
	
	[]
	
	Figure 1: Characteristics of the EA Landscape
	
	-   Time: Every architecture development project will have a planning
	    horizon; the point in time when you expect to reach the Target
	    Architecture. Time creates challenges because the future is in
	    motion. Typically, the longer the planning horizon, the less
	    detailed the architecture. This is often true but does not provide a
	    universal rule. Lastly, care must be taken where one or more
	    transition architectures exist before reaching the planning horizon.
	    The more detailed architecture must carefully conform to the
	    guidance and constraints active at the point in time. This can be a
	    challenge as the guidance and constraints change through different
	    transition states.
	-   Recency: Each architecture description, specification, and view were
	    created at a point in time. They are always built for a purpose,
	    with an eye to the minimum information gathering and analysis to
	    address the question at hand. All EAs age, often gracefully or
	    suddenly. Recency is a hint that prior EA may need to be reviewed
	    and either reaffirmed or replaced. A good repository can distinguish
	    between architecture that is under development, architecture that
	    has been approved, architecture that has been realized, and
	    architecture that has been reaffirmed. During the development
	    period, the architecture may be very current, but may not be valid
	    for governance. Without approval, it should be considered as hints
	    only. Recency may be used as an organizing factor for historical
	    architectures.
	
	The essential point is to recognize that EA Landscape contents are only
	developed when needed. Once approved, it constrains all further EA
	development and use of the EA. For a broader discussion of time,
	sequence, and business cycle, see Section 5.3.[7]
	
	The dimensions of the EA Landscape help us think about the EA. Keep in
	mind that, in most cases, it is easy to build a simplification that is
	not valid. Architecture Projects are not neat cubes similar to what is
	shown in Figure 2. A real representation would look more like a sea
	urchin – a consolidated center but with spikes going in all directions.
	
	[]
	
	Figure 2: EA Landscape with an Architecture Project
	
	Looking at Figure 2, the essential point is that the Architecture
	Project covers a specific portion of the EA Landscape – the portion
	defined regarding breadth, planning horizon, and detail. Prior work may
	already exist within the scope. The example does not cover the least or
	the most detailed layers, nor all time periods nor subjects. Rather the
	example addresses a specific portion of the landscape. The example
	Architecture Project will populate, or refresh, a portion of the EA
	Landscape. Because there is higher-level work, all work in the
	Architecture Project will be subject to the superior architecture. The
	example stops at a level of detail so the Practitioner will need to
	constrain the level of detail. Lastly, the example is within the total
	planning horizon of the Enterprise and will be constrained by what can
	and must be done within the planning horizon.
	
	Complicating our lives, the superior architecture may exist either as an
	unrealized target, unrealized transition, or a realized current state.
	It must always be kept in mind that where there is not an explicit
	change in superior architecture, the current state probably remains
	valid. Lastly, this Architecture Project is a subset of the potential
	breadth of the scope of the EA Landscape. TTM is a key feature of useful
	architecture; Practitioners must stick to the scope (breadth, time,
	detail) of what they have been asked. Work outside the scope may be
	interesting, potentially even needed in the future, but is not within
	the scope of this architecture initiative.
	
	The energy and efficacy of an EA team is diluted when it tries to be in
	every conversation by trying to do too much. The construct of a TOGAF
	Request for Architecture Work as the entry to Phase A exists to bound
	the current Architecture Project. The Request for Architecture Work
	tells the EA team that, within the context of the existing EA Landscape,
	its Enterprise is looking for a Target Architecture addressing a
	specific set of subjects at a necessary level of detail that can be
	accomplished within a particular planning horizon. A substantive output
	of the Architecture Project is to populate, replace, or reaffirm the
	contents of the EA Landscape. When stakeholders accept the target, all
	further EA work, change planning, and change execution are governed by
	the approved architecture.
	
snippet togaf_business-architecture_business-scenarios_3.2.1_Planning_Step "3.2.1 Planning Step"
	
	The Planning step is used to ensure each iteration is well orchestrated
	as a mini-project, to get the right people and resources onboard, and to
	prepare all those involved.
	
	Activities to be considered to plan include:
	
	-   Identify buy-side and customer-side participants
	-   Decide best data collection mechanism for gathering data (surveys,
	    workshop, etc.)
	-   Set project constraints – time, people, money and document in
	    project plan
	-   Identify sponsor by name
	-   Configure team
	-   Identify who is needed for roles (PM, BSC, BSA, BSE, etc.)
	-   Identify target buy-side representatives by name
	-   Identify target supply-side representatives by name
	-   Engage the buy and supply sides and ensure they are on-board
	-   Add tasks for dealing with logistics throughout the plan
	-   Set realistic target dates in a timeline for each step
	-   Hold a team meeting to get on the same page
	-   Update project plan – including notes, dependencies, etc.
	
snippet togaf_adm_3_A_Architecture_Vision_3.2.1_Reference_Materials_External_to_the_Enterprise "3.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.2.1_Security "3.2.1 Security"
	
	For many security practitioners, security is based on three core
	pillars: Confidentiality, Integrity, and Availability – also known as
	the CIA triad. These work pretty well in a technical environment where
	information systems need to be classified in order to determine the
	security requirements that apply. Classification can be achieved
	according to the confidentiality scheme (high-medium-low). Especially in
	the financial industry, these schemes for security classification based
	on the CIA triad are pervasive through the whole organization.
	
	However, when talking with business owners it often turns out that these
	terms are meaningless to them. They have a clear understanding of which
	people are allowed to access which systems, but they don’t use these
	“security” terms for that. In addition, the three terms are too broad.
	It’s possible to rank every security concern under one of those three
	terms. The fact that they are so broadly defined is also their weakness:
	they can mean something completely different in two different
	environments.
	
	For example, “Availability” can stand for:
	
	-   Up-time – a minimum up-time of a system of 99.9% during business
	    hours
	-   Responsiveness – a minimum response time of 0,01 milliseconds for
	    each transaction
	-   Archived – a guaranteed storage time of 7 years for healthcare data
	-   Erased – all data on servers should be made unrecoverable before
	    they are sent to trash
	-   Recoverable – if the system fails due to a calamity, it should be
	    restored within 24 hours
	
	This example illustrates that Availability can have all kinds of
	meanings, depending on scope and context. It also illustrates that terms
	that are more specific are at our disposal that specify the type of
	concern we need to address. If the terms are so complex and need to be
	analyzed each time to determine what we really mean, then why should we
	keep using those terms? The terms Confidentiality, Integrity, and
	Availability are overloaded, used by many people for different purposes.
	We need a more specific concept.
	
	Therefore, in this work we move away from the narrow CIA triad to a very
	rich terminology that is both specific and business-friendly. This is
	offered by the SABSA Business Attribute model, as described in the
	section “Requirements Management”. Business Attributes offer a flexible
	and powerful way of expressing the security concerns of the business
	owners.
	
	The Business Attribute model also allows for measurement of efficacy.
	The efﬁcacy of a security measure is considered in relation to the risk
	it mitigates. An enterprise cannot determine how much it will be willing
	to spend on securing an asset until it understands the asset value. For
	example, the use of that asset in an application and the concomitant
	risk the asset is exposed to as a result, will determine the true
	requirements for security. Additionally, the organization’s tolerance
	for risk is a factor. In other words, the question asked should not be:
	“Is it secure?”, but rather: “Is it secure enough?”. The latter is
	ultimately a question to be answered by risk evaluation.
	
	To give a more down-to-earth idea of what security encompasses, some
	generally accepted areas of concern for the Security Architect are
	given:
	
	-   Asset Protection – the protection of information assets from loss or
	    unintended disclosure, and resources from unauthorized and
	    unintended use
	-   Risk Assessment – determining what risks we face, measuring them to
	    determine their likelihood and impact, and then accepting,
	    mitigating, or transferring the risk according to the organization’s
	    risk appetite
	-   Access Control – who are you and what activity are you allowed to do
	    under which conditions?
	-   Audit – does the operational environment operate in accordance with
	    the requirements?
	-   Availability – the ability to function without service interruption
	    or depletion despite abnormal or malicious events
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.2.1_Overview "3.2.2.1 Overview"
	
	Architecture Governance is the practice and orientation by which
	Enterprise Architectures and other architectures are managed and
	controlled. In order to ensure that this control is effective within the
	organization, it is necessary to have the correct organizational
	structures established to support all governance activities.
	
	An Architecture Governance structure for effectively implementing the
	approach described in this section will typically include the following
	levels, which may in practice involve a combination of existing IT
	governance processes, organizational structures, and capabilities. They
	will typically include the following:
	
	-   Global governance board
	-   Local governance board
	-   Design authorities
	-   Working parties
	
	The architecture organization illustrated in Figure 3-2 highlights the
	major structural elements required for an Architecture Governance
	initiative. While each enterprise will have differing requirements, it
	is expected that the basics of the organizational design shown in Figure
	3-2 will be applicable and implementable in a wide variety of
	organizational types.
	
	[]
	
	Figure 3-2: Architecture Governance Framework — Organizational Structure
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.2.2_Key_Areas "3.2.2.2 Key Areas"
	
	Figure 3-2 identifies three key areas of architecture management:
	Develop, Implement, and Deploy. Each of these is the responsibility of
	one or more groups within the organization, while the Enterprise
	Continuum is shown to support all activities and artifacts associated
	with the governance of the architectures throughout their lifecycle.
	
	The Develop responsibilities, processes, and structures are usually
	linked to the TOGAF ADM and its usage, while the Implement
	responsibilities, processes, and structures are typically linked to
	Phase G (see the TOGAF Standard — Architecture Development Method).
	
	As mentioned above, the Architecture Governance Framework is integral to
	the Enterprise Continuum, and manages all content relevant both to the
	architectures themselves and to Architecture Governance processes.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.2.3_Operational_Benefits "3.2.2.3 Operational Benefits"
	
	As illustrated in Figure 3-2 , the governance of the organization's
	architectures provides not only direct control and guidance of their
	development and implementation, but also extends into the operations of
	the implemented architectures.
	
	The following benefits have been found to be derived through the
	continuing governance of architectures:
	
	-   Links IT processes, resources, and information to organizational
	    strategies and objectives
	-   Integrates and institutionalizes IT best practices
	-   Aligns with industry frameworks such as COBIT (planning and
	    organizing, acquiring and implementing, delivering and supporting,
	    and monitoring IT performance)
	-   Enables the organization to take full advantage of its information,
	    infrastructure, and hardware and software assets
	-   Protects the underlying digital assets of the organization
	-   Supports regulatory and best practice requirements such as
	    auditability, security, responsibility, and accountability
	-   Promotes visible risk management
	
	These benefits position the TOGAF Architecture Governance Framework as
	an approach, a series of processes, a cultural orientation, and a set of
	owned responsibilities, that together ensure the integrity and
	effectiveness of the organization's architectures.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2.2_Architecture_Governance_Framework_Organizational_Structure "3.2.2 Architecture Governance Framework — Organizational Structure"
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.2.2_Architecture_View_Creation_Process "3.2.2 Architecture View Creation Process"
	
	As mentioned above, the TOGAF framework encourages but does not mandate
	the use of ISO/IEC/IEEE 42010:2011. The following description therefore
	covers both the situation where ISO/IEC/IEEE 42010:2011 has been adopted
	and where it has not.
	
	ISO/IEC/IEEE 42010:2011 itself does not require any specific process for
	developing architecture viewpoints or creating views from them. Where
	ISO/IEC/IEEE 42010:2011 has been adopted and become well-established
	practice within an organization, it will often be possible to create the
	required views for a particular architecture by following these steps:
	
	1.  Refer to an existing library of architecture viewpoints
	2.  Select the appropriate architecture viewpoints (based on the
	    stakeholders and concerns that need to be covered by views)
	3.  Generate views of the system by using the selected architecture
	    viewpoints as templates
	
	This approach can be expected to bring the following benefits:
	
	-   Less work for the architects (because the architecture viewpoints
	    have already been defined and therefore the views can be created
	    faster)
	-   Better comprehensibility for stakeholders (because the architecture
	    viewpoints are already familiar)
	-   Greater confidence in the validity of the views (because their
	    architecture viewpoints have a known track record)
	
	However, situations can always arise in which an architecture view is
	needed for which no appropriate architecture viewpoint has been
	predefined. This is also the situation, of course, when an organization
	has not yet incorporated ISO/IEC/IEEE 42010:2011 into its architecture
	practice and established a library of architecture viewpoints.
	
	In each case, the architect may choose to develop a new architecture
	viewpoint that will cover the outstanding need, and then generate an
	architecture view from it. (This is ISO/IEC/IEEE 42010:2011 recommended
	practice.) Alternatively, a more pragmatic approach can be equally
	successful: the architect can create an ad hoc architecture view for a
	specific system and later consider whether a generalized form of the
	implicit architecture viewpoint should be defined explicitly and saved
	in a library, so that it can be re-used. (This is one way of
	establishing a library of architecture viewpoints initially.)
	
	Whatever the context, the architect should be aware that every
	architecture view has an architecture viewpoint, at least implicitly,
	and that defining the architecture viewpoint in a systematic way (as
	recommended by ISO/IEC/IEEE 42010:2011) will help in assessing its
	effectiveness; i.e., does the architecture viewpoint cover the relevant
	stakeholder concerns?
	
snippet togaf_architecture-project-management_3.2.2_Define_the_Final_Product_of_the_Architecture_Project_and_its_Acceptance_Criteria "3.2.2 Define the Final Product of the Architecture Project and its Acceptance Criteria"
	
	The final product of the Architecture Project is the main output
	resulting from all work that will be performed during the project
	realization. Depending on the project goal it may be a document or a set
	of related documents that describes the current situation of, for
	example, the corporate architecture, results of analysis,
	recommendations, description of target architecture and roadmap, etc.
	
	  Example   In Project A, the Project Manager decided that the final product of the Architecture Project he is managing is: Report summarizing current application portfolio analysis along with key observations and improvement recommendations.
	  --------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	The acceptance criteria are a set of conditions that must to be met
	before the final product of the Architecture Project will be accepted.
	It is important to involve all projects stakeholders in the definition
	of project acceptance criteria in order to avoid any unexpected,
	mismanaged expectations at the end of the project.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, after reviewing all |
	|                                   | documentation, and after          |
	|                                   | consultation with the Project     |
	|                                   | Sponsor and other stakeholders,   |
	|                                   | the Project Manager prepared a    |
	|                                   | list of conditions that the final |
	|                                   | product should meet in order to   |
	|                                   | gain acceptance. He decided to    |
	|                                   | include both essential criteria   |
	|                                   | of the final product content as   |
	|                                   | well as technical details of the  |
	|                                   | report itself.                    |
	|                                   |                                   |
	|                                   | The main final product acceptance |
	|                                   | criteria are as follows:          |
	|                                   |                                   |
	|                                   | -   The report should be written  |
	|                                   |     in Polish and should be       |
	|                                   |     prepared in accordance with   |
	|                                   |     company templates.            |
	|                                   | -   The precise number of         |
	|                                   |     applications that are going   |
	|                                   |     to be analyzed is to be       |
	|                                   |     determined during project     |
	|                                   |     execution (initially it is    |
	|                                   |     50), but it may not be less   |
	|                                   |     than 45.                      |
	|                                   | -   Relationships and data flows  |
	|                                   |     between applications should   |
	|                                   |     be prepared in common         |
	|                                   |     notation; e.g., using the     |
	|                                   |     ArchiMate^(®) modeling        |
	|                                   |     language.                     |
	|                                   |                                   |
	|                                   | Recommendations for improvement   |
	|                                   | should include a roadmap with all |
	|                                   | initiatives along with assigned   |
	|                                   | priorities, estimated cost, and   |
	|                                   | timeframe.                        |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_business-scenarios_3.2.2_Gathering_Step "3.2.2 Gathering Step"
	
	The Gathering step is where information is collected on each of the
	areas in Figure 1. The objective is to obtain valid data to shape,
	confirm, and/or deny the premise driving the effort. If information
	gathering procedures and practices are already in place in an
	organization – for example, to gather information for strategic planning
	– they should be used as appropriate, either during Business Scenario
	workshops or in place of Business Scenario workshops.
	
	Multiple techniques may be used in this step, such as information
	research, qualitative analysis, quantitative analysis, surveys, requests
	for information, etc. As much information as possible should be gathered
	and preprocessed “off-line” prior to any face-to-face workshops
	(described below). For example, a request for information may include a
	request for strategic and operational plans. Such documents typically
	provide great insights, but the information that they contain usually
	requires significant preprocessing. The information may be used to
	generate an initial draft of the Business Scenario prior to the
	workshop, if possible. This will increase the understanding and
	confidence of the architect, and the value of the workshop to its
	participants.
	
	A very useful way to gather information is to hold Business Scenario
	workshops, whereby a Business Scenario consultant leads a select and
	small group of business representatives through a number of questions to
	elicit the information surrounding the problem being addressed by the
	architecture effort. The workshop attendees must be carefully selected
	from high levels in the business and technical sides of the
	organization. It is important to get people that can and will provide
	information openly and honestly. Where a draft of the Business Scenario
	already exists – for example, as a result of preprocessing information
	gathered during this step, as described above – the workshop may also be
	used to review the state of the Business Scenario draft.
	
	Sometimes it is necessary to have multiple workshops: in some cases, to
	separate the gathering of information on the business side from the
	gathering of information on the technical side; and in other cases
	simply to get more information from more people.
	
	When gathering information, the architect can greatly strengthen the
	Business Scenario by obtaining “real-world examples”; i.e., case studies
	to which the reader can easily relate. When citing real-world examples,
	it is important to maintain a level of anonymity of the parties
	involved, to avoid blame.
	
	Activities to consider in the Gathering step include:
	
	-   Create questions you believe should be answered
	-   Gather data that is openly available or employ early surveys
	-   Preprocess openly available data – note this is time-consuming
	-   Develop strawman “understanding” of the key elements based on open
	    data
	-   Update questions for gaps
	-   Prepare all material to guide the gather mechanism
	-   Implement chosen information gathering mechanism
	-   Hold one or more workshops (if chosen method is a workshop)
	
	—  Get general agreement from stakeholders on the subject and scope of
	the problem
	
	—  Get champions from stakeholders and get them to supply names of
	representatives
	
	—  Send invitations and questions to invitees prior to workshop
	
	—  Obtain a facilitator and recorder
	
	—  Create an agenda
	
	—  Create workshop materials – including a “strawman” Business Scenario
	
	—  Prepare room with flip charts, U-shape table, white board, conference
	hook-up as appropriate
	
	—  Hold the workshop and capture all information from the workshop
	electronically
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.2.2_Introduction_to_Purpose "3.2.2 Introduction to Purpose"
	
	A purpose-based EA Capability model identifies four purposes that
	typically frame the planning horizon, depth and breadth of an
	Architecture Project, and the contents of the EA Repository. The
	purpose-based EA Capability model used in this Guide was introduced in
	the World-Class Enterprise Architecture White Paper (see Referenced
	Documents) and refined in the TOGAF^(®) Leader’s Guide to Establishing
	and Evolving an EA Capability (see Referenced Documents).
	
	[]
	
	Figure 3: Purposes of Enterprise Architecture
	
	Typically, there are four broad purposes of an EA Capability:
	
	-   EA to Support Strategy: Deliver EA to provide an end-to-end Target
	    Architecture, and develop roadmaps of change over a three to
	    ten-year period
	
	    An architecture for this purpose will typically span many change
	    programs or portfolios. In this context, architecture is used to
	    identify change initiatives and supporting portfolio and programs.
	    Set terms of reference, identify synergies, and govern the execution
	    of strategy via portfolio and programs.
	
	-   EA to Support Portfolio: Deliver EA to support cross-functional,
	    multi-phase, and multi-project change initiatives
	
	    An architecture for this purpose will typically span a single
	    portfolio. In this context, architecture is used to identify
	    projects, and set their terms of reference, align their approaches,
	    identify synergies, and govern their execution of projects.
	
	-   EA to Support Project: Deliver EA to support the Enterprise’s
	    project delivery method
	
	    An architecture for this purpose will typically span a single
	    project. In this context, the architecture is used to clarify the
	    purpose and value of the project, identify requirements to address
	    synergy and future dependency, assure compliance with architectural
	    governance, and to support integration and alignment between
	    projects.
	
	-   EA to Support Solution Delivery: Deliver EA that is used to support
	    the solution deployment
	
	    An architecture for this purpose will typically be a single project
	    or a significant part of it. In this context, the architecture is
	    used to define how the change will be designed and delivered,
	    identify constraints, controls and architecture requirements to the
	    design, and, finally, act as a governance framework for change.
	
	Architecture for different purposes typically creates different contents
	in the EA Landscape with a different mix of characteristics. Table 1
	summarizes the typical characteristics. Table 1 is developed to
	represent a scenario, where a strategist uses the same concepts,
	methods, techniques, and frameworks to develop EA to develop a roadmap
	that supports the direction of an Enterprise. The strategist’s
	Architecture Project will drill down from strategy to creating a
	portfolio that realizes the future state by supporting solution
	delivery. This table presents how the strategist or the architecture
	Practitioner’s work addresses the four dimensions of the EA Landscape.
	
	Table 1: Purpose and EA Landscape Characterization
	
	+-------------+-------------+-------------+-------------+-------------+
	| Purpose     | Breadth     | Level of    | Time        | Recency     |
	|             |             | Detail      |             |             |
	+=============+=============+=============+=============+=============+
	| A           | No pattern. | Not very    | Typically,  | Typically,  |
	| rchitecture |             | detailed.   | looking     | the need to |
	| to Support  | Some        |             | ahead for a | update and  |
	| Strategy    | Strategy    | May contain | 3 to        | keeping     |
	|             | will have a | point       | 10-year     | current     |
	|             | broad       | constraints | period when | this        |
	|             | impact      | that are    | Target.     | a           |
	|             | while other | very        |             | rchitecture |
	|             | Strategy    | detailed    | Current     | is highly   |
	|             | will cover  | when the    | A           | variable.   |
	|             | a narrow    | value is    | rchitecture |             |
	|             | subject.    | dependent   | to Support  |             |
	|             |             | upon tight  | Strategy    |             |
	|             |             | control.    | tends to    |             |
	|             |             |             | have a      |             |
	|             |             | Typically,  | short       |             |
	|             |             | more        | timeframe   |             |
	|             |             | guidance    | of          |             |
	|             |             | than        | validity.   |             |
	|             |             | constraint. |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| A           | Will cover  | Typically,  | Typically,  | Typically,  |
	| rchitecture | single      | not very    | valid for 2 | the need to |
	| to Support  | subjects    | detailed.   | to 5-year   | update and  |
	| Portfolio   | (the        |             | period when | keeping     |
	|             | Portfolio). | May contain | Target.     | current     |
	|             |             | discrete    |             | this        |
	|             |             | constraints | Current     | a           |
	|             |             | that are    | A           | rchitecture |
	|             |             | very        | rchitecture | is highly   |
	|             |             | detailed    | to Support  | variable.   |
	|             |             | when the    | Portfolio   |             |
	|             |             | value is    | should be   |             |
	|             |             | dependent   | considered  |             |
	|             |             | upon tight  | past its    |             |
	|             |             | control.    | best-before |             |
	|             |             |             | date. A     |             |
	|             |             |             | portfolio   |             |
	|             |             |             | without a   |             |
	|             |             |             | view to the |             |
	|             |             |             | future is   |             |
	|             |             |             | pointless.  |             |
	+-------------+-------------+-------------+-------------+-------------+
	| A           | Narrow      | Typically   | Typically,  | Typically,  |
	| rchitecture | breadth,    | detailed.   | valid as a  | will be     |
	| to Support  | typically   |             | target for  | retained in |
	| Project     | discrete    | Will        | <2 years.   | the EA      |
	|             | Projects    | contain     |             | Landscape   |
	|             | within a    | detailed    | Will have   | for an      |
	|             | Portfolio.  | c           | very        | extended    |
	|             |             | onstraints, | long-lived  | period      |
	|             |             | that may    | timeframes  | after       |
	|             |             | not be      | as current  | transition  |
	|             |             | fully       | (post       | from Target |
	|             |             | supported   | re          | to          |
	|             |             | by detailed | alization). | Cur         |
	|             |             | a           |             | rent.^([8]) |
	|             |             | rchitecture |             |             |
	|             |             | de          |             | In the      |
	|             |             | scriptions. |             | absence of  |
	|             |             |             |             | an          |
	|             |             | Typically,  |             | A           |
	|             |             | more        |             | rchitecture |
	|             |             | constraint  |             | Project,    |
	|             |             | than        |             | the         |
	|             |             | guidance is |             | a           |
	|             |             | developed.  |             | rchitecture |
	|             |             |             |             | and         |
	|             |             |             |             | associated  |
	|             |             |             |             | constraints |
	|             |             |             |             | and         |
	|             |             |             |             | guidance    |
	|             |             |             |             | will        |
	|             |             |             |             | continue    |
	|             |             |             |             | in          |
	|             |             |             |             | definitely. |
	+-------------+-------------+-------------+-------------+-------------+
	| A           | Typically,  | Most        | Typically,  | Typically,  |
	| rchitecture | very narrow | detailed    | valid as a  | will be     |
	| to Support  | breadth.    | EA.         | target for  | retained in |
	| Solution    |             |             | <2 years.   | the EA      |
	| Delivery    |             | Will        |             | Landscape   |
	|             |             | contain the | Will have   | for an      |
	|             |             | most        | very        | extended    |
	|             |             | detailed    | long-lived  | period      |
	|             |             | constraint. | timeframes  | after       |
	|             |             |             | as current  | transition  |
	|             |             | Typically,  | (post       | from Target |
	|             |             | only        | re          | to Current. |
	|             |             | constraints | alization). |             |
	|             |             | will be     |             | In the      |
	|             |             | developed,  |             | absence of  |
	|             |             | as guidance |             | an          |
	|             |             | will be     |             | A           |
	|             |             | carried     |             | rchitecture |
	|             |             | forward     |             | Project,    |
	|             |             | from        |             | the         |
	|             |             | superior    |             | a           |
	|             |             | ar          |             | rchitecture |
	|             |             | chitecture. |             | and         |
	|             |             |             |             | associated  |
	|             |             |             |             | constraints |
	|             |             |             |             | and         |
	|             |             |             |             | guidance    |
	|             |             |             |             | will        |
	|             |             |             |             | continue    |
	|             |             |             |             | in          |
	|             |             |             |             | definitely. |
	+-------------+-------------+-------------+-------------+-------------+
	
snippet togaf_business-architecture_business-capabilities_3.2.2_Leveling "3.2.2 Leveling"
	
	Leveling is the process of decomposing each top-level (Level 1) business
	capability into lower levels to communicate more detail at a level
	appropriate to the audience or stakeholder group concerned. Some
	business capabilities intuitively decompose as part of the modeling
	process. Others only become evident when capabilities are mapped to show
	other perspectives.
	
	For example, senior executives may only be interested in the Level 1
	view of the business capability map. Architects and planners expect to
	see a much greater degree of granularity. The number of levels of
	decomposition is limited only by the degree necessary to communicate the
	information required by the intended audience or to enable the business
	to make informed decisions about capability gaps. Between three and six
	business capability levels of decomposition is common in practice.
	
	Figure 3 shows the Human Resource Management business capability
	decomposition. Here, Human Resource Management is the Level 1 business
	capability. There are seven Level 2 business capabilities, including
	Human Resource Performance Determination, which in turn has been
	decomposed into three Level 3 business capabilities.
	
	[]
	
	Figure 3: Human Resource Management Capability Decomposition
	
snippet togaf_adm_3_A_Architecture_Vision_3.2.2_Non-Architectural_Inputs "3.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Business principles, business goals, and business drivers (see the
	    TOGAF Standard — Architecture Content)
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.2.2_Privacy "3.2.2 Privacy"
	
	Privacy is the ability of an individual or group to seclude themselves,
	or information about themselves. The boundaries and content of what is
	considered private differ among cultures and individuals, but share
	common themes. The domain of privacy partially overlaps security,
	including, for instance, the concepts of appropriate use, as well as
	protection of information.
	
	In general, directives on privacy demand that personal data should not
	be processed at all, except when certain conditions are met. These
	conditions fall into three categories: transparency, legitimate purpose,
	and proportionality.
	
snippet togaf_business-architecture_business-scenarios_3.2.3_Analyzing_Step "3.2.3 Analyzing Step"
	
	The Analyzing step is where a great deal of real Business Architecture
	work is actually done. The objective of this step is to develop a
	uniform view of the key elements of a Business Scenario. This is where
	the information that is gathered is processed and documented, and where
	the models are created to represent that information, typically
	visually.
	
	The Analyzing step takes advantage of the knowledge and experience of
	the Business Scenario consultant using past work and experience to
	develop the models necessary to depict the information captured. Note
	that the models and documentation produced are not necessarily
	reproduced verbatim from interviews, but rather filtered and translated
	according to the real underlying needs.
	
	In the Analyzing step it is important to maintain linkages between the
	key elements of the Business Scenario. One technique that assists in
	maintaining such linkages is the creation of matrices that are used to
	relate business processes to each of:
	
	-   Constituencies
	-   Human Actors
	-   Computer Actors
	-   Issues
	-   Objectives
	
	In this way, the business process becomes the binding focal point, which
	makes a great deal of sense, since in most cases it is business process
	improvement that is being sought.
	
	Activities to be considered in the Analyzing step include:
	
	-   Collect all raw data in one place and lock it as read-only
	-   Create a separate spreadsheet to collect all relevant data per key
	    element
	-   Copy raw data into a raw data column(s) of the appropriate
	    spreadsheet per key element
	-   Textual data collected must iteratively transform and normalize raw
	    data – semantics!
	
	—  Break compounds into single points
	
	—  Using affinity analysis, synthesis, and abstraction transform raw
	data into a normalized list
	
	—  Using further affinity analysis create categories for the list
	
	—  Each transformation step should be recorded in spreadsheet
	
	-   For calculable data:
	
	—  Build the mechanisms to aggregate the data as findings – do the math!
	
	-   Create a new spreadsheet to build a matrix linking all the key
	    elements
	-   Perform business and capability analysis to generate a set of
	    business and technical requirements
	-   For each of the key elements assess answers for completeness and
	    correctness
	-   Draft models of data collected as appropriate
	
snippet togaf_adm_3_A_Architecture_Vision_3.2.3_Architectural_Inputs "3.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Re-use requirements
	    -   Budget requirements
	    -   Requests for change
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Architecture Principles (see the TOGAF Standard — Architecture
	        Content), including business principles, when pre-existing
	    -   Configured and deployed tools
	-   Populated Architecture Repository (see the TOGAF Standard —
	    Architecture Content) — existing architectural documentation
	    (framework description, architectural descriptions, baseline
	    descriptions, Architecture Building Blocks (ABBs), etc.)
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.2.3_Core_Concepts_for_Information_Security_Management "3.2.3 Core Concepts for Information Security Management"
	
	According to ISO/IEC 27001:2013 [4], the ISM system preserves the
	security aspects of information by applying a risk management process,
	and it gives confidence to interested parties that risks are adequately
	managed. The ISM system is part of and is integrated with the
	organization’s processes and overall management structure. The standard
	specifies the requirements for the ISM system.
	
	The following core security concepts are relevant for the ISM process.
	Their descriptions as well as their relationship with the TOGAF ADM are
	given later in this Guide. Their role in the ISM process will be
	described in the Security Architecture Practitioners Guide. They are
	listed here in order to enumerate the core information security concepts
	that should be part of the TOGAF Standard. The main categories of
	ISO/IEC 27001:2013 are used to understand better how the concepts are
	related.
	
	Context of the Organization
	
	-   Security Domain Model
	-   Business Drivers/Business Objectives
	-   Applicable Law and Regulation Register
	-   Applicable Control Framework Register
	-   Trust Framework
	
	Leadership
	
	-   Security Policy Architecture
	
	Planning
	
	-   Security Principles
	-   Business Attribute Profile
	-   Control Objectives/Security Objectives
	-   Data Quality
	-   Business Risk Model/Risk Register
	-   Security Services Catalog
	
	Support
	
	-   Security Resource Plan
	-   Security Training & Awareness
	-   Security Standards
	
	Operation
	
	-   Security Classification
	
	Performance Evaluation
	
	-   Security Audit
	
	Improvement
	
	-   (no new security concept)
	
snippet togaf_architecture-project-management_3.2.3_Define_the_Project_Deliverables "3.2.3 Define the Project Deliverables"
	
	Deliverables are unique and verifiable products, results,[24] and
	outputs that are required to be prepared to complete a project or
	particular phase of the project. Deliverables may be part of the final
	product, any auxiliary products, or Project Management products. The aim
	of defining the list of deliverables is to better plan the work and gain
	their acceptance right after they are completed rather than at the end
	of the project. This approach (acceptance of smaller deliverables) is
	the best way to reduce the risk of not meeting the expectations at the
	end of the project. During this activity it should be defined which of
	the TOGAF documents should be also delivered; e.g., Architecture
	Definition Document, Architecture Requirements Specification,
	Implementation and Migration Plan, Architecture Roadmap, etc.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | prepared a list of deliverables   |
	|                                   | that will be prepared during      |
	|                                   | execution of the project. He      |
	|                                   | decided to divide the final       |
	|                                   | product into smaller deliverables |
	|                                   | and also included additional      |
	|                                   | deliverables that are important   |
	|                                   | to be agreed during the execution |
	|                                   | of the project. Moreover, he      |
	|                                   | included management deliverables  |
	|                                   | such as status reports.           |
	|                                   |                                   |
	|                                   | Project essential deliverables:   |
	|                                   |                                   |
	|                                   | -   Agreed list of applications   |
	|                                   |     that will be subject of the   |
	|                                   |     analysis                      |
	|                                   | -   Agreed list of required views |
	|                                   |     that will be prepared         |
	|                                   | -   Relationships and data flows  |
	|                                   |     between applications          |
	|                                   | -   Mapping application           |
	|                                   |     capabilities (overlaps and    |
	|                                   |     gaps)                         |
	|                                   | -   Identification of key         |
	|                                   |     technological constraints for |
	|                                   |     application development       |
	|                                   | -   Key observations from         |
	|                                   |     analysis                      |
	|                                   | -   Improvement recommendations   |
	|                                   |                                   |
	|                                   | Project management products:      |
	|                                   |                                   |
	|                                   | -   Report highlights             |
	|                                   | -   End stage report              |
	|                                   | -   Risk log                      |
	|                                   | -   Issue log                     |
	|                                   | -   Change log                    |
	|                                   |                                   |
	|                                   | Project final report              |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.2.3_What_an_Enterprise_Architecture_Looks_Like "3.2.3 What an Enterprise Architecture Looks Like"
	
	EA exists to guide and constrain change planning and work to perform the
	change. The scope of work embedded in a Request for Architecture Work
	should identify the applicable characteristics of the EA Landscape. Over
	time, through multiple Architecture Projects, the EA Landscape is
	populated. This still does not tell us what actually gets written down,
	nor exactly what is produced.
	
	In short, a Practitioner will need to document three things:
	
	1.  Models, in the EA Landscape
	2.  Views derived from the EA Landscape
	3.  Other useful things
	
	In short, the architecture is the set of models, the components, and
	their relationships that comprise the scope of the EA Landscape under
	consideration. These models consistently describe the current and Target
	Architecture. In a theoretical world, a single unified model is
	produced. Typically, a set of models is produced. These discrete models
	will either have a jury-rigged linkage or rely on the expertise of those
	using the models to leap between them. Models can vary in formality,
	some strictly conforming to a semantically constrained structure, while
	others are quite flexible.
	
	The primary purpose of the models is to facilitate the architect to
	understand the system being examined. Understand how it works today,
	understand how it can be most effectively changed to reach the
	aspirations of the stakeholders, and understand the implications and
	impacts of the change.
	
	A secondary purpose is re-use. It is simply inefficient to re-describe
	the Enterprise. The efficiency of consistency is balanced against the
	extra energy to describe more than is needed, and to train those who
	describe and read the descriptions on formal modeling. The size,
	geographic distribution, and purpose of the EA team will dramatically
	impact the level of consistency and formality required.[9] Formal models
	are substantially more re-usable than informal models. Formal models are
	substantially easier to extend across work teams. The penalty is that
	formal models require semantic precision. For example, regardless of the
	structure of an application in the real world, it must be represented in
	a model conforming to the formal definition. This representation is
	possible with a good model definition.
	
	Architecture Projects may have unique aspects. Practitioners usually
	lose the ability to address Architecture Project-specific considerations
	in a standard representation. The reverse is also true; flexible
	definitions that directly support one analysis will not be shared nor
	communicated with others in the EA team. Often the unique aspects will
	not even be remembered by the author. Practitioners must trade off
	between re-use and optimal fit, and should ensure that they are
	optimizing for the entire EA team rather than personal preference.
	
	Every model that is produced and maintained has a price in effort. When
	effort exceeds value, the price will be paid by hindering an
	Enterprise’s ability to perform the effective change. Unnecessary models
	and analysis steal from guiding effective change. Every approach to
	modeling is designed to shed light on one or more aspects of the
	Enterprise. Typically, narrow, special-purpose models facilitate
	detailed analysis while broad models facilitate inclusive analysis. All
	approaches to modeling – formal/informal and broad/narrow – are
	trade-offs.
	
	All EA Landscapes that support a broad range of purposes will be
	comprised of a set of models. This set could be contiguous or discrete,
	targeted for analysis or communication. A core unified model can provide
	a common bridge between discrete models. The more specific a model, the
	more important it is to an analysis. The more important a model to
	analysis, the more important is the need and clarity of linkage across
	models. Careful thought is needed to understand the long-term need for
	cross-linkage. Most analyses are performed repeatedly over a period of
	time for different purposes. Like informal models, jury-rigged or
	expertise-based linkage is a short-term answer that prohibits effective
	re-use.
	
	Models are very useful for the architect. They form consistent
	representations of the parts of the world that must be understood and
	analyzed. Shorthand communication and consistent analysis reduce the
	TTM.[10] However, because models are partial representations of the
	whole, typically described with a limited language that requires
	experience to read, and often subject to constraints designed to show
	relationships, models tend to be ineffective to communicate usefully.
	Consider a balance sheet; it is a great model to outline part of an
	organization’s financial position. It requires skill to read and is
	silent on the success, margin, or lifecycle of new products. Do not rush
	to deliver the models sooner than necessary.
	
	Models are poor general communication tools. Good models are carefully
	constrained to exactly tell part of a story. They will carefully control
	the components available and the available relationships. They will
	enforce some attributes. They carefully render a complex environment
	into something that represents the world in terms it can be understood,
	optimized, and compared. They tend to require specialist knowledge, and
	often carefully constrain common terms in a way casual consumers do not
	align with.[11]
	
	The best communication comes down to views, and “other useful things”.
	Views have a specialized role in communicating the architecture and are
	discussed in Section 3.3.1. The phrase “other useful things” is
	purposefully open-ended. For example, it is normal to find that a high
	fraction of useful communication is highlighting the value of the target
	state, acknowledgment of the scope of anticipated change, or clarifying
	the date value is expected. Most of the effective communication about an
	architecture will be “other useful things”.
	
snippet togaf_architecture-project-management_3.2.4_Define_the_Project_Exclusions_Constraints_and_Assumptions "3.2.4 Define the Project Exclusions, Constraints, and Assumptions"
	
	Project exclusion is a statement saying what is out of scope for the
	project and it is used to acknowledge and make stakeholders aware of
	what is excluded from the project.
	
	Constraint is a statement about the limitations of the project that
	affect its execution.
	
	Assumption is a statement about facts that are considered to be true.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | prepared a list of exclusions,    |
	|                                   | constraints, and assumptions      |
	|                                   | based on the results from         |
	|                                   | previous analysis. Examples are   |
	|                                   | listed below.                     |
	|                                   |                                   |
	|                                   | Exclusions:                       |
	|                                   |                                   |
	|                                   | -   Recommendations for           |
	|                                   |     improvement will contain      |
	|                                   |     initiatives along with only   |
	|                                   |     estimated cost                |
	|                                   |                                   |
	|                                   | There will be no RFI process in   |
	|                                   | order to gain more reliable cost  |
	|                                   | data.                             |
	|                                   |                                   |
	|                                   | -   The goal of the project is to |
	|                                   |     analyze the current           |
	|                                   |     application portfolio along   |
	|                                   |     with key observations and     |
	|                                   |     improvement recommendations   |
	|                                   |                                   |
	|                                   | The Target IT Architecture is     |
	|                                   | excluded from the Project Scope.  |
	|                                   |                                   |
	|                                   | -   Identification of key         |
	|                                   |     constraints for application   |
	|                                   |     development will be performed |
	|                                   |     from a technological          |
	|                                   |     perspective                   |
	|                                   |                                   |
	|                                   | Other perspectives – e.g.,        |
	|                                   | knowledge capabilities, human     |
	|                                   | resources, organizational         |
	|                                   | constraints – are excluded from   |
	|                                   | the Project Scope.                |
	|                                   |                                   |
	|                                   | Constraints:                      |
	|                                   |                                   |
	|                                   | -   The project is being          |
	|                                   |     performed mostly by internal  |
	|                                   |     resources, but the maximum    |
	|                                   |     five FTEs can be dedicated to |
	|                                   |     this project                  |
	|                                   | -   Due to limited budget there   |
	|                                   |     is no possibility to          |
	|                                   |     subcontract work outside the  |
	|                                   |     organization                  |
	|                                   | -   The final work product should |
	|                                   |     be completed within 22 weeks  |
	|                                   |                                   |
	|                                   | Assumptions:                      |
	|                                   |                                   |
	|                                   | -   Deliverables will be accepted |
	|                                   |     within five working days      |
	|                                   |     after completion              |
	|                                   | -   Any change requests affecting |
	|                                   |     Project Scope, budget, or     |
	|                                   |     resources will be approved by |
	|                                   |     the Steering Committee of the |
	|                                   |     project                       |
	|                                   | -   Management and employees,     |
	|                                   |     with the appropriate          |
	|                                   |     knowledge, will devote        |
	|                                   |     sufficient time in order to   |
	|                                   |     collect the appropriate       |
	|                                   |     information and make the      |
	|                                   |     necessary decisions           |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_business-scenarios_3.2.4_Documenting_Step "3.2.4 Documenting Step"
	
	The Documenting step is for documenting the results and having the
	document edited for readability from the viewpoint of an average person,
	and also for developing models to support the text. The goal in this
	step is to create a record of reference.
	
	Activities that should be considered in this step include:
	
	-   Draft the document and include models as drawings
	-   Conduct an informal internal review of content
	-   Update draft document and models
	-   Have the document proofread and edited
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.2.4_Operational_Security_Processes "3.2.4 Operational Security Processes"
	
	Operational controls are designed during TOGAF ADM Phases B, C, D, and
	E. ADM Phases F and G provide guidance on the definition of metrics that
	would be used later during the project operations. This is why the
	operational security processes are introduced in the design phase as
	part of the Security Services Catalog.
	
	The consequence is that operational security processes, such as digital
	forensics, security intelligence, and security analytics, will be found
	in the architectures as part of the Security Services Catalog. Security
	intelligence provides the means to analyze and measure enormous amounts
	of data and deliver meaningful incident information to the right people
	across the organization.
	
snippet togaf_architecture-project-management_3.2.5_Detail_the_Architecture_Project_Scope "3.2.5 Detail the Architecture Project Scope"
	
	The Project Management methods provide tools and techniques which can be
	used during definition of the detailed Project Scope and Project Plan.
	
snippet togaf_business-architecture_business-scenarios_3.2.5_Reviewing_Step "3.2.5 Reviewing Step"
	
	The Reviewing step is where the results are fed back to the sponsors of
	the project to ensure that there is a shared understanding of the full
	scope of the problem, and the potential depth of the technical impact.
	The goal is to get buy-in or stop.
	
	Multiple Business Scenario workshops or “readout” meetings with the
	sponsors and involved parties are recommended. The meetings should be
	set up to be open and interactive. It is recommended to have exercises
	built into meeting agendas, in order to test attendees’ understanding
	and interest levels, as well as to test the architect’s own assumptions
	and results.
	
	This step is extremely important, as the absence of shared expectations
	is in many cases the root cause of project failures.
	
	Activities that should be considered in this step include:
	
	-   Vet the models and documentation
	-   Consider readout sessions
	-   Capture results
	-   Update document and models
	-   Identify internal and external reviewers by name
	-   Allocate specific sections to specific reviewers
	-   Craft review guidelines
	-   Send notification to reviewers
	-   Conduct a formal review of content
	-   Final update document and models
	-   Poll the stakeholders on moving forward based on the document
	
snippet togaf_architecture-project-management_3.2.6_Create_the_Work_Breakdown_Structure "3.2.6 Create the Work Breakdown Structure"
	
	This is the process of subdividing project deliverables and project work
	into smaller, more manageable components.[25]
	
	It should be determined which architecture domains should be developed,
	to what level of detail, and which architecture views should be built
	prior to creating the Work Breakdown Structure, and the result of this
	task should be an input to the Work Breakdown Structure.
	
	During this task, the following TOGAF ADM activities should be also
	performed:
	
	-   Assess work products that are required to be produced against the
	    set of business performance requirements, ensuring performance
	    metrics are built into the work products, and specific
	    performance-related work products are available
	-   Identify new work products that will need to be changed
	-   Provide direction on which existing work products will need to be
	    changed
	
	There are two common tools used to create the Work Breakdown Structure:
	
	-   Decomposition is a technique used for dividing and subdividing the
	    Project Scope and project deliverables into smaller, more manageable
	    parts[26]
	-   Expert Judgment is often used to analyze the information needed to
	    decompose the project deliverables down into smaller component parts
	    in order to create an effective Work Breakdown Structure.[27]
	
	The Work Breakdown Structure is often presented as a diagram that
	graphically presents the decomposition of work products.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | prepared the Work Breakdown       |
	|                                   | Structure of his project using    |
	|                                   | decomposition techniques. As he   |
	|                                   | had already prepared a detailed   |
	|                                   | list of project deliverables, he  |
	|                                   | decided to use it as an input.    |
	|                                   | The Work Breakdown Structure      |
	|                                   | diagram prepared by the Project   |
	|                                   | Manager is presented below:       |
	|                                   |                                   |
	|                                   | []                                |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.2.7_Develop_the_Architecture_Project_Plan_and_Schedule "3.2.7 Develop the Architecture Project Plan and Schedule"
	
	After the detailed scope is defined, the following Project Management
	tools and techniques can be used in order to define the Project Plan.
	During this phase it is recommended to prepare a schedule; a detailed
	schedule for each phase should be prepared during the Planning a Stage
	activity (see Planning a Stage, Section 3.3).
	
	1. Define Activities
	
	This activity is used to identify any specific tasks that need to be
	executed in order to produce deliverables.
	
	The key benefit of this process is to break down work packages into
	activities that provide a basis for estimating, scheduling, executing,
	monitoring, and controlling the project work.[28]
	
	In this process the Project Manager should use the prepared Work
	Breakdown Structure that divides deliverables to the lower level; i.e.,
	work packages. In this process work packages are decomposed into smaller
	components called activities, that will be later sequenced and
	estimated.
	
	It should be clarified that in terms of the Project Management methods,
	the definition of “work packages” has a different meaning to the TOGAF
	Standard (e.g., in the ADM Phase E). In order to avoid ambiguity, later
	in this chapter we will use term “work packages” defined as in the
	previous paragraph.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | used defined work packages from   |
	|                                   | the Work Breakdown Structure and  |
	|                                   | decomposed them into activities.  |
	|                                   | The results for relationships and |
	|                                   | data flows between application    |
	|                                   | deliverables is presented below.  |
	|                                   |                                   |
	|                                   |   --------- ---------             |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   |   ID        Activity Name         |
	|                                   |   1         Start of the project  |
	|                                   |   2         Relationships an      |
	|                                   | d data flows between applications |
	|                                   |   2.1                             |
	|                                   |        Agree list of applications |
	|                                   |   2.1.1     Workshop with arch    |
	|                                   | itecture team to get initial list |
	|                                   |   2.1.2     Summary               |
	|                                   |  of the workshop with architectur |
	|                                   | e team (initial application list) |
	|                                   |   2.                              |
	|                                   | 1.3     Workshop with stakeholder |
	|                                   | s to discuss list of applications |
	|                                   |   2.1.4     P                     |
	|                                   | repare final list of applications |
	|                                   |                                   |
	|                                   | 2.1.5     Secure approval of list |
	|                                   |   2.2       Analysis of r         |
	|                                   | elationships between applications |
	|                                   |   2.2.1                           |
	|                                   | Overall analysis of relationships |
	|                                   |   2.2.2                           |
	|                                   | Detailed analysis of applications |
	|                                   |   2.2.                            |
	|                                   | 2.1   1st package of applications |
	|                                   |   2.2.                            |
	|                                   | 2.2   2nd package of applications |
	|                                   |   2.2.                            |
	|                                   | 2.3   3rd package of applications |
	|                                   |   2.3       Analysis              |
	|                                   | of data flow between applications |
	|                                   |   2.3.1                           |
	|                                   |     Overall analysis of data flow |
	|                                   |   2.3.2                           |
	|                                   | Detailed analysis of applications |
	|                                   |   2.3.                            |
	|                                   | 2.1   1st package of applications |
	|                                   |   2.3.                            |
	|                                   | 2.2   2nd package of applications |
	|                                   |   2.3.                            |
	|                                   | 2.3   3rd package of applications |
	|                                   |   2.4       P                     |
	|                                   | repare final report from analysis |
	|                                   |   2.5                             |
	|                                   |      Approval of analysis results |
	|                                   |   --------- ---------             |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	2. Sequence Activities
	
	This activity is used to define all relationships between project
	activities.
	
	The key benefit of this process is that it defines the logical sequence
	of work to obtain the greatest efficiency given all project
	constraints.[29]
	
	Please refer to the Project Evaluation and Review Technique (PERT)
	method which is a commonly used, network diagram-based technique
	supporting the process of sequencing tasks.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | sequenced all defined activities  |
	|                                   | using the Precedence Diagramming  |
	|                                   | Method. To do this, the Project   |
	|                                   | Manager used a scheduling tool    |
	|                                   | that enabled him to do it easily. |
	|                                   | For each activity on the lowest   |
	|                                   | level the Project Manager defined |
	|                                   | the preceding activity, so that   |
	|                                   | all of the tasks had defined      |
	|                                   | dependencies which will allow him |
	|                                   | to build the schedule. The        |
	|                                   | Results for relationships and     |
	|                                   | data flows between application    |
	|                                   | deliverables is presented below.  |
	|                                   |                                   |
	|                                   | +---------+---------+---------+   |
	|                                   | | ID      | A       | Prede   |   |
	|                                   | |         | ctivity | cessors |   |
	|                                   | |         | Name    |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 1       | Start   |         |   |
	|                                   | |         | of the  |         |   |
	|                                   | |         | project |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2       | Relati  |         |   |
	|                                   | |         | onships |         |   |
	|                                   | |         | and     |         |   |
	|                                   | |         | data    |         |   |
	|                                   | |         | flows   |         |   |
	|                                   | |         | between |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1     | Agree   |         |   |
	|                                   | |         | list of |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1.1   | W       | 1       |   |
	|                                   | |         | orkshop |         |   |
	|                                   | |         | with    |         |   |
	|                                   | |         | archi   |         |   |
	|                                   | |         | tecture |         |   |
	|                                   | |         | team to |         |   |
	|                                   | |         | get     |         |   |
	|                                   | |         | initial |         |   |
	|                                   | |         | list    |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1.2   | Summary | 2.1.1   |   |
	|                                   | |         | of the  |         |   |
	|                                   | |         | w       |         |   |
	|                                   | |         | orkshop |         |   |
	|                                   | |         | with    |         |   |
	|                                   | |         | archi   |         |   |
	|                                   | |         | tecture |         |   |
	|                                   | |         | team    |         |   |
	|                                   | |         | (       |         |   |
	|                                   | |         | initial |         |   |
	|                                   | |         | appl    |         |   |
	|                                   | |         | ication |         |   |
	|                                   | |         | list)   |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1.3   | W       | 2.1.2   |   |
	|                                   | |         | orkshop |         |   |
	|                                   | |         | with    |         |   |
	|                                   | |         | stake   |         |   |
	|                                   | |         | holders |         |   |
	|                                   | |         | to      |         |   |
	|                                   | |         | discuss |         |   |
	|                                   | |         | list of |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1.4   | Prepare | 2.1.3   |   |
	|                                   | |         | final   |         |   |
	|                                   | |         | list of |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.1.5   | Secure  | 2.1.4   |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | pproval |         |   |
	|                                   | |         | of list |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2     | A       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | relati  |         |   |
	|                                   | |         | onships |         |   |
	|                                   | |         | between |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2.1   | Overall | 2.1.5   |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | relati  |         |   |
	|                                   | |         | onships |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2.2   | D       |         |   |
	|                                   | |         | etailed |         |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2.2.1 | 1st     | 2.2.1   |   |
	|                                   | |         | package |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2.2.2 | 2nd     | 2.2.1   |   |
	|                                   | |         | package |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.2.2.3 | 3rd     | 2.2.1   |   |
	|                                   | |         | package |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3     | A       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of data |         |   |
	|                                   | |         | flow    |         |   |
	|                                   | |         | between |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3.1   | Overall | 2.2.1   |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of data |         |   |
	|                                   | |         | flow    |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3.2   | D       |         |   |
	|                                   | |         | etailed |         |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3.2.1 | 1st     | 2.3.1;  |   |
	|                                   | |         | package | 2.2.2.1 |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3.2.2 | 2nd     | 2.3.1;  |   |
	|                                   | |         | package | 2.2.2.2 |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.3.2.3 | 3rd     | 2.3.1;  |   |
	|                                   | |         | package | 2.2.2.3 |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | appli   |         |   |
	|                                   | |         | cations |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.4     | Prepare | 2       |   |
	|                                   | |         | final   | .2[FF]; |   |
	|                                   | |         | report  | 2.3[FF] |   |
	|                                   | |         | from    |         |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | +---------+---------+---------+   |
	|                                   | | 2.5     | A       | 2.4     |   |
	|                                   | |         | pproval |         |   |
	|                                   | |         | of      |         |   |
	|                                   | |         | a       |         |   |
	|                                   | |         | nalysis |         |   |
	|                                   | |         | results |         |   |
	|                                   | +---------+---------+---------+   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	3. Estimate Activity Resources and Duration
	
	Each identified activity should be estimated in the context of needed
	resources (e.g., human resources, equipment) and duration (time needed
	to complete the individual activity with estimated resources).
	
	Refer to PMBOK to gain further information about the following commonly
	used duration estimation techniques:[30]
	
	-   Expert judgment
	-   Analogous estimating
	-   Parametric estimating
	-   Three-point estimating
	-   Group decision-making techniques
	-   Reserve analysis
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | estimated the necessary resources |
	|                                   | and duration of each activity. He |
	|                                   | also used a common method to make |
	|                                   | the milestones stand out – they   |
	|                                   | are marked as 0 days duration.    |
	|                                   |                                   |
	|                                   | [TABLE]                           |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	4. Develop Schedule
	
	This activity is the process of analyzing activity sequences, durations,
	resource requirements, and schedule constraints to create the project
	schedule model.[31] For this task it is recommended to use one of the
	available scheduling tools that enable a schedule to be built easily.
	
	Please refer to the Critical Path Method (CPM) which is a commonly used
	technique supporting the process of scheduling tasks.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | developed a schedule using a      |
	|                                   | scheduling tool. He agreed with   |
	|                                   | the Project Sponsors that it      |
	|                                   | would start at 2022-01-04. He set |
	|                                   | the start date for start of the   |
	|                                   | project activity and set the      |
	|                                   | scheduling tool property to       |
	|                                   | automatically schedule all tasks  |
	|                                   | based on needed resources and     |
	|                                   | duration of all activities. The   |
	|                                   | results of developing the         |
	|                                   | schedule is presented below:      |
	|                                   |                                   |
	|                                   | [TABLE]                           |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.2.8_Consolidate_the_Statement_of_Architecture_Work_and_Secure_Approval "3.2.8 Consolidate the Statement of Architecture Work and Secure Approval"
	
	The schedule resulting from the above activities, together with elements
	developed in the steps of the ADM Phase A, should be included in the
	Statement of Architecture Work. To complete ADM Phase A, the Project
	Manager obtains the sponsor’s approval of the Statement. For details
	refer to the TOGAF^(®) Standard – Architecture Development Method: Phase
	A: Architecture Vision (Develop Statement of Architecture Work; Secure
	Approval) and the TOGAF^(®) Standard – Architecture Content:
	Architecture Deliverables (Statement of Architecture Work).
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.2_Approach_to_Stakeholder_Management "3.2 Approach to Stakeholder Management"
	
	Stakeholder analysis should be used during Phase A (Architecture Vision)
	to identify the key players in the engagement, and also be updated
	throughout each phase; different stakeholders may be uncovered as the
	engagement progresses through into Opportunities & Solutions, Migration
	Planning, and Architecture Change Management.
	
	Complex architectures are extremely hard to manage, not only in terms of
	the architecture development process itself, but also in terms of
	obtaining agreement from the large numbers of stakeholders touched by
	it.
	
	For example, just as a building architect will create wiring diagrams,
	floor plans, and elevations to describe different facets of a building
	to its different stakeholders (electricians, owners, planning
	officials), so an Enterprise Architect must create different
	architecture views of the Business, Information Systems, and Technology
	Architecture for the stakeholders who have concerns related to these
	aspects.
	
	The TOGAF Standard specifically identifies this issue throughout the ADM
	through the following concepts (see the TOGAF Standard — Architecture
	Content):
	
	-   Architecture View
	-   Architecture Viewpoint
	-   Concern
	-   Stakeholder
	
snippet togaf_ea-capability-and-governance_INDEX_3.2_Architecture_Governance_Framework "    -   3.2 Architecture Governance Framework"
	        -   3.2.1 Architecture Governance Framework — Conceptual
	            Structure
	            -   3.2.1.1 Key Concepts
	            -   3.2.1.2 Key Architecture Governance Processes
	            -   Policy Management and Take-On
	            -   Compliance
	            -   Dispensation (also known as Waiver)
	            -   Monitoring and Reporting
	            -   Business Control
	            -   Environment Management
	        -   3.2.2 Architecture Governance Framework — Organizational
	            Structure
	            -   3.2.2.1 Overview
	            -   3.2.2.2 Key Areas
	            -   3.2.2.3 Operational Benefits
	    -   3.3 Architecture Governance in Practice
	        -   3.3.1 Architecture Governance — Key Success Factors
	        -   3.3.2 Elements of an Effective Architecture Governance
	            Strategy
	            -   3.3.2.1 Architecture Governance and Corporate Politics
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.2_Architecture_Governance_Framework "3.2 Architecture Governance Framework"
	
	This section describes a conceptual and organizational framework for
	Architecture Governance
	
	As previously explained, Phase G of the TOGAF ADM (see the TOGAF
	Standard — Architecture Development Method) is dedicated to
	implementation governance, which concerns itself with the realization of
	the architecture through change projects.
	
	Implementation governance is just one aspect of Architecture Governance,
	which covers the management and control of all aspects of the
	development and evolution of Enterprise Architectures and other
	architectures within the enterprise.
	
	Architecture Governance needs to be supported by an Architecture
	Governance Framework, described below. The governance framework
	described is a generic framework that can be adapted to the existing
	governance environment of an enterprise. It is intended to assist in
	identifying effective processes and organizational structures, so that
	the business responsibilities associated with Architecture Governance
	can be elucidated, communicated, and managed effectively.
	
snippet togaf_applying-the-adm_3_Applying_the_ADM_Across_the_Architecture_Landscape_3.2_Architecture_Landscape "3.2 Architecture Landscape"
	
	Levels provide a framework for dividing the Architecture Landscape into
	three levels of granularity:
	
	1.  Strategic Architecture provides an organizing framework for
	    operational and change activity and allows for direction setting at
	    an executive level.
	2.  Segment Architecture provides an organizing framework for
	    operational and change activity and allows for direction setting and
	    the development of effective architecture roadmaps at a program or
	    portfolio level.
	3.  Capability Architecture provides an organizing framework for change
	    activity and the development of effective architecture roadmaps
	    realizing capability increments.
	
	Figure 3-1 shows a summary of the classification model for Architecture
	Landscapes.
	
	[]
	
	Figure 3-1: Summary Classification Model for Architecture Landscapes
	
	The Architecture Continuum provides a method of dividing each level of
	the Architecture Landscape (see the TOGAF Standard — Architecture
	Content) by abstraction. It offers a consistent way to define and
	understand the generic rules, representations, and relationships in an
	architecture, including traceability and derivation relationships. The
	Architecture Continuum shows the relationships from foundation elements
	to organization-specific architecture, as shown in Figure 3-2 .
	
	The Architecture Continuum is a useful tool to discover commonality and
	eliminate unnecessary redundancy.
	
	[]
	
	Figure 3-2: Summary of Architecture Continuum
	
	Levels and the Architecture Continuum provide a comprehensive mechanism
	to describe and classify the Architecture Landscape. These concepts can
	be used to organize the Architecture Landscape into a set of related
	architectures with:
	
	-   Manageable complexity for each individual architecture or solution
	-   Defined groupings
	-   Defined hierarchies and navigation structures
	-   Appropriate processes, roles, and responsibilities attached to each
	    grouping
	
	There is no definitive organizing model for architecture, as each
	enterprise should adopt a model that reflects its own operating model.
	
snippet togaf_architecture-project-management_3.2_Architecture_Project_Planning "3.2 Architecture Project Planning"
	
	Project planning is about defining and splitting the project’s scope
	into manageable tasks with a defined schedule and quality criteria.
	Arguably, it is the most important task of the Project Manager at the
	project start. According to PRINCE2, a plan is necessary to control
	anything – and we agree with regard to Architecture Projects.
	
	TOGAF ADM Phase A ends with development and approval of the Statement of
	Architecture Work, which includes a “project plan and schedule”. It does
	not go into detail and omits a planning techniques description. In this
	Guide, we recommend a sequence of activities that allows creation of a
	schedule and includes it in the Statement of Architecture Work.
	
	We recommend the following sequence of activities to develop the
	Architecture Project schedule and Statement of Architecture Work:
	
	-   Define the Architecture Project Scope
	-   Define the Final Product of the Architecture Project and its
	    Acceptance Criteria
	-   Define the Project Deliverables
	-   Define the Project Exclusions, Constraints, and Assumptions
	-   Detail the Architecture Project Scope
	-   Create the Work Breakdown Structure
	-   Develop the Architecture Project Plan and Schedule (sequence
	    activities, estimate activity resources and durations, develop
	    schedule)
	-   Consolidate the Statement of Architecture Work and Secure Approval
	
	These activities are described in the following subsections.
	
	In the TOGAF Standard, there are quite a few essential (non-management)
	work products delivered throughout Phase A. These work products can have
	a great impact on the Architecture Project Scope and should be completed
	before working on the Work Breakdown Structure and Project Plan. They
	include:
	
	-   Evaluate Capabilities and Assess Readiness for Business
	    Transformation – project planning should be based on this
	    preliminary assessment of change complexity and readiness for change
	-   Confirm and Elaborate Architecture Principles, including Business
	    Principles – project planning should take into account Architecture
	    Principles
	-   Develop Architecture Vision – project planning should be based on
	    baseline and target architectures outlined in the Architecture
	    Vision
	-   Define the Target Architecture Value Propositions and KPIs and
	    Identify the Business Transformation Risks and Mitigation Activities
	    – while not directly related to Project Scope, some of the value
	    propositions and business transformation risk mitigation activities
	    may impact the Project Scope and should be taken into account in
	    project planning
	
	The above work products can have a great impact on the Architecture
	Project Scope and should be completed before working on the Work
	Breakdown Structure and Project Plan. These work products are wide in
	scope, but they are usually produced at a very high level, to allow just
	enough information to plan further work and get to a more detailed
	level.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.2_Developing_Architecture_Views_in_the_ADM "3.2 Developing Architecture Views in the ADM"
	
snippet togaf_reference-models_digital-business-reference-model_3.2_Digital_Domain "3.2 Digital Domain"
	
	The Digital Domain is essential to enable an outside-in approach for the
	creation and management of Digital Products and Services with an
	increasing digital component or to lead the organization through the
	digital journey towards a digital business.
	
	The Customer Focus and Digital Enterprise elements are important for the
	organizations to adopt an outside-in mindset to ensure that all the
	other core elements of the DBRM are geared towards the implementation of
	appropriate digital capabilities. The digital practices are an essential
	element of ensuring that the journey towards digitalization becomes an
	effective process that creates sustainable value for the organization.
	
snippet togaf_guides_agile-sprints_3.2_Enterprise_Architecture_Solutions_Products_and_CI_CD "3.2 Enterprise Architecture, Solutions, Products, and CI/CD"
	
	The focus of this document is mainly on using sprints. The words
	solution and product may have slightly different definitions depending
	on the Agile method used. In this document the following meanings of
	those terms are assumed:
	
	-   Solution development teams deliver solutions, which may be any
	    solution (IT, technology, business, etc.); the solution does not
	    necessarily have to be offered to customers
	-   A product is a bundle of services and/or goods offered to customers
	
	The frequency of delivering solutions or products to the customers is
	also beyond the scope of this document. It is possible that an
	enterprise has CI/CD in place and new solutions or product features (as
	a consequence of requirements fulfillment) are delivered many times
	during one sprint. Using sprints is also feasible in enterprises where
	new solutions or products are delivered once after several sprints. The
	only thing that is assumed is that after every sprint there is a
	demonstrable solution (or part of the solution) of some value to the
	business. Hence sprints may be used regardless of having CI/CD in place.
	
	The result of an Enterprise Architecture partition can be delivered as
	one or more solutions.
	
snippet togaf_guides_microservices-architecture_3.2_Implications_for_Business_Architecture "3.2 Implications for Business Architecture"
	
	Business Architecture has a pivotal role in the distributed world. In
	addition to ensuring directional alignment with enterprise strategy, it
	takes on greater responsibility in areas of process and people. Culture
	change and redesign of the Business Architecture are often major
	challenges for enterprise transformation. For example, traditional
	Business Architecture domains are often mapped to value streams that
	collapse and expand the existing Business Architecture design, and this
	has implications on organizational design and resources.
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3.2_Information_Security_Management "3.2 Information Security Management"
	
	Information Security Management (ISM) is a process that defines the
	security objectives, assigns ownership of information security risks,
	and supports the implementation of security measures. The security
	management process includes risk assessment, the definition and proper
	implementation of security measures, reporting about security status
	(measures defined, in place, and working), and the handling of security
	incidents.
	
snippet togaf_adm_3_A_Architecture_Vision_3.2_Inputs "3.2 Inputs"
	
	This section defines the inputs to Phase A.
	
snippet togaf_reference-models_government-reference-model_3.2_Key_Drivers_for_Change "3.2 Key Drivers for Change"
	
	Technology and transformation are common themes throughout the defense
	sector. These have been driven by major forces such as rogue states,
	cyber attacks, terrorism, and competition between nations for
	technological superiority. To mitigate skills shortages and broaden the
	talent pool, there is an obligation for defense organizations to
	establish active monitoring, retention, recruitment, and training
	practices.
	
	A summarized description of the trends is provided below.
	
	Infrastructure Optimization
	
	It is necessary for armed forces to develop military infrastructure that
	offsets scrutiny of spending, is environmentally sustainable, and fit
	for the evolving nature of conflict to achieve strategic objectives.
	Aging equipment and maintenance thereof is a major challenge.
	Opportunities to modernize infrastructure can be achieved by:
	
	-   Making defense infrastructure more environmentally sustainable by
	    developing a vision that reflects the needs of tomorrow’s forces
	-   Leveraging finance from the private sector to build and maintain
	    defense infrastructure
	-   Identifying the potential for automation of infrastructure
	    management to free up personnel for mission-critical tasks
	
	Workforce Transformation
	
	Defense establishments are facing tough competition from the private
	sector in recruiting and retaining specialist personnel to operate
	increasingly sophisticated equipment. This has led to skill shortages in
	niche areas of engineering, cyber, and nuclear, hindering their ability
	to respond to technological advances. Broadening the pool of talent by
	encouraging greater diversity (in both leadership and combat roles) and
	increasing cyber recruitment will help meet evolving military needs.
	
	Technology
	
	Technological change has been the driving force that defines future
	defense challenges, creating new opportunities and efficiency that
	enable countries to gain technological dominance over other nations.
	Cybersecurity, Big Data, Artificial Intelligence (AI), robotics, and
	autonomous vehicles are already causing drastic shifts in global
	security. These will be supplemented by directed energy weapons,
	hypersonic platforms, and reusable swarm technologies over the coming
	years. New technologies will make logistics more complex and challenge
	the way defense leaders manage their organizations.
	
	Contemporary Operating Environment
	
	The nature of competition in the international arena has changed and old
	paradigms have become obsolete, making traditional dichotomies such as
	opponents/allies or training/operations more nuanced and mutable.
	Defense establishments must also be able to train and operate against
	so-called “sub-threshold conflict” where actions of an adversary fall
	short of the traditional criteria for military action, and in a context
	where competitors may also be allies in a geographic, temporal, or
	domain context. This dynamic and multi-domain environment requires
	defense establishments to be more agile and responsive to change, and
	seek new routes to exploit opportunities and advantages in order to
	maintain a competitive edge.
	
snippet togaf_metadata-management_3.2_Metadata_Management_High-Level_Business_Functions "3.2 Metadata Management High-Level Business Functions"
	
	+-----------------------------------+-----------------------------------+
	| Business Function                 | Description                       |
	+===================================+===================================+
	| Strategy & Roadmaps Definition    | Document the vision and how it    |
	|                                   | contributes to the organization’s |
	|                                   | objectives. Formalize this vision |
	|                                   | through a well-defined Metadata   |
	|                                   | Management strategy and roadmap.  |
	+-----------------------------------+-----------------------------------+
	| Governance & Measurement          | Govern the implementation and     |
	|                                   | execution of the Metadata         |
	|                                   | Management capability:            |
	|                                   |                                   |
	|                                   | -   Define data domain            |
	|                                   | -   Define governance             |
	|                                   |     committee(s) (frequency,      |
	|                                   |     scope, participants) to       |
	|                                   |     enforce metadata strategy     |
	|                                   | -   Identify and onboard key      |
	|                                   |     actors                        |
	|                                   | -   Measure the quality of the    |
	|                                   |     metadata documentation        |
	+-----------------------------------+-----------------------------------+
	| Business Glossary Documentation   | Capture relevant business         |
	|                                   | concepts and classify them to     |
	|                                   | serve data risk management        |
	|                                   | (privacy, security, other         |
	|                                   | regulatory requirements).         |
	+-----------------------------------+-----------------------------------+
	| Data Dictionary Documentation     | Capture physical representation   |
	|                                   | of the data across the            |
	|                                   | information system landscape to   |
	|                                   | increase knowledge about the data |
	|                                   | (lineage, usage, lifecycle,       |
	|                                   | etc.). It is advantageous to      |
	|                                   | combine the Business Glossary and |
	|                                   | the Data Dictionary to facilitate |
	|                                   | collaboration and precision in    |
	|                                   | the elaboration of business       |
	|                                   | rules.                            |
	+-----------------------------------+-----------------------------------+
	| Data Usage Documentation          | Keep an inventory of how the data |
	|                                   | is used to meet regulatory        |
	|                                   | requirements.                     |
	+-----------------------------------+-----------------------------------+
	| Rule & Policy Documentation       | Document the rules (data quality  |
	|                                   | rules, data deletion rules, data  |
	|                                   | archiving and retention rules,    |
	|                                   | data transformations rules, etc.) |
	|                                   | and policies that should be       |
	|                                   | enforced by the data governance.  |
	+-----------------------------------+-----------------------------------+
	| Data Issue Documentation          | Document any relevant business    |
	|                                   | data issues (data quality, master |
	|                                   | data, reference data, etc.).      |
	+-----------------------------------+-----------------------------------+
	| Business Assets and Technical     | Provide business context to the   |
	| Assets Association                | technical metadata. Metadata      |
	|                                   | association provides a first      |
	|                                   | level of understanding of the     |
	|                                   | data lifecycle from its origin as |
	|                                   | well as the movements and         |
	|                                   | transformations it has been       |
	|                                   | through in the information        |
	|                                   | systems.                          |
	+-----------------------------------+-----------------------------------+
	| Metadata Repository Design        | Translate the business            |
	|                                   | requirements into metadata        |
	|                                   | requirements by defining:         |
	|                                   |                                   |
	|                                   | -   The set of metadata that is   |
	|                                   |     relevant to be captured and   |
	|                                   |     stored within the metadata    |
	|                                   |     repository                    |
	|                                   | -   The relationships and         |
	|                                   |     constraints that should be    |
	|                                   |     implemented between the       |
	|                                   |     metadata objects              |
	|                                   | -   The processes and workflows   |
	|                                   |     to create and maintain the    |
	|                                   |     metadata within the           |
	|                                   |     repository                    |
	+-----------------------------------+-----------------------------------+
	| Communication & Training          | Communicate around the metadata   |
	|                                   | repository value; organize        |
	|                                   | training plan for end users       |
	|                                   | (business and technical).         |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-maturity-models_3.2_SCAMPI_Method "3.2 SCAMPI^(®) Method"
	
	The Standard CMMI Appraisal Method for Process Improvement (SCAMPI) is
	the appraisal method associated with CMMI. The SCAMPI appraisal method
	is used to identify strengths, weaknesses, and ratings relative to CMMI
	reference models. It incorporates best practices found successful in the
	appraisal community, and is based on the features of several legacy
	appraisal methods. It is applicable to a wide range of appraisal usage
	modes, including both internal process improvement and external
	capability determinations.
	
	The SCAMPI method definition document[2] describes the requirements,
	activities, and practices associated with each of the processes that
	compose the SCAMPI method.
	
	For additional information on this method, refer to:
	https://resources.sei.cmu.edu/library/asset-view.cfm?assetID=9703.
	
snippet togaf_architecture-skills-framework_3.2_Specific_Benefits "3.2 Specific Benefits"
	
	Specific benefits anticipated from use of the TOGAF Architecture Skills
	Framework include:
	
	-   Reduced time, cost, and risk in training, hiring, and managing
	    architecture professionals, both internal and external:
	
	—  Simplifies communication between recruiting organizations,
	consultancies, and employment agencies
	
	—  Avoids wasting time interviewing staff who may have applied in all
	good faith, but still lack the skills and/or experience required by the
	employer
	
	—  Avoids staff who are capable of filling architecture roles being
	overlooked, or not identifying themselves with advertised positions and
	hence not even applying
	
	—  Provides a clear documented set of skills for internal development of
	architects
	
	—  Allows employees to self-assess against a set of required skills to
	prepare training and career plans
	
	—  Allows managers/supervisors to assess levels of talent and where
	investments in training should be made based on common skill gaps
	
	—  Creates a stable base of future architects and allows determination
	of those close to being ready to enable application of limited mentoring
	resources
	
	—  Provides a career path for aspiring architects improves employee
	retention
	
	-   Reduced time and cost to set up an Enterprise Architecture Practice:
	
	—  Adversely impacts the time, cost, and quality of Enterprise
	Architecture and hence to business and operational IT systems
	
	—  Many enterprises do not have an Enterprise Architecture Practice due
	to the complexity involved in setting one up, preferring instead to
	simply interview and recruit architecture staff on an ad hoc basis
	
	—  By providing definitions of the architecting skills and proficiency
	levels required of personnel who are to perform the various architecting
	roles defined within the TOGAF Standard, the Architecture Skills
	Framework greatly reduces the time, cost, and risk of setting up a
	practice for the first time, and avoids "re-inventing wheels"
	
	—  Enterprises that already have an Enterprise Architecture Practice are
	able to set enterprise-wide norms and find it easier to recruit staff,
	or engage consultants, from external sources when there exists an
	industry-accepted TOGAF Architecture Skills Framework
	
	-   Reduced time and cost to implement an Enterprise Architecture
	    Practice helps reduce the time, cost, and risk of overall solution
	    development:
	
	—  Even enterprises that do not have an Enterprise Architecture Practice
	are able to hire suitable personnel with satisfactory skills
	
	The associated costs of having an Enterprise Architecture Practice are
	less than the resultant time and cost penalties if the practice is
	absent:
	
	—     Personnel costs are decreased because there is less need to hire
	new staff or to perform staff reassignments
	
	—     More important is that good staff assignments impact time, cost,
	and quality of operational IT systems and the projects to deliver them
	in a positive way
	
snippet togaf_business-architecture_business-scenarios_3.2_Steps "3.2 Steps"
	
	Since the steps are repeated in each phase they are described first.
	Within the phase descriptions any specific emphasis about the steps will
	be described if necessary.
	
snippet togaf_business-architecture_business-capabilities_3.2_Structuring_the_Business_Capability_Map "3.2 Structuring the Business Capability Map"
	
	There are two concepts for turning the set of business capabilities into
	a logical structure that communicates the right amount of detail to
	different stakeholder groups. Creating these structures will allow them
	to focus on those capabilities that are most important or relevant to
	their sphere of influence: stratification and leveling.
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.2_What_is_an_Enterprise "3.2 What is an Enterprise?"
	
	The TOGAF framework defines “enterprise” in the context of formal
	modeling. This Guide applies a different definition focused on defining
	the boundary of interest and activity. For the purpose of this Guide, an
	enterprise is the highest level of description of an organization used
	to identify the boundary encompassed by the EA and EA Capability.
	
	This definition is deliberately flexible and not associated with an
	organization’s legal or functional boundaries. It covers monolithic
	organizations and extended organizations that include separate
	organizations connected by a mission or supply chain, as well as
	operating entities within an organization. Examples include the
	outsourced partners that provide manufacturing, logistics, and other
	support to an organization; a multi-national peacekeeping force; and a
	multi-billion dollar division of a Fortune 50 firm. All are enterprises.
	
	A given EA will align with the defined boundary of an enterprise.
	Whether that boundary is an exact match for an organization, a subset,
	or superset is not material. It is assumed that the EA Capability will
	align with the boundary of the enterprise and be able to deliver the EA.
	
	An enterprise exists within a context; it has an interaction with what
	happens outside the enterprise. The context is different for public,
	governmental, or defense enterprises and private or commercial
	enterprises. Political, economic, social, technological, environment,
	and legal forces provide a context for the enterprise.
	
	[]
	
	Figure 1: Context for Commercial Enterprise[4][5]
	
	Public agencies, government, and defense organizations all benefit from
	EA. This Guide does not comprehensively address all nuances or outlier
	aspects for government, defense, or not-for-profit enterprises, mainly
	not to distract the reader with alternate methods or special focus. This
	Guide assumes that the reader is associated with a profit-making,
	publicly traded, public defense, or social sector enterprise. The reader
	will have to make a few adjustments to context and motivation if
	otherwise. This Guide may in the future be updated to focus on the
	special needs of public organizations.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.2_What_is_an_Enterprise_Architecture "3.2 What is an Enterprise Architecture?"
	
	In short, EA provides the most effective path to realizing an
	Enterprise’s strategy.[6] A good EA uses a holistic approach to
	translate strategy into a well-defined execution path, using appropriate
	analysis, planning, design, and implementation methods.
	
	The purpose of EA is to enable the Enterprise to most effectively
	achieve the mission, business strategy, and goals through cycles of
	planning, design, deployment, and delivery of change. An architected
	approach provides a rigorous planning methodology that validates the
	business objectives, ensuring that they are feasible, deliver the
	desired business value, and their achievement is cost-effective.
	
	Achieving this purpose comes from understanding the Enterprise, the
	context, the scope of change, and the value that will be realized. Using
	EA facilitates understanding. The Enterprise is described in consistent
	terms, highlighting fundamental parts and how they interact. Consistent
	terms enable like-with-like comparison. Potential changes to the
	fundamental parts are explored regarding the desired end-state and
	preferences. This understanding and analysis enable trade-off between
	competing preferences and potential changes that carry different costs
	and different benefits.
	
	In short, a good EA enables stakeholders to knowingly strike the right
	balance between any competing set of preferences. It allows individual
	business units to innovate safely in their pursuit of business value
	delivery. At the same time, it ensures the needs of the organization for
	an integrated strategy are met, permitting the closest possible synergy
	across the extended Enterprise.
	
snippet togaf_introduction_3_Core_Concepts_3.2_What_is_Architecture_in_the_Context_of_the_TOGAF_Standard "3.2 What is Architecture in the Context of the TOGAF Standard?"
	
	ISO/IEC/IEEE 42010:2011 defines "architecture" as:
	
	  "The fundamental concepts or properties of a system in its environment
	  embodied in its elements, relationships, and in the principles of its
	  design and evolution."
	
	The TOGAF Standard embraces but does not strictly adhere to ISO/IEC/IEEE
	42010:2011 terminology. In addition to the ISO/IEC/IEEE 42010:2011
	definition of "architecture", the TOGAF Standard defines a second
	meaning depending upon the context:
	
	  "The structure of components, their inter-relationships, and the
	  principles and guidelines governing their design and evolution over
	  time."
	
	The TOGAF Standard considers the enterprise as a system and endeavors to
	strike a balance between promoting the concepts and terminology drawn
	from relevant standards, and commonly accepted terminology that is
	familiar to the majority of the TOGAF readership. For more on
	terminology, refer to 4. Definitions and the TOGAF Standard —
	Architecture Content.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3.1.1_Sample_Stakeholder_Analysis "3.3.1.1 Sample Stakeholder Analysis"
	
	A sample stakeholder analysis that distinguishes 22 types of
	stakeholder, in five broad categories, is shown in Figure 3-1 . Any
	particular architecture project may have more, fewer, or different
	stakeholders; and they may be grouped into more, fewer, or different
	categories.
	
	[]
	
	Figure 3-1: Sample Stakeholders and Categories
	
	Consider both the Visible team — those obviously associated with the
	project/change — and the Invisible team — those who must make a real
	contribution to the project/change for it to be successful but who are
	not obviously associated with it (e.g., providers of support services).
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.10_Identify_the_Business_Transformation_Risks_and_Mitigation_Activities "3.3.10 Identify the Business Transformation Risks and Mitigation Activities"
	
	Identify the risks associated with the Architecture Vision and assess
	the initial level of risk (e.g., catastrophic, critical, marginal, or
	negligible) and the potential frequency associated with it. Assign a
	mitigation strategy for each risk. A risk management framework is
	described in the TOGAF Standard — ADM Techniques.
	
	There are two levels of risk that should be considered, namely:
	
	-   Initial Level of Risk: risk categorization prior to determining and
	    implementing mitigating actions
	-   Residual Level of Risk: risk categorization after implementation of
	    mitigating actions (if any)
	
	Risk mitigation activities should be considered for inclusion within the
	Statement of Architecture Work.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.11_Develop_Statement_of_Architecture_Work_Secure_Approval "3.3.11 Develop Statement of Architecture Work; Secure Approval"
	
	Assess the work products that are required to be produced (and by when)
	against the set of business performance requirements. This will involve
	ensuring that:
	
	-   Performance metrics are built into the work products
	-   Specific performance-related work products are available
	
	Then, activities will include:
	
	-   Identify new work products that will need to be changed
	-   Provide direction on which existing work products, including
	    building blocks, will need to be changed and ensure that all
	    activities and dependencies on these are co-ordinated
	-   Identify the impact of change on other work products and dependence
	    on their activities
	-   Based on the purpose, focus, scope, and constraints, determine which
	    architecture domains should be developed, to what level of detail,
	    and which architecture views should be built
	-   Assess the resource requirements and availability to perform the
	    work in the timescale required; this will include adhering to the
	    organization's planning methods and work products to produce the
	    plans for performing a cycle of the ADM
	-   Estimate the resources needed, develop a roadmap and schedule for
	    the proposed development, and document all these in the Statement of
	    Architecture Work
	-   Define the performance metrics to be met during this cycle of the
	    ADM by the Enterprise Architecture team
	-   Develop the specific Enterprise Architecture Communications Plan and
	    show where, how, and when the Enterprise Architects will communicate
	    with the stakeholders, including affinity groupings and communities,
	    about the progress of the Enterprise Architecture developments
	-   Review and agree the plans with the sponsors, and secure formal
	    approval of the Statement of Architecture Work under the appropriate
	    governance procedures
	-   Gain sponsor's sign-off to proceed
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.3.1_Architecture_Governance_Key_Success_Factors "3.3.1 Architecture Governance — Key Success Factors"
	
	It is important to consider the following to ensure a successful
	approach to Architecture Governance, and to the effective management of
	the Architecture Contract:
	
	-   Best practices for the submission, adoption, re-use, reporting, and
	    retirement of architecture policies, procedures, roles, skills,
	    organizational structures, and support services
	-   Organizational responsibilities and structures to support the
	    Architecture Governance processes and reporting requirements
	-   Integration of tools and processes to facilitate the take-up of the
	    processes, both procedurally and culturally
	-   Criteria for the control of the Architecture Governance processes,
	    dispensations, compliance assessments, SLAs, and OLAs
	-   Internal and external requirements for the effectiveness,
	    efficiency, confidentiality, integrity, availability, compliance,
	    and reliability of all Architecture Governance-related information,
	    services, and processes
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.3.1_Communicating_with_Stakeholders_Concern_and_View "3.3.1 Communicating with Stakeholders (Concern and View)"
	
	This Guide provides practical advice to a Practitioner on using the
	TOGAF framework. Stakeholders’ concerns and views are one area where the
	theoretical constructs embedded in the TOGAF Standard are correct, but
	not directly translatable to use. The TOGAF Standard takes a formal
	modeling approach to understanding stakeholder, concern, and view; this
	has led some to interpret that all representations of architecture are
	views prepared for any conceivable interest. That interpretation is
	correct, just not helpful,[13] considering usefulness and TTM. This
	Guide will emphasize the point “do just enough to support key decisions
	at this moment”. Getting more data and providing more detail may sound
	appealing. The only thing an architect does not have is time. Do the
	right things to the best level of detail to market the architecture, and
	make people use the architecture. If there is time, pursue creating the
	rest of the views and elaboration if and when necessary.
	
	Further, stakeholders, views, and concerns are often explained in terms
	of a single architecture. Consider what an EA Landscape will actually
	contain: Multiple discrete architectures. Separated by purpose, detail,
	breadth, time, and recency. And then there is architecture states:
	current, transition(s), and target. An architect’s first obligation is
	ensuring the architecture addresses the preferences of the Enterprise.
	When the Practitioner preserves the stakeholder’s concern, the view to
	communicate with the stakeholder, and how the architecture will address
	their concern, something useful to govern against in addressing this
	obligation naturally emerges.
	
	From a practical perspective, consider:
	
	-   Stakeholder: someone who has approval rights in the Target
	    Architecture being explored by the current Architecture Project, and
	    subsequently has decision rights to the suitability of the
	    implementation
	-   Concern: a consistent set of subjects that capture the stakeholder’s
	    interests and act to consolidate requirements
	-   View: a representation of the EA Landscape that addresses a set of
	    stakeholder’s concerns; either describe how the architecture
	    addresses the concerns or demonstrate how the associated
	    requirements are met
	
	The TOGAF concept of an Architecture Project provides context for both
	the development of new architecture and the change to realize it. By
	practically constraining the use of stakeholders to those with approval
	rights Practitioners enable governance, and more importantly governance
	in context.
	
	This Guide constrains the concerns to a topic and addresses the
	stakeholder’s power, interest, and requirements against this topic. This
	approach surfaces topic-based decision rights and provides the ability
	to perform a trade-off between competing requirements. The chapters
	discussing a walk through the ADM for different purposes will expand on
	the use of concerns. Pragmatically, most requirements will cluster in
	six to nine topic areas that are derived from the Enterprise’s strategy.
	In fact, most concerns are consistent from one Architecture Project to
	another – they cluster around the central challenges the Enterprise is
	trying to address, such as agility, efficiency, IT complexity, or
	customer journey.
	
	A consistent set of core concerns aligned to Enterprise priority
	facilitates focus on priority. Every Architecture Project brings to the
	fore Enterprise priorities and is in a position to demonstrate how this
	initiative is addressing the priority. Further, Practitioners are in a
	position to confirm consistency of requirement within a concern, and by
	stakeholder. Confirming consistency, or the lack, enhances the
	Practitioner’s ability to discern the set of preferences the Enterprise
	is chasing.
	
	Table 2 provides an extended TOGAF Stakeholder Map including concern and
	requirement. Missing requirements within a concern can either be a gap
	in information gathering or a demonstration the stakeholder is saying
	“this does not matter”. Knowing requirement or lack of preference in
	relationship to power and interest directly facilitates trade-off. The
	trade-off is performed within a concern and between the concerns.
	
	Table 2: Sample Stakeholder Map
	
	                  Concern 1                            Concern 2              
	  --------------- ----------- ---------- ------------- ----------- ---------- -------------
	                  Power       Interest   Requirement   Power       Interest   Requirement
	  Stakeholder 1   High        Low                      Low         High       
	  Stakeholder 2   High        High                     Low         Low        
	  Stakeholder N   Low         High                     High        Low        
	
	Views address a stakeholder’s concern about a specific architecture. In
	a perfect world Practitioners are able to use a single model directly.
	This is a mythical happy place. It will never be possible for a key
	issue such as agility or cost.
	
	A view simply addresses a stakeholder's concern about an architecture.
	Often it is a potential architecture, and the view serves to help the
	stakeholder’s potential target and associated change. This allows a
	stakeholder to put things in context and have confidence about the
	target and the change.
	
	When stakeholders understand the architecture, the change, and the
	trade-offs, implementation governance is possible. Fail, and expect
	continuing issues as point answers highlighting one potential benefit
	without any compensating trade-off emerge throughout the planning and
	execution cycle.
	
	When establishing the EA Capability, it is likely common classes of
	stakeholder were identified. If this was done essential concerns were
	likely identified.[14] These concerns represent the questions that the
	EA Capability is expected to answer, and may be considered mandatory.
	Successful high-functioning EA teams will maintain a library of
	viewpoints (see Appendix C) designed to address the questions they are
	expected to have answers for. Each viewpoint should identify the
	concern, the stakeholder(s), how the view should be constructed, and the
	information required to address the question.
	
	Viewpoints are specialized communication to stakeholders that explicitly
	address a concern. Keep in mind that any associated requirements may not
	be satisfied by the architecture. The view is not a demonstration that
	the stakeholder should be happy; rather it is a demonstration of how the
	architecture addresses the concern.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.1_Establish_the_Architecture_Project "3.3.1 Establish the Architecture Project"
	
	Enterprise Architecture is a business capability; each cycle of the ADM
	should normally be handled as a project using the project management
	framework of the enterprise. In some cases, architecture projects will
	be stand-alone. In other cases, architectural activities will be a
	subset of the activities within a larger project. In either case,
	architecture activity should be planned and managed using accepted
	practices for the enterprise.
	
	Conduct the necessary procedures to secure recognition of the project,
	the endorsement of corporate management, and the support and commitment
	of the necessary line management. Include references to other management
	frameworks in use within the enterprise, explaining how this project
	relates to those frameworks.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3.1_Identify_Stakeholders "3.3.1 Identify Stakeholders"
	
	Identify the key stakeholders of the Enterprise Architecture.
	
	The first task is to work out who the main Enterprise Architecture
	stakeholders are. As part of this, think of all the people who are
	affected by it, who have influence or power over it, or have an interest
	in its successful or unsuccessful conclusion.
	
	It might include senior executives, project organization roles, client
	organization roles, system developers, alliance partners, suppliers, IT
	operations, customers, etc.
	
	When identifying stakeholders there is a danger of concentrating too
	heavily on the formal structure of an organization as the basis for
	identification. Informal stakeholder groups may be just as powerful and
	influential as the formal ones.
	
	Most individuals will belong to more than one stakeholder group, and
	these groups tend to arise as a result of specific events.
	
	Look at who is impacted by the Enterprise Architecture project:
	
	-   Who gains and who loses from this change?
	-   Who controls change management of processes?
	-   Who designs new systems?
	-   Who will make the decisions?
	-   Who procures IT systems and who decides what to buy?
	-   Who controls resources?
	-   Who has specialist skills the project needs?
	-   Who has influence?
	
	In particular, influencers need to be identified. These will be well
	respected and moving up, participate in important meetings and
	committees (look at meeting minutes), know what's going on in the
	company, be valued by their peers and superiors, and not necessarily be
	in any formal position of power.
	
	Although stakeholders may be both organizations and people, ultimately
	the Enterprise Architecture team will need to communicate with people.
	It is the correct individual stakeholders within a stakeholder
	organization that need to be formally identified.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.3.1_Overview "3.3.1 Overview"
	
	In order to achieve the goals of completeness and integrity in an
	architecture, architecture views are usually developed, visualized,
	communicated, and managed using a tool.
	
	In the current state of the market, different tools normally have to be
	used to develop and analyze different views of the architecture. It is
	highly desirable that an Architecture Description be encoded in a
	standard language, to enable a standard approach to the description of
	architecture semantics and their re-use among different tools.
	
	An architecture viewpoint is also normally developed, visualized,
	communicated, and managed using a tool, and it is also highly desirable
	that standard architecture viewpoints (i.e., templates or schemas) be
	developed, so that different tools that deal in the same views can
	interoperate, the fundamental elements of an architecture can be
	re-used, and the Architecture Description can be shared among tools.
	
	Issues relating to the evaluation of tools for architecture work are
	discussed in detail in the TOGAF Standard — Architecture Development
	Method.
	
snippet togaf_business-architecture_business-scenarios_3.3.1_Premise_Formulation_Phase "3.3.1 Premise Formulation Phase"
	
	Every effort starts with some notion of a problem and an approach to
	dealing with a problem. For example, an enterprise might have the
	problem of disparate systems that do not communicate and they may have
	the notion that to address the problem they may implement an Enterprise
	Resource Planning (ERP) system. This proposition is an example of a
	premise. This premise in essence presumes an answer to an unstated
	question – do ERPs actually reduce my problem of all my systems that do
	not interoperate? Sometimes this premise and the unstated question do
	not get examined, which can be a critical mistake. In this phase we
	attempt to develop an understanding of the premise and unstated question
	or questions that need to be examined to ensure an architecture project
	is on point.
	
	Objectives
	
	Document the proposition behind the effort being considered along with
	targeted stakeholders which could elaborate upon, or validate, the
	proposition.
	
	Approach
	
	The approach here is to consider and document the motivation behind the
	effort, the likely stakeholders, their unstated questions, and to get
	their interest in engaging in the Business Scenario process to describe
	their problems.
	
	Input
	
	What is driving an effort? It could be a fully documented project, or
	something as simple as an idea or concept. It also could be the lack of
	something; for example:
	
	-   No clear understanding of business need
	-   Problem looking for a solution
	-   Solution looking for a problem
	-   Dominance of technology speak
	-   Target market not identified
	-   “We just don’t know how to start”
	
	Output
	
	Premise, key questions that need answered to validate the premise, and a
	list of stakeholders willing to help validate and detail the premise.
	This output is used in the next phase to plan, manage, and execute the
	validation phase.
	
snippet togaf_guides_agile-sprints_3.3.1_Sprints "3.3.1 Sprints"
	
	The sprint approach means that work is done in cycles which contain
	feedback from customers/stakeholders at least at the end of each sprint.
	Feedback may be gathered as soon as there is anything worth reporting.
	Sprints should be as short as possible to obtain early feedback. Fast
	feedback means that the part of work subject to review may be corrected
	at once – in the process of ongoing work.
	
snippet togaf_architecture-project-management_3.3.1_What_is_a_Stage_Dividing_an_Architecture_Project_into_Stages "3.3.1 What is a Stage? – Dividing an Architecture Project into Stages"
	
	PRINCE2 advocates dividing a project into manageable and controllable
	stages. PMBOK says that stages[32] can be broken down “by functional or
	partial objectives, intermediate results or deliverables, specific
	milestones within the overall scope of work, or financial availability”.
	Stages are generally time-bound, with a start and ending or control
	point.
	
	What stages should the Architecture Project be split into? The TOGAF
	Standard recommends an iterative approach in the ADM.[33] It suggests
	use of architecture development iterations that cycle through Phases B
	to F to deliver architecture. In such a case, each architecture
	development iteration would be executed as a separate stage.
	
	In general, a few options for how to split an Architecture Project into
	stages can be considered, depending on the project goal. Here are a few
	frequently used approaches:
	
	-   Splitting the baseline architecture definition, target architecture
	    definition, and transition planning into separate stages (note that
	    the TOGAF Standard advocates both baseline-first and target-first
	    approaches, depending on context[34])
	-   Splitting into iterations based on a level of detail (e.g., the
	    first iteration delivers a high-level outline that is detailed in
	    the next iterations)
	-   Splitting into iterations based on a level of consultation (e.g.,
	    the first iteration delivers an internal Enterprise Architecture
	    draft, refined in the next iterations through consultation with
	    groups of stakeholders)
	-   Using a sequence of ADM phases, where each stage includes a single
	    phase, or a number of phases (e.g., Architecture Vision,
	    Business/IS/Technology Architecture, Opportunities &
	    Solution/Migration Planning)
	-   Single stage approach; i.e., the whole Architecture Project is
	    executed as a single stage
	-   A mix of these
	
	The approach should be chosen carefully to ensure it meets the
	Architecture Project goal and constraints such as time and budget. The
	TOGAF advice on choosing the right approach can be found in the
	TOGAF^(®) Standard – Applying the ADM: Applying Iteration to the ADM.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project B, a complex business  |
	|                                   | process is to be analyzed and     |
	|                                   | optimized. The process scope is   |
	|                                   | not fully understood, but it is   |
	|                                   | known that three business units   |
	|                                   | play key roles in the process,    |
	|                                   | each of them divided into five    |
	|                                   | subunits on average. After the    |
	|                                   | process is analyzed, the team is  |
	|                                   | going to model to be state for    |
	|                                   | the process. Then, it is going to |
	|                                   | define and prioritize initiatives |
	|                                   | that will move the company to the |
	|                                   | target state.                     |
	|                                   |                                   |
	|                                   | The architect leading the project |
	|                                   | decides on an approach based on   |
	|                                   | splitting the baseline            |
	|                                   | architecture definition, target   |
	|                                   | architecture definition, and      |
	|                                   | transition planning. He also      |
	|                                   | decides to work on the baseline   |
	|                                   | iteratively, with the first       |
	|                                   | iteration goal to understand the  |
	|                                   | whole process and plan detailed   |
	|                                   | work. His plan includes the       |
	|                                   | following stages:                 |
	|                                   |                                   |
	|                                   | 1.  Process Overview (2 weeks) –  |
	|                                   |     preliminary analysis and      |
	|                                   |     general business process      |
	|                                   |     views definition, based on    |
	|                                   |     existing documentation and    |
	|                                   |     meetings with business unit   |
	|                                   |     leaders; approach and         |
	|                                   |     schedule confirmation based   |
	|                                   |     on process overview.          |
	|                                   | 2.  Process Analysis (5 weeks) –  |
	|                                   |     thorough workshops with each  |
	|                                   |     of the subunits to define     |
	|                                   |     detailed process views        |
	|                                   |     including collaboration with  |
	|                                   |     other departments and         |
	|                                   |     external organizations, and   |
	|                                   |     IT systems support (15        |
	|                                   |     workshops; 5 workshops per    |
	|                                   |     week); summary meetings with  |
	|                                   |     business unit leaders;        |
	|                                   |     process models review with    |
	|                                   |     subunits.                     |
	|                                   | 3.  Process Modeling (4 weeks) –  |
	|                                   |     target process modeling; new  |
	|                                   |     and changed logical IT        |
	|                                   |     components definition; target |
	|                                   |     model review with subunits    |
	|                                   |     and business unit leaders.    |
	|                                   | 4.  Transition Planning (3 weeks) |
	|                                   |     – initiatives definition,     |
	|                                   |     prioritization, and roadmap   |
	|                                   |     preparation.                  |
	|                                   |                                   |
	|                                   | Note that Stage 1 can be mapped   |
	|                                   | to the ADM Phase A, Stages 2 and  |
	|                                   | 3 cover activities from the ADM   |
	|                                   | Phases B and C, and Stage 4       |
	|                                   | includes activities from the ADM  |
	|                                   | Phases E and F.                   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.3.2.1_Architecture_Governance_and_Corporate_Politics "3.3.2.1 Architecture Governance and Corporate Politics"
	
	An Enterprise Architecture imposed without appropriate executive support
	and corporate political alignment is bound to fail. In order to succeed,
	the Enterprise Architecture must reflect the needs of the organization.
	Enterprise Architects, if they are not involved in the development of
	business strategy, must at least have a fundamental understanding of it
	and of the prevailing business issues facing the organization. It may
	even be necessary for them to be involved in the system deployment
	process and to ultimately own the investment and product selection
	decisions arising from the implementation of the Technology
	Architecture.
	
	There are three important elements of Architecture Governance strategy
	that relate particularly to the acceptance and success of architecture
	within the enterprise. While relevant and applicable in their own right
	apart from their role in governance, and therefore described separately,
	they also form an integral part of any effective Architecture Governance
	strategy.
	
	-   A cross-organizational Architecture Board (see 4. Architecture
	    Board) must be established with the backing of executive management
	    to oversee the implementation of the Enterprise Architecture
	    Governance strategy
	-   A comprehensive set of Architecture Principles (see the TOGAF
	    Standard — ADM Techniques) should be established to guide, inform,
	    and support the way in which an organization sets about fulfilling
	    its mission through the use of IT
	-   An Architecture Compliance (see 6. Architecture Compliance) strategy
	    should be adopted — specific measures (more than just a statement of
	    policy) to ensure compliance with the architecture, including
	    Project Impact Assessments, a formal Architecture Compliance review
	    process, and possibly including the involvement of the architecture
	    team in product procurement
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3.2_Classify_Stakeholder_Positions "3.3.2 Classify Stakeholder Positions"
	
	Develop a good understanding of the most important stakeholders and
	record this analysis for reference and refresh during the project. An
	example stakeholder analysis is shown in Table 3-1 .
	
	Stakeholder Group
	
	Stakeholder
	
	Ability to Disrupt Change
	
	Current Understanding
	
	Required Understanding
	
	Current Commitment
	
	Required Commitment
	
	Required Support
	
	CIO
	
	John Smith
	
	H
	
	M
	
	H
	
	L
	
	M
	
	H
	
	CFO
	
	Jeff Brown
	
	M
	
	M
	
	M
	
	L
	
	M
	
	M
	
	Table 3-1: Example Stakeholder Analysis
	
	It is also important to assess the readiness of each stakeholder to
	behave in a supportive manner (i.e., demonstrate commitment to the
	Enterprise Architecture initiative).
	
	This can be done by asking a series of questions:
	
	-   Is that person ready to change direction and begin moving towards
	    the Target Architecture? If so, how ready?
	-   Is that person capable of being a credible advocate or agent of the
	    proposed Enterprise Architecture initiative? If so, how capable?
	-   How involved is the individual in the Enterprise Architecture
	    initiative? Are they simply an interested observer, or do they need
	    to be involved in the details?
	-   Has that person made a contractual commitment to the development of
	    the Enterprise Architecture, and its role in the governance of the
	    development of the organization?
	
	Then, for each person whose commitment is critical to ensure success,
	make a judgment as to their current level of commitment and the desired
	future level of commitment.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.3.2_Communicating_with_Implementers_Gap_Specification_and_Control "3.3.2 Communicating with Implementers (Gap, Specification, and Control)"
	
	Implementers are typically poorly served. It is common to see
	implementers handed with a set of diagrams that represent the
	architecture. From these diagrams the implementers are expected to
	figure out the gaps they should fill, the architecture specifications
	they must conform to, and the controls they must implement. Implementers
	are better served when they are explicitly provided context, gap,
	architecture specification, and control.
	
	The TOGAF Standard identifies a very useful concept for communication
	with anyone implementing the Architecture Contract. An Architecture
	Contract identifies the responsibility of the implementation team to the
	Target Architecture’s stakeholders. The most critical items to an
	implementer are:
	
	-   Implementation Project context: where does the project fit within
	    the roadmap, what value or value dependency will the project
	    provide?
	-   Scope: what work packages and gaps is the Implementation Project
	    responsible for, as well as what gaps associated with any
	    architecture components associated with the project scope is the
	    project not responsible for?
	-   Conformance: what is the set of specific architecture specifications
	    and controls the Implementation Project will be assessed against?
	
	The essential component is to fulfill the purpose of the TOGAF
	Architecture Contract: link the Implementation Project to the target in
	terms of context, work required, and conformance test. Most critically,
	stop setting the implementers up by expecting them to work out what is
	expected and how the project’s design and implementation will be
	assessed.
	
	John Carver’s policy governance approach[15] is one of the best for a
	Practitioner to follow. There are two imperative practices in Carver to
	follow. First, specifications should be exclusionary, highlighting what
	is prohibited, rather than mandating what is permitted. Second,
	specification compliance should be assessed through a reasonable
	interpretation test by a reasonable person.
	
	Drafting specifications as exclusionary reduces the requirement for
	omniscience during architecture development and provides the maximum
	opportunity for creativity during implementation, whether the creativity
	comes from innovative thinking by the design team, new technology, new
	third-party services, or new processes. Understanding what is
	prohibited, assumes everything else is allowed. The key concept is if
	the architecture does not constrain a choice, or prohibit a choice, the
	choice is allowed.
	
	Given that creativity is encouraged, Practitioners cannot expect that an
	implementation team can read minds and implement in the same way as
	envisioned. This forces the compliance assessment to be a test of
	reasonable interpretation. The best practice is always to link a
	specification to a requirement.[16] This allows the design, or
	implementation, to be assessed against a requirement/specification pair.
	The specification is in the context of what motivated the specification.
	Following this practice, every specification exists to deliver
	something, and the implementation can be value tested.
	
	When Practitioners serve the implementation team well, the stakeholders
	are supported. Practitioners provide the big picture to guide projects
	implicitly to value production, and requirement/specification pairs to
	guide the projects explicitly to value. In both cases, the value being
	produced is directly traceable.
	
snippet togaf_guides_agile-sprints_3.3.2_Demo_Outcome_Retrospective_and_Planning_DORP "3.3.2 Demo, Outcome, Retrospective, and Planning (DORP)"
	
	At the end of each sprint the sprint team will conduct four activities:
	
	1.  A demonstration (demo) of what they have done
	2.  Outcome management
	3.  A retrospective analysis of sprint performance
	4.  Planning for the next sprint
	
	The demos show the outcomes of the finished sprint to the stakeholders
	and the other sprint teams. The intent of this is to:
	
	-   Ensure that all stakeholders understand what they are getting
	-   Review the result of the sprint to ensure the increment fulfills the
	    business and quality objectives
	-   Understand what the other teams have achieved
	-   Potentially deliver MVPs to the customer
	
	The outcomes (values) can be a presentation of the Enterprise
	Architecture, models, designs, processes, an MVP, running software, etc.
	depending on the maturity level of the work being done by the sprint
	team at that time. The focus should be more on showing a testable
	solution, even if it is at prototype level. It is fine to present the
	architecture, but the focus should be more on the solution itself.
	
	Depending on the type of the outcome, it will be used in different ways.
	The business development outcome (e.g., an MVBD) becomes part of the
	backlog for the Enterprise Architecture team; an Enterprise Architecture
	outcome (e.g., an MVA) becomes part of the backlog for the solution
	development teams. Solution development outcomes can be moved into
	production using a DevOps process.
	
	At each retrospective, the sprint teams will evaluate the performance of
	their way of working during the last sprint and make necessary
	adjustments. Sprint retrospectives are a crucial aspect of the
	continuous improvement of the sprint teams. The goal is to improve team
	velocity from sprint to sprint, and to deliver the most business value
	in the shortest possible time.
	
	At each planning step of the sprint, the business change backlog is used
	to select the work for the next sprint based on the prioritization
	strategy selected. For each sprint there should be a sprint goal, which
	is obligatory and is the entry for the planning process. The sprint goal
	is something that is required to be achieved for a successful sprint.
	Requirements from the business change backlog together with feedback
	from stakeholders from previously deployed solutions are split into
	smaller requirements and prioritized in such a way as to achieve the
	sprint goal. The sprint goal in Enterprise Architecture work may be, for
	example, clearly defined parts of the Enterprise Architecture or a part
	of the architecture landscape that takes into account specified business
	aspects of the Enterprise Architecture. The outcome of the Enterprise
	Architecture should be demonstrable at the end of the sprint and should
	be related to business change and business value delivery.
	
	Changes to the business needs and solutions received from business
	stakeholders or sprint teams will be added to the business change and
	sprint backlogs and are evaluated. If they affect the overall vision,
	they need to be addressed quickly. At the end of each sprint backlog
	definition, refinement is done to reprioritize requirements. This
	becomes the basis for sprint planning in the next sprint.
	
	Each sprint is time-boxed. If planned work is not completed by the end
	of the sprint, it will be put into the business change backlog to be
	addressed in planning for the next sprint.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.3.2_Elements_of_an_Effective_Architecture_Governance_Strategy "3.3.2 Elements of an Effective Architecture Governance Strategy"
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.2_Identify_Stakeholders_Concerns_and_Business_Requirements "3.3.2 Identify Stakeholders, Concerns, and Business Requirements"
	
	Identify the key stakeholders and their concerns/objectives, and define
	the key business requirements to be addressed in the architecture
	engagement. Stakeholder engagement at this stage is intended to
	accomplish three objectives:
	
	-   To identify candidate vision components and requirements to be
	    tested as the Architecture Vision is developed
	-   To identify candidate scope boundaries for the engagement to limit
	    the extent of architectural investigation required
	-   To identify stakeholder concerns, issues, and cultural factors that
	    will shape how the architecture is presented and communicated
	
	The major product resulting from this step is a stakeholder map for the
	engagement, showing which stakeholders are involved with the engagement,
	their level of involvement, and their key concerns (see the TOGAF
	Standard — ADM Techniques). The stakeholder map is used to support
	various outputs of the Architecture Vision phase, and to identify:
	
	-   The concerns and viewpoints that are relevant to this project; this
	    is captured in the Architecture Vision (see the TOGAF Standard —
	    Architecture Content)
	-   The stakeholders that are involved with the project and as a result
	    form the starting point for a Communications Plan (see the TOGAF
	    Standard — Architecture Content)
	-   The key roles and responsibilities within the project, which should
	    be included within the Statement of Architecture Work (see the TOGAF
	    Standard — Architecture Content)
	
	Another key task will be to consider which architecture views and
	viewpoints need to be developed to satisfy the various stakeholder
	requirements. As described in the TOGAF Standard — ADM Techniques,
	understanding at this stage which stakeholders and which views need to
	be developed is important in setting the scope of the engagement.
	
	During the Architecture Vision phase, new requirements generated for
	future architecture work within the scope of the selected requirements
	need to be documented within the Architecture Requirements
	Specification, and new requirements which are beyond the scope of the
	selected requirements must be input to the Requirements Repository for
	management through the Requirements Management process.
	
snippet togaf_business-architecture_business-scenarios_3.3.2_Initial_Verification_Phase "3.3.2 Initial Verification Phase"
	
	Engaged stakeholders are a critical success factor to any significant
	change. And the earlier the engagement, the better the chances of
	success. This can be seen in most of the latest trends in development
	approaches such as Agile and DevOps. The Initial Verification phase
	takes the current premise, key questions, and targeted stakeholders and
	engages those stakeholders to validate and/or improve the understanding
	of the real problem and the real questions that need be addressed in
	order for a project to lead to a success.
	
	Objectives
	
	Document a draft and incomplete Business Scenario based on input from
	actual stakeholders, though not necessarily representative of a market
	segment.
	
	Approach
	
	The approach here is to get face-to-face with various stakeholders and
	examine their real business issues. It is best to get sample
	stakeholders from different organizations to understand what business
	issues are shared.
	
	Output
	
	Draft Business Scenario document with recommendations on next steps.
	
snippet togaf_architecture-project-management_3.3.2_Planning_a_Stage "3.3.2 Planning a Stage"
	
	According to PRINCE2, a stage should be planned before it starts; i.e.,
	at the end of the previous stage. This enables use of earlier project
	results, risks, and lessons learned in stage planning. It also allows
	for task execution and monitoring from the beginning. Typically, stage
	boundaries are already set in the Project Plan (refer to Architecture
	Project Start-Up, Section 3.1), so when planning a stage, we already
	know:
	
	-   What products are to be delivered by the stage; i.e., what views
	-   What level of detail is expected
	-   What architecture elements are in scope; e.g., processes and/or
	    applications list for segment architecture
	-   What the timeframe is
	-   What the key tasks to be completed are
	-   What resources are allocated
	
	If the above are unclear, use techniques described in Architecture
	Project Planning (Section 3.2) to determine them.
	
	Depending on the overall Project Plan level of detail, the stage plan
	can already be a part of it (i.e., the level of detail is sufficient to
	proceed with the work) or it may be needed to create a more detailed
	plan for the stage.
	
	PRINCE2 recommends planning the work stage by stage (see PRINCE2,
	Section 2.4). This approach is suitable in most Architecture Project
	cases, in our view. It is practical to have a general Project Plan that
	clearly defines stages and their boundaries, but does not go too deep –
	it should only outline the major activities and their timeframes within
	each stage. Therefore, a detailed stage plan has to be prepared before
	each of the stages.
	
	To create a stage plan, you can follow the guidelines on the Project
	Plan presented in Architecture Project Planning (Section 3.2). The
	approach is the same – defining activities, sequencing them, estimating
	efforts, and scheduling. However, effort and schedule should stay within
	the stage boundaries set by the Project Plan.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project B, after the Process   |
	|                                   | Overview stage, the Project       |
	|                                   | Manager prepared the next stage   |
	|                                   | (Process Analysis) plan.          |
	|                                   |                                   |
	|                                   | The Project Manager’s work was    |
	|                                   | based on an earlier prepared      |
	|                                   | Project Plan, which outlined the  |
	|                                   | stage schedule:                   |
	|                                   |                                   |
	|                                   | -   3 weeks for workshops with    |
	|                                   |     the subunits                  |
	|                                   | -   1 week for analysis           |
	|                                   |     consolidation and internal    |
	|                                   |     review                        |
	|                                   | -   1 week for analysis review by |
	|                                   |     the subunits                  |
	|                                   | -   1 week for addressing issues  |
	|                                   |     identified through reviews    |
	|                                   |                                   |
	|                                   | Additional information was        |
	|                                   | collected in the previous stage   |
	|                                   | (Process Overview), including:    |
	|                                   |                                   |
	|                                   | -   There are 13 subunits that    |
	|                                   |     take an important part in the |
	|                                   |     logistics process execution;  |
	|                                   |     3 others have a supporting    |
	|                                   |     role                          |
	|                                   | -   Contact persons were          |
	|                                   |     established for each of the   |
	|                                   |     subunits. Based on this       |
	|                                   |     input, the Project Manager    |
	|                                   |     detailed the stage plan with  |
	|                                   |     a daily granularity           |
	|                                   | -   There will be 13 workshops,   |
	|                                   |     one for each of the subunits  |
	|                                   |     that take part in the         |
	|                                   |     process, with supporting      |
	|                                   |     units included in 3 of the    |
	|                                   |     workshops                     |
	|                                   | -   One full day was allocated    |
	|                                   |     for each of the workshops (13 |
	|                                   |     days overall); workshops are  |
	|                                   |     led by a business analyst     |
	|                                   |     with a logistics systems      |
	|                                   |     architect support (16 hours   |
	|                                   |     effort per workshop); the     |
	|                                   |     product of each workshop day  |
	|                                   |     is a BPMN process model       |
	|                                   |     agreed at the meeting and a   |
	|                                   |     worksheet with a process      |
	|                                   |     description including the IT  |
	|                                   |     systems role in the process   |
	|                                   |     steps                         |
	|                                   | -   2 days were allocated for     |
	|                                   |     workshops scheduling,         |
	|                                   |     templates, and other          |
	|                                   |     materials preparation         |
	|                                   | -   2 days were allocated for     |
	|                                   |     business analyst to           |
	|                                   |     consolidate the whole         |
	|                                   |     material and 3 days for the   |
	|                                   |     leading architect to review.  |
	|                                   |     The product of these          |
	|                                   |     activities are refined        |
	|                                   |     process model and             |
	|                                   |     descriptions                  |
	|                                   | -   1 week was allocated for      |
	|                                   |     subunit reviews that would be |
	|                                   |     conducted in parallel (16     |
	|                                   |     hours effort of the Project   |
	|                                   |     Team for subunits support     |
	|                                   |     during the review period)     |
	|                                   | -   4 days were allocated for     |
	|                                   |     addressing issues             |
	|                                   | -   1 day was allocated for a     |
	|                                   |     workshop with subunits to     |
	|                                   |     discuss how the issues were   |
	|                                   |     addressed and communicate     |
	|                                   |     plans for the next stage      |
	|                                   |     (Process Modeling)            |
	|                                   |                                   |
	|                                   | This stage plan was documented in |
	|                                   | a dedicated worksheet, listing    |
	|                                   | the activities, resources         |
	|                                   | performing these activities,      |
	|                                   | timeframes, and work products. It |
	|                                   | was later supplemented with       |
	|                                   | workshop details – dates,         |
	|                                   | locations, and subunit            |
	|                                   | representatives.                  |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.3.3_Adjusting_a_Project_Plan "3.3.3 Adjusting a Project Plan"
	
	Ideally, there would be no changes to the Project Plan after planning a
	stage – i.e., the stage plan would match the schedule, scope, and budget
	restrictions implied by the Project Plan. However, if needed, the
	Project Plan should be updated to reflect the stage plan.
	
	The project still has to meet its time/budget/scope boundaries – or the
	change has to be handled as an exception. Please refer to Execute,
	Monitor, and Control a Stage (Section 3.4) for how to manage such
	exceptions.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project B, after the Process   |
	|                                   | Overview stage it was identified  |
	|                                   | that there is another business    |
	|                                   | unit engaged in the logistics     |
	|                                   | process execution. The Project    |
	|                                   | Manager assessed that an extra    |
	|                                   | week will be needed for           |
	|                                   | additional workshops in the       |
	|                                   | Process Analysis stage. The       |
	|                                   | Project Manager also noted that   |
	|                                   | the Process Modeling stage        |
	|                                   | schedule was very tight and       |
	|                                   | additional reviews could make it  |
	|                                   | impossible to close the stage in  |
	|                                   | four weeks.                       |
	|                                   |                                   |
	|                                   | Project B was governed by an      |
	|                                   | Architecture Board. Its Sponsor   |
	|                                   | was the CIO. After completing the |
	|                                   | Process Overview stage, the       |
	|                                   | Project Manager reported the      |
	|                                   | stage end to the Sponsor and the  |
	|                                   | Architecture Board, presented its |
	|                                   | results, and requested a change   |
	|                                   | in the project schedule (plus two |
	|                                   | weeks) and budget (plus 120       |
	|                                   | hours) to reflect the extra       |
	|                                   | effort needed.                    |
	|                                   |                                   |
	|                                   | After discussion, the governing   |
	|                                   | body agreed for an extra one week |
	|                                   | (and 60 hours) in the Process     |
	|                                   | Analysis stage. A risk of         |
	|                                   | insufficient time to complete the |
	|                                   | Process Modeling stage was        |
	|                                   | registered. It would be           |
	|                                   | reassessed after the Process      |
	|                                   | Analysis stage. Also, it was      |
	|                                   | agreed that each of the subunits  |
	|                                   | would select a single             |
	|                                   | representative for reviews in the |
	|                                   | Process Modeling stage to reduce  |
	|                                   | the above risk.                   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
	Stage planning activities are described as part of the Managing Stage
	Boundaries process in PRINCE2. PMBOK recommends performing its
	Initiating processes at the start of each stage when using a staged
	approach. Refer to the mappings presented in PRINCE2 to ADM Mapping
	(Chapter 4) and PMBOK to ADM Mapping (Chapter 5) and the Project
	Management methods themselves for further information.
	
snippet togaf_guides_agile-sprints_3.3.3_Business_Change_versus_Sprint_Backlog "3.3.3 Business Change versus Sprint Backlog"
	
	There will be two types of backlog used:
	
	-   The business change backlog containing the requirements for the
	    entire business change, based on the Enterprise Architecture vision,
	    goals, and strategies
	-   The sprint backlog containing the requirements for the next sprint;
	    one sprint backlog for each sprint team based on the business change
	    backlog and the Enterprise Architecture vision, goals, and
	    strategies
	
	Enterprise Architects will support sprint planning providing information
	about interoperability and dependencies between the different sprints,
	which is important when estimating the required effort for their
	delivery and also supports priority definitions.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.3.3_Communicating_with_Decision-Makers_Other_Useful_Things "3.3.3 Communicating with Decision-Makers (Other Useful Things)"
	
	The last community who must be communicated to are decision-makers.
	Typically, decision-makers will have a strong overlap with stakeholders.
	This distinction is necessary to ensure that the
	stakeholder/concern/view construct is restricted to the approval of the
	target. The ability to have crisp governance of the target and approval
	is too important to blur the line and include other communications.
	
	Like communicating with implementers, communication to decision-makers
	often falls into the category of “other useful things”. An architecture
	roadmap or the strategic architecture are empirical in nature. They are
	supported by conversations around “motivation statements”, demonstrating
	how the scope of change aligns to goals including why each step is
	essential, the foundational nature of some of the Implementation
	Projects, employment of an appropriate compliance report for decision
	support, etc. Such conversations fall under “other useful things”. It
	may not be possible to create appropriate models to support these
	communications.
	
	Decision-maker communication will typically be aligned with:
	
	-   Timing
	-   Trade-off decisions
	-   Status
	-   Budget
	-   Compliance
	-   Confidence
	
	Communication about timing is typically drawn from either the Roadmap,
	the Implementation & Migration Plan, or from Phase G. Timing speaks to
	when can the decision-maker expects activity to start, change something,
	complete something, or start to obtain value.
	
	Trade-off decisions between stakeholders need to be communicated to
	others in the Enterprise. They are usually not involved in the
	trade-off. Communication about trade-off decisions is typically
	educational, serving to explain the trade-off decision. Critical
	conversations on trade-off by prior architecture and superior
	architecture will be held during Phase F, G, and H, informing
	decision-makers.
	
	Status conversations are about the Architecture Project. The most
	important status conversations are about closing on an Architecture
	Vision in Phase A, resolving complex trade-off in Phases B, C, and D,
	and value, effort, and dependency conclusions regarding the Roadmap’s
	work packages in Phase E. The status of value realization conversations
	will occur in Phase H. Depending upon the status of value, further
	conversations about architecture change requests, or initiating a new
	Architecture Project may occur.
	
	Decision-makers have a deep interest in the budget. During Phase F’s
	planning exercises some of the most complex trade-off decisions are
	made. Conversations with stakeholders during architecture and roadmap
	development revolve around value, effort, and risk. In Phase F spend is
	brought to the fore. Further, during Phase G budget control and
	availability will impact all Implementation Projects.
	
	Best practice has decisions on non-compliance being made by
	stakeholders. They need to approve the recommendation to enforce the
	target, grant relief, or change the architecture. Communication about
	compliance is very similar to trade-off conversations. Also, when relief
	is granted, further conversations about scheduling a roadmap or
	implementation plan update should also occur.
	
	Some of the most critical conversations with decision-makers are about
	confidence. The confidence they should have in the Roadmap and
	Implementation & Migration Plan, completing the change, and realizing
	the value. All architecture is an approximation; no Practitioner can
	underestimate the importance of confidence.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.3_Confirm_and_Elaborate_Business_Goals_Business_Drivers_and_Constraints "3.3.3 Confirm and Elaborate Business Goals, Business Drivers, and Constraints"
	
	Identify the business goals and strategic drivers of the organization.
	
	If these have already been defined elsewhere within the enterprise,
	ensure that the existing definitions are current, and clarify any areas
	of ambiguity. Otherwise, go back to the originators of the Statement of
	Architecture Work and work with them to define these essential items and
	secure their endorsement by corporate management.
	
	Define the constraints that must be dealt with, including
	enterprise-wide constraints and project-specific constraints (time,
	schedule, resources, etc.). The enterprise-wide constraints may be
	informed by the business and Architecture Principles developed in the
	Preliminary Phase or clarified as part of Phase A.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3.3_Determine_Stakeholder_Management_Approach "3.3.3 Determine Stakeholder Management Approach"
	
	The previous steps identified a long list of people and organizations
	that are affected by the Enterprise Architecture project.
	
	Some of these may have the power either to block or advance. Some may be
	interested in what the Enterprise Architecture initiative is doing;
	others may not care. This step enables the team to easily see which
	stakeholders are expected to be blockers or critics, and which
	stakeholders are likely to be advocates and supporters of the
	initiative.
	
	Work out stakeholder power, influence, and interest, so as to focus the
	Enterprise Architecture engagement on the key individuals. These can be
	mapped onto a power/interest matrix, which also indicates the strategy
	to adopt for engaging with them. Figure 3-2 shows an example power grid
	matrix.
	
	[]
	
	Figure 3-2: Stakeholder Power Grid
	
snippet togaf_business-architecture_business-scenarios_3.3.3_Refinement_Phase "3.3.3 Refinement Phase"
	
	Having the stakeholder needs faithfully captured is important, but it
	mustn’t be done to the exclusion of moving forward. We have all heard of
	paralysis by analysis. This phase helps get a good enough statement of
	the business requirements.
	
	Objectives
	
	An agreed statement of the business requirements, documented in the
	Business Scenario, along with an agreed path forward including
	commitments for developing to and preferring standards documented in the
	architecture.
	
	Approach
	
	The approach in this phase is to iteratively refine the understanding
	until there is agreement on proceeding along the lines suggested in the
	document.
	
	Output
	
	Released Business Scenario document with recommendations on the next
	steps that will feed the architecture process.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.4_Evaluate_Capabilities "3.3.4 Evaluate Capabilities"
	
	It is valuable to understand a collection of capabilities within the
	enterprise. One part refers to the capability of the enterprise to
	develop and consume the architecture. The second part refers to the
	baseline and target capability level of the enterprise. Gaps identified
	in the Architecture Capability require iteration between Architecture
	Vision and Preliminary Phase to ensure that the Architecture Capability
	is suitable to address the scope of the architecture project (see the
	TOGAF Standard — Applying the ADM).
	
	A key step following from evaluation of business models, or artifacts
	that clarify priorities of a business strategy, is to identify the
	required business capabilities the enterprise must possess to act on the
	strategic priorities.
	
	The detailed assessment of business capability gaps belongs in Phase B
	as a core aspect of the Business Architecture, where the architect can
	help the enterprise understand gaps throughout the business, of many
	types, that need to be addressed in later phases of the architecture.
	
	In the Architecture Vision phase, however, the architect should consider
	the capability of the enterprise to develop the Enterprise Architecture
	itself, as required in the specific initiative or project underway. Gaps
	in the ability to progress through the ADM, whether deriving from skill
	shortages, information required, process weakness, or systems and tools,
	are a serious consideration in the vision of whether the architecture
	effort should continue. The architect can find guidance in 3.5 Approach
	to gather existing business capability frameworks for the enterprise in
	this early assessment.
	
	Gaps, or limitations, identified in the enterprise's capability to
	execute on change will inform the architect on the description of the
	Target Architecture and on the Implementation and Migration Plan (see
	the TOGAF Standard — Architecture Content) created in Phase E and Phase
	F. This step seeks to understand the capabilities and desires of the
	enterprise at an appropriate level of abstraction (see the TOGAF
	Standard — Applying the ADM). Consideration of the gap between the
	baseline and target capability of the enterprise is critical. Showing
	the baseline and target capabilities within the context of the overall
	enterprise can be supported by creating Value Chain diagrams that show
	the linkage of related capabilities. The results of the assessment are
	documented in a Capability Assessment (see (see the TOGAF Standard —
	Architecture Content).
	
snippet togaf_guides_agile-sprints_3.3.4_First_Sprint_Sprint_Zero_or_Strategic_Sprint "3.3.4 First Sprint (Sprint Zero or Strategic Sprint)"
	
	Sprints in frameworks usually do not distinguish between types of
	sprint. Nonetheless, in the context of Enterprise Architecture it is
	recommended to start with a preparation sprint. Since we use sprints for
	Enterprise Architecture development, it is also recommended to organize
	this introductory phase as a separate sprint, which is usually called
	“sprint zero” or “strategic sprint”. The sprint fits into an Enough
	Design Upfront (EDUF) approach and is the time when the foundation for
	future work is prepared; it also fits into the concept of intentional
	architecture.
	
	Depending on the context it can be an initial business need, major
	capabilities, value streams, and a high-level roadmap for the business
	transformation that will help to prioritize the content of future
	sprints. Inputs to this sprint are the requirements for business
	improvement and IT improvement, together with existing strategic and
	segment architectures.
	
	The business needs, value streams, capabilities, roadmap, and
	stakeholder requirements are used to create a business change backlog
	for the work in the subsequent Enterprise Architecture sprints. The
	Enterprise Architecture part of the business change backlog can contain:
	
	-   The major (Enterprise Architecture/design) choices to be made
	-   The work that must be done to provide the proper framework for those
	    choices (issues – options – arguments)
	-   The most value-generating stakeholder requirements
	
	Many decisions can be broken down into smaller parts in the subsequent
	sprint backlogs.
	
	Note: Be aware that the concept of a “sprint zero” is not accepted by
	all Agile practitioners.
	
	Identifying no-regret decisions (i.e., decisions that work well in all
	scenarios) will buy some time. The next sprints will pick up the most
	value-generating business change backlog items and create the next
	versions of the business change. A number of strategies can be employed
	to prioritize the business change and sprint backlogs:
	
	-   Use the value streams in scope of the Enterprise Architecture and
	    other work; the most value-generating parts are created first
	-   The riskiest parts of the business change are created first
	-   Use a significant slice (partition) through all the relevant ADM
	    phases to ensure that everything works together
	-   A piece of the Enterprise Architecture and other work that can be
	    easily defined and implemented is created first
	
	“Most value-generating” could be the first decision to be made for the
	teams to be able to continue.
	
	The next sprints will pick up the most value-generating business change
	backlog items and create the next version of the solution.
	
	At the end of sprint zero, a DORP will be performed as for any other
	sprint. Only the next sprint is planned in detail; no other sprints are
	pre-planned.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3.4_Tailor_Engagement_Deliverables "3.3.4 Tailor Engagement Deliverables"
	
	Identify catalogs, matrices, and diagrams that the architecture
	engagement needs to produce and validate with each stakeholder group to
	deliver an effective architecture model.
	
	It is important to pay particular attention to stakeholder interests by
	defining specific catalogs, matrices, and diagrams that are relevant for
	a particular Enterprise Architecture model. This enables the
	architecture to be communicated to, and understood by, all the
	stakeholders, and enables them to verify that the Enterprise
	Architecture initiative will address their concerns.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.5_Assess_Readiness_for_Business_Transformation "3.3.5 Assess Readiness for Business Transformation"
	
	A Business Transformation Readiness Assessment can be used to evaluate
	and quantify the organization's readiness to undergo a change. This
	assessment is based upon the determination and analysis/rating of a
	series of readiness factors, as described in the TOGAF Standard — ADM
	Techniques.
	
	The results of the readiness assessment should be added to the
	Capability Assessment (see the TOGAF Standard — Architecture Content).
	These results are then used to shape the scope of the architecture, to
	identify activities required within the architecture project, and to
	identify risk areas to be addressed.
	
snippet togaf_guides_agile-sprints_3.3.5_Enterprise_Architecture_Development_Agility "3.3.5 Enterprise Architecture Development Agility"
	
	Sprints can be used to create the Enterprise Architecture deliverables.
	
	The approach is to apply Enterprise Architecture sprints in order to
	deliver the Enterprise Architecture in an Agile way.
	
	Using sprints for Enterprise Architecture could create these positive
	effects:
	
	-   Ensures that the Enterprise Architecture team refines the working
	    process during retrospectives
	-   Ensures that the Enterprise Architecture team has understood the
	    concerns using stakeholder feedback
	-   Handles changes effectively in business change/sprint backlogs and
	    sprint planning
	-   Allows for better estimates for the entire Enterprise Architecture
	    work due to sprint sizing and architecture work velocity
	-   Easier to stop a project early due to early stakeholder feedback
	
	The first sprint (sprint zero) is described earlier. The outcome of that
	sprint is then handled like any other sprint. Each sprint will deliver
	an MVA.
	
	At each demo, the Enterprise Architecture sprint team will demo the
	Enterprise Architecture created to ensure the stakeholders (customers)
	understand what they are getting.
	
	At each retrospective, the Enterprise Architecture sprint team will
	evaluate the quality of the Enterprise Architecture description being
	delivered and the performance of the architecture process during the
	last sprint and make necessary adjustments. This could be done by
	measuring team velocity using how the requirements have been allocated
	and how well the team members have estimated the effort needed.
	
	When planning each sprint, the Enterprise Architecture sprint team will
	use the business change backlog to select the most value-generating
	(important) items for the next sprint backlog including potential
	changes. If necessary, more than one Enterprise Architecture sprint team
	may be working in parallel.
	
	After a series of sprints completing the Enterprise Architecture, the
	implementation of the Enterprise Architecture can start. Depending on
	the approach, it may be possible to work in parallel, so that some of
	the solution teams can start working on the solution implementation if
	the Enterprise Architecture definitions are well defined, or if possible
	to develop parts of the solution that do not depend on others (therefore
	showing the importance of following a decoupling strategy for the
	design). The implementation is supported and governed by the Enterprise
	Architecture team and the business.
	
	The solutions can be done using Agile or any other method, adapting the
	governance way of working to the implementation method. This will depend
	on the organization’s maturity level. Figure 2 shows how the Enterprise
	Architecture work can be divided into sprints. Using this collaboration
	pattern, the entire Enterprise Architecture is created before
	implementation is started. But the Enterprise Architecture team should
	consider the scope and depth of the Enterprise Architecture in relation
	to the implementation method.
	
	[]
	
	Figure 2: Enterprise Architecture Development Sprints in the ADM
	
	An example is that the Enterprise Architecture team defines slices
	(partitions) of the architecture for the business change in each sprint.
	A slice can contain any relevant ADM Phase A to F. Each slice can be
	implemented directly, or after the entire Enterprise Architecture is
	completed.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.6_Define_Scope "3.3.6 Define Scope"
	
	Define what is inside and what is outside the scope of the Baseline
	Architecture and Target Architecture efforts, understanding that the
	baseline and target need not be described at the same level of detail.
	In many cases, the baseline is described at a higher level of
	abstraction, so more time is available to specify the target in
	sufficient detail. The issues involved in this are discussed in 1.5
	Scoping the Architecture . In particular, define:
	
	-   The breadth of coverage of the enterprise
	-   The level of detail required
	-   The partitioning characteristics of the architecture (see the TOGAF
	    Standard — Applying the ADM for more details)
	-   The specific architecture domains to be covered (Business, Data,
	    Application, Technology)
	-   The extent of the time period aimed at, plus the number and extent
	    of any intermediate time period
	-   The architectural assets to be leveraged, or considered for use,
	    from the organization's Architecture Repository:
	    -   Assets created in previous iterations of the ADM cycle within
	        the enterprise
	    -   Assets available elsewhere in the industry (other frameworks,
	        systems models, vertical industry models, etc.)
	
snippet togaf_guides_agile-sprints_3.3.6_Solution_Collaboration "3.3.6 Solution Collaboration"
	
	With solution collaboration, it is preferable that the solution
	architects from the solution team(s) are actively involved in the
	process of creating the sprint Enterprise Architectures, and the
	Enterprise Architects are actively involved in supporting the solution
	teams.
	
	The Enterprise Architecture team creates a just-in-time MVA for the
	coming sprints and the Agile solution development teams create solutions
	for the MVA. Both Enterprise Architecture and Agile solution development
	teams get feedback from the business change stakeholders as early as
	possible during the demos.
	
	The Agile solutions are not restricted to software; they can also be,
	for example, created/updated business processes, marketing campaigns,
	new/updated physical XML models, or technology updates.
	
	This will create additional positive effects:
	
	-   The business change stakeholders will have an earlier understanding
	    of what they will receive from the sprint demos
	-   Agile solution teams involved in creating and implementing the
	    Enterprise Architecture ensures better architecture
	-   Agile solution teams’ decisions and concerns are fed back to
	    architects quickly
	-   Agile solution teams involved in creating and implementing the
	    Enterprise Architecture ensures enhanced business value
	-   Agile solution teams understand the effects of Enterprise
	    Architecture decisions quickly and can give feedback
	-   The business change proposal and Enterprise Architecture can be
	    reworked with better understanding of the solution effects earlier
	    in the process
	
	As Figure 3 shows, during the first sprint (sprint zero), the result is
	the same as when just doing the Enterprise Architecture using sprints.
	
	The business need, roadmap, stakeholder requirements, and the results
	from sprint zero are used to create a business change backlog for the
	work in the subsequent business and Enterprise Architecture sprints.
	
	The next sprint will pick up the most value-generating backlog items for
	the Agile solution development and Agile Enterprise Architecture teams
	based on the prioritization strategy selected. Using that, the
	Enterprise Architecture team defines the architecture for the coming
	sprint(s) based on the business development (MVBD) requirement from the
	previous sprint(s). This will deliver MVAs for subsequent sprints and
	solutions that can be released into operations.
	
	At each demo, the solution and Enterprise Architecture sprint teams will
	demo the completed business change increment and Enterprise Architecture
	(MVA) created to ensure the stakeholders understand what they are
	getting and the customer/business value delivered.
	
	At each retrospective, the solution and Enterprise Architecture sprint
	team will evaluate the performance during the last sprint and make
	necessary adjustments.
	
	When planning each sprint, the solution and Enterprise Architecture
	sprint team will use the business change backlog to select the
	requirements for the next sprint based on the prioritization strategy
	selected.
	
	During the sprint the Enterprise Architecture team will support the
	solution teams for them to understand the Enterprise Architecture
	(previous MVA) and the solution teams will feed back on the proposed
	Enterprise Architecture (MVA) for the next sprint.
	
	[]
	
	Figure 3: Architecture and Solution Sprints in the ADM
	
	The dashed lines indicate collaboration and Agile governance and
	support.
	
	An example is that the Enterprise Architecture team defines slices of
	the architecture for the business change in each sprint and the solution
	teams develops solutions for these slices.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.7_Confirm_and_Elaborate_Architecture_Principles_including_Business_Principles "3.3.7 Confirm and Elaborate Architecture Principles, including Business Principles"
	
	Review the principles under which the architecture is to be developed.
	Architecture Principles are normally based on the principles developed
	as part of the Preliminary Phase. They are explained, and an example set
	given, in the TOGAF Standard — ADM Techniques. Ensure that the existing
	definitions are current, and clarify any areas of ambiguity. Otherwise,
	go back to the body responsible for Architecture Governance and work
	with them to define these essential items for the first time and secure
	their endorsement by corporate management.
	
snippet togaf_guides_agile-sprints_3.3.7_Cross-Development_Collaboration "3.3.7 Cross-Development Collaboration"
	
	Business development should also be done in an Agile way. This
	collaboration pattern defines how the Agile business development,
	Enterprise Architecture, and Agile solution teams are actively
	collaborating in the process of creating the solution(s), as shown in
	Figure 4.
	
	This will create additional positive effects:
	
	-   Business development is involved in creating the business change
	-   Business development understands the effects of business decisions
	    quickly
	-   Business development decisions are evaluated from a holistic
	    perspective
	-   Business development proposals can be reworked with better
	    understanding of the effects
	-   Architects and solution development teams will have a better
	    understanding of the business needs
	-   Architects can influence the business decisions, requirements, and
	    development
	-   Solution teams can influence the business decisions, requirements,
	    and development
	
	The first sprint (sprint zero) will create the initial vision for the
	business change that will be help to prioritize the content of future
	sprints in collaboration between the business development, Enterprise
	Architecture, and Agile solution teams.
	
	At each demo, each Agile team will demo the current solution increments,
	proposed business development (MVBD), and Enterprise Architecture (MVA)
	for the next sprints. The MVBD and MVA are created to ensure that all
	stakeholders understand what they are getting and how they can affect
	the outcome. Potential customers can start using the product
	increment(s).
	
	At each retrospective, all teams will evaluate the performance of their
	processes during the last sprint and make necessary adjustments.
	
	When planning each sprint, all teams will use the business change
	backlog to select the most value-generating (important) requirements for
	their next sprint.
	
	At this level of maturity, the business development team will enhance
	the business change for the next Enterprise Architecture sprint and the
	architecture team will produce a just-in-time Enterprise Architecture
	for the next solution sprint. The business development and Enterprise
	Architecture teams will also be available to support the solution teams.
	And the solution teams will feed back on the business and Enterprise
	Architecture deliverables for the next sprints.
	
	[]
	
	Figure 4: Cross-Development Collaboration
	
	The dashed lines indicate collaboration and Agile governance and
	support.
	
	As an example, the business team works on an MVBD in Sprint 1, the
	Enterprise Architecture team defines a just-in-time Enterprise
	Architecture (MVA) for that MVBD in Sprint 2, and the solution teams
	create solutions for that MVA in Sprint 3.
	
	The MVBD could be a set of incremental value stream changes and
	corresponding capability changes.
	
snippet togaf_guides_agile-sprints_3.3.8_Cross-Functional_Agility "3.3.8 Cross-Functional Agility"
	
	Cross-functional agility means that each sprint team consists of
	business development, Enterprise Architecture, and Agile solution
	development competencies. These competencies are collaborating in the
	same team. There are no specific business development, Enterprise
	Architecture, or Agile development teams, just mixed cross-functional
	self-organizing Agile teams. All improvement work is constantly managed
	through the business change and sprint backlogs.
	
	This will create additional positive effects:
	
	-   Closes access to all the skills necessary to effectively deliver
	    value to customers
	-   Brings new insights to the team to define creative solutions and
	    enhance development
	-   Breaks stereotypes and spurs innovative ideas though diversity
	-   Enables a common corporate language
	-   Resolves issues of conflicting priorities and improves conflict
	    resolution
	-   Cross-organization alignment
	
	The first sprint (sprint zero) will define the initial business change
	needs that will help to prioritize the content of future sprints in
	collaboration between the business development, Enterprise Architecture,
	and Agile solution development teams (see Figure 5).
	
	At each demo, each team will demo the current solution increment and
	proposed business development (MVBD) and Enterprise Architecture (MVA)
	for the next sprint. The MVBD and MVA are created to ensure that all
	stakeholders understand what they are getting and can affect the
	outcome.
	
	At each retrospective, all teams will evaluate the performance of their
	processes during the last sprint and make necessary adjustments.
	
	When planning each sprint, all teams will use the business change
	backlog to select the most value-generating (important) requirements for
	their next sprint.
	
	Using this collaboration pattern, cross-functional sprint teams will
	produce just-in-time business development, Enterprise Architectures, and
	solutions during the next sprint.
	
	[]
	
	Figure 5: Agile Improved Enterprise using Sprints
	
	As an example, a number of cross-functional teams each with some level
	of Enterprise Architecture capability creates solutions in each sprint.
	The teams coordinate their efforts at the end of each sprint.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.8_Develop_Architecture_Vision "3.3.8 Develop Architecture Vision"
	
	An understanding of the required artifacts will enable the stakeholders
	to start to scope out their decision-making which will guide subsequent
	phases. These decisions need to be reflected in the stakeholder map.
	
	Policy development and strategic decisions need to be captured in this
	phase to enable the subsequent work to be quantified; for example,
	rationalization decisions and metrics, revenue generation, and targets
	which meet the business strategy. There are also other areas which need
	to be addressed; for example, Digital Transformation and IT strategy
	where decisions on the Architecture Vision will provide leadership and
	direction for the organization in subsequent phases.
	
	For the Architecture Vision it is recommended that first an overall
	architecture be decided upon showing how all of the various architecture
	domain deliverables will fit together (based upon the selected course of
	action).
	
	Based on the stakeholder concerns, business capability requirements,
	scope, constraints, and principles, create a high-level view of the
	Baseline and Target Architectures. The Architecture Vision typically
	covers the breadth of scope identified for the project, at a high level.
	Informal techniques are often employed. A common practice is to draw a
	simple solution concept diagram that illustrates concisely the major
	components of the solution and how the solution will result in benefit
	for the enterprise.
	
	Business scenarios are an appropriate and useful technique to discover
	and document business requirements, and to articulate an Architecture
	Vision that responds to those requirements. Business scenarios may also
	be used at more detailed levels of the architecture work (e.g., in Phase
	B) and are described in the TOGAF® Series Guide: Business Scenarios.
	
	This step generates the first, very high-level definitions of the
	baseline and target environments, from a business, information systems,
	and technology perspective, as described in 3.4 Outputs .
	
	These initial versions of the architecture should be stored in the
	Architecture Repository, organized according to the standards and
	guidelines established in the architecture framework.
	
snippet togaf_adm_3_A_Architecture_Vision_3.3.9_Define_the_Target_Architecture_Value_Propositions_and_KPIs "3.3.9 Define the Target Architecture Value Propositions and KPIs"
	
	-   Develop the business case for the architectures and changes required
	-   Produce the value proposition for each of the stakeholder groupings
	-   Assess and define the procurement requirements
	-   Review and agree the value propositions with the sponsors and
	    stakeholders concerned
	-   Define the performance metrics and measures to be built into the
	    Enterprise Architecture to meet the business needs
	-   Assess the business risk (see the TOGAF Standard — ADM Techniques)
	
	The outputs from this activity should be incorporated within the
	Statement of Architecture Work to allow performance to be tracked
	accordingly.
	
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3.3_Architecture_Governance_in_Practice "3.3 Architecture Governance in Practice"
	
	This section provides practical guidelines for the effective
	implementation of Architecture Governance
	
snippet togaf_applying-the-adm_3_Applying_the_ADM_Across_the_Architecture_Landscape_3.3_Developing_Architectures_at_Different_Levels "3.3 Developing Architectures at Different Levels"
	
	The previous sections have identified that different types of
	architecture are required to address different stakeholder needs at
	different levels of the organization. Each architecture typically does
	not exist in isolation and must therefore sit within a governance
	hierarchy. Broad, summary architectures set the direction for narrow and
	detailed architectures.
	
	A number of techniques can be employed to use the ADM as a process that
	supports such hierarchies of architectures. Essentially there are two
	strategies that can be applied:
	
	1.  Architectures at different levels can be developed through
	    iterations within a single cycle of the ADM process
	2.  Architectures at different levels can be developed through a
	    hierarchy of ADM processes, executed concurrently
	
	At the extreme ends of the scale, either of these two options can be
	fully adopted. In practice, an architect is likely to need to blend
	elements of each to fit the exact requirements of their Request for
	Architecture Work. Each of these approaches is described in 2. Applying
	Iteration to the ADM .
	
snippet togaf_guides_agile-sprints_3.3_How_to_Sprint_in_the_TOGAF_ADM "3.3 How to Sprint in the TOGAF ADM"
	
	There are a number of ways to use sprints in Enterprise Architecture
	development. This section explains a few of them.
	
	Enterprise Architecture can be used in the definition of many types of
	change; e.g., business transformations, support of mergers,
	acquisitions, divestitures, or ecosystem collaboration. This is
	collectively referred to as “business change” in this document.
	
	There can be different types of Agile competencies in elaborating and
	developing the solutions for a business change:
	
	-   Agile business competencies can be from, for example, internal
	    business developers, business users, customers, or ecosystem
	    business developers
	-   Agile Enterprise Architecture competencies and specializations
	    typically comprise roles dealing with business, data/information,
	    application, technology, and security
	-   Agile solution development competencies include, for example,
	    business process developers, solution architects, and IT solution
	    developers
	
	There are many ways to collaborate between architects, business, and
	solution development. The roadmap to a more Agile way of doing
	Enterprise Architecture in this document is divided into four different
	methods that can be applied (see Figure 1), depending on the needs of
	the Agile practice in the organization. Often these collaboration levels
	coincide with the Agile maturity level of the enterprise.
	
	[]
	
	Figure 1: Agile Enterprise Architecture Ways of Collaboration
	
	The four ways of collaboration are described as follows:
	
	-   Enterprise Architecture Development Agility: deliver the Enterprise
	    Architecture for the business change using sprints
	
	The necessary ADM phases (A to F) to deliver the Enterprise Architecture
	are divided into a set of sprints, often with a slice (partition) of the
	ADM (A to F) in each sprint. Governance will be applied following the
	TOGAF governance framework that may also be adapted to be applied in an
	Agile way.
	
	-   Solution Collaboration: deliver the solution(s) with collaborating
	    Enterprise Architecture and Agile solution team sprints
	
	Each sprint contains both Enterprise Architecture and Agile solution
	development. The Enterprise Architecture team will create MVAs for
	subsequent development sprints.
	
	-   Cross-Development Collaboration: deliver the solutions with
	    collaborating Agile business development, Agile Enterprise
	    Architecture, and Agile solution development sprints
	
	Each sprint contains Agile business development, Agile Enterprise
	Architecture, and Agile solution development. The business development
	team will create MVBDs for subsequent Enterprise Architecture sprints,
	and the Enterprise Architecture team will create MVAs for subsequent
	development sprints. Delivering Enterprise Architecture has contexts and
	within each context the interpretation of the sprint, outcome, and
	membership will vary. For more details, see Section 5.1.
	
	-   Cross-Functional Agility: deliver the solution with mixed,
	    cross-functional sprint teams all containing Agile business
	    development, Agile Enterprise Architecture, and Agile solution
	    development competencies
	
	Each sprint team contains business development, Enterprise Architecture,
	and Agile solution development competencies to break silos and ensure
	consistent innovation. These competencies are collaborating in the same
	team.
	
	These ways of collaboration will be detailed later in this chapter.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.3_How_to_Use_an_Enterprise_Architecture "3.3 How to Use an Enterprise Architecture?"
	
	An EA is developed for one very simple reason: to guide effective
	change. Practitioners use models to provide a consistent analysis of
	complex systems. Models provide efficient long-term representation that
	enables like-with-like comparison – comparison of what is, what was, and
	what might be. The comparison that facilitates trade-off between
	potential changes that carry different costs and different benefits.
	Models provide understanding to people who understand the language,
	structure, and limitations of a model.
	
	Guiding effective change is driven by who is using the architecture.
	Three broad communities use the EA: stakeholders, decision-makers, and
	implementers. Each of these communities uses the architecture
	differently.
	
	When starting to talk about communication, the problem of terminology is
	the first obstacle faced. “Stakeholder” is a useful term, and multiple
	frameworks and methods use the term. Be aware of when you are carrying
	implied meaning from one framework, or approach, to another. This Guide
	follows ISO/IEC/IEEE 42010:2011 guidance on stakeholders which focuses
	the attention on those whose concerns are fundamental to the
	architecture, or architecturally significant.[12] Facilitating effective
	communication requires us to make a distinction between other
	communities who are interested in the architecture. A stakeholder holds
	approval rights on the target and the implementation; an implementer
	requires guidance and constraint; and a decision-maker holds execution
	rights on change. Practitioners are advised to develop views that
	address a stakeholder’s concerns. Success of an architecture rests on
	the clarity and focus of the views produced. Its sole purpose is to
	communicate that the Target Architecture best satisfies the complex set
	of requirements the Enterprise has. Practitioners are best served when
	they preserve the distinction between stakeholders with approval rights
	and those needing most recent data points to create appropriate views of
	the concerns addressed by the EA. Without clarity on distinct roles,
	Practitioners complicate governance of the EA and the change projects.
	
snippet togaf_guides_microservices-architecture_3.3_Implications_for_Data_Architecture "3.3 Implications for Data Architecture"
	
	Distributed architectures, and more specifically MSAs, introduce more
	copies of data than centralized solutions. In order to meet certain
	non-functional requirements such as response time and availability
	targets, data may need to be copied to multiple data stores (e.g.,
	operational data store of a microservice, cache, edge device) so that
	the lack of availability and latency of upstream dependencies do not
	negatively impact the overall performance and availability of the
	microservice and ultimately the user experience of the applications
	dependent on the microservice. Data Architecture and governance
	therefore become more complex as the integration requirements,
	messaging, and analytic data related to these microservices evolve.
	
snippet togaf_metadata-management_3.3_Metadata_Management_High-Level_Application_Functions "3.3 Metadata Management High-Level Application Functions"
	
	  Application Function        Description
	  --------------------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Acquisition                 Provide functions to collect (create, infer, maintain), classify, and associate metadata.
	  Governance                  Functions required to support data documentation governance: workflow validation, task assignment, metadata activities monitoring, change impact analysis.
	  Reporting                   Support reporting and dash-boarding activities using stored metadata.
	  Reference Data Management   Create, maintain, and administer a normalized list of values.
	  Administration              Administrative tasks required to support the Metadata Management capability, such as access management, environment management, internationalization and localization, event logging management, database versioning.
	  Metadata Integration        Provide functions that allow the ingestion of the metadata from various sources across the organization or the distribution of the metadata to other applications.
	
snippet togaf_business-architecture_business-scenarios_3.3_Phases "3.3 Phases"
	
	The steps above are repeated in the following phases that go from
	creating a premise to having a Business Scenario that has been approved
	by the leaders of the business. This Business Scenario document is then
	placed in the Requirements Repository as the high-level requirements
	statement that drives the architecture work downstream and is used to
	validate the quality of the architecture.
	
snippet togaf_architecture-project-management_3.3_Planning_a_Stage "3.3 Planning a Stage"
	
snippet togaf_adm_3_A_Architecture_Vision_3.3_Steps "3.3 Steps"
	
	The level of detail addressed in Phase A will depend on the scope and
	goals of the Request for Architecture Work, or the subset of scope and
	goals associated with this iteration of architecture development.
	
	The order of the steps in Phase A as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance.
	
	The steps in Phase A are as follows:
	
	-   Establish the architecture project (see 3.3.1 Establish the
	    Architecture Project)
	-   Identify stakeholders, concerns, and business requirements (see
	    3.3.2 Identify Stakeholders, Concerns, and Business Requirements)
	-   Confirm and elaborate business goals, business drivers, and
	    constraints (see 3.3.3 Confirm and Elaborate Business Goals,
	    Business Drivers, and Constraints)
	-   Evaluate capabilities (see 3.3.4 Evaluate Capabilities)
	-   Assess readiness for business transformation (see 3.3.5 Assess
	    Readiness for Business Transformation)
	-   Define scope (see 3.3.6 Define Scope)
	-   Confirm and elaborate Architecture Principles, including business
	    principles (see 3.3.7 Confirm and Elaborate Architecture Principles,
	    including Business Principles)
	-   Develop Architecture Vision (see 3.3.8 Develop Architecture Vision)
	-   Define the Target Architecture value propositions and KPIs (see
	    3.3.9 Define the Target Architecture Value Propositions and KPIs)
	-   Identify the business transformation risks and mitigation activities
	    (see 3.3.10 Identify the Business Transformation Risks and
	    Mitigation Activities)
	-   Develop Statement of Architecture Work; secure approval (see 3.3.11
	    Develop Statement of Architecture Work; Secure Approval)
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.3_Steps_in_the_Stakeholder_Management_Process "3.3 Steps in the Stakeholder Management Process"
	
	The following sections detail recommended stakeholder management
	activity.
	
snippet togaf_reference-models_digital-business-reference-model_3.3_Strategy_Domain "3.3 Strategy Domain"
	
	The Strategy Domain is addressed by the Strategic Context, Business
	Motivation, and Business Services and Products elements, which are about
	determining the “why” of the business.
	
	Every organization operates within the specific Strategic Context
	irrespective of its nature and the industry. The context may change
	depending on the various forces that drives the industry within which
	the business operates. The business responds to the context, and the
	drivers that keep changing the context, through the Business Motivation
	element. The Business Motivation element focuses on the strategy and the
	associated strategic direction the business must take to remain relevant
	and sustain its existence, within the changing Strategic Context.
	Consequently, this determines the nature of core Business Services and
	Products that the business must focus on to establish the necessary
	competitive edge, in line with their strategic direction.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.3_Views_Tools_and_Languages "3.3 Views, Tools, and Languages"
	
	The need for architecture views, and the process of developing them
	following the ADM, is explained above. This section describes the
	relationships between architecture views, the tools used to develop and
	analyze them, and a standard language enabling interoperability between
	the tools.
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.3_What_is_an_EA_Capability_and_EA "3.3 What is an EA Capability and EA?"
	
	In short, an EA Capability is the ability to develop, use, and sustain
	the architecture of a particular enterprise, and use the architecture to
	govern change.
	
	This Guide discusses establishing and evolving an EA Capability; it
	explicitly does not discuss an EA department or any other organizational
	element. The term Capability is often defined tortuously, most commonly
	when it is used as part of a formal analysis technique when definition
	must be precise and constrained. This Guide uses EA Capability as a
	management concept that facilitates planning improvements in the ability
	to do something that leads to enhanced outcomes enabled by the
	Capability.
	
	In its simplest terms, EA is used to describe the future state of an
	enterprise to guide the change to reach the future state. The
	description of the future state enables key people to understand what
	must be in their enterprise to meet the enterprise’s goals, objective,
	mission, and vision in the context within which the enterprise operates.
	The gap between the enterprise’s current state and future state guides
	what must change within the enterprise.
	
	[]
	
	Figure 2: EA Capability Model[6]
	
	Using the capability model in the World-Class Enterprise Architecture
	White Paper[7] as a base, we assume that an EA Capability is established
	specifically to support one or more purposes. Typically, there are four
	broad purposes of an EA Capability:
	
	-   EA to support Strategy: deliver EA to provide a target architecture,
	    and develop roadmaps of change over a three to ten-year period
	
	    An architecture for this purpose will typically span many change
	    programs or portfolios. In this context, architecture is used to
	    identify change initiatives and supporting portfolio and programs.
	    Set terms of reference, identify synergies, and govern execution of
	    strategy via portfolio and programs.
	
	-   EA to support Portfolio: deliver EA to support cross-functional,
	    multi-phase, and multi-project change initiatives
	
	    An architecture for this purpose will typically span a single
	    portfolio. In this context, architecture is used to identify
	    projects, and set their terms of reference, align their approaches,
	    identify synergies, and govern their execution of projects.
	
	-   EA to support Project: deliver EA to support the enterprise’s
	    project delivery method
	
	    An architecture for this purpose will typically span a single
	    project. In this context, the architecture is used to clarify the
	    purpose and value of the project, identify requirements to address
	    synergy and future dependency, assure compliance with architectural
	    governance, and to support integration and alignment between
	    projects.
	
	-   EA to support Solution Delivery: deliver EA that is used to support
	    the solution deployment[8]
	
	    An architecture for this purpose will typically be a single project
	    or a significant part of it. In this context the architecture is
	    used to define how the change will be designed and delivered,
	    identify constraints, controls and architecture requirements to the
	    design, and finally, act as a governance framework for change.
	
snippet togaf_introduction_3_Core_Concepts_3.3_What_Kind_of_Architecture_Does_the_TOGAF_Standard_Deal_With "3.3 What Kind of Architecture Does the TOGAF Standard Deal With?"
	
	There are four architecture domains that are commonly accepted as
	subsets of an overall Enterprise Architecture, all of which the TOGAF
	Standard is designed to support:
	
	-   The Business Architecture defines the business strategy, governance,
	    organization, and key business processes
	-   The Data Architecture describes the structure of an organization's
	    logical and physical data assets and data management resources
	-   The Application Architecture provides a blueprint for the individual
	    applications to be deployed, their interactions, and their
	    relationships to the core business processes of the organization
	-   The Technology Architecture describes the digital architecture and
	    the logical software and hardware infrastructure capabilities and
	    standards that are required to support the deployment of business,
	    data, and applications services. This includes digital services,
	    Internet of Things (IoT), social media infrastructure, cloud
	    services, IT infrastructure, middleware, networks, communications,
	    processing, standards, etc.
	
	There are many other domains that could be defined by combining
	appropriate views of the Business, Data, Application, and Technology
	domains. For example:
	
	-   Information Architecture
	-   Risk and Security Architectures
	-   Digital Architecture
	
	The TOGAF framework enables the creation of these multi-dimensional
	views and categorizes them to create specific domains that enable an
	enterprise to consider the wider scope of their enterprise and
	capabilities.
	
snippet togaf_architecture-project-management_3.4.1_Authorize_the_Project_Work_Package "3.4.1 Authorize the Project Work Package"
	
	According to the key rule, no Project Work Package should be worked on
	unless clear authorization is given by the Project Manager. The purpose
	is to prevent the project going off track by working on some
	deliverables or tasks until all prerequisites are completed and properly
	processed through approval. Otherwise, the risk of rework or delivery of
	a product that does not comply with quality requirements is high.
	
	The authorization to start the work should be explicitly received from
	the Project Manager along with the following information:
	
	-   What should be delivered, the scope, and expected product of the
	    Project Work Package
	-   The cost and time of work on the delivery of the product and its
	    tolerances that often come from the free-float of the schedule or
	    other constraints that need to be identified and communicated by the
	    Project Manager
	-   Specific information about quality requirements and configuration
	    management required for this process
	-   Specific information about required reporting and distribution of
	    information that would support the control and monitoring of
	    progress
	
	It should also by clearly communicated to the team that authorization is
	required before they can start any activity related to the Project Work
	Package. Even if the team feels like all prerequisites are completed,
	there might be – and often are – situations where there are additional
	questions that need to be addressed before the work can continue and all
	details related to the product are properly defined.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.4.1_Example_of_Architecture_Views_and_Architecture_Viewpoints "3.4.1 Example of Architecture Views and Architecture Viewpoints"
	
	To illustrate the concepts of architecture views and architecture
	viewpoints, consider the example of a very simple airport system with
	two different stakeholders: the pilot and the air traffic controller.
	
	One architecture view can be developed from the architecture viewpoint
	of the pilot, which addresses the pilot's concerns. Equally, another
	architecture view can be developed from the architecture viewpoint of
	the air traffic controller. Neither architecture view completely
	describes the system in its entirety, because the architecture viewpoint
	of each stakeholder constrains (and reduces) how each sees the overall
	system.
	
	The architecture viewpoint of the pilot comprises some concerns that are
	not relevant to the controller, such as passengers and fuel, while the
	architecture viewpoint of the controller comprises some concerns not
	relevant to the pilot, such as other planes. There are also elements
	shared between the two architecture viewpoints, such as the
	communication model between the pilot and the controller, and the vital
	information about the plane itself.
	
	An architecture viewpoint is a model (or description) of the information
	contained in a view. In our example, one architecture viewpoint is the
	description of how the pilot sees the system, and the other architecture
	viewpoint is how the controller sees the system.
	
	Pilots describe the system from their perspective, using a model of
	their position and vector toward or away from the runway. All pilots use
	this model, and the model has a specific language that is used to
	capture information and populate the model.
	
	Controllers describe the system differently, using a model of the
	airspace and the locations and vectors of aircraft within the airspace.
	Again, all controllers use a common language derived from the common
	model in order to capture and communicate information pertinent to their
	architecture viewpoint.
	
	Fortunately, when controllers talk with pilots, they use a common
	communication language. (In other words, the models representing their
	individual architecture viewpoints partially intersect.) Part of this
	common language is about location and vectors of aircraft, and is
	essential to safety.
	
	So, in essence, each architecture viewpoint is an abstract model of how
	all the stakeholders of a particular type — all pilots, or all
	controllers — view the airport system.
	
	Tools exist to assist stakeholders, especially when they are interacting
	with complex models such as the model of an airspace, or the model of
	air flight.
	
	The interface to the human user of a tool is typically close to the
	model and language associated with the architecture viewpoint. The
	unique tools of the pilot are fuel, altitude, speed, and location
	indicators. The main tool of the controller is radar. The common tool is
	a radio.
	
	To summarize from the above example, we can see that an architecture
	view can subset the system through the perspective of the stakeholder,
	such as the pilot versus the controller. This subset can be described by
	an abstract model called an architecture viewpoint, such as an air
	flight versus an air space model. This description of the architecture
	view is documented in a partially specialized language, such as
	"pilot-speak" versus "controller-speak". Tools are used to assist the
	stakeholders, and they interface with each other in terms of the
	language derived from the architecture viewpoint ("pilot-speak" versus'
	"controller-speak").
	
	When stakeholders use common tools, such as the radio contact between
	pilot and controller, a common language is essential.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.4.2_Architecture_Views_and_Architecture_Viewpoints_in_Enterprise_Architecture "3.4.2 Architecture Views and Architecture Viewpoints in Enterprise Architecture"
	
	Now let us map this example to the Enterprise Architecture. Consider two
	stakeholders in a new small computing system: the users and the
	developers.
	
	The users of the system have an architecture viewpoint that reflects
	their concerns when interacting with the system, and the developers of
	the system have a different architecture viewpoint. Architecture views
	that are developed to address either of the two architecture viewpoints
	are unlikely to exhaustively describe the whole system, because each
	perspective reduces how each sees the system.
	
	The architecture viewpoint of the user is comprised of all the ways in
	which the user interacts with the system, not seeing any details such as
	applications or Database Management Systems (DBMS).
	
	The architecture viewpoint of the developer is one of productivity and
	tools, and doesn't include things such as actual live data and
	connections with consumers.
	
	However, there are things that are shared, such as descriptions of the
	processes that are enabled by the system and/or communications protocols
	set up for users to communicate problems directly to development.
	
	In this example, one architecture viewpoint is the description of how
	the user sees the system, and the other architecture viewpoint is how
	the developer sees the system. Users describe the system from their
	perspective, using a model of availability, response time, and access to
	information. All users of the system use this model, and the model has a
	specific language.
	
	Developers describe the system differently than users, using a model of
	software connected to hardware distributed over a network, etc. However,
	there are many types of developers (database, security, etc.) of the
	system, and they do not have a common language derived from the model.
	
snippet togaf_architecture-project-management_3.4.2_Review_Project_Work_Package_Status "3.4.2 Review Project Work Package Status"
	
	As defined in the Project Plan and Project Work Package authorization
	step, the team that is carrying out the work should submit the reports
	(checkpoint reports) to the Project Manager at regular, agreed intervals
	to allow for continuous control of progress and to identify risks
	related to timely completion of the Project Work Package.
	
	The input received from teams is the base for the Project Manager to
	report the progress to stakeholders and make decisions for required
	adjustments for schedule, budget, and other relevant forecasts. This is
	also a key point for identification of risks and problems that may
	impact assumed deadlines, quality, or cost baseline.
	
	In practice, the review of the Project Work Package status is carried
	out in a form of status meetings with the Project Management team and
	Project Work Package team working on the particular package. It is
	highly recommended to perform the status review in meeting form in
	addition to written form, since more information and details can be
	obtained and any unclear points can be discussed.
	
	Reviewing the status of the Project Work Packages also allows
	identification of the areas of the project or products where work is not
	being progressed as originally planned. This may happen due to multiple
	internal and external factors. It might be a case of underestimation of
	the time and effort needed to complete the work, or any other change in
	the Project Scope, schedule, or effort (budget). Any change should be
	subject to the formal change control procedure.
	
	The change control procedure is extremely important from a Project
	Management perspective. It is to ensure that whatever was agreed to be
	delivered as project products, schedule, or cost baseline is under
	control, and can be changed only in a formal way. The procedure varies
	between projects and organizations: sometimes the Project Manager has
	certain authority to make decisions for changes in the project (for
	example, not exceeding a certain cost threshold), and in some cases only
	the Steering Committee of the project can approve the change requested.
	It is very important that the change is not incorporated in the project
	until it is approved.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.4.3_Need_for_a_Common_Language_and_Interoperable_Tools_for_Architecture_Description "3.4.3 Need for a Common Language and Interoperable Tools for Architecture Description"
	
	Tools exist for both users and developers. Tools such as online help are
	there specifically for users, and attempt to use the language of the
	user. Many different tools exist for different types of developers, but
	they suffer from the lack of a common language that is required to bring
	the system together. It is difficult, if not impossible, in the current
	state of the tools market to have one tool interoperate with another
	tool.
	
	Issues relating to the evaluation of tools for architecture work are
	discussed in detail in the TOGAF Standard — Architecture Development
	Method.
	
snippet togaf_architecture-project-management_3.4.3_Review_Completed_Project_Work_Package "3.4.3 Review Completed Project Work Package"
	
	Once the work on the Project Work Package is completed and the final
	product of the package is ready and approved, the Project Work Package
	is marked complete by the Project Manager, and related successor Project
	Work Packages can be authorized as described in the Authorizing Project
	Work Package task.
	
snippet togaf_architecture-project-management_3.4.4_Review_Stage_Status "3.4.4 Review Stage Status"
	
	The Project Manager must review the overall status of the stage in order
	to ensure control over the progress being made. To effectively do that,
	the Project Manager should review all management products such as
	checkpoint reports, the current stage plan, the various registers and
	logs (quality register, issue register, risk register, and daily log),
	also including the benefits review plan. Based on these inputs, the
	overall project status is estimated and recorded (for example, using the
	MS Project^(®) tool). This should present the overall stage or project
	status to stakeholders.
	
snippet togaf_architecture-project-management_3.4.5_Capture_and_Examine_Issues_and_Risks "3.4.5 Capture and Examine Issues and Risks"
	
	Risk management becomes even more critical during the project execution
	and control phase. It is important for the Project Manager to regularly
	conduct risk assessments. Particular attention should be paid to risks
	prior to production cutover.
	
	Following the strategy, processes, and procedures established during
	project start-up, the Project Manager must make sure that all project
	issues are carefully and accurately logged, prioritized, and assigned
	for closure. Moreover, it is the Project Manager’s responsibility to
	drive open issues to a closure that fulfills the requirements.
	
	On a regular basis, the Project Manager should perform risk assessments.
	The following steps should be performed:
	
	-   Revisit risks defined in the risk log and include new risks as
	    appropriate
	-   Categorize, assess, and analyze the probability and severity of each
	    risk
	-   Determine symptoms that would indicate that risks may be occurring
	-   Prepare a mitigation and response plan for each risk
	-   Report results of risk assessment
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The Project Manager decides to    |
	|                                   | hold a weekly status meeting to   |
	|                                   | keep track of the stage progress  |
	|                                   | and control the process. Since    |
	|                                   | the project timeline extends over |
	|                                   | a few months, he decides that a   |
	|                                   | weekly meeting is sufficient. In  |
	|                                   | case of more aggressive schedules |
	|                                   | more frequent meetings may be     |
	|                                   | better to allow for faster        |
	|                                   | information flow and shorter      |
	|                                   | reaction time to any unplanned    |
	|                                   | situations. A weekly meeting does |
	|                                   | not replace a daily routine for   |
	|                                   | communication and information     |
	|                                   | exchange, but is the best tool to |
	|                                   | ensure unified communication to   |
	|                                   | the team and collecting feedback. |
	|                                   |                                   |
	|                                   | The Project Manager prepares the  |
	|                                   | agenda for the meetings around a  |
	|                                   | common schema:                    |
	|                                   |                                   |
	|                                   | -   Review of progress to date –  |
	|                                   |     this allows the Project       |
	|                                   |     Manager to collect and        |
	|                                   |     discuss information about the |
	|                                   |     status of the stage, some     |
	|                                   |     details on Project Work       |
	|                                   |     Packages completion, and to   |
	|                                   |     identify and discuss risks    |
	|                                   |     that may impact the assumed   |
	|                                   |     work plan                     |
	|                                   |                                   |
	|                                   | At the same time, completed       |
	|                                   | Project Work Packages are         |
	|                                   | confirmed and the Project Manager |
	|                                   | makes sure that the final         |
	|                                   | versions of the Project Work      |
	|                                   | Packages are delivered for the    |
	|                                   | approval process.                 |
	|                                   |                                   |
	|                                   | -   Confirm the plan for next     |
	|                                   |     period of time (usually a     |
	|                                   |     week) – this is part of the   |
	|                                   |     status control in terms of    |
	|                                   |     confirmation of tasks to be   |
	|                                   |     worked on during the          |
	|                                   |     following week.               |
	|                                   |                                   |
	|                                   | In case of tasks that are a       |
	|                                   | continuation of current Project   |
	|                                   | Work Packages, this serves as     |
	|                                   | information about what progress   |
	|                                   | is expected to be achieved over   |
	|                                   | the period. If the Project Plan   |
	|                                   | defines a new Project Work        |
	|                                   | Package to start in the next      |
	|                                   | period, this needs to be clearly  |
	|                                   | communicated to the team; if      |
	|                                   | there is a “green light” to start |
	|                                   | the work, or what needs to happen |
	|                                   | before the green light is given.  |
	|                                   |                                   |
	|                                   | -   Identify and examine risks    |
	|                                   |     and issues – most risks and   |
	|                                   |     issues come from team         |
	|                                   |     members.                      |
	|                                   |                                   |
	|                                   | They can identify most potential  |
	|                                   | situations (missing input data,   |
	|                                   | additional work,                  |
	|                                   | misunderstandings and mismanaged  |
	|                                   | expectations, etc.) that may      |
	|                                   | impact the project, but also      |
	|                                   | information from project          |
	|                                   | surroundings that is shared by    |
	|                                   | the Project Manager based on his  |
	|                                   | sources of information is         |
	|                                   | discussed as a potential risk or  |
	|                                   | issue. Once identified, risks or  |
	|                                   | issues (issue is a materialized   |
	|                                   | risk) are documented in a simple  |
	|                                   | spreadsheet by the Project        |
	|                                   | Manager for further tracking.     |
	|                                   |                                   |
	|                                   | []                                |
	|                                   |                                   |
	|                                   | -   The Project Manager decides   |
	|                                   |     what needs to be done next –  |
	|                                   |     usually he holds a quick      |
	|                                   |     meeting with all parties that |
	|                                   |     are affected by the risk or   |
	|                                   |     issue to examine it further   |
	|                                   |     and plan for mitigation       |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.4.6_Report_Highlights "3.4.6 Report Highlights"
	
	Based on collected information, the Project Manager should build the
	proper and tailored message that should be communicated to the project
	stakeholders. This involves creating the time-driven Highlight Report,
	which presents the current achievements and actual progress of the
	project, and also describes any corrective actions that the Project
	Manager may intend to carry out, as well as forecasts for the remainder
	of the stage and the project.
	
	The level of detail that should be provided to stakeholders varies
	between projects and each particular stakeholder. It should be defined
	per particular situation taking into account the actual requirements and
	particular preferences of each and every stakeholder. In practice, the
	minimum set of details should be:
	
	-   Achievements and tasks completed over the last reporting period to
	    explain what was done and how it related to the original project
	    schedule and plan
	-   Key activities planned for the next period – it is important, and
	    helps to keep track of progress made, to keep both points integral
	    by showing the same list of achievements that was presented in the
	    last period as the planned tasks
	-   Key risks and problems identified, especially these that require the
	    attention of the stakeholders or escalation
	-   Quite often the report contains also some tracking for changes
	    unapproved and approved that were introduced to the project (using
	    the formal change control process), open issues, or decisions that
	    need to be made by stakeholders
	
	+-----------------------------------+-----------------------------------+
	| Example                           | Based on the information          |
	|                                   | collected during the weekly       |
	|                                   | status meeting, the Project       |
	|                                   | Manager prepares the status       |
	|                                   | report for management and         |
	|                                   | stakeholders, as defined in the   |
	|                                   | communication plan. The form and  |
	|                                   | content of the report depends on  |
	|                                   | the expectations and preferences  |
	|                                   | of the report audience. Some      |
	|                                   | prefer a simple one-page summary  |
	|                                   | of progress to date, key          |
	|                                   | activities for the next period of |
	|                                   | time, key risks, and issues;      |
	|                                   | while other stakeholders expect   |
	|                                   | detailed presentations with a     |
	|                                   | deep-dive on risks and content of |
	|                                   | the delivered Project Work        |
	|                                   | Packages.                         |
	|                                   |                                   |
	|                                   | For this project, the Project     |
	|                                   | Manager discussed the             |
	|                                   | expectations with key             |
	|                                   | stakeholders, and he is expected  |
	|                                   | to prepare a one-page weekly      |
	|                                   | report, highlighting the key      |
	|                                   | activities and risks, and to      |
	|                                   | discuss it with stakeholders on   |
	|                                   | the weekly briefing within 15     |
	|                                   | minutes. The Project Manager      |
	|                                   | decides to present three bullets  |
	|                                   | per area: achievements to date,   |
	|                                   | plans for the next period, three  |
	|                                   | or four of the most important     |
	|                                   | risks and issues, and also the    |
	|                                   | most important decisions to be    |
	|                                   | made by the stakeholders.         |
	|                                   |                                   |
	|                                   | Once per month a more detailed    |
	|                                   | report is prepared and presented  |
	|                                   | to the Steering Committee of the  |
	|                                   | project during a 45-minute        |
	|                                   | meeting. More discussion and      |
	|                                   | details are presented, including  |
	|                                   | a plan for team interaction       |
	|                                   | meetings with other employees of  |
	|                                   | the company for the next period   |
	|                                   | of time (1 month in this case),   |
	|                                   | to confirm the schedule with      |
	|                                   | decision-makers and ensure their  |
	|                                   | awareness and support, and more   |
	|                                   | details on risks and issues       |
	|                                   | especially if escalation is       |
	|                                   | required.                         |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.4.7_Escalate_Issues_and_Risks "3.4.7 Escalate Issues and Risks"
	
	In cases where handling a risk or problem exceeds the authority of the
	Project Manager, it is necessary to escalate to the Project
	Board/Steering Committee. This must be done especially when a risk or
	problem exceeds the tolerance assigned to it. PRINCE2 defines this as an
	exception and triggers an Exception Report, which is written by the
	Project Manager and submitted to the Steering Committee for further
	action.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | The 15-minute status meetings     |
	|                                   | with key stakeholders and the     |
	|                                   | Steering Committee are the        |
	|                                   | perfect occasion to escalate      |
	|                                   | risks or issues that need to be   |
	|                                   | taken up in the chain of command. |
	|                                   | Of course most of these issues    |
	|                                   | are discussed by the Project      |
	|                                   | Manager with stakeholders before  |
	|                                   | the meeting, once risks are       |
	|                                   | identified, but these meetings    |
	|                                   | present a good opportunity to     |
	|                                   | discuss them further and perhaps  |
	|                                   | get the involvement and support   |
	|                                   | of someone else from the          |
	|                                   | management team or Steering       |
	|                                   | Committee. For risks and issues   |
	|                                   | that were not identified as       |
	|                                   | exceeding the authority of the    |
	|                                   | Project Manager, but may still    |
	|                                   | impact the project heavily, the   |
	|                                   | Project Manager decides to share  |
	|                                   | his mitigation plan as well to    |
	|                                   | communicate such a situation, but |
	|                                   | also – quite often – he is given  |
	|                                   | support by Steering Committee     |
	|                                   | board that makes the mitigation   |
	|                                   | process easier.                   |
	|                                   |                                   |
	|                                   | In Project E, the architect       |
	|                                   | identifies that some of the data  |
	|                                   | warehouse calculations should be  |
	|                                   | done in a COTS calculation engine |
	|                                   | solution possessed by the bank.   |
	|                                   | However, the business analyst     |
	|                                   | team does not have any knowledge  |
	|                                   | of this solution. There is a risk |
	|                                   | that they would be unable to      |
	|                                   | model the calculations process    |
	|                                   | adequately to the calculation     |
	|                                   | engine capabilities. Therefore,   |
	|                                   | the architect collaborates with   |
	|                                   | the Project Manager to describe   |
	|                                   | the risk. It is recorded in the   |
	|                                   | risk log.                         |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_3.4.8_Take_Corrective_Action "3.4.8 Take Corrective Action"
	
	During this stage, the Project Work Package is revised in comparison
	with the existing plan. Evaluation of risks, problems, and discrepancies
	between the plan and the Project Work Package are done as part of this
	review. The stage status often ends with a conclusion that certain
	actions need to be taken to bring the project back on track. These are
	corrective actions and they should become the integral part of the
	Project Plan and schedule. The goal is to address all situations that
	already did or are expected to impact the plan and schedule in negative
	form.
	
	+-----------------------------------+-----------------------------------+
	| Example                           | Based on risk or issue evaluation |
	|                                   | and discussion with the Steering  |
	|                                   | Committee or stakeholders, a plan |
	|                                   | is created to make sure the risk  |
	|                                   | or issue has a minimal negative   |
	|                                   | (or maximum positive) impact on   |
	|                                   | the project. The Project Manager  |
	|                                   | adds these tasks to the Project   |
	|                                   | Plan in the Project Work Package  |
	|                                   | that is affected by the risk or   |
	|                                   | issue. Tasks are also put on the  |
	|                                   | timeline and the task owner is    |
	|                                   | assigned as for every other task  |
	|                                   | of the project. Corrective action |
	|                                   | becomes an integral part of the   |
	|                                   | project and from here on is being |
	|                                   | tracked, reported, and controlled |
	|                                   | in the same way as any other task |
	|                                   | in the plan.                      |
	|                                   |                                   |
	|                                   | In reference to the previous      |
	|                                   | example, the Project E Project    |
	|                                   | Manager collaborates with the     |
	|                                   | architect and the business        |
	|                                   | analysis leader to design a risk  |
	|                                   | mitigation. They recommend that   |
	|                                   | two of the business analysts      |
	|                                   | would be trained on the           |
	|                                   | calculation engine solution       |
	|                                   | capabilities. Then, they will use |
	|                                   | this knowledge to guide the       |
	|                                   | calculations process analysis to  |
	|                                   | make use of the calculation       |
	|                                   | engine capabilities.              |
	|                                   |                                   |
	|                                   | Later on, the Project Manager     |
	|                                   | collaborates with the management  |
	|                                   | team to formally accept this      |
	|                                   | mitigation and proceed with it.   |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_3_Core_Concepts_3.4_Architecture_Development_Method "3.4 Architecture Development Method"
	
	The TOGAF Architecture Development Method (ADM) provides a tested and
	repeatable process for developing architectures. The ADM includes
	establishing an architecture framework, developing architecture content,
	transitioning, and governing the realization of architectures.
	
	All of these activities are carried out within an iterative cycle of
	continuous architecture definition and realization that allows
	organizations to transform their enterprises in a controlled manner in
	response to business goals and opportunities. This is illustrated in
	Figure 3-1 .
	
	[]
	
	Figure 3-1: Architecture Development Cycle
	
	Phases within the ADM are as follows:
	
	-   The Preliminary Phase describes the preparation and initiation
	    activities required to create an Architecture Capability including
	    customization of the TOGAF framework and definition of Architecture
	    Principles
	
	-   Phase A: Architecture Vision describes the initial phase of an
	    architecture development cycle
	
	    It includes information about defining the scope of the architecture
	    development initiative, identifying the stakeholders, creating the
	    Architecture Vision, and obtaining approval to proceed with the
	    architecture development.
	
	-   Phase B: Business Architecture describes the development of a
	    Business Architecture to support the agreed Architecture Vision
	
	-   Phase C: Information Systems Architectures describes the development
	    of Information Systems Architectures to support the agreed
	    Architecture Vision
	
	-   Phase D: Technology Architecture describes the development of the
	    Technology Architecture to support the agreed Architecture Vision
	
	-   Phase E: Opportunities & Solutions conducts initial implementation
	    planning and the identification of delivery vehicles for the
	    architecture defined in the previous phases
	
	-   Phase F: Migration Planning addresses how to move from the Baseline
	    to the Target Architectures by finalizing a detailed Implementation
	    and Migration Plan
	
	-   Phase G: Implementation Governance provides an architectural
	    oversight of the implementation
	
	-   Phase H: Architecture Change Management establishes procedures for
	    managing change to the new architecture
	
	-   Requirements Management operates the process of managing
	    architecture requirements throughout the ADM
	
	The description of the phases of the ADM in the TOGAF Standard —
	Architecture Development Method focuses on recommendations on what may
	be done to define and deploy an Enterprise Architecture.
	
	Guidance on how to do what is specified can be found in the TOGAF Series
	Guides (see 2.2 The TOGAF Standard). A full list of referenced TOGAF
	Series Guides is included in A. Referenced Documents .
	
	The TOGAF framework recommends that the ADM be adapted to meet the needs
	of the enterprise and to support different architecture styles (see 3.16
	Using the TOGAF Framework with Different Architecture Styles).
	
	In particular, the ADM does not:
	
	-   Mandate that the phases must be performed in any specific sequence
	-   Mandate a "waterfall" method
	
	The TOGAF Standard describes how the ADM can be used iteratively to
	develop a comprehensive Enterprise Architecture landscape. Rather than
	viewing the ADM graphic as a process model, it is helpful to view it as
	a reference model defining what has to be done in order to deliver
	solutions in an architected way and identifying interacting components
	across the enterprise and the relationships between them.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.4_Architecture_Views_and_Architecture_Viewpoints "3.4 Architecture Views and Architecture Viewpoints"
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3.4_Conclusion "3.4 Conclusion"
	
	In order to guide effective change, Practitioners have to understand
	complex systems and analyze the possible ways to improve the complex
	system against a set of usually contradictory preferences. In order to
	understand and analyze a complex system, good Practitioners will
	represent the system in a set of models. These models are the
	architecture – a description of the system in terms of components and
	their relationships. Over time, through multiple Architecture Projects,
	the EA Landscape is populated.
	
	Using an architecture requires translation of the models to a form that
	is useful to non-specialists. Practitioners should not expect
	stakeholders, implementers, decision-makers, or anyone else to
	understand the models’ specialized language, structure, and limitations.
	
	Practitioners need to communicate with three broad communities:
	stakeholders, decision-makers, and implementers. Each of these
	communities uses the architecture differently.
	
	Stakeholders are presented with views that address their concerns. This
	enables stakeholders to understand the architecture, engage in trade-off
	decisions, and finally approve the Target Architecture.
	
	Implementers need to understand their project. First, where their
	project fits within the roadmap, and its role in producing value.
	Second, what work packages and gaps they are responsible for, as well as
	associated gaps they are not responsible for. Third, how conformance
	will be assessed.
	
	Decision-makers’ communication often falls into the category of “other
	useful things”, where Practitioners communicate timing of change and
	value, prior decisions, status, budget, and confidence. All
	Practitioners need to keep in mind that informal communication, outside
	the scope of models, architectures, views, roadmaps, specification, or
	compliance recommendations, are the most important communication that
	will be undertaken.
	
	An effectively communicated architecture is one that provides
	confidence. The importance of confidence cannot be underestimated.
	Confidence that the architecture and associated roadmap of change is the
	guidance the Enterprise should follow. With confidence, an Enterprise’s
	leadership will use the EA to direct and govern effective change.
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.4_EA_Lifecycle "3.4 EA Lifecycle"
	
	Whether the enterprise is embarking on establishing an EA Capability for
	the first time, is enhancing or re-booting an existing EA Capability,
	this Guide provides an approach to lead the EA Capability lifecycle and
	maturity. In all cases, the best practice is to establish a roadmap that
	provides an end-state and a set of capability increments.
	
	At the time of writing, the most common EA Capability industry practice
	is a re-boot after a failed attempt to establish an EA Capability.[9]
	When enhancing an existing EA Capability or performing a re-boot, it is
	recommended to perform the activities described in Chapter 4 (Enterprise
	Context and EA Context) and Chapter 5 (Business Objectives for the EA
	Capability). These activities assist in identifying the pitfalls prior
	efforts ran into, and strongly influence the external Communication Plan
	and Roadmap. The following questions exemplify oversimplified thinking
	in an EA lifecycle:
	
	-   Should the EA team be created first and then develop the capability
	    with the team?
	-   Are charter and sponsorship good enough starting points?
	-   Is the best starting point for EA practice understanding the
	    enterprise and its external interactions or understanding the team
	    that chartered the EA Capability team?
	-   Is there a need for a formal toolset at the beginning of the
	    initiative or is back-of-napkin documentation enough?
	
	This Guide discusses such questions as pragmatically and generically as
	possible to frame a proper starting point. This Guide follows a best
	practice approach based upon work that has established some of the most
	successful long-lasting EA Capability teams.
	
snippet togaf_architecture-project-management_3.4_Execute_Monitor_and_Control_a_Stage "3.4 Execute, Monitor, and Control a Stage"
	
	+-----------------------------------+-----------------------------------+
	|                                   | Both PRINCE2 and PMBOK            |
	|                                   | distinguish between monitoring    |
	|                                   | and controlling the stage and     |
	|                                   | directing or executing the work.  |
	|                                   | These groups of processes serve a |
	|                                   | different purpose and focus on    |
	|                                   | different individual processes;   |
	|                                   | however, from daily Project       |
	|                                   | Management routines they are      |
	|                                   | executed in parallel. For         |
	|                                   | practical reasons in this Guide   |
	|                                   | we decided to present both groups |
	|                                   | – directing (PRINCE2) or          |
	|                                   | executing (PMBOK) and monitoring  |
	|                                   | and control – as a one chapter    |
	|                                   | covering both areas.              |
	|                                   |                                   |
	|                                   | For more details, please refer to |
	|                                   | the PRINCE2 and PMBOK methods.    |
	+-----------------------------------+-----------------------------------+
	
	Execution, monitoring, and controlling a stage is a core activity of the
	Project Manager within every stage of the project. This means making
	sure that the work is being properly assigned, tracking work progress,
	and reacting to unforeseen situations, as well as making sure that the
	proper information is being distributed to the required parties.
	
	There are few activities assigned to this process by the PRINCE2 method.
	From the PMBOK perspective, these activities are a part of Monitor &
	Control, just narrowed down to the specific phase of the project. Since
	most of the actions are ongoing throughout the stage it is difficult to
	set the sequence or describe the order.
	
snippet togaf_guides_microservices-architecture_3.4_Implications_for_Application_Architecture "3.4 Implications for Application Architecture"
	
	Monolithic application owners have the luxury of making decisions for
	all components of an application, whereas distributed systems based on
	microservices will have dependencies and constraints imposed by the
	owners of the microservices consumed by the apps.
	
	APIs will become much more prevalent and backwards-compatibility will be
	a growing challenge depending on the complexity of the application and
	the number of services it consumes. The mandate for microservices to be
	self-contained results in architectures with less complexity than
	monolithic architectures. Scalability, elasticity, and resiliency become
	important non-functional characteristics especially for microservices
	that are re-used heavily across the enterprise or by a large number of
	consumers (i.e., consuming applications and ultimately the total number
	of transactions per day).
	
snippet togaf_applying-the-adm_3_Applying_the_ADM_Across_the_Architecture_Landscape_3.4_Organizing_the_Architecture_Landscape_to_Understand_the_State_of_the_Enterprise "3.4 Organizing the Architecture Landscape to Understand the State of the Enterprise"
	
	The following characteristics are typically used to organize the
	Architecture Landscape:
	
	-   Breadth: the breadth (subject matter) area is generally the primary
	    organizing characteristic for describing an Architecture Landscape
	
	    Architectures are functionally decomposed into a hierarchy of
	    specific subject areas or segments.
	
	-   Depth: with broader subject areas, less detail is needed to ensure
	    that the architecture has a manageable size and complexity
	
	    More specific subject matter areas will generally permit (and
	    require) more detailed architectures.
	
	-   Time: for a specific breadth and depth an enterprise can create a
	    Baseline Architecture and a set of Target Architectures that stretch
	    into the future
	
	    Broader and less detailed architectures will generally be valid for
	    longer periods of time and can provide a vision for the enterprise
	    that stretches further into the future.
	
	-   Recency: finally, each architecture view will progress through a
	    development cycle where it increases in accuracy until finally
	    approved
	
	    After approval, an architecture will begin to decrease in accuracy
	    if not actively maintained. In some cases recency may be used as an
	    organizing factor for historic architectures.
	
	Using the criteria above, architectures can be grouped into Strategic,
	Segment, and Capability Architecture levels, as described in Figure 3-1
	.
	
snippet togaf_adm_3_A_Architecture_Vision_3.4_Outputs "3.4 Outputs"
	
	The outputs of Phase A may include, but are not restricted to:
	
	-   Approved Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content), including in particular:
	    -   Architecture project description and scope
	    -   Overview of Architecture Vision
	    -   Architecture project plan and schedule
	-   Refined statements of business principles, business goals, and
	    business drivers (see the TOGAF Standard — Architecture Content)
	-   Architecture Principles (see the TOGAF Standard — ADM Techniques)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content) (for the engagement), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Architecture Vision (see the TOGAF Standard — Architecture Content),
	    including:
	    -   Problem description
	    -   Objective of the Statement of Architecture Work
	    -   Summary views
	    -   Business scenario (optional)
	    -   Refined key high-level stakeholder requirements
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	-   Additional content populating the Architecture Repository (see the
	    TOGAF Standard — Architecture Content)
	
	Note:
	    Multiple business scenarios may be used to generate a single
	    Architecture Vision.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase, describing them in detail and relating them to entities,
	attributes, and relationships in the TOGAF Enterprise Metamodel.
	
snippet togaf_reference-models_digital-business-reference-model_3.4_Structural_Domain "3.4 Structural Domain"
	
	Underpinning the core Business Services and Products element are the
	elements of the DBRM that focus on the “what” of the business – the
	Ecosystem and Business Model, Operating Model, and Business Capability
	Model are inter-related. They collectively define the means with which
	the business will establish and deliver the identified core business
	services to achieve the intended business objectives as defined in the
	Business Motivation element. They address the Structural Domain of the
	DBRM.
	
	The definition of the Structural Domain – Ecosystem and Business Model,
	Operating Model, and Business Capability Model – will enable the
	business to consistently respond to its underlying operational
	environment and thus effectively utilize organizational resources to
	realize the intended strategic direction of the business.
	
snippet togaf_adm-techniques_3_Stakeholder_Management_3.4_Template_Stakeholder_Map "3.4 Template Stakeholder Map"
	
	The following table provides an example stakeholder map for a TOGAF
	architecture project which has stakeholders as identified in Figure 3-1
	.
	
	+-----------------+-----------------+-----------------+-----------------+
	| Stakeholder     | Key Concerns    | Class           | Catalogs,       |
	|                 |                 |                 | Matrices, and   |
	|                 |                 |                 | Diagrams        |
	+:================+:================+:================+:================+
	| CxO             | The high-level  | KEEP            | Business        |
	| (Corporate      | drivers, goals, | SATISFIED       | Footprint       |
	| Functions);     | and objectives  |                 | diagram         |
	| e.g., CEO, CFO, | of the          |                 |                 |
	| CIO, COO        | organization,   |                 | Goal/Obj        |
	|                 | and how these   |                 | ective/Business |
	|                 | are translated  |                 | Service diagram |
	|                 | into an         |                 |                 |
	|                 | effective       |                 | Organization    |
	|                 | process and IT  |                 | Decomposition   |
	|                 | architecture to |                 | diagram         |
	|                 | advance the     |                 |                 |
	|                 | business.       |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Program         | Prioritizing,   | KEEP            | Requirements    |
	| Management      | funding, and    | SATISFIED       | catalog         |
	| Office          | aligning change |                 |                 |
	| (Corporate      | activity. An    |                 | Project Context |
	| Functions);     | understanding   |                 | diagram         |
	| e.g., Project   | of project      |                 |                 |
	| Portfolio       | content and     |                 | Benefits        |
	| Managers        | technical       |                 | diagram         |
	|                 | dependencies    |                 |                 |
	|                 | between         |                 | Business        |
	|                 | projects        |                 | Footprint       |
	|                 | supports        |                 | diagram         |
	|                 | portfolio       |                 |                 |
	|                 | management      |                 | Application     |
	|                 | d               |                 | Communication   |
	|                 | ecision-making. |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Organization    |
	|                 |                 |                 | map             |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Procurement     | Understanding   | KEY             | Technology      |
	| (Corporate      | what building   | PLAYERS         | Portfolio       |
	| Functions);     | blocks of the   |                 | catalog         |
	| e.g., Acquirers | architecture    |                 |                 |
	|                 | can be bought,  |                 | Technology      |
	|                 | and what        |                 | Standards       |
	|                 | constraints (or |                 | catalog         |
	|                 | rules) are      |                 |                 |
	|                 | relevant to the |                 |                 |
	|                 | purchase.       |                 |                 |
	|                 | Acquirers will  |                 |                 |
	|                 | shop with       |                 |                 |
	|                 | multiple        |                 |                 |
	|                 | vendors looking |                 |                 |
	|                 | for the best    |                 |                 |
	|                 | cost solution   |                 |                 |
	|                 | while adhering  |                 |                 |
	|                 | to the          |                 |                 |
	|                 | constraints (or |                 |                 |
	|                 | rules) derived  |                 |                 |
	|                 | from the        |                 |                 |
	|                 | architecture,   |                 |                 |
	|                 | such as         |                 |                 |
	|                 | standards. The  |                 |                 |
	|                 | key concern is  |                 |                 |
	|                 | to make         |                 |                 |
	|                 | purchasing      |                 |                 |
	|                 | decisions that  |                 |                 |
	|                 | fit the         |                 |                 |
	|                 | architecture.   |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Human Resources | The roles and   | KEEP            | Organization    |
	| (HR)            | actors are      | INFORMED        | Decomposition   |
	| (Corporate      | required to     |                 | diagram         |
	| Functions);     | support the     |                 |                 |
	| e.g., HR        | architecture    |                 | Org             |
	| Managers,       | and changes to  |                 | anization/Actor |
	| Training &      | it. The key     |                 | catalog         |
	| Development     | concern is      |                 |                 |
	| Managers        | managing people |                 | Location        |
	|                 | transitions.    |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application and |
	|                 |                 |                 | User Location   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| Enterprise      | Ensuring that   | KEY             | Product         |
	| Security        | the             | PLAYERS         | Lifecycle       |
	| (Corporate      | information,    |                 | diagram         |
	| Functions);     | data, and       |                 |                 |
	| e.g., Corporate | systems of the  |                 | Data            |
	| Risk            | organization    |                 | Dissemination   |
	| Management,     | are available   |                 | diagram         |
	| Security        | to only those   |                 |                 |
	| Officers, IT    | that have       |                 | Data Security   |
	| Security        | permission, and |                 | diagram         |
	| Managers        | protecting the  |                 |                 |
	|                 | information,    |                 | Actor/Role      |
	|                 | data, and       |                 | matrix          |
	|                 | systems from    |                 |                 |
	|                 | unauthorized    |                 | Networked       |
	|                 | tampering.      |                 | Computing       |
	|                 |                 |                 | Hardware        |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Network and     |
	|                 |                 |                 | Communications  |
	|                 |                 |                 | diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| QA/Standards    | Ensuring the    | KEY             | Process/Event/  |
	| Group           | consistent      | PLAYERS         | Control/Product |
	| (Corporate      | governance of   |                 | catalog         |
	| Functions);     | the             |                 |                 |
	| e.g., Data      | organization's  |                 | C               |
	| Owners, Process | business, data, |                 | ontract/Measure |
	| Owners,         | application,    |                 | catalog         |
	| Technical       | and technology  |                 |                 |
	| Standards       | assets.         |                 | Application     |
	| Bodies          |                 |                 | Portfolio       |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Interface       |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Technology      |
	|                 |                 |                 | Standards       |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Technology      |
	|                 |                 |                 | Portfolio       |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Executive       | The high-level  | KEEP            | Business        |
	| (End-user       | drivers, goals, | SATISFIED       | Footprint       |
	| Organization);  | and objectives  |                 | diagram         |
	| e.g., Business  | of the          |                 |                 |
	| Unit Directors, | organization,   |                 | Goal/Obj        |
	| Business Unit   | and how these   |                 | ective/Business |
	| CxOs, Business  | are translated  |                 | Service diagram |
	| Unit Head of    | into an         |                 |                 |
	| IT/Architecture | effective       |                 | Organization    |
	|                 | process and     |                 | Decomposition   |
	|                 | architecture to |                 | diagram         |
	|                 | advance the     |                 |                 |
	|                 | business.       |                 | Process Flow    |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Communication   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Line Management | Top-level       | KEY             | Business        |
	| (End-user       | functions and   | PLAYERS         | Footprint       |
	| Organization);  | processes of    |                 | diagram         |
	| e.g., Senior    | the             |                 |                 |
	| Business        | organization,   |                 | Organization    |
	| Managers,       | and how the key |                 | Decomposition   |
	| Operations      | applications    |                 | diagram         |
	| Regional        | support these   |                 |                 |
	| Managers, IT    | processes.      |                 | Organization    |
	| Managers        |                 |                 | map             |
	|                 |                 |                 |                 |
	|                 |                 |                 | Process Flow    |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Communication   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application and |
	|                 |                 |                 | User Location   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Business Domain | Functional      | KEY             | Business        |
	| Experts         | aspects of      | PLAYERS         | Interaction     |
	| (End-user       | processes and   |                 | matrix          |
	| Organization);  | supporting      |                 |                 |
	| e.g., Business  | systems. This   |                 | Actor/Role      |
	| Process         | can cover the   |                 | matrix          |
	| Experts,        | human actors    |                 |                 |
	| B               | involved in the |                 | Business        |
	| usiness/Process | system, the     |                 | Service/        |
	| Analyst,        | user processes  |                 | Information     |
	| Process         | involved in the |                 | diagram         |
	| Architect,      | system, the     |                 |                 |
	| Process         | functions       |                 | Organization    |
	| Designer,       | required to     |                 | map             |
	| Functional      | support the     |                 |                 |
	| Managers,       | processes, and  |                 | Product         |
	| Business        | the information |                 | Lifecycle       |
	| Analyst         | required to     |                 | diagram         |
	|                 | flow in support |                 |                 |
	|                 | of the          |                 | Business        |
	|                 | processes.      |                 | Use-Case        |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Use-Case        |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Communication   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Data            |
	|                 |                 |                 | Entity/Business |
	|                 |                 |                 | Function matrix |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| IT Service      | Ensuring that   | KEEP            | Technology      |
	| Management      | IT services     | INFORMED        | Standards       |
	| (Systems        | provided to the |                 | catalog         |
	| Operations);    | organization    |                 |                 |
	| e.g., Service   | meet the        |                 | Technology      |
	| Delivery        | service levels  |                 | Portfolio       |
	| Manager         | required by     |                 | catalog         |
	|                 | that            |                 |                 |
	|                 | organization to |                 | C               |
	|                 | succeed in      |                 | ontract/Measure |
	|                 | business.       |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Proc            |
	|                 |                 |                 | ess/Application |
	|                 |                 |                 | Realization     |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Enterprise      |
	|                 |                 |                 | Manageability   |
	|                 |                 |                 | diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| IT Operations — | Development     | KEY             | Proc            |
	| Applications    | approach,       | PLAYERS         | ess/Application |
	| (System         | software        |                 | Realization     |
	| Operations);    | modularity and  |                 | diagram         |
	| e.g.,           | re-use,         |                 |                 |
	| Application     | portability     |                 | A               |
	| Architecture,   | migration, and  |                 | pplication/Data |
	| System &        | in              |                 | matrix          |
	| Software        | teroperability. |                 |                 |
	| Engineers       |                 |                 | Application     |
	|                 |                 |                 | Migration       |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Software        |
	|                 |                 |                 | Engineering     |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Platform        |
	|                 |                 |                 | decomposition   |
	|                 |                 |                 | Diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Networked       |
	|                 |                 |                 | Computing/      |
	|                 |                 |                 | Hardware        |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Software        |
	|                 |                 |                 | distribution    |
	|                 |                 |                 | Diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| IT Operations — | Location,       | KEY             | Platform        |
	| Infrastructure  | modifiability,  | PLAYERS         | Decomposition   |
	| (System         | re-usability,   |                 | diagram         |
	| Operations);    | and             |                 |                 |
	| e.g.,           | availability of |                 | Technology      |
	| Infrastructure  | all components  |                 | Standards       |
	| Architect,      | of the system.  |                 | catalog         |
	| Wintel support, | Ensuring that   |                 |                 |
	| Mid-range       | the appropriate |                 | Technology      |
	| support,        | components are  |                 | Portfolio       |
	| Operational     | developed and   |                 | catalog         |
	| DBA, Service    | deployed within |                 |                 |
	| Desk            | the system in   |                 | Enterprise      |
	|                 | an optimal      |                 | Manageability   |
	|                 | manner.         |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Networked       |
	|                 |                 |                 | Computing/      |
	|                 |                 |                 | Hardware        |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Processing      |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Environments    |
	|                 |                 |                 | and Locations   |
	|                 |                 |                 | diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| IT Operations — | Location,       | KEY             | Network and     |
	| Data/Voice      | modifiability,  | PLAYERS         | Communications  |
	| Communications  | re-usability,   |                 | diagram         |
	| (System         | and             |                 |                 |
	| Operations);    | availability of |                 |                 |
	| e.g., Network   | communications  |                 |                 |
	| Management      | and networking  |                 |                 |
	|                 | services.       |                 |                 |
	|                 | Ensuring that   |                 |                 |
	|                 | the appropriate |                 |                 |
	|                 | communications  |                 |                 |
	|                 | and networking  |                 |                 |
	|                 | services are    |                 |                 |
	|                 | developed and   |                 |                 |
	|                 | deployed within |                 |                 |
	|                 | the system in   |                 |                 |
	|                 | an optimal      |                 |                 |
	|                 | manner.         |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Executive       | On-time,        | KEEP            | Requirements    |
	| (Project        | on-budget       | INFORMED        | catalog         |
	| Organization);  | delivery of a   |                 |                 |
	| e.g., Sponsor,  | change          |                 | Principles      |
	| Program Manager | initiative that |                 | catalog         |
	|                 | will realize    |                 |                 |
	|                 | expected        |                 | Value Chain     |
	|                 | benefits for    |                 | diagram         |
	|                 | the             |                 |                 |
	|                 | organization.   |                 | Solution        |
	|                 |                 |                 | Concept diagram |
	|                 |                 |                 |                 |
	|                 |                 |                 | Organization    |
	|                 |                 |                 | map             |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application and |
	|                 |                 |                 | User Location   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Line Management | Operationally   | KEEP            | Application     |
	| (Project        | achieving       | INFORMED        | Communication   |
	| Organization);  | on-time,        |                 | diagram         |
	| e.g., Project   | on-budget       |                 |                 |
	| Manager         | delivery of a   |                 | Organization    |
	|                 | change          |                 | map             |
	|                 | initiative with |                 |                 |
	|                 | an agreed       |                 | Environments    |
	|                 | scope.          |                 | and Locations   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Business        | Adding more     | KEY             | Process Flow    |
	| Pro             | detail to the   | PLAYERS         | diagram         |
	| cess/Functional | functional      |                 |                 |
	| Expert          | requirements of |                 | Business        |
	| (Project        | a change        |                 | Use-Case        |
	| Organization);  | initiative      |                 | diagram         |
	| e.g.,           | based on        |                 |                 |
	| Financials      | experience and  |                 | Business        |
	| FICO®           | interaction     |                 | Serv            |
	| Functional      | with business   |                 | ice/Information |
	| Consultant, HR  | domain experts  |                 | diagram         |
	| Functional      | in the end-user |                 |                 |
	| Consultant      | organization.   |                 | Organization    |
	|                 |                 |                 | map             |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Communication   |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	| Product         | Specifying      | KEY             | Software        |
	| Specialist      | technology      | PLAYERS         | Engineering     |
	| (Project        | product designs |                 | diagram         |
	| Organization);  | in order to     |                 |                 |
	| e.g., Portal    | meet project    |                 | A               |
	| Product         | requirements    |                 | pplication/Data |
	| Specialist      | and comply with |                 | matrix          |
	|                 | the             |                 |                 |
	|                 | Architecture    |                 |                 |
	|                 | Vision of the   |                 |                 |
	|                 | solution.       |                 |                 |
	|                 |                 |                 |                 |
	|                 | In a packages   |                 |                 |
	|                 | and packaged    |                 |                 |
	|                 | services        |                 |                 |
	|                 | environment,    |                 |                 |
	|                 | product         |                 |                 |
	|                 | expertise can   |                 |                 |
	|                 | be used to      |                 |                 |
	|                 | identify        |                 |                 |
	|                 | product         |                 |                 |
	|                 | capabilities    |                 |                 |
	|                 | that can be     |                 |                 |
	|                 | readily         |                 |                 |
	|                 | leveraged and   |                 |                 |
	|                 | can provide     |                 |                 |
	|                 | guidance on     |                 |                 |
	|                 | strategies for  |                 |                 |
	|                 | product         |                 |                 |
	|                 | customization.  |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Technical       | Specifying      | KEY             | Software        |
	| Specialist      | technology      | PLAYERS         | Engineering     |
	| (Project        | product designs |                 | diagram         |
	| Organization);  | in order to     |                 |                 |
	| e.g.,           | meet project    |                 | Platform        |
	| Application     | requirements    |                 | Decomposition   |
	| Architect       | and comply with |                 | diagram         |
	|                 | the             |                 |                 |
	|                 | Architecture    |                 | Proc            |
	|                 | Vision of the   |                 | ess/Application |
	|                 | solution.       |                 | Realization     |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | A               |
	|                 |                 |                 | pplication/Data |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Application     |
	|                 |                 |                 | Migration       |
	|                 |                 |                 | diagram         |
	+-----------------+-----------------+-----------------+-----------------+
	| Regulatory      | Receipt of the  | KEEP            | Business        |
	| Bodies          | information     | SATISFIED       | Footprint       |
	| (Outside        | they need in    |                 | diagram         |
	| Services);      | order to        |                 |                 |
	| e.g., Financial | regulate the    |                 | Application     |
	| Regulator,      | client          |                 | Communication   |
	| Industry        | organization,   |                 | diagram         |
	| Regulator       | and ensuring    |                 |                 |
	|                 | that their      |                 |                 |
	|                 | information     |                 |                 |
	|                 | requirements    |                 |                 |
	|                 | are properly    |                 |                 |
	|                 | satisfied.      |                 |                 |
	|                 | Interested in   |                 |                 |
	|                 | reporting       |                 |                 |
	|                 | processes, and  |                 |                 |
	|                 | the data and    |                 |                 |
	|                 | applications    |                 |                 |
	|                 | used to provide |                 |                 |
	|                 | regulatory      |                 |                 |
	|                 | return          |                 |                 |
	|                 | information.    |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Suppliers       | Ensuring that   | KEEP            | Business        |
	| (Outside        | their           | SATISFIED       | Footprint       |
	| Services);      | information     |                 | diagram         |
	| e.g., Alliance  | exchange        |                 |                 |
	| Partners, Key   | requirements    |                 | Business        |
	| Suppliers       | are met in      |                 | Serv            |
	|                 | order that      |                 | ice/Information |
	|                 | agreed service  |                 | diagram         |
	|                 | contracts with  |                 |                 |
	|                 | the client      |                 | Application     |
	|                 | organizations   |                 | Communication   |
	|                 | can be          |                 | diagram         |
	|                 | fulfilled.      |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capabilities    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business        |
	|                 |                 |                 | Capability Map  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Stra            |
	|                 |                 |                 | tegy/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Capabili        |
	|                 |                 |                 | ty/Organization |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Business Model  |
	|                 |                 |                 | diagram         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | catalog         |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Stages catalog  |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value           |
	|                 |                 |                 | St              |
	|                 |                 |                 | ream/Capability |
	|                 |                 |                 | matrix          |
	|                 |                 |                 |                 |
	|                 |                 |                 | Value Stream    |
	|                 |                 |                 | Map             |
	+-----------------+-----------------+-----------------+-----------------+
	
snippet togaf_introduction_3_Core_Concepts_3.5.1_Enterprise_Support_Services "3.5.1 Enterprise Support Services"
	
	This service category contains candidate services that enable informed
	enterprise decisions in support of organization change. These services
	could be provided independent of any individual project. These services
	focus on answering questions and providing enterprise analysis in
	support of strategic decisions.
	
snippet togaf_adm_3_A_Architecture_Vision_3.5.1_General "3.5.1 General"
	
	Phase A starts with receipt of a Request for Architecture Work from the
	sponsoring organization to the architecture organization.
	
	The issues involved in ensuring proper recognition and endorsement from
	corporate management, and the support and commitment of line management,
	are discussed in the TOGAF Standard — EA Capability and Governance.
	
	Phase A also defines what is in and what is outside the scope of the
	architecture effort and the constraints that must be dealt with. Scoping
	decisions need to be made on the basis of a practical assessment of
	resource and competence availability, and the value that can
	realistically be expected to accrue to the enterprise from the chosen
	scope of architecture work. The issues involved in this are discussed in
	1.5 Scoping the Architecture . Scoping issues addressed in the
	Architecture Vision phase will be restricted to the specific objectives
	for this ADM cycle and will be constrained within the overall scope
	definition for architecture activity as established within the
	Preliminary Phase and embodied within the architecture framework.
	
	In situations where the architecture framework in place is not
	appropriate to achieve the desired Architecture Vision, revisit the
	Preliminary Phase and extend the overall architecture framework for the
	enterprise.
	
	The constraints will normally be informed by the business principles and
	Architecture Principles, developed as part of the Preliminary Phase (see
	2. Preliminary Phase).
	
	Normally, the business principles, business goals, and strategic drivers
	of the organization are already defined elsewhere in the enterprise. If
	so, the activity in Phase A is involved with ensuring that existing
	definitions are current, and clarifying any areas of ambiguity.
	Otherwise, it involves defining these essential items for the first
	time.
	
	Similarly, the Architecture Principles that form part of the constraints
	on architecture work will normally have been defined in the Preliminary
	Phase (see 2. Preliminary Phase). The activity in Phase A is concerned
	with ensuring that the existing principle definitions are current, and
	clarifying any areas of ambiguity. Otherwise, it entails defining the
	Architecture Principles for the first time, as explained in the TOGAF
	Standard — ADM Techniques.
	
snippet togaf_architecture-project-management_3.5.1_Stage_Deliverables_Hand-off_and_Approval "3.5.1 Stage Deliverables Hand-off and Approval"
	
	At the stage end, the Project Manager makes sure all of the stage
	deliverables are handed off and approved appropriately. This may include
	internal Project Team reviews (for example, those who will use the
	deliverables as inputs in further project execution), external parties’
	reviews (such as business users), and stakeholders’ approval (for
	example, Project Sponsor or Steering Committee members).
	
	Stage hand-off and approval activities may be very limited, if each of
	the deliverables was separately approved earlier.
	
	  Example   In Project B, after completing workshops and internal reviews of the Process Analysis deliverables (process models and descriptions), the Project Manager sent these deliverables to business units for review. A one-week deadline was set for comments and change suggestions. After that, the Project Team assessed and addressed the reviews received. A meeting was held to discuss major issues. Then, the deliverables were presented to the Project Sponsor for final approval (see next example).
	  --------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_adm_3_A_Architecture_Vision_3.5.2_Creating_the_Architecture_Vision "3.5.2 Creating the Architecture Vision"
	
	The Architecture Vision provides the sponsor with a key tool to sell the
	benefits of the proposed capability to stakeholders and decision-makers
	within the enterprise. Architecture Vision describes how the new
	capability will meet the business goals and strategic objectives and
	address the stakeholder concerns when implemented.
	
	Integral to the Architecture Vision is an understanding of emerging
	technologies and their potential impact on industries and enterprises,
	without which many business opportunities may be missed.
	
	Clarifying and agreeing the purpose of the architecture effort is one of
	the key parts of this activity, and the purpose needs to be clearly
	reflected in the vision that is created. Architecture projects are often
	undertaken with a specific purpose in mind — a specific set of business
	drivers that represent the return on investment for the stakeholders in
	the architecture development. Clarifying that purpose, and demonstrating
	how it will be achieved by the proposed architecture development, is the
	whole point of the Architecture Vision.
	
	Normally, key elements of the Architecture Vision — such as the
	enterprise mission, vision, strategy, and goals — have been documented
	as part of some wider business strategy or enterprise planning activity
	that has its own lifecycle within the enterprise. In such cases, the
	activity in Phase A is concerned with verifying and understanding the
	documented business strategy and goals, and possibly bridging between
	the enterprise strategy and goals on the one hand, and the strategy and
	goals implicit within the current architecture reality.
	
	Business models are key strategy artifacts that can provide such a
	perspective, by showing how the organization intends to deliver value to
	its customers and stakeholders. 3.3.4 Evaluate Capabilities introduces
	the application of business models as a step in developing the
	Architecture Vision.
	
	In other cases, little or no Business Architecture work may have been
	done to date. In such cases, there will be a need for the architecture
	team to research, verify, and gain buy-in to the key business objectives
	and processes that the architecture is to support. This may be done as a
	free-standing exercise, either preceding architecture development, or as
	part of the ADM initiation phase (Preliminary Phase).
	
	This exercise should examine and search for existing materials on
	fundamental Business Architecture concepts such as:
	
	-   Business Capabilities, which represent a particular ability or
	    capacity that a business may possess or exchange to achieve a
	    specific purpose or outcome
	
	    In this phase, the architect should determine whether a framework
	    exists in the organization to represent business capabilities. If
	    one does not exist, the architect should consider whether developing
	    a framework is within the scope of the project. For an introduction
	    to business capabilities, see TOGAF® Series Guide: Business
	    Capabilities.
	
	-   Value Streams, which represent an end-to-end collection of
	    value-adding activities that create an overall result for a
	    customer, stakeholder, or end user
	
	    For an introduction to value streams, see the TOGAF® Series Guide:
	    Value Streams.
	
	-   Organization Maps, which depict the relationships between the
	    primary entities that make up the enterprise, its partners, and
	    stakeholders
	
	    As traditional organizational charts often lack the necessary detail
	    to reflect the full scope of the enterprise's activities, the
	    architect can help to identify and understand the complex web of
	    relationships between business entities as well as where business
	    capabilities are used and connection to value stream stages. These
	    are refined and extended in subsequent phases. For an introduction
	    to organization maps, see the TOGAF® Series Guide: Organization
	    Mapping.
	
	In addition, the Architecture Vision explores other domains which are
	appropriate for the Enterprise Architecture in hand. These domains may
	include elements of the basic domains, yet serve an additional purpose
	for the stakeholders. Example domains may include:
	
	-   Information
	-   Security
	-   Digital
	-   Network Management
	-   Knowledge
	-   Industry-specific
	-   Services
	-   Partnership
	-   Cybersecurity
	
	These domains may be free-standing or linked with other domains to
	provide enterprise-wide views of the organization vision and structure.
	
	The Architecture Vision phase includes the conduct of a business
	assessment (using, for example, business scenarios) where critical
	factors are documented and various courses of action are assessed.
	High-level advantages and disadvantages, including risks and
	opportunities, are documented and the best course of action selected to
	serve as the basis for the Architecture Vision.
	
	The Architecture Vision provides a first-cut, high-level description of
	the Baseline and Target Architectures, covering the Business, Data,
	Application, and Technology domains. These outline descriptions are
	developed in subsequent phases.
	
	Once an Architecture Vision is defined and documented in the Statement
	of Architecture Work, it is critical to use it to build a consensus, as
	described in the TOGAF Standard — EA Capability and Governance. Without
	this consensus it is very unlikely that the final architecture will be
	accepted by the organization as a whole. The consensus is represented by
	the sponsoring organization signing the Statement of Architecture Work.
	
snippet togaf_introduction_3_Core_Concepts_3.5.2_Design_Support_Services "3.5.2 Design Support Services"
	
	This service category contains candidate services that enable informed
	design decisions in support of organization change. These services would
	typically be provided after a project has been funded, whether large or
	small, waterfall or agile. These services include the development of
	Minimum Viable Architectures (MVAs) and associated analysis to support
	the design decisions.
	
snippet togaf_architecture-project-management_3.5.2_Managing_a_Stage_Boundary "3.5.2 Managing a Stage Boundary"
	
	When stage exit criteria are met, the stage end should be reported by
	the Project Manager to the Architecture Project Oversight (i.e.,
	Architecture Board or Project Sponsor; see Architecture Project
	Start-Up, Section 3.1). Typically, the report should include:
	
	-   A summary of the completed stage – it should show how all stage
	    products were delivered and how the stage has performed against
	    targets for time, cost, quality, scope, risk, and benefit
	-   Impact on the project – if the Project Plan needs to be updated
	-   Plan of the next stage – refer to Architecture Project Planning
	    (Section 3.2) for stage planning
	
	  Example   In Project B, after completing reviews with the business units and addressing their comments, the deliverables were presented to the Project Sponsor for final approval. The meeting was also meant to close the Process Analysis stage. Therefore, the Project Manager reported on-time delivery of the stage, presented the Process Modeling stage plan, and recommended its execution, which was approved by the Project Sponsor.
	  --------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	Any issues identified should be handled according to the description in
	Escalate Issues and Risks (Section 3.4.7).
	
	The Architecture Project Oversight decides on further execution of the
	project – its continuation, change, or termination. It can take into
	account factors that are internal (such as timeliness and costs) and
	external (such as enterprise goals and priorities change) to the
	project.
	
	  Example   In Project E, after the High-Level Architecture stage, the deliverables were presented to the Project Sponsor for final approval. However, the Project Manager noted that the detailed business analysis stream identified gaps that needed a lot of extra work and may impact the High-Level Architecture. He presented associated risks for the project and recommended an adjusted Project Plan that included revisiting the High-Level Architecture stage after the detailed business analysis is fully completed two months later. The Steering Committee accepted the proposed resolution.
	
	
snippet togaf_introduction_3_Core_Concepts_3.5.3_Development_Support_Services "3.5.3 Development Support Services"
	
	This service category contains candidate services that enable informed
	development decisions in support of organization change. These services
	would typically be provided during the development phase of a project,
	whether large or small, waterfall or agile. These services focus on
	answering questions and providing enterprise analysis in support of
	development decisions.
	
snippet togaf_introduction_3_Core_Concepts_3.5.4_Requirements_Elicitation_and_Understanding_Services "3.5.4 Requirements Elicitation and Understanding Services"
	
	This service category contains candidate services that enable
	requirements understanding. Taking a step beyond requirements
	management, these services help get closer to real need that will
	deliver greater business value.
	
snippet togaf_introduction_3_Core_Concepts_3.5.5_Architecture_Planning_Services "3.5.5 Architecture Planning Services"
	
	This service category contains candidate services that enable
	well-planned and executed architecture projects in support of
	organization change. These services would typically be provided at the
	beginning of a "project" whether large or small, waterfall or agile.
	
snippet togaf_introduction_3_Core_Concepts_3.5.6_Enterprise_Architecture_Practice_Development_Support_Services "3.5.6 Enterprise Architecture Practice Development Support Services"
	
	This service category contains candidate services that enable the
	development and management of an Enterprise Architecture practice. These
	services are focused on improving Enterprise Architecture Capability.
	
snippet togaf_adm_3_A_Architecture_Vision_3.5_Approach "3.5 Approach"
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.5_Conclusions "3.5 Conclusions"
	
	This section attempts to deal with views in a structured manner, but
	this is by no means a complete treatise on views.
	
	In general, the TOGAF framework embraces the concepts and definitions
	presented in ISO/IEC/IEEE 42010:2011, specifically the concepts that
	help guide the development of an architecture view and make the
	architecture view actionable. These concepts can be summarized as:
	
	-   Selecting a key stakeholder
	-   Understanding their concerns and generalizing/documenting those
	    concerns
	-   Understanding how to model and deal with those concerns
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.5_EA_and_Other_Fields "3.5 EA and Other Fields"
	
	An EA Capability is normally established in an organization to bring
	about changes to the current method of operation. Achieving a
	transformation outcome demands analysis of the current state of the
	organization along with current industry trends. Implementation of
	recommendations from such analysis requires planning, funding, and
	monitoring. In the course of this journey, the EA enablers interact with
	business strategy, cash flow management, environmental and competitive
	sustainability, organizational design, information and physical
	security, and IT and operations management to name a few spaces. Within
	an enterprise, many of the functions of an EA Capability will be
	performed, even implicitly, by several organizations.
	
	This Guide does not take the position that a specific EA organization
	will perform the process and provide resources and deliverables embedded
	within an EA Capability. However, this Guide, in the following chapters,
	introduces related resources and an approach to set, build, and evolve
	the practice of the EA Capability. Leaders frame a charter – the extent
	of overlap with related functions, sharing of responsibilities, and
	having the necessary organizational conversations at the enterprise.
	
snippet togaf_architecture-project-management_3.5_Ending_a_Stage "3.5 Ending a Stage"
	
	A stage ends when stage deliverables are done and, typically, handed off
	and approved. According to PMBOK, stage end is a natural milestone that
	allows reassessment of the work being done and necessary changes to be
	made, or even termination of the project if needed.[35] PRINCE2 is much
	more specific on the topic – it defines the Managing a Stage Boundary
	process whose purpose is to review the finished stage and approve next
	stage plan, making sure the project is still justifiable and viable.[36]
	
snippet togaf_introduction_3_Core_Concepts_3.5_Enterprise_Architecture_Services "3.5 Enterprise Architecture Services"
	
	Activities described in the ADM are often provided through a service
	delivery model. The services are organized and presented in service
	categories. These services address specific needs independent of an
	organization's specific operation model. Any given service described
	utilizes the appropriate activities in the ADM to address a given need.
	
	Table 3-1 summarizes the proposed service categories and provides some
	context. The first four categories are customer-centric and the others
	are more internally centered on architects. Each service category is
	briefly described in the following subsections.
	
	Table 3-1: Service Categories and Descriptors
	
	+-------------+-------------+-------------+-------------+-------------+
	|             | Descriptor  |             |             |             |
	+:===========:+:===========:+:===========:+:===========:+:===========:+
	| Categories  | Typical     | Typical     | Del         | Desired     |
	|             | Customer    | Provider    | iverable(s) | Result      |
	+-------------+-------------+-------------+-------------+-------------+
	| Custo       |             |             |             |             |
	| mer-centric |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Enterprise  | C-level     | Enterprise  | Answers to  | Better      |
	| Support     | management  | analysts    | questions   | enterprise  |
	| Services    |             | using       |             | decisions   |
	|             |             | Enterprise  | Assessment  |             |
	|             |             | A           | reports     | Lower risk  |
	|             |             | rchitecture |             |             |
	|             |             | as a tool   | Reco        |             |
	|             |             |             | mmendations |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Design      | Pr          | Enterprise  | MVAs        | Better      |
	| Support     | ogram-level | Architect   | (including  | design      |
	| Services    | deci        | buil        | standards   | decisions   |
	|             | sion-makers | der/modeler | and         |             |
	|             |             |             | compliance  | Successful  |
	|             |             |             | criteria,   | programs    |
	|             |             |             | roadmaps)   | and         |
	|             |             |             | for         | projects    |
	|             |             |             | programs    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | guidance    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | reports     |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Development | Pr          | Enterprise  | MVAs        | Better      |
	| Support     | oject-level | Architect   | (including  | product     |
	| Services    | deci        | buil        | standards   | decisions   |
	|             | sion-makers | der/modeler | and         |             |
	|             |             |             | compliance  | Successful  |
	|             |             |             | criteria)   | products    |
	|             |             |             | for         |             |
	|             |             |             | projec      |             |
	|             |             |             | ts/products |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | guidance    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | reports     |             |
	+-------------+-------------+-------------+-------------+-------------+
	| R           | Product     | Enterprise  | Stakeholder | Solid       |
	| equirements | managers    | Architect   | concerns    | outside-in  |
	| Elicitation |             | with        |             | view of     |
	| and         |             | r           | R           | r           |
	| Un          |             | equirements | equirements | equirements |
	| derstanding |             | un          |             | and value   |
	| Services    |             | derstanding | Assessments | for         |
	|             |             | specialty   | (value,     | solutions   |
	|             |             |             | ability,    | balanced    |
	|             |             |             | etc.)       | among       |
	|             |             |             |             | s           |
	|             |             |             |             | takeholders |
	+-------------+-------------+-------------+-------------+-------------+
	| Inter       |             |             |             |             |
	| nal-centric |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| A           | A           | Experienced | A           | Resourced   |
	| rchitecture | rchitecture | Enterprise  | rchitecture | a           |
	| Planning    | team        | Architect   | project     | rchitecture |
	| Services    | leaders     |             | plans       | team        |
	+-------------+-------------+-------------+-------------+-------------+
	| Enterprise  | A           | Enterprise  | Enterprise  | Highly      |
	| A           | rchitecture | A           | A           | skilled and |
	| rchitecture | o           | rchitecture | rchitecture | organized   |
	| Practice    | rganization | practice    | Capability  | Enterprise  |
	| Development | deci        | experts     | assessments | A           |
	| Support     | sion-makers |             |             | rchitecture |
	| Services    |             |             | Enterprise  | practice    |
	|             |             |             | A           | o           |
	|             |             |             | rchitecture | rganization |
	|             |             |             | Capability  | (internal   |
	|             |             |             | improvement | or          |
	|             |             |             | reco        | external)   |
	|             |             |             | mmendations |             |
	+-------------+-------------+-------------+-------------+-------------+
	
snippet togaf_guides_microservices-architecture_3.5_Implications_for_Technology_Architecture "3.5 Implications for Technology Architecture"
	
	Technology Architecture in the distributed world has a much wider scope
	to address, including cloud (public, private, and hybrid), containerized
	clusters, edge devices, etc. Though many of the architectural decisions
	for technology are within the autonomous teams’ responsibilities, the
	Enterprise Architecture will need to define guardrails and re-usable
	automation components for key platforms and patterns. For example,
	microservices can run in serverless and container platforms, yet there
	are pros and cons for each deployment option. However, with the growing
	demand for cloud managed services, the ability to select optimal
	technologies without the need to recruit an expert to manage the full
	stack mitigates risk through these trusted relationships with selected
	cloud providers. Microservices can just as easily run on traditional
	systems and edge devices. The implication here is that the number of
	technology choices is rising so prescriptive guidance from the
	enterprise perspective to autonomous development squads (encouraged
	through the availability of re-usable code and reference architectures)
	is extremely important to avoid future technical debt and a portfolio
	that becomes even more heterogeneous over time.
	
snippet togaf_reference-models_digital-business-reference-model_3.5_Operational_Domain "3.5 Operational Domain"
	
	The Operational Domain is addressed by the Business Operating
	Environment and Digital Enablement elements – the “how” of the business.
	They enable the business to deliberately determine the requirements and
	implications of the Business Operating Environment in response to the
	intended business strategy.
	
	The Business Operating Environment element defines the process, systems
	and resources necessary to enable the execution of the business model,
	Operating Model, and Business Capability Model.
	
	The Digital Enablement element defines the digital strategies,
	principles, and resources necessary for the business to enable delivery
	of Digital Products and Services and digitalization, and thus take
	advantage of business opportunities associated with digital
	technologies. The Digital Enablement elements are thus essential for the
	business to consider the Digital Enterprise option.
	
	Each of the elements in Figure 1 is discussed in detail in Chapter 4.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.1_Preliminary_Phase "3.6.1 Preliminary Phase"
	
	The following describes catalogs, matrices, and diagrams that may be
	created within the Preliminary Phase, as described in the TOGAF Standard
	— Architecture Development Method.
	
	Principles Catalog
	
	The Principles catalog captures principles of the Business and
	Architecture Principles that describe what a "good" solution or
	architecture should look like. Principles are used to evaluate and agree
	an outcome for architecture decision points. Principles are also used as
	a tool to assist in architectural governance of change initiatives.
	
	The Principles catalog contains the following metamodel entities:
	
	-   Principle
	
snippet togaf_architecture-project-management_3.6.1_Products_Handover "3.6.1 Products Handover"
	
	The Architecture Project delivers a definition of an architecture to be
	implemented. The final step leading to this architecture implementation
	is handing the deliverables over to the body responsible for
	implementation.
	
	At the end of Phase F, the Architecture Project delivers several
	deliverables that together form the final product. These deliverables,
	including the Architecture Definition Document, Implementation and
	Migration Plan, and Architecture Roadmap, should be used as inputs to
	the program and Project Management activities that are typically
	executed by another organizational unit (and governed by the ADM Phase
	G).
	
	Project deliverables should be transferred to the organizational unit
	that will implement the architecture (e.g., PMO or business owner of the
	implementation). From our experience, it is crucial to ensure that these
	deliverables are sufficient to start the implementation project (or
	program) right away. It is a common issue to have the architecture
	finished, but the implementation start is delayed due to some additional
	documentation needed, especially for strategic and segment-level
	projects.
	
	This issue can be mitigated with careful quality management based on
	quality criteria agreed with the organizational unit that will implement
	the architecture (see the Define the Management Approach step in
	Architecture Project Start-Up (Section 3.1) for quality management
	planning). The TOGAF Standard also highlights the need to coordinate the
	Implementation and Migration Plan with the management frameworks within
	the organization.[37]
	
	Architecture Project deliverables can also include new Requests for
	Architecture Work (that will start a new Architecture Project) and/or
	change requests for architecture capability.
	
	The detailed mapping of Architecture Project products is presented in
	Figure 6.
	
	[Figure 6.png]
	
	Figure 6: Architecture Project Final Deliverables
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.2_Phase_A_Architecture_Vision "3.6.2 Phase A: Architecture Vision"
	
	The following describes catalogs, matrices, and diagrams that may be
	created within Phase A (Architecture Vision) as described in the TOGAF
	Standard — Architecture Development Method.
	
	Stakeholder Catalog
	
	The purpose of the Stakeholder catalog is to identify the stakeholders
	for the architecture engagement, their influence over the engagement,
	and their key questions, issues, or concerns that must be addressed by
	the architecture framework.
	
	Understanding stakeholders and their requirements allows an architect to
	focus effort in areas that meet the needs of stakeholders (see the TOGAF
	Standard — ADM Techniques).
	
	Due to the potentially sensitive nature of stakeholder mapping
	information and the fact that the Architecture Vision phase is intended
	to be conducted using informal modeling techniques, no specific
	metamodel entities will be used to generate a Stakeholder catalog.
	
	Value Chain Diagram
	
	A Value Chain diagram provides a high-level orientation view of an
	enterprise and how it interacts with the outside world. In contrast to
	the more formal organization map developed within Phase B (Business
	Architecture), the Value Chain diagram focuses on presentational impact.
	
	The purpose of this diagram is to quickly on-board and align
	stakeholders for a particular change initiative, so that all
	participants understand the high-level functional and organizational
	context of the architecture engagement.
	
	Solution Concept Diagram
	
	A Solution Concept diagram provides a high-level orientation of the
	solution that is envisaged in order to meet the objectives of the
	architecture engagement. In contrast to the more formal and detailed
	architecture diagrams developed in the following phases, the solution
	concept represents a "pencil sketch" of the expected solution at the
	outset of the engagement.
	
	This diagram may embody key objectives, requirements, and constraints
	for the engagement and also highlight work areas to be investigated in
	more detail with formal architecture modeling.
	
	Its purpose is to quickly on-board and align stakeholders for a
	particular change initiative, so that all participants understand what
	the architecture engagement is seeking to achieve and how it is expected
	that a particular solution approach will meet the needs of the
	enterprise.
	
	Business Model Diagram
	
	A model describing the rationale for how an enterprise creates,
	delivers, and captures value.
	
	Business Capability Map
	
	A diagram that shows the business capabilities that an enterprise needs
	to meet its purposes.
	
	Value Stream Map
	
	A diagram representing an end-to-end collection of value-adding
	activities that create an overall result for a customer, stakeholder, or
	end user.
	
snippet togaf_architecture-project-management_3.6.2_Prepare_and_Recommend_Closure "3.6.2 Prepare and Recommend Closure"
	
	To close the project formally, the Project Manager has to prepare a
	closing report and recommend project closure to the project governance.
	
	The project closing report should contain information collected
	throughout all stages of the project. The report should summarize:[38]
	
	-   Products that were delivered by the Architecture Project
	-   Work performance – how did the project perform against targets for
	    time, cost, quality, scope, and benefit
	-   Risks and issues summary, and how were they mitigated
	-   Architecture capability performance information
	
	The report should be presented to the project governance.
	
	Closing the project needs formal acceptance of the Executive. This is
	typically obtained after presenting the project closing report. The
	Project Manager should also confirm with the Executive and stakeholders
	that all Architecture Project deliverables are reviewed and accepted by
	them.
	
snippet togaf_architecture-project-management_3.6.3_Evaluate_the_Project_and_Document_Lessons_Learned "3.6.3 Evaluate the Project and Document Lessons Learned"
	
	The final step of an Architecture Project should be its evaluation. The
	team should document the lessons learned for further Architecture
	Projects and recommend architecture capability improvements.
	
	This step is very important from the perspective of knowledge management
	and continuous improvement of architectural practice. Lessons learned
	documentation should always be considered as an input to further
	Architecture Projects.
	
	Lessons learned should document project assumptions about product
	quality, project performance data (e.g., time and costs), and comparison
	with project results. If there are any deviations, lessons learned
	should contain the analysis of factors that impacted these deviations
	and deduction of how to improve the Architecture Project management
	practice.
	
	Based on lessons learned, the Project Team can define recommendations
	for architecture capability improvement. According to the TOGAF
	Standard, these recommendations should include change requests that will
	be handled in the ADM Phase H (Architecture Change Management).
	
	+-----------------------------------+-----------------------------------+
	| Example                           | In Project A, the Project Manager |
	|                                   | established a project evaluation  |
	|                                   | meeting with his team. During     |
	|                                   | this meeting he recommend an      |
	|                                   | After Action Review (AAR)         |
	|                                   | approach to evaluate the project. |
	|                                   | During this meeting all project   |
	|                                   | performance-related information   |
	|                                   | was gathered.                     |
	|                                   |                                   |
	|                                   | The meeting had a structured      |
	|                                   | agenda – after the Project        |
	|                                   | Manager introduction that         |
	|                                   | explained the meeting goals, the  |
	|                                   | team discussed and answered the   |
	|                                   | following questions:              |
	|                                   |                                   |
	|                                   | -   What were we supposed to      |
	|                                   |     achieve at the end of the     |
	|                                   |     project?                      |
	|                                   | -   What did we achieve?          |
	|                                   | -   Why is there a difference?    |
	|                                   | -   What did we learn and what    |
	|                                   |     can we improve in our future  |
	|                                   |     projects?                     |
	|                                   |                                   |
	|                                   | They documented the meeting       |
	|                                   | results using the following       |
	|                                   | lessons learned template:         |
	|                                   |                                   |
	|                                   |   ----- ------------------        |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ----------- --------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ------------- ------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ---------------- ---------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   |   No.   Issue Name                |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |               Issue Description   |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |                 Impact on Project |
	|                                   |                                   |
	|                                   |                                   |
	|                                   |                    Recommendation |
	|                                   |         Agreement of app          |
	|                                   | lication list takes more time tha |
	|                                   | n planned.                        |
	|                                   |               We had a problem wi |
	|                                   | th agreement on the list of appli |
	|                                   | cations with stakeholders. It too |
	|                                   | k 1 month instead of 10 days. We  |
	|                                   | found that there was a lack of fo |
	|                                   | rmalized and systematic approach  |
	|                                   | to this task.   We have to provid |
	|                                   | e the changes in schedule and ass |
	|                                   | ign extra resources to meet the p |
	|                                   | roject deadline.   We need to pre |
	|                                   | pare a set of common templates fo |
	|                                   | r our stakeholders that will impr |
	|                                   | ove the efficiency of their work. |
	|                                   |         The CFO stated            |
	|                                   | that his concerns about the costs |
	|                                   |  of applications were not address |
	|                                   | ed properly.   The CFO stated tha |
	|                                   | t he would like to know potential |
	|                                   |  financial savings on application |
	|                                   |  portfolio optimization as a deci |
	|                                   | sion factor.                      |
	|                                   |                                   |
	|                                   |                  We have to modif |
	|                                   | y some views affected by CFO conc |
	|                                   | erns.                             |
	|                                   |                     We recommend  |
	|                                   | adding the cost of the applicatio |
	|                                   | n license and maintenance cost to |
	|                                   |  the application function matrix. |
	|                                   |   ----- ------------------        |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ----------- --------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ------------- ------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | ---------------- ---------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	|                                   | --------------------------------- |
	+===================================+===================================+
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.3_Phase_B_Business_Architecture "3.6.3 Phase B: Business Architecture"
	
	The following describes catalogs, matrices, and diagrams that may be
	created within Phase B (Business Architecture) as described in the TOGAF
	Standard — Architecture Development Method.
	
	Organization/Actor Catalog
	
	The purpose of the Organization/Actor catalog is to capture a definitive
	listing of all participants that interact with IT, including users and
	owners of IT systems.
	
	The Organization/Actor catalog can be referenced when developing
	requirements in order to test for completeness.
	
	For example, requirements for an application that services customers can
	be tested for completeness by verifying exactly which customer types
	need to be supported and whether there are any particular requirements
	or restrictions for user types.
	
	The Organization/Actor catalog contains the following metamodel
	entities:
	
	-   Organization Unit
	-   Actor
	-   Location (may be included in this catalog if an independent Location
	    catalog is not maintained)
	
	Driver/Goal/Objective Catalog
	
	The purpose of the Driver/Goal/Objective catalog is to provide a
	cross-organizational reference of how an organization meets its drivers
	in practical terms through goals, objectives, and (optionally) measures.
	
	Publishing a definitive breakdown of drivers, goals, and objectives
	allows change initiatives within the enterprise to identify synergies
	across the organization (e.g., multiple organizations attempting to
	achieve similar objectives), which in turn allow stakeholders to be
	identified and related change initiatives to be aligned or consolidated.
	
	The Driver/Goal/Objective catalog contains the following metamodel
	entities:
	
	-   Organization Unit
	-   Driver
	-   Goal
	-   Objective
	-   Measure (may optionally be included)
	
	Role Catalog
	
	The purpose of the Role catalog is to provide a listing of all
	authorization levels or zones within an enterprise. Frequently,
	application security or behavior is defined against locally understood
	concepts of authorization that create complex and unexpected
	consequences when combined on the user desktop.
	
	If roles are defined, understood, and aligned across organizations and
	applications, this allows for a more seamless user experience and
	generally more secure applications, as administrators do not need to
	resort to workarounds in order to enable users to carry out their jobs.
	
	In addition to supporting security definition for the enterprise, the
	Role catalog also forms a key input to identifying organizational change
	management impacts, defining job functions, and executing end-user
	training.
	
	As each role implies access to a number of business functions, if any of
	these business functions are impacted then change management will be
	required, organizational responsibilities may need to be redefined, and
	retraining may be needed.
	
	The Role catalog contains the following metamodel entities:
	
	-   Role
	
	Business Service/Function Catalog
	
	The purpose of the Business Service/Function catalog is to provide a
	functional decomposition in a form that can be filtered, reported on,
	and queried, as a supplement to graphical Functional Decomposition
	diagrams.
	
	The Business Service/Function catalog can be used to identify
	capabilities of an organization and to understand the level that
	governance is applied to the functions of an organization. This
	functional decomposition can be used to identify new capabilities
	required to support business change or may be used to determine the
	scope of change initiatives, applications, or technology components.
	
	The Business Service/Function catalog contains the following metamodel
	entities:
	
	-   Organization Unit
	-   Business Function
	-   Business Service
	-   Application Service (may optionally be included here)
	
	Location Catalog
	
	The Location catalog provides a listing of all locations where an
	enterprise carries out business operations or houses architecturally
	relevant assets, such as data centers or end-user computing equipment.
	
	Maintaining a definitive list of locations allows change initiatives to
	quickly define a location scope and to test for completeness when
	assessing current landscapes or proposed target solutions. For example,
	a project to upgrade desktop operating systems will need to identify all
	locations where desktop operating systems are deployed.
	
	Similarly, when new systems are being implemented a diagram of locations
	is essential in order to develop appropriate deployment strategies that
	comprehend both user and application location and identify
	location-related issues, such as internationalization, localization,
	timezone impacts on availability, distance impacts on latency, network
	impacts on bandwidth, and access.
	
	The Location catalog contains the following metamodel entities:
	
	-   Location
	
	Process/Event/Control/Product Catalog
	
	The Process/Event/Control/Product catalog provides a hierarchy of
	processes, events that trigger processes, outputs from processes, and
	controls applied to the execution of processes. This catalog provides a
	supplement to any Process Flow diagrams that are created and allows an
	enterprise to filter, report, and query across organizations and
	processes to identify scope, commonality, or impact.
	
	For example, the Process/Event/Control/Product catalog allows an
	enterprise to see relationships of processes to sub-processes in order
	to identify the full chain of impacts resulting from changing a
	high-level process.
	
	The Process/Event/Control/Product catalog contains the following
	metamodel entities:
	
	-   Process
	-   Event
	-   Control
	-   Product
	
	Contract/Measure Catalog
	
	The Contract/Measure catalog provides a listing of all agreed service
	contracts and the measures attached to those contracts. It forms the
	master list of service levels agreed to across the enterprise.
	
	The Contract/Measure catalog contains the following metamodel entities:
	
	-   Business Service
	-   Application Service (optionally)
	-   Contract
	-   Measure
	
	Business Capabilities Catalog
	
	A listing of abilities that a business may possess to achieve specific
	purposes.
	
	Value Stream Catalog
	
	A listing of end-to-end collections of value-adding activities that
	create an overall result for a customer, stakeholder, or end user.
	
	Value Stream Stages Catalog
	
	A listing of end-to-end collections of the different stages for the
	value-adding activities that create an overall result for customer,
	stakeholder, or end user.
	
	The Value Stream Stages catalog includes the following metamodel
	entities:
	
	-   Business Capability
	-   Value Stream
	
	Business Glossary Catalog
	
	This catalog contains the name and unambiguous description of all
	elements contained in or interacting with the Enterprise Architecture.
	
	Optional information could include element enterprise synonyms,
	abbreviations/acronyms, and relationships with other elements. This
	catalog provides the semantics to be used by all analysts (e.g.,
	business, information, and system) for their architecture products,
	including information/data models, and evolves throughout the ADM.
	
	Business Interaction Matrix
	
	The purpose of this matrix is to depict the relationship interactions
	between organizations and business functions across the enterprise.
	
	Understanding business interaction of an enterprise is important as it
	helps to highlight value chain and dependencies across organizations.
	
	The Business Interaction matrix shows the following metamodel entities
	and relationships:
	
	-   Organization
	-   Business Function
	-   Business Service
	-   Business Service communicates with Business Service relationships
	-   Business Service is dependent on Business Service relationships
	
	Actor/Role Matrix
	
	The purpose of this matrix is to show which actors perform which roles,
	supporting definition of security and skills requirements.
	
	Understanding Actor-to-Role relationships is a key supporting tool in
	definition of training needs, user security settings, and organizational
	change management.
	
	The Actor/Role matrix shows the following metamodel entities and
	relationships:
	
	-   Actor
	-   Role
	-   Actor performs Role relationships
	
	Value Stream/Capability Matrix
	
	The purpose of this matrix is to show the capabilities required to
	support each stage of a value stream.
	
	Strategy/Capability Matrix
	
	The purpose of this matrix is to show the capabilities required to
	support specific strategy statements.
	
	Capability/Organization Matrix
	
	The purpose of this matrix is to show the organization elements that
	implement each capability. The Capability/Organization matrix includes
	the following metamodel entities:
	
	-   Business Capability
	-   Value Stream
	-   Organization Unit
	
	Business Footprint Diagram
	
	A Business Footprint diagram describes the links between business goals,
	organizational units, business functions, and services, and maps these
	functions to the technical components delivering the required
	capability.
	
	A Business Footprint diagram provides a clear traceability between a
	technical component and the business goal that it satisfies, while also
	demonstrating ownership of the services identified.
	
	A Business Footprint diagram demonstrates only the key facts linking
	organization unit functions to delivery services and is utilized as a
	communication platform for senior-level (CxO) stakeholders.
	
	Business Service/Information Diagram
	
	The Business Service/Information diagram shows the information needed to
	support one or more business services. The Business Service/Information
	diagram shows what data is consumed by or produced by a business service
	and may also show the source of information.
	
	The Business Service/Information diagram shows an initial representation
	of the information present within the architecture and therefore forms a
	basis for elaboration and refinement within Phase C (Data Architecture).
	
	Functional Decomposition Diagram
	
	The purpose of the Functional Decomposition diagram is to show on a
	single page the capabilities of an organization that are relevant to the
	consideration of an architecture. By examining the capabilities of an
	organization from a functional perspective, it is possible to quickly
	develop models of what the organization does without being dragged into
	extended debate on how the organization does it.
	
	Once a basic Functional Decomposition diagram has been developed, it
	becomes possible to layer heat maps on top of this diagram to show scope
	and decisions. For example, the capabilities to be implemented in
	different phases of a change program.
	
	Product Lifecycle Diagram
	
	This diagram shows the possible state transitions of a business product,
	from its creation or receipt to its sale, disposal, or destruction.
	
	The product may be a product of any kind (physical, software, or
	service).
	
	Goal/Objective/Business Service Diagram
	
	The purpose of a Goal/Objective/Business Service diagram is to define
	the ways in which a business service contributes to the achievement of a
	business vision or strategy.
	
	Business services are associated with the drivers, goals, objectives,
	and measures that they support, allowing the enterprise to understand
	which business services contribute to similar aspects of business
	performance. The Goal/Objective/Business Service diagram also provides
	qualitative input on what constitutes high performance for a particular
	business service.
	
	Business Use-Case Diagram
	
	A Business Use-Case diagram displays the relationships between consumers
	and providers of business services. Business services are consumed by
	actors or other business services and the Business Use-Case diagram
	provides added richness in describing business capability by
	illustrating how and when that capability is used.
	
	The purpose of the Business Use-Case diagram is to help to describe and
	validate the interaction between actors and their roles to processes and
	functions. As the architecture progresses, the use-case can evolve from
	the business level to include data, application, and technology details.
	Architectural business use-cases can also be re-used in systems design
	work.
	
	Organization Decomposition Diagram
	
	An Organization Decomposition diagram describes the links between actor,
	roles, and location within an organization tree.
	
	An organization map should provide a chain of command of owners and
	decision-makers in the organization. Although it is not the intent of
	the Organization Decomposition diagram to link goal to organization, it
	should be possible to intuitively link the goals to the stakeholders
	from the Organization Decomposition diagram.
	
	Process Flow Diagram
	
	The purpose of the Process Flow diagram is to depict all models and
	mappings related to the process metamodel entity.
	
	Process Flow diagrams show sequential flow of control between activities
	and may utilize swim-lane techniques to represent ownership and
	realization of process steps. For example, the application that supports
	a process step may be shown as a swim-lane.
	
	In addition to showing a sequence of activity, process flows can also be
	used to detail the controls that apply to a process, the events that
	trigger or result from completion of a process, and also the products
	that are generated from process execution.
	
	Process Flow diagrams are useful in elaborating the architecture with
	subject specialists, as they allow the specialist to describe "how the
	job is done" for a particular function. Through this process, each
	process step can become a more fine-grained function and can then in
	turn be elaborated as a process.
	
	Business Event Diagram
	
	The purpose of the Business Event diagram is to depict the relationship
	between events and process.
	
	Certain events — such as arrival of certain information (e.g., customer
	submits sales order) or a certain point in time (e.g., end of fiscal
	quarter) — cause work and certain actions need to be undertaken within
	the business. These are often referred to as "business events" or simply
	"events" and are considered as triggers for a process. It is important
	to note that the event has to trigger a process and generate a business
	response or result.
	
	Business Capability Map
	
	A diagram that shows the business capabilities that an enterprise needs
	to meet its purposes.
	
	Business capabilities may be decomposed into sub-capabilities.
	
	Value Stream Map
	
	A diagram representing an end-to-end collection of value-adding
	activities that create an overall result for a customer, stakeholder, or
	end user.
	
	The value stream map includes the following metamodel entities:
	
	-   Business Capability
	-   Value Stream
	
	Organization Map
	
	A diagram showing the relationships between the primary entities that
	make up the enterprise, its partners, and stakeholders.
	
	Information Map
	
	A collection of information concepts and their relationships to one
	another. Information concepts, in effect, reflect the business
	vocabulary; e.g., client, account, or product. Mapping information in
	the Business Architecture starts with listing those elements that matter
	most to the business as well as how they are described in business
	terms.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.4_Phase_C_Data_Architecture "3.6.4 Phase C: Data Architecture"
	
	The following describes catalogs, matrices, and diagrams that may be
	created within Phase C (Data Architecture) as described in the TOGAF
	Standard — Architecture Development Method.
	
	Data Entity/Data Component Catalog
	
	This catalog identifies and maintains a list of the data used across the
	enterprise, relating data entities to data components showing how data
	entities are structured.
	
	Its purpose is to:
	
	-   Identify all data used in the enterprise
	-   Encourage effective data use
	
	The Data Entity/Data Component catalog contains the following metamodel
	entities:
	
	-   Data Entity
	-   Logical Data Component
	-   Physical Data Component
	
	Data Entity/Business Function Matrix
	
	The purpose of the Data Entity/Business Function matrix is to depict the
	relationship between data entities and business functions within the
	enterprise. Business functions are supported by business services with
	explicitly defined boundaries and will be supported and realized by
	business processes. The mapping of the Data Entity-Business Function
	relationship enables the following to take place:
	
	-   Assign ownership of data entities to organizations
	-   Understand the data and information exchange requirements business
	    services
	-   Support the gap analysis and determine whether any data entities are
	    missing and need to be created
	-   Define application of origin, application of record, and application
	    of reference for data entities
	-   Enable development of data governance programs across the enterprise
	    (establish data steward, develop data standards pertinent to the
	    business function, etc.)
	
	The Data Entity/Business Function matrix shows the following entities
	and relationships:
	
	-   Data Entity
	-   Business Function
	-   Data Entity relationship to owning Organization Unit
	
	Application/Data Matrix
	
	The purpose of the Application/Data matrix is to depict the relationship
	between applications (i.e., application components) and the data
	entities that are accessed and updated by them.
	
	Applications will create, read, update, and delete specific data
	entities that are associated with them. For example, a Customer
	Relationship Management (CRM) application will create, read, update, and
	delete customer entity information.
	
	The data entities in a package/packaged services environment can be
	classified as master data, reference data, transactional data, content
	data, and historical data. Applications that operate on the data
	entities include transactional applications, information management
	applications, and business warehouse applications.
	
	The mapping of the Application Component-Data Entity relationship is an
	important step as it enables the following to take place:
	
	-   Assign access of data to specific applications in the organization
	-   Understand the degree of data duplication within different
	    applications, and the scale of the data lifecycle
	-   Understand where the same data is updated by different applications
	-   Support the gap analysis and determine whether any of the
	    applications are missing and as a result need to be created
	
	The Application/Data matrix is a two-dimensional table with Logical
	Application Component on one axis and Data Entity on the other axis.
	
	Conceptual Data Diagram
	
	The key purpose of the Conceptual Data diagram is to depict the
	relationships between critical data entities within the enterprise. This
	diagram is developed to address the concerns of business stakeholders.
	
	Techniques used include:
	
	-   Entity relationship models
	-   Simplified UML class diagrams
	
	Logical Data Diagram
	
	The key purpose of the Logical Data diagram is to show logical views of
	the relationships between critical data entities within the enterprise.
	This diagram is developed to address the concerns of:
	
	-   Application developers
	-   Database designers
	
	Data Dissemination Diagram
	
	The purpose of the Data Dissemination diagram is to show the
	relationship between data entity, business service, and application
	components. The diagram shows how the logical entities are to be
	physically realized by application components. This allows effective
	sizing to be carried out and the IT footprint to be refined. Moreover,
	by assigning business value to data, an indication of the business
	criticality of application components can be gained.
	
	Additionally, the diagram may show data replication and application
	ownership of the master reference for data. In this instance, it can
	show two copies and the master-copy relationship between them. This
	diagram can include services; that is, services encapsulate data and
	they reside in an application, or services that reside on an application
	and access data encapsulated within the application.
	
	Data Security Diagram
	
	This diagram shows which data is accessed by which roles, organization
	units, and applications. It may be shown as a diagram or presented as a
	matrix.
	
	Its purpose is to:
	
	-   Demonstrate compliance with data privacy laws and regulations
	-   Show security threats arising as a result of data access
	-   Show which parties outside of the organization have access to data
	-   Show security measures applied to data access
	
	Data Migration Diagram
	
	This diagram shows how data is extracted from baseline or source
	location(s) and loaded into target location(s). It may show where data
	is transformed and/or cleansed on the way. In Phase C of the ADM, the
	diagram is likely to be at an overview level. Later, it may be
	elaborated to show which source data items map to which target data
	items.
	
	Data Lifecycle Diagram
	
	The Data Lifecycle diagram is an essential part of managing business
	data throughout its lifecycle from conception until disposal within the
	constraints of the business process.
	
	The data is considered as an entity in its own right, decoupled from
	business process and activity. Each change in state is represented on
	the diagram which may include the event or rules that trigger that
	change in state.
	
	The separation of data from process allows common data requirements to
	be identified which enables resource sharing to be achieved more
	effectively.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.5_Phase_C_Application_Architecture "3.6.5 Phase C: Application Architecture"
	
	The following describes catalogs, matrices, and diagrams that may be
	created within Phase C (Application Architecture) as described in the
	TOGAF Standard — Architecture Development Method.
	
	Application Portfolio Catalog
	
	The purpose of this catalog is to identify and maintain a list of all
	the applications in the enterprise. This list helps to define the
	horizontal scope of change initiatives that may impact particular kinds
	of applications. An agreed Application Portfolio allows a standard set
	of applications to be defined and governed.
	
	The Application Portfolio catalog provides a foundation on which to base
	the remaining matrices and diagrams. It is typically the start point of
	the Application Architecture phase.
	
	The Application Portfolio catalog contains the following metamodel
	entities:
	
	-   Application Service
	-   Logical Application Component
	-   Physical Application Component
	
	Interface Catalog
	
	The purpose of the Interface catalog is to scope and document the
	interfaces between applications to enable the overall dependencies
	between applications to be scoped as early as possible.
	
	Applications will create, read, update, and delete data within other
	applications; this will be achieved by some kind of interface, whether
	via a batch file that is loaded periodically, a direct connection to
	another application's database, or via some form of API or web service.
	
	The mapping of the Application Component-Application Component entity
	relationship is an important step as it enables the following to take
	place:
	
	-   Understand the degree of interaction between applications,
	    identifying those that are central in terms of their dependencies on
	    other applications
	-   Understand the number and types of interfaces between applications
	-   Understand the degree of duplication of interfaces between
	    applications
	-   Identify the potential for simplification of interfaces when
	    considering the target Application Portfolio
	-   Support the gap analysis and determine whether any of the
	    applications are missing and as a result need to be created
	
	The Interface catalog contains the following metamodel entities:
	
	-   Logical Application Component
	-   Physical Application Component
	-   Application communicates with application relationship
	
	Application/Organization Matrix
	
	The purpose of this matrix is to depict the relationship between
	applications and organizational units within the enterprise.
	
	Business operations are performed by organizational units. Some of the
	operations and services performed by those organizational units will be
	supported by applications. The mapping of the Application
	Component-Organization Unit relationship is an important step as it
	enables the following to take place:
	
	-   Assign usage of applications to the organization units that perform
	    business operations
	-   Understand the application support requirements of the business
	    services and processes carried out by an organization unit
	-   Support the gap analysis and determine whether any of the
	    applications are missing and as a result need to be created
	-   Define the application set used by a particular organization unit
	
	The Application/Organization matrix is a two-dimensional table with
	Logical/Physical Application Component on one axis and Organization Unit
	on the other axis.
	
	The relationship between these two entities is a composite of a number
	of metamodel relationships that need validating:
	
	-   Organization Units own Services
	-   Actors that belong to Organization Units use Services
	-   Services are realized by Logical/Physical Application Components
	
	Role/Application Matrix
	
	The purpose of the Role/Application matrix is to depict the relationship
	between applications and the business roles that use them within the
	enterprise.
	
	People in an organization interact with applications. During this
	interaction, these people assume a specific role to perform a task; for
	example, product buyer.
	
	The mapping of the Application Component-Role relationship is an
	important step as it enables the following to take place:
	
	-   Assign usage of applications to the specific roles in the
	    organization
	-   Understand the application security requirements of the business
	    services and processes supporting the function, and check these are
	    in line with current policy
	-   Support the gap analysis and determine whether any of the
	    applications are missing and as a result need to be created
	-   Define the application set used by a particular business role;
	    essential in any move to role-based computing
	
	The Role/Application matrix is a two-dimensional table with Logical
	Application Component on one axis and Role on the other axis.
	
	Application/Function Matrix
	
	The purpose of the Application/Function matrix is to depict the
	relationship between applications and business functions within the
	enterprise.
	
	Business functions are performed by organizational units. Some of the
	business functions and services will be supported by applications. The
	mapping of the Application Component-Function relationship is an
	important step as it enables the following to take place:
	
	-   Assign usage of applications to the business functions that are
	    supported by them
	-   Understand the application support requirements of the business
	    services and processes carried out
	-   Support the gap analysis and determine whether any of the
	    applications are missing and as a result need to be created
	-   Define the application set used by a particular business function
	
	The Application/Function matrix is a two-dimensional table with Logical
	Application Component on one axis and Function on the other axis.
	
	The relationship between these two entities is a composite of a number
	of metamodel relationships that need validating:
	
	-   Function is bounded by Service
	-   Services are realized by Logical/Physical Application Components
	
	Application Interaction Matrix
	
	The purpose of the Application Interaction matrix is to depict
	communications relationships between applications.
	
	The mapping of the application interactions shows in matrix form the
	equivalent of the Interface Catalog or an Application Communication
	diagram.
	
	The Application Interaction matrix is a two-dimensional table with
	Application Service, Logical Application Component, and Physical
	Application Component on both the rows and the columns of the table.
	
	The relationships depicted by this matrix include:
	
	-   Application Service consumes Application Service
	-   Logical Application Component communicates with Logical Application
	    Component
	-   Physical Application Component communicates with Physical
	    Application Component
	
	Application Communication Diagram
	
	The purpose of the Application Communication diagram is to depict all
	models and mappings related to communication between applications in the
	metamodel entity.
	
	It shows application components and interfaces between components.
	Interfaces may be associated with data entities where appropriate.
	Applications may be associated with business services where appropriate.
	Communication should be logical and should only show intermediary
	technology where it is architecturally relevant.
	
	Application and User Location Diagram
	
	The Application and User Location diagram shows the geographical
	distribution of applications. It can be used to show where applications
	are used by the end user; the distribution of where the host application
	is executed and/or delivered in thin client scenarios; the distribution
	of where applications are developed, tested, and released; etc.
	
	Analysis can reveal opportunities for rationalization, as well as
	duplication and/or gaps.
	
	The purpose of this diagram is to clearly depict the business locations
	from which business users typically interact with the applications, but
	also the hosting location of the application infrastructure.
	
	The diagram enables:
	
	-   Identification of the number of package instances needed to
	    sufficiently support the user population that may be spread out
	    geographically
	-   Estimation of the number and type of user licenses for the package
	    or other software
	-   Estimation of the level of support needed for the users and the
	    location of the support center
	-   Selection of system management tools, structure, and management
	    system required to support the enterprise users/customers/partners
	    both locally and remotely
	-   Appropriate planning for the technological components of the
	    business, namely server sizing and network bandwidth, etc.
	-   Performance considerations while implementing application and
	    technology architecture solutions
	
	Users typically interact with applications in a variety of ways; for
	example:
	
	-   To support the operations of the business day-to-day
	-   To participate in the execution of a business process
	-   To access information (look-up, read)
	-   To develop the application
	-   To administer and maintain the application
	
	Application Use-Case Diagram
	
	An Application Use-Case diagram displays the relationships between
	consumers and providers of application services. Application services
	are consumed by actors or other application services and the Application
	Use-Case diagram provides added richness in describing application
	functionality by illustrating how and when that functionality is used.
	
	The purpose of the Application Use-Case diagram is to help to describe
	and validate the interaction between actors and their roles with
	applications. As the architecture progresses, the use-case can evolve
	from functional information to include technical realization detail.
	
	Application use-cases can also be re-used in more detailed systems
	design work.
	
	Enterprise Manageability Diagram
	
	The Enterprise Manageability diagram shows how one or more applications
	interact with application and technology components that support the
	operational management of a solution.
	
	This diagram is really a filter on the Application Communication
	diagram, specifically for enterprise management class software.
	
	Analysis can reveal duplication and gaps, and opportunities in the IT
	service management operation of an organization.
	
	Process/Application Realization Diagram
	
	The purpose of the Process/Application Realization diagram is to clearly
	depict the sequence of events when multiple applications are involved in
	executing a business process.
	
	It enhances the Application Communication diagram by augmenting it with
	any sequencing constraints, and hand-off points between batch and
	real-time processing.
	
	It would identify complex sequences that could be simplified, and
	identify possible rationalization points in the architecture in order to
	provide more timely information to business users. It may also identify
	process efficiency improvements that may reduce interaction traffic
	between applications.
	
	Software Engineering Diagram
	
	The Software Engineering diagram breaks applications into packages,
	modules, services, and operations from a development perspective.
	
	It enables more detailed impact analysis when planning migration stages,
	and analyzing opportunities and solutions.
	
	It is ideal for application development teams and application management
	teams when managing complex development environments.
	
	Application Migration Diagram
	
	The Application Migration diagram identifies application migration from
	baseline to target application components. It enables a more accurate
	estimation of migration costs by showing precisely which applications
	and interfaces need to be mapped between migration stages.
	
	It would identify temporary applications, staging areas, and the
	infrastructure required to support migrations (for example, parallel run
	environments, etc).
	
	Software Distribution Diagram
	
	The Software Distribution diagram shows how application software is
	structured and distributed across the estate. It is useful in systems
	upgrade or application consolidation projects.
	
	This diagram shows how physical applications are distributed across
	physical technology and the location of that technology.
	
	This enables a clear view of how the software is hosted, but also
	enables managed operations staff to understand how that application
	software is maintained once installed.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.6_Phase_D_Technology_Architecture "3.6.6 Phase D: Technology Architecture"
	
	The following section describes catalogs, matrices, and diagrams that
	may be created within Phase D (Technology Architecture) as described in
	the TOGAF Standard — Architecture Development Method.
	
	Technology Standards Catalog
	
	The Technology Standards catalog documents the agreed standards for
	technology across the enterprise covering technologies, and versions,
	the technology lifecycles, and the refresh cycles for the technology.
	
	Depending upon the organization, this may also include location or
	business domain-specific standards information.
	
	This catalog provides a snapshot of the enterprise standard technologies
	that are or can be deployed, and also helps identify the discrepancies
	across the enterprise.
	
	The Technology Standards catalog contains the following metamodel
	entities:
	
	-   Technology Service
	-   Logical Technology Component
	-   Physical Technology Component
	
	If technology standards are currently in place, apply these to the
	Technology Portfolio catalog to gain a baseline view of compliance with
	technology standards.
	
	Technology Portfolio Catalog
	
	The purpose of this catalog is to identify and maintain a list of all
	the technology in use across the enterprise, including hardware,
	infrastructure software, and application software. An agreed technology
	portfolio supports the lifecycle management of technology products and
	versions and also forms the basis for the definition of technology
	standards.
	
	The Technology Portfolio catalog provides a foundation on which to base
	the remaining matrices and diagrams. It is typically the start point of
	the Technology Architecture phase.
	
	Technology registries and repositories also provide input into this
	catalog from a baseline and target perspective.
	
	Technologies in the catalog should be classified against the defined
	taxonomy in use in the enterprise, such as the TOGAF TRM — see the
	TOGAF® Series Guide: The TOGAF® Technical Reference Model (TRM) —
	adapted as necessary to fit the classification of technology products in
	use.
	
	The Technology Portfolio catalog contains the following metamodel
	entities:
	
	-   Technology Service
	-   Logical Technology Component
	-   Physical Technology Component
	
	Application/Technology Matrix
	
	The Application/Technology matrix documents the mapping of applications
	to technology platform.
	
	This matrix should be aligned with and complement one or more platform
	decomposition diagrams.
	
	The Application/Technology matrix shows:
	
	-   Logical/Physical Application Components
	-   Services, Logical Technology Components, and Physical Technology
	    Components
	-   Physical Technology Component realizes Physical Application
	    Component relationships
	
	Environments and Locations Diagram
	
	The Environments and Locations diagram depicts which locations host
	which applications, identifies what technologies and/or applications are
	used at which locations, and finally identifies the locations from which
	business users typically interact with the applications.
	
	This diagram should also show the existence and location of different
	deployment environments, including non-production environments, such as
	development and pre-production.
	
	Platform Decomposition Diagram
	
	The Platform Decomposition diagram depicts the technology platform that
	supports the operations of the Information Systems Architecture. The
	diagram covers all aspects of the infrastructure platform and provides
	an overview of the enterprise's technology platform. The diagram can be
	expanded to map the technology platform to appropriate application
	components within a specific functional or process area. This diagram
	may show specification details, such as product versions, number of
	CPUs, etc. or simply could be an informal "eye-chart" providing an
	overview of the technical environment.
	
	The diagram should clearly show the enterprise applications. The
	technology platform for each application area can further be decomposed
	as follows:
	
	-   Hardware:
	    -   Logical Technology Components (with attributes)
	    -   Physical Technology Components (with attributes)
	-   Software:
	    -   Logical Technology Components (with attributes)
	    -   Physical Technology Components (with attributes)
	
	Depending upon the scope of the Enterprise Architecture work, additional
	technology cross-platform information (e.g., communications, telco, and
	video information) may be addressed.
	
	Processing Diagram
	
	The Processing diagram focuses on deployable units of code/configuration
	and how these are deployed onto the technology platform. A deployment
	unit represents the grouping of business capability, service, or
	application components. The Processing diagram addresses the following:
	
	-   Which set of application components need to be grouped to form a
	    deployment unit
	-   How one deployment unit connects/interacts with another (LAN, WAN,
	    and the applicable protocols)
	-   How application configuration and usage patterns generate load or
	    capacity requirements for different technology components
	
	The organization and grouping of deployment units depends on separation
	concerns of the presentation, business logic, and data store layers and
	service-level requirements of the components. For example, the
	presentation layer deployment unit is grouped based on the following:
	
	-   Application components that provide user interface or user access
	    functions
	-   Application components that are differentiated by location and user
	    roles
	
	There are several considerations to determine how application components
	are grouped together. Each deployment unit is made up of sub-units, such
	as:
	
	-   Installation: part that holds the executable code or package
	    configuration (in case of packages)
	-   Execution: application component with its associated state at run
	    time
	-   Persistence: data that represents the persistent state of the
	    application component
	
	Finally, these deployment units are deployed on either dedicated or
	shared technology components (workstation, web server, application
	server, or database server, etc.). It is important to note that
	technology processing can influence and have implications on the
	services definition and granularity.
	
	Networked Computing/Hardware Diagram
	
	Starting with the transformation to client-server systems from
	mainframes and later with the advent of e-Business and J2EE, large
	enterprises moved predominantly into a highly network-based distributed
	network computing environment with firewalls and demilitarized zones.
	Currently, most of the applications have a web front-end and, looking at
	the deployment architecture of these applications, it is very common to
	find three distinct layers in the network landscape; namely a web
	presentation layer, a business logic or application layer, and a
	back-end data store layer. It is common practice for applications to be
	deployed and hosted in a shared and common infrastructure environment.
	
	So it becomes highly critical to document the mapping between logical
	applications and the technology components (e.g., server) that supports
	the application both in the development and production environments. The
	purpose of this diagram is to show the "as deployed" logical view of
	logical application components in a distributed network computing
	environment. The diagram is useful for the following reasons:
	
	-   Enable understanding of which application is deployed where in the
	    distributed network computing environment
	-   Establishing authorization, security, and access to these technology
	    components
	-   Understand the Technology Architecture that supports the
	    applications during problem resolution and troubleshooting
	-   Isolate performance problems encountered by applications, determine
	    whether it is application code-related or technology
	    platform-related, and perform necessary upgrade to specific physical
	    technology components
	-   Identify areas of optimization as and when newer technologies are
	    available which will eventually reduce cost
	-   Enable application/technology auditing and prove compliance with
	    enterprise technology standards
	-   Serve as an important tool to introduce changes to the Technology
	    Architecture, thereby supporting effective change management
	-   Establish traceability and changing application end-point address
	    while moving application either from a shared environment to a
	    dedicated environment or vice versa
	
	The scope of the diagram can be appropriately defined to cover a
	specific application, business function, or the entire enterprise. If
	chosen to be developed at the enterprise level, then the network
	computing landscape can be depicted in an application-agnostic way as
	well.
	
	Network and Communications Diagram
	
	The Network and Communications diagram describes the means of
	communication — the method of sending and receiving information —
	between these assets in the Technology Architecture; insofar as the
	selection of package solutions in the preceding architectures put
	specific requirements on the communications between the applications.
	
	The Network and Communications diagram will take logical connections
	between client and server components and identify network boundaries and
	network infrastructure required to physically implement those
	connections. It does not describe the information format or content, but
	will address protocol and capacity issues.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.7_Phase_E_Opportunities_and_Solutions "3.6.7 Phase E: Opportunities and Solutions"
	
	The following section describes catalogs, matrices, and diagrams that
	may be created within Phase E (Opportunities & Solutions) as described
	in the TOGAF Standard — Architecture Development Method.
	
	Project Context Diagram
	
	A Project Context diagram shows the scope of a work package to be
	implemented as a part of a broader transformation roadmap. The Project
	Context diagram links a work package to the organizations, functions,
	services, processes, applications, data, and technology that will be
	added, removed, or impacted by the project.
	
	The Project Context diagram is also a valuable tool for project
	portfolio management and project mobilization.
	
	Benefits Diagram
	
	The Benefits diagram shows opportunities identified in an architecture
	definition, classified according to their relative size, benefit, and
	complexity. This diagram can be used by stakeholders to make selection,
	prioritization, and sequencing decisions on identified opportunities.
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6.8_Requirements_Management "3.6.8 Requirements Management"
	
	The following section describes catalogs, matrices, and diagrams that
	may be created within the Requirements Management phase as described in
	the TOGAF Standard — Architecture Development Method.
	
	Requirements Catalog
	
	The Requirements catalog captures things that the enterprise needs to do
	to meet its objectives. Requirements generated from architecture
	engagements are typically implemented through change initiatives
	identified and scoped during Phase E (Opportunities & Solutions).
	Requirements can also be used as a quality assurance tool to ensure that
	a particular architecture is fit-for-purpose (i.e., the architecture can
	meet all identified requirements).
	
	The Requirements catalog contains the following metamodel entities:
	
	-   Requirement
	-   Assumption
	-   Constraint
	-   Gap
	
snippet togaf_architecture-content_3_Architectural_Artifacts_3.6_Architectural_Artifacts_by_ADM_Phase "3.6 Architectural Artifacts by ADM Phase"
	
	Catalog, Matrix, and Diagram Concept
	
	The Enterprise Metamodel is used as a technique to structure
	architectural information in an ordered way so that it can be processed
	to meet the stakeholder needs. The majority of architecture stakeholders
	do not actually need to know what the architecture metamodel is and are
	only concerned with specific issues, such as "what functionality does
	this application support?", "which processes will be impacted by this
	project?", etc. In order to meet the needs of these stakeholders, the
	TOGAF concepts of building blocks, catalogs, matrices, and diagrams are
	used.
	
	Building blocks are entities of a particular type within the metamodel
	(for example, a business service called "Purchase Order"). Building
	blocks carry metadata according to the metamodel, which supports query
	and analysis. For example, business services have a metadata attribute
	for owner, which allows a stakeholder to query all business services
	owned by a particular organization. Building blocks may also include
	dependent or contained entities as appropriate to the context of the
	architecture (for example, a business service called "Purchase Order"
	may implicitly include a number of processes, data entities, application
	components, etc.).
	
	Catalogs are lists of building blocks of a specific type, or of related
	types, that are used for governance or reference purposes (for example,
	an organization chart, showing locations and actors). As with building
	blocks, catalogs carry metadata according to the metamodel, which
	supports query and analysis.
	
	Matrices are grids that show relationships between two or more model
	entities. Matrices are used to represent relationships that are
	list-based rather than graphical in their usage (for example, a CRUD
	matrix showing which applications Create, Read, Update, and Delete a
	particular type of data is difficult to represent visually).
	
	Diagrams are renderings of architectural content in a graphical format
	to allow stakeholders to retrieve the required information. Diagrams can
	also be used as a technique for graphically populating architecture
	content or for checking the completeness of information that has been
	collected. The TOGAF Content Framework defines a set of architecture
	diagrams to be created (e.g., organization chart). Each of these
	diagrams may be created several times for an architecture with different
	style or content coverage to suit stakeholder concerns.
	
	Building blocks, catalogs, matrices, and diagrams are all concepts that
	are well supported by leading Enterprise Architecture tools. In
	environments where tools are used to model the architecture, such tools
	typically support mechanisms to search, filter, and query the
	Architecture Repository.
	
	On-demand querying of the Architecture Repository (such as the business
	service ownership example mentioned above) can be used to generate ad
	hoc catalogs, matrices, and diagrams of the architecture. As this type
	of query is by nature required to be flexible, it is therefore not
	restricted or defined within the Enterprise Metamodel.
	
	The interactions between metamodel, building blocks, diagrams, and
	stakeholders are shown in Figure 3-3 . Figure 3-4 shows the artifacts
	that are associated with the TOGAF Enterprise Metamodel.
	
	[]
	
	Figure 3-3: Interactions between Metamodel, Building Blocks, Diagrams,
	and Stakeholders
	
	[]
	
	Figure 3-4: Artifacts Associated with the Enterprise Metamodel
	
	The recommended artifacts for production in each ADM phase are as
	follows.
	
snippet togaf_architecture-project-management_3.6_Architecture_Project_Closing "3.6 Architecture Project Closing"
	
	Architecture Project closure includes all activities that formally close
	the project. The Project Manager starts closing the project when all
	iterations or stages are finished and all project products or Project
	Work Packages are finished and approved by the Executive. It can also be
	started if the project’s business case is no longer valid and project
	governance decides to close the project.
	
	Architecture Project closing includes the following activities:
	
	-   Products handover
	-   Prepare and recommend closure
	-   Evaluate the project and document lessons learned
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.6_Characteristics_of_EA "3.6 Characteristics of EA"
	
	The World-Class Enterprise Architecture White Paper highlights that
	there is no single correct scope, level of detail, or purpose for an EA.
	Different enterprises will expect their EA to guide change at different
	levels within the enterprise.
	
	Herein lies a pair of substantive challenges. First, recognizing that
	the range, scope, and scale of an EA are as broad as the scope and scale
	of enterprises and their change programs. Second, the ability to
	develop, use, and sustain the required EA will be equally as broad.
	Later in this Guide, various approaches to scope (strategy, portfolio,
	or project), the effort, and an approach to enhance the positive impact
	of EA are discussed.
	
	The purpose of EA is to optimize the enterprise to realize a specific
	business strategy or mission. All optimization must be responsive to
	change. Optimizing an enterprise to best realize the business strategy
	or mission requires all components to work together. Achieving
	competitive advantage is possible when all components are optimized to
	the enterprise strategy or mission.
	
	An EA that highlights the relationship between the components of an
	enterprise helps facilitate effective management and exploitation
	opportunities. EA provides a strategic context for the evolution of the
	enterprise in response to the constantly changing needs of the business
	environment.
	
	Furthermore, a good EA enables the sponsors and the enterprise as a
	whole to achieve the right balance across conflicting demands. Without
	the EA, it is highly unlikely that all the concerns and requirements
	will be considered and addressed with an appropriate trade-off.
	
snippet togaf_introduction_3_Core_Concepts_3.6_Deliverables_Artifacts_and_Building_Blocks "3.6 Deliverables, Artifacts, and Building Blocks"
	
	Architects executing the ADM will produce a number of outputs as a
	result of their efforts, such as process flows, architectural
	requirements, project plans, project compliance assessments, etc. The
	TOGAF Architecture Content Framework (see the TOGAF Standard —
	Architecture Content) provides a structural model for architectural
	content that allows major work products to be consistently defined,
	structured, and presented.
	
	The Architecture Content Framework uses the following three categories
	to describe the type of architectural work product within the context of
	use:
	
	-   A deliverable is a work product that is contractually specified and
	    in turn formally reviewed, approved, and signed off by the
	    stakeholders
	
	    Deliverables represent the output of projects and those deliverables
	    that are in documentation form will typically be archived at
	    completion of a project, or transitioned into an Architecture
	    Repository as a reference model, standard, or snapshot of the
	    Architecture Landscape at a point in time.
	
	-   An artifact is an architectural work product that describes an
	    aspect of the architecture
	
	    Artifacts are generally classified as catalogs (lists of things),
	    matrices (showing relationships between things), and diagrams
	    (pictures of things). Examples include a requirements catalog,
	    application interaction matrix, and a value chain diagram. An
	    architectural deliverable may contain one or more artifacts and
	    artifacts will form the content of the Architecture Repository. An
	    artifact may or may not be considered a deliverable based on the
	    contractual specification.
	
	-   A building block represents a potentially re-usable component that
	    can be combined with other building blocks to deliver architectures
	    and solutions
	
	    Building blocks can be defined at various levels of detail,
	    depending on what stage of architecture development has been
	    reached. For instance, at an early stage, a building block can
	    simply consist of a name or an outline description. Later on, a
	    building block may be decomposed into multiple supporting building
	    blocks and may be accompanied by a full specification. Building
	    blocks can relate to "architectures" or "solutions".
	
	    -   Architecture Building Blocks (ABBs) typically describe required
	        capability and shape the specification of Solution Building
	        Blocks (SBBs); for example, a customer services capability may
	        be required within an enterprise, supported by many SBBs, such
	        as processes, data, and application software
	    -   Solution Building Blocks (SBBs) represent components that will
	        be used to implement the required capability; for example, a
	        network is a building block that can be described through
	        complementary artifacts and then put to use to realize solutions
	        for the enterprise
	
	The relationships between deliverables, artifacts, and building blocks
	are shown in Figure 3-2 .
	
	[]
	
	Figure 3-2: Relationships between Deliverables, Artifacts, and Building
	Blocks
	
	For example, an Architecture Definition Document is a deliverable that
	documents an Architecture Description. This document will contain a
	number of complementary artifacts that are views of the building blocks
	relevant to the architecture. For example, a process flow diagram (an
	artifact) may be created to describe the target call handling process (a
	building block). This artifact may also describe other building blocks,
	such as the actors involved in the process (e.g., a Customer Services
	Representative). An example of the relationships between deliverables,
	artifacts, and building blocks is illustrated in Figure 3-3 .
	
	[]
	
	Figure 3-3: Example — Architecture Definition Document
	
	The concepts of Deliverables, Artifacts, and Building Blocks are
	described in more detail in the TOGAF Standard — Architecture Content.
	
	The TOGAF Standard — ADM Techniques describes the Architecture
	Development Method and includes summary lists of Deliverables and
	Artifacts that may be created in each phase. The TOGAF Standard —
	Architecture Content contains detailed descriptions of these.
	
snippet togaf_introduction_3_Core_Concepts_3.7.1_Contextual_Abstraction_Level "3.7.1 Contextual Abstraction Level"
	
	This abstraction level is focused on understanding the environment in
	which an enterprise operates and the context in which architecture work
	is planned and executed. It answers why an enterprise undertakes
	architecture work, what is the scope of work, and the motivation in
	terms of goals, drivers, and objectives.
	
snippet togaf_introduction_3_Core_Concepts_3.7.2_Conceptual_Abstraction_Level "3.7.2 Conceptual Abstraction Level"
	
	This abstraction level is centered on decomposing the requirements to
	understand the problem, and what is needed to address the problem,
	without unduly focusing on how the architecture will be realized. It
	answers what is necessary to realize the requirements and is usually
	modeled using service models (business service, application service,
	technology service) that represent desired behavior.
	
	Note this abstraction level can also be referred to as either service
	abstraction or behavior abstraction.
	
snippet togaf_introduction_3_Core_Concepts_3.7.3_Logical_Abstraction_Level "3.7.3 Logical Abstraction Level"
	
	This abstraction level is focused on identifying the kinds of business,
	data, application, and technology components needed to achieve the
	services identified in the conceptual level. It is about identifying how
	an architecture can be organized and structured, in an
	implementation-independent fashion. There will potentially be several
	ways to group services into logical components, based on principles and
	other grouping criteria, providing different logical solution
	alternatives.
	
snippet togaf_introduction_3_Core_Concepts_3.7.4_Physical_Abstraction_Level "3.7.4 Physical Abstraction Level"
	
	This abstraction level manages the allocation and implementation of
	physical components to meet the identified logical components. It is
	about determining with what physical components the logical-level
	components can be realized. There will potentially be many ways to use
	physical components to realize logical components, based on principles
	and other grouping criteria, providing different physical solution
	alternatives.
	
snippet togaf_introduction_3_Core_Concepts_3.7_Architecture_Abstraction "3.7 Architecture Abstraction"
	
	An architectural technique for dividing a problem area into smaller
	problem areas that are easier to model and therefore easier to solve.
	
	Abstraction levels are layered in nature, moving from high-level models
	to more detailed models.
	
	Architecture effort can be divided into four distinct abstraction levels
	that cross the Business, Data, Application, and Technology domains to
	answer fundamental questions about an architecture:
	
	-   Why — why is the architecture needed?
	-   What — what functionality and other requirements need to be met by
	    the architecture?
	-   How — how do we structure the functionality?
	-   With what — with what assets shall we implement this structure?
	
	Note that why, what, and how have no connection to their use in the
	Zachman® Enterprise Architecture Framework.
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3.7_Referenced_Techniques "3.7 Referenced Techniques"
	
	Within this Guide, there are references to techniques and key literature
	created by thought leaders. This Guide is developed using reference
	materials that are freely available through standards organizations and
	academic publications. There is no promotion or reference to any
	commercial techniques or tools. There is often commercial material
	available for topics discussed in this Guide. It is up to the reader to
	seek them.
	
	References to key literature and their techniques are intended only to
	be representative. The reader is expected to read and assimilate
	referenced publications for a full understanding of these related
	topics. This Guide only highlights why it is used and what outcome is
	expected. Further, this Guide does not intend to suggest that the
	referenced techniques and literature are definitive. Other techniques
	and key literature can readily be substituted. The literature referenced
	is part of a body of knowledge that continuously evolves, and the reader
	is advised to explore updates to literature and techniques referenced in
	this Guide.
	
	This Guide provides a summary of EA Content Frameworks, many of which
	are industry-specific, as starting points that can accelerate
	development of a Content Framework. See Appendix A (Partial List of EA
	Content Frameworks), Chapter 13 (Mapping the EA Leader’s Guide to the
	TOGAF Framework), and Chapter 8 (Customization of Architecture Contents
	and Metamodel) for the discussion.)
	
	To summarize, this Guide offers guidance on what should be considered,
	how to customize a version of the ADM to an enterprise context, and when
	to seek use of automation tools. It also provides a commentary on
	successful approaches to continuously evolve and grow the application of
	EA Capability to meet the evolving nature of the enterprise context.
	
snippet togaf_introduction_3_Core_Concepts_3.8_Architecture_Principles "3.8 Architecture Principles"
	
	Principles are general rules and guidelines, intended to be enduring and
	seldom amended, that inform and support the way in which an organization
	sets about fulfilling its mission.
	
	Depending on the organization, principles may be established within
	different domains and at different levels. Two key domains inform the
	development and utilization of architecture:
	
	-   Enterprise Principles provide a basis for decision-making throughout
	    an enterprise, and inform how the organization sets about fulfilling
	    its mission
	
	    Such principles are commonly found as a means of harmonizing
	    decision-making across an organization. In particular, they are a
	    key element in a successful Architecture Governance strategy (see
	    TOGAF Standard — EA Capability and Governance).
	
	    Within the broad domain of Enterprise Principles, it is common to
	    have subsidiary principles within a business or organizational unit;
	    for example, principles specific to IT, HR, domestic operations, or
	    overseas operations. These principles provide a basis for
	    decision-making within the subsidiary domain and will inform
	    architecture development within the domain. Care must be taken to
	    ensure that the principles used to inform architecture development
	    align to the organizational context of the Architecture Capability.
	
	-   Architecture Principles are a set of principles that relate to
	    architecture work
	
	    They reflect a level of consensus across the enterprise and embody
	    the spirit and thinking of existing Enterprise Principles.
	    Architecture Principles govern the architecture process, affecting
	    the development, maintenance, and use of the Enterprise
	    Architecture.
	
	Within an enterprise the hierarchy of principles starts with the
	Enterprise Principles. The subsidiary segment principles must exist
	within the bounds of these Enterprise Principles which are overarching.
	Consequently, at each hierarchical level the set of principles will be
	informed by and elaborate on the principles inherited from the level
	above and cannot overstep their boundaries.
	
	Architecture Principles may restate other enterprise guidance in terms
	and form that effectively guide architecture development.
	
	Architecture Principles define the underlying general rules and
	guidelines for the use and deployment of all resources and assets across
	the enterprise. They reflect a level of consensus among the various
	elements of the enterprise and form the basis for making future
	architecture decisions.
	
	Each Architecture Principle should be clearly related back to the
	business objectives and key architecture drivers.
	
	Architecture Principles are further explained in the TOGAF Standard —
	ADM Techniques.
	
snippet togaf_introduction_3_Core_Concepts_3.9_Interoperability "3.9 Interoperability"
	
	A definition of interoperability is "the ability to share information
	and services". Defining the degree to which the information and services
	are or are not to be shared is a very useful architectural requirement,
	especially in a complex organization and/or extended enterprise.
	
	The determination of interoperability is present throughout the
	Architecture Development Method (ADM) as follows:
	
	-   In the Architecture Vision (Phase A), the nature and security
	    considerations of the information and service exchanges are first
	    revealed within the business scenarios
	-   In the Business Architecture (Phase B), the information and service
	    exchanges are further defined in business terms
	-   In the Data Architecture (Phase C), the content of the information
	    exchanges is detailed using the corporate data and/or information
	    exchange model
	-   In the Application Architecture (Phase C), the way that the various
	    applications are to share the information and services is specified
	-   In the Technology Architecture (Phase D), the appropriate technical
	    mechanisms to permit the information and service exchanges are
	    specified
	-   In Opportunities & Solutions (Phase E), the actual solutions (e.g.,
	    Commercial Off-The-Shelf (COTS) packages) are selected
	-   In Migration Planning (Phase F), the interoperability is logically
	    implemented
	
	There are many ways to define interoperability and the aim is to define
	one that is consistently applied within the enterprise and extended
	enterprise. It is best that both the enterprise and the extended
	enterprise use the same definitions.
	
	Many organizations find it useful to categorize interoperability as
	follows:
	
	-   Operational or Business Interoperability defines how different parts
	    of the enterprise work together at the business level
	-   Information Interoperability defines how information is to be shared
	-   Technical Interoperability defines how technical resources are to be
	    shared or at least connect to one another
	
	From an IT perspective, it is also useful to consider interoperability
	in a similar vein to Enterprise Application Integration (EAI);
	specifically:
	
	-   Presentation Integration/Interoperability is where a common
	    look-and-feel approach through a common portal-like solution guides
	    the user to the underlying functionality of the set of systems
	
	-   Information Integration/Interoperability is where the corporate
	    information is seamlessly shared between the various corporate
	    applications to achieve, for example, a common set of client
	    information
	
	    Normally this is based upon a commonly accepted corporate ontology
	    and shared services for the structure, quality, access, and
	    security/privacy for the information.
	
	-   Application Integration/Interoperability is where the corporate
	    functionality is integrated and shareable so that the applications
	    are not duplicated (e.g., one change of address service/component;
	    not one for every application) and are seamlessly linked together
	    through functionality such as workflow
	
	    This impacts the business and infrastructure applications and is
	    very closely linked to corporate business process
	    unification/interoperability.
	
	-   Technical Integration/Interoperability includes common methods and
	    shared services for the communication, storage, processing, and
	    access to data primarily in the application platform and
	    communications infrastructure domains
	
	Interoperability and Interoperability Requirements are addressed in
	detail in the TOGAF Standard — ADM Techniques.
	
snippet togaf_metadata-management_30_Acronyms_Abbreviations "Acronyms & Abbreviations"
	
	ADM        Architecture Development Method
	
	AI         Artificial Intelligence
	
	API        Application Program Interface
	
	B2C        Business-to-Consumer
	
	B2B2C      Business-to-Business-to-Consumer
	
	BI         Business Intelligence
	
	CIF        Customer Information File
	
	CSV        Comma-Separated Value
	
	DBMS       Database Management System
	
	DCMES      Dublin Core Metadata Element Set
	
	DCMI       Dublin Core Metadata Initiative
	
	DPIA       Data Privacy Impact Assessment
	
	GDPR       General Data Protection Regulation
	
	IAF        Integrated Architecture Framework
	
	JSON       JavaScript Object Notation
	
	KPI        Key Performance Indicator
	
	MDR        Metadata Registries
	
	OMG        Object Management Group
	
	RDBMS      Relational Database Management System
	
	SLA        Service-Level Agreement
	
	SME        Small and Medium Enterprise
	
	SQL        Structured Query Language
	
	URL        Uniform Resource Locator
	
	XML        Extensible Markup Language
	
	------------------------------------------------------------------------
	
snippet togaf_metadata-management_31_Footnotes "Footnotes"
	
	[1] Refer to:
	https://en.wikipedia.org/wiki/General_Data_Protection_Regulation.
	
	[2] Refer to: https://en.wikipedia.org/wiki/Solvency_II.
	
	[3] Refer to: https://en.wikipedia.org/wiki/IFRS_17.
	
snippet togaf_applying-the-adm_INDEX_3_Applying_the_ADM_Across_the_Architecture_Landscape "-   3. Applying the ADM Across the Architecture Landscape"
	    -   3.1 Overview
	    -   3.2 Architecture Landscape
	    -   3.3 Developing Architectures at Different Levels
	    -   3.4 Organizing the Architecture Landscape to Understand the
	        State of the Enterprise
snippet togaf_applying-the-adm_3_Applying_the_ADM_Across_the_Architecture_Landscape_3_Applying_the_ADM_Across_the_Architecture_Landscape "3. Applying the ADM Across the Architecture Landscape"
	
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 Overview | 3.2 Architecture Landscape | 3.3 Developing Architectures at Different Levels | 3.4 Organizing the Architecture Landscape to Understand the State of the Enterprise
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_business-architecture_value-streams_3_Approach_to_Creating_Value_Streams "3 Approach to Creating Value Streams"
	
	A common question that confronts many Business Architects is which
	should come first: developing the value stream map or the business
	capability model? The short answer is that it does not matter, because
	one should not exist without the other for very long. Value streams
	provide valuable stakeholder context into why we need business
	capabilities, while business capabilities demonstrate what we need for a
	particular value stream to be successful.
	
	In practice, it is often a lot faster and easier to draft a set of value
	streams than a fully-fledged business capability model. If you are
	starting from scratch, creating the value stream map first may be the
	preferred approach because you will be able to demonstrate results
	sooner, and the value stream map will help to inform the development of
	the business capability model.
	
snippet togaf_architecture-content_INDEX_3_Architectural_Artifacts "-   3. Architectural Artifacts"
	    -   3.1 Basic Concepts
	        -   3.1.1 Simple Example of an Architecture Viewpoint and
	            Architecture View
	    -   3.2 Developing Architecture Views in the ADM
	        -   3.2.1 General Guidelines
	        -   3.2.2 Architecture View Creation Process
	    -   3.3 Views, Tools, and Languages
	        -   3.3.1 Overview
	    -   3.4 Architecture Views and Architecture Viewpoints
	        -   3.4.1 Example of Architecture Views and Architecture
	            Viewpoints
	        -   3.4.2 Architecture Views and Architecture Viewpoints in
	            Enterprise Architecture
	        -   3.4.3 Need for a Common Language and Interoperable Tools for
	            Architecture Description
	    -   3.5 Conclusions
	    -   3.6 Architectural Artifacts by ADM Phase
	        -   Catalog, Matrix, and Diagram Concept
	
	        -   3.6.1 Preliminary Phase
	            -   Principles Catalog
	        -   3.6.2 Phase A: Architecture Vision
	            -   Stakeholder Catalog
	            -   Value Chain Diagram
	            -   Solution Concept Diagram
	            -   Business Model Diagram
	            -   Business Capability Map
	            -   Value Stream Map
	        -   3.6.3 Phase B: Business Architecture
	            -   Organization/Actor Catalog
	            -   Driver/Goal/Objective Catalog
	            -   Role Catalog
	            -   Business Service/Function Catalog
	            -   Location Catalog
	            -   Process/Event/Control/Product Catalog
	            -   Contract/Measure Catalog
	            -   Business Capabilities Catalog
	            -   Value Stream Catalog
	            -   Value Stream Stages Catalog
	            -   Business Glossary Catalog
	            -   Business Interaction Matrix
	            -   Actor/Role Matrix
	            -   Value Stream/Capability Matrix
	            -   Strategy/Capability Matrix
	            -   Capability/Organization Matrix
	            -   Business Footprint Diagram
	            -   Business Service/Information Diagram
	            -   Functional Decomposition Diagram
	            -   Product Lifecycle Diagram
	            -   Goal/Objective/Business Service Diagram
	            -   Business Use-Case Diagram
	            -   Organization Decomposition Diagram
	            -   Process Flow Diagram
	            -   Business Event Diagram
	            -   Business Capability Map
	            -   Value Stream Map
	            -   Organization Map
	            -   Information Map
	        -   3.6.4 Phase C: Data Architecture
	            -   Data Entity/Data Component Catalog
	            -   Data Entity/Business Function Matrix
	            -   Application/Data Matrix
	            -   Conceptual Data Diagram
	            -   Logical Data Diagram
	            -   Data Dissemination Diagram
	            -   Data Security Diagram
	            -   Data Migration Diagram
	            -   Data Lifecycle Diagram
	        -   3.6.5 Phase C: Application Architecture
	            -   Application Portfolio Catalog
	            -   Interface Catalog
	            -   Application/Organization Matrix
	            -   Role/Application Matrix
	            -   Application/Function Matrix
	            -   Application Interaction Matrix
	            -   Application Communication Diagram
	            -   Application and User Location Diagram
	            -   Application Use-Case Diagram
	            -   Enterprise Manageability Diagram
	            -   Process/Application Realization Diagram
	            -   Software Engineering Diagram
	            -   Application Migration Diagram
	            -   Software Distribution Diagram
	        -   3.6.6 Phase D: Technology Architecture
	            -   Technology Standards Catalog
	            -   Technology Portfolio Catalog
	            -   Application/Technology Matrix
	            -   Environments and Locations Diagram
	            -   Platform Decomposition Diagram
	            -   Processing Diagram
	            -   Networked Computing/Hardware Diagram
	            -   Network and Communications Diagram
	        -   3.6.7 Phase E: Opportunities and Solutions
	            -   Project Context Diagram
	            -   Benefits Diagram
	        -   3.6.8 Requirements Management
	            -   Requirements Catalog
snippet togaf_architecture-content_3_Architectural_Artifacts_3_Architectural_Artifacts "3. Architectural Artifacts"
	
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 Basic Concepts | 3.2 Developing Architecture Views in the ADM | 3.3 Views, Tools, and Languages | 3.4 Architecture Views and Architecture Viewpoints | 3.5 Conclusions | 3.6 Architectural Artifacts by ADM Phase
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter discusses the concepts surrounding architecture artifacts
	and then describes the artifacts that are recommended to be created for
	each phase within the ADM.
	
snippet togaf_ea-capability-and-governance_INDEX_3_Architecture_Governance "-   3. Architecture Governance"
	    -   3.1 Introduction
	        -   3.1.1 Levels of Governance within the Enterprise
	        -   3.1.2 Nature of Governance
	            -   3.1.2.1 Governance: A Generic Perspective
	            -   3.1.2.2 Characteristics of Governance
	        -   3.1.3 Technology Governance
	        -   3.1.4 IT Governance
	            -   3.1.4.1 An IT Controls Framework — COBIT
	        -   3.1.5 Architecture Governance: Overview
	            -   3.1.5.1 Architecture Governance Characteristics
	            -   3.1.5.2 Architecture Governance as a Board-Level
	                Responsibility
	            -   3.1.5.3 The TOGAF Standard and Architecture Governance
snippet togaf_ea-capability-and-governance_3_Architecture_Governance_3_Architecture_Governance "3. Architecture Governance"
	
	  -- ----------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 Introduction | 3.2 Architecture Governance Framework | 3.3 Architecture Governance in Practice
	  -- ----------------------------------------------------------------------------------------------------------------------
	
	This chapter provides a framework and guidelines for Architecture
	Governance.
	
snippet togaf_adm_INDEX_3_A_Architecture_Vision "-   3. Phase A: Architecture Vision"
	    -   3.1 Objectives
	    -   3.2 Inputs
	        -   3.2.1 Reference Materials External to the Enterprise
	        -   3.2.2 Non-Architectural Inputs
	        -   3.2.3 Architectural Inputs
	    -   3.3 Steps
	        -   3.3.1 Establish the Architecture Project
	        -   3.3.2 Identify Stakeholders, Concerns, and Business
	            Requirements
	        -   3.3.3 Confirm and Elaborate Business Goals, Business
	            Drivers, and Constraints
	        -   3.3.4 Evaluate Capabilities
	        -   3.3.5 Assess Readiness for Business Transformation
	        -   3.3.6 Define Scope
	        -   3.3.7 Confirm and Elaborate Architecture Principles,
	            including Business Principles
	        -   3.3.8 Develop Architecture Vision
	        -   3.3.9 Define the Target Architecture Value Propositions and
	            KPIs
	        -   3.3.10 Identify the Business Transformation Risks and
	            Mitigation Activities
	        -   3.3.11 Develop Statement of Architecture Work; Secure
	            Approval
	    -   3.4 Outputs
	    -   3.5 Approach
	        -   3.5.1 General
	        -   3.5.2 Creating the Architecture Vision
snippet togaf_adm_3_A_Architecture_Vision_3_A_Architecture_Vision "3. Phase A: Architecture Vision"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 Objectives | 3.2 Inputs | 3.3 Steps | 3.4 Outputs | 3.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the initial phase of the ADM. It includes
	information about defining the scope, identifying the stakeholders,
	creating the Architecture Vision, and obtaining approvals.
	
	[]
	
	Figure 3-1: Phase A: Architecture Vision
	
snippet togaf_business-architecture_business-capabilities_3_Business_Capability_Mapping "3 Business Capability Mapping"
	
	A business capability map represents the complete, stable set of
	business capabilities (along with all of their defining characteristics)
	that covers the business, enterprise, or organizational unit in
	question. The end-product of the modeling process is typically a
	business capability map, which provides the visual depiction (or
	blueprint) of all the business capabilities at an appropriate level of
	decomposition, logically grouped into different categories or
	perspectives to enable effective analysis and planning.
	
	Once defined, the business capability map provides a self-contained view
	of the business that is independent of the current organizational
	structure, business processes, IT systems and applications, and the
	product or service portfolio. However, mapping the business capabilities
	back to organizational units, value streams, IT architecture, and the
	strategic and operational plans will provide greater insight into the
	alignment and optimization of each of those domains.
	
snippet togaf_master-data-management_3_C-MDM_Capability "3 C-MDM Capability"
	
	For a given organization, C-MDM refers to people, processes,
	organizations, and systems put together to manage kernel customer data
	as an asset. It includes business value, data quality, availability, and
	security to deliver the required common customer data to relevant
	use-cases.
	
	Kernel customer data is all the customer information shared across the
	organization’s departments:
	
	-   Mandatory customer data for the organization to ensure at least
	    minimal customer experience (name, surname, address, customer ID,
	    etc.)
	-   Transverse and strategic customer data for the organization that
	    should be shared across the value chain of the organization
	    (customer type, age, professional activity category, etc.)
	-   Data often already existing outside the context of interaction with
	    the organization
	
	Kernel customer data is mainly about identification keys, personal
	identification data, contact data, preferences and consent data, and
	relationships data (relations between customers, hierarchy, etc.).
	
	The C-MDM capability is composed of business and application functions.
	It requires well organized teams (Business Architecture) and adapted
	information systems (Information Systems Architecture). One of the
	challenges for the C-MDM capability is to find a subtle balance to allow
	adjustment between automation (in data quality, de-duplication) and
	manual processes when the algorithms do not produce certainty. On the
	one hand a lack of automation can generate excessive manual workflow,
	but on the other hand the algorithm cannot solve all the data quality
	issues, and missing human intelligence and workforce to deal with those
	cases prevents them from reaching the right data quality.
	
	The C-MDM capability is under the responsibility of the customer data
	owner executive, who will ensure the contribution of concerned actors,
	as detailed in Figure 4.
	
	[]
	
	[]
	
	Figure 4: C-MDM Capability
	
	C-MDM business functions are under the responsibility of various actors:
	business actors like data owners or stewards, data managers, and
	architects collaborating to build the C-MDM vision and to operate it
	every day.
	
	Table 1 provides the description of high-level business functions to
	leverage the capability. A complete detailed reference model is
	available in Chapter 5.
	
	Table 1: C-MDM High-Level Business Function Descriptions
	
	  Business Function                              Description
	  ---------------------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  C-MDM Capabilities Management and Governance   Business functions supporting C-MDM strategy: governance organization, roadmap. This includes definition of customer data ownership and data stewardship and ensures that decisions are taken at the right place, with the relevant stakeholders and resources (financial and humans) to execute.
	  C-MDM Design                                   Business functions supporting design tasks: data business rules definition, customer master data model design, IT architecture design, delivery of documentation resulting from or needed by this design work. The design activity aims to identify mutualized processes across business lines implicated in C-MDM.
	  C-MDM Operation                                Business functions supporting customer master data services delivery to consumers and producers of customer data. The purpose is to maintain and continuously improve the data quality and ensure the right level of Service-Level Agreement (SLA). It leverages relevant approaches to resolve data issues and respond to requests around data security, compliance, or data availability and accessibility.
	  Extension of C-MDM Scope and Usages            Business functions continuously supporting the extension of C-MDM use scope or data scope. For example, the process of integrating a new customer data producer system is the scope.
	  Communication                                  Business functions related to communication to share, advertise across the organization around C-MDM team services, ongoing roadmap/strategy, and actual results. These functions aim to show the value of customer data to the organization (use-cases, quality, etc.), and to make it obvious for everyone why this is critical for the organization to properly manage this data.
	  External Customer Data Acquisition             Business functions must consider enhancing customer data with external data sources, especially to accelerate data quality checks and continuous quality improvement.
	  Data Quality and Business Value Measure        Business functions needed to deliver and measure data quality, demonstrate continuous improvement, and show business value through Key Performance Indicator (KPI) definition and calculation to all involved stakeholders including business and data management actors.
	
	The C-MDM system provides a single point of truth for customer data and
	allows the creation, update, deletion, and distribution of kernel
	customer data. It oversees the current version, past versions, and data
	lifecycle events such as mergers.
	
	This system is “in the middle” of the information system, interconnected
	with all applications requiring customer data. It is involved in
	operational interactions with customers; it must therefore provide a
	very high quality of service and performance.
	
	As this system is highly integrated with other applications, it must be
	decoupled from them in operations (e.g., stopping a Customer 360 (C360)
	service should not stop the C-MDM service), in maintenance (updating a
	C360 should not impact or require the test of the C-MDM service), and in
	design (data model) to be able to deliver the service described above.
	
	The C-MDM system must also provide event data related to customers in a
	C360 view (e.g., contracts, history of interactions with the
	organization, claims, calls with organization services, etc.) to support
	customer data management.
	
	Table 2 provides the description of high-level application functions to
	leverage the capability.
	
	Table 2: C-MDM High-Level Application Function Descriptions
	
	+-----------------------------------+-----------------------------------+
	| Application Function              | Description                       |
	+===================================+===================================+
	| Data Acquisition                  | Application functions needed to   |
	|                                   | capture customer data from a      |
	|                                   | human user interface or other     |
	|                                   | system inputs like data flows or  |
	|                                   | an API.                           |
	+-----------------------------------+-----------------------------------+
	| Data Quality Management           | Operational application functions |
	|                                   | ensure the quality of the data by |
	|                                   | implementing business and         |
	|                                   | technical rules, and supporting   |
	|                                   | business workflow and validation  |
	|                                   | and merging processes.            |
	+-----------------------------------+-----------------------------------+
	| Data Privacy Management           | Application functions supporting  |
	|                                   | data privacy constraints like     |
	|                                   | retention rules.                  |
	+-----------------------------------+-----------------------------------+
	| Data Access                       | Application functions required by |
	|                                   | customer data consumers (human or |
	|                                   | other systems) to access the      |
	|                                   | “single point of truth” master    |
	|                                   | data according to visibility      |
	|                                   | rules/access rights. It should    |
	|                                   | provide:                          |
	|                                   |                                   |
	|                                   | -   Current information about a   |
	|                                   |     given customer                |
	|                                   | -   History of changes on this    |
	|                                   |     customer: when, who (user if  |
	|                                   |     manual/application if         |
	|                                   |     automated), what              |
	|                                   | -   Single point for create,      |
	|                                   |     update, delete, de-duplicate, |
	|                                   |     etc.                          |
	|                                   |                                   |
	|                                   | These operations can be           |
	|                                   | decentralized in operational      |
	|                                   | applications to fit different     |
	|                                   | business contexts (e.g., an       |
	|                                   | offline version of CRM). But in   |
	|                                   | that case, the capability must be |
	|                                   | managed. The update/create event  |
	|                                   | must reach the C-MDM as fast as   |
	|                                   | possible to avoid data duplicates |
	|                                   | that would corrupt the master     |
	|                                   | data version.                     |
	+-----------------------------------+-----------------------------------+
	| Reference Data Management         | Application functions required to |
	|                                   | manage reference data (e.g.,      |
	|                                   | stable categories list,           |
	|                                   | transcoding tables). Reference    |
	|                                   | data lists are a key enabler of   |
	|                                   | data quality for user interface   |
	|                                   | controls or quality rules         |
	|                                   | execution.                        |
	+-----------------------------------+-----------------------------------+
	| Quality & technical Dashboards    | Application functions needed to   |
	| and audit                         | monitor technical and data        |
	|                                   | issues, C-MDM data usage, data    |
	|                                   | quality, and to ensure            |
	|                                   | auditability.                     |
	+-----------------------------------+-----------------------------------+
	| Customer Master Data              | Administration functions like     |
	| Administration                    | rights/roles management, data     |
	|                                   | model management, logging         |
	|                                   | management, etc.                  |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_INDEX_3_Core_Concepts "-   3. Core Concepts"
	    -   3.1 What is the TOGAF Standard?
	    -   3.2 What is Architecture in the Context of the TOGAF Standard?
	    -   3.3 What Kind of Architecture Does the TOGAF Standard Deal With?
	    -   3.4 Architecture Development Method
	    -   3.5 Enterprise Architecture Services
	        -   3.5.1 Enterprise Support Services
	        -   3.5.2 Design Support Services
	        -   3.5.3 Development Support Services
	        -   3.5.4 Requirements Elicitation and Understanding Services
	        -   3.5.5 Architecture Planning Services
	        -   3.5.6 Enterprise Architecture Practice Development Support
	            Services
	    -   3.6 Deliverables, Artifacts, and Building Blocks
	    -   3.7 Architecture Abstraction
	        -   3.7.1 Contextual Abstraction Level
	        -   3.7.2 Conceptual Abstraction Level
	        -   3.7.3 Logical Abstraction Level
	        -   3.7.4 Physical Abstraction Level
	    -   3.8 Architecture Principles
	    -   3.9 Interoperability
	    -   3.10 Enterprise Continuum
	    -   3.11 Architecture Repository
	    -   3.12 TOGAF Content Framework and Enterprise Metamodel
	        -   3.12.1 Overview
	        -   3.12.2 Content Framework
	        -   3.12.3 Enterprise Metamodel
	        -   3.12.4 Developing the Enterprise Metamodel
	    -   3.13 Establishing and Maintaining an Enterprise Architecture
	        Capability
	    -   3.14 Establishing the Architecture Capability as an Operational
	        Entity
	    -   3.15 Using the TOGAF Standard with Other Frameworks
	    -   3.16 Using the TOGAF Framework with Different Architecture
	        Styles
	    -   3.17 Architecture Views and Viewpoints
	    -   3.18 Enterprise Agility
	    -   3.19 Risk Management
snippet togaf_introduction_3_Core_Concepts_3_Core_Concepts "3. Core Concepts"
	
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 What is the TOGAF Standard? | 3.2 What is Architecture in the Context of the TOGAF Standard? | 3.3 What Kind of Architecture Does the TOGAF Standard Deal With? | 3.4 Architecture Development Method | 3.5 Enterprise Architecture Services | 3.6 Deliverables, Artifacts, and Building Blocks | 3.7 Architecture Abstraction | 3.8 Architecture Principles | 3.9 Interoperability | 3.10 Enterprise Continuum | 3.11 Architecture Repository | 3.12 TOGAF Content Framework and Enterprise Metamodel | 3.13 Establishing and Maintaining an Enterprise Architecture Capability | 3.14 Establishing the Architecture Capability as an Operational Entity | 3.15 Using the TOGAF Standard with Other Frameworks | 3.16 Using the TOGAF Framework with Different Architecture Styles | 3.17 Architecture Views and Viewpoints | 3.18 Enterprise Agility | 3.19 Risk Management
	
	
	For the purposes of the TOGAF Standard, the core concepts provided in
	this chapter apply.
	
snippet togaf_business-architecture_business-scenarios_3_Creating_the_Business_Scenario "3 Creating the Business Scenario"
	
snippet togaf_reference-models_digital-business-reference-model_3_DBRM_Elements_High-Level_Breakdown "3 DBRM Elements – High-Level Breakdown"
	
snippet togaf_reference-models_government-reference-model_3_Defense_and_Security "3 Defense and Security"
	
	Defense and Security corresponds to the research, maintenance,
	equipment, procurement, operations, and development of forces, weapons,
	and related entities. This also comprises remuneration and benefits paid
	to all active and non-active civilians and personnel.
	
	[]
	
	Figure 3: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Defense and Security Sector
	
snippet togaf_architecture-project-management_3_Detailed_Guidance "3 Detailed Guidance"
	
	This section describes a detailed Project Management approach to use
	when developing Enterprise Architecture. The target audience of this
	section is Enterprise Architects who are already familiar with the TOGAF
	Standard and who lead Architecture Projects.
	
	This section is organized into subsections which describe the approach
	to:
	
	-   Architecture Project start-up, which includes the Project Management
	    activities of the ADM Phase A and the project start-up and
	    “Initiation” activities of the Project Management methods
	-   Architecture Project planning, which includes project planning
	    activities based on the Project Management methods
	-   Planning a stage, which describes how to apply the Project
	    Management methods to plan an Architecture Project stage
	-   Execute, monitor, and control a stage, which describes how to
	    monitor and control the architecture development activities of the
	    ADM Phases B to F using the Project Management methods
	-   Ending a stage, which describes how to apply the Project Management
	    methods at the end of an Architecture Project stage
	-   Architecture Project closing, which includes project closing
	    activities of the Project Management methods and the ADM Phase F,
	    including handover of architecture deliverables for implementation
	
	[]
	
	Figure 4: Structure of this Section and Architecture Project Flow
	(arrows)
	
	Where appropriate, guidance refers to one or more real-world examples.
	These examples are presented in gray boxes. They refer to selected
	projects from our examples list (see Table 1).
	
	
	     The approach in this Guide covers most of the Project Management responsibilities related to an Architecture Project; however, some areas – such as schedule management, procurement management, cost management, and others – are not covered. We assumed that the purpose of this Guide is not to explain the Project Management methods in full detail, but to provide guidance on how to apply them in the reality and characteristics of Architecture Projects. Since areas related to procurement, cost, etc. are not different from other projects, they are not detailed in this Guide.
	  -- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_business-architecture_organization-mapping_3_Differentiating_between_Organization_Maps_and_Organization_Charts "3 Differentiating between Organization Maps and Organization Charts"
	
	To the uninitiated, organization maps can appear to be similar to
	organization charts. Both can have similar structural elements, and both
	can be represented by artifacts that use similar representations (such
	as a node relationships diagram). However, there are significant
	differences between organization maps and organization charts.
	
	Traditional hierarchical models of a business (an example of which is
	shown in Figure 2) focus on formal, top-down reporting structures rather
	than how the business actually operates. In doing so, they fail to
	depict the many horizontal, peer-to-peer, or many-to-many relationships
	that enable the business to function on a day-to-day basis through
	project teams and working groups that form across different business
	units and often include external parties.
	
	[]
	
	Figure 2: Standard Organization Chart
	
	Organization maps, as shown in Figure 3, go much further by depicting
	internal and external relationships as well as the collaborations from
	across the enterprise and beyond to include its ecosystem of business
	partners and stakeholders. The central oval (the enterprise) should be
	interpreted as denoting the total scope to be represented in the map,
	not just as the name of the legal entity. Also note that all of these
	entities are organization units, while the term business unit is being
	used to denote the next level below the enterprise (in this case
	representing business functions).
	
	[]
	
	Figure 3: Generic Organization Map
	
	Organization maps and organization charts also differ in terms of their
	underlying purpose. Typically, organization charts are tools used by
	senior management and Human Resources (HR) to depict the formal
	structure of an organization, including the reporting relationships and
	relative ranks of its parts and positions/jobs. In contrast, an
	organization map is used by analysts, planners, and architects to depict
	a richer model of the organization – to communicate both internal and
	external relationships and collaborations from an organizational unit or
	business entity perspective.
	
	In summary, the key differences between organization maps and
	organization charts are as follows:
	
	-   Scope
	
	Organization charts are internally focused and used to communicate basic
	structures and reporting relationships of the business to its
	stakeholders. Organization maps are whole-system-oriented in order to
	accurately represent all the relationships, internal and external,
	between each of the key participants in the business model of the
	enterprise.
	
	-   Complexity
	
	Conventional organization charts reveal little about the complex
	interactions and relationships that exist within an organization.
	Organization maps more accurately describe cooperative and collaborative
	relationships among business units and external parties. This richer
	description of critical relationships provides a better tool for
	understanding how changes in business conditions or business model
	dynamics may affect the overall operation and the ability of the
	organization to deliver.
	
	-   Explicitness
	
	Organization charts are typically limited to explicit and formal
	relationships between named individuals who are responsible for running
	each business unit. In contrast, organization maps include implicit
	relationships that are critical to the business; e.g., participants in a
	proposed business model change that will influence a value exchange.
	
	-   Lifecycle
	
	Organization charts and organization maps have different lifecycles and
	degrees of fluidity. For example, a change to a business model could
	affect the organization map yet not impact the organization chart, which
	is more internally focused and relatively stable.
	
snippet togaf_guides_microservices-architecture_3_Enterprise_Architecture_in_a_Distributed_World "3 Enterprise Architecture in a Distributed World"
	
snippet togaf_integrating-risk-and-security_3_Enterprise_Security_Architecture_3_Enterprise_Security_Architecture "3 Enterprise Security Architecture"
	
	A Security Architecture is a structure of organizational, conceptual,
	logical, and physical components that interact in a coherent fashion in
	order to achieve and maintain a state of managed risk. It is an
	enabler/driver of secure behavior, safe behavior, resilient behavior,
	reliable behavior, and upholding of privacy at risk areas throughout the
	whole enterprise.
	
	Security Architecture components always have a relationship with other
	elements in the architecture. Thus, although the Security Architecture
	might be viewed as one architecture, it can never be an isolated
	architecture.
	
	The risks managed by the Security Architecture are of various kinds. Two
	important ones are business risk and operational risk. The Security
	Architecture contains a balanced view on risk: negative consequences are
	kept to an acceptable level and positive opportunities are exploited to
	their maximum. The business-driven approach is key for the Security
	Architecture: business drivers offer the context for risk assessments;
	they define whether compliance with any control framework is necessary,
	and they justify the need for security measures.
	
	For true integration of security in the architecture, a system
	engineering approach should be used. This means that security and risk
	are considered as soon as possible in the system engineering development
	lifecycle of the subject in question. At each phase in the development
	lifecycle, appropriate security and risk-related activities are
	conducted. These activities might vary from high-level advice and
	guidance in the early phases up to detailed security checks in the final
	phase. In this way, a secure operational system can be achieved that is
	reliable, safe, resilient, and respectful of privacy concerns. In
	addition, it leads to secure behavior.
	
	In the operational phase, the security aspects of the architectures
	should be monitored, assessed, and reported. Although this operational
	phase generally does not begin until the first iteration of the TOGAF
	ADM is complete, it is during the ADM Phases G and H that the
	capabilities to measure security need to be designed and incorporated.
	
	The adjective “Enterprise” before “Security Architecture” indicates the
	abstraction layer that the Security Architecture addresses. The concept
	of “enterprise” implies business alignment at the highest level, rather
	than at local levels. The TOGAF Standard defines “enterprise” as the
	highest level of description of an organization and typically covers all
	missions and functions. It further states than an enterprise will often
	span multiple organizations. For example, an enterprise could be a
	government agency, a whole corporation, a division of a corporation, a
	single department, or a chain of geographically distant organizations
	linked together by common ownership.
	
	The Enterprise Security Architecture seeks business alignment of the
	security measures with the business objectives. It does so by defining
	relationships between the components on the different architecture
	layers, thus providing traceability and justification. The Enterprise
	Security Architect typically makes use of ISM and ERM processes to
	develop the deliverables and to interact with stakeholders.
	
snippet togaf_togaf-leaders-guide_3_General_Concepts_3_General_Concepts "3 General Concepts"
	
	This chapter describes the general concepts used throughout this Guide.
	
snippet togaf_architecture-skills-framework_3_Goals_Rationale "3 Goals/Rationale"
	
snippet togaf_guides_agile-sprints_3_How_can_Sprints_be_used_with_the_TOGAF_Standard "3 How can Sprints be used with the TOGAF Standard?"
	
snippet togaf_metadata-management_3_Metadata_Management_Capability "3 Metadata Management Capability"
	
	Simplistically, metadata can be called “data about data”. For example,
	metadata indicates who is the author/creator of the data, when it was
	created, its security classification, its data quality attributes, and
	so on. According to the Data Management Body of Knowledge (DMBOK2),
	pp.417 – see Referenced Documents:
	
	“Metadata helps an organization understand its data, its systems, and
	its workflows. It enables quality assessment and is integral to the
	management of databases and other applications. It contributes to the
	ability to process, maintain, integrate, secure, audit, and govern other
	data.”
	
	The concept of metadata is not new and is widely used in the IT industry
	to define data about data. In ancient times long before the digital age,
	metadata such as author, title, number of tablets, etc. was already used
	to catalog collections of clay tablets. As such, metadata provides
	additional information to better know and use the data.
	
	Metadata Management is the planning, implementation, and control
	activity that enables access to high-quality, integrated metadata
	(Source: DMBOK2, pp.419). It enhances the data with additional
	information so that it can be used to:
	
	-   Know your data:
	
	    —  Reduce uncertainty and possible misinterpretation of the data
	
	    —  Know the quality of the data available and associated business
	    rules (data quality business rules, transformation business rules,
	    etc.)
	
	    —  Data origin and usage of the data
	
	    —  Improve auditing of Business Intelligence (BI) reports
	
	    —  Monitor data volume across the information system to reduce
	    environmental impact
	
	-   Manage the data risk and compliance with regulatory requirements:
	
	    —  Leverage data classification (confidentiality, privacy) to
	    support data risk management (e.g., to support data protection
	    impact assessment), base data access model on defined metadata
	    (e.g., roles, responsibility of the user, purpose of data
	    processing, etc.)
	
	    —  Leverage security and privacy metadata for the enterprise’s most
	    valuable asset; for example:
	
	    —     Security metadata enables the transition from network-centric
	    to attribute-centric security embodied in new standards such as zero
	    trust that treat data as a corporate asset
	
	    —     Enterprise identity management relies on a federated identity
	    (common attributes) to control human or machine access to data
	
	    —     Privacy legislation in many countries and/or groups of
	    countries (e.g., the European Union) makes the dissemination of
	    personally attributable data illegal
	
	    —  Improve auditing of data lineage and usage to meet regulatory
	    requirements
	
	-   Manage data lifecycle:
	
	-   Improve time-to-market:
	
	-   Manage data quality and sharing:
	
	Metadata is all too often delegated to IT, whereas it is essentially a
	business concern. Subsequent to numerous investigations in the mid-2000s
	and new government legislation, metadata is a key corporate asset that
	has to be maintained to ensure shareholder transparency, corporate
	security, and client privacy.
	
	The rise of NoSQL databases (relaxed data schemas) and the recent big
	data trends with the associated promise to unlock value from any kind of
	data, have led to focus solely on building the capabilities to collect,
	store, and analyze the data. Very little effort was put on metadata
	which is often depicted as irrelevant or available automatically using
	machine learning tools. Beyond market trends, Metadata Management is
	still a challenge in many organizations for multiple reasons:
	
	-   IT complexity:
	
	—  Legacy applications are poorly documented: reference data is lacking,
	and data changes its meaning during the lifecycle of the application
	
	—  Mergers and acquisitions are increasing the IT landscape and
	therefore the scope of metadata to be documented is changing
	
	—  The replication factor: this concept defines how many times a data
	element (e.g., customer first name) is replicated in the information
	system; the higher the replication factor, the more challenging the
	metadata documentation effort
	
	-   Data complexity:
	
	—  Variety and velocity of data collected (e.g., social media feeds or
	logs collected near real-time, text and image collected for machine
	learning purpose, etc.) require new techniques to collect the relevant
	metadata
	
	—  Dynamic schemas make it challenging to maintain up-to-date metadata
	documentation
	
	-   IT marketing trends:
	
	—  Microservices/micro applications often challenge data lineage and
	increase the replication factor
	
	—  “Agile” delivery is incorrectly interpreted as no requirement for
	documentation
	
	-   Manual work:
	
	—  How to capture the information with business and IT Small and Medium
	Enterprises (SMEs)?
	
	—  What is the right granularity and priority criteria?
	
	—  Metadata validation is not automatic and needs a human review
	
	-   Lack of data standards:
	
	—  Naming conventions
	
	—  Data types and unit conventions
	
	However, metadata is key from a business perspective to having good
	knowledge and understanding of the data already available within the
	organization. Therefore, metadata is an important foundational data
	management capacity for any organization looking to efficiently leverage
	its data.
	
	In the effort to design this capability, we have focused on the minimum
	set of functions required to effectively deliver Metadata Management. As
	an organization becomes more mature in the practice, it is possible to
	go beyond the baseline defined in this framework. We also believe that
	ethical use of data is becoming more and more important for every
	organization. It is reflected in the regulations taken in several parts
	of the world following the General Data Protection Regulation (GDPR),[1]
	which came into force in the EU on May 25, 2018. Even more than
	compliance to regulatory requirements, it can be a competitive advantage
	for the organizations that document data usage by design to enable data
	governance over ethical use of data. Therefore, we have included in this
	baseline framework “data usage documentation” in the Metadata Management
	business functions, with an emphasize on personal data.
	
	This section covers the high-level reference model functions and their
	definitions. More detailed functions are available in the dedicated
	reference model part of this document in Section 5.1 and Section 5.2.
	
snippet togaf_guides_index_3_Overview_of_the_TOGAF_Architecture_Development_Method "3. Overview of the TOGAF Architecture Development Method"
	
	The core of the TOGAF framework is the TOGAF ADM. At first sight, the
	iconic graphic of the TOGAF ADM reinforces the perception that
	Enterprise Architecture is a lengthy, “waterfall” process; see Figure 1.
	
	[TOGAF ADM]
	
	Figure 1. The TOGAF ADM
	
	However, it is important not to infer statements from the TOGAF
	framework that are not present. The TOGAF ADM does not:
	
	-   Mandate that the steps must be performed in the sequence shown
	
	-   Mandate a “waterfall” process; i.e., that each phase must complete
	    before the next begins
	
	-   Specify the duration of any phase or cycle of architecture
	    development
	
	The TOGAF framework does recommend that the ADM be adapted to meet the
	needs of the enterprise; agility is one such need.
	
	The TOGAF framework shows how the ADM provides a tested and repeatable
	process for developing architectures. Rather than viewing the ADM
	graphic as a process model, it is helpful to view it as a reference
	model, which defines what has to be done in order to deliver solutions
	with a rational structure and to identify the interactions and
	relationships between components across the enterprise. Understanding
	these interactions and relationships is critical to reducing risk and
	optimizing the approach.
	
	The core concepts of Enterprise Architecture shown in the ADM graphic
	are applicable in the most Agile of environments. Phases A-H around the
	circumference show how architecture is progressively developed and
	applied to the downstream delivery activities.
	
	Fundamentally, the TOGAF Standard supports what architects do – they
	understand, specify, and govern. The phases of the ADM are:
	
	-   Understand
	
	    -   Phase A – Architecture Vision: understand the
	        problem/opportunity, sketch the solution, and identify the broad
	        transition approach
	
	    -   Phases B-D – Business/Information Systems/Technology
	        Architecture: identify what is needed (Architecture Building
	        Blocks (ABBs))
	
	        During these phases, a recommended practice is to identify the
	        potential solution implementations (Solution Building Blocks
	        (SBBs))
	
	-   Specify
	
	    -   Phase E – Opportunities and Solutions: select from the candidate
	        set of SBBs to best fit with the ABBs of Phases B to D and how
	        they will interoperate to deliver the business service levels
	        required, and the most appropriate implementation transitions
	
	    -   Phase F – Migration Planning: organize the resources to deliver
	        the transitions in a controlled fashion
	
	-   Govern
	
	    -   Phase G – Implementation Governance: ensure the
	        reuse/build/acquisition and deployment activities are properly
	        organized and deployed in line with the agreed contract and
	        specifications
	
	    -   Phase H – Architecture Change Management: ensure that the change
	        is properly planned, structured, and delivers the business value
	        that is expected
	
	In the next chapter, more detailed guidance is given about how the ADM
	and other parts of the TOGAF framework can be applied in Agile
	environments.
	
snippet togaf_adm-techniques_INDEX_3_Stakeholder_Management "-   3. Stakeholder Management"
	    -   3.1 Introduction
	    -   3.2 Approach to Stakeholder Management
	    -   3.3 Steps in the Stakeholder Management Process
	        -   3.3.1 Identify Stakeholders
	            -   3.3.1.1 Sample Stakeholder Analysis
	        -   3.3.2 Classify Stakeholder Positions
	        -   3.3.3 Determine Stakeholder Management Approach
	        -   3.3.4 Tailor Engagement Deliverables
	    -   3.4 Template Stakeholder Map
snippet togaf_adm-techniques_3_Stakeholder_Management_3_Stakeholder_Management "3. Stakeholder Management"
	
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 3.1 Introduction | 3.2 Approach to Stakeholder Management | 3.3 Steps in the Stakeholder Management Process | 3.4 Template Stakeholder Map
	  -- --------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_3_Terminology_Alignment "3. Terminology Alignment"
	
	The terminology used in the TOGAF Standard and the DPBoK Standard does
	not conflict in definition and usage. However, as you might expect,
	there are terms that are used in one that are either currently not used
	or not relevant in the other.
	
	Table 1, “Terminology Alignment between the TOGAF and DPBoK Standards”
	provides a list of some of the key terms focused on the digital
	enterprise and used in the DPBoK Standard.
	
	+-------------+---------------------------+---------------------------+
	| Term        | DPBoK Term^([4])          | TOGAF Term^([5])          |
	+=============+===========================+===========================+
	| Application | The term component is     | An encapsulation of       |
	| Component   | used in a more general    | application functionality |
	|             | way in the DPBoK          | aligned to implementation |
	|             | Standard; therefore,      | structure, which is       |
	|             | there is no conflict.     | modular and replaceable.  |
	|             |                           | It encapsulates its       |
	|             |                           | behavior and data,        |
	|             |                           | provides services, and    |
	|             |                           | makes them available      |
	|             |                           | through interfaces.       |
	|             |                           |                           |
	|             |                           | An application component  |
	|             |                           | usually maintains a data  |
	|             |                           | component. It is enabled  |
	|             |                           | by technology services    |
	|             |                           | provided by technology    |
	|             |                           | components.               |
	+-------------+---------------------------+---------------------------+
	| A           | Both standards share the  | 1. The fundamental        |
	| rchitecture | same definition.          | concepts or properties of |
	|             |                           | a system in its           |
	|             |                           | environment embodied in   |
	|             |                           | its elements,             |
	|             |                           | relationships, and in the |
	|             |                           | principles of its design  |
	|             |                           | and evolution. (Source:   |
	|             |                           | ISO/IEC/IEEE 42010:2011;  |
	|             |                           | see Referenced Documents) |
	|             |                           |                           |
	|             |                           | 2. The structure of       |
	|             |                           | components, their         |
	|             |                           | inter-relationships, and  |
	|             |                           | the principles and        |
	|             |                           | guidelines governing      |
	|             |                           | their design and          |
	|             |                           | evolution over time.      |
	+-------------+---------------------------+---------------------------+
	| Digital     | An enterprise             | There is no specific      |
	| Enterprise  | characterized by:         | TOGAF definition for      |
	|             |                           | digital enterprise;       |
	|             | 1. The creation of        | however, the definition   |
	|             | digitalized products or   | provided in the DPBoK     |
	|             | services that are         | Standard is a special     |
	|             | delivered fully           | type of enterprise, as    |
	|             | digitally; e.g., digital  | defined in the TOGAF      |
	|             | media or online banking.  | Standard. The TOGAF       |
	|             |                           | Standard considers an     |
	|             | 2. Where physical         | enterprise to be any      |
	|             | products and services are | collection of             |
	|             | obtained by the customer  | organizations that have   |
	|             | by digital means; e.g.,   | common goals, operating   |
	|             | online car-sharing        | at all scales.            |
	|             | services.                 |                           |
	+-------------+---------------------------+---------------------------+
	| Digital     | The DPBoK Standard does   | The term is not defined   |
	| Strategy    | not define digital        | in the TOGAF Standard;    |
	|             | strategy; however, it     | therefore, there is no    |
	|             | implies that a digital    | conflict.                 |
	|             | strategy is one which     |                           |
	|             | aspires to lead to a      |                           |
	|             | successful digital        |                           |
	|             | enterprise.               |                           |
	+-------------+---------------------------+---------------------------+
	| Digital     | IT in the form of a       | The term is not defined   |
	| Technology  | product or service that   | in the TOGAF Standard;    |
	|             | is digitally consumable   | therefore, there is no    |
	|             | to create or enable       | conflict.                 |
	|             | business value.           |                           |
	+-------------+---------------------------+---------------------------+
	| Digital     | The radical, fundamental  | The term is not defined   |
	| Tra         | change toward becoming a  | in the TOGAF Standard;    |
	| nsformation | digital enterprise.       | therefore, there is no    |
	|             |                           | conflict.                 |
	+-------------+---------------------------+---------------------------+
	| Dig         | The application of        | The term is not defined   |
	| italization | digital technology to     | in the TOGAF Standard;    |
	|             | create additional         | therefore, there is no    |
	|             | business value within the | conflict.                 |
	|             | primary value chain of    |                           |
	|             | enterprises.              |                           |
	+-------------+---------------------------+---------------------------+
	| D           | The conversion of analog  | The term is not defined   |
	| igitization | information into digital  | in the TOGAF Standard;    |
	|             | form.                     | therefore, there is no    |
	|             |                           | conflict.                 |
	+-------------+---------------------------+---------------------------+
	| Process     | An ordered, countable set | This term is used and     |
	|             | of activities; an         | there is no conflict. A   |
	|             | event-driven,             | process represents a      |
	|             | value-adding sequence     | sequence of activities    |
	|             | that can be measured and  | that together achieve a   |
	|             | improved.                 | specified outcome, can be |
	|             |                           | decomposed into           |
	|             |                           | sub-processes, and can    |
	|             |                           | show the operation of a   |
	|             |                           | business capability or    |
	|             |                           | service (at the next      |
	|             |                           | level of detail); see the |
	|             |                           | TOGAF Standard – Applying |
	|             |                           | the ADM (see Referenced   |
	|             |                           | Documents). The           |
	|             |                           | definitions do not        |
	|             |                           | contradict each other.    |
	+-------------+---------------------------+---------------------------+
	| Service     | This term is not defined  | A repeatable activity; a  |
	|             | in the DPBoK Standard;    | discrete behavior that a  |
	|             | therefore, there is no    | building block may be     |
	|             | conflict.                 | requested or otherwise    |
	|             |                           | triggered to perform.     |
	|             |                           |                           |
	|             |                           | An element of behavior    |
	|             |                           | that provides specific    |
	|             |                           | functionality in response |
	|             |                           | to requests from actors   |
	|             |                           | or other services.        |
	+-------------+---------------------------+---------------------------+
	| Technology  | The term component is     | 1. A technology building  |
	| Component   | used in a more general    | block: a generic          |
	|             | way in the DPBoK          | infrastructure technology |
	|             | Standard; therefore,      | that supports and enables |
	|             | there is no conflict.     | application or data       |
	|             |                           | components (directly or   |
	|             |                           | indirectly) by providing  |
	|             |                           | technology services.      |
	|             |                           |                           |
	|             |                           | 2. An encapsulation of    |
	|             |                           | technology infrastructure |
	|             |                           | that represents a class   |
	|             |                           | of technology product or  |
	|             |                           | specific technology       |
	|             |                           | product.                  |
	+-------------+---------------------------+---------------------------+
	
	: Table 1. Terminology Alignment between the TOGAF and DPBoK Standards
	
	The following terms are relevant to both the TOGAF Standard and the
	DPBoK Standard, and definitions are provided that can be used to frame
	conversations:
	
	-   Digital standard (or guide): A publication that helps an enterprise
	    succeed as a digital enterprise; i.e., one that primarily delivers
	    value through digital means (sometimes called a “digital-first”
	    business model)
	
	-   Emergence model: An organization of information where topics are
	    related to the organizational complexity or scale of the enterprise
	    (Source: The DPBoK Standard, Scaling Model)
	
	-   Principle: A qualitative statement of intent that should be met by
	    the architecture (Source: The TOGAF Standard – ADM Techniques,
	    Section 2.3: “Components of Architecture Principles”)
	
snippet togaf_business-architecture_information-mapping_3_The_Impact_and_Benefits "3 The Impact and Benefits"
	
	An important objective of Business Architecture is to clarify and obtain
	consensus on the terms and concepts of business information. This is
	accomplished with Business Architecture through Information Mapping.
	
	When used within the context of Enterprise Architecture, Information
	Mapping establishes the vocabulary used to articulate strategy and build
	key Business Architecture artifacts such as capability maps and value
	stream maps.
	
	There may be an existing glossary of business terms, which can provide
	the start for key information concepts and business capabilities, to be
	developed sequentially or in parallel. Information Maps are a part of
	the core set of artifacts that provide a powerful representation of the
	business. Information Maps are also a high-level description of the
	informational requirements of a business and are a key input into its
	Information Systems Architecture design.
	
	Historically, many organizations have taken a fragmented approach to
	managing their vocabularies. Managers define key business terms in
	policies, librarians/administrators maintain corporate glossaries, and
	IT defines conceptual schemas or data models. These disparate sources of
	vocabularies constrain an organization’s ability to deploy their
	strategy and integrate their operations. Because Information Mapping
	describes information from the perspective of the whole organization, it
	is ideally suited to enable the management of business information
	throughout its lifecycle across the organization.
	
	When used within a comprehensive enterprise information management
	discipline, Information Mapping can improve an organization’s ability to
	structure, describe, integrate, and govern information assets across the
	boundaries it operates. This elevates the transparency and value of
	information and improves the overall organizational effectiveness.
	
	The benefits of using Information Mapping include:
	
	-   More effective deployment of business strategy (information critical
	    to strategy is articulated, related to value and capabilities, then
	    linked to execution)
	-   Improved ability to consume, process, and deliver information (one
	    set of definitions and relationships for key information is flowed
	    to impacted roles, processes, and technologies)
	-   More effective collaboration (creates alignment across stakeholders
	    and one of the links back to intended value)
	-   Improved business integration (spans across the impacted
	    organization to break down barriers, improve solution efficiency,
	    and enhance customer experience)
	-   More accurate financial and regulatory reporting (understand
	    information relationships between external and internal entities)
	-   Provide the definitive and approved source of business terms across
	    stakeholders
	
snippet togaf_digital-technology-adoption_3_The_Impact_and_Benefits_of_Readiness_Assessment "3 The Impact and Benefits of Readiness Assessment"
	
	The impact and benefits of conducting a DTRA is multi-faceted. The DTRA
	provides an opportunity to analyze the as-is state pertaining to the
	digital technology of an enterprise. It helps to evaluate the
	organization circumventing certain key factors – what the organization
	is doing well, what needs improvement, and how to prioritize their
	transformation/adoption strategy.
	
	This is an empowering tool for Enterprise Architects. With the DTRA as a
	toolkit, Enterprise Architects can leverage the learning for designing
	processes to overcome the barriers for digital technology adoption.
	
	It is pertinent to mention that with the evolving role of the Enterprise
	Architect in the field of emerging technology, architects are now
	expected to transcend boundaries and become holistic in nature. In this
	regard, the DTRA can help to identify gaps in non-architecture areas as
	well – and by highlighting the gaps within the factors identified, it is
	possible to help businesses understand the consequences and remedy the
	gaps. The DTRA can help to identify potential barriers to digital
	technology adoption. The coherent view being brought by the DTRA would
	lead to timely buy-in from senior management and leadership. For
	instance, a weak understanding of vision or scope or lack of sponsorship
	may indicate that the organization has not given enough thought to
	technology adoption.
	
	The five key benefits of conducting the DTRA are as follows:
	
	[]
	
	Figure 1: Benefits of DTRA
	
snippet togaf_business-architecture_business-models_3_The_Impact_and_Benefit_of_Business_Models "3 The Impact and Benefit of Business Models"
	
	Business and IT leaders can obtain powerful leverage using business
	model artifacts in conjunction with other strategic planning artifacts,
	Business Architecture views, and organizational change methods to
	accelerate strategic execution and alignment. Business model artifacts
	highlight the critical relationships between the various elements that
	constitute a business in ways that:
	
	-   Are not fully covered by other approaches or techniques and,
	    therefore, contribute to a more complete examination of costs,
	    revenues, and other business perspectives
	-   Are covered by other approaches or techniques – but through a
	    different method or viewpoint – in which case business modeling
	    helps cross-check other points of information and assumptions
	
	Business models improve communication among business executives because
	they provide a common perspective for the organization’s core business
	logic, thus helping executives “get on the same page”. Having this
	common perspective, structure, and understanding allows for more
	effective business design[4] and enables the successful deployment of an
	organization’s target-state Enterprise Architecture. In essence,
	business models provide clarity of thought using a different point of
	view from the one provided by traditional strategic planning methods,
	and can foster a greater level of thinking required for innovation.
	
snippet togaf_adm-practitioners_3_The_Purpose_of_Enterprise_Architecture_3_The_Purpose_of_Enterprise_Architecture "3 The Purpose of Enterprise Architecture"
	
	A quick perusal of the literature will rapidly highlight that there is
	no consistent understanding of what an Enterprise Architecture (EA)
	looks like, or how one uses an EA. Attempts to succinctly define EA
	speak of fundamental concepts, elements, relationships, and properties
	of a system. These attempts tend to carry a high level of specialized
	knowledge and often make little sense to non-specialists. Further, it
	can be argued that this is the result of many commentators focusing on
	the architecture they develop, with the implicit assumption that
	everyone should do the same. Understanding comes from purpose.
	
	EA is a strategic tool that presents an approach to identify and address
	gaps between aspirations and reality, whatever drives the gaps. It
	accelerates the ability of an Enterprise to achieve its stated
	objectives. The tool comes with its method to use, taxonomy to support
	the directions, and resources needed to benefit from using the tool.
	
	This chapter will address the following questions:
	
	-   Why is it important to develop an Enterprise Architecture?
	-   What is an Enterprise Architecture?
	-   How to use an Enterprise Architecture?
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.1_Background "4.1.1 Background"
	
	A "pattern" has been defined as: "an idea that has been useful in one
	practical context and will probably be useful in others" (Source:
	Analysis Patterns — Re-usable Object Models, by M. Fowler).
	
	In the TOGAF Standard, patterns are considered to be a way of putting
	building blocks into context; for example, to describe a re-usable
	solution to a problem. Building blocks are what you use: patterns can
	tell you how you use them, when, why, and what trade-offs you have to
	make in doing so. Patterns offer the promise of helping the architect to
	identify combinations of Architecture and/or Solution Building Blocks
	(ABBs/SBBs) that have been proven to deliver effective solutions in the
	past, and may provide the basis for effective solutions in the future.
	
	Pattern techniques are generally acknowledged to have been established
	as a valuable architectural design technique by Christopher Alexander, a
	buildings architect, who described this approach in his book The
	Timeless Way of Building, published in 1979. This book provides an
	introduction to the ideas behind the use of patterns, and Alexander
	followed it with two further books (A Pattern Language and The Oregon
	Experiment) in which he expanded on his description of the features and
	benefits of a patterns approach to architecture.
	
	Software and buildings architects have many similar issues to address,
	and so it was natural for software architects to take an interest in
	patterns as an architectural tool. Many papers and books have been
	published on them since Alexander's 1979 book, perhaps the most renowned
	being Design Patterns: Elements of Re-usable Object-Oriented Software
	(Gamma et al., 1994). This book describes simple and elegant solutions
	to specific problems in object-oriented software design.
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.1.1_Budget_Planning_and_Architecture_to_Support_Strategy "4.1.1 Budget Planning and Architecture to Support Strategy"
	
	The linkage between budget planning and Architecture to Support Strategy
	is a natural fit, that like many associations is not always correct.
	Part of the challenge is use of the term “strategy”. Often the term is
	implicitly associated with the organization’s strategy. Then without
	warning the same term is used for something far more specific, like the
	staff compensation strategy. At its most basic, a strategy is simply a
	“central integrated, externally-oriented concept of how to achieve the
	objectives”.[18]
	
	Like “stakeholder”, a good definition encompasses a broad range of
	potential cases, without narrowing down to effective guidance. From an
	EA perspective, Practitioners are supporting strategy when exploring a
	longer-term target, and work will be used to identify a set of change
	initiatives. Guide the terms of reference for the initiatives so that
	the organization can direct and control execution through a portfolio of
	work. Typically, this type of work will align with budget planning,
	where the organization plans to spend on new initiatives or newly
	identified things. Table 1 identified that this work is typically only
	sufficiently detailed to provide guidance over a three to ten-year
	period and that the guidance will be valid for short periods of time.
	This is where organizations switch priority – the important element to
	recognize is the longer-term target is rarely shifting; what is shifting
	is where priority is placed.
	
	Good Practitioners know they are supporting strategy when the priority
	pendulum slows; when the organization is able to balance between two or
	more competing impulses. Effective guidance helps the organization
	understand what is required for the complete set of its needs.
	
snippet togaf_architecture-project-management_4.1.1_TOGAF_ADM_Phase_A_Architecture_Vision "4.1.1 TOGAF ADM Phase A (Architecture Vision)"
	
	Figure 7 should be read from top to bottom starting from the first task
	of the ADM in Phase A: Establish the Architecture Project. In this TOGAF
	task architecture activities should be planned and managed using
	accepted practices for the enterprise.
	
	In order to manage the Architecture Project using the PRINCE2 method
	during “Establish the Architecture Project” it is recommended to execute
	following tasks from the PRINCE2 “Starting up the project” stage:
	
	-   Appoint Project Executives and Project Manager
	-   Design a Project Management Team
	-   Prepare Outline Business Case
	-   Select Project Approach & Assemble
	-   Plan the Initiation Stage
	
	The Stage Plan (initiation) is the result of the “Starting up the
	project” stage and is considered an input to the next TOGAF ADM Phase A
	tasks and PRINCE2 “Initiation” stage, which should be performed in
	parallel. The following ADM Phase A tasks:
	
	-   Identify Stakeholders, Concerns, and Business Requirements
	-   Confirm and Elaborate Business Goals, Business Drivers, and
	    Constraints
	-   Evaluate Capabilities
	-   Assess Readiness for Business Transformation
	-   Define Scope
	-   Confirm and Elaborate Architecture Principles, including Business
	    Principles
	-   Develop Architecture Vision
	-   Define the Target Architecture Value Propositions and KPIs
	-   Identify the Business Transformation Risks and Mitigation Activities
	-   Develop Statement of Architecture Work; Secure Approval
	
	should be performed in parallel with the following PRINCE2 “Initiation”
	stage tasks:
	
	-   Prepare Management Strategy, Business Case, and Project Controls
	-   Create Project Plan
	-   Refine the Business Case
	
	Be aware that some of the TOGAF ADM Phase A tasks produce Project
	Management deliverables which are used in PRINCE2 processes as shown in
	Figure 7 with a dotted line. The final task in ADM Phase A is the
	Statement of Architecture Work Definition and Approval, which along with
	deliverables should be included in the Project Initiation Document,
	which is the main deliverable from the PRINCE2 “Initiation” stage
	assembled in the last process (Assemble the Project Initiation
	Document).
	
snippet togaf_digital-technology-adoption_4.1.1_Vision "4.1.1 Vision"
	
	The vision for adopting a specific digital technology is the
	organization’s desire to grow, progress, or become more efficient in
	sustainability or in competition by using specific digital technology.
	In general, it expresses the willingness or propensity of the
	organization to experiment, adopt, or adapt new technology for its
	benefit toward the overall vision, mission, or strategy of the
	organization. It also lays out the desired outcome and the timeline
	required to achieve it. The existence of such a vision shows the
	commitment of the organization to the technology adoption, and the
	clarity of its actions.
	
	Here, the existence of the vision, motivation, and organization’s
	commitment to technology adoption is validated.
	
	Clarity of vision helps to identify the right sponsor(s), set the right
	direction for the due course, and define the scope and scale that the
	organization wants to achieve. Hence “Vision” impacts “Sponsorship and
	Direction” and “Scope and Scale” factors.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | A large bank, a leader in many    |
	|                                   | corporate banking products, wants |
	|                                   | to adopt new technologies in      |
	|                                   | order to provide a better service |
	|                                   | and compete with the smaller,     |
	|                                   | more technologically-savvy banks. |
	|                                   | The current customers are         |
	|                                   | long-standing, and they value the |
	|                                   | relationship but find that the    |
	|                                   | systems are old and inefficient;  |
	|                                   | anything ad hoc/on-demand is      |
	|                                   | currently not being met. As       |
	|                                   | customers scale up their own      |
	|                                   | technology, and want their        |
	|                                   | banking partner to reciprocate,   |
	|                                   | the bank decides to go “new       |
	|                                   | tech”.                            |
	|                                   |                                   |
	|                                   | Does the bank have clarity on     |
	|                                   | what they want to achieve? Does   |
	|                                   | the bank have a vision of where   |
	|                                   | they want to be?                  |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.1.2_Budget_Preparation_and_Architecture_to_Support_Portfolio "4.1.2 Budget Preparation and Architecture to Support Portfolio"
	
	The linkage between budget preparation and Architecture to Support
	Portfolio is one of the strongest linkages available. Given a set of
	change objectives, the organization is embarking on what is a good
	approach – what work must be funded, what work can be deferred, and what
	work should be deferred. Some of the most powerful guidance to effective
	change an EA team can provide is to support portfolio planning and
	investment decision.
	
	Providing Architecture to Support Portfolio requires working outside the
	corporate planning and execution cycle. When everyone else is executing
	on this year’s budget, the EA team must be working on next year’s
	budget; they have to be ready with a roadmap at the start of the budget
	preparation process.
	
	The key questions every portfolio and budgeting process struggles with
	is a priority. Most portfolio and budget cycles are swamped in noise and
	cheerleading. They desperately need to know what work, in what areas
	must go forward and why. What work can be safely deferred? What work
	must proceed as a package?
	
	Some of the highest value work a Practitioner can provide is supporting
	portfolio and budget preparation.
	
	However, it requires the roadmap to be available as the initial budget
	materials are being prepared, with an ongoing update from trade-off
	during the budget discussions. TOGAF Phase E and Phase F align directly
	to this use of Architecture to Support Portfolio. Phase E prepares the
	architecture roadmap for the budgeting process; work with all
	decision-makers in the budget preparation to finalize the Target
	Architecture, and the Implementation & Migration Plan.
	
	A key use of the EA is to sustain a well-considered target. Budget and
	capacity to change determine what is planned for realization.
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.2_Content_of_a_Pattern "4.1.2 Content of a Pattern"
	
	Several different formats are used in the literature for describing
	patterns, and no single format has achieved widespread acceptance.
	However, there is broad agreement on the types of things that a pattern
	should contain. The headings which follow are taken from
	Pattern-Oriented Software Architecture: A System of Patterns (Buschmann
	et al., 1996). The elements described below will be found in most
	patterns, even if different headings are used to describe them.
	
	Name
	
	A meaningful and memorable way to refer to the pattern, typically a
	single word or short phrase.
	
	Problem
	
	A description of the problem indicating the intent in applying the
	pattern — the intended goals and objectives to be reached within the
	context and forces described below (perhaps with some indication of
	their priorities).
	
	Context
	
	The preconditions under which the pattern is applicable — a description
	of the initial state before the pattern is applied.
	
	Forces
	
	A description of the relevant forces and constraints, and how they
	interact/conflict with each other and with the intended goals and
	objectives. The description should clarify the intricacies of the
	problem and make explicit the kinds of trade-offs that must be
	considered. (The need for such trade-offs is typically what makes the
	problem difficult, and generates the need for the pattern in the first
	place.) The notion of "forces" equates in many ways to the "qualities"
	that architects seek to optimize, and the concerns they seek to address,
	in designing architectures. For example:
	
	-   Security, robustness, reliability, fault-tolerance
	-   Manageability
	-   Efficiency, performance, throughput, bandwidth requirements, space
	    utilization
	-   Scalability (incremental growth on-demand)
	-   Extensibility, evolvability, maintainability
	-   Modularity, independence, re-usability, openness, composability
	    (plug-and-play), portability
	-   Completeness and correctness
	-   Ease-of-construction
	-   Ease-of-use
	-   etc., ...
	
	Solution
	
	A description, using text and/or graphics, of how to achieve the
	intended goals and objectives. The description should identify both the
	solution's static structure and its dynamic behavior — the people and
	computing actors, and their collaborations. The description may include
	guidelines for implementing the solution. Variants or specializations of
	the solution may also be described.
	
	Resulting Context
	
	The post-conditions after the pattern has been applied. Implementing the
	solution normally requires trade-offs among competing forces.
	
	This element describes which forces have been resolved and how, and
	which remain unresolved. It may also indicate other patterns that may be
	applicable in the new context. (A pattern may be one step in
	accomplishing some larger goal.) Any such other patterns will be
	described in detail under Related Patterns.
	
	Examples
	
	One or more sample applications of the pattern which illustrate each of
	the other elements: a specific problem, context, and set of forces; how
	the pattern is applied; and the resulting context.
	
	Rationale
	
	An explanation/justification of the pattern as a whole, or of individual
	components within it, indicating how the pattern actually works, and why
	— how it resolves the forces to achieve the desired goals and
	objectives, and why this is "good". The Solution element of a pattern
	describes the external structure and behavior of the solution: the
	Rationale provides insight into its internal workings.
	
	Related Patterns
	
	The relationships between this pattern and others. These may be
	predecessor patterns, whose resulting contexts correspond to the initial
	context of this one; or successor patterns, whose initial contexts
	correspond to the resulting context of this one; or alternative
	patterns, which describe a different solution to the same problem, but
	under different forces; or co-dependent patterns, which may/must be
	applied along with this pattern.
	
	Known Uses
	
	Known applications of the pattern within existing systems, verifying
	that the pattern does indeed describe a proven solution to a recurring
	problem. Known Uses can also serve as Examples.
	
	Patterns may also begin with an Abstract providing an overview of the
	pattern and indicating the types of problems it addresses. The Abstract
	may also identify the target audience and what assumptions are made of
	the reader.
	
snippet togaf_digital-technology-adoption_4.1.2_Sponsorship_and_Direction "4.1.2 Sponsorship and Direction"
	
	The vision for technology adoption needs to be supported by the
	identification of strong sponsorship by executives and senior leaders of
	the organization. The identification of a sponsor (an individual or a
	department) sets accountability and provides authority. The sponsor
	defines the mission and the strategy to fulfill the vision. They define
	a high-level roadmap, key stakeholders, and a budget to carry out the
	initiative(s) or program(s). The sponsor’s interest, influence to drive
	the vision and objectives in the organization, risk appetite (the level
	of risk that an individual is prepared to accept in the pursuit of an
	objective), and organizational alignment defines the assertiveness and
	aggression of the execution. The depth of understanding of the vision
	and the enthusiasm to achieve are key to the success of the adoption
	roadmap.
	
	Here, the availability of the sponsor(s), awareness of the sponsor about
	digital technology, the manifestation of strategy and roadmap, risk
	appetite, sponsor’s influence impact, and their commitment of the funds
	are confirmed. Further, the preparedness of the sponsor(s) and
	supporting teams, such as top-down champions and change managers,
	greatly define successive actions and their success.
	
	The identification of a sponsor and the direction set by them influences
	the “Scope and Scale” factor of the initiative by defining what to
	achieve and by when. Funds set aside by sponsors also impact the scope
	and scale.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank decided to form a        |
	|                                   | committee to perform an as-is     |
	|                                   | review and determine the way      |
	|                                   | forward. A representation of CIO, |
	|                                   | COO, CFO, and CRO under the       |
	|                                   | leadership of the CEO and MD was  |
	|                                   | formed. The committee was first   |
	|                                   | tasked with evaluating how much   |
	|                                   | of the current technology can be  |
	|                                   | protected and in what way, with   |
	|                                   | little extra work, effort, and    |
	|                                   | money, the desired outcome can be |
	|                                   | achieved. The CIO will provide    |
	|                                   | all the technical inputs required |
	|                                   | and the COO will give the         |
	|                                   | business inputs for the CFO to    |
	|                                   | approve the business case and     |
	|                                   | recommend a budget to the CEO/MD. |
	|                                   | The CFO does not have an          |
	|                                   | appreciation of current           |
	|                                   | technology and certainly not on   |
	|                                   | the new technology proposed.      |
	|                                   |                                   |
	|                                   | Does the bank have a clear        |
	|                                   | sponsor and single owner who can  |
	|                                   | take decisions and drive the      |
	|                                   | initiative? What do you recommend |
	|                                   | as the appropriate sponsorship    |
	|                                   | model?                            |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_4.1.2_TOGAF_ADM_Phases_B_to_F "4.1.2 TOGAF ADM Phases B to F"
	
	The TOGAF ADM Phase B (Business Architecture), Phase C (Information
	Systems Architectures), Phase D (Technology Architecture), Phase E
	(Opportunities and Solutions), and Phase F (Migration Planning) are
	considered as PRINCE2 work delivery stages and should be planned under
	the PRINCE2 Managing Stage Boundary, controlled under PRINCE2
	“Controlling the Stage” and delivered under PRINCE2 “Managing Product
	Delivery”.
	
	[Figure 7.png]
	
	Figure 7: TOGAF ADM and PRINCE2 Mapping (High-Level) (Derived from the
	TOGAF Standard and PRINCE2)
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.3.1_Architecture_Patterns_and_Design_Patterns "4.1.3.1 Architecture Patterns and Design Patterns"
	
	The term "design pattern" is often used to refer to any pattern which
	addresses issues of software architecture, design, or programming
	implementation. In Pattern-Oriented Software Architecture: A System of
	Patterns, the authors define these three types of patterns as follows:
	
	-   An Architecture Pattern expresses a fundamental structural
	    organization or schema for software systems
	
	    It provides a set of predefined subsystems, specifies their
	    responsibilities, and includes rules and guidelines for organizing
	    the relationships between them.
	
	-   A Design Pattern provides a scheme for refining the subsystems or
	    components of a software system, or the relationships between them
	
	    It describes a commonly recurring structure of communicating
	    components that solves a general design problem within a particular
	    context.
	
	-   An Idiom is a low-level pattern specific to a programming language
	
	    An idiom describes how to implement particular aspects of components
	    or the relationships between them using the features of the given
	    language.
	
	These distinctions are useful, but it is important to note that
	architecture patterns in this context still refers solely to software
	architecture. Software architecture is certainly an important part of
	the focus of the TOGAF Standard, but it is not its only focus.
	
	In this section we are concerned with patterns for enterprise system
	architecting. These are analogous to software architecture and design
	patterns, and borrow many of their concepts and terminology, but focus
	on providing re-usable models and methods specifically for the
	architecting of enterprise information systems — comprising software,
	hardware, networks, and people — as opposed to purely software systems.
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.3.2_Patterns_and_the_Architecture_Continuum "4.1.3.2 Patterns and the Architecture Continuum"
	
	Although architecture patterns have not (as yet) been integrated into
	the TOGAF Standard, each of the first four main phases of the ADM
	(Phases A through D) gives an indication of the stage at which relevant
	re-usable architecture assets from the Enterprise Architecture Continuum
	should be considered for use. Architecture patterns are one such asset.
	
	An enterprise that adopts a formal approach to the use and re-use of
	architecture patterns will normally integrate their use into the
	Enterprise Architecture Continuum.
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.3.3_Patterns_and_Views "4.1.3.3 Patterns and Views"
	
	Architecture views are selected parts of one or more models representing
	a complete system architecture, focusing on those aspects that address
	the concerns of one or more stakeholders. Patterns can provide help in
	designing such models, and in composing views based on them.
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.3.4_Patterns_and_Business_Scenarios "4.1.3.4 Patterns and Business Scenarios"
	
	Relevant architecture patterns may well be identified in the work on
	business scenarios.
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.1.3_Budget_Allocation_and_Architecture_to_Support_Project "4.1.3 Budget Allocation and Architecture to Support Project"
	
	Architecture to Support Project is the first time you can see that work
	to effect change is about to be done. Before the release of funding to
	an Implementation Project, no change is going to happen. The classic
	alignment of this purpose in Phase F is the development of an
	Implementation Project business case or Implementation Project charter.
	
	Architecture work facilitates the organization’s final decision-making
	about the use of funding and other scarce change resources. The tendency
	of implementation teams to focus exclusively on the creation of tactical
	business value needs to be balanced with the roadmap purpose and value
	against the target. It is common for implementation teams to sacrifice
	substantive organization value to provide what might be considered
	“decorative” features to the operational team the implementers work
	with.
	
	Balancing the bottom-up change needs with broader initiative needs is an
	important role. Will the organization’s priorities and values be
	realized by a particular Implementation Project? If so, the
	organization’s budget allocation process should release the funds. If
	not, parochial departmental interests are capturing scarce
	organizational improvement resources. Ensuring delivery of value is one
	of the most important reasons to perform Architecture to Support
	Project. If bottom-up business case justification built end-to-end
	efficiency, agility, or eliminated the need for transformation projects,
	no one would need the profession of EA.
	
	The other role is ensuring completeness. Far too many projects build
	metaphorical half bridges; building everything but the last piece to
	cross the obstacle. The justification is usually to “make progress”.
	Bluntly, an organization is not making progress when it embarks on a
	change it will not finish. The organization is simply wasting resources.
	
	[]
	
	Figure 5: Half a Bridge
	
	The TOGAF concept of the Architecture Contract provides the linkage
	between the value and the implementation through the target. The
	Architecture Contract provides traceability in terms of context, the
	complete work required, and conformance tests. Focusing attention on
	what will produce value and enabling architecture-supported governance
	is a chief outcome from Architecture to Support Project.
	
snippet togaf_digital-technology-adoption_4.1.3_IT_Capability "4.1.3 IT Capability"
	
	Ownership for the deployment of digital technology generally lies with
	the IT department of the organization. Many organizations keep
	struggling with technical debt, deep-rooted legacy applications, and
	obsolete technologies. Adopting digital technologies could help to
	answer this struggle. On one hand, it helps to embark on newer
	technologies to improve the technology footprint, it also helps to
	create a more open information ecosystem for better interoperability,
	improve the user experience, and attract a new workforce with modern
	skills. The IT strategy and technology roadmap will drive the motivation
	of actions in the adoption of new digital technology. The current IT
	infrastructure, in-house capabilities, and application landscape are key
	to the better deployment of newer technologies. The maturity of the
	Architecture Board,[1] the adoption of the IT4IT™ Reference Architecture
	[9] for aligning and managing a digital enterprise, and focused
	architecture governance practice help in the adoption of digital
	technologies in an effective, efficient, and sustained manner.
	
	Here, the new technology adoption strategy, technology roadmap,
	infrastructure footprint, application ecosystem, architecture governance
	maturity, and in-house capabilities are validated. The aspirational
	to-be (target) state (of IT and business; i.e., technology-driven
	service offerings) and the IT role in business growth (enabler versus
	support function) also play a vital role, hence the need to be
	validated. Overall policies on security such as buy versus build,
	in-house versus outsource, information ownership, upgrade, and cloud
	adoption will also be important aspects to validate.
	
	“IT Capability” is impacted by “Skills and Competence” and “Ecosystem”.
	The availability of in-house skills and competency helps a rapid PoC or
	pilot and eventually adoption. It helps organizations to define the
	support model for a new technology and its applications. It also
	involves the availability of such skills and services available in the
	ecosystem-wide industry, third-party vendors, and product vendors. “IT
	Capability” impacts “Implementation Approach”, based on in-house
	readiness and maturity.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank has legacy systems in    |
	|                                   | use for the critical processes    |
	|                                   | and, while there has been         |
	|                                   | functionality added on and        |
	|                                   | upgrades made from time to time,  |
	|                                   | no attempt has been made for the  |
	|                                   | technical debt to be retired      |
	|                                   | until the management decided to   |
	|                                   | implement the new IT strategy     |
	|                                   | using an emerging technology.     |
	|                                   |                                   |
	|                                   | What is your advice to the bank   |
	|                                   | and its CIO and CEO? Should they  |
	|                                   | first draw a roadmap to move to   |
	|                                   | the new technology in a           |
	|                                   | structured way (they want to      |
	|                                   | preserve their investment in      |
	|                                   | legacy systems to the extent      |
	|                                   | possible) or implement emerging   |
	|                                   | technology for the business       |
	|                                   | processes and figure out the best |
	|                                   | way to map post that?             |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1.3_Terminology "4.1.3 Terminology"
	
	Although design patterns have been the focus of widespread interest in
	the software industry for several years, particularly in the
	object-oriented and component-based software fields, it is only recently
	that there has been increasing interest in architecture patterns —
	extending the principles and concepts of design patterns to the
	architecture domain.
	
	The technical literature relating to this field is complicated by the
	fact that many people in the software field use the term "architecture"
	to refer to software, and many patterns described as "architecture
	patterns" are high-level software design patterns. This simply makes it
	all the more important to be precise in the use of terminology.
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.1.4_Budget_Control_and_Architecture_to_Support_Solution_Delivery "4.1.4 Budget Control and Architecture to Support Solution Delivery"
	
	Architecture to Support Solution Delivery is directly aligned with work
	to implement effective change.[19] In the business cycle, the budget
	control provides ongoing financial control and benefits realization.
	Architecture to Support Solution Delivery is directly aligned to the
	governance of the Implementation Project. Enabling direct association of
	spend with benefits realization is the contribution to the budget cycle.
	
	Architecture to Support Solution Delivery is dependent on traceability
	through the EA Landscape. Definition of acceptable boundaries for design
	and implementation, as well as boundaries for design and delivery,
	facilitate procurement and third-party contracting.
	
	Similar to Architecture to Support Project, Architecture to Support
	Solution Delivery will use the TOGAF concept of an Architecture Contract
	to constrain design and implementation choices tightly to value.
	
	Most Architecture to Support Solution Delivery will be performed in the
	TOGAF ADM Phase G. The need to fully iterate the ADM makes little sense
	when there is a superior architecture that develops the outline of the
	target, the stakeholders, a roadmap, and an implementation plan. If you
	are not getting value, you are creating busy-work and self-confusion
	about the ADM.
	
snippet togaf_digital-technology-adoption_4.1.4_Culture "4.1.4 Culture"
	
	The organization’s overall culture plays a vital role in any change in
	the organization’s way of working. As per the theory of Diffusion of
	Innovations by Everett Rogers [3], organizations can be classified as
	innovators, early adopters, early majority, late majority, and laggards.
	This also can differ based on the vision or focus of the organization;
	for example, a retail organization may readily invest in a social
	platform to interact with consumers as compared to oil and gas or mining
	organizations, who may readily invest in safe operation technology.
	Changes in smaller organizations can be driven by cohesive/inclusive
	change processes, while larger organizations might see a challenge
	without effective communication and a network of change agents. Larger
	organizations may also have multiple power centers or geographical
	centers that vary in culture to each other. The culture of the
	organization defines their reaction to FOMO (Fear of Missing Out), FOJI
	(Fear of Joining In), and JOMO (Joy of Missing Out).
	
	Here, organization culture, its influence network, risk appetite, and
	readiness to change are confirmed. Other factors that may impact the
	adoption of change, such as in-flight projects or ongoing (or recently
	completed) re-organization, are also validated. The maturity of
	organization change management should also be validated.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | Once the bank decided to go ahead |
	|                                   | with the new technology strategy, |
	|                                   | the CIO prepared a comprehensive  |
	|                                   | plan for upskilling the           |
	|                                   | employees. A Learning Management  |
	|                                   | System (LMS) was integrated, and  |
	|                                   | external agencies and Massive     |
	|                                   | Open Online Courses (MOOCs) were  |
	|                                   | put in place. However, while      |
	|                                   | there was readiness in terms of   |
	|                                   | quality content, the transparency |
	|                                   | of the strategy approach as well  |
	|                                   | as the granular details involved  |
	|                                   | in this migration have not been   |
	|                                   | communicated to all and limited   |
	|                                   | to a hierarchy below CIO.         |
	|                                   |                                   |
	|                                   | How should an enterprise map its  |
	|                                   | upskilling initiative with        |
	|                                   | organization culture to get a     |
	|                                   | result-oriented outcome?          |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_digital-technology-adoption_4.1.5_Scope_and_Scale "4.1.5 Scope and Scale"
	
	Typically, the scope of digital technology adoption is to be expressed
	in terms of enterprise scope, time period, and degree of adoption. Once
	the organizational scope is defined and understood, the roadmap, scale,
	constraints, and risks should be defined. With an Agile approach to
	digital technology adoption, defining the scope and scale of each sprint
	becomes salient.
	
	Here, the existence of a defined scope and expectations from the use of
	digital technology is validated. The business context and existence for
	Statement of Work/Project Charter/Program Vision are also validated. So,
	too, are incremental value-add, time horizon, scale and spread, and
	stakeholders and risks. Additionally, programs, projects, and
	initiatives are checked for approval and funds secured. If this digital
	technology adoption is part of any larger program, then fitment in the
	roadmap of the larger program should also be validated and the impact of
	the termination of the larger program should be ascertained and
	understood.
	
	“Scope and Scale” is impacted by “Vision”, “Sponsorship and Direction”,
	and “Business Rationale”. The organization vision for adopting digital
	technology defines the area of scope. Similarly, sponsors set the
	direction for the area, and the depth of the adoption thus sets the
	scale. “Business Rationale” will drive clarity in the scope, especially
	in setting expectations for the outcome.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank has planned to implement |
	|                                   | digital technology across all of  |
	|                                   | its functions. While the scope is |
	|                                   | clear in terms of coverage, the   |
	|                                   | implementation approach has been  |
	|                                   | to start with customer            |
	|                                   | onboarding, Know Your Customer    |
	|                                   | (KYC), and then proceed to        |
	|                                   | product risk assessment and       |
	|                                   | sales, product onboarding, and    |
	|                                   | customer off-boarding. The        |
	|                                   | mandate is to seek out            |
	|                                   | digitally-enabled tools across    |
	|                                   | the customer journey. This is     |
	|                                   | expected to coexist with the      |
	|                                   | current technology, which will be |
	|                                   | decommissioned once the new       |
	|                                   | technologies have been user       |
	|                                   | accepted.                         |
	|                                   |                                   |
	|                                   | Can you suggest a better way to   |
	|                                   | scope and scale the project?      |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_digital-technology-adoption_4.1.6_Business_Rationale "4.1.6 Business Rationale"
	
	Often organizations take decisions that either consider the future plan,
	changing winds of trade, growth strategy, competitive advantage,
	emerging governing trends, and policies, or that improve the efficiency
	and effectiveness of the workforce. Digital technology adoption
	decisions can be driven based on any such factor. Understanding the
	business rationale behind such decisions is of great help in
	understanding the management perspective in greater detail. The business
	rationale also provides insight on the desired business value. This sets
	the context for the scope, scale, timeline, and outcome. Clarity on
	business rationale and desired business benefits provides energy and
	motivation for stakeholders.
	
	Here, the key drivers for the decision, the motive, the expected value,
	and the target business state are confirmed. An understanding of the
	business rationale helps validate other factors such as “Vision” and
	“Scope and Scale”.
	
	“Business Rationale” is impacted by “Business Model Adaptability”; the
	organization’s flexibility to respond and adjust services to changes in
	industry, product ecosystem, government regulations, compliance
	policies, and competitors’ services are major factors. Such changes play
	a major part in defining business rationale and set the urgency for
	adoption.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank wants to penetrate       |
	|                                   | further into corporate banking    |
	|                                   | offers to large organizations and |
	|                                   | make a template for medium        |
	|                                   | enterprises with the knowledge    |
	|                                   | acquired from large               |
	|                                   | organizations. In parallel, they  |
	|                                   | would like to leverage digital    |
	|                                   | technology to offer “surround”    |
	|                                   | services to their existing        |
	|                                   | customers and gradually expand    |
	|                                   | the range of offerings.           |
	|                                   |                                   |
	|                                   | Is this an adequate and an        |
	|                                   | appropriate business rationale    |
	|                                   | for implementing a digital        |
	|                                   | technology-enabled platform? What |
	|                                   | could the bank have done          |
	|                                   | differently?                      |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_digital-technology-adoption_4.1.7_Implementation_Approach "4.1.7 Implementation Approach"
	
	Any change needs to be implemented in a controlled manner and aligned
	with the organization culture, ongoing economic situation, and governing
	policies. Many times, technological changes bring discomfort and
	insecurity in the people who are impacted by them. This nervousness can
	become a resistance factor for the implementation of digital technology.
	Similarly, there are groups of people who are highly motivated and
	optimistic in using new technologies and are always ready to experiment
	and innovate. The overall expectation and enthusiasm for both the groups
	should be controlled and managed. Organization change management plays a
	vital role in an organization-wide rollout and change control.
	Similarly, technology projects need integration with business processes
	and existing systems/applications. An implementation approach
	encompasses various styles, like Agile delivery and DevOps, and the
	approach could vary depending on the context.
	
	Here, the integration points of the new technology and the potential
	impact on the existing ecosystem, business processes, and various
	stakeholders are understood. The maturity of the IT change management
	process and business change management process to manage the change is
	validated. The implementation approach, consisting of PoC, pilot,
	parallel rollout, or big-bang rollout, should be thought through to
	align with organization change readiness, impacted system, processes,
	and stakeholders.
	
	“Implementation Approach” is impacted by “IT Capability” and “Governance
	and Compliance”. “IT Capability” defines the roadmap and process by
	which implementation is done. “Governance and Compliance” sets the
	urgency for the way in which digital technology should be implemented.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank wants to protect its     |
	|                                   | current technology investments    |
	|                                   | (does not want to consider any    |
	|                                   | legacy platform as technical      |
	|                                   | debt) and intends to integrate    |
	|                                   | those with the new technology     |
	|                                   | platforms. This is both to save   |
	|                                   | cost and to benefit from business |
	|                                   | processes captured in the legacy  |
	|                                   | systems. The key focus of the     |
	|                                   | implementation is the             |
	|                                   | integration.                      |
	|                                   |                                   |
	|                                   | Is this the correct approach to   |
	|                                   | take while implementing new tech, |
	|                                   | and what would be your advice to  |
	|                                   | them?                             |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_4_Definitions_4.10_Architecture_Continuum "4.10 Architecture Continuum"
	
	A categorization mechanism, with increasing detail and specialization,
	for the components and artifacts stored in the Architecture Landscape or
	Reference Library (part of the Architecture Repository).
	
	Note:
	    This Continuum begins with foundational definitions like reference
	    models, core strategies, and basic building blocks. From there it
	    spans to Industry Architectures and all the way to an
	    Organization-Specific Architecture.
	
	See also 4.44 Enterprise Continuum .
	
snippet togaf_introduction_4_Definitions_4.11_Architecture_Development_Method_ADM "4.11 Architecture Development Method (ADM)"
	
	The core of the TOGAF framework. A multi-phase, iterative approach to
	develop and use an Enterprise Architecture to shape and govern business
	transformation.
	
	Note:
	    The ADM is described in the TOGAF Standard — ADM Techniques.
	
snippet togaf_introduction_4_Definitions_4.12_Architecture_Domain "4.12 Architecture Domain"
	
	The architectural area being considered. The TOGAF framework follows the
	tradition of dividing Enterprise Architecture into four primary
	architecture domains: business, data, application, and technology. Other
	domains (motivation, security, governance, etc.) may span those four
	primary domains.
	
snippet togaf_introduction_4_Definitions_4.13_Architecture_Framework "4.13 Architecture Framework"
	
	A conceptual structure used to plan, develop, implement, govern, and
	sustain an architecture.
	
snippet togaf_introduction_4_Definitions_4.14_Architecture_Governance "4.14 Architecture Governance"
	
	The practice of monitoring and directing architecture-related work. The
	goal is to deliver desired outcomes and adhere to relevant principles,
	standards, and roadmaps.
	
	See also 4.48 Governance .
	
snippet togaf_introduction_4_Definitions_4.15_Architecture_Landscape "4.15 Architecture Landscape"
	
	The architectural representation of assets in use, or planned, by the
	enterprise at particular points in time.
	
snippet togaf_introduction_4_Definitions_4.16_Architecture_Level "4.16 Architecture Level"
	
	Levels provide a framework for dividing the Architecture Landscape into
	levels of granularity.
	
	Note:
	    Architecture levels are distinct from architecture partitions.
	
snippet togaf_introduction_4_Definitions_4.17_Architecture_Model "4.17 Architecture Model"
	
	A representation of a subject of interest.
	
	Note:
	    An architecture model provides a smaller scale, simplified, and/or
	    abstract representation of the subject matter.
	
	See also 4.75 Stakeholder , 4.20 Architecture View , and 4.21
	Architecture Viewpoint .
	
snippet togaf_introduction_4_Definitions_4.18_Architecture_Partition "4.18 Architecture Partition"
	
	A subset of architecture resulting from dividing that architecture to
	facilitate its development and management.
	
snippet togaf_introduction_4_Definitions_4.19_Architecture_Principle "4.19 Architecture Principle"
	
	A qualitative statement of intent that should be met by the
	architecture.
	
	Note:
	    A sample set of Architecture Principles is defined in the TOGAF
	    Standard — ADM Techniques.
	
snippet togaf_introduction_4_Definitions_4.1_Abstraction "4.1 Abstraction"
	
	The technique of providing summarized or generalized descriptions of
	detailed and complex content.
	
	Note:
	    Abstraction, as in "level of abstraction", can also mean providing a
	    focus for analysis that is concerned with a consistent and common
	    level of detail or abstraction. Abstraction in this sense is
	    typically used in architecture to allow a consistent level of
	    definition and understanding to be achieved in each area of the
	    architecture in order to support effective communication and
	    decision-making. It is especially useful when dealing with large and
	    complex architectures as it allows relevant issues to be identified
	    before further detail is attempted.
	
snippet togaf_business-architecture_value-streams_4.1_Baseline_Example "4.1 Baseline Example"
	
	In this section, we apply the methods and framework outlined previously
	to a specific example, then put that example into action using business
	scenarios and heat maps.
	
	We start with an external stakeholder value stream – the Acquire Retail
	Product value stream introduced in Figure 1. A more comprehensive
	scenario that includes heat-mapping and decision-making processes uses
	the Recruit Employee value stream that was first introduced in the
	TOGAF^(®) Series Guide to Business Capabilities.
	
	The first step is to define the value stream, as discussed in Section
	2.1:
	
	  ------------- --------------------------------------------------------------------------------------------
	  Name          Acquire Retail Product
	  Description   The activities involved in looking for, selecting, and obtaining a desired retail product.
	  Stakeholder   A retail shopper wishing to purchase a product.
	  Value         Customers are able to locate desired products and obtain them in a timely manner.
	  ------------- --------------------------------------------------------------------------------------------
	
	The second step involves decomposing the value stream into a sequence of
	value-creating stages. Table 1 lists the key elements of each value
	stream stage, including a description, the participating stakeholders,
	entry criteria, exit criteria, and the value delivered from each stage.
	This retail example deals with physical storefronts as well as online
	sites, so the terms used could apply to either channel or type of
	customer interaction.
	
	Table 1: Acquire Retail Product Value Stream Stages
	
	[]
	
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Value     | De        | Part      | Entrance  | Exit      | Value     |
	| Stream    | scription | icipating | Criteria  | Criteria  | Items     |
	| Stage     |           | Sta       |           |           |           |
	|           |           | keholders |           |           |           |
	+===========+===========+===========+===========+===========+===========+
	| Advertise | The act   | Store or  | Customer  | Customer  | Retail    |
	| Channels  | of making | Website   | searches  | selects   | channel   |
	|           | customers | Owner     | for       | channel   | available |
	|           | aware of  | Marketing | product   |           | to        |
	|           | the       |           |           |           | customer  |
	|           | company's |           |           |           |           |
	|           | products. |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Display   | The act   | Store     | Customer  | Customer  | Product   |
	| Me        | of        | Employees | selects   | views     | options   |
	| rchandise | p         | Inventory | channel   | products  | provided  |
	|           | resenting | Manager   |           |           | to        |
	|           | products  | Web       |           |           | customer  |
	|           | in a      | Designer  |           |           |           |
	|           | physical  |           |           |           |           |
	|           | or        |           |           |           |           |
	|           | s         |           |           |           |           |
	|           | earchable |           |           |           |           |
	|           | digital   |           |           |           |           |
	|           | form.     |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Enable    | The act   | Store     | Customer  | Customer  | Desired   |
	| Selection | of        | Employees | views     | selects   | product   |
	|           | enabling  | Web       | products  | product   | located   |
	|           | filtering | Designer  |           |           |           |
	|           | and       | Retail    |           |           |           |
	|           | as        | Shopper   |           |           |           |
	|           | sessments |           |           |           |           |
	|           | of the    |           |           |           |           |
	|           | best      |           |           |           |           |
	|           | p         |           |           |           |           |
	|           | roduct(s) |           |           |           |           |
	|           | matched   |           |           |           |           |
	|           | to the    |           |           |           |           |
	|           | c         |           |           |           |           |
	|           | ustomer’s |           |           |           |           |
	|           | needs.    |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Process   | The act   | Cashier   | Customer  | Charges   | Delivery  |
	| Payment   | of taking | Financial | selects   | paid      | c         |
	|           | and       | Entities  | product   |           | ommitment |
	|           | p         | Retail    |           |           |           |
	|           | rocessing | Shopper   |           |           |           |
	|           | payment   |           |           |           |           |
	|           | from the  |           |           |           |           |
	|           | customer. |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Deliver   | The act   | Wa        | Charges   | Product   | Product   |
	| Me        | of        | rehousing | paid      | delivered | in user's |
	| rchandise | getting   | Trans     |           |           | p         |
	|           | the       | portation |           |           | ossession |
	|           | product   | Retail    |           |           |           |
	|           | into the  | Shopper   |           |           |           |
	|           | c         |           |           |           |           |
	|           | ustomer's |           |           |           |           |
	|           | hands.    |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.1_Budget_Cycle "4.1 Budget Cycle"
	
	For most organizations, the budget cycle controls change in the
	organization. Pragmatically, the EA team will be aligned to the budget
	cycle. Figure 4 shows a timeline view, depicting an alignment of key
	decisions made during a business cycle and the purpose architectures. EA
	for Strategy, Portfolio, and Project need to be completed before key
	milestones for budget decisions are made. EA for Solution Delivery is a
	continuous operation around budget control. The key takeaway is
	architecture before the decision. If you are trapped trying to architect
	after the decision, see Section 11.2.1.
	
	Figure 4 provides a simplified budget cycle for structuring what is
	universal.:
	
	-   Budget Planning identifies what is needed and what new initiatives
	    will be started
	-   Budget Preparation is typically a top-down and bottom-up activity –
	    guidance about expectations and initiatives will be provided from
	    the top, and each department will develop a spending request
	-   Budgets provided are the subject of further decision-making
	
	Allocating budgeted funds is a key step in executing change. A good
	budget is a financial embodiment of the organization's priorities for
	the current budget cycle. Prior to allocation to an Implementation
	Project everything is just an idea.
	
	-   Budget control is ongoing financial and benefits realization of an
	    Implementation Project
	
	[]
	
	Figure 4: Business Cycle and Architecture by Purpose
	
	Keep in mind that the simple unidirectional model allows us to see the
	interplay between key decision milestones. This Guide uses the phrase
	“Architecture to Support” deliberately. The change process executes with
	or without a functioning EA team. The pragmatic question is what an EA
	team can do to guide effective change.
	
	As mentioned earlier in this Guide, it is best to tie everything to the
	budget cycle. The importance of good EA on guiding and constraining the
	change decisions is naturally noticed and highlighted. When there is no
	practical input from a good EA team before the decision an organization
	needs to take is made, the decision is still made. It might even be a
	good choice, but it was a less informed choice.
	
	Keep in mind that in all EA the stakeholders, decision-makers, and
	implementers require effective support ahead of the decision. Good
	architecture that informs decision is infinitely more valuable than
	perfect architecture that follows decision and execution.
	
snippet togaf_guides_index_4.1_Different_Levels_of_Detail_Enable_Agility "4.1. Different Levels of Detail Enable Agility"
	
	The TOGAF framework presents a model identifying three levels of detail
	that can be used for partitioning architecture development:
	
	-   Enterprise Strategic Architecture
	
	-   Segment Architecture
	
	-   Capability Architecture
	
	These levels are illustrated in Figure 2.
	
	[Partitions]
	
	Figure 2. Summary Classification Model for Architecture Landscapes
	
	This model must not be confused with the architecture domains; Business,
	Data, Application, and Technology Architectures may exist at all levels
	of detail.
	
	Top-down, the Enterprise Strategic Architecture provides a high-level
	view of the area of the enterprise impacted by change. It enables
	understanding of the overall strategic direction of the enterprise at a
	high level, and must be sufficiently broad to establish the context
	within which the segments and capabilities fit. It is necessary to plan
	and design the entire endeavor, and to avoid unanticipated consequences.
	
	The middle layer, the Segment Architectures, typically provide direction
	at the portfolio, program, or product level. These large-scale segments
	are often aligned to natural boundaries of functionality.
	
	The bottom layer, the Capability Architectures, are detailed
	descriptions of (increments of) business capabilities [3]. These may
	align to delivery sprints, or multiple sprints may be needed to deliver
	a capability. They are sufficiently detailed to be handed to developers
	for action. Sprints may occur at any level, but are most commonly
	associated with the delivery of capabilities or increments of
	capability. Sprints can occur in parallel.
	
	A key consideration is that sprints are time-boxed and aimed at
	addressing a set of bounded objectives. The Capability Architecture
	increments should be tightly scoped to be achievable within sprint time
	boxes. More detailed guidance relating to sprints can be found in the
	TOGAF^(®) Series Guide: Applying the TOGAF ADM using Agile Sprints [4].
	
	The higher-level Enterprise Strategic and Segment Architectures should
	show the relationships and dependencies between capabilities and
	capability increments and provide the framework for planning and design,
	and the management of risk. They then provide the information needed to
	assess the impact of a proposed change. The Capability Architectures
	then show the relationship between capability increments.
	
	Bottom-up, there is feedback from the implementation of capability
	increments which influences the higher levels. The Capability, Segment,
	and Enterprise Strategic Architectures may evolve as a result of
	experience gained from the deployment of each capability (or capability
	increment).
	
	The Strategic Architecture is not static. It must evolve as the strategy
	of the enterprise evolves. In Agile enterprises, this will be more
	frequent than a “traditional” long-term strategic business plan.
	
	It is vital to have appropriate governance to maintain the link between
	the business needs, Enterprise Architectures, and the Agile solution
	developments of the enterprise.
	
	Two major factors to achieving successful agility at an enterprise level
	are:
	
	1.  Managing the scope, understanding when a new capability is needed,
	    how much of the enterprise is impacted, and how different parts of
	    the enterprise interact.
	
	2.  Having a sufficient understanding of the overall strategic direction
	    of the enterprise, key business capabilities, and the relationships
	    between them in order to minimize the risks of unanticipated
	    consequences and piecemeal development, and identify any change
	    which would detract from the overall strategy for the enterprise.
	    This understanding facilitates an impact assessment of any proposed
	    change.
	
snippet togaf_digital-technology-adoption_4.1_Foundational_Factors_Description "4.1 Foundational Factors Description"
	
snippet togaf_reference-models_government-reference-model_4.1_General_Government_and_Local_Services_Taxonomy "4.1 General Government and Local Services Taxonomy"
	
	  Sector                                  Function              Service                                                        Description
	  --------------------------------------- --------------------- -------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  General Government and Local Services   Customer Services     Provides assistance and advice to the users of the services.   
	                                                                Cashiers                                                       Refers to the provision of individuals who are responsible for dealing with incoming enquiries and oversee general clerical duties.
	                                                                Tax Forms                                                      Involves the support and provision of forms to taxpayers and tax-exempt organizations to report financial information.
	                                                                Front Desk                                                     Encompasses the operation and co-ordination of individuals responsible for performing administrative duties.
	                                                                Imports Administrations                                        Responsible for collection, preparation, and general enquiries regarding import documents for entry of shipments from abroad.
	                                                                Planning Applications                                          Refers to the overall management and paperwork of planning permissions in order to gain consent to build on land, or change the use of land.
	                                                                Housing Gateway                                                Refers to the operation, eligibility, and application assessment of affordable housing purchase schemes.
	                                                                Registration Cards                                             Activities associated with the overall management and paperwork for individuals claiming asylum.
	                                                                Social Security, Benefits, and Pensions                        Refers to activities associated with queries, paperwork required in order to apply for a social security number, benefits and pension schemes, and potential discrepancies that may arise.
	                                                                Business Licenses                                              The process associated with completing an application to initiate a business.
	                                                                Student Finance                                                Encompasses the management and provision of student loans and grants to cover tuition fees and costs associated with undertaking higher education.
	                                                                License Applications                                           Activities associated with the overall management and paperwork of the documented authority necessary to perform a regulated role.
	                                                                People Hub                                                     Oversees the hiring, administration, and training of staff within customer services and operations roles.
	                                                                Workforce Planning                                             Encompasses the analysis of the current and future workforce in order to identify gaps and enable the general government and local government to achieve strategic goals.
	                                          Customer Operations   The functions that directly engage the public.                 
	                                                                Social Security Administration                                 Undertakes the responsibility for the assignment of social security numbers and administers social security retirement, survivors, and disability insurance programs.
	                                                                Benefits                                                       Addresses provision and determination of eligibility for benefits including income-related benefits, housing benefits, child benefits, carer benefits, and disability benefits.
	                                                                Pensions                                                       Encompasses the distribution of fixed payments periodically to support citizens’ retirement from work.
	                                                                Income Support                                                 Involves the provision of extra money to individuals on low incomes.
	                                                                Benefits Fraud                                                 Encompasses the conduct and investigation of individuals claiming benefits to which they are not entitled.
	                                                                Customer Complaints                                            Includes the ability to assess and address individuals’ dissatisfaction with customer operations.
	                                                                Back to Work                                                   Provides guidance, support, and information for individuals looking to return to work following a career break.
	                                          Local Service         Provides services within a specific location or community.     
	                                                                Superintendent Registrar                                       Oversees the registration of births, marriages, and deaths in the local community.
	                                                                Community Planning and Consultation                            Refers to the provision of information and recommendations to local community groups on budget and legal issues, and general advice on local projects and services.
	                                                                Customer Forums                                                The provision of an online avenue used to integrate a community and share feedback.
	                                                                Community Grants                                               The provision of grants and loans to community groups in order to fund local projects and services.
	                                                                Neighborhood Engagement and Development                        Supports the establishment of local networks and activities, liaises with businesses to support community projects, and organizes activities for residents.
	                                                                Local Law                                                      Provides advice and applies legal processes at town and area level.
	
snippet togaf_architecture-project-management_4.1_High-Level_Mapping_Description "4.1 High-Level Mapping Description"
	
	Figure 7 presents the results of the TOGAF ADM mapping into PRINCE2
	Project Management processes at a high level. In order to ensure clear
	understanding of the mapping, some tasks and processes were aggregated
	and simplified. Furthermore, only the main deliverables are presented.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.1_Introduction "4.1. Introduction"
	
	This chapter provides a detailed overview of the four contexts of
	organizational evolution per the DPBoK Standard and their relationship
	to Enterprise Architecture and the TOGAF Standard. This chapter answers
	the questions:
	
	-   What are the four digital enterprise contexts, at a very high level?
	
	-   What can Enterprise Architecture contribute in these contexts?
	
	-   Which Enterprise Architecture principles support the digital journey
	    per context?
	
	-   Which Enterprise Architecture capabilities and services support
	    Digital Practitioners in each of these contexts?
	
	-   Which TOGAF ADM phases, TOGAF artifacts, and TOGAF Series Guides
	    support the DPBoK contexts?
	
	-   What is the connection between the TOGAF Standard and the DPBoK
	    Standard?
	
	The strategy for answering this last question is to present a set of
	Enterprise Architecture services that package the right set of
	activities within the TOGAF Standard to deliver value to the digital
	enterprise as needed per context of the emergence model. What is listed
	is a minimal set of Enterprise Architecture services that deliver
	Enterprise Architecture capabilities for decision-making in each context
	to ensure risk is understood, and to “peek-ahead” in preparation for
	going to the next context.
	
snippet togaf_reference-models_digital-business-reference-model_4.1_Introduction "4.1 Introduction"
	
	Figure 2 unpacks the high-level view to depict the details of each
	element.
	
	[]
	
	Figure 2: DBRM Elements – Detailed View
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.1_Introduction "4.1 Introduction"
	
	Patterns for describing Enterprise Architectures are becoming
	increasingly important to practitioners. The diverse and
	multi-disciplinary nature of Enterprise Architecture requires that
	patterns be developed in different disciplines, domains, and levels of
	detail.
	
	Previous versions of this standard did not fully embrace architecture
	patterns due to their perceived lack of maturity. Today, many
	organizations are using patterns to describe their architectures at
	various levels ranging from software design patterns to business
	patterns. It remains true that there is no single standard for
	describing Enterprise Architecture patterns. However, it can be said
	that there is a pattern for describing patterns.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.1_Introduction "4.1 Introduction"
	
	This chapter defines the deliverables that will typically be consumed
	and produced across the TOGAF ADM cycle. As deliverables are typically
	the contractual or formal work products of an architecture project, it
	is likely that these deliverables will be constrained or altered by any
	overarching project or process management for the enterprise (such as
	CMMI®, PRINCE2®, PMBOK®, or MSP®).
	
	This chapter therefore is intended to provide a typical baseline of
	architecture deliverables in order to better define the activities
	required in the ADM and act as a starting point for tailoring within a
	specific organization.
	
	The TOGAF Content Framework (see 1. Introduction) identifies
	deliverables that are produced as outputs from executing the ADM cycle
	and potentially consumed as inputs at other points in the ADM. Other
	deliverables may be produced elsewhere and consumed by the ADM.
	
	Deliverables produced by executing the ADM are shown in the table below.
	
	+-----------------------+-----------------------+-----------------------+
	| Deliverable           | Output from...        | Input to...           |
	+:======================+:======================+:======================+
	| Architecture Building | F, H                  | A, B, C, D, E         |
	| Blocks                |                       |                       |
	| (see 4.2.1            |                       |                       |
	| Architecture Building |                       |                       |
	| Blocks)               |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture Contract | G                     | G, H                  |
	| (see 4.2.2            |                       |                       |
	| Architecture          |                       |                       |
	| Contract)             |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          | A, B, C, D, E, F      | B, C, D, E, F, G, H   |
	| Definition Document   |                       |                       |
	| (see 4.2.3            |                       |                       |
	| Architecture          |                       |                       |
	| Definition Document)  |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          | Preliminary,          | Preliminary,          |
	| Principles            | A, B, C, D            | A, B, C, D, E, F, G,  |
	| (see 4.2.4            |                       | H                     |
	| Architecture          |                       |                       |
	| Principles)           |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          | Preliminary           | Preliminary,          |
	| Repository            |                       | A, B, C, D, E, F, G,  |
	| (see 4.2.5            |                       | H,                    |
	| Architecture          |                       | Requirements          |
	| Repository)           |                       | Management            |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          | B, C, D, E, F,        | C, D,                 |
	| Requirements          | Requirements          | Requirements          |
	| Specification (see    | Management            | Management            |
	| 4.2.6 Architecture    |                       |                       |
	| Requirements          |                       |                       |
	| Specification)        |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture Roadmap  | B, C, D, E, F         | B, C, D, E, F         |
	| (see 4.2.7            |                       |                       |
	| Architecture Roadmap) |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Architecture Vision   | A, E                  | B, C, D, E, F, G, H,  |
	| (see 4.2.8            |                       | Requirements          |
	| Architecture Vision)  |                       | Management            |
	+-----------------------+-----------------------+-----------------------+
	| Business Principles,  | Preliminary, A, B     | A, B                  |
	| Business Goals, and   |                       |                       |
	| Business Drivers      |                       |                       |
	| (see 4.2.9 Business   |                       |                       |
	| Principles, Business  |                       |                       |
	| Goals, and Business   |                       |                       |
	| Drivers)              |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Capability Assessment | A, E                  | B, C, D, E, F         |
	| (see 4.2.10           |                       |                       |
	| Capability            |                       |                       |
	| Assessment)           |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Change Request        | F, G, H               | —                     |
	| (see 4.2.11 Change    |                       |                       |
	| Request)              |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Communications Plan   | A                     | B, C, D, E, F         |
	| (see 4.2.12           |                       |                       |
	| Communications Plan)  |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Compliance Assessment | G                     | H                     |
	| (see 4.2.13           |                       |                       |
	| Compliance            |                       |                       |
	| Assessment)           |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Implementation and    | E, F                  | F                     |
	| Migration Plan        |                       |                       |
	| (see 4.2.14           |                       |                       |
	| Implementation and    |                       |                       |
	| Migration Plan)       |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Implementation        | F                     | G, H                  |
	| Governance Model      |                       |                       |
	| (see 4.2.15           |                       |                       |
	| Implementation        |                       |                       |
	| Governance Model)     |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Organizational Model  | Preliminary           | Preliminary,          |
	| for Enterprise        |                       | A, B, C, D, E, F, G,  |
	| Architecture (see     |                       | H,                    |
	| 4.2.16 Organizational |                       | Requirements          |
	| Model for Enterprise  |                       | Management            |
	| Architecture)         |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Request for           | Preliminary, F, H     | A, G                  |
	| Architecture Work     |                       |                       |
	| (see 4.2.17 Request   |                       |                       |
	| for Architecture      |                       |                       |
	| Work)                 |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Requirements Impact   | Requirements          | Requirements          |
	| Assessment            | Management            | Management            |
	| (see 4.2.18           |                       |                       |
	| Requirements Impact   |                       |                       |
	| Assessment)           |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Solution Building     | G                     | A, B, C, D, E, F, G   |
	| Blocks                |                       |                       |
	| (see 4.2.19 Solution  |                       |                       |
	| Building Blocks)      |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Statement of          | A, B, C, D, E, F, G,  | B, C, D, E, F, G, H,  |
	| Architecture Work     | H                     | Requirements          |
	| (see 4.2.20 Statement |                       | Management            |
	| of Architecture Work) |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Tailored Architecture | Preliminary, A        | Preliminary,          |
	| Framework             |                       | A, B, C, D, E, F, G,  |
	| (see 4.2.21 Tailored  |                       | H,                    |
	| Architecture          |                       | Requirements          |
	| Framework)            |                       | Management            |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm_4_B_Business_Architecture_4.1_Objectives "4.1 Objectives"
	
	The objectives of Phase B are to:
	
	-   Develop the Target Business Architecture that describes how the
	    enterprise needs to operate to achieve the business goals, and
	    respond to the strategic drivers set out in the Architecture Vision,
	    in a way that addresses the Statement of Architecture Work and
	    stakeholder concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Business Architectures
	
snippet togaf_applying-the-adm_4_Architecture_Partitioning_4.1_Overview "4.1 Overview"
	
	Partitions are used to simplify the development and management of the
	Enterprise Architecture.
	
	Partitions lie at the foundation of Architecture Governance and are
	distinct from levels and the organizing concepts of the Architecture
	Continuum (see the TOGAF Standard — Architecture Content).
	
	Architectures are partitioned because:
	
	-   Organizational unit architectures conflict with one another
	-   Different teams need to work on different elements of architecture
	    at the same time and partitions allow for specific groups of
	    architects to own and develop specific elements of the architecture
	-   Effective architecture re-use requires modular architecture segments
	    that can be taken and incorporated into broader architectures and
	    solutions
	
	It is impractical to present a definitive partitioning model for
	architecture. Each enterprise needs to adopt a partitioning model that
	reflects its own operating model.
	
	This chapter discusses the classification criteria that are generally
	applied to architectures and how these can be leveraged to partition the
	enterprise into a set of architectures with manageable complexity and
	effective governance.
	
snippet togaf_architecture-skills-framework_4.1_Overview "4.1 Overview"
	
	This chapter describes the role of an Enterprise Architect, the
	fundamental skills required, and some possible disciplines in which an
	Enterprise Architect might specialize.
	
	The TOGAF Standard provides a framework for developing Enterprise
	Architectures encompassing business activities and capabilities,
	information, and technology. It therefore requires both business and IT
	professionals to develop the Enterprise Architecture.
	
	The TOGAF Architecture Skills Framework provides a view of the
	competency levels for specific roles within the Enterprise Architecture
	team. The Framework defines:
	
	-   The roles within an Enterprise Architecture work area
	-   The skills required by those roles
	-   The depth of knowledge required to fulfill each role successfully
	
	The value is in providing a rapid means of identifying skills and gaps.
	Successfully applied, the Framework can be used as a measure for:
	
	-   Staff development
	-   Ensuring that the right person does the right job
	
snippet togaf_guides_agile-sprints_4.1_Phase_A_Evolutionary_Approach "4.1 Phase A – Evolutionary Approach"
	
	The main objective of Phase A is to quickly create or confirm the
	high-level aspirational vision of the outcomes, capabilities, and
	business value to be delivered as a result of the proposed Enterprise
	Architecture. This vision will likely evolve throughout the whole
	process with each MVA based on the changing business and technology
	environment and feedback from the business and development teams.
	However, evolution does not mean that those changes will necessarily be
	revolutionary. That is why the proposed vision should be created in a
	way that allows evolution and extension. It should be treated as the
	firm foundation on which Enterprise Architecture is built, providing
	guidance to the teams working within its scope and time frame.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.1_Role "4.1 Role"
	
	A key element in a successful Architecture Governance strategy (see 3.
	Architecture Governance) is a cross-organization Architecture Board to
	oversee the implementation of the strategy. This body should be
	representative of all the key stakeholders in the architecture, and will
	typically comprise a group of executives responsible for the review and
	maintenance of the overall architecture.
	
	Architecture Boards may have global, regional, or business line scope.
	Particularly in larger enterprises, Architecture Boards typically
	comprise representatives from the organization at a minimum of two
	levels:
	
	-   Local (domain experts, line responsibility)
	-   Global (organization-wide responsibility)
	
	In such cases, each board will be established with identifiable and
	articulated:
	
	-   Responsibilities and decision-making capabilities
	-   Remit and authority limits
	
snippet togaf_metadata-management_4.1_TOGAF_Adaptation_for_a_Metadata_Management_Capability "4.1 TOGAF Adaptation for a Metadata Management Capability"
	
	This chapter describes a synthesis of key actions related to the TOGAF
	ADM phases (Preliminary, A, B, C, D, E, F) that should be performed in
	the context of a Metadata Management capability delivery.
	
	+-----------------------------------+-----------------------------------+
	| TOGAF ADM Phase                   | Metadata Management               |
	|                                   | Recommendation                    |
	+===================================+===================================+
	| Preliminary Phase                 | Make sure that the data owners or |
	|                                   | any business stakeholders with    |
	|                                   | clear metadata business           |
	|                                   | requirements are identified to    |
	|                                   | support the architecture work.    |
	|                                   |                                   |
	|                                   | Make sure that there is an        |
	|                                   | architecture governance board     |
	|                                   | well integrated with other data   |
	|                                   | governance and operational data   |
	|                                   | boards. This is to ensure that    |
	|                                   | the architecture decisions are    |
	|                                   | consistent with the organization  |
	|                                   | data strategy and data management |
	|                                   | activities.                       |
	|                                   |                                   |
	|                                   | Ensure that the outputs of the    |
	|                                   | architecture work can be          |
	|                                   | operationalized during the        |
	|                                   | implementation phase via a design |
	|                                   | authority.                        |
	+-----------------------------------+-----------------------------------+
	| Phase A:                          | Clarify the business drivers to   |
	| Architecture Vision               | document metadata and the         |
	|                                   | business goals that will be       |
	|                                   | achieved.                         |
	|                                   |                                   |
	|                                   | Capture the business use-cases    |
	|                                   | that will be supported by the     |
	|                                   | Metadata Management capability,   |
	|                                   | the priorities, and the business  |
	|                                   | actor requirements.               |
	|                                   |                                   |
	|                                   | Assess the maturity of the        |
	|                                   | organization in relation to       |
	|                                   | Metadata Management practice,     |
	|                                   | existing pain points if any, and  |
	|                                   | expected improvements.            |
	|                                   |                                   |
	|                                   | Develop an overview of:           |
	|                                   |                                   |
	|                                   | -   The metadata sources          |
	|                                   |     available within the          |
	|                                   |     organization                  |
	|                                   | -   The existing communities      |
	|                                   |     (business and technical       |
	|                                   |     actors) around each metadata  |
	|                                   |     source                        |
	|                                   | -   The metadata lifecycle        |
	|                                   |     (create, modify, delete)      |
	|                                   |     within each source and        |
	|                                   |     related Metadata Management   |
	|                                   |     processes of each community   |
	|                                   |                                   |
	|                                   | Define the scope of metadata      |
	|                                   | required to deliver the business  |
	|                                   | requirements and to support data  |
	|                                   | governance in accordance with the |
	|                                   | organization’s data strategy.     |
	|                                   | Clarify the level of metadata,    |
	|                                   | community, and metadata process   |
	|                                   | integration required.             |
	|                                   |                                   |
	|                                   | Create an enterprise metadata     |
	|                                   | policy including a conceptual     |
	|                                   | metadata model.                   |
	|                                   |                                   |
	|                                   | Develop the value proposition of  |
	|                                   | the target Metadata Management    |
	|                                   | capability taking into            |
	|                                   | consideration the business        |
	|                                   | use-cases, organization maturity, |
	|                                   | existing pain points, metadata    |
	|                                   | sources available, and the level  |
	|                                   | of integration required.          |
	+-----------------------------------+-----------------------------------+
	| Phase B:                          | Leverage known regulatory         |
	| Business Architecture             | requirements, other internal and  |
	|                                   | external compliance requirements, |
	|                                   | business use-case requirements,   |
	|                                   | business data issues, and         |
	|                                   | available data sets to formalize  |
	|                                   | metadata requirements.            |
	|                                   |                                   |
	|                                   | Define key metadata assets to be  |
	|                                   | documented to support the         |
	|                                   | business requirements.            |
	|                                   |                                   |
	|                                   | Capture the level of metadata     |
	|                                   | quality required per scope of     |
	|                                   | metadata.                         |
	|                                   |                                   |
	|                                   | Identify the as-is (baseline) and |
	|                                   | to-be (target) business users of  |
	|                                   | the Metadata Management           |
	|                                   | capability, the related roles,    |
	|                                   | and access requirements.          |
	|                                   |                                   |
	|                                   | Formalize the organization and    |
	|                                   | detailed Metadata Management      |
	|                                   | processes that should be          |
	|                                   | implemented in the target with    |
	|                                   | the support of the Data           |
	|                                   | Management Office.                |
	|                                   |                                   |
	|                                   | Clarify the set of business       |
	|                                   | functions that are required to    |
	|                                   | deliver the business requirements |
	|                                   | and perform the baseline versus   |
	|                                   | target gap analysis. The business |
	|                                   | reference model provided in       |
	|                                   | Section 5.1 can be used as a      |
	|                                   | guide for this step.              |
	|                                   |                                   |
	|                                   | Refer to Section 4.2 for further  |
	|                                   | details about the metadata        |
	|                                   | requirements, the metadata model, |
	|                                   | and Metadata Management           |
	|                                   | processes.                        |
	+-----------------------------------+-----------------------------------+
	| Phase C:                          | Extend the conceptual metadata    |
	| Information Systems Architectures | model into the logical level      |
	|                                   | (attributes and domains           |
	|                                   | specified) and then map the       |
	|                                   | conceptual metadata entities or   |
	|                                   | attributes to the logical data    |
	|                                   | model entities, records           |
	|                                   | (tuples/instances), or            |
	|                                   | attributes.                       |
	|                                   |                                   |
	|                                   | Define the metadata integration   |
	|                                   | model, clarifying:                |
	|                                   |                                   |
	|                                   | -   The scope of metadata that is |
	|                                   |     managed within the target     |
	|                                   |     metadata repository that will |
	|                                   |     support data governance       |
	|                                   | -   Primary/secondary roles       |
	|                                   |     between the target metadata   |
	|                                   |     repository and the existing   |
	|                                   |     metadata sources within the   |
	|                                   |     organization                  |
	|                                   | -   The collaboration contract    |
	|                                   |     for metadata exchange between |
	|                                   |     the target repository and     |
	|                                   |     other sources of metadata     |
	|                                   |                                   |
	|                                   | Define the metadata collection    |
	|                                   | approach that is relevant in the  |
	|                                   | target: manual ingestion, pushing |
	|                                   | metadata from sources, pulling    |
	|                                   | metadata from sources.            |
	|                                   |                                   |
	|                                   | Clarify the metadata inference    |
	|                                   | requirements (if any) and the     |
	|                                   | level of complexity pertaining to |
	|                                   | this inference. Data variety      |
	|                                   | (structured, semi-structured,     |
	|                                   | unstructured) and IT landscape    |
	|                                   | are two important factors of      |
	|                                   | metadata inference complexity.    |
	|                                   |                                   |
	|                                   | One of the key challenges about   |
	|                                   | data documentation is to document |
	|                                   | the data lifecycle from its       |
	|                                   | origin as well as the movements   |
	|                                   | and transformations it has been   |
	|                                   | through in the information        |
	|                                   | systems. This is done through     |
	|                                   | metadata associations and         |
	|                                   | typically requires manual effort. |
	|                                   | Therefore, clarify metadata       |
	|                                   | association requirements based on |
	|                                   | business requirements to          |
	|                                   | concentrate the effort on the     |
	|                                   | relevant scope.                   |
	|                                   |                                   |
	|                                   | Clarify the set of application    |
	|                                   | functions that are required to    |
	|                                   | deliver the business requirements |
	|                                   | and perform the baseline versus   |
	|                                   | target gap analysis. The          |
	|                                   | application reference model       |
	|                                   | provided in Section 5.2 can be    |
	|                                   | used as a guide for this step.    |
	|                                   |                                   |
	|                                   | Refer to Section 4.3 for more     |
	|                                   | details about this step.          |
	+-----------------------------------+-----------------------------------+
	| Phase D:                          | Full coverage of the metadata IT  |
	| Technology Architecture           | capability may require multiple   |
	|                                   | technologies to be combined. Data |
	|                                   | integration vendors in general    |
	|                                   | provide optimized connectors to   |
	|                                   | extract the technical and         |
	|                                   | operational metadata from data    |
	|                                   | integration repositories,         |
	|                                   | database dictionaries, and data   |
	|                                   | patterns inside semi-structured   |
	|                                   | and unstructured data. Data       |
	|                                   | governance solutions are less     |
	|                                   | focused on technical metadata     |
	|                                   | extraction, but provide functions |
	|                                   | for governance such as metadata   |
	|                                   | change validation workflow,       |
	|                                   | compliance reporting, etc.        |
	|                                   |                                   |
	|                                   | Define whether a technology or a  |
	|                                   | combination of technologies is    |
	|                                   | required to deliver the Metadata  |
	|                                   | Management capability.            |
	|                                   |                                   |
	|                                   | Ensure that the information       |
	|                                   | exchange platform services        |
	|                                   | include the relevant metadata for |
	|                                   | every exchange internal and       |
	|                                   | external to the enterprise. This  |
	|                                   | is particularly important to      |
	|                                   | incoming data from external       |
	|                                   | vendors and/or partners.          |
	+-----------------------------------+-----------------------------------+
	| Phase E:                          | Use the application reference     |
	| Opportunities & Solutions         | model provided in Section 5.2 to  |
	|                                   | challenge solution providers.     |
	+-----------------------------------+-----------------------------------+
	| Phase F:                          | First, start documenting the      |
	| Migration Planning                | metadata assets in a spreadsheet  |
	|                                   | focusing on a small scope to      |
	|                                   | become familiar with the concepts |
	|                                   | and foster a documentation        |
	|                                   | culture within the team. Metadata |
	|                                   | documentation requires manual     |
	|                                   | effort: business metadata is      |
	|                                   | managed by people, technical      |
	|                                   | metadata exists in the data       |
	|                                   | structures of the IT systems,     |
	|                                   | operational metadata is generated |
	|                                   | at a specific point in time. This |
	|                                   | first step should also aim to     |
	|                                   | prove the value of documenting    |
	|                                   | metadata.                         |
	|                                   |                                   |
	|                                   | Next, move to a centralized       |
	|                                   | repository to enforce metadata    |
	|                                   | governance (stewardship,          |
	|                                   | ownership, validation workflow,   |
	|                                   | etc.), scale metadata             |
	|                                   | documentation, and ease metadata  |
	|                                   | access and administration         |
	|                                   | management. A centralized         |
	|                                   | repository has several benefits,  |
	|                                   | such as the ease of knowledge     |
	|                                   | sharing and re-use by bringing    |
	|                                   | the different stakeholders        |
	|                                   | (business data owner, data        |
	|                                   | steward, internal controllers,    |
	|                                   | data protection officer, data     |
	|                                   | manager, etc.) into the same      |
	|                                   | repository, the ease of metadata  |
	|                                   | association as all the assets are |
	|                                   | already collected into a single   |
	|                                   | repository, and the centralized   |
	|                                   | metadata stewardship to support   |
	|                                   | metadata governance. However, a   |
	|                                   | strong governance model enforced  |
	|                                   | by the Data Management Office and |
	|                                   | the onboarding of the different   |
	|                                   | stakeholders (business data       |
	|                                   | owner, data steward, internal     |
	|                                   | controllers, data protection      |
	|                                   | officer, data manager, etc.) can  |
	|                                   | be challenging as the repository  |
	|                                   | may not be dedicated to their     |
	|                                   | role and specific needs.          |
	|                                   |                                   |
	|                                   | The more mature the different     |
	|                                   | stakeholders become, the more     |
	|                                   | advanced requirements might       |
	|                                   | emerge such as automated data     |
	|                                   | discovery (e.g., record linkage)  |
	|                                   | and catalog, data flow            |
	|                                   | visualization, automated reverse  |
	|                                   | engineering of data schemas, etc. |
	|                                   | At this stage, it can make sense  |
	|                                   | to consider dedicated             |
	|                                   | repositories for different        |
	|                                   | families of contributors to       |
	|                                   | support their specific            |
	|                                   | requirements. This means that a   |
	|                                   | dedicated system can be defined   |
	|                                   | per logical group of assets. For  |
	|                                   | example, a repository for a       |
	|                                   | business glossary, a repository   |
	|                                   | for data dictionaries, a          |
	|                                   | repository for data quality rules |
	|                                   | documentation and implementation, |
	|                                   | etc. It is therefore possible to  |
	|                                   | provide advanced features         |
	|                                   | dedicated to each metadata        |
	|                                   | documentation function and to     |
	|                                   | support specific user interfaces  |
	|                                   | customized for each role or       |
	|                                   | family of users. However, a       |
	|                                   | dedicated effort should be put    |
	|                                   | into metadata integration to link |
	|                                   | the metadata assets together,     |
	|                                   | ensure consistency between the    |
	|                                   | repositories, and avoid silos.    |
	|                                   | Also, collaboration between the   |
	|                                   | different stakeholders can be     |
	|                                   | limited.                          |
	+-----------------------------------+-----------------------------------+
	| Phase G:                          | Organize a compliance review with |
	| Implementation Governance         | Metadata Management projects      |
	|                                   | (metadata repository              |
	|                                   | implementation, metadata          |
	|                                   | integration) to check that they   |
	|                                   | respect the principles and target |
	|                                   | architecture.                     |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_master-data-management_4.1_TOGAF_ADM_Specialization_for_the_C-MDM_Capability "4.1 TOGAF ADM Specialization for the C-MDM Capability"
	
	This chapter describes a synthesis of key actions related to the TOGAF
	phases (Preliminary, A, B, C, D, E, and F) that should be done in the
	context of delivering a C-MDM capability.
	
	Table 3: C-MDM Recommendations for the TOGAF ADM Phases
	
	+-----------------------------------+-----------------------------------+
	| TOGAF ADM Phase                   | C-MDM Recommendation              |
	+===================================+===================================+
	| Preliminary                       | Confirm that the appropriate      |
	|                                   | Enterprise Architecture           |
	|                                   | capabilities are in place to      |
	|                                   | implement the model: repository,  |
	|                                   | data sources, platforms, etc.     |
	|                                   |                                   |
	|                                   | Check that a multi-disciplinary   |
	|                                   | team is in place with the         |
	|                                   | requisite skills to architect an  |
	|                                   | effective C-MDM business          |
	|                                   | capability.                       |
	|                                   |                                   |
	|                                   | Make sure that the Architecture   |
	|                                   | Governance is well integrated,    |
	|                                   | with teams having transversal     |
	|                                   | responsibility on data in the     |
	|                                   | organization (e.g., CDO teams,    |
	|                                   | data governance teams, etc.).     |
	|                                   |                                   |
	|                                   | Ensure that the requisite privacy |
	|                                   | legislation and policies are      |
	|                                   | available and understood,         |
	|                                   | constraining the potential        |
	|                                   | application of C-MDM. This is     |
	|                                   | particularly relevant for         |
	|                                   | multinational clients and/or      |
	|                                   | companies that may have to comply |
	|                                   | to multiple standards; e.g.,      |
	|                                   | General Data Protection           |
	|                                   | Regulation (GDPR), the Canadian   |
	|                                   | Personal Information Protection   |
	|                                   | and Electronic Documents Act      |
	|                                   | (PIPEDA), or US Federal Trade     |
	|                                   | Commission (FTC) Privacy Program  |
	|                                   | Criteria.                         |
	+-----------------------------------+-----------------------------------+
	| Phase A:                          | Develop an overview of existing   |
	| Architecture Vision               | pain points related to customer   |
	|                                   | data from a customer perspective, |
	|                                   | as well as customer-facing        |
	|                                   | employees or business users       |
	|                                   | handling/using customer data.     |
	|                                   | (The TOGAF Business Scenarios     |
	|                                   | technique, as described in the    |
	|                                   | TOGAF^(®) Series Guide: Business  |
	|                                   | Scenarios, can be used for this   |
	|                                   | purpose; see Referenced           |
	|                                   | Documents).                       |
	|                                   |                                   |
	|                                   | Develop the value proposition for |
	|                                   | C-MDM considering existing or new |
	|                                   | business usage.                   |
	|                                   |                                   |
	|                                   | Perform a high-level execution of |
	|                                   | Phases B, C, and D to get an      |
	|                                   | overview of the main impacted     |
	|                                   | systems, showing key macroscopic  |
	|                                   | metrics. (How many applications   |
	|                                   | can update kernel customer data   |
	|                                   | today? How many applications can  |
	|                                   | access kernel customer data in    |
	|                                   | read-only mode? Overall, how many |
	|                                   | users can update data?)           |
	|                                   |                                   |
	|                                   | Create a conceptual C-MDM Target  |
	|                                   | Architecture highlighting the     |
	|                                   | value proposition for the key     |
	|                                   | stakeholders (e.g., data quality  |
	|                                   | improvement, expected income      |
	|                                   | increase, expected customer       |
	|                                   | experience increase, efficiency,  |
	|                                   | risk and compliance, etc.).       |
	|                                   |                                   |
	|                                   | Master data is a direct function  |
	|                                   | of the agreed level of data       |
	|                                   | quality within the enterprise.    |
	|                                   | There are standard metadata       |
	|                                   | characteristics such as           |
	|                                   | “accuracy” and “truthfulness”     |
	|                                   | that must be agreed upon between  |
	|                                   | the Business and Data Architects. |
	|                                   | The business has to specify the   |
	|                                   | nature of data quality required   |
	|                                   | in an SLA contract in Phases A    |
	|                                   | and B to ensure that the master   |
	|                                   | data, which can be acquired as    |
	|                                   | data as a service, does not cost  |
	|                                   | the enterprise more than it is    |
	|                                   | worth. Examples of data quality   |
	|                                   | are included in Annex A to The    |
	|                                   | Open Group White Paper: An        |
	|                                   | Information Architecture Vision,  |
	|                                   | the DMBoK, Version 2, and in the  |
	|                                   | latest version of ISO 8000:       |
	|                                   | ISO/TS 8000-1:2011 (see           |
	|                                   | Referenced Documents).            |
	+-----------------------------------+-----------------------------------+
	| Phase B:                          | The business is accountable and   |
	| Business Architecture             | responsible for data quality.     |
	|                                   | Establish the governance,         |
	|                                   | processes, and resources          |
	|                                   | necessary to ensure that the data |
	|                                   | quality of the master data is     |
	|                                   | achieved and sustained.           |
	|                                   |                                   |
	|                                   | Understand the usage of customer  |
	|                                   | data in the daily activities of   |
	|                                   | the business.                     |
	|                                   |                                   |
	|                                   | Identify operational issues and   |
	|                                   | related stories around customer   |
	|                                   | data and understand the deep      |
	|                                   | causes: organizational, process   |
	|                                   | and tools, human or technical.    |
	|                                   |                                   |
	|                                   | Identify current operations or    |
	|                                   | activities that are not effective |
	|                                   | due to lack of data quality.      |
	|                                   | Identify future use-cases C-MDM   |
	|                                   | should support (e.g., accurate    |
	|                                   | C360 view, consent management,    |
	|                                   | effective multi-channel           |
	|                                   | marketing, etc.).                 |
	|                                   |                                   |
	|                                   | Maintain a use-cases backlog and  |
	|                                   | an issues backlog to fuel the     |
	|                                   | C-MDM program.                    |
	|                                   |                                   |
	|                                   | Formalize new requirements C-MDM  |
	|                                   | should cover to develop these     |
	|                                   | use-cases or correct current data |
	|                                   | issues.                           |
	|                                   |                                   |
	|                                   | Formalize existing organization   |
	|                                   | around managing kernel customer   |
	|                                   | data.                             |
	|                                   |                                   |
	|                                   | Propose target organizations and  |
	|                                   | processes to increase C-MDM and   |
	|                                   | contribute to cover the new       |
	|                                   | identified requirements.          |
	|                                   |                                   |
	|                                   | Especially describe the           |
	|                                   | match-and-merge target process    |
	|                                   | from the Business Architecture    |
	|                                   | point of view.                    |
	|                                   |                                   |
	|                                   | Identify the level of change      |
	|                                   | effort and mobilize adequate      |
	|                                   | resources to roll out target      |
	|                                   | organization and processes.       |
	+-----------------------------------+-----------------------------------+
	| Phase C:                          | Have an overview of as-is         |
	| Information Systems Architectures | applications creating, reading,   |
	|                                   | updating, and/or deleting         |
	|                                   | customer master data today.       |
	|                                   |                                   |
	|                                   | Qualify each of those             |
	|                                   | applications with respect to      |
	|                                   | customer data (volume of          |
	|                                   | concerned customers, frequency of |
	|                                   | creation/updates of customer      |
	|                                   | master data, data profiling to    |
	|                                   | assess the existing quality of    |
	|                                   | the data source, business value). |
	|                                   |                                   |
	|                                   | Qualify each of those             |
	|                                   | applications with respect to      |
	|                                   | existing or planned projects or   |
	|                                   | evolutions/roadmap (that could be |
	|                                   | an opportunity, for example, to   |
	|                                   | move the mastership to future     |
	|                                   | C-MDM).                           |
	|                                   |                                   |
	|                                   | Identify current issues and       |
	|                                   | improvement points around the     |
	|                                   | current Information Systems       |
	|                                   | Architecture.                     |
	|                                   |                                   |
	|                                   | Define the logical target         |
	|                                   | Information Systems Architecture  |
	|                                   | to consistently manage kernel     |
	|                                   | customer data.                    |
	|                                   |                                   |
	|                                   | Review the match-and-merge        |
	|                                   | customer process.                 |
	+-----------------------------------+-----------------------------------+
	| Phase D:                          | Check that the technology choices |
	| Technology Architecture           | leverage consistent transactions  |
	|                                   | around kernel customer data (on   |
	|                                   | which the system aims to be the   |
	|                                   | point of truth). These            |
	|                                   | capabilities should be            |
	|                                   | loosely-coupled with the IT       |
	|                                   | landscape to ensure consistency   |
	|                                   | and availability of critical      |
	|                                   | transactions and efficient        |
	|                                   | maintenance.                      |
	+-----------------------------------+-----------------------------------+
	| Phase E:                          | Use the application reference     |
	| Opportunities and Solutions       | models in this document to        |
	|                                   | challenge solution providers      |
	|                                   | around C-MDM. Reference models    |
	|                                   | can be used as a basis to build   |
	|                                   | selection criteria for the        |
	|                                   | solutions.                        |
	+-----------------------------------+-----------------------------------+
	| Phase F:                          | Have a complete vision of planned |
	| Migration Planning                | projects/initiatives adjacent to  |
	|                                   | C-MDM topics (e.g., projects link |
	|                                   | to applications managing customer |
	|                                   | data). Qualify dependencies and   |
	|                                   | potential opportunities.          |
	|                                   |                                   |
	|                                   | Use the implied applications      |
	|                                   | qualification (in Phase C) to     |
	|                                   | prioritize integrations through   |
	|                                   | time (e.g., regarding business    |
	|                                   | value, customers volume and       |
	|                                   | current quality, complexity),     |
	|                                   | investigate if existing           |
	|                                   | initiatives and planned projects  |
	|                                   | could be used to cover the C-MDM  |
	|                                   | program evolution.                |
	|                                   |                                   |
	|                                   | Define a migration roadmap and    |
	|                                   | show how the mastery of kernel    |
	|                                   | customer data evolves through     |
	|                                   | this roadmap.                     |
	+-----------------------------------+-----------------------------------+
	| Phase G:                          | Organize a compliance review with |
	| Implementation Governance         | C-MDM projects to check that they |
	|                                   | respect C-MDM principles and the  |
	|                                   | Target Architecture. (Examples of |
	|                                   | principles are given in Section   |
	|                                   | 4.3.)                             |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.1_What_is_the_Enterprise_and_What_is_its_Purpose "4.1 What is the Enterprise and What is its Purpose?"
	
	The very first activity is to define the enterprise. The term is defined
	as “the highest level of description of an organization used to identify
	the boundary encompassed by the EA and EA Capability”. In practice, the
	enterprise is a boundary that identifies the outer limit that the EA and
	the EA Capability must address. In some cases the boundary will align
	with a corporation; it can align with an extended enterprise, including
	business partners in an organization’s value chain; it can align with a
	set of organizations joined by a common mission, such as a
	multi-national peacekeeping force; lastly it can limit the boundary to
	part of an organization. The term is used flexibly to identify the
	boundary of the EA and remit of the EA Capability. The size of the
	enterprise is not a consideration.
	
	What is included and excluded from the boundary of the enterprise
	impacts every aspect of an EA Capability. The Leader must ensure that
	the EA Capability addresses the complete scope of what is included the
	enterprise, and all related governance.
	
	The second is to understand the enterprise’s purpose. Private, public,
	or social enterprises will have distinct purposes. Private enterprises
	exist to generate value for their shareholders. The purpose will be
	drawn from the product and service they provide, and the industry
	segment in which they operate. Mission, or vision, statements will
	typically describe a purpose. Public and social enterprises typically
	have a purpose described in their mission or mandate.
	
	Note: This Guide will operate on the assumption that the enterprise is a
	profit-making, public organization. This Guide also assumes that the EA
	Capability team is chartered to define the target architecture by the
	highest decision-making body (like the Board or the CEO), covering all
	departments, divisions, and geographies.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.10_Capability_Assessment "4.2.10 Capability Assessment"
	
	Purpose
	
	Before embarking upon a detailed Architecture Definition, it is valuable
	to understand the baseline and target capability level of the
	enterprise. This Capability Assessment can be examined on several
	levels:
	
	-   What is the capability level of the enterprise as a whole? Where
	    does the enterprise wish to increase or optimize capability? What
	    are the architectural focus areas that will support the desired
	    development of the enterprise?
	-   What is the capability or maturity level of the IT function within
	    the enterprise? What are the likely implications of conducting the
	    architecture project in terms of design governance, operational
	    governance, skills, and organization structure? What is an
	    appropriate style, level of formality, and amount of detail for the
	    architecture project to fit with the culture and capability of the
	    IT organization?
	-   What is the capability and maturity of the architecture function
	    within the enterprise? What architectural assets are currently in
	    existence? Are they maintained and accurate? What standards and
	    reference models need to be considered? Are there likely to be
	    opportunities to create re-usable assets during the architecture
	    project?
	-   Where capability gaps exist, to what extent is the business ready to
	    transform in order to reach the target capability? What are the
	    risks to transformation, cultural barriers, and other considerations
	    to be addressed beyond the basic capability gap?
	
	Content
	
	Typical contents of a Capability Assessment are:
	
	-   Business Capability Assessment, including:
	    -   Capabilities of the business
	    -   Baseline state assessment of the performance level of each
	        capability
	    -   Future state aspiration for the performance level of each
	        capability
	    -   Baseline state assessment of how each capability is realized
	    -   Future state aspiration for how each capability should be
	        realized
	    -   Assessment of likely impacts to the business organization
	        resulting from the successful deployment of the Target
	        Architecture
	-   IT Capability Assessment, including:
	    -   Baseline and target maturity level of change process
	    -   Baseline and target maturity level of operational processes
	    -   Baseline capability and capacity assessment
	    -   Assessment of the likely impacts to the IT organization
	        resulting from the successful deployment of the Target
	        Architecture
	-   Architecture maturity assessment, including:
	    -   Architecture Governance processes, organization, roles, and
	        responsibilities
	    -   Architecture skills assessment
	    -   Breadth, depth, and quality of landscape definition with the
	        Architecture Repository
	    -   Breadth, depth, and quality of standards definition with the
	        Architecture Repository
	    -   Breadth, depth, and quality of reference model definition with
	        the Architecture Repository
	    -   Assessment of re-use potential
	-   Business Transformation Readiness Assessment, including:
	    -   Readiness factors
	    -   Vision for each readiness factor
	    -   Current and target readiness ratings
	    -   Readiness risks
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.11_Change_Request "4.2.11 Change Request"
	
	Purpose
	
	During implementation of an architecture, as more facts become known, it
	is possible that the original Architecture Definition and requirements
	are not suitable or are not sufficient to complete the implementation of
	a solution. In these circumstances, it is necessary for implementation
	projects to either deviate from the suggested architectural approach or
	to request scope extensions. Additionally, external factors — such as
	market factors, changes in business strategy, and new technology
	opportunities — may open up opportunities to extend and refine the
	architecture.
	
	In these circumstances, a Change Request may be submitted in order to
	kick-start a further cycle of architecture work.
	
	Content
	
	Typical contents of a Change Request are:
	
	-   Description of the proposed change
	-   Rationale for the proposed change
	-   Impact assessment of the proposed change, including:
	    -   Reference to specific requirements
	    -   Stakeholder priority of the requirements to date
	    -   Phases to be revisited
	    -   Phase to lead on requirements prioritization
	    -   Results of phase investigations and revised priorities
	    -   Recommendations on management of requirements
	-   Repository reference number
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.12_Communications_Plan "4.2.12 Communications Plan"
	
	Purpose
	
	Enterprise Architectures contain large volumes of complex and
	inter-dependent information. Effective communication of targeted
	information to the right stakeholders at the right time is a CSF for
	Enterprise Architecture. Development of a Communications Plan for
	architecture allows for this communication to be carried out within a
	planned and managed process.
	
	Content
	
	Typical contents of a Communications Plan are:
	
	-   Identification of stakeholders and grouping by communication
	    requirements
	-   Identification of communication needs, key messages in relation to
	    the Architecture Vision, communication risks, and CSFs
	-   Identification of mechanisms that will be used to communicate with
	    stakeholders and allow access to architecture information, such as
	    meetings, newsletters, repositories, etc.
	-   Identification of a communications timetable, showing which
	    communications will occur with which stakeholder groups at what time
	    and in what location
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.13_Compliance_Assessment "4.2.13 Compliance Assessment"
	
	Purpose
	
	Once an architecture has been defined, it is necessary to govern that
	architecture through implementation to ensure that the original
	Architecture Vision is appropriately realized and that any
	implementation learnings are fed back into the architecture process.
	Periodic compliance reviews of implementation projects provide a
	mechanism to review project progress and ensure that the design and
	implementation is proceeding in line with the strategic and
	architectural objectives.
	
	Content
	
	Typical contents of a Compliance Assessment are:
	
	-   Overview of project progress and status
	-   Overview of project architecture/design
	-   Completed architecture checklists:
	    -   Hardware and operating system checklist
	    -   Software services and middleware checklist
	    -   Applications checklists
	    -   Information management checklists
	    -   Security checklists
	    -   System management checklists
	    -   System engineering checklists
	    -   Methods and tools checklists
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.14_Implementation_and_Migration_Plan "4.2.14 Implementation and Migration Plan"
	
	Purpose
	
	The Implementation and Migration Plan provides a schedule of the
	projects that will realize the Target Architecture. The Implementation
	and Migration Plan includes executable projects grouped into managed
	portfolios and programs. The Implementation and Migration Strategy
	identifying the approach to change is a key element of the
	Implementation and Migration Plan.
	
	Content
	
	Typical contents of an Implementation and Migration Plan are:
	
	-   Implementation and Migration Strategy:
	    -   Strategic implementation direction
	    -   Implementation sequencing approach
	-   Project and portfolio breakdown of implementation:
	    -   Allocation of work packages to project and portfolio
	    -   Capabilities delivered by projects
	    -   Milestones and timing
	    -   Work breakdown structure
	    -   May include impact on existing portfolio, program, and projects
	
	It may contain:
	
	-   Project charters:
	    -   Included work packages
	    -   Business value
	    -   Risk, issues, assumptions, dependencies
	    -   Resource requirements and costs
	    -   Benefits of migration, determined (including mapping to business
	        requirements)
	    -   Estimated costs of migration options
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.15_Implementation_Governance_Model "4.2.15 Implementation Governance Model"
	
	Purpose
	
	Once an architecture has been defined, it is necessary to plan how the
	Transition Architecture that implements the architecture will be
	governed through implementation. Within organizations that have
	established architecture functions, there is likely to be a governance
	framework already in place, but specific processes, organizations,
	roles, responsibilities, and measures may need to be defined on a
	project-by-project basis.
	
	The Implementation Governance Model ensures that a project transitioning
	into implementation also smoothly transitions into appropriate
	Architecture Governance.
	
	Content
	
	Typical contents of an Implementation Governance Model are:
	
	-   Governance processes
	-   Governance organization structure
	-   Governance roles and responsibilities
	-   Governance checkpoints and success/failure criteria
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.16_Organizational_Model_for_Enterprise_Architecture "4.2.16 Organizational Model for Enterprise Architecture"
	
	Purpose
	
	In order for an architecture framework to be used successfully, it must
	be supported by the correct organization, roles, and responsibilities
	within the enterprise. Of particular importance is the definition of
	boundaries between different Enterprise Architecture practitioners and
	the governance relationships that span across these boundaries.
	
	Content
	
	Typical contents of an Organizational Model for Enterprise Architecture
	are:
	
	-   Scope of organizations impacted
	-   Maturity assessment, gaps, and resolution approach
	-   Roles and responsibilities for architecture team(s)
	-   Constraints on architecture work
	-   Budget requirements
	-   Governance and support strategy
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.17_Request_for_Architecture_Work "4.2.17 Request for Architecture Work"
	
	Purpose
	
	This is a document that is sent from the sponsoring organization to the
	architecture organization to trigger the start of an architecture
	development cycle. Requests for Architecture Work can be created as an
	output of the Preliminary Phase, a result of approved architecture
	Change Requests, or terms of reference for architecture work originating
	from migration planning.
	
	In general, all the information in this document should be at a high
	level.
	
	Content
	
	Requests for Architecture Work typically include:
	
	-   Organization sponsors
	-   Organization's mission statement
	-   Business goals (and changes)
	-   Strategic plans of the business
	-   Time limits
	-   Changes in the business environment
	-   Organizational constraints
	-   Budget information, financial constraints
	-   External constraints, business constraints
	-   Current business system description
	-   Current architecture/IT system description
	-   Description of developing organization
	-   Description of resources available to developing organization
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.18_Requirements_Impact_Assessment "4.2.18 Requirements Impact Assessment"
	
	Purpose
	
	Throughout the ADM, new information is collected relating to an
	architecture. As this information is gathered, new facts may come to
	light that invalidate existing aspects of the architecture. A
	Requirements Impact Assessment assesses the current architecture
	requirements and specification to identify changes that should be made
	and the implications of those changes.
	
	Content
	
	Typical contents of a Requirements Impact Assessment are:
	
	-   Reference to specific requirements
	-   Stakeholder priority of the requirements to date
	-   Phases to be revisited
	-   Phase to lead on requirements prioritization
	-   Results of phase investigations and revised priorities
	-   Recommendations on management of requirements
	-   Repository reference number
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.19_Solution_Building_Blocks "4.2.19 Solution Building Blocks"
	
	Implementation-specific building blocks from the enterprise's
	Architecture Repository; see 5. Building Blocks .
	
snippet togaf_applying-the-adm_4_Architecture_Partitioning_4.2.1_Activities_within_the_Preliminary_Phase "4.2.1 Activities within the Preliminary Phase"
	
	The key objective of the Preliminary Phase is to establish the
	Architecture Capability for the enterprise. In practical terms this
	activity will require the establishment of a number of architecture
	partitions, providing defined boundaries, governance, and ownership.
	
	Generally speaking, each team carrying out architecture activity within
	the enterprise will own one or more architecture partitions and will
	execute the ADM to define, govern, and realize their architectures.
	
	If more than one team is expected to work on a single architecture, this
	can become problematic, as the precise responsibilities of each team are
	difficult to establish. For this reason, it is preferable to apply
	partitioning to the architecture until each architecture has one owning
	team.
	
	Finally, it is worth considering the distinction between standing
	capabilities of the enterprise and temporary teams mobilized to support
	a particular change initiative. Although the remit of standing teams
	within the enterprise can be precisely defined, it is more difficult to
	anticipate and specify the responsibilities of (possibly unknown)
	temporary architecture teams. In the cases of these temporary teams,
	each team should come under the governance of a standing architecture
	team and there should be a process within the ADM cycle of these teams
	to establish appropriate architecture partitioning.
	
	Steps within the Preliminary Phase to support architecture partitioning
	are as follows:
	
	-   Determine the organization structure for architecture within the
	    enterprise: the various standing teams that will create the
	    architecture should be identified
	
	    For each of these teams, appropriate boundaries should be
	    established, including:
	
	    -   Governance bodies that are applicable to the team
	    -   Team membership
	    -   Team reporting lines
	
	-   Determine the responsibilities for each standing architecture team:
	    for each architecture team, the responsibilities should be
	    identified
	
	    This step applies partitioning logic to the Enterprise Architecture
	    in order to firstly identify the scope of each team and secondly to
	    partition the architecture under the remit of a single team. Once
	    complete, this step should have partitioned the entire scope of the
	    enterprise and should have assigned responsibility for each
	    partitioned architecture to a single team. Partitioning should
	    create a definition of each architecture that includes:
	
	    -   Subject matter areas being covered
	    -   Level of detail at which the team will work
	    -   Time periods to be covered
	    -   Stakeholders
	
	-   Determine the relationships between architectures: once a set of
	    partitioned architectures has been created, the relationships
	    between architectures should be developed
	
	    This step allows governance relationships to be formalized and also
	    shows where artifacts from one architecture are expected to be
	    re-used within other architectures.
	
	    Areas of consideration include:
	
	    -   Where do different architectures overlap/dovetail/drill-down?
	    -   What are the compliance requirements between architectures?
	
	Once the Preliminary Phase is complete, the teams conducting the
	architecture should be understood. Each team should have a defined scope
	and the relationships between teams and architecture should be
	understood. Allocation of teams to architecture scope is illustrated in
	Figure 4-1 .
	
	[]
	
	Figure 4-1: Allocation of Teams to Architecture Scope
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.1_Architecture_Building_Blocks "4.2.1 Architecture Building Blocks"
	
	Architecture documentation and models from the enterprise's Architecture
	Repository; see 5. Building Blocks .
	
snippet togaf_digital-technology-adoption_4.2.1_Business_Model_Adaptability "4.2.1 Business Model Adaptability"
	
	Continual adaptation to change is the need of the hour for any business
	model. It is paramount to re-evaluate the business model time and again
	to align it with customer expectations and demands. The demands of the
	customer are changing. These trigger the requirement of having an Agile
	model and innovative financing to embrace rapid changes in the market.
	The nine major categories of the Business Model Canvas (BMC), as
	depicted in the DPBoK Standard and the TOGAF® Series Guide: Business
	Models [10], often need to be analyzed to describe the business model.
	Digital technologies play an enormous role and act as a catalyst in each
	of the categories of the BMC.
	
	It is paramount to evaluate the agility of the business model. The
	presence of strategic toolkits to embrace evolving customer requirements
	is key. The frequency of market research, data-driven analysis of the
	business outlook, and readiness to evolve toward a “blue ocean” from a
	“red ocean” approach is imperative today more than ever before.
	
	This factor reinforces “Business Rationale”, and the impact is both
	short-term as well as long-term. Organizations that have flexible
	business models leverage the agility to strengthen the business
	rationale across various frontiers.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank has a host of legacy     |
	|                                   | systems which are assigned to and |
	|                                   | owned by various functional       |
	|                                   | units. The functions align and    |
	|                                   | use IT as an enabler for          |
	|                                   | executing their business          |
	|                                   | strategy. Based on granular       |
	|                                   | customer requirements and their   |
	|                                   | need to have an end-to-end        |
	|                                   | process, the bank does align its  |
	|                                   | organization structure; but the   |
	|                                   | underlying systems and            |
	|                                   | application ownership remain      |
	|                                   | as-is, which influences the       |
	|                                   | customer service and turnaround   |
	|                                   | time adversely. This is one of    |
	|                                   | the reasons why the bank has not  |
	|                                   | been able to compete effectively  |
	|                                   | against new and younger banks     |
	|                                   | that do not have the burden of    |
	|                                   | legacy systems.                   |
	|                                   |                                   |
	|                                   | What is your advice to the bank?  |
	|                                   | How would you like them to        |
	|                                   | leverage technology to get the    |
	|                                   | best out of the BMC?              |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.1_Business_Model_and_Operating_Model "4.2.1 Business Model and Operating Model"
	
	The business model for an organization changes to stay current with the
	economy and environment within which it operates. Michael E. Porter, in
	his 1979 article titled How Competitive Forces Shape Strategy,[10]
	stressed the needs to track external and internal factors. As described
	by Alexander Osterwalder,[11] the business model can be extended to
	build a comprehensive model for complex enterprises – customers,
	beneficiaries, partners, suppliers, and regulators – as follows:
	
	-   Purpose of business and value proposition to customers,
	    beneficiaries, partners, suppliers, and regulators
	-   Channels of engagement with customers, beneficiaries, partners,
	    suppliers, and regulators
	-   Internal and external activities that add value to customers,
	    beneficiaries, partners, suppliers, and the enterprise
	-   Partnership activities and details of sharing cost and revenue
	-   Revenue models, including benefit realization streams
	-   Cost structures and their mapping to internal and external
	    activities
	-   Planning cycle (when the investments will be made) and impact
	    delivery cycle (who will realize what value and benefit at what
	    point in time in the future)
	
	The business model is an indicator of the cash flow and cash reserve
	management approach of the enterprise, including how it plans to stay in
	business for a conceivable period in the future. The smaller the
	financial margins, the higher the need for operational efficiency
	capabilities – lean but effective architecture to sustain the business.
	A higher profit margin is one of the several factors that results in
	poor sponsorship for a dedicated EA function. There are other factors
	like compliance, governance and risk, and challenges with long-term
	planning that may instigate a need for EA Capability to be built. When
	the team providing the EA Capability is aligned to an organizational
	unit that is operating as a cost function, sponsorship for the EA
	Capability will not be dependent on the financial margins of the
	organizational unit.
	
	Identify the business model for the enterprise “as-is” today or the
	direction for the next few years. Business models evolve with economic
	and social maturity. Alexander Osterwalder discussed how disruption to
	an industry or a business model can be caused by altering any one of
	these aspects. The business model drives the selection of the
	appropriate operating model. As the business model changes, the
	operating model will have to be adjusted. Over the past few decades, as
	the highly inter-dependent global economy emerged, the nature of
	external forces and their impact on the operating model evolved as well.
	Some of the key literature on these forces are (see also Appendix C):
	
	-   The Living Company, by Arie De Geus
	-   The Structuring of Organizations, by Henry Mintzberg
	-   The Delta Model, by Dean L. Wilde II and Arnoldo C. Hax
	-   The Core Competencies, by C.K. Prahalad, Allen Hammond, and
	    Stuart L. Hart
	-   The Fortune at the Bottom of the Pyramid, by C.K. Prahalad and
	    Stuart L. Hart
	
	An operating model is the conceptual representation or a description of
	how the enterprise executes its broad functions to achieve its stated
	purpose. The rationale behind how the enterprise executes its functions
	to achieve the stated purpose is called a business model. A pivot for a
	business model is the ability to manage cash flow and profitability
	considering how it functions, whereas an operating model is just the
	description of how it functions.
	
	For example, a philanthropic organization’s business model is about the
	activity to achieve a social goal – like availability of clean water to
	people hit by floods. Distinct business models would be aimed at raising
	funds to provide this service, put people in the field to directly
	deliver the social goal, or both. The operating model for this
	organization defines how awareness is maintained to raise money, how to
	respond to such needs, and to show results that the need is being met
	efficiently and effectively.
	
	To get started with documenting business and operating models, consider
	the following pivots:
	
	-   Ownership of design of products and services, and how it is
	    transferred to end-users
	-   How the products and services are charged (tactics to acquire
	    customers)
	-   Diversity of products and channels employed
	
	Operating models bridge the detailed organizational design with the
	strategy, values, and purpose of the enterprise. In simple terms, the
	operating model describes the internal expertise required and how the
	resources are managed to provide the services to customers of the
	enterprise.
	
	There are several templates and references available for documenting the
	operating model – differentiated by industry or geography or by public,
	private, or social incorporation. It should be noted that some of the
	industry verticals (e.g., retail, wholesale, online, digital) have their
	own versions of operating model classification. The Center for
	Information Systems Research (CISR) model shown in Figure 3 is
	industry-neutral and focuses on patterns for how business processes are
	handled by the enterprise for growth and sustainability.
	
	It is possible for the same firm to have more than one operating model.
	Common examples can be found in financial services or the Engineering,
	Procurement, Construction, and Management (EPCM) industry. A global
	banking and insurance company operating in, say, the United States,
	Brazil, and Germany may have a replication model – each country unit
	operates as its independent entity offering insurance and banking
	products and meets the needs of local demography and laws. Product
	design and financial structuring of these three units may replicate best
	practices of one another across each unit. The global holding company
	may be performing a coordination function to assure viability of the
	organization’s business model to its investors.
	
	While capturing the operating model, it is essential to explore and
	document the value of products or services or both delivered by the
	enterprise, its target market, value chain, revenue generation model,
	and the strategic advantage of the enterprise. Another dimension to
	consider while creating the operating model is the core nature of the
	business such as a manufacturing, marketing, sales and distribution
	services, professional services, community business, or public utility
	core nature. Value chain and revenue generation models will be covered
	in detail later in this Guide.
	
	[]
	
	Figure 3: Operating Model[12]
	
	The best way to capture and validate the operating model is by
	stakeholder analysis.
	
snippet togaf_metadata-management_4.2.1_Collect_Metadata_Requirements "4.2.1   Collect Metadata Requirements"
	
	There are different approaches to define metadata requirements (see
	Figure 4):
	
	-   A top-down approach starting with compliance or other business
	    use-cases to formalize metadata requirements; for example:
	
	—  Compliance: Regulation (GDPR, Solvency II,[2] IFRS 17),[3] internal
	(digital sustainability, security rules)
	
	—  Business use-cases: get customer interactions data to improve up-sell
	
	-   A bottom-up approach based on business data issues or data set
	    requirements; for example:
	
	—  Data set: document existing Customer Information File (CIF) to
	support BI & Analytics use-cases
	
	—  Business data issue: customers are invoiced at the wrong frequency
	generating frustrations and complaints; investigate root causes to
	tackle the issue
	
	[]
	
	Figure 4: Metadata Requirements Collection Illustration
	
	The top-down approach (compliance, business use-cases) often has strong
	business support; metadata consistency is required and guaranteed by
	validation processes and workflows. The bottom-up approach is more
	opportunistic and does not always have strong business support. For this
	approach it is important to show the value with concrete examples before
	further automation and governance. In both cases it is important to
	clarify the metadata requirements including the expected level of
	metadata quality required.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2.1_Context_I_Individual_Founder "4.2.1. Context I: Individual/Founder"
	
	The Individual/Founder context addresses “minimum essential concerns
	they must address to develop and sustain a basic digital product”. This
	context represents the bare minimum requirements of delivering digital
	value.
	
	The DPBoK Standard key topics for this context are:
	
	-   Conception of digital value
	
	    Architecture is often used as a communication medium. Architecture
	    models communicate very well. Also, the Enterprise Architect is a
	    communicator and considered a key enterprise networker.
	
	-   Digital infrastructure and related practices (the essential
	    infrastructure and process choices to quickly deliver value to the
	    market)
	
	    The Enterprise Architecture provides the necessary descriptions to
	    communicate the infrastructure available and its appropriate use for
	    both development and delivery. The Enterprise Architect can also
	    help to identify existing infrastructure approaches for
	    individuals/founders that may be embedded in larger organizations,
	    and to communicate vetted technical requirements to the
	    infrastructure organization to ensure preparation for new workloads.
	    To clarify: in Context 1 (and Context 2 as well) there are usually
	    not dedicated architects. Instead, architecture is a role, an
	    activity, or the responsibility of the team, to be performed when –
	    and only when – it is needed.
	
	-   Agile development and continuous delivery practices
	
	    Enterprise Architecture is often used to support and provide answers
	    to questions about Agile development and continuous delivery.
	    Enterprise Architects, if available to individuals/founders, are
	    often approached to provide guidance in these areas on demand, based
	    on their practical experience.
	
	    In this context it is expected that Enterprise Architecture efforts
	    must support the project to deliver digital products/solutions
	    effectively and efficiently. To support this context, the person
	    acting as the Enterprise Architect has a role to assure that risk is
	    understood and that decisions are made with an understanding of
	    risk.
	
	    For example, when an individual/founder proceeds with the
	    development and deployment of a new digital product they must be
	    informed of risks associated with the inadvertent release of
	    information that is either sensitive or classified. Also the
	    individual/founder may need guidance on ease of use, assistance with
	    timely delivery, and guidance on technologies that can assist or
	    deter.
	
	More details about the TOGAF Standard supporting enterprise agility can
	be found in the TOGAF^(®) Series Guide: Enabling Enterprise Agility (see
	Referenced Documents) and in the TOGAF^(®) Series Guide: Applying the
	TOGAF^(®) ADM using Agile Sprints (see Referenced Documents).
	
	Enterprise Architects need to deliver this support in an on-demand,
	service-oriented manner to meet the operating tempo of the
	individual/founder. Some areas where the Enterprise Architecture and the
	TOGAF Standard could support the creation of a digital strategy include:
	
	-   Identifying digital offerings or digital value using an outside-in
	    view that focuses on the customer or end user first
	
	-   Distinguishing strategy from the business model, and communicating
	    the strategy to support a corporate brand identity
	
	-   Helping to distinguish between the problem space and the solution
	    space
	
	-   Helping to shift from requirements to outcome-oriented and
	    outcome-centered thinking in product delivery and value delivery to
	    customers through value streams and capabilities identification
	
	-   Increasing or enhancing operational excellence by supporting and
	    providing guidance for operational improvements
	
	    This includes modeling operations and defining a realistic
	    improvement roadmap; collaborating on models to ensure a complete
	    picture of the company from supplier to end-user support, product
	    ideation through retirement, and throughout the value stream with
	    demarcations for cost and revenue. Examples of this type of output
	    or outcome include a business model canvas, business scenarios,
	    value stream and business capabilities mapping, product and service
	    modeling, use cases, and business cases, specifically around
	    requirements management:
	
	    -   Digital security, security architecture, risk management, and
	        Enterprise Architecture governance to provide the company
	        protection from harmful events
	
	    -   Creating a digital stack by identifying the supporting
	        capabilities for the digital offering, as well as the digital
	        stack and associated interdependencies
	
	    -   Defining the digital lifecycle through the service, application
	        portfolio, and security infrastructure lifecycle viewpoints
	
snippet togaf_reference-models_digital-business-reference-model_4.2.1_Customer_Focus "4.2.1 Customer Focus"
	
	The Customer Focus element adopts outside-in thinking to discover how
	customers are likely to use products and services from the customer
	perspective and discovering the hidden or untold customer needs.
	
	-   Digital Context/Needs
	
	In positioning a digital offering, organizations must consider the
	likelihood of it being adopted. Is it part of a broader “movement” of
	technological innovation? Where is the customer base in terms of its
	willingness to adopt the innovation? The demand for “digital-first”
	culture where the business models, plans, architectures, and
	implementation strategies are based on a digital organization
	architecture that inspires and rewards a number of desired behaviors,
	such as servant leadership, strategic value chain thinking, consumer
	focus, fault tolerance, agility, and more are essential to enable a
	customer-centric approach within the organization. It requires a
	workforce with a sense of psychological safety, digitally savvy enough
	to execute a “digital-first approach”.
	
	-   Customer Experience
	
	The sum totality of how customers engage with the company and brand, not
	just in a snapshot in time, but throughout the entire arc of being a
	customer. The Customer Experience way of doing business that meets the
	expectations of customers by analyzing the interactions between the
	enterprise and its customers, to enable the delivery of a pleasant and
	differentiated Customer Experience. (Source: The O-AA Standard)
	
	-   Digital Value
	
	There are many ways in which digital systems deliver value. Digital
	technology generates value in both direct and indirect ways. The
	application of digital technology to create additional business value
	within the primary value chain of enterprises (digitalization).
	
snippet togaf_adm_4_B_Business_Architecture_4.2.1_Reference_Materials_External_to_the_Enterprise "4.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_architecture-project-management_4.2.1_TOGAF_ADM_Phase_A_Architecture_Vision "4.2.1 TOGAF ADM Phase A (Architecture Vision)"
	
	The following processes/stages were detailed to exactly reflect the
	TOGAF ADM and PRINCE2.
	
	All of the ADM Phase A tasks were included in the detailed mapping,
	along with the main deliverables:
	
	Establish the Architecture Project, which is input to the PRINCE2
	“Starting up the project” stage
	
	Identify Stakeholders, Concerns, and Business Requirements – results
	from this task should be used during PRINCE2 “Set up the project
	controls” process
	
	-   Confirm and Elaborate Business Goals, Business Drivers, and
	    Constraints – resulting in refined statements of business
	    principles, goals, and drivers
	-   Evaluate Capabilities
	-   Assess Readiness for Business Transformation – resulting in a
	    Capability Assessment
	-   Define Scope, which has an impact on the PRINCE2 “Refine the
	    Business Case” process
	-   Confirm and Elaborate Architecture Principles, including Business
	    Principles – resulting in Architecture Principles
	-   Develop Architecture Vision – resulting in a Draft Architecture
	    Definition Document and Architecture Vision which are inputs to the
	    PRINCE2 “Create the Project Plan” process
	-   Define the Target Architecture Value Propositions and KPIs
	-   Identify the Business Transformation Risks and Mitigation Activities
	    – resulting in a Communications Plan
	-   Develop Statement of Architecture Work; Secure Approval – resulting
	    in an Approved Statement of Architecture Work, which should be part
	    of the PRINCE2 Project Initiation Documentation that is to be
	    completed during the PRINCE2 “Assemble the Project Initiation
	    Documentation” process
	
	All of the PRINCE2 “Starting up the project” processes were included in
	the detailed mapping, along with all deliverables:
	
	-   Appoint the Executive & Project Manager, which should be started
	    after the “Establish the Architecture Project” task from the ADM,
	    resulting in the Project Management team role descriptions (part of
	    the Project Brief)
	-   Capture previous lessons – resulting in a Lessons Log
	-   Prepare the outline Business Case – resulting in the Outline
	    Business Case and Project Product Description (both part of the
	    Project Brief)
	-   Design and appoint the Project Management team – resulting in the
	    Project Management team structure and updated Project Management
	    team role descriptions (both part of the Project Brief)
	-   Select the project approach & assemble the Project Brief – resulting
	    in the Project Approach (part of the Project Brief)
	-   Plan the initiation stage – resulting in the Initiation stage plan
	
	All of the PRINCE2 “Initiation” processes were included in the detailed
	mapping, along with all deliverables.
	
	Development of Project Management Strategies, that can be executed in
	parallel:
	
	-   Prepare the Risk Management Strategy – resulting in the Risk
	    Management Strategy (part of the Project Initiation Documentation)
	    and Risk Register
	-   Prepare the Quality Management Strategy – resulting in the Quality
	    Management Strategy (part of the Project Initiation Documentation)
	    and Quality Register
	-   Prepare Configuration Management Strategy – resulting in the
	    Configuration Management Strategy (part of the Project Initiation
	    Documentation), Configuration Item Records, and Issue Register
	-   Prepare the Communication Management Strategy – resulting in the
	    Communication Management Strategy (part of the Project Initiation
	    Documentation)
	
	Development of Project Plan and project controls, that can be executed
	in parallel after completion of the Project Management Strategies:
	
	-   Set up the project controls – resulting in the Project Controls
	    (part of the Project Initiation Documentation)
	
	Results from the ADM step Identify Stakeholders, Concerns, and Business
	Requirements should be used during this process to ensure the integrity
	of the project control mechanisms.
	
	-   Create the Project Plan – resulting in the Project Plan (part of the
	    Project Initiation Documentation)
	
	The Draft Architecture Definition Document prepared during Develop
	Architecture Vision should be considered as input to planning all
	activities during the Architecture Project.
	
	The following tasks should be executed sequentially after completion of
	the previous “Initiation” stage processes:
	
	-   Refine the Business Case – resulting in the Detailed Business Case
	    (part of the Project Initiation Documentation) and Benefits Review
	    Plan
	
	Results from the ADM step Define Scope should be considered during this
	process.
	
	-   Assemble the Project Initiation Documentation – resulting in the
	    Project Initiation Documentation
	
	The approved Statement of Architecture Work (resulting from the ADM step
	Develop Statement of Architecture Work; Secure Approval) should be
	included in the Project Initiation Document.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.20_Statement_of_Architecture_Work "4.2.20 Statement of Architecture Work"
	
	Purpose
	
	The Statement of Architecture Work defines the scope and approach that
	will be used to complete an architecture development cycle. The
	Statement of Architecture Work is typically the document against which
	successful execution of the architecture project will be measured and
	may form the basis for a contractual agreement between the supplier and
	consumer of architecture services.
	
	Content
	
	Typical contents of a Statement of Architecture Work are:
	
	-   Title
	-   Architecture project request and background
	-   Architecture project description and scope
	-   Overview of Architecture Vision
	-   Specific change of scope procedures
	-   Roles, responsibilities, and deliverables
	-   Acceptance criteria and procedures
	-   Architecture project plan and schedule
	-   Approvals
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.21_Tailored_Architecture_Framework "4.2.21 Tailored Architecture Framework"
	
	Purpose
	
	The TOGAF framework provides an industry standard for architecture that
	may be used in a wide variety of organizations. However, before the
	TOGAF framework can be effectively used within an architecture project,
	tailoring at two levels is necessary.
	
	Firstly, it is necessary to tailor the TOGAF model for integration into
	the enterprise. This tailoring will include integration with management
	frameworks, customization of terminology, development of presentational
	styles, selection, configuration, and deployment of architecture tools,
	etc. The formality and detail of any frameworks adopted should also
	align with other contextual factors for the enterprise, such as culture,
	stakeholders, commercial models for Enterprise Architecture, and the
	existing level of Architecture Capability.
	
	Once the framework has been tailored to the enterprise, further
	tailoring is necessary in order to tailor the framework for the specific
	architecture project. Tailoring at this level will select appropriate
	deliverables and artifacts to meet project and stakeholder needs.
	
	See the TOGAF Standard — Architecture Development Method for further
	considerations when selecting and tailoring the architecture framework.
	
	Content
	
	Typical contents of a Tailored Architecture Framework are:
	
	-   Tailored architecture method
	-   Tailored architecture content (deliverables and artifacts)
	-   Configured and deployed tools
	-   Interfaces with governance models and other frameworks:
	    -   Corporate Business Planning
	    -   Enterprise Architecture
	    -   Portfolio, Program, Project Management
	    -   System Development/Engineering
	    -   Operations (Services)
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.2_Architecture_Contract "4.2.2 Architecture Contract"
	
	Purpose
	
	Architecture Contracts are the joint agreements between development
	partners and sponsors on the deliverables, quality, and
	fitness-for-purpose of an architecture. Successful implementation of
	these agreements will be delivered through effective Architecture
	Governance (see the TOGAF Standard — EA Capability and Governance). By
	implementing a governed approach to the management of contracts, the
	following will be ensured:
	
	-   A system of continuous monitoring to check integrity, changes,
	    decision-making, and audit of all architecture-related activities
	    within the organization
	-   Adherence to the principles, standards, and requirements of the
	    existing or developing architectures
	-   Identification of risks in all aspects of the development and
	    implementation of the architecture(s) covering the internal
	    development against accepted standards, policies, technologies, and
	    products as well as the operational aspects of the architectures
	    such that the organization can continue its business within a
	    resilient environment
	-   A set of processes and practices that ensure accountability,
	    responsibility, and discipline with regard to the development and
	    usage of all architectural artifacts
	-   A formal understanding of the governance organization responsible
	    for the contract, their level of authority, and scope of the
	    architecture under the governance of this body
	
	Content
	
	Typical contents of an Architecture Design and Development Contract are:
	
	-   Introduction and background
	-   The nature of the agreement
	-   Scope of the architecture
	-   Architecture and strategic principles and requirements
	-   Conformance requirements
	-   Architecture development and management process and roles
	-   Target Architecture measures
	-   Defined phases of deliverables
	-   Prioritized joint workplan
	-   Time window(s)
	-   Architecture delivery and business metrics
	
	Typical contents of a Business Users' Architecture Contract are:
	
	-   Introduction and background
	-   The nature of the agreement
	-   Scope
	-   Strategic requirements
	-   Conformance requirements
	-   Architecture adopters
	-   Time window
	-   Architecture business metrics
	-   Service architecture (includes Service-Level Agreement (SLA))
	
	For more detail on the use of Architecture Contracts, see the TOGAF
	Standard — EA Capability and Governance.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2.2_Context_II_Team "4.2.2. Context II: Team"
	
	The team has a single mission and a cohesive identity, but does not need
	a lot of overhead to get the job done. The Team context covers the basic
	elements necessary for a collaborative product team to achieve success
	while remaining at a manageable human scale. Establishing team
	collaboration as a fundamental guiding value is essential to successful
	digital product development. Even with a few new people comes the need
	to establish product direction more clearly, so people are building the
	right thing. The team is all in the same location, and can still
	communicate informally, but there is enough going on that it needs a
	more organized approach to getting work done.
	
	The collaboration level represents the critical Team-level experience.
	Establishing team collaboration as a fundamental guiding value is
	essential to successful digital product development. The insights of the
	Agile movement and related themes such as Lean are primary in this
	context.
	
	The DPBoK Standard highlights the following areas of interest within the
	Team context:
	
	-   Product Management
	
	    -   Product architecture has been a staple for assisting product
	        management decisions
	
	        Enterprise Architecture can provide architecture models that map
	        to a given digital product profile. Additionally, Enterprise
	        Architecture makes interdependencies explicit, assuring an
	        holistic view of the digital product.
	
	-   Work Execution Management
	
	    -   Enterprise Architecture is often used to depict processes and
	        workflows in very simple to very complex levels of detail
	
	        In the Team context very simple models can be constructed to
	        help communicate workflows and processes; not the entire answer
	        for work management, but a good way to communicate within a
	        small team.
	
	-   Operations Management
	
	    -   Enterprise Architects have been significant contributors to
	        those managing operations
	
	        Indeed, whenever you see a control board you are seeing a visual
	        depiction of the connection between the operations architecture
	        and real-time data about operations. In the Teams context a
	        single digital product may need an architecture model to depict
	        how operations are expected to run while the actual digital
	        product is running and while the team is working on the
	        continuous delivery of improvements to that product.
	
	In the Team context the Enterprise Architecture efforts must support the
	project to deliver digital products/solutions effectively and
	efficiently in an environment where there are more people involved –
	communication is essential. In the Team context the Enterprise Architect
	has an even greater role to assure that risk is understood and that
	decisions are made with an understanding of risk. And, given the greater
	number of people involved in the Team context, the Enterprise Architect
	has an additional role to ensure efficacy of communication and
	collaboration. So, modeling and documenting become more important to
	have a common shared understanding to support product management, work
	execution, and operations understanding.
	
	For example, when a team proceeds with the development and deployment of
	a new digital product they must not only be informed of data risks, they
	must also have a shared understanding of those risks among team members.
	Also critical in a team environment is to ensure a common and shared
	approach to requirements understanding to avoid different team members
	moving on different priorities. For the small teams typically working in
	this context, the approach should be lightweight communication in full
	support of the team’s tempo.
	
	Enterprise Architects help to communicate risks and mitigations when
	dealing with data security, guidance on ease-of-use, assisting with
	requirements understanding, assisting with timely delivery, and
	providing guidance on technologies that can assist or deter. Enterprise
	Architects should deliver this support in an on-demand, service-oriented
	manner to meet the operating tempo of the team.
	
snippet togaf_reference-models_digital-business-reference-model_4.2.2_Digital_Enterprise "4.2.2 Digital Enterprise"
	
	-   Digital Products and Service Portfolio/Model
	
	The management of a digitalized products and services portfolio and
	delivery model to enable the relevant Digital Products and Services is
	delivered fully digitally or obtained by the customer by digital means
	without impacting the overall Customer Experience. (Source: The DPBoK
	Standard)
	
	-   Digital Operations
	
	The adoption of an outward-in approach to identify and implement the
	appropriate operational capabilities to deliver the relevant digital and
	product services for the respective targeted customers for the
	respective digital business model. The underlying Operating Model,
	Business Capability Model enabled by the appropriate value streams,
	business process, people, and systems are essential to build the
	necessary digital capabilities for cost-effective Digital Operations.
	
	-   Digital Competencies
	
	Sets of resources, services, and assets that are necessary for
	individuals and organizations to create and manage product offerings
	with an increasing digital component or lead their organization through
	digital transformation. The DPBoK Standard defines these competencies
	based on the scaled model as follows:
	
	Context I: Individual/Founder – represents the bare minimum requirements
	of delivering Digital Value:
	
	—  Conception of Digital Value
	
	—  Digital infrastructure and related practices
	
	—  Agile development and continuous delivery practices
	
	Context II: Team – the collaboration level represents the critical
	team-level experience. Establishing team collaboration as a fundamental
	guiding value is essential to successful digital product development:
	
	—  Product management
	
	—  Work execution
	
	—  Operations management
	
	Context III: Team of Teams – coordinating across the “team of teams” is
	a hard problem. Too often, coordination mechanisms (such as overly
	process-centric operating models) degrade team cohesion and performance:
	
	—  Coordination mechanisms, including process management and IT Service
	Management (ITSM)
	
	—  Investment and sourcing (including project management)
	
	—  Organization and cultural factors
	
	Context IV: Enduring Enterprise – the thought experiment here is “the
	growing enterprise” and the establishment of additional feedback
	mechanisms for steering, managing risk, and assuring performance at
	scale and over increasing time horizons and increasingly complex
	ecosystems:
	
	—  Governance, risk, security, and compliance
	
	—  Information management
	
	—  Architecture and portfolio management
	
snippet togaf_metadata-management_4.2.2_Formalize_Metadata_Management_Processes "4.2.2 Formalize Metadata Management Processes"
	
	Metadata quality is enforced by processes and validation workflows that
	can vary per metadata scope. There are mainly two approaches (see Figure
	5):
	
	-   The normative approach, which aims to guarantee precision, accuracy,
	    integrity, and consistency of the metadata
	
	    In this approach the metadata is created by a few, published as
	    read-only, static (few changes overtime), and its lifecycle is
	    managed via validation workflows. It fits well with metadata subject
	    to regulatory constraints and central organization.
	
	-   The collaborative approach is more appropriate in the data
	    democratization approach where there is a need to have multiple
	    contributors maintaining the technical metadata and, when required,
	    to associate the technical metadata with business metadata to
	    provide a business context: created by many, edited by many,
	    dynamic, eventual consistency
	
	[]
	
	Figure 5: Metadata Quality Enforcement Approaches
	
snippet togaf_adm_4_B_Business_Architecture_4.2.2_Non-Architectural_Inputs "4.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Business principles, business goals, and business drivers (see the
	    TOGAF Standard — Architecture Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.2_Operating_Environment_and_Compliance_Regulations_Industry_Standards "4.2.2 Operating Environment and Compliance, Regulations, Industry Standards"
	
	It is normal that the law catches up with practices of organizations to
	assure common good for the mass population. As innovations happen, the
	enterprise tends to believe that is it not under any compliance or
	regulatory restrictions. Though not apparent, functions like HR and
	finance always fall under some form of regulatory controls.
	
	Simple research on some legal issues faced by the new enterprises
	disrupting global taxi operations in 2015 is an illustration of the
	tension between innovation, social balance, and law. An enterprise that
	is making new armor to protect human life is probably inventing new
	material for which no standards exist for mass production or
	testability. Just like medicinal drug formulation, this enterprise is
	also required to follow a protocol for development and validation before
	entering the live human trial phase. It is one of the responsibilities
	of the EA Capability Leader to educate the executives and other Leaders
	in the enterprise, where standards and compliance apply and where the
	enterprise is a pioneer if they are not acknowledging these needs
	easily.
	
	It is a good practice to create a catalog of compliance needs, local and
	international regulations, and industry standards that apply to the
	enterprise.
	
snippet togaf_digital-technology-adoption_4.2.2_Skills_and_Competence "4.2.2 Skills and Competence"
	
	In the adoption of digital technology, human resource plays an integral
	part. There are technology-specific skills that need to be nurtured
	within the organization. The capacity-building activities are a
	continuous process of learning and keep evolving as technology
	progresses.
	
	Through this factor, the intention is to measure the organization’s
	capability in terms of resource skills and competency. The placement of
	the Learning Management System (LMS) and the partnership with digital
	technology content players play a key role in the journey. An
	organization strategy to mitigate skill-gaps while moving toward
	enhancing the digital service portfolio is another ingredient that leads
	to new technology adoption.
	
	This factor directly amplifies the “IT Capability” of any organization.
	The importance of this factor becomes more evident when there is a
	supply-demand gap, wherein the demand is more for personnel with digital
	technology skills, but the supply is below demand.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | One of the pivotal tasks of the   |
	|                                   | committee was to assess current   |
	|                                   | skill sets across multiple        |
	|                                   | technology teams to see if they   |
	|                                   | can “understand and adapt” new    |
	|                                   | technologies. The skill set       |
	|                                   | inventory showed that most of the |
	|                                   | teams are good in maintenance of  |
	|                                   | the current applications on       |
	|                                   | legacy platforms. Only some are   |
	|                                   | engaged in acquiring new skill    |
	|                                   | sets as a part of development     |
	|                                   | goals and none have even a basic  |
	|                                   | understanding in User Experience  |
	|                                   | (UX) and design, which is a       |
	|                                   | prerequisite for implementing new |
	|                                   | technologies. There is a          |
	|                                   | headcount freeze and the CIO      |
	|                                   | cannot recruit anyone with the    |
	|                                   | desired new skill sets. He cannot |
	|                                   | exchange either (let go of        |
	|                                   | redundant technology resources in |
	|                                   | favor of new technology) and has  |
	|                                   | not yet determined the training   |
	|                                   | priorities for his teams.         |
	|                                   | Training priority is a product of |
	|                                   | training gap and the immediate    |
	|                                   | need of the skill set for the     |
	|                                   | organization.                     |
	|                                   |                                   |
	|                                   | Is the organization ready to      |
	|                                   | start its journey in new          |
	|                                   | technology? What is your advice   |
	|                                   | to them?                          |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-project-management_4.2.2_TOGAF_ADM_Phases_B_to_F "4.2.2 TOGAF ADM Phases B to F"
	
	As described in Architecture Project Management Concepts (Section 2.3),
	the TOGAF ADM Phases B to F are considered as PRINCE2 work delivery
	stages and should be planned under the PRINCE2 Managing Stage Boundary,
	controlled under the PRINCE2 “Controlling the stage”, and delivered
	under the PRINCE2 Managing Product Delivery. Phases B to F do not
	specify any Project Management activities; therefore, should be managed
	according to the PRINCE2 method.
	
	[Figure 8.png]
	
	Figure 8: TOGAF ADM and PRINCE2 Mapping (Detailed) (Derived from the
	TOGAF Standard and PRINCE2)
	
snippet togaf_adm_4_B_Business_Architecture_4.2.3_Architectural_Inputs "4.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Approved Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Principles (see the TOGAF Standard — Architecture
	    Content), including business principles, when pre-existing
	-   Enterprise Continuum (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Architecture Vision (see the TOGAF Standard — Architecture Content),
	    including:
	    -   Problem description
	    -   Objective of the Statement of Architecture Work
	    -   Summary views
	    -   Business Scenario (optional)
	    -   Refined key high-level stakeholder requirements
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.3_Architecture_Definition_Document "4.2.3 Architecture Definition Document"
	
	Purpose
	
	The Architecture Definition Document is the deliverable container for
	the core architectural artifacts created during a project and for
	important related information. The Architecture Definition Document
	spans all architecture domains (Business, Data, Application, and
	Technology) and also examines all relevant states of the architecture
	(Baseline, Transition, and Target).
	
	A Transition Architecture shows the enterprise at an architecturally
	significant state between the Baseline and Target Architectures.
	Transition Architectures are used to describe transitional Target
	Architectures necessary for effective realization of the Target
	Architecture.
	
	The Architecture Definition Document is a companion to the Architecture
	Requirements Specification, with a complementary objective:
	
	-   The Architecture Definition Document provides a qualitative view of
	    the solution and aims to communicate the intent of the architects
	-   The Architecture Requirements Specification provides a quantitative
	    view of the solution, stating measurable criteria that must be met
	    during the implementation of the architecture
	
	Content
	
	Typical contents of an Architecture Definition Document are:
	
	-   Scope
	-   Goals, objectives, and constraints
	-   Architecture Principles
	-   Baseline Architecture
	-   Architecture models (for each state to be modeled):
	    -   Business Architecture models
	    -   Data Architecture models
	    -   Application Architecture models
	    -   Technology Architecture models
	-   Rationale and justification for architectural approach
	-   Mapping to Architecture Repository:
	    -   Mapping to Architecture Landscape
	    -   Mapping to reference models
	    -   Mapping to standards
	    -   Re-use assessment
	-   Gap analysis
	-   Impact assessment
	-   Transition Architecture:
	    -   Definition of transition states
	    -   Business Architecture for each transition state
	    -   Data Architecture for each transition state
	    -   Application Architecture for each transition state
	    -   Technology Architecture for each transition state
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2.3_Context_III_Team_of_Teams "4.2.3. Context III: Team of Teams"
	
	Coordinating across a team of teams is the main concern that people in
	an Enterprise Architect role need to address using Enterprise
	Architecture and the TOGAF Standard. Too often, coordination mechanisms
	(such as overly process-centric operating models) degrade team cohesion
	and performance. It is important to balance overcomplex coordination
	with the need to ensure the success of a family of digital products.
	
	The Team of Teams context is a natural evolution of the Teams context,
	but one where the number of people and digital products involved
	generates complexity. Coordinating across a team of teams is the main
	concern and, too often, coordination mechanisms degrade team cohesion
	and performance. Communication is again key to ensure successful
	collaboration and value delivery.
	
	The Team of Teams context is where the traditional strengths of
	Enterprise Architecture increase significantly in value through
	identifying and enabling essential interactions between teams while
	minimizing the cognitive load of those interactions for the team
	members.
	
	The DPBoK Standard key topics for this context are:
	
	-   Organization and cultural factors
	
	    Organizational, and especially cultural, issues are often
	    significant drivers in shaping process design, especially in
	    international or multi-jurisdictional enterprises. In certain cases,
	    it might be necessary to respect cultural differences through
	    different means. The means might include altering basic processes,
	    different approaches to stakeholder interaction and management, or
	    altering designs. When an organization is described in terms of
	    value generation, many cultural issues can be managed simply by
	    respecting the constituent parts of the organization. Enterprise
	    Architecture helps to resolve all of these concerns.
	
	-   Coordination and process mechanisms
	
	    Enterprise Architecture is used to depict processes and control
	    mechanisms. It is used to identify and eliminate choke points and
	    for continuous process improvement.
	
	-   Investment and portfolio consequences of a multi-team structure
	
	    Enterprise Architectures that depict portfolios of products are
	    critical resources in portfolio management. The holistic depiction
	    of interdependencies, value generation, and cost, etc. support
	    portfolio management decision-making.
	
	Other areas where Enterprise Architecture and TOGAF Standard expertise
	can be used to remove friction from company operations and growth
	include:
	
	-   Identifying key drivers for the transition from a unitary team to a
	    team of teams
	
	-   Identifying the basics of coordination problems and providing a
	    solution that solves it, which includes spotlighting the pros and
	    cons of traditional process management
	
	-   Identifying the basic product/function spectrum of organizational
	    forms
	
	-   Identifying important cultural factors and concepts for measuring
	    and changing culture
	
	In the Team of Teams context, Enterprise Architecture and the person in
	the Enterprise Architect role continues to ensure that risk is
	understood and communication is effective. Yet, given the greater number
	of digital products involved in a Team of Teams context, the Enterprise
	Architect has the additional role of ensuring that the digital products
	work together, leverage each other, and are appropriately coupled; thus,
	modeling and documenting the move from a specific digital product to
	portfolios of digital products that require interoperability.
	
	Additional areas where Enterprise Architecture and the TOGAF Standard
	provide support include where Enterprise Architecture:
	
	-   Can be applied to support cross-activities and interdependencies
	    between teams following a portfolio view
	
	-   Supports cross-activities and interdependencies between teams
	    following a portfolio view in alignment with, and supported by, the
	    IT4IT™ Standard
	
	-   Delivers the high-level view and landscape, and identifying the
	    current and target organization maturity level for the digital
	    enterprise
	
	-   Supports digital product and service catalog definition
	
	-   Provides capability-based planning and process management guidance
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.3_Organization_Model_of_the_Enterprise "4.2.3 Organization Model of the Enterprise"
	
	In most cases, the enterprise should have an organization model, and it
	is good enough for the EA Capability team to have it accessible. In the
	event the EA Capability’s chartered scope is one business unit, product
	line, or geography, analysis discussed in the next few paragraphs should
	be limited to identifying dependencies and influences. Essentially, what
	the enterprise is must be defined in the context of what is being
	expected from the EA Capability effort.
	
	An organization structure or organization model provides insights into
	leadership style, authority and center(s) of power, and values of the
	organization. It also informs lines of communication, local and global
	culture, segregation of duties, and resource allocations to achieve the
	stated mission and objectives of the enterprise. The model will provide
	insights into the kind of challenges the enterprise faces.
	
	[]
	
	Figure 4: Extended Enterprise
	
	Note: The yellow icons represent the geographical locations from where
	the teams could be operating.
	
	Depending on the nature of business, the enterprise may be procuring raw
	materials or augmenting its work force via independent agents, partners,
	vendors, or all of the above. The Leader will have to create a catalog
	of key contacts and their locations for each type of “extension” to the
	enterprise. The version of organization model which needs to be
	documented may look like Figure 4, but this model is not an absolute
	reference.
	
	The default organization model should reflect the lines of business or
	business units. Some of the other aspects to capture are locations,
	proximity to customer and interaction, value of innovation and data
	sovereignty (can employee, customer, partner, or revenue data be shared
	across geo-political boundaries), suppliers, and partners.
	
	Performing an analysis of the current organization model informs how the
	enterprise prefers to employ human resources. Variants include grouping
	by skill set, by outcome, by line of business, or some by outsourcing
	non-essential functions. Understanding the mix of expertise and
	experience levels enables identification of intellectual property the
	enterprise wants to protect. Such analysis can be done in subsequent
	iterations of understanding the organization model. Creating an extended
	view as shown in Figure 4 will enable development of alternate viable
	options for business architecture or cost structure management.
	
	A functional organization essentially follows Porter’s value chain
	model: marketing, sales, order management, product design,
	manufacturing, customer support, finance, HR, working as separate
	vertical units, brought together by business processes and interface
	procedures. Utility service providers are likely to have this model.
	
	A product-based organization is pivoted by specific product lines, and
	products may not overlap with each other. Common functions like HR,
	finance, and marketing may either be duplicated by each product line or
	segregated as common or shared functions of the enterprise. Each product
	line is likely to have its organization head, sales, order management,
	product design, and manufacturing functions. Governmental organizations
	or organizations like General Electric with diverse products are likely
	to follow this model.
	
	Organizations that are heavy on project-based execution are likely to
	have a matrix structure – where functional skill set specialization and
	maturity are managed by separate Leaders and product and operational
	needs are championed by different sets of personnel. Each execution
	effort will require functional and product leaders to agree upon team
	size and composition to complete the task at hand.
	
	With each iteration, understanding the organizational model, clarity
	will emerge about the stakeholders, decision-makers, implementers, and
	functions of each organization. In the first pass through of this
	discovery, analysis, and documentation process, insights will be
	directional and indicative. As the depth of understanding of the
	organization model increases, quality and quantity of data for
	organization and functions will improve exponentially. This knowledge
	will enable development of appropriate models and views.
	
snippet togaf_digital-technology-adoption_4.2.3_Technology_Maturity "4.2.3 Technology Maturity"
	
	For the adoption of digital technology, organizations often feel the
	urge to analyze the maturity of the technology. The approach differs
	from organization to organization. While some are early adopters, others
	are late movers. Late movers generally leverage the technology when the
	technology is in a matured state. The relative advantage that the new
	technology brings compared to the existing technology is critical.
	Organizations grapple with the trade-off between the urge for creating a
	first-mover advantage and the risk of failure during the process of
	adoption. Since organizations have recognized that the combined use of
	digital technology is more beneficial than using technologies in
	isolation, assessing technology maturity is critical in this digital
	era.
	
	An organization must evaluate its risk appetite and find a sweet spot
	for the adoption of digital technology at every stage of technology
	maturity. The need to understand the maturity level of technology to
	suit the industry domain is pivotal. At the same time, it is paramount
	to understand the underlying principles, cost, and complexities related
	to technology.
	
	Technology maturity drives the implementation approach in the real
	world. Few organizations try to get themselves involved in emerging
	technology at a nascent stage. Others adopt a wait-and-watch style of
	incorporation taking cues from the attempts made by other organizations.
	Another approach is to embrace digital technology with low-hanging fruit
	in a sandbox style before a major rollout.
	
	To assess the maturity of technology, the Technology Readiness Levels
	(TRLs) could be leveraged. TRLs distinguish the progress of a technology
	from its basic principles to fully functional mission operations on a
	9-point scale [11]. Organizations might suitably tailor this TRL scale
	to meet their requirements.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank realizes there are very  |
	|                                   | few benchmarks or reference       |
	|                                   | points on technology maturity as  |
	|                                   | very few banks have implemented   |
	|                                   | any, and those who have done so   |
	|                                   | have not shared best practices,   |
	|                                   | lessons, and learnings.           |
	|                                   |                                   |
	|                                   | Keeping technology maturity       |
	|                                   | awareness in consideration, what  |
	|                                   | would you advise the bank about   |
	|                                   | their adoption approach?          |
	|                                   |                                   |
	|                                   | Note: Refer to the “ABCD”         |
	|                                   | framework for adoption approach;  |
	|                                   | see Figure 4.                     |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.4_Architecture_Principles "4.2.4 Architecture Principles"
	
	Purpose
	
	Principles are general rules and guidelines, intended to be enduring and
	seldom amended, that inform and support the way in which an organization
	sets about fulfilling its mission.
	
	In their turn, principles may be just one element in a structured set of
	ideas that collectively define and guide the organization, from values
	through to actions and results.
	
	Content
	
	See the TOGAF Standard — ADM Techniques for guidelines and a detailed
	set of generic Architecture Principles, including:
	
	-   Business principles (see the TOGAF Standard — ADM Techniques)
	-   Data principles (see the TOGAF Standard — ADM Techniques)
	-   Application principles (see the TOGAF Standard — ADM Techniques)
	-   Technology principles (see the TOGAF Standard — ADM Techniques)
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2.4_Context_IV_Enduring_Enterprise "4.2.4. Context IV: Enduring Enterprise"
	
	The Enduring Enterprise context is about how to manage an enterprise
	that has been successful and is now faced with the realities of
	operating a sustainable business over periods of time longer than the
	next product cycle; see the DPBoK Standard (see Referenced Documents),
	Section 6.4: “However, what may be less obvious is that scaling up in
	size also means scaling out in terms of timeframes: concern for the past
	and the future extend further and further in each direction.
	Organizational history is an increasing factor, and the need to manage
	this knowledge base can’t be ignored. The organization is fulfilling
	responsibilities set in place by those no longer present and is building
	product and signing service contracts to be fulfilled by those who will
	come after”.
	
	The DPBoK Standard highlights the following areas of interest within the
	Enduring Enterprise context:
	
	-   Governance, risk, security, and compliance
	
	    -   Managing risk, including security risk, is often accomplished
	        through governance and compliance
	
	        Compliance criteria can be derived from internal (to the
	        company) sources, and external sources (such as laws and
	        regulation). Good Enterprise Architectures provide compliance
	        criteria that must be used to assess compliance of business
	        processes, information technology, and human resources (though
	        admittedly little is done in Enterprise Architecture on the
	        human resource side today other than specific certifications).
	        The assessments should guide information governance decisions.
	
	-   Information management
	
	    -   A critical domain in any Enterprise Architecture is the
	        Information Systems domain, which covers data and application
	        architecture; this domain is here to guide information
	        management issues
	
	-   Architecture and portfolio management
	
	    -   Enterprise Architectures that depict portfolios of product are
	        critical resources in portfolio management
	
	        The holistic depiction of interdependencies – value generation,
	        cost, etc. – supports portfolio management decision-making.
	        Given the costs of Enterprise Architecture, this activity itself
	        represents something within a portfolio that should be managed
	        in the Enduring Enterprise context.
	
	To support enduring enterprises, the Enterprise Architecture expands its
	role into overall strategy and governance. It must support what was
	presented immediately above, as well as support other enterprise issues
	such as handling third parties, impact analysis on mergers and
	acquisitions, etc.
	
	Specific areas of enabling an enduring enterprise that the DPBoK
	Standard may or may not address but are relevant and can be leveraged
	from Enterprise Architecture and TOGAF Standard guidance and experience
	include:
	
	-   Establishing additional feedback mechanisms for steering, managing
	    risk, and assuring performance at scale and ever-increasing time
	    horizons and increasingly complex ecosystems; for example,
	    governance, risk, security, and compliance
	
	-   Founding and maturing information management across the company
	
	-   Fostering an architecture-driven and portfolio management culture
	
	Specific areas of supporting strategy/portfolio/projects/solution
	delivery that the DPBoK Standard may or may not address but are relevant
	and can be leveraged from Enterprise Architecture and the TOGAF Standard
	guidance and experience include:
	
	-   Defining architecture as a competency area
	
	-   Defining concepts, quality levels, and implementation guidance for
	    architecture, digital strategy, and portfolio creation and
	    management
	
	-   Defining and establishing Agile Enterprise Architecture
	
	-   Implementing Enterprise Architecture and the TOGAF Standard
	    governance framework to support digital governance
	
	-   Providing architectural guidance that evolves data from information
	    into knowledge that provides value to the company and adapting the
	    trio to fulfill digital enterprise needs
	
	-   Providing portfolio support in the creation and connectedness
	    between portfolios
	
	-   Adapting an existing or new Enterprise Architecture capability to
	    support an Agile and digital organization
	
	-   Adapting Enterprise Architecture and the TOGAF Standard to fit its
	    delivery style into Agile approaches and digital product creation
	    and offerings
	
	-   Adapting Enterprise Architecture to support business strategies that
	    are digital, and providing the required capabilities to deliver the
	    digital offering, as well as supporting product and service
	    digitalization
	
snippet togaf_digital-technology-adoption_4.2.4_Ecosystem "4.2.4 Ecosystem"
	
	Organizations do not work in isolation; rather, they thrive in an
	ecosystem. An ecosystem typically includes customers, partners,
	suppliers, regulators, and other players. An ecosystem enhances
	awareness, partnerships, participation levels (PoC phase to full
	implementation), and community engagement for organizations. Enough
	adoption of complete solutions within the value chain brings trust and
	confidence. The availability of standards, an open-source development
	community, and protocols for the technology all form the basis for a
	comprehensive association within the ecosystem, which, for the
	organizations, lays the foundation for taking advantage of
	cross-dimensional synergies.
	
	The intention is to measure the awareness of other players and standards
	in the market. Another ingredient of this factor is to evaluate the
	relationship with probable partners in the ecosystem. The availability
	of community for open-source developments is a critical aspect.
	
	The presence of a resilient and growing “Ecosystem” enhances the
	organization’s decision support system in terms of implementation
	approach. It further enhances the organization’s “IT Capability”.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | Most of the bank’s technology     |
	|                                   | third parties (where they         |
	|                                   | outsource part of the development |
	|                                   | work for reducing cost) are not   |
	|                                   | familiar with new technologies.   |
	|                                   | Some of them have been trained    |
	|                                   | online and have certifications    |
	|                                   | but do not have hands-on          |
	|                                   | implementation knowledge. They    |
	|                                   | have, however, expressed          |
	|                                   | confidence in co-implementing the |
	|                                   | new technologies. The regulator   |
	|                                   | does not have inspectors who have |
	|                                   | the expertise to analyze the new  |
	|                                   | technology, but they are          |
	|                                   | supportive of the bank in         |
	|                                   | implementing it. The bank has     |
	|                                   | given assurances that they will   |
	|                                   | train the regulator               |
	|                                   | representatives on the            |
	|                                   | technology, post-implementation.  |
	|                                   |                                   |
	|                                   | What is your recommendation to    |
	|                                   | the bank?                         |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.4_Scope_the_Impacted_Teams "4.2.4 Scope the Impacted Teams"
	
	-   Identify the core – those who are most affected and achieve most
	    value from the work
	-   Identify the softly associated elements – those who will see change
	    to their capability and work with core units but are otherwise not
	    directly affected
	-   Identify the extended enterprise – those units outside the scoped
	    enterprise who will be affected in their EA
	-   Identify communities involved – those stakeholders who are outside
	    the scoped enterprise, and will be affected by the outcome delivered
	    by the EA Capability – grouped by communities of interest
	-   Identify governance involved – including legal frameworks and
	    geographies
	
	Planning horizons are discussed later, at which point this Guide will go
	into the details of how time impacts the depth and breadth of detailing.
	
	The level of detail regarding motivations, goals, success measures, and
	operational elements like toolset, inventory, data catalog, and solution
	provider should be scoped to meet the purpose of the EA Capability
	(Strategy, Portfolio, Projects, or Solution Delivery), and the planning
	horizon.
	
	If it is decided to follow the Balanced Scorecard method, it is
	preferable to have the financial perspective defined for the whole
	enterprise, although a customer perspective may differ by segment; i.e.,
	it can carry some of the common goals for all segments. Process and
	learning/development perspectives should be specific to the departments
	or divisions with common objectives for people maturity.
	
	As this Guide discusses the team delivering the EA Capability, it will
	deal with opportunities to pursue multiple capability architectures at
	the same time. As the transformation is executed via projects or
	programs, seams and glue within the enterprise will present themselves
	and parameters for trade-off decisions will be solidified. The process
	naturally becomes replicable and scalable.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.5_Architecture_Repository "4.2.5 Architecture Repository"
	
	Purpose
	
	The Architecture Repository acts as a holding area for all
	architecture-related projects within the enterprise. The repository
	allows projects to manage their deliverables, locate re-usable assets,
	and publish outputs to stakeholders and other interested parties.
	
	Content
	
	See 7. Architecture Repository for a detailed description of the content
	of an Architecture Repository.
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.5_Econometric_Model "4.2.5 Econometric Model"
	
	Econometrics provides empirical models to economic relations, applying
	observational and experimental methods. One of the areas of econometrics
	involves arriving at the right price for the products and services
	offered by the enterprise. For this Guide, discussions are limited to
	documenting how the enterprise defines economic value and cost of
	mitigating risks. Some of the sub-models that make up the econometric
	model include:
	
	-   Accounting Model: total cash accrued = sum of sources of income –
	    sum of all expenses
	
	-   Forecasting Model: the estimation of future impact of current
	    actions, with a given set of constrained variables or risks for
	    income and expense
	
	    Some of the risks the company would be handling are interest rate
	    fluctuations, currency exchange rate fluctuations, inflation, and
	    cost of raw materials. For example, a leading low-cost airline in
	    the US managed its operational cost by placing appropriate
	    investments in future fuel cost.
	
	-   Planning and Allocation: what are the trade-off criteria applied by
	    the enterprise to distribute its investments across the enterprise?
	
	    For example, an enterprise has identified that IT investments should
	    not be more than 3.5% of the enterprise’s total operating expense to
	    maintain its overall operational efficiency. This constraint forces
	    a trade-off between strategic and operational IT investments.
	
	When it comes to operational expenses and building awareness around
	optimizations, models like chargeback and showback can be used as
	needed. For example, a leading IT service management vendor suggests
	using a showback system as a necessary step in the path to adopting
	cloud services.
	
	Therefore, from an accounting perspective, the EA Capability team should
	be aware of:
	
	-   Ownership of the company – privately held versus publicly owned
	-   For-profit, not-for-profit, or governmental accounting principles
	-   Sources of funds for the enterprise or the team that the EA effort
	    is impacting
	-   Controls for spending the funds – for the enterprise, the impacted
	    team, and the EA Capability team
	-   How the spending on EA is accounted for in Operating Expenditure
	    (OPEX), cost of product development, and the Cost of Goods Sold
	    (COGS)
	
	Some of the other dimensions to document are how the enterprise
	generates revenue and profit. A few generic models are:
	
	-   Creating products using intellectual property, including leveraging
	    others’ products and services
	
	    For example, a paint manufacturer is creating a new product but uses
	    machinery and products created by others. The formula for the paint
	    is its intellectual property
	
	-   Buying, stocking, and reselling products made by other enterprises
	
	    For example, a distributor sources paint and painting supplies in
	    bulk and then distributes them to smaller businesses.
	
	-   Offering management, financial, legal, technical, or support
	    services with thorough understanding of other organizations or
	    industries
	
	    For example, business services organization providing logistics
	    consulting and implementation projects.
	
	There are other ways to look at the revenue model based on how the
	enterprise views itself – like commerce and retail, subscriptions and
	usage fees, licensing, auctions and bids, advertising, data,
	transactions, intermediation, and freemium. These views are variations
	of the first three models.
	
	It is possible that the enterprise may handle more than one such revenue
	generation model. Internally, any single division never has more than
	one revenue model. However, it is possible for one division to generate
	revenue from its intellectual property while other divisions may
	generate revenue by offering services in technology, general management,
	or project management domains. In such scenarios, understanding and
	separating by operating models will help define the right boundaries for
	the enterprise impacted by the EA Capability.
	
	Investment priorities and spending patterns for the EA Capability will
	depend on the appropriate revenue and accounting model of the sponsoring
	unit of the enterprise. As the recommendations are turned into projects
	or operational efforts, the business and economic model of the
	enterprise will play a huge part in prioritization and rollout. This
	Guide provides detailed insights while discussing the governance model
	and process model for the EA Capability.
	
snippet togaf_digital-technology-adoption_4.2.5_Governance_and_Compliance "4.2.5 Governance and Compliance"
	
	For the adoption of digital technology, an organization needs to have a
	rulebook for governance. With data becoming the central theme in
	technology, the impetus towards compliance cannot be discounted. A
	well-articulated governing body within the organization that has clear
	demarcation of accountability and ownership for activities is paramount.
	The governing mechanism must cater to the security (Confidentiality,
	Integrity, and Availability (CIA)) aspect of technology; the challenges
	tagged with technology are vital. Digital technologies often come with
	their own set of challenges; for instance, AI adoption needs to be
	governed holistically for ethical implications, transparency, fairness,
	trust, and legislation.
	
	From the assessment perspective, the intention is to measure the
	awareness and planning with “Governance and Compliance” procedures
	before the digital technology adoption. The need to have structured
	governance measures, agreements, and evolving compliance needs with
	partner ecosystems is vital for digital technology. The steps towards
	catering to privacy requirements with Personal Identifiable Information
	(PII) is another aspect requiring management attention.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The current technology governance |
	|                                   | framework focuses on ex           |
	|                                   | post-facto KPIs, including        |
	|                                   | downtime, patches applied, access |
	|                                   | violations and conflicts,         |
	|                                   | disaster recovery readiness, etc. |
	|                                   | Emerging technologies need        |
	|                                   | pre-emptive and proactive         |
	|                                   | monitoring of metrics, including  |
	|                                   | the efficiency of algorithms,     |
	|                                   | sustainability and scalability,   |
	|                                   | and iterative and changing test   |
	|                                   | results. There are also           |
	|                                   | requirements for compliance with  |
	|                                   | respect to PII, which can vary    |
	|                                   | from one geography to other.      |
	|                                   |                                   |
	|                                   | What is the journey that the bank |
	|                                   | needs to take to become proactive |
	|                                   | in its governance framework?      |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2.5_Need_More_Detail "4.2.5. Need More Detail?"
	
	The following subsections provide further detail:
	
	-   Section 4.3, “How to Apply TOGAF Principles per Context” summarizes
	    the relevant Enterprise Architecture and TOGAF principles per
	    context
	
	-   Section 4.4, “Enterprise Architecture Capabilities and Services”
	    summarizes the relevant Enterprise Architecture capabilities and
	    Enterprise Architecture services per context
	
	-   Section 4.5, “TOGAF Artifacts and Series Guides” summarizes the
	    relevant TOGAF ADM and TOGAF Series Guides per context
	
	And Appendix D, Rationalizing the TOGAF and DPBoK Standards further
	rationalizes the positive connections between the TOGAF Standard and the
	DPBoK Standard.
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.6_Accountability_Model_and_Decision_Model "4.2.6 Accountability Model and Decision Model"
	
	An accountability model provides a balance between the sponsorship for
	the EA Capability and the expectations set for the EA Capability. This
	understanding is key to performing trade-off decisions across the
	stakeholder community. For example, when a change is made in the
	Generally Accepted Accounting Principles (GAAP), and an expected date
	for compliance is set, the decision to adopt the change either on the
	expected date or earlier is jointly decided by the Chief Financial
	Officer (CFO) and Legal Counsel for the enterprise. Likewise, the
	decision to upgrade recommended security software on a specific machine
	is best decided jointly by the data center administrator and personnel
	from the information security team. The EA Capability team normally
	operates in between the layers mentioned in these examples.
	
	There is detailed management literature and research on this subject.
	Every enterprise has an accountability model and decision model, and a
	pattern to exercise this model.
	
	The existence of these models is often not apparent to those who are not
	observant. The key focus is to understand the empowerment, freedom,
	political, and financial support provided to different stakeholders, the
	Leader, and the EA Capability to navigate competing priorities.
	
	Depending upon the inclination of the enterprise, models like SCORE and
	RACI can be used to identify and document roles and accountability. The
	Project Management Institute (PMI) proposes a 2x2 matrix shown in Figure
	5, which accounts for expectations, interests, the role in EA, and the
	role in the EA Capability for various members within the enterprise.
	
	Documenting the accountability matrix reflects and informs key
	decision-makers on various business and architectural decisions. An
	effective approach is to ensure the role and accountability are
	identified to concerns, not the project. Different aspects of the
	project, or concerns, will have different accountability. It is
	important to define the organizational and decision-making boundaries,
	as the EA Capability will interact with various existing disciplines.
	
	[]
	
	Figure 5: Project Management Institute Influence Matrix[13]
	
	This may be the right time to consider who would be the right person to
	evaluate the effectiveness and impact provided by the EA Capability.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.6_Architecture_Requirements_Specification "4.2.6 Architecture Requirements Specification"
	
	Purpose
	
	The Architecture Requirements Specification provides a set of
	quantitative statements that outline what an implementation project must
	do in order to comply with the architecture. An Architecture
	Requirements Specification will typically form a major component of an
	implementation contract or contract for more detailed Architecture
	Definition.
	
	As mentioned above, the Architecture Requirements Specification is a
	companion to the Architecture Definition Document, with a complementary
	objective:
	
	-   The Architecture Definition Document provides a qualitative view of
	    the solution and aims to communicate the intent of the architect
	-   The Architecture Requirements Specification provides a quantitative
	    view of the solution, stating measurable criteria that must be met
	    during the implementation of the architecture
	
	Content
	
	Typical contents of an Architecture Requirements Specification are:
	
	-   Success measures
	-   Architecture requirements
	-   Business service contracts
	-   Application service contracts
	-   Implementation guidelines
	-   Implementation specifications
	-   Implementation standards
	-   Interoperability requirements
	-   IT Service Management requirements
	-   Constraints
	-   Assumptions
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.7_Architecture_Roadmap "4.2.7 Architecture Roadmap"
	
	Purpose
	
	The Architecture Roadmap lists individual work packages that will
	realize the Target Architecture and lays them out on a timeline to show
	progression from the Baseline Architecture to the Target Architecture.
	The Architecture Roadmap highlights individual work packages' business
	value at each stage. Transition Architectures necessary to effectively
	realize the Target Architecture are identified as intermediate steps.
	The Architecture Roadmap is incrementally developed throughout Phases E
	and F, and informed by readily identifiable roadmap components from
	Phase B, C, and D within the ADM.
	
	Content
	
	Typical contents of an Architecture Roadmap are:
	
	-   Work package portfolio:
	    -   Work package description (name, description, objectives,
	        deliverables)
	    -   Functional requirements
	    -   Dependencies
	    -   Relationship to opportunity
	    -   Relationship to Architecture Definition Document and
	        Architecture Requirements Specification
	    -   Business value
	-   Implementation Factor catalog, including:
	    -   Risks
	    -   Issues
	    -   Assumptions
	    -   Dependencies
	    -   Actions
	    -   Inputs
	-   Consolidated Gaps, Solutions, and Dependencies matrix, including:
	    -   Architecture domain
	    -   Gap
	    -   Potential solutions
	    -   Dependencies
	-   Any Transition Architectures
	-   Implementation recommendations:
	    -   Criteria measures of effectiveness of projects
	    -   Risks and issues
	    -   Solution Building Blocks
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2.7_Risk_Management_Model "4.2.7 Risk Management Model"
	
	Central to best practice Enterprise Risk Management (ERM) is a very
	precise definition of the term risk. Within the risk management
	profession, risk is understood to be the: “effect that uncertainty has
	on the achievement of business objectives”. EA is one of the key tools
	that can be employed to:
	
	-   Support best practice ERM
	-   Reduce organizational risk
	-   Improve sustainability and profitability
	
	Enterprises typically employ a formal or informal ERM framework to
	assess and manage risk at the enterprise level, increasing the
	visibility and transparency of risks to allow an enterprise’s management
	to make decisions on how to manage risk at an acceptable level for the
	enterprise. One of the essential steps to set up the EA Capability is to
	identify the risk management framework employed by the enterprise. The
	risk management model employed by the enterprise may not be apparent and
	might require some level of investigation.
	
	From the EA point of view, there is a need to identify the risk appetite
	of the enterprise. Risk is a complex area, and central to an effective
	EA Capability. Consider an automobile insurance provider that is exposed
	to anti-theft technology introduced by auto manufacturers. While
	accepting this new technology, the enterprise may face a reduction in
	auto theft, hence lower cost of claims, or it may not work, leaving the
	current exposure level as-is. It may choose to perform additional
	anti-theft research, or employ data exchange with law enforcement and
	its competitors to validate and mitigate the unknown impacts. Find the
	pattern that is used.
	
	For example, when the architecture roadmap includes adoption of a new
	technology or initiates a transformation effort is accepted for
	implementation, how does the enterprise approach and answer the
	following questions:
	
	-   Using the Innovation Adoption Model shown in Figure 6, where does
	    the enterprise fall in the bell curve?
	
	    It is possible that different parts of the enterprise may fall
	    differently in this picture. It is essential to identify and catalog
	    them.
	
	-   What is the deviation from projected costs that is considered
	    acceptable?
	
	    (For example, 10% for the first year plan, 25% for the second and
	    third years.)
	
	-   Which kinds and sizes of projects should go through additional
	    layers of governance?
	
	-   If a Strengths, Weaknesses, Opportunities, and Threats (SWOT)
	    analysis is performed by the enterprise, what are the threat
	    mitigation strategies and how are the efforts being quantified?
	
	-   Does the enterprise accept single-point failures such as vendor
	    lock-in and interest rate variations?
	
	-   How often does the enterprise review the risks and effectiveness of
	    mitigation efforts, and where in the enterprise are these addressed?
	
	[]
	
	Figure 6: Everett Roger's Innovation Adoption Model (aka Technology
	Diffusion Model)[14]
	
	If the ERM approach at the enterprise is not clear, it is important to
	initiate an effort to define one. The ISO 31000 Risk Management standard
	and The Open Group Guide: Integrating Risk and Security within a
	TOGAF^(®) Enterprise Architecture, a guide specifically developed by The
	Open Group Security Forum in collaboration with The SABSA Institute (see
	Referenced Documents), are starting points to do so. Through this
	chapter, the Leader has been advised to look at the broad enterprise
	context. Within the enterprise, the EA Capability will be heavily
	influenced by the context created by the financial accounting model,
	planning horizon, and EA principles.
	
	Understanding the enterprise’s purpose evokes key dimensions to
	consider. These agents specifically evoke the business rhythm and
	delivery schedule and value proposition guidelines for transformation
	efforts. They are critical agents to the design of the EA organization
	model and what kind of expectation the enterprise has for the EA
	Capability.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.8_Architecture_Vision "4.2.8 Architecture Vision"
	
	Purpose
	
	The Architecture Vision is created early on in the ADM cycle. It
	provides a summary of the changes to the enterprise that will accrue
	from successful deployment of the Target Architecture. The purpose of
	the Architecture Vision is to provide key stakeholders with a formally
	agreed outcome. Early agreement on the outcome enables the architects to
	focus on the detail necessary to validate feasibility. Providing an
	Architecture Vision also supports stakeholder communication by providing
	a summary version of the full Architecture Definition.
	
	Content
	
	Typical contents of an Architecture Vision are:
	
	-   Problem description:
	    -   Stakeholders and their concerns
	    -   List of issues/scenarios to be addressed
	-   Objective of the Statement of Architecture Work
	-   Summary views necessary for the Request for Architecture Work and
	    the Draft Business, Data, Application, and Technology Architectures
	    created; typically including:
	    -   Value Chain diagram
	    -   Solution Concept diagram
	-   Mapped requirements
	-   Reference to Draft Architecture Definition Document
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2.9_Business_Principles_Business_Goals_and_Business_Drivers "4.2.9 Business Principles, Business Goals, and Business Drivers"
	
	Purpose
	
	Business principles, business goals, and business drivers provide
	context for architecture work, by describing the needs and ways of
	working employed by the enterprise. Many factors that lie outside the
	consideration of architecture discipline may nevertheless have
	significant implications for the way that architecture is developed.
	
	Content
	
	The content and structure of business context for architecture is likely
	to vary considerably from one organization to the next.
	
snippet togaf_introduction_4_Definitions_4.20_Architecture_View "4.20 Architecture View"
	
	A representation of a system from the perspective of a related set of
	concerns.
	
	Note:
	    In some sections of this standard, the term "view" is used as a
	    synonym for "architecture view".
	
	See also 4.75 Stakeholder and 4.21 Architecture Viewpoint .
	
snippet togaf_introduction_4_Definitions_4.21_Architecture_Viewpoint "4.21 Architecture Viewpoint"
	
	A specification of the conventions for a particular kind of architecture
	view.
	
	Note:
	
	    An architecture viewpoint can also be seen as the definition or
	    schema for that kind of architecture view. It establishes the
	    conventions for constructing, interpreting, and using an
	    architecture view to address a specific concern (or set of concerns)
	    about a system-of-interest.
	
	    In some sections of this standard, the term "viewpoint" is used as a
	    synonym for "architecture viewpoint".
	
	See also B.25 Metaview .
	
snippet togaf_introduction_4_Definitions_4.22_Architecture_Vision "4.22 Architecture Vision"
	
	A succinct description of the Target Architecture that describes its
	business value and the changes to the enterprise that will result from
	its successful deployment. It serves as an aspirational vision and a
	boundary for detailed architecture development.
	
	Note:
	    Phase A (Architecture Vision) is described in the TOGAF Standard —
	    Architecture Development Method.
	
snippet togaf_introduction_4_Definitions_4.23_Artifact "4.23 Artifact"
	
	An architectural work product that describes an aspect of the
	architecture.
	
	See also 4.26 Building Block .
	
snippet togaf_introduction_4_Definitions_4.24_Baseline "4.24 Baseline"
	
	A specification that has been formally reviewed and agreed upon, that
	thereafter serves as the basis for further development or change and
	that can be changed only through formal change control procedures or a
	type of procedure such as configuration management.
	
snippet togaf_introduction_4_Definitions_4.25_Boundaryless_Information_Flow_TM "4.25 Boundaryless Information Flow^(TM)"
	
	A shorthand representation of "access to integrated information to
	support business process improvements" representing a desired state of
	an enterprise's infrastructure specific to the business needs of the
	organization.
	
	Note:
	    The need for Boundaryless Information Flow — a trademark of The Open
	    Group — is described in the TOGAF® Series Guide: The TOGAF
	    Integrated Information Infrastructure Reference Model (III-RM).
	
snippet togaf_introduction_4_Definitions_4.26_Building_Block "4.26 Building Block"
	
	A potentially re-usable component that can be combined with other
	building blocks to deliver architectures and solutions.
	
	Note:
	
	    Building blocks can be defined at various levels of detail,
	    depending on what stage of architecture development has been
	    reached. For instance, at an early stage, a building block can
	    simply consist of a name or an outline description. Later on, a
	    building block may be decomposed into multiple supporting building
	    blocks and may be accompanied by a full specification. Building
	    blocks can relate to "architectures" or "solutions".
	
	    Building blocks are described in the TOGAF Standard — Architecture
	    Content.
	
	See also 4.23 Artifact .
	
snippet togaf_introduction_4_Definitions_4.27_Business_Architecture "4.27 Business Architecture"
	
	A representation of holistic, multi-dimensional business views of:
	capabilities, end-to-end value delivery, information, and organizational
	structure; and the relationships among these business views and
	strategies, products, policies, processes, initiatives, and
	stakeholders.
	
	Note:
	
	    Business Architecture relates business elements to business goals
	    and elements of other domains.
	
	    Business Architecture is described in the TOGAF Standard —
	    Architecture Development Method.
	
snippet togaf_introduction_4_Definitions_4.28_Business_Capability "4.28 Business Capability"
	
	A particular ability that a business may possess or exchange to achieve
	a specific purpose.
	
snippet togaf_introduction_4_Definitions_4.29_Business_Function "4.29 Business Function"
	
	A collection of business behavior based on a chosen set of criteria,
	closely aligned to an organization.
	
snippet togaf_introduction_4_Definitions_4.2_Actor "4.2 Actor"
	
	A person, organization, or system that has one or more roles that
	initiates or interacts with activities; for example, a sales
	representative who travels to visit customers. Actors may be internal or
	external to an organization.
	
	Note:
	    In the automotive industry, an original equipment manufacturer would
	    be considered an actor by an automotive dealership that interacts
	    with its supply chain activities.
	
snippet togaf_applying-the-adm_4_Architecture_Partitioning_4.2_Applying_Classification_to_Create_Partitioned_Architectures "4.2 Applying Classification to Create Partitioned Architectures"
	
	For the reasons outlined in the previous section, it is valuable to
	partition and organize the Enterprise Continuum into a set of related
	solutions and architectures with:
	
	-   Manageable complexity for each individual architecture or solution
	-   Defined groupings
	-   Defined hierarchies and navigation structures
	-   Appropriate processes, roles, and responsibilities attached to each
	    grouping
	
	The following table shows how suitable classification criteria can be
	used to support partitioning of solutions:
	
	+-----------------------------------+-----------------------------------+
	| Characteristic                    | Usage to Support Solution         |
	|                                   | Partitioning                      |
	+:==================================+:==================================+
	| Subject Matter (Breadth)          | Solutions are naturally organized |
	|                                   | into groups to support            |
	|                                   | operational management and        |
	|                                   | control. Examples of solution     |
	|                                   | partitions according to subject   |
	|                                   | matter would include              |
	|                                   | applications, departments,        |
	|                                   | divisions, products, services,    |
	|                                   | service centers, sites, etc.      |
	|                                   |                                   |
	|                                   | Solution decomposition by subject |
	|                                   | matter is typically the           |
	|                                   | fundamental technique for         |
	|                                   | structuring both solutions and    |
	|                                   | the architectures that represent  |
	|                                   | them.                             |
	+-----------------------------------+-----------------------------------+
	| Time                              | Solution lifecycles are typically |
	|                                   | organized around a timeline,      |
	|                                   | which allows the impact of        |
	|                                   | solution development,             |
	|                                   | introduction, operation, and      |
	|                                   | retirement to be managed against  |
	|                                   | other business activity occurring |
	|                                   | in similar time periods.          |
	+-----------------------------------+-----------------------------------+
	| Maturity/Volatility               | The maturity and volatility of a  |
	|                                   | solution will typically impact    |
	|                                   | the speed of execution required   |
	|                                   | for the solution lifecycle.       |
	|                                   |                                   |
	|                                   | Additionally, volatility and      |
	|                                   | maturity will shape investment    |
	|                                   | priorities. Solutions existing in |
	|                                   | highly volatile environments may  |
	|                                   | be better suited to rapid, agile  |
	|                                   | development techniques.           |
	+-----------------------------------+-----------------------------------+
	
	The following table shows how each classification criteria can be used
	to support partitioning of architectures:
	
	+-----------------------------------+-----------------------------------+
	| Characteristic                    | Usage to Support Architecture     |
	|                                   | Partitioning                      |
	+:==================================+:==================================+
	| Depth                             | The level of detail within an     |
	|                                   | architecture has a strong         |
	|                                   | correlation to the stakeholder    |
	|                                   | groups that will be interested in |
	|                                   | the architecture.                 |
	|                                   |                                   |
	|                                   | Typically, less detailed          |
	|                                   | architectures will be of interest |
	|                                   | to executive stakeholders. As     |
	|                                   | architectures increase in detail, |
	|                                   | their relevance to implementation |
	|                                   | and operational personnel will    |
	|                                   | also increase.                    |
	+-----------------------------------+-----------------------------------+
	
	In practical terms, architecture discipline is used to support a number
	of different types of architecture that are used for different
	objectives. The classification criteria described above can be used in
	different ways to support the achievement of each objective.
	
	The following characteristics are generally not used to partition an
	Architecture Landscape:
	
	-   Architectures used to describe the Architecture Landscape are
	    generally not abstract
	-   Solution volatility generally prevents architectures from being
	    defined that are far in the future; volatility also reduces the
	    accuracy of historic architectures over time, as the organization
	    changes and adapts to new circumstances
	
	Using the criteria above, architectures can be grouped into partitions.
	
snippet togaf_adm-practitioners_4_Business_Cycle_4.2_Business_Cycle_Conclusion "4.2 Business Cycle Conclusion"
	
	The business cycle is one of the core business activities that an EA
	team must align to. It provides a common reference point that is central
	to how an organization plans, authorizes, and executes change.
	Performing process alignment and alignment to other Enterprise
	frameworks is one of the central activities of establishing an EA
	Capability. For a broader discussion of other alignments, see the
	TOGAF^(®) Leader’s Guide to Establishing and Evolving an EA Capability
	(see Referenced Documents). This Guide uses the business cycle as a
	simplification of the myriad of business activities that an EA team
	supports, to align with the practical work requirements of a
	Practitioner.
	
snippet togaf_master-data-management_4.2_C-MDM_Guidelines_for_an_Architecture_Vision_TOGAF_ADM_Phase_A "4.2 C-MDM Guidelines for an Architecture Vision (TOGAF ADM Phase A)"
	
	C-MDM projects are complex, impacting the scope of the entire entity
	with many actors to involve. So, it is imperative first to build a
	vision and to reach consensus among all concerned stakeholders at a high
	level. Table 4 shows the dimensions of this vision. This vision must be
	endorsed by an executive sponsor and/or the CEO.
	
	Table 4: Architecture Vision Dimensions
	
	+-----------------------------------+-----------------------------------+
	| []                                | FROM some data rules not          |
	|                                   | documented                        |
	| C-MDM Team                        |                                   |
	|                                   | TO one C-MDM team accountable for |
	|                                   | customer data                     |
	|                                   |                                   |
	|                                   | -   Build one polyvalent C-MDM    |
	|                                   |     team, with power to govern    |
	|                                   |     and decide                    |
	|                                   | -   Define and operate ownership  |
	|                                   |     and stewardship – make        |
	|                                   |     businesses aware of their     |
	|                                   |     (new) responsibilities around |
	|                                   |     the data and its quality      |
	|                                   | -   Define a value-added services |
	|                                   |     catalog of the team with      |
	|                                   |     clear SLAs                    |
	+-----------------------------------+-----------------------------------+
	| []                                | FROM multiple points of potential |
	|                                   | truth                             |
	| Single point of reputed truth     |                                   |
	| system                            | TO single point of truth for      |
	|                                   | customer data                     |
	|                                   |                                   |
	|                                   | -   Have an ambitious and shared  |
	|                                   |     single point of truth target  |
	|                                   |     for kernel customer data      |
	|                                   | -   Be opportunist – have a good  |
	|                                   |     vision of the information     |
	|                                   |     system, integrate             |
	|                                   |     C-MDM in planned project      |
	|                                   |     solutions when relevant or    |
	|                                   |     possible                      |
	|                                   | -   Take care of delivering       |
	|                                   |     business value to operational |
	|                                   |     processes in the first steps  |
	|                                   |     of the C-MDM program – the    |
	|                                   |     delivery of data quality must |
	|                                   |     solve business issues (such   |
	|                                   |     as mail, email not delivered, |
	|                                   |     customer consent not properly |
	|                                   |     managed, etc.)                |
	|                                   | -   C-MDM should save all         |
	|                                   |     instances of customer data    |
	|                                   |     and not just the current      |
	|                                   |     master version – some         |
	|                                   |     business usages may require   |
	|                                   |     them; as an example, date of  |
	|                                   |     birth is often used in        |
	|                                   |     pricing – in cases where the  |
	|                                   |     premium was calculated with a |
	|                                   |     wrong date, the wrong date    |
	|                                   |     should be kept                |
	+-----------------------------------+-----------------------------------+
	| [RÃ©sultat de recherche d]        | FROM doubts about customer data   |
	|                                   | quality and compliance            |
	| Data quality and trust measures   |                                   |
	|                                   | TO trust and accuracy measured    |
	|                                   | and improved continuously         |
	|                                   |                                   |
	|                                   | -   Measure data quality and      |
	|                                   |     business value over time      |
	|                                   |     (KPI, ROI) and encourage the  |
	|                                   |     business to define quality    |
	|                                   |     dashboards and business KPIs  |
	|                                   | -   Use external data, documents, |
	|                                   |     and evidence to improve       |
	|                                   |     quality (e.g., ID cards,      |
	|                                   |     external data sources from    |
	|                                   |     providers)                    |
	|                                   | -   Ensure that C-MDM improves    |
	|                                   |     the capability to meet risks  |
	|                                   |     and regulation requirements   |
	+-----------------------------------+-----------------------------------+
	| [RÃ©sultat de recherche d]        | FROM difficulties to be reactive  |
	|                                   | and proactive with customers      |
	| Business positive impacts         |                                   |
	| ensured, from payer to partner    | TO real partnerships and mutual   |
	|                                   | trust                             |
	|                                   |                                   |
	|                                   | -   Focus first on systems and    |
	|                                   |     people closest to the         |
	|                                   |     customer so they are well     |
	|                                   |     served (i.e., engagement)     |
	|                                   | -   Maintain continuous awareness |
	|                                   |     of operational and strategic  |
	|                                   |     business evolutions – this    |
	|                                   |     can change the priorities of  |
	|                                   |     the project                   |
	|                                   | -   Foresee the opportunity to    |
	|                                   |     integrate into the C-MDM      |
	|                                   |     approach an operational and   |
	|                                   |     usable C360 view and other    |
	|                                   |     value-added services          |
	+-----------------------------------+-----------------------------------+
	
	The vision should imply key C-MDM stakeholders.
	
	[]
	
	Figure 5: Architecture Vision Stakeholders
	
	Finally, a transversal vision of the C-MDM approach is a must-have. The
	best executive sponsor is the CEO, able to break organizational/line of
	business silos for the benefit of the customer.
	
snippet togaf_architecture-content_4_Architecture_Deliverables_4.2_Deliverable_Descriptions "4.2 Deliverable Descriptions"
	
	The following sections provide example descriptions of deliverables
	referenced in the ADM.
	
	Note that not all the content described here need be contained in a
	particular deliverable. Rather, it is recommended that external
	references be used where possible; for example, the strategic plans of a
	business should not be copied into a Request for Architecture Work, but
	rather the title of the strategic plans should be referenced.
	
	Also, it is not suggested that these descriptions should be followed to
	the letter. However, each element should be considered carefully;
	ignoring any input or output item may cause problems downstream.
	
snippet togaf_architecture-project-management_4.2_Detailed_Mapping_Description "4.2 Detailed Mapping Description"
	
	Figure 8 presents the results of the TOGAF ADM mapping into PRINCE2
	Project Management processes on a detailed level. The aim of this
	diagram is to present a detailed mapping, including all tasks from the
	TOGAF ADM Phase A (Architecture Vision) and the PRINCE2 “Starting up the
	project” and “Initiation” stages, along with deliverables. This section
	describes additional elements or changes to the high-level mapping that
	were included in the detailed mapping and therefore should be read along
	with the description of the high-level mapping.
	
snippet togaf_reference-models_digital-business-reference-model_4.2_Digital_Domain "4.2 Digital Domain"
	
snippet togaf_digital-technology-adoption_4.2_Impact_Factors_Description "4.2 Impact Factors Description"
	
snippet togaf_adm_4_B_Business_Architecture_4.2_Inputs "4.2 Inputs"
	
	This section defines the inputs to Phase B.
	
snippet togaf_reference-models_government-reference-model_4.2_Key_Drivers_for_Change "4.2 Key Drivers for Change"
	
	Several factors are driving fundamental change in the General Government
	and Local Services sector whereby the government will need to consider
	the points below.
	
	Manage Changing Expectations and Reputation
	
	This will be used to improve quality of service by procuring specialist
	personnel performing value-added activities, using knowledge-based
	infrastructure to enable accurate transaction processing, and tailoring
	services based on market segmentations.
	
	Other approaches undertaken to manage expectations include:
	
	-   Personalized Customer Experience by using data in CRM software to
	    evaluate user history: creation of a personalized digital profile by
	    using a centralized data hub will enable services to meet individual
	    expectations and improve response times
	-   Operational Innovation: provide service and support outside the
	    traditional channels 24/7, create data and knowledge-sharing
	    infrastructure, learn from customer data, and realign compensation
	    with customer satisfaction and retention
	-   Utilizing Skilled Associates to Manage Needs: implement/acquire a
	    standards-defined, intensive multi-disciplinary training curriculum
	    that includes:
	
	—  Formal taxpayer relations
	
	—  Service offerings
	
	—  Technology
	
	—  Proactive selling
	
	—  Taxpayer contact etiquette
	
	—  Cross-functional team skills to ensure the ability to backfill and
	provide appropriate coverage
	
	—  Performance shortfalls addressed with counseling and investment in
	further training
	
	Environment
	
	At a national and local level, governments should address the pressing
	crisis of climate change. Improvement of air quality, managing waste and
	recycling, promoting low transport emissions, and building green
	infrastructures are some of the actions towards mitigating climate
	change. These should also lead to cultural changes supporting both a
	better quality of life and climate resilience. Research and innovation
	are also important and will assist with these goals.
	
snippet togaf_business-architecture_value-streams_4.2_Mapping_Value_Streams_to_Business_Capabilities "4.2 Mapping Value Streams to Business Capabilities"
	
	The second example focuses on creating internal business value via the
	activity of recruiting employees to join the business. It provides a
	more detailed example of mapping value stream stages to business
	capabilities and performing a gap analysis.
	
	  ------------- ------------------------------------------------------------------------------------
	  Name          Recruit Employee
	  Description   The activities involved in identifying and hiring suitably qualified employees.
	  Stakeholder   A Hiring Manager looking to fill a specific position.
	  Value         A new employee with good fit for the job, hired rapidly, and working productively.
	  ------------- ------------------------------------------------------------------------------------
	
	How would a business determine whether this was an important value
	stream, worth the effort to model and apply to business decisions? It
	may result from a specific need or pain point that the business is
	currently suffering such as inefficiencies associated with disparate
	activities related to recruitment, or it may be part of a strategic
	assessment at an enterprise level to identify and document all of the
	core value streams for the company.
	
	Once the need to model a value stream has been identified, pull together
	the right business stakeholders and subject matter experts to map out a
	draft value stream. Identify the major activities or stages that deliver
	chunks of business value, but without specifying the underlying
	processes, roles, information, or technologies that are required to
	execute that stage. The value stream diagram describes the value stream
	stages that generate the desired business impact, independent of the
	business capabilities required to perform it or assessments on whether
	it is performing optimally in the current state.
	
	This first round of modeling may expose the fact that key experts who
	can cover the full, end-to-end value stream are missing from the room,
	so the modeling process will have to be done iteratively. As further
	refinement and alignment is achieved (usually with guidance from the
	Business Architect to ensure adherence to proven principles and rules),
	a value stream diagram such as the example shown in Figure 3 emerges:
	
	[]
	
	Figure 3: Recruit Employee Value Stream
	
	The next iteration involves the same experts developing clear
	definitions for each value stream stage, identifying the participating
	stakeholder(s) for each, and the value delivered at each stage (as shown
	in Table 2).
	
	Table 2: Recruit Employee Value Stream Stages
	
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Value     | De        | Part      | Entrance  | Exit      | Value     |
	| Stream    | scription | icipating | Criteria  | Criteria  | Items     |
	| Stage     |           | Sta       |           |           |           |
	|           |           | keholders |           |           |           |
	+===========+===========+===========+===========+===========+===========+
	| Define    | The act   | Hiring    | Staffing  | Re        | Time and  |
	| Position  | of        | Manager   | changes   | cruitment | expense   |
	|           | de        | HR        | i         | needs     | saved on  |
	|           | termining | Re        | dentified | i         | search    |
	|           | the need  | cruitment |           | dentified | for       |
	|           | for       | Lead      |           |           | c         |
	|           | staffing, |           |           |           | andidates |
	|           | id        |           |           |           |           |
	|           | entifying |           |           |           |           |
	|           | skills    |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | qualif    |           |           |           |           |
	|           | ications, |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | do        |           |           |           |           |
	|           | cumenting |           |           |           |           |
	|           | them.     |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Co        | The act   | Recruiter | Re        | Positions | High      |
	| mmunicate | of        |           | cruitment | comm      | l         |
	| Position  | adv       |           | needs     | uni-cated | ikelihood |
	|           | ertising, |           | i         |           | of        |
	|           | posting,  |           | dentified |           | finding   |
	|           | or        |           |           |           | qualified |
	|           | sending   |           |           |           | c         |
	|           | re        |           |           |           | andidates |
	|           | quisition |           |           |           |           |
	|           | in        |           |           |           |           |
	|           | formation |           |           |           |           |
	|           | to        |           |           |           |           |
	|           | available |           |           |           |           |
	|           | portals   |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | re        |           |           |           |           |
	|           | cruitment |           |           |           |           |
	|           | events.   |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Assess    | The act   | Hiring    | Positions | Qualified | Efficient |
	| Responses | of        | Manager   | comm      | responses | use of    |
	|           | r         | Recruiter | uni-cated | selected  | interview |
	|           | eceiving, |           |           |           | time and  |
	|           | logging,  |           |           |           | costs     |
	|           | dist      |           |           |           |           |
	|           | ributing, |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | scoring   |           |           |           |           |
	|           | candidate |           |           |           |           |
	|           | responses |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | a         |           |           |           |           |
	|           | dditional |           |           |           |           |
	|           | checks.   |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Interview | The act   | Hiring    | Qualified | Hiring    | Selection |
	| C         | of        | Manager   | responses | decision  | of the    |
	| andidates | comm      | Candidate | selected  |           | best      |
	|           | unicating | Employee  |           |           | employee  |
	|           | with      |           |           |           |           |
	|           | ca        |           |           |           |           |
	|           | ndidates, |           |           |           |           |
	|           | arranging |           |           |           |           |
	|           | t         |           |           |           |           |
	|           | ransport, |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | s         |           |           |           |           |
	|           | cheduling |           |           |           |           |
	|           | and       |           |           |           |           |
	|           | c         |           |           |           |           |
	|           | onducting |           |           |           |           |
	|           | in        |           |           |           |           |
	|           | terviews. |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	| Onboard   | The act   | Employee  | Hiring    | Employee  | P         |
	| Employee  | of making | HR        | decision  | onboarded | roductive |
	|           | an offer, | Security  |           |           | w         |
	|           | then      | F         |           |           | orkforce, |
	|           | t         | acilities |           |           | meeting   |
	|           | riggering | Finance   |           |           | business  |
	|           | the       | IT        |           |           | co        |
	|           | embedded  |           |           |           | mmitments |
	|           | value     |           |           |           |           |
	|           | stream    |           |           |           |           |
	|           | for all   |           |           |           |           |
	|           | a         |           |           |           |           |
	|           | ctivities |           |           |           |           |
	|           | involved  |           |           |           |           |
	|           | in        |           |           |           |           |
	|           | in        |           |           |           |           |
	|           | tegrating |           |           |           |           |
	|           | the       |           |           |           |           |
	|           | employee  |           |           |           |           |
	|           | into the  |           |           |           |           |
	|           | work      |           |           |           |           |
	|           | env       |           |           |           |           |
	|           | ironment. |           |           |           |           |
	+-----------+-----------+-----------+-----------+-----------+-----------+
	
	Finally, the group of experts (guided by the Business Architect) uses
	the company’s business capability model to map the enabling business
	capabilities to each value stream stage. The process involves focusing
	on each stage (in order), and then selecting the business capabilities
	that are most critical to enabling that stage. The level of detail, or
	how far down to go in the capability hierarchy, is driven by clarity on
	the specific capabilities in the company that contribute directly to
	supporting that stage and business value.
	
	If every level 2 capability within a level 1 (parent) capability has a
	direct role in enabling that stage, then the mapping only needs to show
	the level 1 entry. For example, under the Interview Candidates value
	stream stage, if the level 2 child capabilities under HR Management
	comprise the complete set, then showing the level 1 capability is
	sufficient. As shown in Figure 4, if only certain level 2 capabilities
	are included (or even lower levels), then each of those lower levels
	needs to be shown explicitly.
	
	[]
	
	Figure 4: Cross-Mapping Value Stream Stages to Business Capabilities
	
	Note that most of these business capabilities are supporting
	capabilities, in the nomenclature of the three tiers introduced in the
	TOGAF^(®) Series Guide to Business Capabilities. They focus on the
	ability to manage key functions inside the business (in contrast to
	market customer-facing capabilities or strategic planning capabilities).
	Value streams relating to products or services sold by the business
	(such as the Acquire Retail Product value stream used in the earlier
	example) will typically map to more capabilities in the other tiers.
	
snippet togaf_metadata-management_4.2_Metadata_Management_Guidelines_for_a_Business_Architecture_ADM_Phase_B "4.2 Metadata Management Guidelines for a Business Architecture (ADM Phase B)"
	
	Metadata is available in multiple sources within an organization (see
	Figure 3). The main challenge is to bring together different kinds of
	metadata, from different communities, with different processes and
	lifecycles, in order to achieve specific business goals such as data
	compliance, data quality monitoring, and data accessibility.
	
	[]
	
	(Metadata domains have been harvested from use-cases and applied to the
	context of this document.)
	
	Figure 3: Metadata Sources Illustration
	
	Our recommendation is to engage in a step-by-step progressive approach
	to build the metadata documentation rather than attempt to document all
	the assets identified in the existing metadata sources at the same time.
	
snippet togaf_guides_agile-sprints_4.2_Phases_B_C_D_and_E "4.2 Phases B, C, D, and E"
	
	A common way of connecting the business architects with solution teams
	across Phases B, C, D (ABBs), and E (SBBs solution part) is to ensure
	that each MVA will give value to the stakeholders (i.e., customers). A
	common way is to create slices (partitions) across Phases B to E. Each
	MVA (i.e., slice) will be used by the Agile solution teams to create
	solutions. It is vital that the business, architecture, and solution
	teams collaborate in creating the MVA and MVBD to ensure common
	understanding and enable business value. There can be parallel teams
	creating both MVAs and solutions. The TOGAF Standard does not state that
	you have to carry out Phases B to E in sequence; you can iterate across
	these phases in ways that fit your project and organization.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.2_Responsibilities "4.2 Responsibilities"
	
	The Architecture Board is typically made responsible, and accountable,
	for achieving some or all of the following goals:
	
	-   Providing the basis for all decision-making with regard to the
	    architectures
	-   Consistency between sub-architectures
	-   Establishing targets for re-use of components
	-   Flexibility of the Enterprise Architecture:
	    -   To meet changing business needs
	    -   To leverage new technologies
	-   Enforcement of Architecture Compliance
	-   Improving the maturity level of architecture discipline within the
	    organization
	-   Ensuring that the discipline of architecture-based development is
	    adopted
	-   Supporting a visible escalation capability for out-of-bounds
	    decisions
	
	Further responsibilities from an operational perspective should include:
	
	-   All aspects of monitoring and control of the Architecture Contract
	-   Meeting on a regular basis
	-   Ensuring the effective and consistent management and implementation
	    of the architectures
	-   Resolving ambiguities, issues, or conflicts that have been escalated
	-   Providing advice, guidance, and information
	-   Ensuring compliance with the architectures, and granting
	    dispensations that are in keeping with the technology strategy and
	    objectives
	-   Considering policy (schedule, SLAs, etc.) changes where similar
	    dispensations are requested and granted; e.g., new form of service
	    requirement
	-   Ensuring that all information relevant to the implementation of the
	    Architecture Contract is published under controlled conditions and
	    made available to authorized parties
	-   Validation of reported service levels, cost savings, etc.
	
	From a governance perspective, the Architecture Board is also
	responsible for:
	
	-   The production of usable governance material and activities
	-   Providing a mechanism for the formal acceptance and approval of
	    architecture through consensus and authorized publication
	-   Providing a fundamental control mechanism for ensuring the effective
	    implementation of the architecture
	-   Establishing and maintaining the link between the implementation of
	    the architecture, the architectural strategy and objectives embodied
	    in the Enterprise Architecture, and the strategic objectives of the
	    business
	-   Identifying divergence from the architecture and planning activities
	    for realignment through dispensations or policy updates
	
snippet togaf_adm-techniques_4_Architecture_Patterns_4.2_Some_Pattern_Resources "4.2 Some Pattern Resources"
	
	-   The Patterns Home Page (refer to hillside.net/patterns) hosted by
	    the Hillside Group provides information about patterns, links to
	    online patterns, papers, and books dealing with patterns, and
	    patterns-related mailing lists
	-   The Patterns-Discussion FAQ (refer to
	    http://purl.org/theopengroup/pd-FAQ) maintained by Doug Lea provides
	    a very thorough and highly readable FAQ about patterns
	-   Patterns and Software: Essential Concepts and Terminology by Brad
	    Appleton (refer to www.bradapp.com/docs/patterns-intro.html)
	    provides another thorough and readable account of the patterns field
	-   The Service-Oriented Architecture (SOA) Patterns community website
	    (refer to www.soapatterns.org/), dedicated to the ongoing
	    development and expansion of the SOA design pattern catalog
	-   The Cloud Computing Design Patterns community website (refer to
	    www.cloudpatterns.org)
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.2_The_DPBoK_Standard "4.2. The DPBoK Standard"
	
	The DPBoK Standard identifies four contexts of organizational evolution
	toward a digital enterprise:
	
	-   Context I: Individual/Founder
	
	-   Context II: Team
	
	-   Context III: Team of Teams
	
	-   Context IV: Enduring Enterprise
	
	The DPBoK Standard presents these contexts as levels, where the
	enterprise moves from an earlier context to the next level of success.
	This is described as an emergence model where only the knowledge and
	activity essential to the level is presented, with enough foreshadowing,
	to prepare for the transition to the next level of emergence. It is our
	strategy to support this emergence model with Enterprise Architecture
	through our peek-ahead strategy. So, not only does the Enterprise
	Architect support the specific context, but also considers the next
	level and informs the Digital Practitioners of ways to position
	themselves to evolve. At the higher levels of the emergence model, the
	Enterprise Architect can play an essential primary role in enabling
	cross-team communication without adding to the cognitive load of the
	individual teams. In addition, the Enterprise Architects can ensure that
	the risks are clearly identified and communicated so that decisions can
	be made with an appropriate understanding of potential problems and
	difficulties.
	
	Each of these contexts is described below in separate sections and for
	each the role of Enterprise Architecture is summarized along with a list
	of candidate Enterprise Architect services which might be leveraged by
	the Digital Practitioner to support their efforts.
	
snippet togaf_architecture-skills-framework_4.2_TOGAF_Roles "4.2 TOGAF Roles"
	
	A typical architecture team undertaking the development of an Enterprise
	Architecture as described in the TOGAF Standard would comprise the
	following roles:
	
	-   Architecture Board Members
	-   Architecture Sponsor
	-   Architecture Manager
	-   Architects for:
	
	—  Enterprise Architecture (which for the purpose of the tables below
	and in Chapter 5 can be considered as a superset of Business, Data,
	Application, and Technology Architecture)
	
	—  Business Architecture
	
	—  Data Architecture
	
	—  Application Architecture
	
	—  Technology Architecture
	
	-   Program and/or Project Managers
	-   IT Designer
	-   Solution Architect
	-   And many others …
	
	Solution Architecture is the practice of defining and describing an
	architecture (all landscapes) system that is delivered in the context of
	a specific solution.
	
	The roles and responsibilities of a Solution Architecture are to:
	
	-   Conceptualize technical solutions to complex problems and maximize
	    benefit to the IT system investments
	-   Verify stability, interoperability, portability, security, or
	    scalability of the system architecture
	-   Collaborate with stakeholders to gain organizational commitments for
	    all process, systems, and application plans
	-   Communicate project information through presentations, technical
	    reports, or white papers
	-   Evaluate the existing operating environment to determine
	    effectiveness and suggest changes to meet organizational
	    requirements along with identification of redundant/ineffective
	    systems
	-   Evaluate and guide selection of technologies required to complete
	    those plans
	
	The tables below and in Chapter 5 show, for each of these roles, the
	skills required and the desirable level of proficiency in each skill.
	
	Of all the roles listed above, the one that needs particularly detailed
	analysis and definition is of course the central role of Enterprise
	Architect. “Enterprise Architecture” and “Enterprise Architect” are
	terms that are very widely used but not consistently defined, denoting a
	variety of practices and skills applied in a variety of architecture
	domains (see also Chapter 6). There is often confusion between the role
	of an architect and that of a designer or builder. Many of the skills
	required by an Enterprise Architect are also required by the designer,
	who delivers the solutions. While their skills are complementary, those
	of the designer are primarily technology-focused and translate the
	architecture into deliverable components.
	
	The final subsection below therefore explores in some detail the generic
	characteristics of the role of Enterprise Architect, and the key skill
	requirements, whatever the particular architecture domain (Enterprise
	Architecture, Business Architecture, Data Architecture, Application
	Architecture, Technology Architecture, etc.).
	
snippet togaf_guides_index_4.2_Transition_Architectures "4.2. Transition Architectures"
	
	[Partitions]
	
	Figure 3. Transition Architectures
	
	A Transition Architecture is a formal description of one state of the
	architecture at an architecturally significant point in time (see Figure
	3), usually including a number of capability increments. It describes
	the roadmap to the desired outcome and ensures the stability of the
	complete system after its implementation. In Agile, the capability
	increments are usually implemented using sprints. Transition
	Architectures also provide a way of managing risk by helping to
	understand the incremental states of delivery. Transition Architectures
	are related to releases of business value to the stakeholders.
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.2_What_is_the_Enterprises_Strategic_Position_Approach_and_Environment "4.2 What is the Enterprise’s Strategic Position, Approach, and Environment?"
	
	Structuring the EA Capability requires an understanding of how the
	enterprise works. To play in the market context, the enterprise defines
	how it competes and serves customers in its market – also known as the
	strategic statement. Exploring the enterprise context and the strategic
	position is done by understanding the following:
	
	-   Business Model
	-   Operating Model
	-   Organization Model
	-   Econometric Model
	-   Accountability Model
	-   Risk Management Model
	
	Even when a strategy statement is available, the spirit and intent can
	be better understood by exploring these models. Development of the
	strategy for the enterprise rests with the Executive Board, the Chief
	Executive Officer (CEO), or the Chairman. The EA Capability team or its
	Leader may be asked to facilitate the strategy development session. The
	EA Capability Leader or the EA Capability team should not create or own
	the strategy statement of the enterprise. When an explicit strategy
	statement is not available, explore the models presented below to
	understand whether the enterprise is operating under implicit
	interpretation. When the strategy is not stated explicitly or
	implicitly, it is upon the EA Capability Leader to request the Executive
	Board, CEO, or the Chairman to define the strategy.
	
	﻿
snippet togaf_adm_4_B_Business_Architecture_4.3.1.1_Determine_Overall_Modeling_Process "4.3.1.1 Determine Overall Modeling Process"
	
	Business modeling and strategy assessments are effective techniques for
	framing the target state of an organization's Business Architecture (see
	3.3.4 Evaluate Capabilities). The output from that activity is then used
	to articulate the business capabilities, organizational structure, and
	value streams required to close gaps between the current and target
	state. As addressed in 3.5 Approach , the frameworks for these maps may
	already exist and should be leveraged, now using them to characterize
	gaps and better map business value to achieve the Target Business
	Architecture.
	
	For each viewpoint, select the models needed to support the specific
	view required, using the selected tool or method.
	
	Ensure that all stakeholder concerns are covered. If they are not,
	create new models to address concerns not covered, or augment existing
	models (see 4.5.7 Applying Modeling Techniques). Business scenarios are
	a useful technique to discover and document business requirements, and
	may be used iteratively, at different levels of detail in the
	hierarchical decomposition of the Business Architecture. Business
	scenarios are described in the TOGAF® Series Guide: Business Scenarios.
	
	The techniques described in 4.5 Approach can be utilized to
	progressively decompose a business:
	
	-   Business Capability Mapping: identifies, categorizes, and decomposes
	    the business capabilities required for the business to have the
	    ability to deliver value to one or more stakeholders
	
	-   Information Mapping: collecting the information concepts and their
	    relationships that matter most to the business
	
	-   Organization Mapping: a representation of the organizational
	    structure of the business (including third-party domains), depicting
	    business units, the decomposition of those units into lower-level
	    functions, and organizational relationships (unit-to-unit and
	    mapping to business capabilities, locations, and other attributes)
	
	-   Process Modeling: the activity of articulating business processes of
	    an enterprise, to enable analysis and improvement
	
	-   Structured Analysis: identifies the key business capabilities within
	    the scope of the architecture, and maps those capabilities onto
	    business functions and organizational units within the business
	
	-   Use-case Analysis: a technique used to identify the requirements of
	    a system or task to be completed, from a user's perspective
	
	-   Value Stream Mapping: the end-to-end breakdown of activities that an
	    organization performs to create the value being exchanged with
	    stakeholders
	
	    Value stream maps illustrate how an organization delivers value and
	    are in the context of a specific set of stakeholders, and leverage
	    business capabilities in order to create stakeholder value and align
	    to other aspects of the Target Business Architecture.
	
	The level and rigor of decomposition needed varies from enterprise to
	enterprise, as well as within an enterprise, and the architect should
	consider the enterprise's goals, objectives, scope, and purpose of the
	Enterprise Architecture effort to determine the level of decomposition.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.1.2_Identify_Required_Catalogs_of_Business_Building_Blocks "4.3.1.2 Identify Required Catalogs of Business Building Blocks"
	
	Catalogs capture inventories of the core assets of the business.
	Catalogs are hierarchical in nature and capture the decomposition of a
	building block and also decompositions across related building blocks
	(e.g., organization/actor).
	
	Catalogs form the raw material for development of matrices and views and
	also act as a key resource for managing the business and IT capability.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of catalogs which should be considered for development
	within a Business Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.1.3_Identify_Required_Matrices "4.3.1.3 Identify Required Matrices"
	
	Matrices show the core relationships between related model entities.
	
	Matrices form the raw material for development of views and also act as
	a key resource for impact assessment, carried out as a part of gap
	analysis.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of matrices which should be considered for development
	within a Business Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.1.4_Identify_Required_Diagrams "4.3.1.4 Identify Required Diagrams"
	
	Diagrams present the Business Architecture information from a set of
	different perspectives (viewpoints) according to the requirements of the
	stakeholders.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of diagrams which should be considered for development
	within a Business Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.1.5_Identify_Types_of_Requirement_to_be_Collected "4.3.1.5 Identify Types of Requirement to be Collected"
	
	Once the Business Architecture catalogs, matrices, and diagrams have
	been developed, architecture modeling is completed by formalizing the
	business-focused requirements for implementing the Target Architecture.
	
	These requirements may:
	
	-   Relate to the business domain
	-   Provide requirements input into the Data, Application, and
	    Technology Architectures
	-   Provide detailed guidance to be reflected during design and
	    implementation to ensure that the solution addresses the original
	    architecture requirements
	
	Within this step, the architect should identify requirements that should
	be met by the architecture (see 13.5.2 Requirements Development).
	
	In many cases, the Architecture Definition will not be intended to give
	detailed or comprehensive requirements for a solution (as these can be
	better addressed through general requirements management discipline).
	The expected scope of requirements content should be established during
	the Architecture Vision phase and documented in the approved Statement
	of Architecture Work.
	
	Any requirement, or change in requirement, that is outside of the scope
	defined in the Statement of Architecture Work must be submitted to the
	Requirements Repository for management through the governed Requirements
	Management process.
	
snippet togaf_master-data-management_4.3.1_Business_Principles "4.3.1 Business Principles"
	
	  Business Principle ID   Principle Statement
	  ----------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  P_BUSINESS_001          The C-MDM team is named and responsible for the customer data. This team has the power to decide about customer data (e.g., merge rules and process, stewardship, ownership) and to organize the dedicated governance with business and IT stakeholders.
	  P_BUSINESS_002          The centricity of the C-MDM capability, both in the business scope and in the information system, requires high-level knowledge and expertise in multiple domains: lines of business, IT, data management. Those skills must be covered by the C-MDM team.
	  P_BUSINESS_003          A well-defined value-added services catalog of the C-MDM team should exist with related SLAs.
	  P_BUSINESS_004          The C-MDM team clearly identifies external data as a potential lever to improve de-duplication and data quality services, and external data market analysis is done on a regular basis.
	  P_BUSINESS_005          The C-MDM team should encourage use of documents and evidence in the data stewardship processes to improve data quality, when possible (e.g., ID cards, bills, etc.).
	  P_BUSINESS_006          Customer data quality indicators are defined, produced, and shared by the C-MDM team.
	  P_BUSINESS_007          C-MDM capability business value indicators are defined, produced, and shared by the C-MDM team.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.3.1_Enterprise_Architecture_Principles_Individual_Founder "4.3.1. Enterprise Architecture Principles: Individual/Founder"
	
	For each of the TOGAF principles, rationales, and implications given
	here, the individual/founder should assess the specific scenario for the
	following subjects and seek out Enterprise Architecture support when a
	particular subject is in play.
	
	Principle 2: Maximize Benefit to the Enterprise
	
	Decisions are made to provide maximum benefit to the enterprise as a
	whole.
	
	-   Rationale
	
	    This principle embodies “service above self”. Decisions made from an
	    enterprise-wide perspective have greater long-term value than
	    decisions made from any particular organizational perspective.
	
	    Maximum Return on Investment (ROI) requires information management
	    decisions to adhere to enterprise-wide drivers and priorities. No
	    group will detract from the benefit of the whole. However, this
	    principle will not preclude any group from getting its job done.
	
	    Principle 2 should be written on the heart of every founder – “How
	    do I maximize the value of my enterprise?”, whether this is someone
	    working on an incubator “enterprise” in a larger organization, the
	    head of a digital team that has just been spun out of a parent, or
	    the classic two people in a garage.
	
	-   Implications for the Digital Enterprise
	
	    To support this principle in this context the Enterprise Architect
	    and Enterprise Architecture must become enablers for
	    decision-making, giving consideration to the following:
	
	    -   Supporting planning and information management decisions with an
	        analysis of quality enterprise information
	
	    -   Communication of the greater benefit to the entire enterprise in
	        contrast to local benefits when needed
	
	    -   Supporting application development priority-setting from an
	        enterprise perspective
	
	    -   Applications component sharing across organizational boundaries
	
	    -   Governance
	
	Principle 15: Data Security
	
	Data is protected from unauthorized use and disclosure. In addition to
	the traditional aspects of national security classification, this
	includes, but is not limited to, the protection of pre-decisional,
	sensitive, source selection-sensitive, and proprietary information.
	
	-   Rationale
	
	    Open sharing of information and the release of information via
	    relevant legislation must be balanced against the need to restrict
	    the availability of classified, proprietary, and sensitive
	    information. Existing laws and regulations require the safeguarding
	    of national security and the privacy of data, while permitting free
	    and open access. Pre-decisional (work-in-progress, not yet
	    authorized for release) information must be protected to avoid
	    unwarranted speculation, misinterpretation, and inappropriate use.
	
	-   Implications for the Digital Enterprise
	
	    The Enterprise Architect can support the assessment of this scenario
	    and help with mitigation. The Enterprise Architect can also support
	    decisions regarding the digital product architecture to avoid
	    issues.
	
	    -   The aggregation of data may generate data security issues
	
	        The aggregation of unclassified or insensitive data can result
	        in classified or sensitive data that may put the organization at
	        risk.
	
	    -   The storage-use of classified or sensitive data requires special
	        consideration of the digital product
	
	Principle 17: Ease-of-Use
	
	Applications are easy to use. The underlying technology is transparent
	to users, so they can concentrate on tasks at hand.
	
	-   Rationale
	
	    The more a user has to understand the underlying technology, the
	    less productive that user is. Ease-of-use is a positive incentive
	    for the use of applications. It encourages users to work within the
	    integrated information environment instead of developing isolated
	    systems to accomplish the task outside of the enterprise’s
	    integrated information environment. Most of the knowledge required
	    to operate one system will be similar to others. Training is kept to
	    a minimum, and the risk of using a system improperly is low. Using
	    an application should be as intuitive as driving a different car.
	
	-   Implications for the Digital Enterprise
	
	    The Enterprise Architect should have a good understanding of the
	    requirements for and best practices to meet common look-and-feel
	    requirements.
	
	    -   Common look-and-feel requirements
	
	        Applications may be required to have a common “look-and-feel”
	        and support ergonomic requirements; hence, the common
	        look-and-feel standard must be designed and usability test
	        criteria must be developed.
	
	    -   User interface complexity
	
	        Guidelines for user interfaces should not be constrained by
	        narrow assumptions about user location, language, systems
	        training, or physical capability. Factors such as linguistics,
	        customer physical infirmities (visual acuity, ability to use
	        keyboard/mouse), and proficiency in the use of technology have
	        broad ramifications in determining the ease-of-use of an
	        application.
	
	Principle 19: Responsive Change Management
	
	Changes to the enterprise information environment are implemented in a
	timely manner.
	
	-   Rationale
	
	    If people are to be expected to work within the enterprise
	    information environment, that information environment must be
	    responsive to their needs.
	
	-   Implications for the Digital Enterprise
	
	    In the digital environment the Enterprise Architect can be an
	    invaluable asset in helping to ensure that pitfalls to change can be
	    addressed up front. The Enterprise Architect has a more holistic
	    view and knowledge base so can be consulted on many of these issues
	    to ensure responsive change management if needed.
	
	    -   Processes for managing and implementing change must be developed
	        that do not create delays
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.3.1_Financial_Accounting_Model "4.3.1 Financial Accounting Model"
	
	A Leader must identify and document the financial accounting model for
	the enterprise. The financial accounting model supports the business
	model and econometric model. There are two purposes to understanding the
	accounting model for the enterprise. The first is that it is the model
	that supports the economic purpose of the enterprise. Second, the
	accounting model helps to understand how the EA Capability is viewed –
	cost versus revenue function, Capital Expenditure (CAPEX) versus Cost of
	Goods Sold (COGS) versus Operating Expenditure (OPEX), or customer
	acquisition function versus operational efficiency (risk mitigation or
	capacity management) function.
	
	Two major challenges for EA Leaders is to identify whether their work is
	considered as CAPEX and OPEX, and to find a way to balance the alignment
	of CAPEX and OPEX initiatives with the target architecture. The EA
	roadmap components will include both new building blocks as well as
	existing building blocks that have to be modified or decommissioned. The
	roadmap should include discrete steps to retrain, reallocate, or rehire
	resources for modification and decommissioning.
	
	Some of the data points that can be derived from the accounting model
	are:
	
	-   An understanding of legal hierarchies – where credit-debit happens
	    at the transactional level and where profits are accrued
	-   Silos and distribution of decision-makers and influencers
	-   Value measurement criteria for the EA Capability
	-   Investment amortization options while recommending projects
	-   Development of CAPEX versus OPEX, Return On Investment (ROI), Net
	    Present Value (NPV), or Internal Rate of Return (IRR)-based
	    trade-off guidelines
	
	This list can keep growing depending on the enterprise’s design,
	approach, and the depth of understanding of the team providing the EA
	Capability.
	
	Any enterprise is likely to have more than one financial accounting
	model, to suit the geopolitical conditions of each of the locations.
	Identify the model, understand it, and leverage PMO and finance teams to
	formulate appropriate business case and ROI models.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.1_Select_Reference_Models_Viewpoints_and_Tools "4.3.1 Select Reference Models, Viewpoints, and Tools"
	
	Select relevant Business Architecture resources (reference models,
	patterns, etc.) from the Architecture Repository, on the basis of the
	business drivers and stakeholder concerns.
	
	Select relevant Business Architecture viewpoints (e.g., operations,
	management, financial); i.e., those that will enable the architect to
	demonstrate how the stakeholder concerns are being addressed in the
	Business Architecture.
	
	Identify appropriate tools and techniques to be used for capture,
	modeling, and analysis, in association with the selected viewpoints.
	Depending on the degree of sophistication warranted, these may comprise
	simple documents or spreadsheets, or more sophisticated modeling tools
	and techniques, such as activity models, business process models,
	use-case models, etc.
	
snippet togaf_reference-models_digital-business-reference-model_4.3.1_Strategic_Context "4.3.1 Strategic Context"
	
	The Strategic Context element focuses on the environmental factors of
	the business that may impact its success and sustainability. It
	describes the external factors – such as the competitors, regulation,
	and customers for an organization – in addition to the overall strategy
	possessed by the organization for market positioning.
	
	The following need to be considered to determine the possible
	constraints, opportunities, and threats for the business:
	
	-   Legislative and Regulatory Framework
	
	The set of criteria to which the organization must adhere in order to
	assure that the value proposition is delivered using an acceptable
	standard of business practice. This is intended to describe the
	constraints that prevent an organization from acting in negative,
	destructive, or inappropriate ways and the corresponding opportunities
	that can be exploited from a differentiated compliance position.
	Analysis within this factor involves the identification of constraints
	and their potential implications for the organization in a way that
	supports risk-based decision-making on what constitutes acceptable and
	unacceptable behavior.
	
	-   Market Trends and Consumer Drivers
	
	This factor examines the overall industry value chain within which the
	organization operates. Considerations within this factor could include
	the relationships between suppliers and providers within the value
	chain, regulatory constraints, tax regimes, international accords, the
	value of the market, how costs and value are distributed across the
	value chain, industry trends, relationships with adjacent industries,
	etc.
	
	-   Industry Landscape and Competitors
	
	This factor examines organizations that provide similar, competing
	capabilities. Competitor analysis typically focuses on understanding the
	value proposition of competing organizations and measuring comparative
	quality and business performance attributes, such as customer
	satisfaction, customer retention, market share, and profitability.
	
	-   Business Influencers and Customers
	
	Influencers that can hinder or assist business operations. These
	influencers provide opportunities that may help the enterprise operate,
	as well as threats that may thwart its progress. Influencers also
	represent strengths from within that the enterprise could exploit, or
	weaknesses for which it should compensate. The current and potential
	customers of the enterprise may also influence the future direction and
	culture of the enterprise.
	
	-   Investment and Stakeholder Value Creation Framework
	
	The value shareholders are able to obtain through investment in a
	company. The primary goal for a company is to increase shareholder
	value. Shareholder value is typically a composite of operating profit,
	assets, and perception of future prospects. The mix of value components
	can be very different for different organizations and consequently it is
	critically important to understand what shareholders value about a
	company before attempting to change.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.3.1_Triggers "4.3.1 Triggers"
	
	One or more of the following occurrences typically triggers the
	establishment of an Architecture Board:
	
	-   New CIO
	-   Merger or acquisition
	-   Organizational restructuring
	-   Consideration of a move to newer forms of computing
	-   Recognition that IT is poorly aligned to business
	-   Desire to achieve competitive advantage via technology
	-   Creation of an Enterprise Architecture program
	-   Significant business change or rapid growth
	-   Requirement for complex, cross-functional solutions
	
	In many companies, the executive sponsor of the initial architecture
	effort is the CIO (or other senior executive). However, to gain broad
	corporate support, a sponsoring body has more influence. This sponsoring
	body is here called an Architecture Board, but the title is not
	important. Whatever the name, it is the executive-level group
	responsible for the review and maintenance of the strategic architecture
	and all of its sub-architectures.
	
	The Architecture Board is the sponsor of the architecture within the
	enterprise, but the Architecture Board itself needs an executive sponsor
	from the highest level of the corporation. This commitment must span the
	planning process and continue into the maintenance phase of the
	architecture project. In many companies that fail in an architecture
	planning effort, there is a notable lack of executive participation and
	encouragement for the project.
	
	A frequently overlooked source of Architecture Board members is the
	company's Board of Directors. These individuals invariably have diverse
	knowledge about the business and its competition. Because they have a
	significant impact on the business vision and objectives, they may be
	successful in validating the alignment of IT strategies to business
	objectives.
	
snippet togaf_digital-technology-adoption_4.3.1_Value_Realization "4.3.1 Value Realization"
	
	Value realization in terms of time, customer acquisition, and
	quantification of the business benefits derived from the adoption of
	digital technology underscores future pathways. It is critical to
	measure value realization and establish the mechanisms for measuring it
	early in the lifecycle.
	
	Organizations often face challenges in quantifying the Return on
	Investment (ROI) attributable to digital technology. It is paramount to
	use the right assumptions for calculating the envisaged value, and also
	to look at the positive externalities of such digital interventions. For
	instance, organizations that embrace digital technologies are relatively
	in a better position to deal with uncertain situations characterized by
	volatility, uncertainty, complexity, and ambiguity. Encashment time is
	another parameter to measure the value realization. This is the time to
	show the results in terms of the top-line and bottom-line of the
	organization.
	
	A high-impact value realization acts as a sustaining factor that
	enhances the implementation approach. It is imperative that digital
	technology with a quick adaption and short encashment time attracts
	decision-makers (CXOs) and acts as a catalyst for motivation. Thus,
	“Value Realization” as a factor helps prioritize the implementation
	approach for the adoption of digital technology.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The bank currently generates KPIs |
	|                                   | based on existing legacy system   |
	|                                   | priorities, such as processing    |
	|                                   | time, turnaround time, down time, |
	|                                   | High Availability/Disaster        |
	|                                   | Recovery (HA/DR), resilience, and |
	|                                   | security/patch metrics. They      |
	|                                   | expect similar KPIs in new        |
	|                                   | technology, too, as business      |
	|                                   | priorities have not changed.      |
	|                                   |                                   |
	|                                   | What is your recommendation to    |
	|                                   | the bank, and how is the value    |
	|                                   | best realized out of emerging     |
	|                                   | technologies?                     |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_reference-models_digital-business-reference-model_4.3.2_Business_Motivation "4.3.2 Business Motivation"
	
	The Business Motivation element focuses on the reason for the existence
	of the business and how it intends to remain sustainable and resilient
	within the environment in which it operates.
	
	The following need to be considered to outline the business intention,
	purpose, and course of action to operate in its space:
	
	-   Business Vision and Mission
	
	The enterprise’s strategic direction, its aspirations (its vision), and
	its action plans for how to realize them (its mission).[1] They
	represent both the desired end for the business and the envisaged means
	with which the end will be realized.
	
	-   Business Strategy and Principles
	
	The business strategy focuses on the enterprise’s course of action and
	approach to channel the enterprise resources and efforts towards
	achieving the identified strategic goals and objectives. It articulates
	the statement of clear principles that will guide the strategic
	priorities of the enterprise to acquire the necessary resources such as
	skills, competencies, and business capabilities to achieve its intended
	strategic goals and objectives, given the Strategic Context within which
	it operates. Strategy makes explicit choices about the ambition level
	and focus areas of the organization that drive capability development
	and prioritization. It provides the basis for the Ecosystem and Business
	Model and the Operating Model.
	
	-   Business Measures, Outcome, and Impact
	
	The enterprise also has to consider the desired outcomes that it seeks
	to achieve through its endeavor to realize its Business Vision and
	Mission. This is necessary to position the enterprise within the broader
	ecosystem where it operates and thus also possibly expose other
	opportunities to sustain its existence. It is also necessary for the
	enterprise to consider the possible impact it may have within the
	context in which it operates – social, environmental, and economical.
	
	-   Strategic Goals, Objectives, and Drivers
	
	Understanding the Strategic Context, and having defined the enterprise
	aspiration and intents, it is necessary that the enterprise clearly
	outlines its intended strategic direction and the specific goals to
	achieve it in the short, medium, and long term. The focus of the
	strategic goals and objectives is to clearly articulate the intended
	result that the enterprise seeks to achieve to realize the identified
	outcomes and to make the necessary impact it seeks to achieve.
	
	-   Corporate Governance Framework and Enterprise Architecture Strategy
	
	The overarching framework that sets the tone for the culture of the
	enterprise. The corporate governance framework for the enterprise
	ultimately determines the nature of behaviors that are acceptable within
	the enterprise and how deviation from such behaviors is handled to
	ensure that the enterprise stays on course for what it is intended to
	achieve. It will influence the nature of policy framework and the
	overall Business Operating Environment of the enterprise, to ensure that
	there are appropriate management and governance controls in place to
	enable the enterprise to optimize its investment and benefits and
	generate sustainable value within acceptable level of costs and risks as
	a good corporate citizen. The Enterprise Architecture strategy sets the
	tone for the appropriate strategic investment as it outlines the
	Architecture Vision, Architecture Principles, and requirements to
	realize the intended business direction.
	
snippet togaf_master-data-management_4.3.2_Data_Principles "4.3.2 Data Principles"
	
	  Data Principle ID   Principle Statement
	  ------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  P_DATA_001          The targeted C-MDM data business scope should be defined (lines of business, customer roles, etc.).
	  P_DATA_002          A set of fields allowing unique identification of each customer must be identified and managed through the C-MDM capability, called kernel customer data. The quality of this set of fields must be the first focus of the C-MDM team.
	  P_DATA_003          Every unique customer identified must have a technical key. Links between technical and customer business keys should be managed in the C-MDM capability.
	  P_DATA_004          The kernel customer data should be line of business-agnostic and the data should be decoupled from other customer data to guarantee high availability, stability, performance, and scalability.
	  P_DATA_005          The C-MDM capability should provide the latest version of the customer data and track historical versions and operations, including contextual metadata such as source, author, date.
	  P_DATA_006          The customer master data model must include the following conceptual entities: customer data attributes, customer relationships, customer roles.
	  P_DATA_007          The customer data must be documented: data dictionary, glossary, model.
	  P_DATA_008          C-MDM access must comply with the entity requirements and local regulation.
	  P_DATA_009          C-MDM is not the master of contract/policy data and will not impose any truth to contract data. Contract data is input to improve customer data quality, and customer data is input to improve contract data quality. The contract management process decides the data to be used to support its activities. The C-MDM process decides the data to be used to support its activities.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.2_Develop_Baseline_Business_Architecture_Description "4.3.2 Develop Baseline Business Architecture Description"
	
	Develop a Baseline Description of the existing Business Architecture, to
	the extent necessary to support the Target Business Architecture. The
	scope and level of detail to be defined will depend on the extent to
	which existing business elements are likely to be carried over into the
	Target Business Architecture, and on whether Architecture Descriptions
	exist, as described in 4.5 Approach . To the extent possible, identify
	the relevant Business Architecture building blocks, drawing on the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Baseline
	Architecture.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.3.2_Enterprise_Architecture_Principles_Team "4.3.2. Enterprise Architecture Principles: Team"
	
	For each of the TOGAF principles, rationales, and implications given
	here, the team leader should assess the specific scenario for the
	following subjects and seek out Enterprise Architecture support when a
	particular subject is in play.
	
	Principle 6: Service Orientation
	
	Digital products should follow a service-oriented design which mirrors
	real-world business activities comprising the enterprise (or
	inter-enterprise) business processes.
	
	-   Rationale
	
	    Service orientation delivers enterprise agility and enables
	    Boundaryless Information Flow™.
	
	-   Implications for the Digital Enterprise
	
	    The Enterprise Architect should be prepared to assess the
	    appropriateness of using service orientation for the digital
	    product(s) and provide guidance on implementing them if chosen. The
	    Enterprise Architect should consider the following:
	
	    -   Service and microservice representation utilizes business
	        descriptions to provide context; the information provides
	        guidance used for service orchestration
	
	    -   Service orientation places unique requirements on the
	        infrastructure, and implementations should use open standards to
	        realize interoperability and location transparency
	
	    -   Implementations are environment-specific; they are constrained
	        or enabled by context and must be described within that context
	
	    -   Consider if governance of service representation and
	        implementation is required in this context
	
	Principle 18: Requirements-Based Change
	
	Only in response to business needs are changes to applications and
	technology made.
	
	-   Rationale
	
	    This principle will foster an atmosphere where organizational
	    changes (business and business support environment) should happen in
	    response to customer and market needs (outside-in view). This is to
	    ensure that business value is the basis for any proposed change.
	    However, a change in technology may provide an opportunity to
	    improve the business process and, hence, improve the value delivered
	    to customers.
	
	-   Implications for the Digital Enterprise
	
	    In digital enterprises requirements are handled somewhat differently
	    than traditional methods. This principle is embodied in the digital
	    enterprise and Agile development concepts of the "outside-in" view
	    where customer experience trumps technology-driven decision-making.
	    The Enterprise Architecture should consider:
	
	    -   Whether funding a specific effort based on response to customer
	        and market needs should be governed based on risk to the
	        enterprise
	
	    -   Whether change management has been considered
	
snippet togaf_digital-technology-adoption_4.3.2_Policy_and_Regulations "4.3.2 Policy and Regulations"
	
	Policy and regulations can act as a catalyst for digital technology
	adoption, but at times may do the opposite. The innovative business
	models often are under regulatory pressure because of frequent changes
	in the technology-related stance. The policies and regulations often
	vary with geography as well. Startups tend to disrupt the market and
	challenge the status quo. It is well known that startups have
	experienced adverse reactions from regulators.
	
	Organizations must learn to adapt to changing regulations and anticipate
	any policy move by governments. Participation in consulting and
	discussion papers is an exciting way to present the thoughts for
	consideration. A pro-business policy environment could create a
	sustained impact in the long run. In such a case, businesses must steer
	the way towards the adoption of digital technology to create economic
	opportunities for citizens.
	
	In the assessment, the task is to understand how encouraging the
	regulatory steps are for the organization to adopt. Another aspect is to
	gauge the reaction time of the government for any policy-related
	technology interventions. With emerging technologies, it is paramount
	for organizations to do an in-depth study of the technology and the
	ethical implications associated with it, and also to anticipate the
	sentiment from policymakers.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The CIO discussed the emerging    |
	|                                   | technology implementation with    |
	|                                   | regulators. The regulators were   |
	|                                   | supportive as the bank promised   |
	|                                   | to enhance and put more rigor     |
	|                                   | into key processes, including     |
	|                                   | KYC, credit risk, and             |
	|                                   | Non-Performing Asset (NPA)        |
	|                                   | tracking, while providing a       |
	|                                   | better service to customers. The  |
	|                                   | bank has promised to conform to   |
	|                                   | all central regulations, reveal   |
	|                                   | the architecture, and train the   |
	|                                   | central bank inspectors           |
	|                                   | post-implementation.              |
	|                                   |                                   |
	|                                   | Should the bank be conforming     |
	|                                   | first on all the regulatory       |
	|                                   | guidelines, and should they       |
	|                                   | collaborate with the regulator    |
	|                                   | before commercializing the        |
	|                                   | digital product/service?          |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.3.2_Size_of_the_Board "4.3.2 Size of the Board"
	
	The recommended size for an Architecture Board is four or five (and no
	more than ten) permanent members. In order to keep the Architecture
	Board to a reasonable size, while ensuring enterprise-wide
	representation on it over time, membership of the Architecture Board may
	be rotated, giving decision-making privileges and responsibilities to
	various senior managers. This may be required in any case, due to some
	Architecture Board members finding that time constraints prevent
	long-term active participation.
	
	An organization may set up its Architecture Board using representational
	means, such that each Board member is assigned a set of stakeholders to
	represent in the meetings. It is then incumbent upon Board members to
	meet with stakeholders to gain their views on the various agenda items.
	
	However, some continuity must exist on the Architecture Board, to
	prevent the corporate architecture from varying from one set of ideas to
	another. One technique for ensuring rotation with continuity is to have
	set terms for the members, and to have the terms expire at different
	times.
	
	In the ongoing architecture process following the initial architecture
	effort, the Architecture Board may be re-chartered. The executive
	sponsor will normally review the work of the Architecture Board and
	evaluate its effectiveness; if necessary, the Architecture Compliance
	review process is updated or changed.
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.3.2_Strategic_Planning_Horizon "4.3.2 Strategic Planning Horizon"
	
	The planning horizon is the number of years into the future the
	enterprise will project its business and investment strategies.
	Different enterprises will operate substantially different planning
	horizons for the same level of planning. Knowing that the enterprise
	will look one, three, five, or ten years into the future for change
	programs, improvement initiatives, or capital planning will directly
	inform the structure and process integration of the EA Capability.
	Aligned to purpose, the EA Capability will have to provide inputs to
	align with the horizon.
	
	Each enterprise has a different appetite for its planning horizon. Keep
	in mind that if most of the time spent by the EA Capability is on
	improving the immediate future, this impairs the ability of the EA
	Capability to deliver value. Consider carefully the purpose and
	effectiveness of the EA Capability when establishing a planning horizon.
	
	The planning horizon and refresh cycle need to meet multiple scenarios,
	and fidelity demands of content provides an indication of release
	cadence for EA work and the workload for the team providing the EA
	Capability. This Guide discusses some of the strategies for evolving the
	EA Capability to balance the effort on the planning horizon in a later
	chapter.
	
snippet togaf_master-data-management_4.3.3_Application_Principles "4.3.3 Application Principles"
	
	  Application Principle ID   Principle Statement
	  -------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  P_APPICATION_001           The Application Architecture supports the C-MDM capability by being consistently integrated with points of acquisition and points of consumption. This integration ensures customer data consistency and integrity; access to all instances of customer data (e.g., current or old version).
	  P_APPICATION_002           Integration patterns are well-defined/documented and available to support data exchanges with the C-MDM system.
	  P_APPICATION_003           The Application Architecture should be compliant with the organization’s security rules.
	  P_APPICATION_004           One or more user interfaces are implemented to support master customer data functions (stewardship). Depending on the defined stewardship, user interfaces are available on operational systems or on a dedicated C-MDM user interface.
	  P_APPICATION_005           The Application Architecture must provide: operational capabilities to support transactions on customer data (create, update, merge, delete, etc.); analytical capabilities to support potential complex de-duplication processes, quality indicators, and scores.
	  P_APPICATION_006           The system should have loosely-coupled capabilities around kernel C-MDM to ensure the data consistency, availability, accessibility, and stability of the master data scope.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.3.3_Board_Structure "4.3.3 Board Structure"
	
	The TOGAF Architecture Governance Framework (see 3.2 Architecture
	Governance Framework) provides a generic organizational framework that
	positions the Architecture Board in the context of the broader
	governance structures of the enterprise. This structure identifies the
	major organizational groups and responsibilities, as well as the
	relationship between each group. This is a best practice structure, and
	may be subject to change depending on the organization's form and
	existing structures.
	
	Consideration must be given to the size of the organization, its form,
	and how the IT functions are implemented. This will provide the basis
	for designing the Architecture Board structure within the context of the
	overall governance environment. In particular, consideration should be
	given to the concept of global ownership and local implementation, and
	the integration of new concepts and technologies from all areas
	implementing against architectures.
	
	The structure of the Architecture Board should reflect the form of the
	organization. The Architecture Governance structure required may well go
	beyond the generic structures outlined in the TOGAF Architecture
	Governance Framework (see 3.2 Architecture Governance Framework). The
	organization may need to define a combination of the IT governance
	process in place and the existing organizational structures and
	capabilities, which typically include the following types of body:
	
	-   Global governance board
	-   Local governance board
	-   Design authorities
	-   Working parties
	
snippet togaf_reference-models_digital-business-reference-model_4.3.3_Business_Services_and_Products "4.3.3 Business Services and Products"
	
	While the Business Services and Products element that the enterprise
	seeks to provide to its customers may have been addressed inherently
	when dealing with other elements above, it is important that the
	enterprise is deliberate about the nature of the business services and
	products that it will consider core to their business. This will assist
	with prioritization of resources and the sourcing strategy of the
	enterprise.
	
	The following categories of Business Services and Products need to be
	considered to enable appropriate categorization and prioritization of
	enterprise resource and efforts:
	
	-   Primary Business Services
	
	These are the services that are at the center of why the enterprise
	exists. They are the primary revenue stream for the enterprise, and thus
	the enterprise needs to consider investing in ensuring that it is the
	best at providing this category of services to its customers. They are
	the source of competitive edge for the enterprise.
	
	-   Core Business Products
	
	Business products are also as equally as important as the primary
	services. They may also be a primary revenue stream and thus provide
	competitive advantage for production-intensive enterprises.
	
	-   Value-Add Services
	
	The enterprise may over and above provide its primary Business Services
	and Products, and also identify opportunities to delight its customers
	or expand its portfolio of products and services offering without losing
	the essence of what they are about. Enterprise may consider carefully
	combining their products and services to provide Value-Add Services to
	their customers.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.3_Develop_Target_Business_Architecture_Description "4.3.3 Develop Target Business Architecture Description"
	
	Develop a Target Description for the Business Architecture, to the
	extent necessary to support the Architecture Vision. The scope and level
	of detail to be defined will depend on the relevance of the business
	elements to attaining the Target Architecture Vision, and on whether
	architectural descriptions exist. To the extent possible, identify the
	relevant Business Architecture building blocks, drawing on the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Target
	Architecture.
	
	If appropriate, investigate different Target Architecture alternatives
	and discuss these with stakeholders using the Architecture Alternatives
	and Trade-offs technique (see the TOGAF Standard — ADM Techniques).
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.3.3_EA_Principles "4.3.3 EA Principles"
	
	Often EA Capability is not a greenfield effort. Most enterprises have
	undertaken the initiative to establish an EA Capability more than once.
	In the event the enterprise has a greenfield EA Capability, the Leader
	should revisit this chapter after having read Chapter 5 (Business
	Objectives for the EA Capability). Whether EA Capability is being set up
	afresh or reinstated or evolved, one of the enduring guidelines is a set
	of EA principles.
	
	Existing EA principles provide a special context for prior activity
	performed by an EA Capability. It is important to review the existing
	principles for two reasons. First, they provide a context of previous
	efforts to establish a successful EA Capability – they inform how the EA
	Capability was viewed, viewed itself, and what purpose it was
	explicitly, or implicitly, supporting. Second, to ensure that they align
	to the actual enterprise context for the current EA initiative. This
	review provides insights on how the EA Capability has been framed
	regarding purpose, role, and engagement.
	
	Review questions to ask include:
	
	-   Do the existing architecture principles represent the enterprise
	    context?
	-   Do they represent all organizational elements of the enterprise such
	    as domestic and overseas, primary, and supporting activities?
	-   Do they represent the preferences of the organization to which the
	    EA Capability team is, or was, aligned?
	
	Principles will balance the enterprise context and purpose of the
	enterprise. Care must be taken to ensure that the principles used to
	inform the development of EA and change projects align to the
	organizational context. Care must be taken to ensure that the principles
	used to inform architecture development align to the organizational
	context.
	
	Where the existing architecture principles do not reflect the current
	enterprise context nor any organizational elements of the enterprise,
	additional work will have to be performed in the roadmap to establish
	the EA Capability. At a minimum, a new set of architecture principles
	will have to be developed. Further, existing target architecture,
	compliance assessments, and roadmaps should be revisited and assessed
	against the new architecture principles.
	
	A primary function of an EA Capability is to improve understanding,
	simplify complexity, and improve informed, consistent decision-making.
	By extension, architectural principles should be tied to the
	enterprise’s values, goals, purpose, and strategies. These should
	inform, enable, and ground the enterprise on how to operate, transform,
	and grow. As a starting point, it is imperative that the team providing
	the EA Capability identifies and defines the situations when the
	consensus preference of the enterprise is to lean towards one trade-off.
	For example, the voice of the business outweighs the voice of the
	customer. Likewise, most decisions made in the context of EA are very
	difficult trade-off choices among two or more competing best, worst, or
	opposing options. A good set of architecture principles guides these
	choices and trade-offs.
	
	EA principles should address the following purposes:
	
	-   Enable decision-making – it is important to set precedence during
	    trade-off discussions and authority of tie-breaking if it must occur
	-   Align the enterprise – principles take subjectivity and bias out of
	    the equation and drive critical conversations that are objective and
	    aligned to the enterprise’s values
	-   Governance – how will the enterprise ensure that the right decisions
	    are surfaced at the right time and with the right decision-makers,
	    and, moreover, how to monitor the decisions and approach taken to
	    arrive at the decision?
	-   Values and Culture – provide a better understanding about the
	    enterprise’s culture and values; provide an approach and insight
	    into how well the enterprise reacts to change
	
	Keep in mind, anything the enterprise would perform during the normal
	course of business is not a principle. When the principle says
	“information is a valued asset”, it is important to test the opposite
	statement “when information is not treated as a valued asset, informed
	decisions, and progress cannot be made”, to validate whether the
	principle is valid.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.3.3_Enterprise_Architecture_Principles_Team_of_Teams "4.3.3. Enterprise Architecture Principles: Team of Teams"
	
	In addition to the principles from the prior contexts, the following are
	relevant TOGAF Standard principles, their rationale, and implications in
	the digital enterprise context.
	
	Principle 5: Common Use Applications
	
	The development of applications used across the enterprise is preferred
	over the development of similar or duplicative applications that are
	only provided to a particular organization.
	
	-   Rationale
	
	    Duplicative capability is expensive and proliferates conflicting
	    data.
	
	-   Implications for the Digital Enterprise
	
	    When an enterprise is in a Team of Teams context great care must be
	    taken to balance the quick delivery of new digital products with the
	    risk of increasing technical debt and the cost of integration and
	    interoperation. Judicious consideration of the following should
	    result in advice to the digital teams based on risks:
	
	    -   Organizations which depend on a capability that does not serve
	        the entire enterprise should consider changing over to the
	        replacement enterprise-wide capability, if it exists
	
	    -   Organizations should not develop or acquire capabilities for
	        their own use which are similar/duplicative of enterprise-wide
	        capabilities; in this way, expenditures of scarce resources to
	        develop essentially the same capability in marginally different
	        ways will be reduced
	
	Principle 10: Data is an Asset
	
	Data is an asset that has value to the enterprise and is managed
	accordingly.
	
	-   Rationale
	
	    Data is a valuable corporate resource; it has a real, measurable
	    value. In simple terms, the purpose of data is to aid
	    decision-making. Accurate, timely data is critical to accurate,
	    timely decisions. Most corporate assets are carefully managed, and
	    data is no exception. Data is the foundation of our decision-making,
	    so we must also carefully manage data to ensure that we know where
	    it is, can rely upon its accuracy, and can obtain it when and where
	    we need it.
	
	-   Implications for the Digital Enterprise
	
	    In the Team of Teams context this principle is recommended. This is
	    one of three closely-related principles regarding data: data is an
	    asset; data is shared; and data is easily accessible. The Enterprise
	    Architect can help ensure that data and information are leveraged
	    throughout the enterprise and/or that artificial boundaries are not
	    put in place which deter enterprise leverage. The Enterprise
	    Architect also takes on an education task to ensure that all teams
	    within the enterprise understand the relationship between value of
	    data, sharing of data, and accessibility to data. Data management is
	    key for the digital enterprise in this context. Data discovery,
	    consistent quality, data supporting new product and services design,
	    data protection, self-service access, and scalable solutions are
	    some of the key considerations. Data analytics is key to defining
	    customer profiling for a better understanding of customer needs,
	    supporting the definition of the digital offering. Consideration is
	    given to the following:
	
	    -   Organizational capabilities which produced new data (not shared
	        among other organizations) should assess the utility of this
	        data to the enterprise
	
	    -   Cultural transition from “data ownership” thinking to “data
	        stewardship” thinking
	
	    -   Data-information stewardship is important because obsolete,
	        incorrect, or inconsistent data could be passed to enterprise
	        personnel and could adversely affect decisions across the
	        enterprise
	
	Principle 11: Data is Shared
	
	Users have access to the data necessary to perform their duties;
	therefore, data is shared across enterprise functions and organizations.
	
	-   Rationale
	
	    Timely access to accurate data is essential to improving the quality
	    and efficiency of enterprise decision-making. It is less costly to
	    maintain timely, accurate data in a single application, and then
	    share it, than it is to maintain duplicative data in multiple
	    applications. The enterprise holds a wealth of data, but it is
	    stored in hundreds of incompatible stovepipe databases. The speed of
	    data collection, creation, transfer, and assimilation is driven by
	    the ability of the organization to efficiently share these islands
	    of data across the organization.
	
	    Shared data will result in improved decisions since we will rely on
	    fewer (ultimately one virtual) sources of more accurate and
	    timely-managed data for all of our decision-making.
	    Electronically-shared data will result in increased efficiency when
	    existing data entities can be used, without re-keying, to create new
	    entities.
	
	-   Implications for the Digital Enterprise
	
	    As stated, this principle as well as the principles that data is
	    both an asset and is easily accessible are closely related, hence
	    the implications are basically the same. For this principle,
	    consideration should be given to the following, again balancing
	    value and risk:
	
	    -   A common set of policies, procedures, and standards governing
	        data management and access for both the short and the long term:
	
	        -   In the short term: standard data models, data elements, and
	            other metadata that define this shared environment and
	            develop a repository system for storing this metadata to
	            make it accessible
	
	        -   In the long term: common data access policies and guidelines
	            for new application developers ensure that data in new
	            digital products remains available to the shared environment
	            and that data in the shared environment can continue to be
	            used by the new digital products
	
	        -   For both the short term and the long term: common methods
	            and tools for creating, maintaining, and accessing the data
	            shared across the enterprise are useful
	
	    -   Trade-off with data security – under no circumstances will the
	        data sharing principle cause confidential data to be compromised
	
	Principle 12: Data is Accessible
	
	Data is accessible for users to perform their functions.
	
	-   Rationale
	
	    Wide access to data leads to efficiency and effectivenes in
	    decision-making, and affords a timely response to information
	    requests and service delivery. Using information must be considered
	    from an enterprise perspective to allow access by a wide variety of
	    users. Staff time is saved and the consistency of data is improved.
	
	-   Implications for the Digital Enterprise
	
	    The implications of this principle are basically the same as for the
	    above; data is an asset and data is shared. For this principle,
	    consideration should be given to the following, balancing value and
	    risk:
	
	    -   The ease with which users obtain information
	
	    -   The way information is accessed and displayed must be
	        sufficiently adaptable to meet a wide range of enterprise users
	        and their corresponding methods of access
	
	    -   Limiting the misinterpretation of information
	
	Principle 16: Technology Independence
	
	Applications are independent of specific technology choices and
	therefore can operate on a variety of technology platforms.
	
	-   Rationale
	
	    The independence of applications from the underlying technology
	    allows applications to be developed, upgraded, and operated in the
	    most cost-effective and timely way. Otherwise, technology, which is
	    subject to continual obsolescence and vendor-dependence, becomes the
	    driver rather than the user requirements themselves. Realizing that
	    every decision made with respect to IT makes us dependent on that
	    technology, the intent of this principle is to ensure that digital
	    products are not dependent on specific hardware and operating
	    systems software.
	
	-   Implications for the Digital Enterprise
	
	    When an enterprise is in a Team of Teams context, great care must be
	    taken to balance the quick delivery of new digital products with the
	    risk of increasing technical debt and the cost of integration and
	    interoperation. Technology independence helps to manage the risk of
	    technical debt. Judicious consideration of the following should
	    result in advice to the digital teams based on risks:
	
	    -   Digital product portability
	
	    -   Commercial Off-The-Shelf (COTS) and Government Off-The-Shelf
	        (GOTS) offerings may be technology and platform-dependent
	
	    -   Enablement of legacy applications to interoperate
	
	    -   Middleware to decouple applications from the underlying platform
	
	Principle 20: Control (Manage) Technical Diversity
	
	A key driver of the overall reorientation to digital has been that
	things like cloud and infrastructure as code frameworks drive down the
	acquisition and deployment cost of infrastructure. The emergence of the
	concept of “Infrastructure as Code” has reduced management complexity
	and the costs of deploying infrastructure. However, as the enterprise
	scales to larger contexts, there is a real, non-trivial cost required to
	manage multiple processing environments. Limiting the number of
	supported components may simplify maintainability and reduce costs as
	the enterprise reaches the Team of Teams and Enduring Enterprise
	contexts, where budgeting and management issues start to overlay product
	time-to-market considerations.
	
	-   Rationale
	
	    The business advantages of minimum technical diversity include the
	    standard packaging of components, predictable implementation impact,
	    predictable valuations and returns, redefined testing, utility
	    status, and increased flexibility to accommodate technological
	    advancements. Common technology across the enterprise brings the
	    benefits of economies of scale to the enterprise. Technical
	    administration and support costs are better controlled when limited
	    resources can focus on this shared set of technology.
	
	    On the other hand, there is value to be exploited by digital
	    enterprises in new technologies that specifically assist the digital
	    enterprise. Using new technologies may, or may not, improve
	    schedules. The trade-offs need to be considered.^([6])
	
	-   Implications for the Digital Enterprise
	
	    Managing technical debt is an important job to ease growing larger
	    contexts, particularly to the Team of Teams context where
	    coordination and resource allocation across teams becomes critical.
	    The Enterprise Architect can again apply their broad knowledge of
	    the various technologies in play and help make better decisions
	    early on. So if controlling technical debt is a desire while
	    considering the cost of delay, then getting the Enterprise Architect
	    to help address the following will be beneficial:
	
	    -   Technology choices could be constrained by the choices available
	        within the technology blueprint or the technology blueprint can
	        be enhanced with new digital technologies
	
	    -   Procedures for augmenting the acceptable technology set to meet
	        evolving requirements will be supported by the Enterprise
	        Architect.
	
	Principle 21: Interoperability
	
	Software and hardware should conform to defined standards that promote
	interoperability for data, applications, and technology.
	
	-   Rationale
	
	    Standards help to ensure consistency, thus improving the ability to
	    manage systems, improve user satisfaction, and protect existing IT
	    investments, thus maximizing ROI and cost reduction. Standards for
	    interoperability additionally help to ensure support from multiple
	    vendors for their products, and facilitate supply chain integration.
	
	-   Implications for the Digital Enterprise:
	
	    A team of teams creates many digital products leading to an increase
	    in probability of need for interoperation. To facilitate this the
	    Enterprise Architect can help digital teams in the following areas:
	
	    -   Interoperability standards and industry standards
	
	    -   Governance for setting standards, reviewing and revising them,
	        and granting exceptions on use
	
snippet togaf_digital-technology-adoption_4.3.3_Funding_and_Resources "4.3.3 Funding and Resources"
	
	For organizations to continuously thrive, funding and resources are key
	factors. While funding relates to financial support, resources cover a
	vast umbrella; for example, resources could include an incubation hub
	and studio labs for incubating technology startups.
	
	There could be budget constraints and issues like cost overrun, which
	could impede the adoption of digital technology. For startups and Micro,
	Small, and Medium Enterprises (MSMEs), Venture Capitalists (VCs) and
	angel investor sentiments play a key role in the sustainability of
	business.
	
	For CXOs, effective sponsorship and direction toward technology
	modernization and digital adoption, funding, and resources are pivotal
	factors. A continual infusion of funds creates a sustainable environment
	for organizations to perfect the use-cases of digital technology
	adoption. Often organizations incorporate a sandbox style of testing for
	digital technology. This style of technology adoption methodology
	requires backing with funding and resources.
	
	+-----------------------------------+-----------------------------------+
	| [Group brainstorm]                | Case Context with practical       |
	|                                   | learnings for your thoughts       |
	+-----------------------------------+-----------------------------------+
	|                                   | The CIO and CFO were engaged in   |
	|                                   | discussions with various business |
	|                                   | leads regarding funding and the   |
	|                                   | allocation per business unit to   |
	|                                   | the new technology (depending on  |
	|                                   | relevance and ROI to the          |
	|                                   | business). The arguments ranged   |
	|                                   | from the current turnover of      |
	|                                   | business, profitability,          |
	|                                   | speed-to-market, etc. and how the |
	|                                   | adoption of digital technology    |
	|                                   | enabled each of these factors to  |
	|                                   | do better. Accordingly, the funds |
	|                                   | were carved out and technology    |
	|                                   | resources assigned from the       |
	|                                   | common pool to the new technology |
	|                                   | team.                             |
	|                                   |                                   |
	|                                   | What is your advice to the CIO    |
	|                                   | and CFO, and is there a better    |
	|                                   | way to assign funds?              |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.3.4_Enterprise_Architecture_Principles_Enduring_Enterprise "4.3.4. Enterprise Architecture Principles: Enduring Enterprise"
	
	The following are the related TOGAF Standard principles, their
	rationale, and implications in the digital enterprise context.
	
	Principle 3: Information Management is Everybody’s Business
	
	All organizations in the enterprise participate in the information
	management decisions needed to accomplish business objectives.
	
	-   Rationale
	
	    Information users are the key stakeholders, or customers, in the
	    application of technology to address a business need. In order to
	    ensure information management is aligned with business, all
	    organizations in the enterprise must be involved in aspects of the
	    information environment. The business experts from across the
	    enterprise and the technical staff responsible for developing and
	    sustaining the information environment need to come together as a
	    team to jointly define the goals and objectives of IT.
	
	-   Implications for the Digital Enterprise
	
	    In this context the Enterprise Architect can perform the valued role
	    of bringing different stakeholders together and coordinating the
	    necessary collaboration to manage the digital enterprise from an
	    holistic perspective. The Enterprise Architect must enable:
	
	    -   Operation as an enterprise team where stakeholders, including
	        customers, need to accept responsibility for managing the
	        information environment
	
	    -   Identification of the right resources to implement this
	        principle
	
	Principle 4: Business Continuity
	
	Enterprise operations are maintained in spite of system interruptions.
	
	-   Rationale:
	
	    As system operations become more pervasive, we become more dependent
	    on them; therefore, we must consider the reliability of such systems
	    throughout their design and use. Business premises throughout the
	    enterprise must be provided with the capability to continue their
	    business functions regardless of external events. Hardware failure,
	    natural disasters, and data corruption should not be allowed to
	    disrupt or stop enterprise activities. The enterprise business
	    functions must be capable of operating on alternative information
	    delivery mechanisms.
	
	-   Implications for the Digital Enterprise:
	
	    In the Enduring Enterprise context business continuity is a
	    priority. Supporting risk management is therefore a priority of the
	    Enterprise Architect, supported by a high-quality Enterprise
	    Architecture. The areas of consideration include:
	
	    -   Dependence on shared-system applications mandates that the risks
	        of business interruption be established and managed:
	
	        -   Management includes but is not limited to periodic reviews,
	            testing for vulnerability and exposure, or designing
	            mission-critical services to ensure business function
	            continuity through redundant or alternative capabilities
	
	    -   Recoverability, redundancy, and maintainability within the
	        Enterprise Architecture to support timely design
	
	    -   Digital products must be assessed for criticality and impact on
	        the enterprise mission in order to determine the level of
	        continuity required, and what corresponding recovery plan is
	        necessary
	
snippet togaf_adm_4_B_Business_Architecture_4.3.4_Perform_Gap_Analysis "4.3.4 Perform Gap Analysis"
	
	Verify the architecture models for internal consistency and accuracy:
	
	-   Perform trade-off analysis to resolve conflicts (if any) among the
	    different views
	-   Validate that the models support the principles, objectives, and
	    constraints
	-   Note changes to the viewpoint represented in the selected models
	    from the Architecture Repository, and document
	-   Test architecture models for completeness against requirements
	
	Identify gaps between the baseline and target, using the gap analysis
	technique, as described in the TOGAF Standard — Applying the ADM.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.5_Define_Candidate_Roadmap_Components "4.3.5 Define Candidate Roadmap Components"
	
	Following the creation of a Baseline Architecture, Target Architecture,
	and gap analysis results, a business roadmap is required to prioritize
	activities over the coming phases.
	
	This initial Business Architecture Roadmap will be used as raw material
	to support more detailed definition of a consolidated, cross-discipline
	roadmap within the Opportunities & Solutions phase.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.6_Resolve_Impacts_Across_the_Architecture_Landscape "4.3.6 Resolve Impacts Across the Architecture Landscape"
	
	Once the Business Architecture is finalized, it is necessary to
	understand any wider impacts or implications.
	
	At this stage, other architecture artifacts in the Architecture
	Landscape should be examined to identify:
	
	-   Does this Business Architecture create an impact on any pre-existing
	    architectures?
	-   Have recent changes been made that impact on the Business
	    Architecture?
	-   Are there any opportunities to leverage work from this Business
	    Architecture in other areas of the organization?
	-   Does this Business Architecture impact other projects (including
	    those planned as well as those currently in progress)?
	-   Will this Business Architecture be impacted by other projects
	    (including those planned as well as those currently in progress)?
	
snippet togaf_adm_4_B_Business_Architecture_4.3.7_Conduct_Formal_Stakeholder_Review "4.3.7 Conduct Formal Stakeholder Review"
	
	Check the original motivation for the architecture project and the
	Statement of Architecture Work against the proposed Business
	Architecture, asking if it is fit for the purpose of supporting
	subsequent work in the other architecture domains. Refine the proposed
	Business Architecture only if necessary.
	
snippet togaf_adm_4_B_Business_Architecture_4.3.8_Finalize_the_Business_Architecture "4.3.8 Finalize the Business Architecture"
	
	-   Select standards for each of the building blocks, re-using as much
	    as possible from the reference models selected from the Architecture
	    Repository
	-   Fully document each building block
	-   Conduct a final cross-check of overall architecture against business
	    goals; document the rationale for building block decisions in the
	    architecture document
	-   Document the final requirements traceability report
	-   Document the final mapping of the architecture within the
	    Architecture Repository; from the selected building blocks, identify
	    those that might be re-used (working practices, roles, business
	    relationships, job descriptions, etc.), and publish via the
	    Architecture Repository
	-   Finalize all the work products, such as gap analysis results
	
snippet togaf_adm_4_B_Business_Architecture_4.3.9_Create_Update_the_Architecture_Definition_Document "4.3.9 Create/Update the Architecture Definition Document"
	
	-   Document the rationale for building block decisions in the
	    Architecture Definition Document
	-   Prepare the appropriate business sections of the Architecture
	    Definition Document related to the intended scope and use of the
	    architecture
	
	If appropriate, use reports and/or graphics generated by modeling tools
	to demonstrate key views of the architecture. Route the document for
	review by relevant stakeholders, and incorporate feedback.
	
snippet togaf_introduction_4_Definitions_4.30_Business_Governance "4.30 Business Governance"
	
	Concerned with ensuring that the business processes and policies (and
	their operation) deliver the business outcomes and adhere to relevant
	business regulation.
	
snippet togaf_introduction_4_Definitions_4.31_Business_Model "4.31 Business Model"
	
	A model describing the rationale for how an enterprise creates,
	delivers, and captures value.
	
snippet togaf_introduction_4_Definitions_4.32_Business_Service "4.32 Business Service"
	
	Supports the business by encapsulating a unique "element of business
	behavior".
	
	Note:
	    A service offered external to the enterprise may be supported by
	    business services.
	
snippet togaf_introduction_4_Definitions_4.33_Capability "4.33 Capability"
	
	An ability that an organization, person, or system possesses.
	
	Note:
	    This a general-purpose definition. See 4.28 Business Capability for
	    how this concept is refined for usage in Business Architecture.
	
snippet togaf_introduction_4_Definitions_4.34_Capability_Architecture "4.34 Capability Architecture"
	
	An architecture that describes the abilities that an enterprise
	possesses.
	
	See also the TOGAF® Series Guide: A Practitioners' Approach to
	Developing Enterprise Architecture Following the TOGAF ADM.
	
snippet togaf_introduction_4_Definitions_4.35_Capability_Increment "4.35 Capability Increment"
	
	A discrete portion of a capability architecture that delivers specific
	value. When all increments have been completed, the capability has been
	realized.
	
snippet togaf_introduction_4_Definitions_4.36_Communications_and_Stakeholder_Management "4.36 Communications and Stakeholder Management"
	
	The management of needs of stakeholders of the Enterprise Architecture
	practice. It also manages the execution of communication between the
	practice and the stakeholders and the practice and the consumers of its
	services.
	
	Note:
	    Architecture stakeholder management is described in the TOGAF
	    Standard — ADM Techniques.
	
snippet togaf_introduction_4_Definitions_4.37_Concern "4.37 Concern"
	
	An interest in a system relevant to one or more of its stakeholders.
	
	Note:
	    Concerns may pertain to any aspect of the system's functioning,
	    development, or operation, including considerations such as
	    performance, reliability, security, distribution, and evolvability
	    and may determine the acceptability of the system.
	
	See also 4.75 Stakeholder .
	
snippet togaf_introduction_4_Definitions_4.38_Course_of_Action "4.38 Course of Action"
	
	Direction and focus provided by strategic goals and objectives, often to
	deliver the value proposition characterized in the business model.
	
snippet togaf_introduction_4_Definitions_4.39_Data_Architecture "4.39 Data Architecture"
	
	A description of the structure of the enterprise's major types and
	sources of data, logical data assets, physical data assets, and data
	management resources.
	
	Note:
	    Data Architecture is described in the TOGAF Standard — Architecture
	    Development Method.
	
snippet togaf_introduction_4_Definitions_4.3_Application_Architecture "4.3 Application Architecture"
	
	A description of the structure and interaction of the applications that
	provide key business capabilities and manage the data assets.
	
	Note:
	    Application Architecture is described in the TOGAF Standard —
	    Architecture Development Method.
	
snippet togaf_guides_index_4.3_A_Practical_Approach_to_Structuring_Agile_Enterprise_Architecture "4.3. A Practical Approach to Structuring Agile Enterprise Architecture"
	
	A practical and proven approach to applying the multi-level approach
	through a hierarchy of ADM cycles is illustrated in Figure 4.
	
	[TOGAF ADM Hierarchy]
	
	Figure 4. A Hierarchy of ADM Processes Example
	
	As described in the previous section, TOGAF ADM phases do not have to
	proceed in sequence. The activities around defining Segment
	Architectures can start as soon as the relevant areas have been
	identified in the Strategic Architecture. Even if not all of these
	segments have been defined, architecture work can start in those that
	had already been identified. In a similar way, work on defining
	Capability Architectures need not wait until all Segment Architectures
	have been defined. Work on different segments and capabilities may
	proceed in parallel. The Strategic, Segment, and Capability
	Architectures are explained in more detail in Section 4.4.
	
	Experience gained when developing a Capability Architecture should
	influence the higher-level Segment Architecture. Experience gained when
	developing a Segment Architecture should influence the higher-level
	Strategic Architecture.
	
	Agile delivery teams should collaborate closely with architects to
	ensure that the sprint teams understand and comply with architecture
	specifications (which may be expressed as guardrails or runways), and to
	enable rapid feedback to future architecture iterations.
	
	It is important to keep in mind the big picture to ensure implementation
	teams remain aligned to the overall strategy. Therefore, a balance must
	be made between providing sufficient detail at each level, to give
	clarity and maintain alignment, versus exploring too much detail too
	soon (“Big Design Up Front” (BDUF)) without the benefit of feedback from
	delivery sprints. This is often referred to as the Minimum Viable
	Architecture.
	
snippet togaf_master-data-management_4.3_C-MDM_Architecture_Principles "4.3 C-MDM Architecture Principles"
	
	[]
	
	Figure 6: ArchiMate Architecture Principle Definition
	
	This section lists commonly observed architecture principles to set up a
	C-MDM capability in an organization. The principles are presented using
	the TOGAF ADM structure, starting with business principles, data
	principles, and application principles.
	
	They can be used either as a first list to adapt to the specific
	organization, or to compare with an existing C-MDM principles list.
	
	These principles are a first, reusable version. They should be fully
	formalized adding “Rationale” and “Implications” for each principle.
	
snippet togaf_architecture-skills-framework_4.3_Categories_of_Skills "4.3 Categories of Skills"
	
	The TOGAF team skill set will need to include the following main
	categories of skills:
	
	-   Generic Skills: typically comprising leadership, teamworking,
	    inter-personal skills, etc.
	-   Business Skills & Methods: typically comprising enterprise
	    organization knowledge, business cases, business process, strategic
	    planning, etc.
	-   Enterprise Architecture Skills: typically comprising modeling,
	    building block design, application high-level design, role
	    definition, architecture principle design, high-level migration
	    planning, architectural building-block management,, systems
	    integration, etc.
	-   Program or Project Management Skills: typically comprising managing
	    business change, project management methods and tools, etc.
	-   IT General Knowledge Skills: typically comprising brokering
	    applications, asset management, IT system migration planning, SLAs,
	    etc.
	-   Technical IT Skills: typically comprising software engineering,
	    security, compute and network infrastructure, data interchange, data
	    management, etc.
	-   Legal Environment: typically comprising data protection laws,
	    contract law, procurement law, fraud, etc.
	
	The tables below and in Chapter 5 illustrate each of these categories of
	skills.
	
	The tables below and in Chapter 5 show, for each of these skills, the
	roles to which they are relevant and the desirable level of proficiency
	in each skill.
	
snippet togaf_business-architecture_value-streams_4.3_Heat_Mapping_Scenario "4.3 Heat Mapping Scenario"
	
	Our fictional company has been hiring in response to growing market
	demand. The acceptance rate has been trending down, and the buzz on
	social media suggests that the company has not been treating new
	employees well. HR initiates a business capability and value stream
	analysis to determine how that could be happening.
	
	The Recruitment Director assembles a cross-functional team including
	Program Management, Finance, Asset Management, and the company’s lead
	Business Architect. The Business Architect takes the team through the
	Recruit Employee value stream and helps them to refine it to better
	represent their company’s approach in the future. The Business Architect
	also guides the team in mapping their business capabilities to the value
	stream stages of the target or future-state value stream, resulting in
	the value stream-to-capability cross-mapping shown in Figure 4.
	
	Next, the Recruitment Director provides a description of the problem,
	specifically the growing issue with employee acceptance rates. Using the
	subject matter expertise within the room, the Business Architect looks
	at how well each business capability supports the required value to be
	delivered from the respective value stream stage (looking vertically up
	the value stream map), with a focus on the issues around offer
	acceptance. This results in an initial heat map showing a couple of reds
	(significant gaps between what is needed to deliver business value and
	how it works today) and a few yellows (some shifts needed). The Program
	Manager is insistent that the biggest problem lies in how long it takes
	to provide new employees with a computer, network access, and mobile
	devices, but the HR Director and Business Architect suspect that the
	issue isn’t that simple and recommend using the heat map as a focus for
	gathering more detailed information about each of the gap areas before
	reaching a conclusion.
	
	A week later, the team reconvenes with more information in hand. As each
	representative relays their findings along with a deeper understanding
	of cause and effect, a key theme emerges. It turns out that an employee
	in IT, who retired four months back, used to manually track the
	onboarding sequence from start date through orientation, security
	processing and identification, office space allocation, asset
	provisioning, and turning on network and system access for the employee.
	IT had assigned a person to perform that task because a lack of
	computing assets had been called out as a critical failure in the past.
	The root cause was the lack of a role to track the whole onboarding
	sequence. Since this person retired and nobody else had taken on the
	role, new employees had been experiencing much longer delays from
	onboarding to reach full productivity.
	
	The team updated the heat map to that shown in Figure 5, making two
	critical changes. First, the team recognized that Policy Dissemination
	was a key capability enabling this value stream, and added it to the
	first value stream stage. Second, the gaps were recognized as driving a
	need for a new subordinate value stream to recognize the broad set of
	functions, systems, and roles touching employee onboarding, with the
	subsequent need for a value stream owner to improve company recruitment.
	
	[]
	
	Figure 5: Heat Map for the Recruit Employee Value Stream
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.3_How_to_Apply_TOGAF_Principles_per_Context "4.3. How to Apply TOGAF Principles per Context"
	
	This section answers the questions:
	
	-   What principles from Enterprise Architecture and the TOGAF Standard
	    support the approach of the DPBoK Standard toward a digital
	    enterprise?
	
	-   How are these concepts applied in a digital enterprise context in
	    general?
	
	The following subsection identifies the TOGAF principles that directly
	support the intent of the DPBoK Standard and, in general, how and where
	they are applied in various emergence levels (contexts) of a digital
	enterprise. This is called the “principles aspect” of looking at the
	digital enterprise and the TOGAF Standard. Consideration was given to
	each of the principles from the TOGAF Standard, as listed in Appendix B,
	Principles from the TOGAF Standard.
	
	Figure 2, “TOGAF Principles Mapped to DPBoK Standard Contexts”
	identifies which of the TOGAF principles are most applicable to each of
	the contexts of the DPBoK Standard. Descriptions of the principles and
	how they apply to the DPBoK contexts follow the matrix. If a principle
	is assessed as applicable to an earlier context it applies to all other
	later contexts.
	
	[align:"centre"]
	
	Figure 2. TOGAF Principles Mapped to DPBoK Standard Contexts
	
	+-----------------------------------+-----------------------------------+
	| Note                              | This mapping should be used as a  |
	|                                   | reference and for general         |
	|                                   | guidance. What principles are     |
	|                                   | finally selected will depend on   |
	|                                   | the specific situation.           |
	+-----------------------------------+-----------------------------------+
	
	The following principles from the TOGAF Standard that support the DPBoK
	Standard are presented per digital enterprise context.
	
snippet togaf_applying-the-adm_4_Architecture_Partitioning_4.3_Integration "4.3 Integration"
	
	The creation of partitioned architectures runs the risk of producing a
	fragmented and disjointed collection of architectures that cannot be
	integrated to form an overall big picture (see the TOGAF Standard —
	Architecture Development Method).
	
	For large complex enterprises, federated architectures — independently
	developed, maintained, and managed architectures that are subsequently
	integrated within an integration framework — are typical. Federated
	architectures typically are used in governments and conglomerates, where
	the separate organizational units need separate architectures. Such a
	framework specifies the principles for interoperability, migration, and
	conformance. This allows specific business units to have architectures
	developed and governed as stand-alone architecture projects. More
	details and guidance on specifying the interoperability requirements for
	different solutions can be found in the TOGAF Standard — ADM Techniques.
	
	In order to mitigate against this risk, standards for content
	integration should be defined and Architecture Governance should address
	content integration as a condition of architectural compliance. Content
	frameworks, such as the TOGAF content framework (refer to the TOGAF
	Standard — Architecture Content) can be used to specify standard
	building blocks and artifacts that are the subject of content
	integration standards.
	
	For example, a standard catalog of business processes can be agreed for
	an enterprise. Subsequent architectures can then ease integration by
	using the same process list and cross-referencing other aspects of the
	architecture to those standard processes.
	
	Integration can be addressed from a number of dimensions:
	
	-   Integration across the architecture domains provides a cross-domain
	    view of the state of a segment of the enterprise for a point in time
	-   Integration across the organizational scope of the business provides
	    a cross-segment view of the enterprise
	-   The Architecture Vision provides an integrated summary of
	    Architecture Definitions, which provide an integrated summary of
	    Transition Architectures
	
	Figure 4-2 shows how architectural content can be aggregated using a
	variety of techniques.
	
	[]
	
	Figure 4-2: Architecture Content Aggregation
	
snippet togaf_metadata-management_4.3_Metadata_Management_Guidelines_for_Information_Systems_Architectures_ADM_Phase_C "4.3 Metadata Management Guidelines for Information Systems Architectures (ADM Phase C)"
	
	The metadata repository is supported by a Metadata Management IT
	solution, which is a combination of technologies (set of functions), a
	data model, and processes (metadata update and validation workflows) in
	order to support Metadata Management activities.
	
	[]
	
	Figure 6: Metadata Management IT Solution
	
	The metadata data model formalizes the metadata requirements by
	clarifying the set of metadata assets that will be documented in the
	metadata repository and their relationships. As described in Section
	4.2, the metadata validation workflows are designed to support metadata
	quality requirements.
	
	Metadata is often divided into three categories that can be summarized
	as follows, based on the DMBOK2:
	
	-   Business metadata focuses largely on the content and condition of
	    the data and includes details related to data governance
	-   Technical metadata provides information about the technical details
	    of data, the systems that store data, and the processes that move it
	    within and between systems
	-   Operational metadata describes details of the processing and
	    accessing of data
	
	Business metadata is managed by people, technical metadata exists in the
	data structures of the IT systems, and operational metadata is generated
	at a specific point in time. Figure 7 shows a baseline proposal of key
	metadata assets (see the definitions in Appendix A) to be captured to
	support data governance.
	
	[]
	
	Figure 7: Key Metadata Assets
	
	After identifying the metadata data assets to be documented, it is
	important to leverage the Dublin Core™ Metadata Element Set (DCMES) at
	the attribute level to effectively describe each asset. For instance,
	the subject field is key to making sure that metadata is universally
	discoverable throughout the enterprise. It is useful to have the tags
	correspond (map) to the logical data model elements, especially the
	generalization-specialization constructs (e.g., Sedan is a type of Car
	that is a type of vehicle) so that searches (and business rules) can
	find all of the requisite data for whatever purpose.
	
	Once the scope of metadata assets to be collected is defined, the
	metadata integration model needs to be clarified taking into
	consideration the broader scope of existing metadata sources and the
	business architecture outputs (business actors to be onboarded, metadata
	validation processes, data governance operating model).
	
	As stated in ISO/IEC 19773, “… it is a general description framework for
	data of any kind, in any organization, and for any purpose. ISO/IEC
	19773 does not address other data management needs, such as data models,
	application specifications, programming code, program plans, business
	plans, and business policies.”
	
	The proposed framework here is to go beyond the ISO/IEC 19773 model by
	making explicit the key assets that are relevant to support data
	semantics documentation but also data management needs.
	
	Table 1 shows three common models observed and their implications.
	
	Table 1: Metadata Integration Model Examples
	
	+-----------------------+-----------------------+-----------------------+
	| Metadata Integration  | Illustration          | Implications          |
	| Model                 |                       |                       |
	+=======================+=======================+=======================+
	| Consolidation         | []                    | The metadata          |
	|                       |                       | repository provides a |
	|                       | Figure 8: Metadata    | unique point of       |
	|                       | Integration:          | access to consume the |
	|                       | Consolidation Model   | metadata available    |
	|                       |                       | from different        |
	|                       |                       | sources.              |
	|                       |                       |                       |
	|                       |                       | It holds only a copy  |
	|                       |                       | of the business       |
	|                       |                       | metadata.             |
	|                       |                       |                       |
	|                       |                       | The processes to      |
	|                       |                       | create and maintain   |
	|                       |                       | this metadata are     |
	|                       |                       | external to the       |
	|                       |                       | repository.           |
	+-----------------------+-----------------------+-----------------------+
	| Hybrid                | []                    | For a subset of       |
	|                       |                       | metadata, the         |
	|                       | Figure 9: Metadata    | repository holds the  |
	|                       | Integration: Hybrid   | master copy.          |
	|                       | Model                 |                       |
	|                       |                       | It is also designed   |
	|                       |                       | to support the        |
	|                       |                       | processes and         |
	|                       |                       | validation workflows  |
	|                       |                       | required to maintain  |
	|                       |                       | this metadata.        |
	|                       |                       |                       |
	|                       |                       | The existing tools    |
	|                       |                       | are expected to be    |
	|                       |                       | decommissioned after  |
	|                       |                       | migration to the      |
	|                       |                       | metadata repository.  |
	|                       |                       |                       |
	|                       |                       | For the remaining     |
	|                       |                       | metadata scope, the   |
	|                       |                       | existing tools hold   |
	|                       |                       | the master copy and   |
	|                       |                       | synchronize with the  |
	|                       |                       | metadata repository.  |
	+-----------------------+-----------------------+-----------------------+
	| Unified               | []                    | The repository        |
	|                       |                       | unified for the full  |
	|                       | Figure 10: Metadata   | scope, both the       |
	|                       | Integration: Unified  | metadata and the      |
	|                       | Model                 | processes and         |
	|                       |                       | validation workflows  |
	|                       |                       | to maintain the       |
	|                       |                       | metadata.             |
	|                       |                       |                       |
	|                       |                       | An effort can also be |
	|                       |                       | made to provide a     |
	|                       |                       | dedicated user        |
	|                       |                       | experience to each    |
	|                       |                       | community of users    |
	|                       |                       | according to their    |
	|                       |                       | requirements. It may  |
	|                       |                       | involve a dedicated   |
	|                       |                       | user interface.       |
	+-----------------------+-----------------------+-----------------------+
	| Legend                |                       |                       |
	|                       |                       |                       |
	| []                    |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	
	The metadata exchange can be done by one of the following:
	
	-   Manual ingestion: each source exports the metadata in the agreed
	    format and it is uploaded manually in the repository
	
	-   Pushing metadata: each source takes the responsibility to push to
	    the metadata repository an agreed scope according to the
	    collaboration contract (format, data structure, frequency, etc.)
	
	-   Pulling metadata: the IT solution supporting the metadata repository
	    provides metadata agents that can be deployed directly at source to
	    collect or infer the metadata
	
	    This is usually the case for technical and operational metadata.
	    Business metadata requires manual effort.
	
	[]
	
	Figure 11: Metadata Integration Patterns
	
	Each approach has some implications to be taken into consideration:
	
	-   Manual ingestion:
	
	—  Manual work with an impact on operational efficiency
	
	—  Possible limited vendor support to metadata integration
	
	—  Initial effort to build the extractors for each metadata source
	
	-   Pushing metadata:
	
	—  Initial effort to set up the extractors for each metadata source
	
	—  Possible additional tool(s) required to support metadata integration
	
	-   Pulling metadata:
	
	—  The metadata solution may have access to all the data; indeed,
	sometimes the tool will have access to the data files to be able to
	infer the technical metadata
	
	—  The metadata agent can be an intrusive component for critical
	applications
	
	—  Security audit is required to ensure compliance with security
	policies as the metadata solution will have read access to multiple
	applications in the information system landscape
	
	The complexity to collect technical and operational metadata depends on
	the data variety and IT landscape, with a main difference when the data
	schema and operational metadata are defined by-design versus when the
	metadata is extracted a posteriori by leveraging analytical techniques
	(metadata inference, machine learning, etc.).
	
	[]
	
	Figure 12: Technical Metadata Inference
	
	-   Structured data can be easily collected from database dictionaries,
	    technical metadata stores, data integration repositories, etc.
	
	    Note that data schema collection does not require access to data.
	
	-   Semi-structured files come with a structure but do not guarantee
	    schema stability over time as each file may have its own structure
	
	-   Unstructured data: we cannot manage what we do not know
	
	    A minimum structure (shapes in an image; email address from a
	    document, etc.) must be extracted from the unstructured data before
	    analysis and governance. Such an exercise requires scanning the data
	    content which may involve intensive data processing if there are
	    millions of files to scan.
	
	Multiple techniques/libraries/tools exist to extract technical and
	operational metadata from data; the tool selection depends on the kind
	of metadata that is needed, the complexity to extract the information,
	and the performance/volume of data to scan.
	
	To a certain extent, managing metadata for unstructured data means first
	capturing the technical metadata; multiple structures can be extracted
	over time from the same unstructured data set. The main challenge is to
	maintain the associations with other metadata to put this unstructured
	data in context:
	
	-   Business meaning: association with the business terms, business data
	    objects, business data elements
	-   Context of use: association with data processing activities
	-   Data quality requirement: association with business data quality
	    rule, technical data quality rule, data quality anomaly
	-   Privacy requirement: association with data deletion rule, etc.
	
snippet togaf_guides_agile-sprints_4.3_Phases_E_and_F "4.3 Phases E and F"
	
	Phases E (roadmapping part) and F need to be adapted to sprinting. Not
	all parts of all steps need to be performed during each sprint. The work
	in each of the steps of the two phases needs to be adapted to the amount
	of work performed during each sprint. In a situation with many solution
	teams there will be more work to coordinate between the solution teams
	and the receivers of the solution(s).
	
	Phase E steps and potential adaptations:
	
	-   Determine/confirm key corporate change attributes
	
	Ensure that the receiving stakeholders’ potential for change is
	understood. If the same stakeholders are receiving the entire product,
	it could be sufficient to do this in the first sprint (release).
	
	-   Determine business constraints for implementation
	
	Identify new business constraints that could influence the
	implementation. This should be done for each sprint. It can also be done
	at the end of a set of sprints to address potential interrelations
	between Agile teams’ delivery or to package-related solutions delivery.
	
	-   Review and consolidate gap analysis results from Phases B to D
	
	This is normal SBB work; refer to the TOGAF Standard – Applying the ADM
	(Architecture Partitioning.
	
	-   Review consolidated requirements across related business functions
	
	Manage the entire set of requirements for the solution. This should be
	done for each sprint.
	
	-   Consolidate and reconcile interoperability requirements
	
	Ensure that interoperability of the sprint is consolidated and
	reconciled. This should be done for the scope of each sprint.
	
	-   Refine and validate dependencies
	
	Refine and validate dependencies between Agile teams for the sprint.
	This should be done for each sprint.
	
	-   Confirm readiness and risk for business transformation
	
	Ensure that the organization/customer is ready for the MVP. This should
	be done for each sprint.
	
	-   Formulate Implementation and Migration Strategy (IMS)
	
	Formulate the IMS in sufficient detail for the sprint. This should be
	done for each sprint.
	
	-   Identify and group major work packages
	
	Identify the work needed to be done in the sprint by all Agile teams
	(business, architecture, solution). This should be done for each sprint
	and is input to the backlogs.
	
	-   Identify Transition Architectures
	
	Identify how the sprint results should be used; e.g., should they be
	migrated to all users or just to certain selected user groups? This
	should be done for each sprint.
	
	-   Create the Architecture Roadmap & Implementation and Migration Plan
	
	Define the backlog in collaboration with the product owner and Agile
	teams. This should be done for each sprint.
	
	Phase F steps and potential adaptations:
	
	-   Confirm management framework interactions for the Implementation and
	    Migration Plan
	
	This should most likely be done before the organization sets out on an
	Agile journey.
	
	-   Assign a business value to each work package
	
	Each sprint should have a business value associated with it. This should
	be done for each sprint.
	
	-   Estimate resource requirements, project timings, and
	    availability/delivery vehicle
	
	This is done during sprint planning, and should be done for each sprint.
	
	-   Prioritize the migration projects through the conduct of a
	    cost/benefit assessment and risk validation
	
	This is done during sprint planning to select the content of the next
	sprint, and should be done for each sprint.
	
	-   Confirm Architecture Roadmap and update Architecture Definition
	    Document (ADD)
	
	Update the overall roadmap created in sprint zero, and update the ADD to
	show the current state of the architecture. This should be done for each
	sprint.
	
	-   Complete the Implementation and Migration Plan
	
	This is the backlog for the next sprint. It should be done for each
	sprint.
	
	-   Complete the architecture development cycle and document lessons
	    learned
	
	This is documentation of the retrospective. It should be done for each
	sprint.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.3_Setting_Up_the_Architecture_Board "4.3 Setting Up the Architecture Board"
	
snippet togaf_adm_4_B_Business_Architecture_4.3_Steps "4.3 Steps"
	
	The level of detail addressed in Phase B will depend on the scope and
	goals of the overall architecture effort.
	
	New models characterizing the needs of the business will need to be
	defined in detail during Phase B. Existing business artifacts to be
	carried over and supported in the target environment may already have
	been adequately defined in previous architectural work; but, if not,
	they too will need to be defined in Phase B.
	
	The order of the steps in Phase B as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand, in accordance with the established Architecture Governance. In
	particular, determine whether in this situation it is appropriate to
	conduct Baseline or Target Architecture development first, as described
	in the TOGAF Standard — Applying the ADM.
	
	All activities that have been initiated in these steps should be closed
	during the Finalize the Business Architecture step (see 4.3.8 Finalize
	the Business Architecture). The documentation generated from these steps
	must be formally published in the Create/Update the Architecture
	Definition Document step (see 4.3.9 Create/Update the Architecture
	Definition Document).
	
	The steps in Phase B are as follows:
	
	-   Select reference models, viewpoints, and tools (see 4.3.1 Select
	    Reference Models, Viewpoints, and Tools)
	-   Develop Baseline Business Architecture Description (see 4.3.2
	    Develop Baseline Business Architecture Description)
	-   Develop Target Business Architecture Description (see 4.3.3 Develop
	    Target Business Architecture Description)
	-   Perform gap analysis (see 4.3.4 Perform Gap Analysis)
	-   Define candidate roadmap components (see 4.3.5 Define Candidate
	    Roadmap Components)
	-   Resolve impacts across the Architecture Landscape (see 4.3.6 Resolve
	    Impacts Across the Architecture Landscape)
	-   Conduct formal stakeholder review (see 4.3.7 Conduct Formal
	    Stakeholder Review)
	-   Finalize the Business Architecture (see 4.3.8 Finalize the Business
	    Architecture)
	-   Create/Update the Architecture Definition Document (see 4.3.9
	    Create/Update the Architecture Definition Document)
	
snippet togaf_reference-models_digital-business-reference-model_4.3_Strategy_Domain "4.3 Strategy Domain"
	
snippet togaf_digital-technology-adoption_4.3_Sustaining_Factors_Description "4.3 Sustaining Factors Description"
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4.3_What_is_the_Special_Context_for_the_EA_Capability "4.3 What is the Special Context for the EA Capability?"
	
snippet togaf_reference-models_digital-business-reference-model_4.4.1_Ecosystem_and_Business_Model "4.4.1 Ecosystem and Business Model"
	
	Understanding the Strategic Context within which the enterprise operates
	should provide the insight necessary to understand the various role
	players within the industry and the broader economy. This insight,
	combined with the strategic direction that the enterprise chose in the
	Business Motivation element and taking into consideration the envisaged
	service offering identified in the core business services, should inform
	the nature of the business model that that the enterprise will adopt to
	create value for the identified customers, at optimum cost of operations
	and returns.
	
	The following aspects should be considered to determine an appropriate
	Ecosystem and Business Model for the enterprise to be sustainable:
	
	-   Business Ecosystem Model
	
	Outlines the internal and external partners and role players that may
	support the enterprise by complementing and/or providing core business
	functions. Typically, an ecosystem of partners can be exploited to
	generate competitive advantage, such as establishing the dominance of
	industry platforms. Analysis of partner capabilities includes the
	definition of which capabilities should be sourced from partners, what
	levels of partnership should exist, and how partnering occurs on
	different levels, which types of partners should be used in which
	circumstances, and which partners are preferred for which purposes. The
	enterprise should also determine the short-term and long-term role it
	intends to play within the ecosystem.
	
	-   Strategic Principles and Business Model
	
	The clear articulation of the value proposition of the enterprise to its
	target customers, the envisaged operating mechanisms, and the respective
	finance model necessary to ensure a sustainable business model for the
	enterprise. The envisaged business model must be underpinned by the set
	of values and principles that will steer the decision of the enterprise
	on all aspects of the business model in order to remain sustainable,
	relevant, and aligned to intended strategic direction of the enterprise.
	
	-   Policy and Risk Management Framework
	
	Governance rules, procedures, and controls to enable the consistent
	execution functions of the enterprise including the management of
	information generated by the execution of capabilities. Enabling
	effective decision support, and communication channels for the
	enterprise to operate effectively. Providing effective models for
	delegations, reporting, analytics, performance management, quality
	management, financial governance, product portfolio management,
	controls, and communications. The management of risks that may impact
	the success of the enterprise in delivering its value proposition to the
	target customers must also be addressed with an appropriate risk
	management framework.
	
	-   Organization Culture and Behavior
	
	Building a set of learning organization behaviors that facilitates, at
	every level, a culture where questioning the status quo is an indicator
	of a growth mindset. A climate in which initiatives are rewarded and
	collaboration is effortless, a safe space where risks taken and mistakes
	made are volunteered, an atmosphere that does not shun intuition or look
	down upon people who voice complex problems without quick solutions.
	Business model innovation and agility are thus the norm, to enable an
	inherent continuous improvement culture within the enterprise, as it
	responds to the changing business model.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4.1_Enterprise_Architecture_Capabilities_and_Services_Individual_Founder "4.4.1. Enterprise Architecture Capabilities and Services: Individual/Founder"
	
	Enterprise Architecture capabilities that would be useful in this
	context include:
	
	-   The ability to assess and communicate the digital value of a
	    proposed digital product
	
	-   The ability to communicate available and appropriate digital
	    infrastructure for Agile development and the delivery of a proposed
	    digital product (aka the digital infrastructure architecture and
	    accompanying application architecture, addressing common
	    look-and-feel, ease-of-use)
	
	-   The ability to communicate technical requirements to digital
	    infrastructure managers
	
	-   The ability to respond to questions concerning risk on demand; e.g.,
	    change, privacy, and security risk
	
	-   The ability to communicate minimum business and technical standards
	    for the digital product (covering security, human factors,
	    technology, etc.)
	
	To support the Individual/Founder context, the following Enterprise
	Architecture services should be considered:
	
	-   Business Value Assessment and Analysis Service
	
	    -   Provides on-demand assessment and analysis of business value
	        based on the current state of the landscape
	
	        This service delivers:
	
	        -   Competitive assessment report
	
	        -   Capability assessment report
	
	        -   Value versus risk matrix
	
	-   Stakeholders Management Services
	
	    -   Provides capabilities to identify, understand, decide upon, and
	        engage stakeholders based on the scope of a given effort
	
	        This service delivers:
	
	        -   Stakeholder identification report
	
	        -   Stakeholder engagement strategy and plan
	
	        -   Stakeholder needs report
	
	-   Sustainability Management Support Services
	
	    -   Provides on-demand analysis and recommendations for ensuring
	        that sustainability is being addressed throughout programs
	        required to meet the business goals of an organization over a
	        time horizon based on the current state of the enterprise
	
	        This service delivers:
	
	        -   Sustainability assessment report
	
	        -   Sustainability recommendations
	
	-   Architecture and Standards Guidance Service (for digital
	    infrastructure; Agile development, deployment, and delivery)
	
	    -   Provides guidance to developing organizations on using the
	        architecture, standards, and how they are implemented
	
	        This service delivers:
	
	        -   Business recommendations
	
	        -   Policy recommendations
	
	        -   Technical recommendations
	
	-   Risk Management Services (specifically change management, data
	    privacy, and security)
	
	    -   Provides analysis, assessments, and recommendations for risk
	        mitigation based on the goals of the organization
	
	        This service delivers:
	
	        -   Risk identification report
	
	        -   Risk assessment report
	
	        -   Risk mitigation report
	
	+-----------------------------------+-----------------------------------+
	| Note                              | Each of these, and subsequent     |
	|                                   | services must be provided in a    |
	|                                   | timely manner to support the      |
	|                                   | operational tempo of the effort.  |
	|                                   | The limited context of the effort |
	|                                   | must be used to scope the depth   |
	|                                   | of any analysis that would        |
	|                                   | support execution of the service. |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.4.1_General "4.4.1 General"
	
	Architecture Board meetings should be conducted within clearly
	identified agendas with explicit objectives, content coverage, and
	defined actions. In general, board meetings will be aligned with best
	practice, such as given in the COBIT framework (see 3.1.4.1 An IT
	Controls Framework — COBIT).
	
	These meetings will provide key direction in:
	
	-   Supporting the production of quality governance material and
	    activities
	-   Providing a mechanism for formal acceptance through consensus and
	    authorized publication
	-   Providing a fundamental control mechanism for ensuring the effective
	    implementation of the architectures
	-   Establishing and maintaining the link between the implementation of
	    the architectures and the stated strategy and objectives of the
	    organization (business and IT)
	-   Identifying divergence from the contract and planning activities to
	    realign with the contract through dispensations or policy updates
	
snippet togaf_guides_index_4.4.1_Strategic_Architecture "4.4.1. Strategic Architecture"
	
	In an Agile enterprise, Strategic Architecture is a high-level iteration
	supported by the TOGAF ADM Phase A, Architecture Vision. Strategic
	direction for the enterprise is defined in this iteration to support
	decision-making, and which may be further elaborated in Phase B to
	provide a high-level view of the organization landscape. It can also be
	used to identify required architecture and solution delivery
	capabilities.
	
	Sometimes it is needed to also cover other TOGAF ADM phases, like B, C,
	and D, to have a clearer view on the whole landscape. In these cases,
	the iteration and architecture description should be high-level and not
	all TOGAF ADM phases will be needed.
	
	This iteration provides identification and foundation for Segment
	Architectures, which can be delivered in parallel.
	
	Key advantages for an Agile enterprise doing Strategic Architecture are:
	
	-   Provides understanding of the organization context needed to define
	    the strategic themes, epics, and drivers; identify value streams,
	    high-level requirements, and other broad features of the strategic
	    direction and vision
	
	    The Strategic Architecture provides a context for lower-level
	    architectures.
	
	-   Confirms the basis to define guardrails for the
	    product/service/solution delivery
	
	-   Identifies the high-level organizational capabilities necessary to
	    deliver the entire endeavor: people skills, tooling, management
	    tools, governance principles, etc.
	
	-   Provides an understanding of the organization landscape to shape
	    migration planning roadmaps when loosely-coupled components are
	    involved, thus providing the organization landscape to identify and
	    implement the collaboration and integration needed between the
	    relevant associated teams
	
	    In the formation of these teams, consideration needs to be given to
	    avoid following the organization’s communication structure as the
	    basis for the team structure. Instead the suggested approach is to
	    consider shaping the enterprise’s organization to make the
	    Technology Architecture isomorphic with the Business Architecture.
	
	-   Input to define the backlog for the different segments (typically
	    functional or organizational areas) that will be covered in
	    subsequent iterations
	
	The output of this iteration is used as input to define the backlog to
	be used in the different Segment Architectures.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4.2_Enterprise_Architecture_Capabilities_and_Services_Team "4.4.2. Enterprise Architecture Capabilities and Services: Team"
	
	In addition to the Enterprise Architecture capabilities in the prior
	context, the following Enterprise Architecture capabilities would be
	useful in the Team context:
	
	-   The ability to assess interoperability and transparency needs
	    (stakeholder needs)
	
	-   The ability to understand the impact of changes in digital product
	    implementation
	
	-   The ability to understand all interdependencies
	
	-   The ability to understand the operational view of the business and
	    development
	
	Of the Enterprise Architecture capabilities identified in previous
	contexts, the following Enterprise Architecture capabilities would be
	taken to a greater level of precision:
	
	-   The ability to communicate available and appropriate digital
	    infrastructure for Agile development and the delivery of a proposed
	    digital product (aka the digital infrastructure architecture and
	    accompanying application architecture, addressing common
	    look-and-feel, ease-of-use, service orientation – including
	    orchestration)
	
	-   The ability to respond, on demand, to questions concerning risk;
	    e.g., change, privacy and security risk (no service governance
	    and/or no change management)
	
	In addition to the services from the Founder context, the following
	additional Enterprise Architecture service should be considered:
	
	-   Change Management
	
	    -   Provides recommendations for developing holistic change
	        management plans
	
	        -   People impact recommendations
	
	        -   Processes impact recommendations
	
	        -   Technologies impact recommendations
	
	The following are Enterprise Architecture services previously
	identified, but will be done with increased precision and granularity in
	this context:
	
	-   Stakeholders Management Services
	
	    -   Provides capabilities to identify, understand, decide upon, and
	        engage stakeholders based on the scope of a given effort
	
	        This service delivers:
	
	        -   Stakeholder identification report
	
	        -   Stakeholder engagement strategy and plan
	
	        -   Stakeholder needs report (deeper focus on interoperation and
	            integration)
	
	-   Sustainability Management Support Services
	
	    -   Provides on-demand analysis and recommendations for ensuring
	        that sustainability is being addressed throughout programs
	        required to meet the business goals of an organizational over a
	        time horizon based on the current state of the enterprise
	
	        This service delivers:
	
	        -   Sustainability assessment report
	
	        -   Sustainability recommendations (deeper focus on reuse)
	
	-   Architecture and Standards Guidance Service (for digital
	    infrastructure; Agile development, deployment, and delivery)
	
	    -   Provides guidance to developing organizations on using the
	        architecture and implementing standards
	
	        This service delivers:
	
	        -   Business (model) recommendations (deeper focus on
	            operational view)
	
	        -   Policy recommendations
	
	        -   Technical (model) recommendations (deeper focus on service
	            orientation and interdependencies)
	
	-   Risk Management Services
	
	    -   Provides analysis, assessments, and recommendations for risk
	        mitigation based on the goals of the organization
	
	        This service delivers:
	
	        -   Risk identification report (deeper focus on governance and
	            change management)
	
	        -   Risk assessment report (deeper focus on governance and
	            change management)
	
	        -   Risk mitigation report (deeper focus on governance and
	            change management)
	
snippet togaf_reference-models_digital-business-reference-model_4.4.2_Operating_Model "4.4.2 Operating Model"
	
	The Operating Model describes how the enterprise operates to deliver the
	intended value proposition to its customers. It enables the equitable
	deployment of resources at the disposal of the enterprise in line with
	the business model and strategic priorities of the enterprise. It
	enables consistent alignment of the enterprise’s Business Motivation,
	services, business model, and operations. It is the lever that
	translates the business model into interrelated sets of business
	capabilities, processes, and the operating environment of the
	enterprise.
	
	The following should be considered to determine Operating Model of the
	enterprise, to support the business model:
	
	-   Strategic Posture and Value Disciplines
	
	The determination of the strategic posture of the enterprise is
	necessary to inform the type of Operating Model that will dominate the
	operations of the enterprise, and deployment of resources within various
	functions of the enterprise. It will also enable the enterprise to
	consciously decide on its orientation towards its customers and
	stakeholders in line with the key value elements of the enterprise
	(e.g., customer-centricity versus operational excellence). The
	enterprise should thus consider a trade-off between various value
	disciplines and make a decision about the predominate Value Creation
	mechanisms for the enterprise, supported by the appropriate resources.
	
	-   Service Model
	
	Definition of the relevant service portfolio and the underlying service
	delivery mechanisms. Enabling alignment of business services with the
	business processes, organization model, and the underlying information
	systems services.
	
	-   Organizational Model
	
	The development and translation of the organization map into sets of
	objectives, structures, and interactions necessary for various role
	players, functions, and stakeholders for the enterprise to enable the
	execution of the Operating Model. It will influence the nature of the
	organization structure, organizational resources, and roles necessary
	for the enterprise to execute its functions in line with the Service
	Model.
	
	-   Resource Model
	
	Strategies, practices, and management mechanisms to effectively acquire,
	allocate, deploy, and utilize resources in line with the business model,
	Operating Model, and the strategic direction of the enterprise.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.4.2_Preparation "4.4.2 Preparation"
	
	Each participant will receive an agenda and any supporting documentation
	— e.g., dispensation requests, performance management reports, etc. —
	and will be expected to be familiar with the contents of each.
	
	Where actions have been allocated to an individual, it is that person's
	responsibility to report on progress against these.
	
	Each participant must confirm their availability and attendance at the
	Architecture Board meeting.
	
snippet togaf_guides_index_4.4.2_Segment_Architecture "4.4.2. Segment Architecture"
	
	A Segment Architecture is typically the specification of the product or
	business solution. It should be just enough architecture to identify
	features and functional and non-functional requirements – it may not be
	necessary to complete all ADM phases and steps, only the minimum needed
	to ensure outcomes are met. Several of these iterations can be delivered
	concurrently by different Agile teams. Delivery teams should be engaged
	during the definition of Segment Architectures to begin to build a
	common understanding of the solution to be delivered.
	
	Key advantages for an Agile enterprise doing Segment Architecture are:
	
	-   Support for the definition of Capability-level backlogs
	
	-   Identify the capabilities/enablers and then the features and
	    functionalities needed to deliver the product/service/solution
	
	-   Define the Key Performance Indicators (KPIs) needed ensure value is
	    delivered in accordance with the vision and business objectives
	
	-   The final outcome should be the sufficient architecture to shape the
	    products and solutions for every segment
	
	    A segment consists of one or more products and SBBs. Just enough
	    architecture should be delivered to enhance solution design,
	    performance, and usability, and provide guidance for inter-team
	    design and implementation.
	
	-   Specification at this level should be oriented to grouping things
	    together at portfolio level to support Agile concepts that include
	    epics, concurrent engineering, and planning for continuous delivery
	    and integration of the target solution
	
	Prototypes of the products or proofs of concept may be produced at this
	level to confirm that potential overarching solution patterns are
	possible.
	
	Outputs of segment iterations are backlog items that will be the base
	upon which Agile teams can work on the product and solution
	implementation.
	
	This is consistent with one of the key topics mentioned in Section 1.1
	about “practical experimentation”: a preference for trying things out
	and learning from experience as opposed to extensive theoretical
	analysis, sometimes characterized as “fail fast”.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.4.3_Agenda "4.4.3 Agenda"
	
	This section outlines the contents of an Architecture Board meeting
	agenda. Each agenda item is described in terms of its content only.
	
	Minutes of Previous Meeting
	
	Minutes contain the details of previous Architecture Board meetings as
	per standard organizational protocol.
	
	Requests for Change
	
	Items under this heading are normally change requests for amendments to
	architectures, principles, etc., but may also include business control
	with regard to Architecture Contracts; e.g., ensure that voice traffic
	to premium numbers, such as weather reports, is barred and data traffic
	to certain websites is controlled.
	
	Any request for change is made within agreed authority levels and
	parameters defined by the Architecture Contract.
	
	Dispensations
	
	A dispensation is used as the mechanism to request a change to the
	existing architectures, contracts, principles, etc. outside of normal
	operating parameters; e.g., exclude provision of service to a
	subsidiary, request for unusual service levels for specific business
	reasons, deploy non-standard technology or products to support specific
	business initiatives.
	
	Dispensations are granted for a given time period and a set of
	identified services and operational criteria that must be enforced
	during the lifespan of the dispensation. Dispensations are not granted
	indefinitely, but are used as a mechanism to ensure that service levels
	and operational levels, etc. are met while providing a level flexibility
	in their implementation and timing. The time-bound nature of
	dispensations ensures that they are a trigger to the Architecture
	Compliance activity.
	
	Compliance Assessments
	
	Compliance is assessed against SLAs, Operational-Level Agreements
	(OLAs), cost targets, and required architecture refreshes. These
	assessments will be reviewed and either accepted or rejected depending
	on the criteria defined within the Architecture Governance Framework.
	The Architecture Compliance assessment report will include details as
	described.
	
	Dispute Resolution
	
	Disputes that have not been resolved through the Architecture Compliance
	and dispensation processes are identified here for further action and
	are documented through the Architecture Compliance assessments and
	dispensation documentation.
	
	Architecture Strategy and Direction Documentation
	
	This describes the architecture strategies, direction, and priorities
	and will only be formulated by the global Architecture Board. It should
	take the form of standard architecture documentation.
	
	Actions Assigned
	
	This is a report on the actions assigned at previous Architecture Board
	meetings. An action tracker is used to document and keep the status of
	all actions assigned during the Architecture Board meetings and should
	consist of at least the following information:
	
	-   Reference
	-   Priority
	-   Action description
	-   Action owner
	-   Action details
	-   Date raised
	-   Due date
	-   Status
	-   Type
	-   Resolution date
	
	Contract Documentation Management
	
	This is a formal acceptance of updates and changes to architecture
	documentation for onward publication.
	
	Any Other Business (AOB)
	
	Description of issues not directly covered under any of the above. These
	may not be described in the agenda but should be raised at the beginning
	of the meeting. Any supporting documentation must be managed as per all
	Architecture Governance documentation.
	
	Schedule of Meetings
	
	All meeting dates should be detailed and published.
	
snippet togaf_reference-models_digital-business-reference-model_4.4.3_Business_Capability_Model "4.4.3 Business Capability Model"
	
	The development of the Business Capability Model is essential to enable
	the consistent definition of business capabilities within the
	enterprise. The Business Capability Model thus provides the visual
	blueprint of all the business capabilities and their relationships at an
	appropriate level of decomposition, logically grouped into different
	categories or perspectives to support more effective analysis, planning,
	and improvement of the respective business capabilities within the
	enterprise. Each business capability is thus also decomposed into a
	specific combination of roles, processes, information, and tools that
	enable its implementation.
	
	The following high-level categorization for business capabilities should
	be considered by the enterprise developing the Business Capability
	Model:
	
	-   Customer-Facing and Marketing-Focused Capabilities – external-facing
	    business capabilities that are focused on enabling customer access
	    to the business services, through various service channels
	-   Service Delivery Management Capabilities – business operations
	    capabilities that are necessary for the delivery of the products and
	    services of the enterprise for direct revenue generation
	-   Service Delivery Enabling Capabilities – the business capabilities
	    that are not at the core of operations, but are necessary for the
	    execution of service delivery management
	-   Shared & Support Capabilities – business capabilities that are
	    shared across the enterprise for administration and support of all
	    other business capabilities within the enterprise
	
snippet togaf_guides_index_4.4.3_Capability_Architecture "4.4.3. Capability Architecture"
	
	Capability Architecture is the lowest level of architecture detail. It
	is intended to further elaborate the Segment Architecture to a level of
	detail sufficient to be used directly by delivery teams to implement the
	solution. Like Segment Architectures, many Capability Architectures may
	be developed in parallel.
	
	Capability Architecture iterations support the definition of roadmaps
	based on architecture specifications considering the different elements
	and specifications for the target solution and addressing
	interdependencies. In a DevOps chain, Capability Architecture provides
	direct input to Continuous Integration (CI) and Continuous Deployment
	(CD). Capability Architecture outputs may be specific to one feature
	delivery and therefore to one delivery team (for example, a definition
	of some functional behavior), or may be cross-cutting across many
	features and teams (for example, a definition of an Application
	Programming Interface (API) management approach).
	
	A Capability Architecture delivered by a sprint or even by a set of
	sprints depending on the scope should be incrementally and iteratively
	integrated into a delivery pipeline.
	
	Key advantages for an Agile enterprise doing Capability Architecture
	are:
	
	-   Provides just enough detail from the higher-level architectures to
	    define the implementation, and provides feedback to update the
	    higher levels where necessary
	
	-   Developed Just-In-Time (JIT), to provide a forward “solution runway”
	    for delivery sprints to consume, while avoiding unnecessary
	    constraints
	
	-   Defines and refines the user stories that will be implemented by the
	    different Agile teams
	
	-   Enables quality assurance and compliance activities for the solution
	    deployment
	
	-   Enables traceability to confirm that the original objectives of the
	    Strategic Architecture are being met
	
	The final outcome from the Capability Architecture is the solution
	specification that will be constructed and deployed on demand following
	the architecture guidelines, metrics, and compliance considerations by
	Agile teams.
	
	In this context, Agile delivery refers to delivering architecture
	specifications in an Agile way that will support subsequent Agile
	implementation (Agile solution delivery).
	
	One important remark is the need to address the “fail fast” approach
	through the Strategic, Segment, and Capability Architectures; therefore,
	even though not explained in detail, the continuous review and
	retrospective of the specifications delivered should be tested so the
	adjustments needed can be addressed on time. For this retrospective to
	succeed it is key to have cross-level collaboration and governance (this
	will be explained in detail in the next section). Therefore, having
	interdisciplinary autonomous teams is key. For more details on
	retrospective and sprint planning and reviews, see Section 3.2.2 in the
	TOGAF^(®) Series Guide: Applying the TOGAF ADM using Agile Sprints [4].
	
	So, at the level of Capability Architecture and based on the landscape
	and vision provided by the Strategic and Segment Architectures, the
	conception for a solution of any type can also be designed and
	prototyped with the objective to be tested in the implementation
	environment or internally very quickly. This is a good way to keep an
	active outside-in view and harvest input to put together a new and
	appealing solution. To succeed in this, it is very important to work
	with interdisciplinary teams to have not only a technical view or a new
	product but, above all, the business view.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4.3_Enterprise_Architecture_Capabilities_and_Services_Team_of_Teams "4.4.3. Enterprise Architecture Capabilities and Services: Team of Teams"
	
	In addition to the Enterprise Architecture capabilities in the prior
	context, the following Enterprise Architecture capabilities would be
	useful in the Team of Teams context:
	
	-   Prior capabilities that could be deeper:
	
	    -   The ability to respond to questions concerning risk on demand;
	        e.g., data governance, standards compliance governance
	
	    -   The ability to communicate minimum business and technical
	        standards for the digital product, especially data access and
	        sharing standards, application portability, interoperation,
	        middleware
	
	-   New capabilities in this context:
	
	    -   The ability to understand the various parts of the organization
	        and their part in the organization’s value stream
	
	    -   The ability to understand sourcing opportunities
	
	    -   The ability to understand processes in place
	
	    -   The ability to understand the bigger operational picture of the
	        digital portfolio
	
	    -   The ability to understand reusable assets (processes, services,
	        components, data) for a particular digital product
	
	In addition to the Enterprise Architecture services from the Team
	context, the following additional Enterprise Architecture services
	should be considered:
	
	-   Architecture Project Planning Services
	
	    -   Provides a resourced project plan and statement of architecture
	        work at the appropriate level of detail that matches the
	        organization’s change process
	
	        This service delivers:
	
	        -   Statement of Architecture Work, including scope
	
	        -   Resources and tools
	
	        -   Expected activities to support and enable
	
	-   Architecting Tailoring Services
	
	    -   Maps out how Enterprise Architects provide value and evolve the
	        architecture data in lockstep with an organization’s processes
	
	        This service delivers:
	
	        -   Course of action, covering:
	
	            -   Iteration
	
	            -   How to address the landscape with various levels
	                (strategic, segment, capability, etc.)
	
	            -   Tailoring for frameworks, styles, and/or constraints to
	                produce the right deliverables at the right time
	
	-   Architecture Vision and Strategy Services
	
	    -   Documents the vision that drives the architecting efforts
	        including articulating the value proposition and Key Performance
	        Indicators (KPIs)
	
	        This service delivers:
	
	        -   Expected business value
	
	        -   Expected performance improvements
	
	        -   Intent to support
	
	        -   Intended uses of the architecture and value
	
	-   Architecture Modeling and Documentation Services (MVA)
	
	    -   Provides modeling of architectures (Minimum Viable Architecture
	        (MVA)) whether Enterprise, Business, Information, Application,
	        Technology, Infrastructure, Systems, or Solution Architecture
	
	        This service delivers:
	
	        -   Baseline, Target, or Transition Architectures
	
	-   Architecture Integration Services
	
	    -   Provides analysis (across landscape, dependencies, gaps, and
	        solutions) of relevant architectures that pertain to a
	        particular project based on a given update to a particular
	        architecture; for example, to ensure that all the interrelated
	        architectures work together
	
	        This service delivers:
	
	        -   Updates to all relevant architectures
	
	-   Digital Product Release Support Services
	
	    -   Provides on-demand guidance on release issues based on the
	        current state of the enterprise
	
	        This service delivers:
	
	        -   Release guidance
	
	-   Portfolio Management Support Services (including Asset Management,
	    Acquisitions)
	
	    -   Provides on-demand analysis and recommendations for the
	        portfolio of investments required to meet the business goals of
	        an organization over a time horizon based on the current state
	        of the enterprise:
	
	        -   Prioritization of portfolio items report
	
	        -   Acquisition recommendation and rationale
	
	-   Enterprise Analysis and Assessment Service
	
	    -   Provides support to various enterprise processes such as
	        portfolio management, program management, project management,
	        change management, risk management (impact), etc. honed for
	        specific subjects such as readiness, concepts, risks,
	        capabilities, governance, impact, process optimization,
	        security, laws and regulations
	
	        This service delivers:
	
	        -   Assessment report
	
	        -   Recommendations
	
	        -   Supporting information
	
	The following are Enterprise Architecture services previously
	identified, but will be done in more depth in the Team of Teams context:
	
	-   Architecture and Standards Guidance Service
	
	    -   Provides guidance to developing organizations on using the
	        architecture and implementing standards.
	
	        This service delivers:
	
	        -   Business recommendations
	
	        -   Policy recommendations (especially data access and sharing
	            standards)
	
	        -   Technical recommendations (especially data access and
	            sharing standards, application portability, interoperation,
	            middleware)
	
	-   Risk Management Services
	
	    -   Provides analysis, assessments, and recommendations for risk
	        mitigation based on the goals of the organization
	
	        This service delivers:
	
	        -   Risk identification report (focusing on data governance,
	            standards compliance governance)
	
	        -   Risk assessment report (focusing on data governance,
	            standards compliance governance)
	
	        -   Risk mitigation report (focusing on data governance,
	            standards compliance governance)
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4.4_Enterprise_Architecture_Capabilities_and_Services_Enduring_Enterprise "4.4.4. Enterprise Architecture Capabilities and Services: Enduring Enterprise"
	
	In addition to the Enterprise Architecture capabilities in the prior
	context, the following Enterprise Architecture capabilities would be
	useful in the Enduring Enterprise context:
	
	-   The ability to understand mergers and acquisitions
	
	-   The ability to understand the bigger operational picture of the
	    enterprise
	
	-   The ability to understand the components of the enterprise;
	    services, interdependencies, costs, data usage
	
	-   The ability to understand enterprise impact; e.g., optimize for the
	    enterprise, trade-offs
	
	-   The ability to identify mission-critical people, processes, and
	    systems
	
	-   The ability to understand what it takes to maintain the business
	    when stressed
	
	-   The ability to identify and rationalize stakeholder needs across the
	    enterprise
	
	Of the Enterprise Architecture capabilities identified in previous
	contexts, the following Enterprise Architecture capabilities would be
	deeper:
	
	-   The ability to respond to questions concerning risk on demand
	    (deeper)
	
	-   The ability to assess interoperability and transparency needs
	    (deeper)
	
	-   The ability to understand all interdependencies (integrating people,
	    process, and technology)
	
	-   The ability to understand the various parts of the organization and
	    their part in the organizations value stream (across the enterprise)
	
	In addition to the services from the Team of Teams context, the
	following Enterprise Architecture services should be considered:
	
	-   Architecture Compliance Development Services (Business, Information,
	    Application, Infrastructure, Systems, etc.)
	
	    -   Provides specific and actionable compliance criteria for an
	        architecture whether Enterprise, Business, Information,
	        Application, Technology, Infrastructure, Systems, or Solution
	        Architecture
	
	        This service delivers:
	
	        -   Compliance criteria
	
	        -   Guidance for compliance
	
	        -   Recommendations for evidence
	
	-   Compliance Assessment and Analysis Service
	
	    -   Provides assessments and analysis of how standards identified in
	        the pertinent architectures are being implemented
	
	        This service delivers:
	
	        -   Solutions assessment reports
	
	        -   Interoperability assessment report
	
	-   Capability Planning Service
	
	    -   Provides an holistic view of all it takes to improve and/or to
	        provide specific capabilities
	
	        This service delivers:
	
	        -   Capability report detailing steps to improve or develop a
	            new capability (people, process, technology, etc.) with
	            roadmaps
	
	-   Enterprise Architecture Development Process Improvement Service
	
	    -   This service provides an assessment of, and recommendations for
	        improving, the delivery process of an Enterprise Architecture
	        service provider
	
	        This service delivers:
	
	        -   Assessment report
	
	        -   Recommendations for improvement
	
	The following are Enterprise Architecture services previously
	identified, but will be done in more depth in the Enduring Enterprise
	context:
	
	-   Business Value Assessment and Analysis Service
	
	    -   Provides on-demand assessment and analysis of business value
	        based on the current state of the landscape
	
	        This service delivers:
	
	        -   Competitive assessment report
	
	        -   Capability assessment report
	
	        -   Value versus risk matrix
	
	-   Stakeholders Management Services
	
	    -   Provides capabilities to identify, understand, decide upon, and
	        engage stakeholders based on the scope of a given effort
	
	        This service delivers:
	
	        -   Stakeholder identification report
	
	        -   Stakeholder engagement strategy and plan
	
	        -   Stakeholder needs report (deeper focus on interoperation and
	            integration)
	
	-   Architecture Integration Services
	
	    -   Provides analysis (across landscape, dependencies, gaps, and
	        solutions) of relevant architectures that pertain to a
	        particular project based on a given update to a particular
	        architecture; for example, to ensure that all the interrelated
	        architectures work together
	
	        This service delivers:
	
	        -   Updates to all relevant architectures
	
	-   Enterprise Analysis and Assessment Service
	
	    -   Provides support to various enterprise processes such as
	        portfolio management, program management, project management,
	        change management, risk management (impact), etc. honed for
	        specific subjects such as readiness, concepts, risks,
	        capabilities, governance, impact, process optimization,
	        security, laws and regulations, etc.
	
	        This service delivers:
	
	        -   Assessment report
	
	        -   Recommendations
	
	        -   Supporting information
	
	-   Risk Management Services
	
	    -   Provides analysis, assessments, and recommendations for risk
	        mitigation based on the goals of the organization
	
	        This service delivers:
	
	        -   Risk identification report (focusing on data governance,
	            standards compliance governance)
	
	        -   Risk assessment report (focusing on data governance,
	            standards compliance governance)
	
	        -   Risk mitigation report (focusing on data governance,
	            standards compliance governance)
	
snippet togaf_guides_index_4.4.4_Governance_in_Architecture_Iterations "4.4.4. Governance in Architecture Iterations"
	
	Architectural governance is necessary to ensure that solutions stay on
	track to achieve business targets (refer to KPIs from the Strategy
	level) and compliance and regulatory requirements. It also ensures the
	integrity of the overall endeavor through successive levels of
	architecture and solution implementation. Governance is also a key
	component of risk management. It is often through governance activities
	that wider impacts of local changes are recognized and addressed.
	Governance also has a role in providing feedback up through architecture
	levels where unforeseen difficulties have emerged at lower levels or
	during implementation.
	
	The practical application of governance should be a collaborative and
	continuous effort between architecture teams at different levels, and
	between architects and delivery teams. In broad terms, the role of the
	governor is more that of an intelligent advisor embedded within a team
	rather than an occasionally visiting policeman. Governance should not be
	deferred until the final iteration before implementation, otherwise the
	benefits of an Agile approach are likely to be lost through rework and
	delays.
	
	The value that Enterprise Architecture governance provides to Agile
	Architecture is to provide the set of principles and policies to guide
	the implementation (the guardrails mentioned in the Strategic level),
	the set of standards and compliance considerations. It also ensures that
	appropriate governance structures and approval are in place in a way
	that does not constrain the pace of Agile development. Again, the
	architect has a more consultative role in this space since they should
	also be checking that just the required level of architecture
	descriptions are in place to guide the further implementation (avoiding
	BDUF). Governance is also key to maintaining good communication and
	engagement between the different autonomous teams, providing guidance
	while giving them the required freedom to deliver.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4.5_Enterprise_Architecture_Services_Emergence_Model "4.4.5. Enterprise Architecture Services Emergence Model"
	
	The matrix in Figure 4, “The Enterprise Architecture Service Emergence
	Model” summarizes the Enterprise Architecture services per context. It
	constitutes the Enterprise Architecture Service Emergence Model.
	
	[chap04 3 intro 3e836]
	
	Figure 4. The Enterprise Architecture Service Emergence Model
	
snippet togaf_introduction_4_Definitions_4.40_Deliverable "4.40 Deliverable"
	
	An architectural work product that is contractually specified and in
	turn formally reviewed, agreed, and signed off by the stakeholders.
	
	Note:
	    Deliverables represent the output of projects and those deliverables
	    that are in documentation form will typically be archived at
	    completion of a project, or transitioned into an Architecture
	    Repository as a reference model, standard, or snapshot of the
	    Architecture Landscape at a point in time.
	
snippet togaf_introduction_4_Definitions_4.41_Digital_Architecture "4.41 Digital Architecture"
	
	The inclusive architecture focused on a combination of Enterprise
	Architecture, data science, telecommunications and IoT, security,
	artificial intelligence, cognitive science, neuroscience, robotics, and
	social medias to deliver operational services.
	
snippet togaf_introduction_4_Definitions_4.42_Enterprise "4.42 Enterprise"
	
	The highest level (typically) of description of an organization and
	typically covers all missions and functions. An enterprise will often
	span multiple organizations.
	
snippet togaf_introduction_4_Definitions_4.43_Enterprise_Architecture_Service "4.43 Enterprise Architecture Service"
	
	An encapsulated element of Enterprise Architecture capability that
	delivers specific Enterprise Architecture functionality.
	
snippet togaf_introduction_4_Definitions_4.44_Enterprise_Continuum "4.44 Enterprise Continuum"
	
	A categorization mechanism for classifying architecture and Solution
	Building Blocks (SBBs) as they evolve from generic to specific
	applicability (or vice versa).
	
	See also 4.10 Architecture Continuum and 4.74 Solutions Continuum .
	
snippet togaf_introduction_4_Definitions_4.45_Foundation_Architecture "4.45 Foundation Architecture"
	
	Generic building blocks, their inter-relationships with other building
	blocks, combined with the principles and guidelines that provide a
	foundation on which more specific architectures can be built.
	
snippet togaf_introduction_4_Definitions_4.46_Framework "4.46 Framework"
	
	A structure for content or process that can be used as a tool to
	structure thinking, ensuring consistency and completeness.
	
snippet togaf_introduction_4_Definitions_4.47_Gap "4.47 Gap"
	
	A statement of difference between two states. Used in the context of gap
	analysis, where the difference between the Baseline and Target
	Architecture is identified.
	
	Note:
	    Gap analysis is described in the TOGAF Standard — ADM Techniques.
	
snippet togaf_introduction_4_Definitions_4.48_Governance "4.48 Governance"
	
	The discipline of monitoring and guiding the management of a business
	(or IS/IT landscape) to deliver the business outcomes required.
	
	See also 4.14 Architecture Governance , 4.30 Business Governance , and
	B.27 Operational Governance in B. Glossary of Supplementary Definitions
	.
	
snippet togaf_introduction_4_Definitions_4.49_Information "4.49 Information"
	
	Any communication or representation of facts, data, or opinions, in any
	medium or form, including textual, numerical, graphic, cartographic,
	narrative, or audio-visual forms.
	
snippet togaf_introduction_4_Definitions_4.4_Application_Component "4.4 Application Component"
	
	An encapsulation of application functionality aligned to implementation
	structure, which is modular and replaceable. It encapsulates its
	behavior and data, provides services, and makes them available through
	interfaces.
	
	Note:
	
	    For example, a business application such as an accounting, payroll,
	    or CRM system.
	
	    An application component usually maintains a data component. It is
	    enabled by technology services provided by technology components.
	
snippet togaf_guides_index_4.4_Architecture_Levels_and_Iterations "4.4. Architecture Levels and Iterations"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.4_Enterprise_Architecture_Capabilities_and_Services "4.4. Enterprise Architecture Capabilities and Services"
	
	Enterprise Architecture capabilities can be described as the ability to
	realize something within certain constraints and under certain
	conditions. Enterprise Architecture services are the delivery mechanism
	for Enterprise Architecture capabilities. In this section, we list the
	Enterprise Architecture capabilities supported by the TOGAF Standard
	that could be of use in each of the contexts of the DPBoK Standard, and
	then describe the Enterprise Architecture services that deliver those
	capabilities. The capabilities identified here were honed by analyzing
	both the implications of the principles in the prior section and the
	content from the DPBoK Standard – fundamentally by asking the question:
	“What Enterprise Architecture capabilities would be useful here?”.
	
	Enterprise Architecture capabilities can be written in a manner such as:
	the Enterprise Architecting ability (skilled people, repeatable process,
	and material) to \{do x\} under circumstances \{y\} within time window \{z\}.
	Of course an Enterprise Architecture service can be engaged to deliver
	an Enterprise Architecture capability in any of the contexts, however it
	is understood that the emergence model does not need all services in all
	contexts.
	
	[chap04 3 intro f8c39]
	
	Figure 3. Enterprise Architecture Services to DPBoK Standard Emergence
	Model
	
	Figure 3, “Enterprise Architecture Services to DPBoK Standard Emergence
	Model” summarizes the Enterprise Architecture services that should be
	considered per context to deliver Enterprise Architecture capabilities.
	The following sections elaborate on the Enterprise Architecture services
	and Enterprise Architecture capabilities most pertinent for each
	context. The Digital Practitioner would be wise to consider using the
	Enterprise Architecture services listed per context. The Enterprise
	Architecture service provider must consider the context and deliver in a
	timely manner, in line with the operation tempo of the given context.
	
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4.4_Operation_of_the_Architecture_Board "4.4 Operation of the Architecture Board"
	
	This section describes the operation of the Architecture Board
	particularly from the governance perspective.
	
snippet togaf_adm_4_B_Business_Architecture_4.4_Outputs "4.4 Outputs"
	
	The outputs of Phase B may include, but are not restricted to:
	
	-   Refined and updated versions of the Architecture Vision phase
	    deliverables, where applicable, including:
	    -   Statement of Architecture Work (see the TOGAF Standard —
	        Architecture Content), updated if necessary
	    -   Validated business principles, business goals, and business
	        drivers (see the TOGAF Standard — Architecture Content), updated
	        if necessary
	    -   Architecture Principles (see the TOGAF Standard — Architecture
	        Content)
	-   Draft Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Baseline Business Architecture, Approved, if appropriate
	    -   Target Business Architecture, Approved, including:
	        -   Organization structure — identifying business locations and
	            relating them to organizational units
	        -   Business goals and objectives — for the enterprise and each
	            organizational unit
	        -   Business functions — a detailed, recursive step involving
	            successive decomposition of major functional areas into
	            sub-functions
	        -   Business capabilities — the abilities that a business needs
	            to possess or exchange to achieve its goals and objectives
	        -   Business services — the services that support the business
	            by encapsulating a unique "elements of business behavior"; a
	            service offered external to the enterprise may be supported
	            by business services
	        -   Products — output generated by the business to be offered to
	            customers; products include materials and/or services
	        -   Business processes, including measures and deliverables
	        -   Business roles, including development and modification of
	            skills requirements
	        -   Business data model
	        -   Correlation of organization/business functions and business
	            capabilities — relate business capabilities to
	            organizational units in the form of a matrix report
	    -   Views corresponding to the selected viewpoints addressing key
	        stakeholder concerns
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including such Business
	    Architecture requirements as:
	    -   Gap analysis results
	    -   Technical requirements — identifying, categorizing, and
	        prioritizing the implications for work in the remaining
	        architecture domains; for example, by a dependency/priority
	        matrix (e.g., guiding trade-off between speed of transaction
	        processing and security); list the specific models that are
	        expected to be produced (for example, expressed as primitives of
	        the Zachman Framework)
	    -   Updated business requirements
	-   Business Architecture components of an Architecture Roadmap (see the
	    TOGAF Standard — Architecture Content)
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase.
	
snippet togaf_guides_agile-sprints_4.4_Phase_G_Implementation_Governance "4.4 Phase G – Implementation Governance"
	
	The objective of Phase G – conformance with the Target Architecture and
	Architecture Vision – is realized differently in sprints than in
	traditional approaches. Firstly, there is a less formal approach to
	compliance and, secondly, short sprint cycles allow for early discovery
	of non-compliant solutions.
	
	-   Confirm scope and priorities for deployment with development
	    management
	
	This is usually done in the sprint start, when the sprint goal and
	sprint scope are defined.
	
	-   Identify deployment resources and skills
	
	This is usually done at each sprint start for every implementation.
	
	-   Guide development of solutions deployment
	
	This is an informal process of guiding development teams through
	implementation.
	
	-   Perform Enterprise Architecture compliance reviews
	
	The difference with the traditional approach is in the way the
	compliance review is performed. This is an ongoing process, as opposed
	to the traditional gate/review process at a specific point in time.
	
	-   Implement business and IT operations
	
	After each sprint with an approved demo a solution increment can be
	deployed.
	
	-   Perform post-implementation review and close the implementation
	
	As reviews in sprints are an ongoing process rather than end-user
	testing style reviews, this step may be the formal summary of all former
	reviews of parts of the implementation.
	
snippet togaf_architecture-skills-framework_4.4_Proficiency_Levels "4.4 Proficiency Levels"
	
	The TOGAF Architecture Skills Framework identifies four levels of
	knowledge or proficiency in any area:
	
	[]
	
snippet togaf_master-data-management_4.4_Reference_C-MDM_Roadmap_Steps_TOGAF_ADM_Phase_F "4.4 Reference C-MDM Roadmap Steps (TOGAF ADM Phase F)"
	
	This section proposes reference C-MDM roadmap steps to support the
	architecture journey that can be used to structure TOGAF ADM Phase F:
	Migration Planning.
	
	[]
	
	Figure 7: Reference C-MDM Roadmap Steps
	
	The steps (plateaus) illustrated in Figure 7 are described in Table 5.
	
	Table 5: C-MDM Roadmap Steps (Plateaus)
	
	+-----------------------------------+-----------------------------------+
	| Step (Plateau)                    | Description                       |
	+===================================+===================================+
	| Step 1:                           | Central customer data store, but  |
	| Consolidated Customer Database    | without true golden record (no    |
	|                                   | effective de-duplication, poor    |
	| []                                | data quality)                     |
	|                                   |                                   |
	|                                   | -   Kernel customer data is       |
	|                                   |     updated in different          |
	|                                   |     operational systems           |
	|                                   | -   This kernel data is           |
	|                                   |     consolidated in an initial    |
	|                                   |     version of                    |
	|                                   |     C-MDM as a first version of   |
	|                                   |     customer golden records       |
	|                                   |                                   |
	|                                   | Use-cases:                        |
	|                                   |                                   |
	|                                   | -   This first version enables    |
	|                                   |     use-cases such as             |
	|                                   |     segmentation, market share    |
	|                                   |     analysis, C360 view, some     |
	|                                   |     campaign management           |
	|                                   |     use-cases; these use-cases    |
	|                                   |     can tolerate errors on the    |
	|                                   |     matching process (100%        |
	|                                   |     accuracy of the               |
	|                                   |     de-duplication is not         |
	|                                   |     mandatory)                    |
	|                                   |                                   |
	|                                   | Data quality:                     |
	|                                   |                                   |
	|                                   | -   Matching algorithms are       |
	|                                   |     executed to evaluate customer |
	|                                   |     duplicate rates               |
	|                                   | -   Customers data quality        |
	|                                   |     dashboards are built to share |
	|                                   |     insights on customer data     |
	|                                   |     quality: completeness,        |
	|                                   |     uniqueness, consistency, etc. |
	|                                   |                                   |
	|                                   | Trigger for next step:            |
	|                                   |                                   |
	|                                   | -   Need to improve data quality  |
	|                                   |     and support customer-facing   |
	|                                   |     business processes            |
	|                                   |                                   |
	|                                   | (Note: The “golden record” of a   |
	|                                   | customer is the data values about |
	|                                   | the customer considered to be the |
	|                                   | truth for the organization, even  |
	|                                   | if other versions of the data can |
	|                                   | exist in other systems.)          |
	+-----------------------------------+-----------------------------------+
	| Step 2:                           | Analytical C-MDM focused on       |
	| Non-intrusive Customer Data Point | golden record, de-duplication,    |
	| of Truth                          | and data quality improvement      |
	|                                   |                                   |
	| []                                | -   Kernel data is still updated  |
	|                                   |     in different operational      |
	|                                   |     systems                       |
	|                                   | -   C-MDM provides a golden       |
	|                                   |     record for each identified    |
	|                                   |     unique person and attributes  |
	|                                   |     a stable organization         |
	|                                   |     customer ID; this golden      |
	|                                   |     record can be propagated in   |
	|                                   |     operational systems but is    |
	|                                   |     not synchronized              |
	|                                   | -   A dedicated central C-MDM     |
	|                                   |     team is responsible for data  |
	|                                   |     stewardship including         |
	|                                   |     confirming de-duplication,    |
	|                                   |     analyzing data quality        |
	|                                   |     issues, data correction, and  |
	|                                   |     completion                    |
	|                                   |                                   |
	|                                   | Use-cases:                        |
	|                                   |                                   |
	|                                   | -   Address engagement use-cases: |
	|                                   |     send automatic alerts to the  |
	|                                   |     CRM system on new address or  |
	|                                   |     bad address detection,        |
	|                                   |     display golden record to      |
	|                                   |     agents                        |
	|                                   |                                   |
	|                                   | Data quality:                     |
	|                                   |                                   |
	|                                   | -   Some data quality issues are  |
	|                                   |     tackled at root cause in the  |
	|                                   |     operational source system     |
	|                                   |     thanks to manual feedback     |
	|                                   |     loops of the central C-MDM    |
	|                                   |     team                          |
	|                                   | -   Data quality increases        |
	|                                   |                                   |
	|                                   | Trigger for next step:            |
	|                                   |                                   |
	|                                   | -   Concurrent updates generate   |
	|                                   |     workload that creates an      |
	|                                   |     appetite for more             |
	|                                   |     integration; the value of     |
	|                                   |     shared customer data is       |
	|                                   |     obvious for lines of business |
	|                                   |     and allows sponsorship for    |
	|                                   |     higher impact on the          |
	|                                   |     information system            |
	+-----------------------------------+-----------------------------------+
	| Step 3:                           | Operational C-MDM progressively   |
	| Master Point of Truth             | extending its mastership scope on |
	|                                   | the information system            |
	| []                                |                                   |
	|                                   | -   Kernel customer data is       |
	|                                   |     updated in C-MDM (through     |
	|                                   |     different integration         |
	|                                   |     patterns: services, real-time |
	|                                   |     synchronization, user         |
	|                                   |     interfaces, etc.)             |
	|                                   | -   Automated processes/workflows |
	|                                   |     propagate data changes        |
	|                                   |                                   |
	|                                   | Use-cases:                        |
	|                                   |                                   |
	|                                   | -   Indicators are accurate, such |
	|                                   |     as number of customers        |
	|                                   | -   The operational business      |
	|                                   |     processes and applications in |
	|                                   |     the core business or          |
	|                                   |     engagement are reviewed to    |
	|                                   |     leverage the customer golden  |
	|                                   |     record; this allows           |
	|                                   |     consistent customer           |
	|                                   |     experience across channels    |
	|                                   | -   Customer data quality becomes |
	|                                   |     a competitive advantage in    |
	|                                   |     business partnerships and     |
	|                                   |     allows advanced customer      |
	|                                   |     services                      |
	|                                   |                                   |
	|                                   | Data quality:                     |
	|                                   |                                   |
	|                                   | -   Data quality is reaching      |
	|                                   |     expected target level – high  |
	|                                   |     integration comes with high   |
	|                                   |     data quality requirements: a  |
	|                                   |     wrong merge can lead to a     |
	|                                   |     crisis                        |
	|                                   |                                   |
	|                                   | Trigger for next step:            |
	|                                   |                                   |
	|                                   | -   Continuous communication on   |
	|                                   |     C-MDM value is done to secure |
	|                                   |     sponsorship over several      |
	|                                   |     years – operational systems   |
	|                                   |     are integrated one by one,    |
	|                                   |     increasing the scope of       |
	|                                   |     customer data                 |
	+-----------------------------------+-----------------------------------+
	| C-MDM Target                      | Operational C-MDM across the      |
	|                                   | entire information system         |
	| []                                |                                   |
	|                                   | -   Governance and stewardship on |
	|                                   |     customer data are             |
	|                                   |     institutionalized             |
	|                                   | -   C-MDM covers the full scope   |
	|                                   |     of line of business customer  |
	|                                   |     populations: individuals,     |
	|                                   |     commercials, etc.             |
	|                                   | -   C-MDM is a central piece of   |
	|                                   |     the information system; its   |
	|                                   |     value is proven               |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_reference-models_digital-business-reference-model_4.4_Structural_Domain "4.4 Structural Domain"
	
snippet togaf_reference-models_digital-business-reference-model_4.5.1_Business_Operating_Environment "4.5.1 Business Operating Environment"
	
	The Business Operating Environment is essential to enable consistent
	definition of business processes, organization structure, systems and
	their relationships and guidelines to enable their common understanding,
	standardization, integration, and implementation across the enterprise.
	
	The enterprise should consider various elements of the Business
	Operating Environment at various levels of the enterprise, to address
	specific objectives and for the specific target stakeholders without
	losing the required vertical and horizontal integration needed to enable
	seamless operations and to drive operational efficiencies.
	
	The following layers of category for business processes should be
	considered by the enterprise developing the Business Operating
	Environment:
	
	-   Service Experience and Customer Journey Maps
	
	The customer-focused business process and maps from the perspective of
	the target customers and other external stakeholders to enable service
	experience across the enterprise service channels. The envisaged service
	experience driven by the specific customer touch points with the
	enterprise are essential focus areas when mapping the Service Experience
	and Customer Journey Maps.
	
	-   Value Chain Model and Value Streams
	
	The value stream stages, their relationships, and integration points
	necessary to enable streamlined execution of end-to-end primary,
	enabling, and value-adding activities to create the desired results and
	value for customer, stakeholder, or end user of the enterprise.
	
	-   Business Information Map
	
	The business information objects, their relationship, flows, and their
	association with the respective business processes and systems.
	
	-   Business Process Map
	
	The detailed business process underpinning the various value streams and
	the Service Experience and Customer Journey Maps with the associated
	business rules.
	
	-   Actors, Roles, and Organization Structure
	
	Organization functions, roles, and responsibilities supported by
	appropriate organizational procedures, performance management framework,
	and delegation of authority to enforce operational controls for
	effective organizational monitoring and evaluation.
	
	-   Business Systems and Data Models
	
	The business systems, their relationships, interface points, underlying
	data flows, and technologies to enable the respective business
	processes, value streams, and customer journey maps.
	
snippet togaf_adm_4_B_Business_Architecture_4.5.1_General "4.5.1 General"
	
	A knowledge of the Business Architecture is a prerequisite for
	architecture work in any other domain (Data, Application, Technology),
	and is therefore the first architecture activity that needs to be
	undertaken, if not catered for already in other organizational processes
	(enterprise planning, strategic business planning, business process
	re-engineering, etc.).
	
	In practical terms, the Business Architecture is also often necessary as
	a means of demonstrating the business value of subsequent architecture
	work to key stakeholders, and the return on investment to those
	stakeholders from supporting and participating in the subsequent work.
	
	The scope of work in Phase B is primarily determined by the Architecture
	Vision as set out in Phase A. The business strategy defines the goals
	and drivers and the metrics for success, but not necessarily how to get
	there. That is the role of the Business Architecture, defined in detail
	in Phase B.
	
	This will depend to a large extent on the enterprise environment. In
	some cases, key elements of the Business Architecture may be done in
	other activities; for example, the enterprise mission, vision, strategy,
	and goals may be documented as part of some wider business strategy or
	enterprise planning activity that has its own lifecycle within the
	enterprise.
	
	In such cases, there may be a need to verify and update the currently
	documented business strategy and plans, and/or to bridge between
	high-level business drivers, business strategy, and goals on the one
	hand, and the specific business requirements that are relevant to this
	architecture development effort.
	
	In other cases, little or no Business Architecture work may have been
	done to date. In such cases, there will be a need for the architecture
	team to research, verify, and gain buy-in to the key business objectives
	and processes that the architecture is to support. This may be done as a
	free-standing exercise, either preceding architecture development, or as
	part of Phase A.
	
	In both of these cases, the business scenarios technique (see the TOGAF®
	Series Guide: Business Scenarios), or any other method that illuminates
	the key business requirements and indicates the implied technical
	requirements for IT architecture, may be used.
	
	A key objective is to re-use existing material as much as possible. In
	architecturally more mature environments, there will be existing
	Architecture Definitions, which (hopefully) will have been maintained
	since the last architecture development cycle. Where Architecture
	Descriptions exist, these can be used as a starting point, and verified
	and updated if necessary; see the TOGAF Standard — Architecture Content.
	
	Gather and analyze only that information that allows informed decisions
	to be made relevant to the scope of this architecture effort. If this
	effort is focused on the definition of (possibly new) business
	processes, then Phase B will necessarily involve a lot of detailed work.
	If the focus is more on the Target Architectures in other domains
	(data/information, application systems, infrastructure) to support an
	essentially existing Business Architecture, then it is important to
	build a complete picture in Phase B without going into unnecessary
	detail.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.5.1_Mapping_to_the_Individual_Founder_Context "4.5.1. Mapping to the Individual/Founder Context"
	
	+-----------------------------------+-----------------------------------+
	| Note                              | For modeling, the TOGAF           |
	|                                   | viewpoints can also be delivered  |
	|                                   | using the ArchiMate modeling      |
	|                                   | notation in the ArchiMate® 3.1    |
	|                                   | Specification; see Referenced     |
	|                                   | Documents.                        |
	+-----------------------------------+-----------------------------------+
	
	+-------------+---------------------------+---------------------------+
	| C           | TOGAF ADM Phase –         | Mapping to The Open Group |
	| apabilities | Artifacts                 | Library (see Referenced   |
	| – Aspects   |                           | Documents)                |
	+=============+===========================+===========================+
	| Enterprise  | Preliminary Phase and     | Open Business             |
	| A           | Phase A: strategic and    | Architecture (O-BA) –     |
	| rchitecture | motivation models         | Part II                   |
	| and the     |                           |                           |
	| TOGAF       | Strategy and business     | TOGAF^(®) Series Guide:   |
	| Standard    | entities from the TOGAF   | Business Capabilities     |
	| supporting  | content metamodel used at |                           |
	| the         | this level are: goal,     | TOGAF^(®) Series Guide:   |
	| definition  | objective, measure,       | Value Streams             |
	| of a        | driver, course of action, |                           |
	| digital     | value stream, and         | TOGAF^(®) Series Guide    |
	| strategy    | business capabilities     | Set: Business             |
	|             |                           | Architecture              |
	|             |                           |                           |
	|             |                           | Why Business and IT Must  |
	|             |                           | Co-Create Strategy for a  |
	|             |                           | Digital Enterprise        |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Phases B, C, and D:       | TOGAF^(®) Series Guide    |
	| A           | high-level landscape view | Set: Business             |
	| rchitecture |                           | Architecture              |
	| providing   | High-level models to      |                           |
	| the         | understand and provide a  | The TOGAF Series Guide    |
	| org         | systemic view for the     | applied at solution level |
	| anizational | area of concern at the    | aimed to scale to cover a |
	| landscape   | Individual/Founder level  | more general landscape:   |
	| to          | specially to identify     |                           |
	| understand  | dependencies with other   | TOGAF^(®) Series Guide: A |
	| context and | related areas             | Practitioners’ Approach   |
	| support the |                           | to Developing Enterprise  |
	| digital     | Base for an intentional   | Architecture Following    |
	| products    | architecture – scale to   | the TOGAF^(®) ADM         |
	| positioning | cover just a segment of   |                           |
	| / digital   | the organization or the   |                           |
	| product     | whole landscape – apply   |                           |
	| definition  | the minimum needed in the |                           |
	|             | model (MVA)               |                           |
	|             |                           |                           |
	|             | Entities that can be      |                           |
	|             | applied from the TOGAF    |                           |
	|             | content metamodel can be  |                           |
	|             | found in Figures 2-1 and  |                           |
	|             | 2-2 in the TOGAF Standard |                           |
	|             | – Architecture Content;   |                           |
	|             | see Referenced Documents. |                           |
	|             | Entities grouped in       |                           |
	|             | Business Architecture,    |                           |
	|             | Information Systems       |                           |
	|             | Architecture, and         |                           |
	|             | Technology Architecture.  |                           |
	+-------------+---------------------------+---------------------------+
	| Identify    | Phases B, C, and D: more  | TOGAF^(®) Series Guide    |
	| key         | detailed views – applied  | Set: Business             |
	| c           | per segment, aimed to     | Architecture – Business   |
	| apabilities | scale from solution level | Capabilities, Value       |
	| needed to   | to a portfolio or program | Streams, Organization     |
	| support the | level                     | Mapping, Information      |
	| digital     |                           | Mapping, Business Models  |
	| offerings   | Entities that can be      |                           |
	| (platforms  | applied from the TOGAF    | Information Architecture: |
	| and         | content metamodel can be  | Business Intelligence &   |
	| leverage    | found in Figures 2-1 and  | Analytics and Metadata    |
	| latest      | 2-2 in the TOGAF Standard | Management Reference      |
	| trends)     | – Architecture Content.   | Models                    |
	|             | Entities grouped in       |                           |
	|             | Business Architecture,    | TOGAF^(®) Series Guides   |
	|             | Information Systems       | applied at solution level |
	|             | Architecture, and         | aimed to scale to cover a |
	|             | Technology Architecture.  | more general landscape:   |
	|             |                           |                           |
	|             | Value streams,            | TOGAF^(®) Series Guide: A |
	|             | capabilities map,         | Practitioners’ Approach   |
	|             | information mapping,      | to Developing Enterprise  |
	|             | technology landscape,     | Architecture Following    |
	|             | information systems       | the TOGAF^(®) ADM         |
	|             | landscape                 |                           |
	|             |                           | TOGAF^(®) Series Guide:   |
	|             | Artifacts and tools to    | Digital Technology        |
	|             | address digital           | Adoption: A Guide to      |
	|             | technology adoption       | Readiness Assessment and  |
	|             |                           | Roadmap Development       |
	|             |                           |                           |
	|             |                           | Open Agile Architecture™  |
	|             |                           | Standard, see Chapter 10: |
	|             |                           | “Building Blocks          |
	|             |                           | Overview”                 |
	+-------------+---------------------------+---------------------------+
	| Digital     | Phases B, C, and D        | TOGAF^(®) Series Guide    |
	| services    |                           | Set: Business             |
	| ide         | Business, information,    | Architecture              |
	| ntification | and technology services   |                           |
	| and design  | identification            | TOGAF^(®) Series Guide: A |
	| at          |                           | Practitioners’ Approach   |
	| different   | Applied per segment or    | to Developing Enterprise  |
	| levels,     | domain aimed to scale to  | Architecture Following    |
	| custo       | cover portfolios,         | the TOGAF^(®) ADM         |
	| mer-facing, | programs, and the overall |                           |
	| digital     | organization              | How to Use the TOGAF^(®)  |
	| platforms,  |                           | and IT4IT™ Standards      |
	| and backend | Entities that can be      | Together                  |
	| systems –   | applied from the TOGAF    |                           |
	| service     | content metamodel can be  | TOGAF^(®) Series Guide:   |
	| portfolio   | found in Figures 2-1 and  | Using the TOGAF^(®)       |
	| definition  | 2-2 in the TOGAF Standard | Framework to Define and   |
	|             | – Architecture Content.   | Govern Service-Oriented   |
	|             | Entities grouped in       | Architectures             |
	|             | Business Architecture,    |                           |
	|             | Information Systems       | Open Agile Architecture™  |
	|             | Architecture, and         | Standard, see Chapter 4:  |
	|             | Technology Architecture.  | “Architecture             |
	|             |                           | Development”              |
	+-------------+---------------------------+---------------------------+
	| Customer    | Phases B, C, and D:       | TOGAF^(®) Series Guide    |
	| focus:      | applied to map and        | Set: Business             |
	| customer    | support                   | Architecture              |
	| infor       |                           |                           |
	| mation/data | Customer journey          | Customer                  |
	| management  | definition                | Experience-Driven         |
	| and         |                           | Enterprise Architecture:  |
	| profiling,  | Customer profiling        | How to Revitalize your    |
	| value       |                           | DSP Business              |
	| chain, and  | Customer data management  |                           |
	| value       |                           | Open Agile Architecture™  |
	| stream      | Value stream and          | Standard, see Chapter 4:  |
	|             | capability mapping for    | “Architecture             |
	|             | customer journey support  | Development”              |
	|             |                           |                           |
	|             | Entities that can be      | Open Agile Architecture™  |
	|             | applied from the TOGAF    | Standard, see Chapter 10: |
	|             | content metamodel can be  | “Building Blocks          |
	|             | found in Figures 2-1 and  | Overview”                 |
	|             | 2-2 in the TOGAF Standard |                           |
	|             | – Architecture Content.   |                           |
	|             | Entities grouped in       |                           |
	|             | Business Architecture,    |                           |
	|             | Information Systems       |                           |
	|             | Architecture, and         |                           |
	|             | Technology Architecture,  |                           |
	|             | especially the following: |                           |
	|             | value streams, business   |                           |
	|             | capabilities, course of   |                           |
	|             | action, business          |                           |
	|             | information service,      |                           |
	|             | business services,        |                           |
	|             | contracts, events,        |                           |
	|             | products, actors, roles,  |                           |
	|             | function, and             |                           |
	|             | organization unit.        |                           |
	+-------------+---------------------------+---------------------------+
	| Product     | Phases B, C, and D        | Open Agile Architecture™  |
	| leadership: | applied to deliver a      | Standard, see Chapter 4:  |
	| product     | product architecture;     | “Architecture             |
	| design –    | refer to the artifacts in | Development”              |
	| the TOGAF   | the previous rows applied |                           |
	| ADM applied | to the product            | Open Agile Architecture™  |
	| to define a | architecture              | Standard, see Chapter 10: |
	| product     |                           | “Building Blocks          |
	| a           | Entities that can be      | Overview”                 |
	| rchitecture | applied from the TOGAF    |                           |
	| from        | content metamodel can be  | TOGAF^(®) Series Guide    |
	| project to  | found in Figures 2-1 and  | Set: Business             |
	| product     | 2-2 in the TOGAF Standard | Architecture              |
	| focus       | – Architecture Content.   |                           |
	|             | Entities grouped in       | TOGAF^(®) Series Guide:   |
	| Operational | Business Architecture,    | Enabling Enterprise       |
	| excellence: | Information Systems       | Agility, see Chapter 5    |
	| Enterprise  | Architecture, and         |                           |
	| A           | Technology Architecture.  |                           |
	| rchitecture |                           |                           |
	| supporting  |                           |                           |
	| operational |                           |                           |
	| i           |                           |                           |
	| mprovements |                           |                           |
	| (           |                           |                           |
	| operational |                           |                           |
	| model       |                           |                           |
	| definition  |                           |                           |
	| and         |                           |                           |
	| i           |                           |                           |
	| mprovement) |                           |                           |
	+-------------+---------------------------+---------------------------+
	
	: Table 2. Mapping to the Individual/Founder Context
	
snippet togaf_adm_4_B_Business_Architecture_4.5.2_Developing_the_Baseline_Description "4.5.2 Developing the Baseline Description"
	
	If an enterprise has existing Architecture Descriptions, they should be
	used as the basis for the Baseline Description. This input may have been
	used already in Phase A in developing the Architecture Vision, such as
	the business capability map or a core set of value streams as introduced
	in 3.5.2 Creating the Architecture Vision , and may be sufficient in
	itself for this baseline.
	
	The reasons to update these materials include having a missing business
	capability, a new value stream, or changed organizational unit that has
	not previously been assessed within the scope of the Enterprise
	Architecture project. 4.5.3 Applying Business Capabilities through 4.5.6
	Applying Information Maps address the use of core Business Architecture
	methods to model the Business Architecture driven by the strategy scope
	from Phase A. Note that putting these methods into action to drive a
	focus and target state for later architecture work does not mean that
	the fundamental frameworks from Phase A, such as a common enterprise
	business capability map, will necessarily change but rather that they
	are applied in a manner driven by the scope and needs of the specific
	Enterprise Architecture project.
	
	If no Architecture Descriptions exist, information should be gathered
	and Business Architecture models developed.
	
	Whatever the scope of the specific project, it is important to determine
	whether it is the fundamental view of the business that is changing or
	the usage of those views to determine scope, priorities, and
	relationships for the specific project in relation to the rest of the
	enterprise.
	
snippet togaf_reference-models_digital-business-reference-model_4.5.2_Digital_Enablement "4.5.2 Digital Enablement"
	
	The need for Digital Enablement is increasingly becoming inevitable to
	drive the realization of the Digital Enterprise. The Digital
	Transformation required for the radical, fundamental change towards
	becoming a Digital Enterprise is now becoming inherent for consideration
	in all parts of the enterprise.
	
	The Digital Enablement elements are cross-cutting and essential to
	enable enterprises to translate their business model, Operating Model,
	business capabilities, and Business Operating Environment into a set of
	specific responses to the digital economy.
	
	Digital Enablement is thus essential to enable enterprises to become
	digital and agile enterprises, taking into consideration the specific
	context of the industry within which the enterprise operates.
	
	The following are the key pillars for considerations for Digital
	Enablement within the enterprise:
	
	-   Digital Principles and Strategy
	
	The principles and strategies that are necessary to drive the common
	agenda for digitalization to enable a Digital Enterprise. These
	principles and strategies must also include the Digital Architecture
	blueprint and transformation roadmap, that will enable implementation of
	digital capabilities for a Digital Enterprise.
	
	-   Digital Governance
	
	The competencies necessary to enable effective governance, risk, and
	security management for digital delivery to enable Digital Value
	recognition, effective digital management, and optimize governance and
	management interfaces to enable the digital journey.
	
	-   Digital Products and Services
	
	The competencies necessary to enable digital product and service
	management to enable continuous provision of customer-facing products
	and services.
	
	-   Agile Digital Delivery Model
	
	The competencies necessary for a customer-centric approach to define,
	build, and release a continuous flow of valuable products and services
	to customers and users of Digital Products and Services.[2]
	
	-   Digital Platforms
	
	Underlying business processes, systems, skills, resources and digital
	technologies to enable digitally consumable product and service to
	create or enable business value.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.5.2_Mapping_to_the_Team_Context "4.5.2. Mapping to the Team Context"
	
	+-----------------------------------+-----------------------------------+
	| Note                              | For modeling, the TOGAF           |
	|                                   | viewpoints can also be delivered  |
	|                                   | using the ArchiMate modeling      |
	|                                   | notation in the ArchiMate® 3.1    |
	|                                   | Specification.                    |
	+-----------------------------------+-----------------------------------+
	
	It is important to note that the recommendations provided in Section
	4.5.1, “Mapping to the Individual/Founder Context” are also applicable
	at the Team level since the approach and models are suitable to scale.
	
	So in this mapping, the emphasis is on how to support coordination
	across teams.
	
	+-------------+---------------------------+---------------------------+
	| C           | TOGAF ADM Phase –         | Mapping to The Open Group |
	| apabilities | Artifacts                 | Library (see Referenced   |
	| – Aspects   |                           | Documents)                |
	+=============+===========================+===========================+
	| Enterprise  | The TOGAF ADM applied in  | TOGAF^(®) Series Guide:   |
	| A           | an Agile way              | Enabling Enterprise       |
	| rchitecture |                           | Agility                   |
	| supporting  | Preliminary Phase and     |                           |
	| pro         | Phase A to support user   | TOGAF^(®) Series Guide:   |
	| jects/Agile | stories and epics –       | Applying the TOGAF^(®)    |
	| delivery    | intentional architecture  | ADM using Agile Sprints   |
	| teams       | – Enterprise Architecture |                           |
	|             | supporting Agile teams    | How to Use the            |
	| Enterprise  |                           | ArchiMate^(®) Modeling    |
	| A           |                           | Language to Support       |
	| rchitecture |                           | TOGAF^(®) Framework       |
	| supporting  |                           | Projects                  |
	| work        |                           |                           |
	| execution   |                           | Open Agile Architecture™  |
	| applying    |                           | Standard                  |
	| Agile       |                           |                           |
	| me          |                           |                           |
	| thodologies |                           |                           |
	| and DevOps  |                           |                           |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Phases A and B applied to | TOGAF^(®) Series Guide    |
	| A           | support strategy          | Set: Business             |
	| rchitecture | definition and business   | Architecture – Business   |
	| c           | landscape to support      | Capabilities, Value       |
	| apabilities | teams                     | Streams, Organization     |
	| applied to  |                           | Mapping, Information      |
	| support     | Value streams – business  | Mapping, Business Models  |
	| product     | capabilities mapping      |                           |
	| management  |                           | The TOGAF Series Guide    |
	| and         | Organizational maps       | applied at solution level |
	| operations: |                           | aimed to scale to cover a |
	| Business    | Business process          | more general landscape:   |
	| A           | improvements              |                           |
	| rchitecture |                           | TOGAF^(®) Series Guide: A |
	| value       | Platform structure        | Practitioners’ Approach   |
	| stream and  | analysis                  | to Developing Enterprise  |
	| c           |                           | Architecture Following    |
	| apabilities |                           | the TOGAF^(®) ADM         |
	| offe        |                           |                           |
	| red/managed |                           | Capability-Based Planning |
	| by business |                           | Supporting                |
	| unit(s)     |                           | Project/Portfolio and     |
	|             |                           | Digital Capabilities      |
	| Capab       |                           | Mapping Using the         |
	| ility-based |                           | TOGAF^(®) and             |
	| planning    |                           | ArchiMate^(®) Standards   |
	|             |                           |                           |
	| Enterprise  |                           | TOGAF^(®) Series Guide:   |
	| Archi       |                           | Architecture Project      |
	| tecture/the |                           | Management                |
	| TOGAF ADM   |                           |                           |
	| and project |                           |                           |
	| management  |                           |                           |
	|             |                           |                           |
	| Org         |                           |                           |
	| anizational |                           |                           |
	| maps –      |                           |                           |
	| information |                           |                           |
	| maps        |                           |                           |
	|             |                           |                           |
	| Value       |                           |                           |
	| streams and |                           |                           |
	| business    |                           |                           |
	| c           |                           |                           |
	| apabilities |                           |                           |
	+-------------+---------------------------+---------------------------+
	| Product     | Phases A and B for        | Open Agile Architecture™  |
	| Management  | product definition        | Standard, see Chapter 4:  |
	| –           |                           | “Architecture             |
	| Enterprise  | Phases C and D to         | Development”              |
	| A           | identify capabilities to  |                           |
	| rchitecture | support product delivery  | Open Agile Architecture™  |
	| supporting  |                           | Standard, see Chapter 10: |
	| product     | Project to product shift  | “Building Blocks          |
	| definition  | to support product        | Overview” and Chapter 14: |
	| and         | management reflected in   | “Product Architecture”    |
	| a           | Phases E and F for        |                           |
	| rchitecture | product planning and      | TOGAF^(®) Series Guide    |
	| – product   | Phases G and H for        | Set: Business             |
	| definition  | product governance and    | Architecture applied to   |
	| and         | change management         | define a Product          |
	| discovery   |                           | Architecture              |
	|             | Product – process –       |                           |
	|             | services and platform     | TOGAF^(®) Series Guide:   |
	|             | models as supporting      | Enabling Enterprise       |
	|             | artifacts                 | Agility, see Chapter 5    |
	+-------------+---------------------------+---------------------------+
	
	: Table 3. Mapping to the Team Context
	
snippet togaf_adm_4_B_Business_Architecture_4.5.3_Applying_Business_Capabilities "4.5.3 Applying Business Capabilities"
	
	The business capability map found or developed in the Architecture
	Vision phase provides a self-contained view of the business that is
	independent of the current organizational structure, business processes,
	information systems and applications, and the rest of the product or
	service portfolio. Those business capabilities should be mapped back to
	the organizational units, value streams, information systems, and
	strategic plans within the scope of the Enterprise Architecture project.
	This relationship mapping provides greater insight into the alignment
	and optimization of each of those domains (see Relationship Mapping in
	TOGAF® Series Guide: Business Capabilities).
	
	Another common analysis technique involves heat mapping, which can be
	used to show a range of different perspectives on the same set of core
	business capabilities. These include maturity, effectiveness,
	performance, and the value or cost of each capability to the business.
	Different attributes determine the colors of each capability on the
	business capability map (see Heat Mapping in TOGAF® Series Guide:
	Business Capabilities).
	
	For example, a business capability maturity heat map shows the desired
	maturity as green for a specific capability, one level down as yellow,
	and two or more levels down as red. Other colors may indicate status,
	such as purple denoting a capability that does not exist yet in the
	company but is desired, or perhaps as a capability that is over-funded
	and has more resources than necessary. This gap analysis is directly
	tied to the Enterprise Architecture project underway; a gap is only
	relevant in the context of the business need and provides focus for more
	mapping in this phase or priorities for later architecture phases.
	
snippet togaf_reference-models_digital-business-reference-model_4.5.3_Enabling_Digital_Competencies "4.5.3 Enabling Digital Competencies"
	
	Table 1 outlines the enabling DPBoK Digital Competencies for the
	respective Digital Enablement components/pillars.
	
	Table 1: Enabling DPBoK Digital Competencies
	
	  Digital Enablement Pillar         Enabling DPBoK Competency                                         DPBoK Context
	  --------------------------------- ----------------------------------------------------------------- ---------------------------------
	  Digital Principles and Strategy   Architecture and portfolio management                             Context IV: Enduring Enterprise
	                                    Information management                                            Context IV: Enduring Enterprise
	                                    Conception of digital value                                       Context I: Individual/Founder
	  Digital Governance                Governance, risk, security, and compliance                        Context IV: Enduring Enterprise
	  Digital Products and Services     Coordination mechanisms (including process management and ITSM)   Context III: Team of Teams
	                                    Investment and sourcing (including project management)            Context III: Team of Teams
	                                    Product management                                                Context II: Team
	  Agile Digital Delivery Model      Organization and cultural factors                                 Context III: Team of Teams
	                                    Work execution                                                    Context II: Team
	                                    Operations                                                        Context II: Team
	                                    Agile development and continuous delivery practices               Context I: Individual/Founder
	  Digital Platforms                 Digital infrastructure and related practices                      Context I: Individual/Founder
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.5.3_Mapping_to_the_Team_of_Teams_Context "4.5.3. Mapping to the Team of Teams Context"
	
	+-----------------------------------+-----------------------------------+
	| Note                              | For modeling, the TOGAF           |
	|                                   | viewpoints can also be delivered  |
	|                                   | using the ArchiMate modeling      |
	|                                   | notation in the ArchiMate® 3.1    |
	|                                   | Specification.                    |
	+-----------------------------------+-----------------------------------+
	
	It is important to note that the recommendations provided in Section
	4.5.1, “Mapping to the Individual/Founder Context” are also applicable
	at the Team level since the approach and models are suitable to scale.
	
	So in this mapping, the emphasis is on how to support coordination
	across different teams.
	
	+-------------+---------------------------+---------------------------+
	| C           | TOGAF ADM Phase –         | Mapping to The Open Group |
	| apabilities | Artifacts                 | Library (see Referenced   |
	| – Aspects   |                           | Documents)                |
	+=============+===========================+===========================+
	| Enterprise  | Preliminary Phase and     | TOGAF^(®) Series Guides   |
	| A           | Phase A to support user   | applied at the program    |
	| rchitecture | stories and epics –       | and portfolio level:      |
	| applied to  | intentional architecture  |                           |
	| support     | – Enterprise Architecture | TOGAF^(®) Series Guide: A |
	| cross       | supporting Agile teams    | Practitioners’ Approach   |
	| -activities | and Agile team of teams   | to Developing Enterprise  |
	| and         | at portfolio level        | Architecture Following    |
	| interd      |                           | the TOGAF^(®) ADM         |
	| ependencies | High-level iteration      |                           |
	| between     | Phases B to D to provide  | Open Agile Architecture™  |
	| teams       | the high-level landscape  | Standard, see Chapter 4:  |
	| following a | to support team of teams  | “Architecture             |
	| portfolio   | and address               | Development”              |
	| view        | interoperability issues.  |                           |
	|             |                           | Open Agile Architecture™  |
	|             | Governance support –      | Standard, see Chapter 10: |
	|             | architecture guardrails   | “Building Blocks          |
	|             | definition                | Overview”                 |
	|             |                           |                           |
	|             | Entities that can be      | TOGAF^(®) Series Guide:   |
	|             | applied from the TOGAF    | Enabling Enterprise       |
	|             | content metamodel can be  | Agility, see Chapter 5    |
	|             | found in Figures 2-1 and  |                           |
	|             | 2-2 in the TOGAF          | World-Class EA:           |
	|             | Standard - Architecture   | Governors’ Approach to    |
	|             | Content. Entities grouped | Developing and Exercising |
	|             | in Business Architecture, | an Enterprise             |
	|             | Information Systems       | Architecture Governance   |
	|             | Architecture, and         | Capability                |
	|             | Technology Architecture   |                           |
	|             | and also in architecture  |                           |
	|             | realization (Content      |                           |
	|             | framework).               |                           |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | High-level iterations     | TOGAF^(®) Series Guides   |
	| A           | Phases B-D to provide the | applied at the program    |
	| rchitecture | portfolio and service     | and portfolio and project |
	| supporting  | landscape for every team  | level:                    |
	| programs /  | and for the set of teams  |                           |
	| portfolios  | – supported by the        | TOGAF^(®) Series Guide: A |
	| – service   | high-level general view   | Practitioners’ Approach   |
	| management  | of the landscape          | to Developing Enterprise  |
	| delivery    | described above           | Architecture Following    |
	| aligned     |                           | the TOGAF^(®) ADM         |
	| with the    | Entities that can be      |                           |
	| IT4IT       | applied from the TOGAF    | TOGAF and IT4IT guides:   |
	| Standard    | content metamodel can be  |                           |
	|             | found in Figures 2-1 and  | Seamless Service Delivery |
	|             | 2-2 in the TOGAF Standard | and the IT4IT™ Standard   |
	|             | – Architecture Content.   |                           |
	|             | Entities grouped in       | How to Use the TOGAF^(®)  |
	|             | Business Architecture,    | and IT4IT™ Standards      |
	|             | Information Systems       | Together                  |
	|             | Architecture, and         |                           |
	|             | Technology Architecture.  |                           |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Preliminary Phase applied | TOGAF Series Guide        |
	| A           | to address maturity level | applied to define the     |
	| rchitecture | for the digital           | Enterprise Architecture   |
	| to deliver  | enterprise                | capability to address the |
	| the         |                           | digital enterprise:       |
	| high-level  |                           |                           |
	| view and    |                           | TOGAF^(®) Series Guide:   |
	| landscape   |                           | The TOGAF^(®) Leader’s    |
	| and to      |                           | Guide to Establishing and |
	| identify    |                           | Evolving an EA Capability |
	| the         |                           |                           |
	| o           |                           | TOGAF maturity models and |
	| rganization |                           | skills management guides  |
	| maturity    |                           | applied – adapted to      |
	| level for   |                           | address the digital       |
	| the digital |                           | enterprise:               |
	| enterprise  |                           |                           |
	|             |                           | TOGAF^(®) Series Guide:   |
	|             |                           | Architecture Maturity     |
	|             |                           | Models                    |
	|             |                           |                           |
	|             |                           | TOGAF^(®) Series Guide:   |
	|             |                           | Architecture Skills       |
	|             |                           | Framework                 |
	|             |                           |                           |
	|             |                           | TOGAF^(®) Series Guide:   |
	|             |                           | Digital Technology        |
	|             |                           | Adoption: A Guide to      |
	|             |                           | Readiness Assessment and  |
	|             |                           | Roadmap Development       |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Phases B, C, and D        | TOGAF Series Guide        |
	| A           |                           | applied at the program /  |
	| rchitecture | Artifacts and views       | portfolio level:          |
	| supporting  | supporting portfolio      |                           |
	| digital     | definition for digital    | TOGAF^(®) Series Guide: A |
	| product and | products                  | Practitioners’ Approach   |
	| service     |                           | to Developing Enterprise  |
	| catalog     |                           | Architecture Following    |
	| definition  |                           | the TOGAF^(®) ADM         |
	|             |                           |                           |
	| -           |                           | Capability-Based Planning |
	| Application |                           | Supporting                |
	| portfolio   |                           | Project/Portfolio and     |
	| management  |                           | Digital Capabilities      |
	| - Service   |                           | Mapping Using the         |
	| portfolio   |                           | TOGAF^(®) and             |
	| management  |                           | ArchiMate^(®) Standards   |
	| - Digital   |                           |                           |
	| portfolio   |                           | Open Agile Architecture™  |
	| management  |                           | Standard, see Chapter 4:  |
	| -           |                           | “Architecture             |
	| Capab       |                           | Development”              |
	| ility-based |                           |                           |
	| planning    |                           | Open Agile Architecture™  |
	| - Process   |                           | Standard, see Chapter 10: |
	| management  |                           | “Building Blocks          |
	|             |                           | Overview” and Chapter 14: |
	|             |                           | “Product Architecture”    |
	|             |                           |                           |
	|             |                           | TOGAF^(®) Series Guide    |
	|             |                           | Set: Business             |
	|             |                           | Architecture applied to   |
	|             |                           | define a Product          |
	|             |                           | Architecture              |
	|             |                           |                           |
	|             |                           | TOGAF^(®) Series Guide:   |
	|             |                           | Enabling Enterprise       |
	|             |                           | Agility, see Chapter 5    |
	+-------------+---------------------------+---------------------------+
	
	: Table 4. Mapping to the Team of Teams Context
	
snippet togaf_adm_4_B_Business_Architecture_4.5.4_Applying_Value_Streams "4.5.4 Applying Value Streams"
	
	Value streams provide valuable stakeholder context into why the
	organization needs business capabilities, while business capabilities
	provide what the organization needs for a particular value stage to be
	successful.
	
	Start with the initial set of value stream models for the business
	documented in the Architecture Vision phase. Within the scope of the
	specific Enterprise Architecture project, if sufficiently larger in
	breadth, there may be a need for new value streams not already in the
	repository.
	
	A new or existing value stream can be analyzed within the scope of the
	project through heat mapping (by value stream stage) or by developing
	use-cases around a complete definition of the value stream (see Baseline
	Example in the TOGAF® Series Guide: Value Streams). A project might
	focus on specific stakeholders, one element of business value, or stress
	some stages over others to develop better requirements for solutions in
	later phases.
	
	The most substantive benefits come from mapping relationships between
	the stages in a value stream to business capabilities, then performing a
	gap analysis for capabilities (such as heat mapping) in the context of
	the business value achieved by the value stream for a specific
	stakeholder (see Mapping Value Streams to Business Capabilities in the
	TOGAF® Series Guide: Value Streams).
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.5.4_Mapping_to_the_Enduring_Enterprise_Context "4.5.4. Mapping to the Enduring Enterprise Context"
	
	+-----------------------------------+-----------------------------------+
	| Note                              | For modeling, the TOGAF           |
	|                                   | viewpoints can also be delivered  |
	|                                   | using the ArchiMate modeling      |
	|                                   | notation in the ArchiMate^(®) 3.1 |
	|                                   | Specification.                    |
	+-----------------------------------+-----------------------------------+
	
	It is important to note that the recommendations provided in Section
	4.5.1, “Mapping to the Individual/Founder Context” are also applicable
	at the team level since the approach and models are suitable to scale.
	
	So in this mapping, the emphasis is on how to support coordination
	across different teams.
	
	+-------------+---------------------------+---------------------------+
	| C           | TOGAF ADM Phase –         | Mapping to The Open Group |
	| apabilities | Artifacts                 | Library (see Referenced   |
	| – Aspects   |                           | Documents)                |
	+=============+===========================+===========================+
	| Enterprise  | The TOGAF ADM applied in  | Open Business             |
	| A           | an Agile way              | Architecture (O-BA)       |
	| rchitecture |                           | Standard                  |
	| and the     | Preliminary Phase and     |                           |
	| TOGAF       | Phase A to support user   | The TOGAF ADM applied at  |
	| Standard    | stories and epics –       | the strategy and program  |
	| supporting  | intentional architecture  | level                     |
	| strat       | – Enterprise Architecture |                           |
	| egy/portfol | supporting Agile teams    | TOGAF^(®) Series Guide    |
	| io/projects |                           | Set: Business             |
	| and         | Preliminary Phase and     | Architecture – Business   |
	| solution    | Phase A: Strategic and    | Capabilities, Value       |
	| delivery    | motivation                | Streams, Organization     |
	|             |                           | Mapping, Information      |
	| -           | Phases B, C, D:           | Mapping, Business Models  |
	| A           | high-level landscape view |                           |
	| rchitecture | – MVA                     | The TOGAF Series Guide    |
	| as a        |                           | applied at solution level |
	| competency  | Base for an intentional   | aimed to scale to cover a |
	| area – the  | architecture – scale to   | more general landscape    |
	| DPBoK       | cover the enduring        |                           |
	| Standard,   | enterprise                | TOGAF^(®) Series Guide: A |
	| Section     |                           | Practitioners’ Approach   |
	| 6.4.3       | Phases B, C, D: more      | to Developing Enterprise  |
	| -           | detailed – applied per    | Architecture Following    |
	| Ar          | segment aimed to scale    | the TOGAF^(®) ADM         |
	| chitecture, | from solution level to a  |                           |
	| Digital     | portfolio or program      | TOGAF^(®) Series Guide:   |
	| Strategy,   | level                     | Enabling Enterprise       |
	| and         |                           | Agility                   |
	| Portfolio   | Value streams,            |                           |
	|             | capabilities map,         | How to Use the            |
	| Agile       | information mapping,      | ArchiMate^(®) Modeling    |
	| Enterprise  | technology landscape,     | Language to Support       |
	| A           | information systems       | TOGAF^(®) Framework       |
	| rchitecture | landscape                 | Projects                  |
	|             |                           |                           |
	| -           | The TOGAF content         | Open Agile Architecture™  |
	| Enterprise  | metamodel applied         | Standard, see Chapter 10: |
	| A           | depending on the views    | “Building Blocks          |
	| rchitecture | needed                    | Overview” and Chapter 14: |
	| c           |                           | “Product Architecture”    |
	| apabilities |                           |                           |
	| adapted to  |                           |                           |
	| support the |                           |                           |
	| Agile and   |                           |                           |
	| digital     |                           |                           |
	| o           |                           |                           |
	| rganization |                           |                           |
	| -           |                           |                           |
	| Enterprise  |                           |                           |
	| A           |                           |                           |
	| rchitecture |                           |                           |
	| and the     |                           |                           |
	| TOGAF       |                           |                           |
	| Standard –  |                           |                           |
	| new         |                           |                           |
	| delivery    |                           |                           |
	| style       |                           |                           |
	| following   |                           |                           |
	| an Agile    |                           |                           |
	| approach    |                           |                           |
	| and         |                           |                           |
	| supporting  |                           |                           |
	| digital     |                           |                           |
	| product     |                           |                           |
	| offerings   |                           |                           |
	+-------------+---------------------------+---------------------------+
	| Information | Phases B and C to         | Information Architecture: |
	| / Data /    | identify business         | Business Intelligence &   |
	| Information | information capabilities  | Analytics and Metadata    |
	| A           | and data capabilities     | Management Reference      |
	| rchitecture |                           | Models                    |
	| guidance in |                           |                           |
	| progress –  |                           | TOGAF^(®) Series Guide:   |
	| a           |                           | Information Mapping       |
	| dapted/used |                           |                           |
	| to fulfil   |                           | Open Agile Architecture™  |
	| digital     |                           | Standard, see Chapter 18: |
	| enterprise  |                           | Data Information and      |
	| needs       |                           | Artificial Intelligence   |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Phases G and H applied    | TOGAF Standard governance |
	| A           | following an Agile        | content:                  |
	| rchitecture | approach                  |                           |
	| and the     |                           | World-Class EA:           |
	| TOGAF       | Digital metrics           | Governors’ Approach to    |
	| governance  | definition                | Developing and Exercising |
	| framework   |                           | an Enterprise             |
	| supporting  |                           | Architecture Governance   |
	| digital     |                           | Capability                |
	| governance  |                           |                           |
	|             |                           | Open Agile Architecture™  |
	|             |                           | Standard, see Chapter 8:  |
	|             |                           | “Agile Governance”        |
	+-------------+---------------------------+---------------------------+
	| Enterprise  | Phases B, C, and D to     | Open Business             |
	| A           | define the portfolios,    | Architecture (O-BA) –     |
	| rchitecture | values streams, and       | Part II                   |
	| supporting  | capabilities              |                           |
	| the         |                           | TOGAF^(®) Series Guide    |
	| business    | Adaptation needed to      | Set: Business             |
	| strategy    | cover digital product     | Architecture – Business   |
	| (digital)   | portfolio definition      | Capabilities, Value       |
	| and         |                           | Streams, Organization     |
	| providing   |                           | Mapping, Information      |
	| the         |                           | Mapping, Business Models  |
	| required    |                           |                           |
	| c           |                           | TOGAF^(®) Series Guide: A |
	| apabilities |                           | Practitioners’ Approach   |
	| to deliver  |                           | to Developing Enterprise  |
	| the digital |                           | Architecture Following    |
	| offering –  |                           | the TOGAF^(®) ADM         |
	| supporting  |                           |                           |
	| produc      |                           | Open Agile Architecture™  |
	| ts/services |                           | Standard                  |
	| dig         |                           |                           |
	| italization |                           |                           |
	+-------------+---------------------------+---------------------------+
	
	: Table 5. Mapping to the Enduring Enterprise Context
	
snippet togaf_adm_4_B_Business_Architecture_4.5.5_Applying_the_Organization_Map "4.5.5 Applying the Organization Map"
	
	An organization map shows the key organizational units, partners, and
	stakeholder groups that make up the enterprise ecosystem. The map should
	also depict the working relationship between those entities, as distinct
	from an organizational chart that only shows hierarchical reporting
	relationships. The map is typically depicted as a network or web of
	relationships and interactions between the various business entities
	(see Organigraphs: Drawing How Companies Really Work, by Mintzberg and
	Van der Heyden, 1999).
	
	The business unit is the main concept used to establish organization
	maps. In keeping with the relatively unconstrained view of what
	constitutes as enterprise, the enterprise may be one business unit for
	the project underway, may include all business units, or also include
	third parties or other stakeholder groups. The interpretation depends on
	the scope of the architecture effort.
	
	This map is a key element of Business Architecture because it provides
	the organizational context for the whole Enterprise Architecture effort.
	While capability mapping exposes what a business does and value stream
	mapping exposes how it delivers value to specific stakeholders, the
	organization map identities the business units or third parties that
	possess or use those capabilities and which participate in the value
	streams.
	
	Taken together with the methods in 4.5.3 Applying Business Capabilities
	, 4.5.4 Applying Value Streams , and the associated Guides, the
	organization map provides an understanding of which business units to
	involve in the architecture effort, who and when to talk about a given
	requirement, and how to measure the impact of various decisions.
	
	For further guidance on organization maps, see the TOGAF® Series Guide:
	Organization Mapping.
	
snippet togaf_adm_4_B_Business_Architecture_4.5.6_Applying_Information_Maps "4.5.6 Applying Information Maps"
	
	Characterizing information in the Business Architecture phase starts
	with the elements that matter most to the business, such as product,
	customer, factory, etc. With a list of these key elements, a
	cross-discipline team can list and map the information that matters most
	and how it is described using business terms. Domains of information can
	be derived from groupings or categories that the business terms fall
	into logically. These domains are a good place to start the information
	map for completeness and highest value before proceeding later to the
	details of data types.
	
	Relationships among the information domains can then be added to the map
	as the next level of understanding for a good baseline information map.
	The most significant benefit then comes with building matrices between
	information and business capabilities. The linkage between the
	information that matters most to the business and the business
	capabilities that describe the ability to apply that information to
	create value is a key aspect of Business Architecture. These information
	maps and relationships to business capabilities will then apply in later
	architecture phases on data characterization, applications, and
	infrastructure.
	
	For further guidance on information maps, see the TOGAF® Series Guide:
	Information Mapping.
	
snippet togaf_adm_4_B_Business_Architecture_4.5.7_Applying_Modeling_Techniques "4.5.7 Applying Modeling Techniques"
	
	The modeling and mapping techniques provided here are extensions that
	implement the business capabilities, value streams, and organization
	maps described above in Phase B into the practices of the business. They
	expand the operating model, which is a representation for how an
	organization operates across a range of domains in order to accomplish
	its purpose (see A Method for Identifying Process Re-Use Opportunities
	to Enhance the Operating Model, M. de Vries et al.).
	
	In addition to the techniques described above (capability maps, value
	streams, and organization maps), a variety of other modeling techniques
	may be employed, if deemed appropriate. For example:
	
	-   Activity Models (also called Business Process Models) describe the
	    enterprise's business activities, the data and/or information
	    exchanged between activities (internal exchanges), and the data
	    and/or information exchanged with other activities that are outside
	    the scope of the model (external exchanges)
	
	    Activity models are hierarchical in nature. They capture the
	    activities performed in a business process, and the Inputs,
	    Controls, Outputs, and Mechanisms/Resources (ICOMs) of those
	    activities. Activity models can be annotated with explicit
	    statements of business rules, which represent relationships among
	    the ICOMs. For example, a business rule can specify who can do what
	    under specified conditions, the combination of inputs and controls
	    needed, and the resulting outputs. One technique for creating
	    activity models is the Integrated Computer Aided Manufacturing
	    (ICAM) DEFinition (IDEF) modeling technique.
	
	    The Object Management Group (OMG) has developed the Business Process
	    Modeling Notation^(TM) (BPMN^(TM)), a standard for business process
	    modeling that includes a language with which to specify business
	    processes, their tasks/steps, and the documents produced.
	
	-   Use-Case Models describe the business process of an enterprise in
	    terms of use-cases and actors corresponding to business processes
	    and organizational participants (people, organizations, etc.)
	
	    The use-case model is described in use-case diagrams and use-case
	    specifications.
	
	-   Logical Data Model (or Class Model)
	
	    Logical data models describe the entities, their attributes, and the
	    acceptable values for these attributes as well as the relationships
	    between the various entities. Particularly useful is the "is-a"
	    relationship for analyses. For example, if a sedan is a type of car
	    which is a type of vehicle, then a general business rule for all
	    vehicles can be written once and automatically picked up for all
	    types of cars and trucks.
	
	    A class model expands the logical data model to include behaviors by
	    including services (methods) unique to the entity (now called a
	    class). Normally applications and information architects will use
	    the class diagram, and Business Architects will use the logical data
	    model.
	
	[]
	
	Figure 4-2: UML Business Class Diagram
	
	All three types of model above can be represented in the Unified
	Modeling Language^(TM) (UML®), and a variety of tools exist for
	generating such models.
	
	Certain industry sectors have modeling techniques specific to the sector
	concerned.
	
snippet togaf_adm_4_B_Business_Architecture_4.5.8_Architecture_Repository "4.5.8 Architecture Repository"
	
	As part of Phase B, the architecture team will need to consider what
	relevant Business Architecture resources are available from the
	Architecture Repository (see the TOGAF Standard — Architecture Content),
	in particular:
	
	-   Industry reference models relevant to the organization's industry
	    sector
	-   Enterprise-specific Business Architecture views (capability maps,
	    value stream maps, organization maps, etc.)
	-   Enterprise-specific building blocks (process components, business
	    rules, job descriptions, etc.)
	-   Applicable standards
	
snippet togaf_introduction_4_Definitions_4.50_Information_Technology_IT "4.50 Information Technology (IT)"
	
	The lifecycle management of information and related technology used by
	an organization.
	
snippet togaf_introduction_4_Definitions_4.51_Interoperability "4.51 Interoperability"
	
	1.  The ability to share information and services.
	2.  The ability of two or more systems or components to exchange and use
	    information.
	3.  The ability of systems to provide and receive services from other
	    systems and to use the services so interchanged to enable them to
	    operate effectively together.
	
snippet togaf_introduction_4_Definitions_4.52_Logical "4.52 Logical"
	
	Implementation-independent.
	
	Note:
	    A logical architecture is an implementation-independent definition
	    of the architecture.
	
snippet togaf_introduction_4_Definitions_4.53_Metadata "4.53 Metadata"
	
	Data about data, of any sort in any media, that describes the
	characteristics of an entity.
	
snippet togaf_introduction_4_Definitions_4.54_Metamodel "4.54 Metamodel"
	
	A model that describes the entities used in building an Architecture
	Description, their characteristics, and the key relationships between
	those entities.
	
snippet togaf_introduction_4_Definitions_4.55_Method "4.55 Method"
	
	A defined, repeatable approach to address a particular type of problem.
	
snippet togaf_introduction_4_Definitions_4.56_Modeling "4.56 Modeling"
	
	A technique through construction of models which enables a subject to be
	represented in a form that enables reasoning, insight, and clarity
	concerning the essence of the subject matter.
	
snippet togaf_introduction_4_Definitions_4.57_Model_Kind "4.57 Model Kind"
	
	Conventions for a type of modeling.
	
	Note:
	    An architecture viewpoint references one or more model kinds; an
	    architecture view incorporates one or more models.
	
snippet togaf_introduction_4_Definitions_4.58_Objective "4.58 Objective"
	
	An organizational aim that is declared in a Specific, Measurable,
	Actionable, Realistic, and Timebound (SMART) way. For example, "Increase
	capacity utilization by 30% by the end of the year, to support the
	planned increase in market share".
	
snippet togaf_introduction_4_Definitions_4.59_Pattern "4.59 Pattern"
	
	A technique for putting building blocks into context; for example, to
	describe a re-usable solution to a problem.
	
	Note:
	    Building blocks are what you use: (architecture) patterns can tell
	    you how you use them, when, why, and what trade-offs you have to
	    make in doing so.
	
	See also 4.26 Building Block .
	
snippet togaf_guides_index_4.5_ADM_Levels_and_Phases_Mapped_to_Agile_Concepts "4.5. ADM Levels and Phases Mapped to Agile Concepts"
	
	As previously described, the TOGAF ADM can be applied to deliver
	architecture iterations in parallel and partitioned across different
	levels of detail and change using Strategy, Segment, and Capability
	Architectures that can be also developed using techniques such as SAFe
	and Scrum.
	
	[Iteration approach]
	
	Figure 5. ADM Levels Mapped to Agile Delivery Concepts
	
	Agile techniques consider that development and delivery work can
	progress based on one integrated team across all levels (business,
	technical, solution, build, and delivery) working in single connected
	sprints or across the types of boundaries shown in Figure 5^([1]) that
	may have connected but distinctly separate styles of sprints. The exact
	arrangement will depend on the complexity and scale of each enterprise
	and the implementation of the Agile approach.
	
	In applying the TOGAF ADM, each level of planning and delivery may cycle
	through all of the TOGAF phases from A to G but each of the three levels
	will often focus on specific elements of the cycle. In the Strategic
	level, the focus is more on the Preliminary Phase (if architecture
	capability changes are needed) and Phases A and B to provide the basis
	to define the cross-enterprise and strategic change time horizon view.
	This generates a series of strategic high-level plans known as courses
	of action.
	
	Agile techniques typically address this with concepts such as high-level
	strategic themes, and the highest level of an enterprise product
	portfolio backlog. In this level, interdisciplinary teams (business and
	technical teams and those that create, implement, and operate) must be
	involved to develop an Enterprise Architecture that meets both the
	business goals and objectives of the enterprise and is also potentially
	deliverable.
	
	In the Segment level, the focus is on partitioning the courses of action
	across the relevant organization units (based on an understanding of the
	desired business capabilities and value streams and following each
	enterprise’s chosen approach to partitioning – capability/product,
	service/process, or function etc.) such that the work of delivering the
	change can be effectively and efficiently organized. Where the
	information acquired by performing Phases A and B is insufficient for
	this activity there may be more emphasis on further exploring Phases B,
	C, and D in greater detail.
	
	Work can be approached by factoring work to self-organizing teams at
	various levels (in line with the chosen organization unit structure)
	along with a high-level iteration through Phases C and D, that provides
	more detailed information for the product or solution delivery, going
	deeper into smaller organization areas (segments). Outputs of this
	iteration are the Epics that reflect large or long-running user stories,
	and the segment-based initial portfolio and/or backlog. The output from
	this level can be used to test and experiment with new products (if
	necessary), delivering descriptions for prototypes to test ideas into
	the relevant segment market.
	
	In the Capability level, a more specific solution-oriented architecture
	specification, including the ABBs, is identified through Phases B, C,
	and D, covering both the functional and non-functional aspects of the
	solution to be implemented. These architecture specifications are then
	further developed in Phases E and F as the basis for the SBBs, and their
	integration into the desired solutions/services/products. These are
	finalized and their associated contracts are then developed to direct
	their reuse/acquisition/build and deployment. The implementation units
	are aligned with increments of capability that will deliver specific
	outcomes such that each “chunk” of work produces an implementation of
	agreed value with the relevant stakeholders and sponsors. This approach
	to fast continuous implementation at the smallest level of capability
	creates a Transition Architecture of deliverable units similar to the
	sprints in the lowest level of backlog in the Agile style approaches.
	This smallest level of capability is often referred to as Minimum Viable
	Product in Agile style approaches.
	
	The backlogs are (if needed) usually refined down to an equivalent of
	the Scrum concept of a sprint backlog of deliverable sprints that will
	be ready for implementation in weeks, or at most one month. These
	sprints will take the specification from the equivalent of the TOGAF
	Phases A and/or B, C, D, and E through to implementation. The focus is
	on creating integrated teams and environments such that the further
	design, build, implementation, and operation processes interact
	seamlessly enabling continuous integration and implementation as
	delivery of each unit of the Minimum Viable Product is completed.
	
	The Capability level is operationally completed in Phase G,
	Implementation Governance. This ensures that the agreed contracts have
	delivered the expected capability, in line with the contractual
	agreements, and that all of the required information for operating and
	changing the product/solution/service is properly created, stored, and
	made accessible to support faster and higher quality change in the
	future. The Capability level confirms benefits realization in Phase H,
	Architecture Change Management. This ensures that operational and
	business performance is evaluated to confirm that the value has in fact
	been delivered and that the users of the product/solution/services are
	satisfied with the business outcomes of that capability increment. It
	further ensures that the evolving or completed wider Segment and/or
	Strategic-level change projects are operating within the appropriate
	boundaries (or guardrails) set up when planning the change.
	
	There may be pressure to move forward beyond the end of the runway
	defined by the Capability Architecture at a given point in time. This
	can store up problems in the management of poorly documented or
	architecturally dislocated products/solutions/services in the future.
	This is a type of technical debt, and like any debt, needs careful
	management to ensure that the debt does not get out of control. This
	should be addressed in Phase H, Architecture Change Management.
	
snippet togaf_introduction_4_Definitions_4.5_Application_Platform "4.5 Application Platform"
	
	The collection of technology components of hardware and software that
	provide the services used to support applications.
	
snippet togaf_adm_4_B_Business_Architecture_4.5_Approach "4.5 Approach"
	
	Business Architecture is a representation of holistic, multi-dimensional
	business views of capabilities, end-to-end value delivery, information,
	and organizational structure; and the relationships among these business
	views and strategies, products, policies, initiatives, and stakeholders.
	
	Business Architecture relates business elements to business goals and
	elements of other domains.
	
snippet togaf_reference-models_digital-business-reference-model_4.5_Operational_Domain "4.5 Operational Domain"
	
snippet togaf_guides_agile-sprints_4.5_Phase_H_Architecture_Change_Management "4.5 Phase H – Architecture Change Management"
	
	The main objective of Phase H is to ensure that the solution(s)
	delivered fulfills their promises and to handle proposed changes. It is
	suggested that the parts of Phase H applicable to change management are
	separated into a separate process.
	
	-   Establish a value realization process
	
	Define a process to ensure that the business value produced during the
	sprint is received.
	
	-   Deploy monitoring tools
	
	Deploy the process and associated tools to measure the business value.
	
	The Phase H steps applicable to change management, below, are separated
	into a separate process.
	
	Note: This process would run in parallel with Agile sprints.
	
	-   Manage risks
	
	Collect risks from demos and retrospectives and create mitigation
	activities.
	
	-   Provide analysis for architecture change management
	
	Analyze results of business value monitoring. Assess other change
	requests received and move into business change backlog.
	
	-   Develop change requirements to meet performance targets
	
	Define change requests to handle poor business value creation and risk
	mitigation.
	
	-   Manage governance process
	
	Part of the sprint work. The business team governs the Enterprise
	Architecture team; the Enterprise Architecture team governs the solution
	teams, and vice versa.
	
	-   Activate the process to implement change
	
	This is part of normal planning work for a sprint.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4.5_TOGAF_Artifacts_and_Series_Guides "4.5. TOGAF Artifacts and Series Guides"
	
snippet togaf_introduction_4_Definitions_4.60_Physical "4.60 Physical"
	
	Real-world, tangible.
	
	Note:
	    A logical architecture is realized through a physical architecture.
	
snippet togaf_introduction_4_Definitions_4.61_Principle "4.61 Principle"
	
	See 4.19 Architecture Principle .
	
snippet togaf_introduction_4_Definitions_4.62_Product "4.62 Product"
	
	An outcome generated by the business to be offered to customers.
	Products include materials and/or services.
	
snippet togaf_introduction_4_Definitions_4.63_Reference_Model_RM "4.63 Reference Model (RM)"
	
	An abstract framework for understanding significant relationships among
	the entities of [an] environment, and for the development of consistent
	standards or specifications supporting that environment.
	
	Note:
	
	    A reference model is based on a small number of unifying concepts
	    and may be used as a basis for education and explaining standards to
	    a non-specialist. A reference model is not directly tied to any
	    standards, technologies, or other concrete implementation details,
	    but it does seek to provide common semantics that can be used
	    unambiguously across and between different implementations.
	
	    Source: OASIS®; refer to
	    www.oasis-open.org/committees/tc_home.php?wg_abbrev=soa-rm.
	
snippet togaf_introduction_4_Definitions_4.64_Requirement "4.64 Requirement"
	
	A statement of need, which is unambiguous, testable or measurable, and
	necessary for acceptability.
	
snippet togaf_introduction_4_Definitions_4.65_Roadmap "4.65 Roadmap"
	
	An abstracted plan for business or technology change, typically
	operating across multiple disciplines over multiple years. Normally used
	in the phrases Technology Roadmap, Architecture Roadmap, etc.
	
snippet togaf_introduction_4_Definitions_4.66_Role "4.66 Role"
	
	1.  The usual or expected behavior of an actor, or the part somebody or
	    something plays in a particular process or event. An actor may have
	    a number of roles.
	2.  The part an individual plays in an organization and the contribution
	    they make through the application of their skills, knowledge,
	    experience, and abilities.
	
	See also 4.2 Actor .
	
snippet togaf_introduction_4_Definitions_4.67_Segment_Architecture "4.67 Segment Architecture"
	
	A detailed, formal description of areas within an enterprise, used at
	the program or portfolio level to organize and align change activity.
	
	See also 4.77 Strategic Architecture .
	
snippet togaf_introduction_4_Definitions_4.68_Service "4.68 Service"
	
	An encapsulated element of behavior that provides specific functionality
	in response to requests from actors or other services.
	
	Note:
	    A service has an interface and description.
	
snippet togaf_introduction_4_Definitions_4.69_Service_Orientation "4.69 Service Orientation"
	
	Viewing an enterprise, system, or building block in terms of services
	provided and consumed.
	
	See also 4.70 Service-Oriented Architecture (SOA) .
	
snippet togaf_introduction_4_Definitions_4.6_Application_Service "4.6 Application Service"
	
	A discrete behavior requestable from an application; an automated
	element supporting or delivering part or all of one or more business
	services.
	
snippet togaf_guides_index_4.6_Set-Based_Concurrent_Engineering "4.6. Set-Based Concurrent Engineering"
	
	Set-Based Concurrent Engineering (SBCE) from Lean Product and Process
	Development [5] can be accommodated by adapting the TOGAF framework.
	Both the Open Agile Architecture™ Standard [6] and SAFe^(®) promote the
	practice of SBCE. In SBCE, the overall solution is divided into a number
	of sub-systems, broad targets are established for each sub-system, and
	multiple alternatives for reaching those targets are identified and
	developed concurrently. The set of alternative designs is evaluated
	iteratively over time, eliminating weaker options in each iteration,
	until the final, strongest design is selected. For each alternative,
	enough architecture is done to properly assess the competing
	alternatives, ensuring that good decisions are made. Architectural
	alternatives and elaborations are done using ADM iteration cycles and
	sprints. An ADM iteration is done for each alternative, with only enough
	architecture done within the iteration to evaluate the trade-offs for
	that alternative. When an alternative is selected, ADM iterations and
	sprints are done to further elaborate the architecture for the selected
	approach. Further explanation on how to handle alternatives using the
	TOGAF Standard can be found in The Open Group TOGAF Standard [1] – ADM
	Techniques, Chapter 10, “Architecture Alternatives”.
	
	These iteration cycles with accommodation for SBCE support an Agile
	delivery style. For instance, a Segment Architecture could be defined in
	Agile sprints and each one of those sprints would be an ADM iteration
	cycle.
	
snippet togaf_guides_index_4.7.1_The_Three_Delivery_Styles "4.7.1. The Three Delivery Styles"
	
	Agile is one of the three broad lifecycle delivery approaches which can
	work in concert with the TOGAF Standard. These provide for a
	proportionate and controlled approach for delivering change at an
	effective pace, and in response to the appetite for business
	transitions. However, agility is not just about using sprints; it is
	about the right balance of approaches based on the needs of the
	enterprise.
	
	There is both a faster type of approach (Rapid), and a slower type of
	approach (Robust). It is normally the case that any meta change of scale
	and consequence (a backlog of sprints in Agile, a series of transitions
	in the TOGAF Standard) will have a series of iterations of packages of
	work that will often involve all three types of change lifecycle. Also
	note that the Robust approach incorporates elements of Agile where
	appropriate and the Agile approach incorporates elements of Rapid where
	appropriate. They are essentially used in a nested manner depending on
	the complexity and scale of a specific change.
	
	Table 1 shows the characteristic profiles of projects related to each
	approach. The table is a general guide not a rigid statement, and acts
	as a guide for considering an effective approach for each meta/micro
	delivery cycle and each enterprise/change activity will decide how best
	to approach that change. Agile product management is discussed in
	Chapter 5.
	
	The three main lifecycle delivery approaches that can be broadly
	identified are:
	
	-   Rapid – near immediate implementations of simple components (e.g.,
	    extended prototyping such as Rapid Application Development (RAD))
	
	-   Agile – fast cycles of component delivery for specific bounded
	    functionality (e.g., Java™ Application Description (JAD), Dynamic
	    Systems Development Method (DSDM^(®)), Agile)
	
	-   Robust (risk and architecture-driven) – longer-term delivery of
	    complex, large-scale components, interoperable across the breadth of
	    a segment or an enterprise (e.g., managed projects or programs such
	    as PRINCE2 and MSP)
	
	+--------------------------------------+---------+---------+---------+
	|                                      | Rapid   | Agile   | Robust  |
	+======================================+=========+=========+=========+
	| Small scale                          | Y       | Y       | N       |
	+--------------------------------------+---------+---------+---------+
	| Large scale                          | N       | N       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Simple                               | Y       | Y       | N       |
	+--------------------------------------+---------+---------+---------+
	| Complex                              | N       | N       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Tried technology                     | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| New technology                       | N       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Stable business process              | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Changing business process            | N       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Skills already in place              | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Skills needed to be developed        | N       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| New solution                         | N       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Extension of existing solution       | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Integration of existing building     | Y       | Y       | Y       |
	| blocks                               |         |         |         |
	+--------------------------------------+---------+---------+---------+
	| Integration of existing running      | Y       | Y       | Y       |
	| services                             |         |         |         |
	+--------------------------------------+---------+---------+---------+
	| Short-term change horizon            | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Long-term change horizon             | N       | N       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Time-driven project (shorter time    | Y       | Y       | N       |
	| frame)                               |         |         |         |
	+--------------------------------------+---------+---------+---------+
	| Time-driven project (longer time     | N       | N       | Y       |
	| frame)                               |         |         |         |
	+--------------------------------------+---------+---------+---------+
	| Cost-driven project                  | Y       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Quality-driven project               | N       | N       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Function-driven project              | N       | Y       | Y       |
	+--------------------------------------+---------+---------+---------+
	| Structure/architecture-driven        | N       | N       | Y       |
	| project                              |         |         |         |
	+--------------------------------------+---------+---------+---------+
	| Low Risk                             | Y       | Y       | N       |
	+--------------------------------------+---------+---------+---------+
	| High Risk                            | N       | N       | Y       |
	+--------------------------------------+---------+---------+---------+
	
	: Table 1. Characteristic Delivery Lifecycle Change Approaches and their
	Profiles
	
	Note that for any project of some scale or complexity, each chunk
	(sprint, iteration, stage, transition, etc.) may require a different
	approach such that the project may well incorporate all of these
	approaches based on the specific circumstances.
	
	In most changes there will be a significant, if not greater, number of
	transitions implemented using Agile style approaches. Occasionally pure
	speed is needed (Rapid). In some changes, really careful (Robust)
	approaches will be chosen when there is high risk or significant
	consequences associated with the change. When the Agile delivery
	lifecycle is the most appropriate approach it integrates well with the
	TOGAF Standard and the delivered sprints represent the transitions
	defined in the standard that move towards the evolving and changing
	Target Architecture. Again, the TOGAF Standard does not take an abstract
	position on which of these delivery lifecycle approaches is best for a
	meta or micro iteration. Rather, in its Architecture Change Management
	phase, it provides the structures and controls within which an
	enterprise can have true agility and choose the best approach for each
	specific change situation.
	
	The concept of fast-focused change underlying Agile is powerful but not
	singular. There are many paces not just one pace. Often many dependent
	elements need to be put into place to enable even the simplest of
	functions in an effective manner. For example, in the world of athletics
	there are four main paces:
	
	-   Sprint
	
	-   Middle distance
	
	-   Long distance
	
	-   Marathon
	
	Each of these paces has their place depending on the situation
	encountered. Using the wrong pace is not just less than good, it often
	means total failure. Within any one project, high levels of risk may
	require slower paces of change to ensure that each element has properly
	managed that risk; while lower levels of risk may enable a solution to
	be implemented more quickly. Within any change program, different
	iterations will often need to be addressed at different paces. It is
	expected that each iteration will be identified as having an appropriate
	pace and then be organized to deliver at that pace.
	
	Early Agile approaches, such as Scrum, emphasized the delivery of small
	units of delivery in short sprints at a fast pace. (Note that later
	Agile approaches, such as SAFe, have broadened this to include larger
	units of delivery with more content working at different paces.)
	However, this does not apply in many situations. In large complex
	situations that are strongly-coupled, stateful, pessimistic, and
	controlled in nature (such as Nuclear Power Stations, Aircraft Control
	Systems, or non-repudiation situations) many teams may have to be
	involved and require significant levels of control and direction. There
	is a reason why the most important element of a successful large-scale
	military organization is logistics (organization, consistency, and
	delivery at scale – potentially in a hub-and-spoke architecture, as in
	efficient goods delivery) and not commando units (which do have their
	place and are very effective when used in the right situations, but not
	at scale).
	
snippet togaf_introduction_4_Definitions_4.70_Service-Oriented_Architecture_SOA "4.70 Service-Oriented Architecture (SOA)"
	
	An architectural style that supports service orientation.
	
	See also 4.7 Architectural Style and 4.69 Service Orientation .
	
snippet togaf_introduction_4_Definitions_4.71_Service_Portfolio "4.71 Service Portfolio"
	
	A collection of services, potentially an interface definition.
	
	Note:
	    It is used in the TOGAF framework to define the requirement for a
	    building block or system.
	
snippet togaf_introduction_4_Definitions_4.72_Solution_Architecture "4.72 Solution Architecture"
	
	A description of a discrete and focused business operation or activity
	and how IS/IT supports that operation.
	
snippet togaf_introduction_4_Definitions_4.73_Solution_Building_Block_SBB "4.73 Solution Building Block (SBB)"
	
	A physical or implementation-specific component that realizes part or
	all of one or more logical Architecture Building Blocks (ABBs).
	
	Note:
	    There are business, application, and technology SBBs.
	
snippet togaf_introduction_4_Definitions_4.74_Solutions_Continuum "4.74 Solutions Continuum"
	
	A categorization mechanism, with increasing detail and specialization,
	for the components and artifacts stored in the Solutions Landscape or
	Reference Library (part of the Architecture Repository).
	
	See also 4.44 Enterprise Continuum and 4.10 Architecture Continuum .
	
snippet togaf_introduction_4_Definitions_4.75_Stakeholder "4.75 Stakeholder"
	
	An individual, team, organization, or class thereof, having an interest
	in a system.
	
snippet togaf_introduction_4_Definitions_4.76_Standards_Library "4.76 Standards Library"
	
	A library of standards that can be used to define the particular
	services and other components of an Organization-Specific Architecture.
	
	Note:
	    The Standards Library is described in the TOGAF Standard —
	    Architecture Content: Architecture Repository.
	
snippet togaf_introduction_4_Definitions_4.77_Strategic_Architecture "4.77 Strategic Architecture"
	
	A summary formal description of the enterprise, providing an organizing
	framework for operational and change activity, and an executive-level,
	long-term view for direction setting.
	
snippet togaf_introduction_4_Definitions_4.78_Target_Architecture "4.78 Target Architecture"
	
	The description of a future state of the architecture being developed
	for an organization.
	
	Note:
	    There may be several future states developed as a roadmap to show
	    the evolution of the architecture to a target state.
	
snippet togaf_introduction_4_Definitions_4.79_Taxonomy_of_Architecture_Views "4.79 Taxonomy of Architecture Views"
	
	The organized collection of all architecture views pertinent to an
	architecture.
	
snippet togaf_introduction_4_Definitions_4.7_Architectural_Style "4.7 Architectural Style"
	
	The combination of distinctive features related to the specific context
	within which architecture is performed or expressed; a collection of
	principles and characteristics that steer or constrain how an
	architecture is formed.
	
snippet togaf_guides_index_4.7_Selecting_Delivery_Styles "4.7. Selecting Delivery Styles"
	
	This document describes how to apply the TOGAF methodology and framework
	within an Agile delivery environment. However, different delivery styles
	exist, and it may be that some projects or programs are not appropriate
	for Agile delivery. The TOGAF Standard is intentionally flexible to
	accommodate these different styles.
	
	The TOGAF ADM is a framework with a set of possible elements that can be
	applied to different scales of change, from meta to micro.
	
	-   The meta change is the evolving enterprise state space; large-scale
	    change is the evolving backlog, project, or program in scope
	
	-   The micro change is the delivered transition; small-scale change is
	    the delivery unit of each transition within the large-scale change
	
	The meta/micro cycle distinction is usually of characteristic delivery
	style, dependent upon the needs of each change activity; such as:
	
	-   Rapid style: solution – iteration
	
	-   Agile style: backlog – sprint
	
	-   Robust style smaller-scale: PRINCE^(®): project – stage
	
	-   Robust style larger-scale: Managed Service Provider (MSP): program –
	    project
	
snippet togaf_introduction_4_Definitions_4.80_Technology_Architecture "4.80 Technology Architecture"
	
	A description of the structure and interaction of the technology
	services and technology components.
	
	Note:
	    Technology Architecture is described in the TOGAF Standard —
	    Architecture Development Method.
	
snippet togaf_introduction_4_Definitions_4.81_Technology_Component "4.81 Technology Component"
	
	1.  A technology building block. A generic infrastructure technology
	    that supports and enables application or data components (directly
	    or indirectly) by providing technology services.
	2.  An encapsulation of technology infrastructure that represents a
	    class of technology product or specific technology product.
	
snippet togaf_introduction_4_Definitions_4.82_Technology_Service "4.82 Technology Service"
	
	A technical capability required to provide enabling infrastructure that
	supports the delivery of applications.
	
snippet togaf_introduction_4_Definitions_4.83_Transition_Architecture "4.83 Transition Architecture"
	
	A formal description of one state of the architecture at an
	architecturally significant point in time.
	
	Note:
	
	    One or more Transition Architectures may be used to describe the
	    progression in time from the Baseline to the Target Architecture.
	
	    Transition Architecture is described in the TOGAF Standard —
	    Architecture Content: Architecture Definition Document.
	
snippet togaf_introduction_4_Definitions_4.84_Value_Stream "4.84 Value Stream"
	
	A representation of an end-to-end collection of activities that create
	an overall result for a customer, stakeholder, or end user.
	
snippet togaf_introduction_4_Definitions_4.85_View "4.85 View"
	
	See 4.20 Architecture View .
	
snippet togaf_introduction_4_Definitions_4.86_Viewpoint "4.86 Viewpoint"
	
	See 4.21 Architecture Viewpoint .
	
snippet togaf_introduction_4_Definitions_4.87_Viewpoint_Library "4.87 Viewpoint Library"
	
	A collection of the specifications of architecture viewpoints contained
	in the Reference Library portion of the Architecture Repository.
	
snippet togaf_introduction_4_Definitions_4.88_Work_Package "4.88 Work Package"
	
	A set of actions identified to achieve one or more objectives for the
	business. A work package can be a part of a project, a complete project,
	or a program.
	
snippet togaf_guides_index_4.8_Agility_at_the_Highest_Levels_of_Architecture "4.8. Agility at the Highest Levels of Architecture"
	
	As Figure 6 shows, the highest level of architecture begins with an
	architecture vision and strategy at the enterprise level, which provides
	a long-term view of the target state and surrounding business landscape.
	The development of the vision and strategy can be done in an Agile
	style, through multiple iterations as architects collaborate with their
	business partners. Typically, architecture delivered at this level is
	visionary and conceptual, and often provides a lot of flexibility to
	architects who use this vision to prepare more detailed architectures.
	The release of such high-level deliverables can span a long duration,
	and an indicator of organizational agility is the speed with which
	vision and strategy can change.
	
	The speed of change also depends on the impact of the change. Changes
	that are non-disruptive to the current vision and strategy are
	relatively quick and easy to complete. Changes that create a huge pivot
	in the current strategy and vision should be assessed to see how much
	disruption they may cause to the currently derived or in-flight
	architectures. Such changes could have a trickle-down effect as many
	derived architectures at lower levels are impacted. The frequency and
	the amount of changes to the architectures at the highest levels should
	be less than those at the lower levels. How much change is feasible
	depends on the organization’s tolerance to the amount of agility.
	
	Business partners and architects collaborate constantly to produce
	transition state architectures and align on the aspirational target
	states. Architects should also align to business goals and evolve the
	architectures such that every transition state provides an incremental
	business value.
	
	[Agility at Different Levels of Architecture]
	
	Figure 6. Agility at Different Levels of Architecture
	
snippet togaf_introduction_4_Definitions_4.8_Architecture "4.8 Architecture"
	
	1.  The fundamental concepts or properties of a system in its
	    environment embodied in its elements, relationships, and in the
	    principles of its design and evolution. (Source: ISO/IEC/IEEE
	    42010:2011)
	2.  The structure of components, their inter-relationships, and the
	    principles and guidelines governing their design and evolution over
	    time.
	
snippet togaf_introduction_4_Definitions_4.9_Architecture_Building_Block_ABB "4.9 Architecture Building Block (ABB)"
	
	An architectural component that specifies the required Solution Building
	Blocks (SBBs) at a more logical (or supplier-independent) level.
	
	See also 4.26 Building Block .
	
snippet togaf_ea-capability-and-governance_INDEX_4_Architecture_Board "-   4. Architecture Board"
	    -   4.1 Role
	    -   4.2 Responsibilities
	    -   4.3 Setting Up the Architecture Board
	        -   4.3.1 Triggers
	        -   4.3.2 Size of the Board
	        -   4.3.3 Board Structure
	    -   4.4 Operation of the Architecture Board
	        -   4.4.1 General
	        -   4.4.2 Preparation
	        -   4.4.3 Agenda
	            -   Minutes of Previous Meeting
	            -   Requests for Change
	            -   Dispensations
	            -   Compliance Assessments
	            -   Dispute Resolution
	            -   Architecture Strategy and Direction Documentation
	            -   Actions Assigned
	            -   Contract Documentation Management
	            -   Any Other Business (AOB)
	            -   Schedule of Meetings
snippet togaf_ea-capability-and-governance_4_Architecture_Board_4_Architecture_Board "4. Architecture Board"
	
	  -- -------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 4.1 Role | 4.2 Responsibilities | 4.3 Setting Up the Architecture Board | 4.4 Operation of the Architecture Board
	  -- -------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter provides guidelines for establishing and operating an
	Enterprise Architecture Board.
	
snippet togaf_architecture-content_INDEX_4_Architecture_Deliverables "-   4. Architecture Deliverables"
	    -   4.1 Introduction
	    -   4.2 Deliverable Descriptions
	        -   4.2.1 Architecture Building Blocks
	        -   4.2.2 Architecture Contract
	            -   Purpose
	            -   Content
	        -   4.2.3 Architecture Definition Document
	            -   Purpose
	            -   Content
	        -   4.2.4 Architecture Principles
	            -   Purpose
	            -   Content
	        -   4.2.5 Architecture Repository
	            -   Purpose
	            -   Content
	        -   4.2.6 Architecture Requirements Specification
	            -   Purpose
	            -   Content
	        -   4.2.7 Architecture Roadmap
	            -   Purpose
	            -   Content
	        -   4.2.8 Architecture Vision
	            -   Purpose
	            -   Content
	        -   4.2.9 Business Principles, Business Goals, and Business
	            Drivers
	            -   Purpose
	            -   Content
	        -   4.2.10 Capability Assessment
	            -   Purpose
	            -   Content
	        -   4.2.11 Change Request
	            -   Purpose
	            -   Content
	        -   4.2.12 Communications Plan
	            -   Purpose
	            -   Content
	        -   4.2.13 Compliance Assessment
	            -   Purpose
	            -   Content
	        -   4.2.14 Implementation and Migration Plan
	            -   Purpose
	            -   Content
	        -   4.2.15 Implementation Governance Model
	            -   Purpose
	            -   Content
	        -   4.2.16 Organizational Model for Enterprise Architecture
	            -   Purpose
	            -   Content
	        -   4.2.17 Request for Architecture Work
	            -   Purpose
	            -   Content
	        -   4.2.18 Requirements Impact Assessment
	            -   Purpose
	            -   Content
	        -   4.2.19 Solution Building Blocks
	        -   4.2.20 Statement of Architecture Work
	            -   Purpose
	            -   Content
	        -   4.2.21 Tailored Architecture Framework
	            -   Purpose
	            -   Content
snippet togaf_architecture-content_4_Architecture_Deliverables_4_Architecture_Deliverables "4. Architecture Deliverables"
	
	  -- -------------------------------------------------------------------
	     Chapter Contents: 4.1 Introduction | 4.2 Deliverable Descriptions
	  -- -------------------------------------------------------------------
	
	This chapter provides descriptions of deliverables referenced in the
	ADM.
	
snippet togaf_applying-the-adm_INDEX_4_Architecture_Partitioning "-   4. Architecture Partitioning"
	    -   4.1 Overview
	    -   4.2 Applying Classification to Create Partitioned Architectures
	        -   4.2.1 Activities within the Preliminary Phase
	    -   4.3 Integration
	
snippet togaf_applying-the-adm_4_Architecture_Partitioning_4_Architecture_Partitioning "4. Architecture Partitioning"
	
	  -- --------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 4.1 Overview | 4.2 Applying Classification to Create Partitioned Architectures | 4.3 Integration
	  -- --------------------------------------------------------------------------------------------------------------------
	
snippet togaf_adm-techniques_INDEX_4_Architecture_Patterns "-   4. Architecture Patterns"
	    -   4.1 Introduction
	        -   4.1.1 Background
	        -   4.1.2 Content of a Pattern
	        -   4.1.3 Terminology
	            -   4.1.3.1 Architecture Patterns and Design Patterns
	            -   4.1.3.2 Patterns and the Architecture Continuum
	            -   4.1.3.3 Patterns and Views
	            -   4.1.3.4 Patterns and Business Scenarios
	    -   4.2 Some Pattern Resources
snippet togaf_adm-techniques_4_Architecture_Patterns_4_Architecture_Patterns "4. Architecture Patterns"
	
	  -- -----------------------------------------------------------------
	     Chapter Contents: 4.1 Introduction | 4.2 Some Pattern Resources
	  -- -----------------------------------------------------------------
	
	This chapter provides guidelines for using architecture patterns.
	
snippet togaf_adm-practitioners_4_Business_Cycle_4_Business_Cycle "4 Business Cycle"
	
	All organizations have existing change processes. The EA team needs to
	be aligned with the organization’s planning, budgeting, operational, and
	change processes.[17] The Practitioner must understand that a
	theoretically perfect world where the EA team is engaged in all change
	cannot be expected. In practice, the scope of the EA team will be
	limited to some purposes, or will only be engaged in some changes. The
	TOGAF Standard says you need to configure the ADM to align to your
	business. This is commonly interpreted to fit the ADM as an end-to-end
	process as an appendage to existing business processes. Instead, the
	architecture development processes need to feed, and support, the
	existing change processes. This means the ADM is used to deliver work
	products useful to other processes, and just enough of the ADM is used
	to deliver to other Enterprise processes.
	
snippet togaf_adm_INDEX_4_B_Business_Architecture "-   4. Phase B: Business Architecture"
	    -   4.1 Objectives
	    -   4.2 Inputs
	        -   4.2.1 Reference Materials External to the Enterprise
	        -   4.2.2 Non-Architectural Inputs
	        -   4.2.3 Architectural Inputs
	    -   4.3 Steps
	        -   4.3.1 Select Reference Models, Viewpoints, and Tools
	            -   4.3.1.1 Determine Overall Modeling Process
	            -   4.3.1.2 Identify Required Catalogs of Business Building
	                Blocks
	            -   4.3.1.3 Identify Required Matrices
	            -   4.3.1.4 Identify Required Diagrams
	            -   4.3.1.5 Identify Types of Requirement to be Collected
	        -   4.3.2 Develop Baseline Business Architecture Description
	        -   4.3.3 Develop Target Business Architecture Description
	        -   4.3.4 Perform Gap Analysis
	        -   4.3.5 Define Candidate Roadmap Components
	        -   4.3.6 Resolve Impacts Across the Architecture Landscape
	        -   4.3.7 Conduct Formal Stakeholder Review
	        -   4.3.8 Finalize the Business Architecture
	        -   4.3.9 Create/Update the Architecture Definition Document
	    -   4.4 Outputs
	    -   4.5 Approach
	        -   4.5.1 General
	        -   4.5.2 Developing the Baseline Description
	        -   4.5.3 Applying Business Capabilities
	        -   4.5.4 Applying Value Streams
	        -   4.5.5 Applying the Organization Map
	        -   4.5.6 Applying Information Maps
	        -   4.5.7 Applying Modeling Techniques
	        -   4.5.8 Architecture Repository
snippet togaf_adm_4_B_Business_Architecture_4_B_Business_Architecture "4. Phase B: Business Architecture"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 4.1 Objectives | 4.2 Inputs | 4.3 Steps | 4.4 Outputs | 4.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the development of a Business Architecture to
	support an agreed Architecture Vision.
	
	[]
	
	Figure 4-1: Phase B: Business Architecture
	
snippet togaf_architecture-maturity-models_4_Conclusions "4 Conclusions"
	
	This document has sought to introduce the topic of CMM-based methods and
	techniques for use in relation to Enterprise Architecture.
	
	The benefits of using CMMs are well documented. Future versions of the
	TOGAF Standard may include a maturity model to measure adoption of the
	TOGAF Standard itself.
	
	 
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] Refer to www.sei.cmu.edu.
	
	[2] Available at:
	http://www.sei.cmu.edu/publications/documents/01.reports/01hb001.html.
	
snippet togaf_business-architecture_business-scenarios_4_Contents_of_a_Business_Scenario "4 Contents of a Business Scenario"
	
	The documentation of a Business Scenario should contain all the
	important details about the scenario. It should capture, and sequence,
	the critical steps and interactions between actors that address the
	situation. It should also declare all the relevant information about all
	actors, specifically: the different responsibilities of the actors; the
	key pre-conditions that have to be met prior to proper system
	functionality; and the technical requirements for the service to be of
	acceptable quality.
	
	There are two main types of content: graphics (models) and descriptive
	text. Both have a part to play:
	
	-   Business Scenario models capture business and technology views in a
	    graphical form, to aid comprehension; specifically, they relate
	    actors and interactions, and give a starting point to confirm
	    specific requirements
	-   Business Scenario documents capture details in textual form; a
	    typical contents list for a Business Scenario is given below
	
	+-----------------------+-----------------------+-----------------------+
	| Version History       |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Contents              |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| Preface (general      |                       |                       |
	| background and why    |                       |                       |
	| use the Business      |                       |                       |
	| Scenario method)      |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	| 1.                    |                       | Executive Summary     |
	+-----------------------+-----------------------+-----------------------+
	|                       | 1.1                   | “So What?” or why is  |
	|                       |                       | this Business         |
	|                       |                       | Scenario needed?      |
	+-----------------------+-----------------------+-----------------------+
	|                       | 1.2                   | Who will use this     |
	|                       |                       | Business Scenario?    |
	|                       |                       | “So that ….” or how   |
	|                       |                       | used?                 |
	+-----------------------+-----------------------+-----------------------+
	| 2.                    |                       | Document Roadmap      |
	+-----------------------+-----------------------+-----------------------+
	| 3.                    |                       | Business Scenario     |
	+-----------------------+-----------------------+-----------------------+
	|                       | 3.1                   | Background of         |
	|                       |                       | Scenario              |
	+-----------------------+-----------------------+-----------------------+
	|                       | 3.2                   | Purpose of Scenario   |
	+-----------------------+-----------------------+-----------------------+
	|                       | 3.3                   | Definition of Terms   |
	|                       |                       | (what does x mean)    |
	+-----------------------+-----------------------+-----------------------+
	|                       | 3.4                   | Development of the    |
	|                       |                       | Business Scenario     |
	+-----------------------+-----------------------+-----------------------+
	| 4.                    |                       | Business Environment  |
	+-----------------------+-----------------------+-----------------------+
	|                       | 4.1                   | Constituencies        |
	+-----------------------+-----------------------+-----------------------+
	|                       | 4.2                   | Business Drivers      |
	+-----------------------+-----------------------+-----------------------+
	|                       | 4.3                   | Business Process (aka |
	|                       |                       | Value Stream)         |
	+-----------------------+-----------------------+-----------------------+
	|                       | 4.4                   | Human Actors and      |
	|                       |                       | Roles                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | 4.5                   | Relationship to       |
	|                       |                       | Processes             |
	+-----------------------+-----------------------+-----------------------+
	| 5.                    |                       | Technical Environment |
	+-----------------------+-----------------------+-----------------------+
	|                       | 5.1                   | Technical Process     |
	|                       |                       | (aka Value Stream)    |
	+-----------------------+-----------------------+-----------------------+
	|                       | 5.2                   | Computer Actors and   |
	|                       |                       | Roles                 |
	+-----------------------+-----------------------+-----------------------+
	|                       | 5.3                   | Relationship to       |
	|                       |                       | Processes             |
	+-----------------------+-----------------------+-----------------------+
	| 6.                    |                       | Business Scenario     |
	|                       |                       | Analysis              |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.1                   | Problem Summary       |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.2                   | Issues/Pain Points    |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.3                   | Desired Outcomes      |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.4                   | Information Flow      |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.5                   | Requirements          |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.6                   | Principles and        |
	|                       |                       | Constraints           |
	+-----------------------+-----------------------+-----------------------+
	|                       | 6.7                   | Resulting             |
	|                       |                       | Architecture Models   |
	+-----------------------+-----------------------+-----------------------+
	| 7.                    |                       | Prioritized Areas for |
	|                       |                       | Standardization       |
	+-----------------------+-----------------------+-----------------------+
	|                       | 7.1                   | Priorities by Process |
	|                       |                       | Area                  |
	+-----------------------+-----------------------+-----------------------+
	|                       | 7.2                   | Suggested Starting    |
	|                       |                       | Points                |
	+-----------------------+-----------------------+-----------------------+
	| 8.                    |                       | Summary and Next      |
	|                       |                       | Steps                 |
	+-----------------------+-----------------------+-----------------------+
	| Appendix A            |                       | Additional            |
	|                       |                       | Information           |
	+-----------------------+-----------------------+-----------------------+
	| Appendix B            |                       | Referenced Documents  |
	+-----------------------+-----------------------+-----------------------+
	| Appendix C            |                       | Workshop Notes        |
	+-----------------------+-----------------------+-----------------------+
	| Appendix D            |                       | Acknowledgements      |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_reference-models_digital-business-reference-model_4_DBRM_Elements_in_Detail "4 DBRM Elements in Detail"
	
snippet togaf_introduction_INDEX_4_Definitions "-   4. Definitions"
	    -   4.1 Abstraction
	    -   4.2 Actor
	    -   4.3 Application Architecture
	    -   4.4 Application Component
	    -   4.5 Application Platform
	    -   4.6 Application Service
	    -   4.7 Architectural Style
	    -   4.8 Architecture
	    -   4.9 Architecture Building Block (ABB)
	    -   4.10 Architecture Continuum
	    -   4.11 Architecture Development Method (ADM)
	    -   4.12 Architecture Domain
	    -   4.13 Architecture Framework
	    -   4.14 Architecture Governance
	    -   4.15 Architecture Landscape
	    -   4.16 Architecture Level
	    -   4.17 Architecture Model
	    -   4.18 Architecture Partition
	    -   4.19 Architecture Principle
	    -   4.20 Architecture View
	    -   4.21 Architecture Viewpoint
	    -   4.22 Architecture Vision
	    -   4.23 Artifact
	    -   4.24 Baseline
	    -   4.25 Boundaryless Information FlowTM
	    -   4.26 Building Block
	    -   4.27 Business Architecture
	    -   4.28 Business Capability
	    -   4.29 Business Function
	    -   4.30 Business Governance
	    -   4.31 Business Model
	    -   4.32 Business Service
	    -   4.33 Capability
	    -   4.34 Capability Architecture
	    -   4.35 Capability Increment
	    -   4.36 Communications and Stakeholder Management
	    -   4.37 Concern
	    -   4.38 Course of Action
	    -   4.39 Data Architecture
	    -   4.40 Deliverable
	    -   4.41 Digital Architecture
	    -   4.42 Enterprise
	    -   4.43 Enterprise Architecture Service
	    -   4.44 Enterprise Continuum
	    -   4.45 Foundation Architecture
	    -   4.46 Framework
	    -   4.47 Gap
	    -   4.48 Governance
	    -   4.49 Information
	    -   4.50 Information Technology (IT)
	    -   4.51 Interoperability
	    -   4.52 Logical
	    -   4.53 Metadata
	    -   4.54 Metamodel
	    -   4.55 Method
	    -   4.56 Modeling
	    -   4.57 Model Kind
	    -   4.58 Objective
	    -   4.59 Pattern
	    -   4.60 Physical
	    -   4.61 Principle
	    -   4.62 Product
	    -   4.63 Reference Model (RM)
	    -   4.64 Requirement
	    -   4.65 Roadmap
	    -   4.66 Role
	    -   4.67 Segment Architecture
	    -   4.68 Service
	    -   4.69 Service Orientation
	    -   4.70 Service-Oriented Architecture (SOA)
	    -   4.71 Service Portfolio
	    -   4.72 Solution Architecture
	    -   4.73 Solution Building Block (SBB)
	    -   4.74 Solutions Continuum
	    -   4.75 Stakeholder
	    -   4.76 Standards Library
	    -   4.77 Strategic Architecture
	    -   4.78 Target Architecture
	    -   4.79 Taxonomy of Architecture Views
	    -   4.80 Technology Architecture
	    -   4.81 Technology Component
	    -   4.82 Technology Service
	    -   4.83 Transition Architecture
	    -   4.84 Value Stream
	    -   4.85 View
	    -   4.86 Viewpoint
	    -   4.87 Viewpoint Library
	    -   4.88 Work Package
snippet togaf_introduction_4_Definitions_4_Definitions "4. Definitions"
	
	
	     Chapter Contents: 4.1 Abstraction | 4.2 Actor | 4.3 Application Architecture | 4.4 Application Component | 4.5 Application Platform | 4.6 Application Service | 4.7 Architectural Style | 4.8 Architecture | 4.9 Architecture Building Block (ABB) | 4.10 Architecture Continuum | 4.11 Architecture Development Method (ADM) | 4.12 Architecture Domain | 4.13 Architecture Framework | 4.14 Architecture Governance | 4.15 Architecture Landscape | 4.16 Architecture Level | 4.17 Architecture Model | 4.18 Architecture Partition | 4.19 Architecture Principle | 4.20 Architecture View | 4.21 Architecture Viewpoint | 4.22 Architecture Vision | 4.23 Artifact | 4.24 Baseline | 4.25 Boundaryless Information Flow^(TM) | 4.26 Building Block | 4.27 Business Architecture | 4.28 Business Capability | 4.29 Business Function | 4.30 Business Governance | 4.31 Business Model | 4.32 Business Service | 4.33 Capability | 4.34 Capability Architecture | 4.35 Capability Increment | 4.36 Communications and Stakeholder Management | 4.37 Concern | 4.38 Course of Action | 4.39 Data Architecture | 4.40 Deliverable | 4.41 Digital Architecture | 4.42 Enterprise | 4.43 Enterprise Architecture Service | 4.44 Enterprise Continuum | 4.45 Foundation Architecture | 4.46 Framework | 4.47 Gap | 4.48 Governance | 4.49 Information | 4.50 Information Technology (IT) | 4.51 Interoperability | 4.52 Logical | 4.53 Metadata | 4.54 Metamodel | 4.55 Method | 4.56 Modeling | 4.57 Model Kind | 4.58 Objective | 4.59 Pattern | 4.60 Physical | 4.61 Principle | 4.62 Product | 4.63 Reference Model (RM) | 4.64 Requirement | 4.65 Roadmap | 4.66 Role | 4.67 Segment Architecture | 4.68 Service | 4.69 Service Orientation | 4.70 Service-Oriented Architecture (SOA) | 4.71 Service Portfolio | 4.72 Solution Architecture | 4.73 Solution Building Block (SBB) | 4.74 Solutions Continuum | 4.75 Stakeholder | 4.76 Standards Library | 4.77 Strategic Architecture | 4.78 Target Architecture | 4.79 Taxonomy of Architecture Views | 4.80 Technology Architecture | 4.81 Technology Component | 4.82 Technology Service | 4.83 Transition Architecture | 4.84 Value Stream | 4.85 View | 4.86 Viewpoint | 4.87 Viewpoint Library | 4.88 Work Package
	
	
	For the purposes of the TOGAF Standard, the following terms and
	definitions apply. B. Glossary of Supplementary Definitions should be
	referenced for supplementary definitions not defined in this chapter.
	The Merriam-Webster® Collegiate Dictionary should be referenced for
	terms not defined in this section or B. Glossary of Supplementary
	Definitions .
	
snippet togaf_guides_index_4_Developing_Architecture_in_an_Agile_Way "4. Developing Architecture in an Agile Way"
	
snippet togaf_architecture-skills-framework_4_Enterprise_Architecture_Role_and_Skill_Categories "4 Enterprise Architecture Role and Skill Categories"
	
snippet togaf_togaf-leaders-guide_4_Enterprise_Context_and_EA_Context_4_Enterprise_Context_and_EA_Context "4 Enterprise Context and EA Context"
	
	To develop an EA Capability requires an understanding of the enterprise
	in question. The understanding gained through this exercise is the
	foundation for tailoring, prioritizing, and building an EA Capability.
	The focus of this chapter is to gain an understanding of the context and
	the need for an EA Capability to be built for the enterprise.
	
	Every enterprise has a different context – the circumstances that led to
	its creation and current setting must be fully understood and assessed.
	Without an explicit understanding of an enterprise’s context, there is a
	risk of carrying an implicit or derived context into the analysis,
	usually based upon prior experience or an enterprise’s recent past.
	Proceeding with derived context often results in failure of the EA
	Capability. Creation of an EA Capability is often associated with change
	events, and must be aligned with the current context.
	
	Questions that must be answered to have clarity about the enterprise
	context and an EA context include:
	
	-   What is the enterprise?
	-   What is the enterprise’s purpose or mission?
	-   What is the enterprise’s strategic position and approach?
	-   What is the enterprise’s environment?
	-   What is the special context of the EA Capability?
	-   What architecture principles will drive choices?
	
	Strategic business architecture involves understanding what the
	enterprise is, analyzing the purpose for the enterprise and success
	measures, along with its environment. Operational business architecture
	is about analyzing, documenting, and refining how the parts of the
	enterprise execute their work on a day-to-day basis.
	
	Providing context requires strategic business architecture. Developing
	other capabilities uses the same understanding. Developing these
	descriptions is iterative. This chapter will describe why it must be
	iterative. The first principle of being iterative is to obtain the level
	of detail necessary to answer the question at hand, and, as the
	questions become more precise, to increase the level of detail captured.
	
	Always revisit existing material to simply confirm that the content is
	current. Refine or update only when necessary. When existing principles
	are available, review the existing architecture principles to understand
	how the EA Capability has been framed regarding purpose, role, and
	engagement. It is too early in the process to start creating principles.
	
snippet togaf_digital-technology-adoption_4_Factors_Impacting_Digital_Technology_Adoption "4 Factors Impacting Digital Technology Adoption"
	
	Foundational factors: factors that organizations must have to establish
	the minimum acceptable readiness to adopt digital technologies.
	
	Impact factors: factors that enhance or amplify the effectiveness of
	primary factors by providing supporting conditions.
	
	Sustaining factors: factors that enable the institutionalization of the
	adoption of digital technologies for sustained long-term benefits.
	
	Table 1: Factor Categorization
	
	  Foundational Factors        Impact Factors                Sustaining Factors
	  --------------------------- ----------------------------- ------------------------
	  Vision                      Business Model Adaptability   Value Realization
	  Sponsorship and Direction   Skills and Competence         Policy and Regulations
	  IT Capability               Technology Maturity           Funding and Resources
	  Culture                     Ecosystem                     
	  Scope and Scale             Governance and Compliance     
	  Business Rationale                                        
	  Implementation Approach                                   
	
	In Table 1, factors are arranged in each category. To map the relations
	amongst the factors, a factor dependency diagram is created (see Figure
	2). This diagram highlights how these factors are inter-dependent,
	depicting only the strong and dominant relationships among the factors.
	The subsequent chapters describe the factors along with short case
	contexts in practical settings to enable deeper thinking and reflection.
	
	[]
	
	Figure 2: Factor Dependency Diagram
	
snippet togaf_reference-models_government-reference-model_4_General_Government_and_Local_Services "4 General Government and Local Services"
	
	General Government and Local Services involves the provision of general
	customer services and operations including registrations, licensing,
	applications, workforce planning, social services, management of labor
	rights, and local services.
	
	[]
	
	Figure 4: Structure and Content Overview of the L1-L3 Elements of the
	Proposed General Government and Local Services Sector
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_4_How_the_TOGAF_Standard_Supports_the_Digital_Enterprise "4. How the TOGAF Standard Supports the Digital Enterprise"
	
snippet togaf_architecture-project-management_4_PRINCE2_to_ADM_Mapping "4 PRINCE2 to ADM Mapping"
	
	The aim of this section is to present a mapping of the TOGAF ADM to
	PRINCE2. This section is assumed to provide general information about
	the mapping, not detailed information about the TOGAF ADM phases and
	PRINCE2 processes; therefore, the standard terms are used without
	description. For more detailed information, please refer to the TOGAF
	Standard and Managing Successful Projects with PRINCE2.
	
	In general, the TOGAF ADM Phase A (Architecture Vision) can be mapped to
	the PRINCE2 processes “Starting up the project” and “Initiation”. The
	TOGAF ADM Phase B (Business Architecture), Phase C (Information Systems
	Architectures), Phase D (Technology Architecture), Phase E
	(Opportunities and Solutions), and Phase F (Migration Planning) can be
	grouped together and considered substantive Architecture Project phases,
	which – according to PRINCE2 – should be considered work delivery
	stages.
	
	Division of the TOGAF ADM Phase B to F into PRINCE2 work delivery stages
	depends on the scale and constraints of the Architecture Project.
	
snippet togaf_metadata-management_4_Process_and_Methodology "4 Process and Methodology"
	
snippet togaf_master-data-management_4_Process_and_Methodology "4 Process and Methodology"
	
	In this chapter, an adaptation of the TOGAF ADM is proposed to support
	the execution of a C-MDM transformation program.
	
snippet togaf_integrating-risk-and-security_4_Security_as_a_Cross-Cutting_Concern_4_Security_as_a_Cross-Cutting_Concern "4 Security as a Cross-Cutting Concern"
	
	Security Architecture is a cross-cutting concern, pervasive through the
	whole Enterprise Architecture. It can be described as a coherent
	collection of views, viewpoints, and artifacts, including security,
	privacy, and operational risk perspectives, along with related topics
	like security objectives and security services. The Security
	Architecture is more than a dataset; it is based on the ISM and ERM
	processes.
	
	The TOGAF ADM covers the development of the four architecture domains
	commonly accepted as subsets of an Enterprise Architecture: Business,
	Data, Application, and Technology. The Security Architecture interacts
	with all four of them and is therefore called cross-cutting.
	
	[]
	
	Figure 5: Security as a Cross-Cutting Concern through the Architecture
	
	As a cross-cutting concern, the Security Architecture impacts and
	informs the Business, Data, Application, and Technology Architectures.
	The Security Architecture may often be organized outside of the
	architecture scope, yet parts of it need to be developed in an
	integrated fashion with the architecture. These touch-points will be
	explained in the next chapter.
	
snippet togaf_business-architecture_business-capabilities_4_The_Impact_and_Benefits_of_Business_Capability_Mapping "4 The Impact and Benefits of Business Capability Mapping"
	
	As a foundational part of a Business Architecture blueprint, the
	business capability map can provide benefits at a strategic level, at an
	enterprise-wide scope, or for individual projects. To the Enterprise
	Architect, the usage of the capability map is only constrained by the
	scope of the architecture effort itself and often starts with previous
	work at a very broad scope across the business.
	
	Some of the impacts and benefits include:
	
	-   Providing a common vocabulary or language around what the business
	    does, while being agnostic to specific organizational units,
	    business processes, or technologies
	-   Allowing business relationships to be understood in terms of how
	    many domains relate back to the same ability to perform a business
	    activity
	-   Focusing investments and cost savings through mapping to the same
	    business capabilities
	-   Relating projects to each other through mapping back to a common
	    view of capabilities
	-   Ensuring stakeholders agree on the capabilities to be delivered to
	    the business before proposing potentially incorrect or incomplete
	    solutions
	-   Determining which capabilities provide the means to deliver value
	    for the stages of a value stream
	
	For a powerful use-case applying business capability maps for Portfolio
	and Project Management, see The Open Group Guide to Capability-Based
	Planning (see Referenced Documents). That document describes
	capability-based planning, which is a way of creating a line of sight
	between objectives and goals, and the organization’s capability, as well
	as changing initiatives. Benefits and associated principles are expanded
	on by the Business Architecture Guild.[3]
	
snippet togaf_business-architecture_organization-mapping_4_The_Impact_and_Benefits_of_Organization_Mapping "4 The Impact and Benefits of Organization Mapping"
	
	The benefits of organization mapping include:
	
	-   Improves understanding of the organization
	
	Conventional organization charts reveal little about the interactions
	and relationships of an organization. For example, an organization
	chart, with its typical internal focus, doesn’t lend itself to
	describing cooperative or collaborative relationships among business
	units and external parties. By relying on simple organization charts,
	the lack of organizational knowledge can sub-optimize an organization’s
	understanding of which business units may be impacted by changes in
	business conditions and how they may be impacted. Planners typically
	have to rely on their collective wisdom to fill in the gaps of missing
	knowledge about the organization. The organization map provides
	transparency of the organization necessary to identify and appropriately
	engage impacted business units.
	
	-   Improves strategic planning
	
	The organization map is an essential part of a holistic and integrated
	approach to strategic planning and investment analysis. Business units
	historically often plan in isolation and miss opportunities to
	understand how the change initiatives they sponsor affect other
	organizations and vice versa. This results in initiatives that are often
	sub-optimized or even fail due to the lack of cross-organizational
	planning, coordination, and funding. Organization mapping provides a
	means for the organization to identify and engage all business units
	impacted by strategic change early on. This greatly improves strategic
	planning and investment analysis for the organization.
	
	-   Provides organizational context for deployment
	
	The organization map provides the foundation for describing the
	applicability of business capabilities, architecture designs, and
	solutions to impacted business units. This is especially critical for
	large organizations that aim to maximize asset reuse across numerous
	diverse business units. The organization map helps to answer questions
	like: What business units do a particular requirement, architecture
	design, or solution apply to? What business units are impacted for a
	given requirement, architecture design, or solution? How should business
	capabilities be deployed across multiple business units?
	
	-   Improves communication and collaboration
	
	As a core element of Business Architecture, the organization map plays a
	key part in providing the transparency required for effective
	communication and collaboration. One of the main objectives of the
	organization map is to identify what organizations are impacted by a
	particular planning activity or change initiative. This information is a
	key input into the communication plan and stakeholder analysis. Another
	objective is to identify which organizations need to collaborate to
	realize the goals and objectives of the initiative.
	
	-   Improves the effectiveness of organizational change management
	
	By providing transparency into the business units affected by the
	proposed change, the organization map helps prepare and support impacted
	business units and individuals to successfully adopt change. Combined
	with more detailed artifacts such as the business interaction matrix,
	role catalog, and the actor/role matrix, the organization map is a key
	input to identifying organizational change management impacts, defining
	job functions, and executing training.
	
snippet togaf_business-architecture_business-models_4_The_Relationship_between_Business_Models_and_Business_Architecture "4 The Relationship between Business Models and Business Architecture"
	
	Business models provide a high-level visual representation of the
	current-state and/or future-state design of a business. They describe
	the rationale for how an organization creates, captures, and delivers
	value to its various internal and external stakeholders.
	
	Business models also provide a basis for establishing a common
	understanding of how to describe and manipulate the business in pursuit
	of new strategic alternatives. In that sense, business models are a
	starting point for discussions around business innovation and strategy
	planning for the allocation of resources.
	
	The development of a business model is initially performed at a
	relatively abstract or conceptual level. Maintaining this summary view
	encourages and enables the creative thought process that underpins
	innovation. It also helps to communicate key ideas about the vision and
	strategy to a broad audience, at a level that is appropriate to generate
	cross-disciplinary discussion and promote buy-in.
	
	Usually there is just enough information available in a draft business
	model for interested parties to explore overall feasibility and support
	strategic decision-making. On the other hand, the sketch view does not
	normally contain sufficient information to perform a risk assessment or
	to develop a plan to execute the agreed strategy.
	
	While the business model creates alignment for achieving business
	strategy, it is the Business Architecture that articulates the different
	perspectives and impacts of the business model. Business Architecture
	breaks the business model down into the core functional elements that
	describe how the business works, including the business capabilities,
	value streams, organizational structure and information objects required
	to deliver the desired business result. This process can also identify
	gaps and conflicts in the thinking and assumptions used to create the
	business model. In doing so, it can loop the discussion back to any
	required changes or improvements to the business model.
	
	In the TOGAF Standard, Phase B: Business Architecture is where
	architects take the high-level business model artifact and develop a
	detailed set of architecture blueprints (representing different
	viewpoints of the proposal) to enable more in-depth planning,
	investment, and option analysis (see Figure 5). These detailed
	perspectives are useful and necessary for planning teams, business
	analysts, and business unit managers to understand and evaluate the
	overall impact of the proposed business model on the operation.
	
	[]
	
	(Source: (top-left) The Five Competitive Forces that Shape Strategy,
	Michael E. Porter, 2008; and (Business Architecture Blueprints)
	BIZBOK^(®) Guide, Version 6.5, 2018)
	
	Figure 5: Relationships between Strategy, Business Models, and
	Architecture
	
snippet togaf_business-architecture_information-mapping_4_The_Relationship_to_Business_Capabilities_Value_Streams_and_Organization_Maps "4 The Relationship to Business Capabilities, Value Streams, and Organization Maps"
	
	While data is often considered an IT domain, business information is the
	baseline from which business knowledge evolves. Business Architecture
	requires a way to talk about business information concepts unhindered by
	the restrictions of IT systems. For example, in Business Architecture it
	is appropriate to talk about “customer motivation”, a domain concept
	that is not realizable in an IT system because it is not possible to
	directly read the mind of a customer.
	
	As covered above, there are multiple acceptable methods to initially
	develop the Information Map. When relating the concepts to other aspects
	of Business Architecture, however, the first step is generally linking
	information to business capabilities. The Information Map is most
	closely tied to the business capability map, where information concepts
	are used by business capabilities when designing future-state Business
	Architectures as well as subsequent information systems. Business
	capabilities typically establish information concepts.
	
	For example, the Investment Management capability can be defined as the
	“ability to identify, develop, analyze, valuate, exchange, acquire,
	dispose of, and report on any type of monetary asset purchased with the
	idea that the asset will provide income in the future or will be sold at
	a higher price for a profit”. While the primary information concept for
	this capability is Investment, additional information concepts are used
	by Investment Management and, conversely, Investment information is used
	by other capabilities. A subset of capability-to-information
	cross-mappings involved in framing an Investment are represented in
	Figure 2. A more comprehensive mapping would include Agreement, Partner,
	and other capabilities and information concepts.
	
	[Capability-InfoConcept-Cross-Mapping-BAGuild_2019-02-19]
	
	Figure 2: Business Capabilities and Information Concepts
	
	Each capability in Figure 2 requires and modifies information concepts
	directly related to that capability, such as Investment Management,
	which modifies Investment information. In addition, Investment
	Management requires Financial Instrument information as well as
	information on the Financial Transaction marking the execution of the
	trade. Similarly, Payment Management requires Investment Information,
	and Financial Transaction Management requires Investment and Payment
	information. Notice that in each of these examples the business
	artifacts can be characterized and related without assuming specific
	implementations, such as data repositories and business systems. This
	mapping allows many approaches for assigning roles to execute processes,
	more powerful architectural assessments, and a broader array of
	solutions.
	
	The relationship of information to value streams is subtler and more
	indirect. The use of information concepts is through the business
	capabilities that modify information content through outcomes. This is a
	key distinction since using value streams directly to drive usage of
	information probably indicates the architect is really modeling the
	implemented business process, not the value-delivering activities at a
	more abstract level. Value streams, however, do provide the value
	measurement that drives the assessment of business capability gaps,[1]
	which in turn are assessed through business information (as well as
	roles, processes, and resources such as technologies).
	
	Finally, Information Maps have a relationship to stakeholder maps. If
	your business already has a stakeholder map, it can be used to help
	define information concepts in the Information Map. In order to derive
	the most value from the Information Map, it is important to maintain
	independence from the organization map. Relationships of information to
	business unit, partner, or collaborative team (in the organization map)
	are discoverable by tracing to business capabilities. Then the architect
	traces usage of information concepts to those business capabilities as
	part of building a framework (the Business Architecture foundation) or
	as part of solving a specific set of business problems.
	
snippet togaf_guides_agile-sprints_4_TOGAF_Phases_and_Sprints "4 TOGAF Phases and Sprints"
	
	Each MVA created by the Enterprise Architecture team can contain some or
	all TOGAF ADM phases. Creating partitions (i.e., MVAs) of the
	architecture is already part of ADM iteration.
	
	This chapter describes how the TOGAF phases can be adapted in a
	sprinting environment for work at the capability level.
	
snippet togaf_guides_microservices-architecture_4_Using_the_TOGAF_Framework_for_MSA "4 Using the TOGAF Framework for MSA"
	
	An effective Enterprise Architecture is critical to business survival
	and success, and is the indispensable means to achieving competitive
	advantage through IT. The TOGAF Standard is a detailed method and a set
	of supporting tools for developing Enterprise Architectures. It codifies
	the good practice that has evolved in the work of IT and Enterprise
	Architects over many years. This document will help the architect to
	decide where and how to use MSA so it is less about the Enterprise
	Architecture; rather it focuses on Data, Application, and Technology
	Architecture design in the context of microservices.
	
	The TOGAF Architecture Development Method (ADM) breaks the complex
	process of architecture development into a number of simpler steps, or
	phases, in which the architect considers different aspects of the
	overall problem:
	
	-   Preliminary Phase
	-   Phase A: Architecture Vision
	-   Phase B: Business Architecture
	-   Phase C: Information Systems Architectures (Data and Application)
	-   Phase D: Technology Architecture
	-   Phase E: Opportunities & Solutions
	-   Phase F: Migration Planning
	-   Phase G: Implementation Governance
	-   Phase H: Architecture Change Management
	-   ADM Architecture Requirements Management (continuous process for
	    MSA)
	
	Those familiar with the TOGAF Standard will recognize the following
	graphical depiction of the ADM in Figure 1. This document will only
	focus on the microservices layer of the architecture and therefore only
	a subset of the ADM is relevant, as described below Figure 1.
	
	[adm.png]
	
	Figure 1: TOGAF Architecture Development Method (ADM)
	
	The following chapters describe, for each phase of the TOGAF ADM, what
	the architect should consider, particularly when looking to apply MSA,
	and how this affects the outputs of the phase. In short, it explains how
	to use the TOGAF Standard to do MSA.
	
	This is not a standalone description. It assumes knowledge of the TOGAF
	Standard, and leaves out everything that is not related to MSA. The
	architect can find all the information needed on The Open Group TOGAF
	Standard website.
	
snippet togaf_business-architecture_value-streams_4_Value_Stream_Mapping_Scenarios "4 Value Stream Mapping Scenarios"
	
snippet togaf_architecture-project-management_5.1.10_Identify_the_Business_Transformation_Risks_and_Mitigation_Activities "5.1.10 Identify the Business Transformation Risks and Mitigation Activities"
	
	In this step we should consider the use of the following PMBOK
	processes:
	
	-   Plan Risk Management
	-   Identify Risks
	-   Perform Qualitative Risk Analysis
	-   Perform Quantitative Risk Analysis
	-   Plan Risk Responses
	
	The risk management approach in the TOGAF Standard is similar to the
	approach recommended by PMBOK.
	
snippet togaf_architecture-project-management_5.1.11_Develop_Statement_of_Architecture_Work_Secure_Approval "5.1.11 Develop Statement of Architecture Work; Secure Approval"
	
	In this step we should consider the use of the following PMBOK
	processes:
	
	-   Develop Project Management Plan
	-   Create Work Breakdown Structure
	-   Plan Schedule
	-   Define Activities
	-   Sequence Activities
	-   Sequence Activity Resources
	-   Estimate Activity Durations
	-   Develop Schedule
	-   Plan Costs Management
	-   Estimate Costs
	-   Determine Budget
	
	The Statement of Architecture Work is a plan for architecture work that
	is accepted by the stakeholders. An integral part of this document is a
	work plan. To develop this document, we should perform processes from
	the Project Time Management knowledge area that will help us to perform
	the important planning activities.
	
	The TOGAF Standard does not say anything about cost management, so after
	project planning we should estimate the costs and determine the budget.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1.1_Business_Drivers_Business_Objectives "5.1.1 Business Drivers/Business Objectives"
	
	Location in the Architecture Framework: This is the subset of TOGAF
	business drivers affecting security, presented as an integral part of
	the overall architecture business drivers (The TOGAF Standard –
	Architecture Content: Architecture Deliverables).
	
	In O-ISM3 [9], this is called the business objectives. Every
	organization exists for specific purposes that require it to set goals
	and meet certain obligations. Business objectives, ranging from
	aspirational goals to regulatory compliance, may originate internally,
	or be imposed by an external party such as the government. Their
	achievement depends on many factors, one being information security.
	Some examples of business objectives are:
	
	-   Paying the payroll on the 1st of every month
	-   Paying all incoming invoices within a certain timeframe
	
snippet togaf_architecture-project-management_5.1.1_Establish_the_Architecture_Project "5.1.1 Establish the Architecture Project"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Develop Project Charter
	
	According the TOGAF Standard, we have to apply the Project Management
	framework to the execution of the ADM. We have to select the Project
	Manager that could be an external Project Manager from the PMO or a Lead
	Architect responsible for execution of the ADM cycle.
	
	Then we have to determine the company culture and existing processes and
	procedures. And understand the business case for the project. In this
	step we should develop the Project Charter that will address the
	stakeholder concerns expressed in the Request for Architecture Work.
	
snippet togaf_master-data-management_5.1.1_Physical_Person_Kernel_Data "5.1.1 Physical Person Kernel Data"
	
	[]
	
	+-----------------------+-----------------------+-----------------------+
	| Type of Data          | Information           | Description (if       |
	|                       |                       | needed)               |
	+=======================+=======================+=======================+
	| Internal              | Internal business     | Customer              |
	| Identification Keys   | keys (customer code). | code(s)/key(s) making |
	|                       |                       | sense for the         |
	|                       |                       | business and for the  |
	|                       |                       | customer.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Unique internal       | Unique internal       |
	|                       | technical key         | technical key of the  |
	|                       | (customer key).       | customer managed by   |
	|                       |                       | C-MDM.                |
	+-----------------------+-----------------------+-----------------------+
	|                       | Other unique          | Unique internal       |
	|                       | technical key managed | technical key of the  |
	|                       | by applications other | customer managed by   |
	|                       | than C-MDM.           | other applications    |
	|                       |                       | (CRM, etc.).          |
	+-----------------------+-----------------------+-----------------------+
	| External              | External keys (e.g.,  | External keys could   |
	| Identification Keys   | ID card number,       | be useful to ensure   |
	|                       | external data         | uniqueness of         |
	|                       | provider reference    | customers (e.g., ID   |
	|                       | for this person,      | card number). They    |
	|                       | etc.). The            | also allow a process  |
	|                       | organization must     | of collaboration with |
	|                       | check that it is      | the external data     |
	|                       | allowed to store and  | provider to improve   |
	|                       | process this type of  | data quality.         |
	|                       | information.          |                       |
	+-----------------------+-----------------------+-----------------------+
	| Personal              | First name            | —                     |
	| Identification Data   |                       |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Last name             | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Date of birth         | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Place of birth        | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Family/marital status | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Official professional | —                     |
	|                       | category              |                       |
	+-----------------------+-----------------------+-----------------------+
	| Contact Data          | Address(es)           | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Email(s)              | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Phone number(s)       | —                     |
	+-----------------------+-----------------------+-----------------------+
	|                       | (Other contact data:  | —                     |
	|                       | social network, etc.) |                       |
	+-----------------------+-----------------------+-----------------------+
	| Preferences/          | Opt-in/opt-out from   | In many organization  |
	| Consent Data          | customer authorizing  | this field is         |
	|                       | or not authorizing    | introduced in C-MDM   |
	|                       | the organization to   | and managed to comply |
	|                       | use a scope of        | with GDPR in 2018.[2] |
	|                       | customer data for     |                       |
	|                       | defined purposes.     |                       |
	+-----------------------+-----------------------+-----------------------+
	| Relationships with    | Relationships with    | For example, father,  |
	| Other Customers       | other persons         | mother, child,        |
	|                       | belonging to a group. | employee, etc.        |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1.1_What_to_Expect_in_a_Well-Run_EA_Repository_EA_Landscape "5.1.1 What to Expect in a Well-Run EA Repository: EA Landscape"
	
	One of the most challenging aspects of a well-run repository is managing
	transitions over time. In most simple terms, every architecture will
	exist in up to four states. The current state is what exists in the
	Enterprise today; this baseline provides the reference for all change.
	The target state[21] is what stakeholders have approved; this state
	provides the reference for governing all change activity. Transition
	states are partially realized targets between the current state in the
	target state. The candidate state is what has been developed by the EA
	team but has not been approved for a status sufficient to govern change.
	
	In practice, transition and candidate states create the most complexity
	in an EA Repository. Conceptually exploring gaps is easy; only look at
	what changed between the current and target states. Consider the four
	characteristics of the EA Landscape: breadth, depth, time, and recency.
	Now mix in multiple states. Now mix in that as time progresses the
	architecture can change. Now mix in that different Architecture Projects
	can work on the same subject at different times and different levels of
	detail. Variability is the nub of the information management problem. To
	be able to see the best set of required changes, the Practitioner must
	ruthlessly minimize the information maintained, and maximize the use of
	decision records.
	
	[]
	
	Figure 7: Example EA Repository
	
	Figure 7 is a screenshot from an EA Repository. A common current state
	description of the architecture is maintained in the repository. This
	common current state is periodically updated and used as the basis of
	all gap analysis. The governance test is that the current state
	reasonably represents what is. The repository also contains a
	consolidated target state and several transition states. When
	Architecture Projects come to a close, their architecture descriptions
	are moved into the consolidated target state. As the current state, the
	consolidated target is used in all gap analysis. While there is variance
	between transition states in the consolidated target, the Practitioner
	is in a position to assess whether the current project is moving towards
	the Enterprise’s preference.
	
	Architecture under development creates an additional information
	management challenge. For every Architecture Project, create a separate
	container in the EA Repository. This container allows the Practitioner
	freely to explore candidate target state options, different trade-off
	decisions, and impacts without affecting any other Practitioner’s work.
	A well-run EA Landscape will perform its modeling and analysis to
	support the decisions/questions at hand only to the extent necessary and
	nothing more. These Practitioners understand and execute with the notion
	that more detailed work would come from another architecture cycle,
	post-decision to discuss implementation. Figure 8 has separate
	architectures for an Architecture Project exploring a Portfolio,
	Project, and Solution Delivery.
	
	[]
	
	Figure 8: Multiple Candidate Architectures
	
	Figure 7 and Figure 8 provide an example. Different EA modeling and
	analytic software, or even a different approach in an EA tool, would
	have different screenshots. The essential component is ensuring that the
	EA Repository supports different states, and provides flexibility for an
	architect to explore a potential future without impacting any other
	architect’s work.
	
	Supporting documents maintained must clearly identify their state.
	Without this ability, the Practitioner is pragmatically uncertain
	whether the document they are looking at is relevant, valid, or useful.
	They must readily allow the Practitioner to determine their recency. In
	practice, a candidate or target, or distantly realized current state
	architecture might be useful to the Practitioner. Usefulness is
	predicated on the “self-identification” of state and timeline. Without
	such markers, each supporting document is nothing but noise.
	
snippet togaf_architecture-project-management_5.1.2_Identify_Stakeholders_Concerns_and_Business_Requirements "5.1.2 Identify Stakeholders, Concerns, and Business Requirements"
	
	In this step we should consider the use of the following PMBOK
	processes:
	
	-   Identify Stakeholders
	-   Collect Requirements
	-   Plan Communication Management
	-   Plan Stakeholder Management
	
	According PMBOK, we have to identify stakeholders and develop a
	stakeholder management strategy. This approach is also covered in the
	TOGAF Standard as a stakeholder management technique. The TOGAF
	stakeholder management technique defines how to identify, classify, and
	categorize the stakeholders according to communication needs in the form
	of a Stakeholder Map that should be developed in this step.
	
	The TOGAF approach fulfils all the needs related to stakeholder
	management here. The Stakeholder Map should also be an input to the
	Communication Plan.
	
	The TOGAF Standard also recommend the business scenario technique to
	gather the stakeholder requirements.
	
snippet togaf_master-data-management_5.1.2_Organization_Legal_Entity_Kernel_Data "5.1.2 Organization/Legal Entity Kernel Data"
	
	Most of the time, organizations are legal entities registered with
	competent authorities, depending on the country. They can be companies,
	administrations, Non-Governmental Organizations (NGOs), etc.
	
	[]
	
	+-----------------------+-----------------------+-----------------------+
	| Type of Data          | Information           | Description (if       |
	|                       |                       | needed)               |
	+=======================+=======================+=======================+
	| Internal              | Internal business     | Customer              |
	| Identification Keys   | keys (customer code). | code(s)/key(s) making |
	|                       |                       | sense for the         |
	|                       |                       | business and for the  |
	|                       |                       | customer.             |
	+-----------------------+-----------------------+-----------------------+
	|                       | Unique internal       | Unique internal       |
	|                       | technical key         | technical key of the  |
	|                       | (customer key).       | customer.             |
	+-----------------------+-----------------------+-----------------------+
	| External              | External keys (e.g.,  | External keys could   |
	| Identification Keys   | organization official | be useful to ensure   |
	|                       | number, data provider | uniqueness of         |
	|                       | references for this   | customers. They also  |
	|                       | organization,         | allow a process of    |
	|                       | national registry ID, | collaboration with    |
	|                       | etc.).                | the external data     |
	|                       |                       | provider to improve   |
	|                       |                       | data quality. In the  |
	|                       |                       | case of a legal       |
	|                       |                       | entity, registration  |
	|                       |                       | usually comes with a  |
	|                       |                       | public ID.            |
	+-----------------------+-----------------------+-----------------------+
	| Legal Person          | First name            | The official name of  |
	| Description           |                       | the organization.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Alternative name(s)   | Potential alternative |
	|                       |                       | names making sense    |
	|                       |                       | for the business,     |
	|                       |                       | usage name.           |
	+-----------------------+-----------------------+-----------------------+
	|                       | Date of birth         | Date of creation of   |
	|                       |                       | the organization.     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Dimensioning data     | For example, official |
	|                       | about the             | categories to define  |
	|                       | organization          | the weight of the     |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Organization business | For example, official |
	|                       | sector                | business sector name  |
	|                       |                       | used in the country.  |
	+-----------------------+-----------------------+-----------------------+
	| Contact Data          | Referent physical     | Can be a link to      |
	|                       | (persons) and their   | another C-MDM         |
	|                       | contact data          | physical person.      |
	+-----------------------+-----------------------+-----------------------+
	|                       | Referent address(es)  | Referent address(es)  |
	|                       |                       | used to communicate   |
	|                       |                       | with the              |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Referent email(s)     | Referent email(s)     |
	|                       |                       | used to communicate   |
	|                       |                       | with the              |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Referent phone number | Referent phone        |
	|                       |                       | numbers used to       |
	|                       |                       | communicate with the  |
	|                       |                       | organization.         |
	+-----------------------+-----------------------+-----------------------+
	| Relationship/         | Relationships with    |                       |
	| Group Membership      | other persons (e.g.,  |                       |
	|                       | physical important    |                       |
	|                       | persons related to    |                       |
	|                       | this organization,    |                       |
	|                       | CEO, etc.), belonging |                       |
	|                       | to a group (e.g.,     |                       |
	|                       | corporate center and  |                       |
	|                       | affiliates).          |                       |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1.2_Security_Principles "5.1.2 Security Principles"
	
	Location in the Architecture Framework: Security Principles is the
	subset of Business Principles addressing Security Architecture. This is
	presented as an integral part of the overall Architecture Principles
	deliverable (The TOGAF Standard – Architecture Content: Architecture
	Deliverables).
	
	Security Principles, like other Architecture Principles, will provide
	valuable guidance to making business decisions to comply with the
	enterprise’s risk appetite. In essence, the usage of Security Principles
	does not differ from the usage of Architecture Principles. Examples of
	Security Principles will be given in the Security Architecture
	Practitioners Guide.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1.2_What_to_Expect_in_a_Well-Run_EA_Repository_Reference_Library "5.1.2 What to Expect in a Well-Run EA Repository: Reference Library"
	
	The Reference Library provides guidelines, templates, patterns, and
	other forms of reference material that can be leveraged in order to
	accelerate the creation of new architectures for the Enterprise.
	
	The Reference Library of a well-run EA Repository is filled with
	accelerators. Accelerators speed time to market. A recurrent theme in
	this Guide is ensuring sufficient architecture work is produced to
	support decisions and actions about the Enterprise’s change activity.
	The most precious resource in change activity is time.
	
	There is a broad set of reference materials used by a Practitioner.
	Broadly there will be two sets of reference material distinguished on
	whether they are directly used in architecture development, or provide
	background material. The first are materials that are used within the EA
	Landscape. These will include reference models, reference architectures,
	and patterns. These reference materials provide proven approaches.
	Proven approaches are accelerators, as they do not need to be explored
	with the same rigor as a novel approach. For example, the IT4IT
	Reference Architecture and APQC’s Process Classification Framework.[22]
	In both cases there is no need to invent a novel set of processes. This
	type of reference material provides a complete starter set, simplifies
	communication, and enables re-use within the EA team. Each Practitioner
	will use the same terms to describe a problem. Figure 9 provides an
	example of reference material available in an EA Repository to improve
	architecture development.
	
	[]
	
	Figure 9: Reference Material in Modeling and Analytic Tool
	
	Patterns, and other Architecture Building Blocks (ABBs), are typically
	indistinguishable to a Practitioner from other reference material in the
	EA Landscape. Whether brought in from reference sources, or created
	inside the organization, they provide a consistent and known way of
	approaching a problem.
	
	The second set are documentary reference materials. This material may
	include white papers, discussions of EA Landscape reference material,
	templates, stock material, and guides. Again, reference material is an
	accelerator. Communication between Practitioners is improved when they
	have access to consistent background thinking. Communication outside the
	EA team is improved with consistency.
	
	Figure 9 is a screenshot showing different reference architectures, and
	reference models, as discrete architectures. Maintaining discrete
	architectures allows the architect to be able to compare how the
	reference architecture was used in the current candidate or target
	against the base reference material. In longer-lived repositories, it is
	common to find multiple overlapping reference architectures. Consider an
	organization that uses APQC’s Process Classification Framework as a base
	reference model. Should they implement a mainstream ERP, they will
	likely have work produced in the ERP vendor’s process classification and
	the system integrator’s process classification. Later, when the same
	organization adopts the IT4IT Reference Architecture, they will likely
	have another process classification.
	
	Maintaining each of these has a clear reference in the modeling, and
	analytic software will allow future architects to understand the
	decisions made during architecture development and implementation
	governance, especially when only part of a reference is brought into
	architecture development and maintained in the architecture. This Guide
	acknowledges the need to integrate an architecture tool with tools
	supporting planning, solution delivery, solution validation, etc. A
	Practitioner may have to refer to documentation in such tools on
	occasion or provide appropriate traceability. The family of tools and
	integration is beyond the scope of this Guide.
	
	Reference architectures, planning data, analytic data, etc. are normally
	supported by detailed documentation managed in a document management
	system. A Practitioner concerned with the purpose and rationale for
	complete or partial use of such data will seek the supporting documents,
	to use them appropriately for modeling or analysis. Do not get swayed by
	looking at whether the Practitioner is likely to read them when creating
	the links to the document management system.
	
snippet togaf_architecture-project-management_5.1.3_Confirm_and_Elaborate_Business_Goals_Business_Drivers_and_Constraints "5.1.3 Confirm and Elaborate Business Goals, Business Drivers, and Constraints"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Define the Scope
	
	This step will have an impact on the vision of the project scope.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1.3_Risk_Appetite "5.1.3 Risk Appetite"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ERM.
	
	Risk appetite describes the enterprise’s attitude towards risk and
	provides decision-making guidance to the organization to balance the
	amount of risk taken to achieve an expected outcome. The risk appetite
	could be expressed as, for example, a boundary on a risk/business impact
	and likelihood grid, profit, and loss measures or qualitative measures
	(zero tolerance for loss of life or regulatory compliance breaches).
	Risk appetite can also be represented by suitably worded Security
	Principles, or produced as a stand-alone deliverable if a key
	stakeholder exists who needs to approve it specifically. It defines both
	the level of risk the organization is willing to accept as well as its
	strategy in defining this level. For risks above this acceptable level,
	it defines the strategy used for mitigation (transference, avoidance).
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1.3_What_to_Expect_in_a_Well-Run_EA_Repository_Standards_Library "5.1.3 What to Expect in a Well-Run EA Repository: Standards Library"
	
	In a well-run EA Repository, the Standards Library will perform two
	functions. First, it provides a repository for the standards that the
	architecture must comply to. Second, it provides a repository for the
	standards imposed on all implementations by the architecture. The
	distinction is critical. One is used to test the architecture; the
	second is used to test an implementation.
	
	In practice, these two sets of standards have to be separated. A simple
	example is provided by the PCI standards. An Enterprise that uses credit
	cards is subject to PCI standards. No Enterprise with a good EA will
	simply place PCI standards in a repository for an implementation to
	comply with. The question of how to comply is inappropriate for an
	implementation team. The compliance with PCI may be as simple as a
	standard derived from the EA that requires the use of a third-party
	payment processor ensuring that PCI subject information is not in the
	hands of the Enterprise. The latter is a standard derived from the EA.
	
	It is common to extend the Standards Library to include selected
	products and third-party services. This pragmatic choice simplifies the
	governance of Implementation Projects where, in addition to an
	architecture requirement specification or control, there exists a
	product or service that conforms. To further the example above, rather
	than the Architecture Requirements Specification requiring the use of
	the third-party payment processor, a specific third-party payment
	processor can be placed in the Standards Library.
	
	Where specific products and services are placed in the Standards
	Library, it is best practice to trace those choices directly to the
	Architecture Requirements Specification or control that brought these
	products and services to life. Without traceability to the architecture,
	product or service selection can be viewed as an arbitrary choice. One
	of the traps of architecting through product and service standards is
	the lack of traceability to the requirement or risk. When there is
	simply the specification of a product or service as an arbitrary choice,
	the governance process is dramatically complicated because alternative
	products or services can be considered on criteria other than those that
	lead to an architecture supported decision.
	
snippet togaf_architecture-project-management_5.1.4_Evaluate_Capabilities "5.1.4 Evaluate Capabilities"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Define the Scope
	
	This step will have an impact on the vision of the project product
	scope. The identification of current and demanded business capabilities
	will help the architects to develop the Architecture Vision.
	
	The Architecture Vision defines the target architecture that could be
	considered as a project product scope.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1.4_Key_Risk_Areas_Business_Impact_Analysis "5.1.4 Key Risk Areas/Business Impact Analysis"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ERM.
	
	Note: Risk classification is described in the TOGAF Standard – ADM
	Techniques (Risk Management) and is focused on risk of the architecture
	projects. This document extends the concepts of risk and risk
	assessment.
	
	During the Preliminary Phase, addressing key risk areas provides a
	context for architecture projects. During an architecture project in
	Phase A, this should be confirmed.
	
	The business impact analysis can be applied in all domains and against
	the architecture roadmap, and is a powerful tool for determining fitness
	of the architecture and roadmap. A business impact analysis points out
	the potential damage (or profit) to the business that can be expected if
	inappropriate and insufficient information security is applied. It
	(only) defines what kind of impact is relevant to the business process
	and should be avoided, not the likelihood of this impact occurring. The
	deliverable is a list of the key risk areas within the architecture
	scope. This information is input to the risk assessment.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1.4_What_to_Expect_in_a_Well-Run_EA_Repository_Architecture_Requirements_Repository "5.1.4 What to Expect in a Well-Run EA Repository: Architecture Requirements Repository"
	
	Managing requirements to the entire EA Landscape is one of the most
	complex activities facing the Practitioner. The first challenge is
	simply the breadth of detail; the second challenge is the overlapping
	nature of managing requirements across the EA; the third challenge is
	maintaining the repository over time; and potentially the fourth is
	integrating with other repositories.
	
	One thing that is important to consider is that requirements appear
	radically different depending upon the purpose of the architecture and
	the level of detail. As an extreme example, Practitioners with
	experience in solution delivery architecture and implementation may not
	recognize requirements for architecture developed to support strategy as
	requirements. Practitioners used to implementation tend to be looking
	for very granular requirements to express statements of need. Be agile,
	be efficient, integrate the new division, and protect the market-leading
	differentiators are all examples of key requirements for Architecture
	that supports Strategy and Portfolio.
	
	Leading practices find that a large number of requirements for
	Architecture that supports Portfolio and Project are normally captured
	in the form of scores. Ask the stakeholders to assess the required
	efficiency, maturity, automation of a process, application, service or
	capability; score the required business fit or technical fit of
	applications; and score the preferred lifespan of the infrastructure.
	Best practice is to use a scale of one to five to capture their
	assessments. All of these scores are requirements; they clearly state
	the preferences of the stakeholders.
	
	An important question in any requirements repository is whether these
	are architectural requirements or implementation requirements. The
	distinction can be fine, but it is a distinction with a very large
	difference. One of the tests that can be used for distinguishing between
	architecture and implementation design is whether the description can
	only be done one way, or can it be realized multiple ways. The former
	tends to be architecture, while the latter is implementation design.
	When an Architecture Repository is integrated with a requirements
	repository for implementation, use appropriate integration options to
	maintain traceability and integrity.
	
	Many architecture requirements are remarkably long-lived. Especially
	when the requirement is articulating aspects of the Enterprise that
	differentiate it. When does a market leader who leads through customer
	experience want to relax the requirement requesting best-in-class
	customer experience? The real challenge for the Practitioner is
	translating market-leading customer experience into clear architecture
	specifications applied to components in the architecture. Herein lies
	one of the mental challenges when architecting for different purposes –
	the line between a requirement and a specification may be in who stated
	it. A requirement into a portfolio architecture aimed at market-leading
	customer experience may result in an architecture specification
	requiring that the information object “customer preference” be a common
	information object to the CRM, customer portal, and service desk. That
	specification reads like a requirement to the architect supporting
	solution delivery of the new CRM.
	
	Requirements from higher in the organization also tend to be discussed
	using different names. It is common to speak of objectives and mandates,
	and treat them with special reverence. Likewise, the distinction between
	types of requirement – functional versus non-functional, business
	requirements versus technical requirements – is treated very seriously.
	In the final analysis, whether a requirement is a mandate, a
	non-functional requirement, or a business requirement, from the
	perspective of a Practitioner it is a statement of need that will be
	addressed in the context of the superior architecture and the set of
	objectives provided by all stakeholders.
	
	One central activity Practitioners typically are not comfortable doing
	is assessing the validity of requirements. When the Practitioner has a
	well-described strategy, a portfolio that identifies gaps, and
	gap-filling work packages, it becomes easy to look at a requirement
	being injected in the project or solution delivery architecture and
	assess whether this requirement is in conformance with what the
	Enterprise priority is or whether this requirement conflicts with the
	superior architecture. Consider a portfolio initiative focused on
	improving agility for customer experience: this portfolio will identify
	a set of projects explicitly designed to improve some aspect of the
	customer experience and improve the ability of the Enterprise to change.
	As time progresses close to execution, it is common for requirements not
	aligned with the project’s purpose to be injected into the process. The
	central element of requirements management is good governance.
	Practitioners are guardians of the statements of value.
	
	When Practitioners have a good architecture identifying the target and
	transition steps along the way, requirements, and architecture
	specifications, may vary over time; be different in the target and the
	transition architectures. Imagine a portfolio roadmap that deliberately
	sacrifices customer experience for agility in the first transition. Then
	in the second transition the priority switches and agility is sacrificed
	for customer experience. The conformance test to architecture
	requirement, and guidance on priority, switches. This Guide deliberately
	uses the term “sacrifice” because inherent in this requirements
	repository is clarity of precedence and priority. When clarity of
	precedence and priority is not available, data to guide trade-off early
	in the cycle is absent, hindering progress. Just as the assessment of
	precedence and priority shifts context to other decisions where a set of
	preferences are well defined and is closer to the organization most
	suited to make the choice.
	
	Explicitly link the architecture specification to requirements, and
	trace the requirements to a stakeholder/concern pair to track the value
	and preference. This traceability is used in governance to assess how
	well the design and implementation choices address the stakeholder’s
	value preferences.
	
	Best practice EA Repositories facilitate traceability at every step of
	the architecture to the direction and priorities of the Enterprise.
	Practitioners are delivering some of the highest value when they are
	engaged in requirements management and trade-off. All smart stakeholders
	want all, want more, and for free. All smart stakeholders know they
	can’t have it all, nor can they have it for free. What stakeholders
	don’t know – and what the role of the Practitioner is – is to assist the
	stakeholders in understanding what they have to give up in order to
	realize different sets of preferences.
	
	A Practitioner with a well-run EA Repository is in a position to
	maintain a comprehensive set of requirements in context. Requirements in
	context enable the Practitioner to work actively for the preferences of
	the stakeholders rather than architecting to a subset of the preferences
	of the stakeholders; or worse a set of preferences that the Practitioner
	personally prefers.
	
snippet togaf_architecture-project-management_5.1.5_Assess_Readiness_for_Business_Transformation "5.1.5 Assess Readiness for Business Transformation"
	
	Business transformation readiness assessment is not covered by the PMBOK
	processes, but this technique is useful to identify the project risks.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1.5_Security_Resource_Plan "5.1.5 Security Resource Plan"
	
	Location in the Architecture Framework: the TOGAF Standard –
	Architecture Development Method, Preliminary Phase and Phase A.
	
	Resource planning for architecture work for the entire architecture team
	is addressed in the Preliminary Phase when the Enterprise Architecture
	team is defined and established. In Phase A it is addressed where the
	capability of the architecture team is assessed against the architecture
	project.
	
	Based on the scope of the Enterprise Architecture team’s responsibility
	and the scope of any architecture project, it will identify the required
	security resources to deliver the security elements of the architecture.
	
	A key part of defining the Enterprise Architecture team is establishing
	the expected role and mandate of the Security Architect. Best practice
	Security Architecture integrates security and risk within all domains.
	Integral to this is establishing the governance process for the Security
	Architecture within the context of the Enterprise Architecture
	governance process.
	
	Answering the following questions will assist in identifying the
	security and risk resources required in the team, and on an architecture
	project:
	
	-   What are the common security or risk-related concerns?
	-   Do key and influential security or risk-related stakeholders exist
	    who require specific security views?
	-   Does the architecture address high-risk areas, or is the risk
	    appetite low?
	-   Can security support be requested on an as-needed basis from an
	    existing security team or are dedicated Security Architecture
	    resources required as part of the overall architecture team?
	
	During the Preliminary Phase it is decided which security artifacts are
	really needed in the Enterprise Architecture and which will be created
	by whom. It might not be necessary to deliver all security artifacts in
	order to address security properly. The reverse applies too: delivering
	all artifacts does not guarantee that security is taken care of properly
	– more artifacts may be required.
	
	For enterprise-level architectures, the artifacts need to be created
	based on discussions with key stakeholders; preliminary assessments
	carried out by the architecture team; and assessing relevant statutes,
	applicable jurisdictions, legislation, and regulations.
	
	For capability-level architectures, existing sources might be available.
	For instance, an enterprise-level security policy or risk assessment
	describes the security principles, risk appetite, and key risk areas for
	a particular context.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1.5_What_to_Expect_in_a_Well-Run_EA_Repository_Compliance_Assessments "5.1.5 What to Expect in a Well-Run EA Repository: Compliance Assessments"
	
	Most EA Repositories are missing the most important component of a
	compliance assessment: gaps, Architecture Requirements Specifications,
	controls, and views that address concerns stakeholders find interesting.
	A well-run EA Repository will contain all of the components necessary to
	perform effective compliance assessments as well as the compliance
	assessments.
	
	The first step of compliance assessment is clarity on what compliance
	will be assessed against. Best practice compliance assessments are
	tightly linked with the TOGAF concept of an Architecture Contract. The
	Architecture Contract identifies what an Implementation Project is
	expected to deliver and the set of constraints the project operates
	under. Without clearly documented expectations and constraints the
	Practitioner has failed the implementation team.
	
	A well-run EA Repository will contain the equivalent of an Architecture
	Contract for every Implementation Project. See Appendix D for an example
	of an Architecture Contract. With clarity on expectation and constraint,
	compliance may be assessed.
	
	TOGAF Phase G identifies two areas where compliance is assessed. The
	first is the scope of the project. Second is the actual implementation,
	whether designed or the performance change. Phase H contains a further
	value-based compliance assessment.
	
	The first assessment in Phase G considers the scope of the
	Implementation Project compared to the gap, or work package, expected to
	be filled. The work package identifies which gaps are going to be
	filled. The singular purpose of the work package is clarifying the work
	necessary to address the gaps in the architecture. Good roadmaps
	developed as part of an Architecture Project support portfolio will
	house well described work packages. Well described work packages are
	clear about gaps being filled, and the implementation strategy, or
	approach, of how the gap will be addressed. Where there is no
	architectural significance, no good Practitioner will bother
	constraining an Implementation Project with unnecessary guidance or
	constraint through the implementation strategy. Where the approach to
	addressing the gap is significant, a good Practitioner will always
	provide the appropriate guidance of constraint.
	
	Performing scope, and implementation approach, compliance is the first
	step in protecting value. A good EA will provide clarity about the best
	path to maximized value for the Enterprise. Typically, maximized value
	to the Enterprise will not align with parochial preferences of the
	Implementation Project sponsor, or the implementation team. Frankly, if
	there was alignment, there would not be a need for an EA team. It
	follows that assessing the scope of an Implementation Project is the
	first place to protect value. Waiting until the project is funded and
	underway is indistinct from developing architecture after the decision;
	see Chapter 15.
	
	The second Phase G compliance assessment confirms whether specific
	Architecture Requirements Specifications have been followed. The TOGAF
	concept of an Architecture Requirements Specification identifies what
	must be, what must be done, and what is prohibited. It provides the set
	of constraints on more detailed architecture development, design, and
	implementation.[23]
	
	Phase H’s compliance assessment is based on value realization.
	Typically, expected value will not be realized for a significant period
	of time after an Implementation Project has declared victory. Using the
	linkage provided by the Architecture Contract, recurrent value
	realization assessments can be performed. Maintaining the linkage from
	specification to stakeholder expectation facilitates consistent review.
	
	Although a well-run EA Repository will be focused on demonstration of
	realizing value, traditionally most attention is placed on
	rule-following compliance. While rule-following is important, it tends
	to struggle with a consistent demonstration of value, unless it is
	assumed the value of following the rule is self-evident. Rule-following
	compliance assessment is common where the Architecture Requirements
	Specification eliminates all design and implementation choice. Focusing
	assessment on rule-following is also most likely to be tied to requests
	for relief from the rule because the total cost of the rule is not in
	alignment with available value; see Chapter 15.
	
	Best practice is to go beyond simple compliance with the statement, to
	include compliance with intent. The purpose is again to protect the
	expected value of the Target Architecture. When a constraint is
	connected to a stakeholder requirement, the compliance assessment is
	able to assess how well the design and implementation choices deliver on
	expected value. Compliance assessments that indicate the implementation
	will fail to enable expected value are key inputs to future architecture
	development.
	
snippet togaf_architecture-project-management_5.1.6_Define_Scope "5.1.6 Define Scope"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Plan Scope Management
	
	The TOGAF Standard recommends determining the scope in terms of breadth
	of coverage of the enterprise, level of detail, covered architectural
	domains, and time period. In PMBOK, such activities are covered in the
	scope management plan.
	
snippet togaf_architecture-project-management_5.1.7_Confirm_and_Elaborate_Architecture_Principles_including_Business_Principles "5.1.7 Confirm and Elaborate Architecture Principles, including Business Principles"
	
	This step is not related directly to Project Management processes, but
	principles will have an impact on the scope of the Architecture Project.
	Principles should be taken into account when defining the target
	architecture in the Architecture Vision document.
	
snippet togaf_architecture-project-management_5.1.8_Develop_Architecture_Vision "5.1.8 Develop Architecture Vision"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Define the Scope
	
	The Architecture Vision describes the high-level target state of the
	architecture so we could treat it as a project product scope.
	
snippet togaf_architecture-project-management_5.1.9_Define_the_Target_Architecture_Value_Propositions_and_KPIs "5.1.9 Define the Target Architecture Value Propositions and KPIs"
	
	In this step we should consider the use of the following PMBOK process:
	
	-   Define the Scope
	
	In this step we define the quality measures of the project product.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.10.1_Business_Attribute_Profile "5.10.1 Business Attribute Profile"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Business Attribute Profiling is a SABSA requirements engineering
	technique that translates business goals and drivers into requirements
	using a risk-based approach. Some important advantages of this technique
	are:
	
	-   Executive communication in non-IT terms
	-   Traceability mapping between business drivers and requirements
	-   Performance measurement against business-defined targets
	-   Grouping and structuring of requirements, which facilitates
	    understanding and oversight by architects
	
	The SABSA Business Attribute Profile is at the heart of the SABSA
	methodology. It is this requirements engineering technique that makes
	SABSA truly unique and provides the linkage between business
	requirements and technology/process design. See the SABSA^(®) Blue Book
	[2].
	
	[]
	
	© The SABSA Institute
	
	Figure 6: Example of a SABSA Business Attribute Taxonomy
	
	Each SABSA Business Attribute in the example taxonomy of Figure 6 has a
	detailed generic definition and some suggested guidelines for applying
	metrics to that attribute, not included in this overview. A Business
	Attribute Profile is built by the architects, using the taxonomy as a
	guideline. The objective is to document the relevant attributes for the
	business case in hand, redefining each selected attribute in terms of
	the business case, developing a measurement approach, specific metrics,
	and performance targets, again related to the business case. The model
	is flexible and adaptive. When needed, new attributes and new
	definitions should be added to fulfill the business requirements. Thus,
	although the method is well defined, the Business Attribute taxonomy can
	be extended as much as is appropriate and each Business Attribute
	Profile is highly customized according to the business case being
	considered by the architecture team.
	
	An integral part of the SABSA Business Attribute Profile is the
	selection of metrics to set targets, so that performance can be measured
	in the operational phase (“did you hit the target?”). The business
	analyst can choose to either use the suggested metrics in the detailed
	examples, or create new metrics if that seems more appropriate.
	Eventually, the creation of a real-time operational risk dashboard is
	possible that monitors performance of operational capabilities against
	the predetermined performance targets, and provides early warnings of
	up-coming risk events that may require management intervention.
	
	In O-ISM3, performance targets are called “security targets”. As well as
	expressing security objectives in terms of what matters to the business,
	O-ISM3 defines the tolerable deviations. All O-ISM3 objectives (business
	and security) must include their security target. This is the maximum
	deviation from the desired outcome that management tolerates before
	taking corrective action. O-ISM3 can support any specified variance.
	This enables the O-ISM3 program to support and manage both aspirational
	objectives (whose allowable deviations may be very high) and critical
	objectives (where there is usually a very narrow compliance range).
	
	Security targets are normally defined in terms of frequency of
	occurrence and threshold cost. The allowable business impact of missing
	objectives reflects the trade-off against other priorities and
	objectives. Security targets show what the organization expects from its
	information security investment. In a way, management’s act of defining
	security targets also specifies its risk appetite.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.10.2_Control_Objectives_Security_Objectives "5.10.2 Control Objectives/Security Objectives"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	A control objective (sometimes called a security objective) is a desired
	state of security for a given process, person, activity, system, or
	dataset. It differs from a security requirement since an objective is a
	goal that the ISM process aims to fulfill. This control objective might
	not exactly match the security requirement. Control objectives are
	linked to business attributes.
	
	O-ISM3 documents the contribution of information security towards
	meeting business objectives through using a dependency analysis. The
	output of the dependency analysis is a list of security objectives that
	form the basis for design, implementation, and monitoring of the ISMS.
	They also form the business objectives for the security component when
	planning Enterprise Architecture. Security objectives, derived from
	business objectives, state explicitly how information security
	contributes to business objectives.
	
	Some examples of security objectives derived from the business objective
	“Invoicing all products and services provided” are:
	
	-   Invoices are accessible only to the accountancy and collection teams
	-   Paid invoices are kept for three years and destroyed after no more
	    than four years
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.10.3_Security_Standards "5.10.3 Security Standards"
	
	Location in the Architecture Framework: the TOGAF Standard –
	Architecture Content (Standards Library) provides a repository area to
	hold a set of specifications to which architectures must conform. The
	standards can apply at every architecture domain in the TOGAF Standard.
	Security standards can be added to this existing catalog as well.
	
	The Security Architecture provides guidance on which security standards
	to use in which situation. Whether a security standard applies is
	decided by the business owner or business analyst. If so, the standard
	is applied to the architecture work through the Requirements Management
	process. The standard can dictate security controls for the Business,
	Data, Application, or Technology Architecture.
	
	Standards are needed to ensure that many different components can be
	integrated to form a larger system. Different types of standards exist,
	such as regulatory standards, technical standards, etc. An example is
	the PCI-DSS standard that applies for businesses in the payment card
	industry, the ETSI standards that apply in the telecom industry, etc. It
	is also worth noting that security standards may be externally imposed,
	or they may be internally developed.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.10_Requirements_Management "5.10      Requirements Management"
	
	Requirements Management plays a central role in architecture work. This
	is recognized in the TOGAF Standard. The purpose of Requirements
	Management is to identify, store, maintain, and communicate business
	requirements through the different phases of architecture development by
	means of a controlled and repeatable process. In addition, operational
	performance is monitored against target requirements. This is not
	explicitly addressed in the TOGAF ADM but lies within Phase H:
	Architecture Change Management, and the continual validation of
	Requirements Management.
	
	The TOGAF method validates and updates business requirements in every
	stage of an architecture development project. However, the TOGAF
	Standard does not provide a required technique for describing or
	documenting requirements. Such a technique is present in SABSA, which
	presents its unique Business Attribute Profiling technique as a means to
	describe requirements effectively. This section describes the use of
	Business Attribute Profiling with respect to security requirements
	management, along with the benefit this technique offers for
	Requirements Management in general.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.11_The_TOGAF_Architecture_Content_Metamodel "5.11      The TOGAF Architecture Content Metamodel"
	
	The TOGAF Architecture Content Metamodel includes the necessary concepts
	to model ISM and ERM. Existing entities, such as business service and
	information system service, are adapted by having ISM and ERM-specific
	attributes.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.12_Use_of_the_ArchiMate_Modeling_Language "5.12      Use of the ArchiMate^(®) Modeling Language"
	
	The ArchiMate language [8] supports ISM and ERM modeling. This is
	described in The Open Group White Paper: Modeling Enterprise Risk
	Management and Security with the ArchiMate^(®) Language [12]. An example
	of the risk model in the ArchiMate language is given in Figure 7.
	
	[]
	
	Figure 7: Modeling Risk and Security in the ArchiMate Language
	
snippet togaf_master-data-management_5.1_C-MDM_Kernel_Customer_Data_Scope "5.1 C-MDM Kernel Customer Data Scope"
	
	As seen previously, kernel customer data scope includes transversal data
	on the customers. This section provides a list of the most common fields
	considered as kernel data, covering physical person and
	organization/legal entity kernel data. It should not be used as a
	mandatory guideline, but as a first baseline or as a checklist to
	compare with the plan or existing capability in a specific organization.
	
snippet togaf_guides_index_5.1_Establishing_the_Enterprise_Architecture_Capability "5.1. Establishing the Enterprise Architecture Capability"
	
	As discussed in the previous chapter, Agile Enterprise Architecture uses
	an iterative, incremental approach to create architecture artifacts.
	Specific skills and management approaches must be put in place for this
	to succeed. The primary objective of the Preliminary Phase of the ADM is
	to establish or adapt the Enterprise Architecture capability to the
	specific architecture work to be carried out. Some considerations for
	the Preliminary Phase in Agile delivery are:
	
	-   Agile Architecture requires a much closer focus on the outcomes,
	    involving a shift from a project to a product-centric approach
	
	-   While most Agile efforts take place in the solution space,
	    techniques that address the problem space, such as design thinking
	    and business model canvassing, help to shape the architecture
	    direction to achieve the solution
	
	    Requirements often come on a JIT basis, requiring iterative
	    evaluation to reaffirm the problem definition (TOGAF ADM Phase A)
	    and the architecture approach to arrive at the desired solution
	    (TOGAF ADM Phases B, C, and D).
	
	-   This produces an holistic architecture approach with less individual
	    focus on the “domains” of architecture (Business, Data, Application,
	    and Technology) and more emphasis on collaborative views across all
	    domains focused around the required product
	
	-   This will require changes to the way that Enterprise Architecture
	    and product development is managed and governed
	
	The Preliminary Phase includes the establishment of a set of
	Architecture Principles (general rules and guidelines intended to be
	enduring and seldom amended) that inform and support the ways in which
	an organization sets about fulfilling its mission. The Architecture
	Principles for any style of architecture reflect the specific
	characteristics of that style. The principle of a single product owner
	should be established in this phase to ensure that requirements are
	clearly articulated and understood, and to prioritize the Agile
	development of the system components in later phases.
	
	Chapter 5 of the Open Agile Architecture Standard [6], “Intentional
	Architecture”, sets out principles that intentional architecture within
	Agile delivery should follow.
	
snippet togaf_architecture-skills-framework_5.1_Generic_Skills "5.1 Generic Skills"
	
	[]
	
snippet togaf_business-architecture_business-capabilities_5.1_Heat_Mapping "5.1 Heat Mapping"
	
	Heat maps can show a range of different perspectives. These include
	maturity, effectiveness, performance, and the value or cost contribution
	of each capability to the business. Different attributes determine the
	colors of each capability on the business capability map. Typically, a
	stoplight metaphor highlights, at a glance, those capabilities that may
	need further attention. For example, a business capability maturity heat
	map shows capabilities at the desired level of maturity is green; one
	level away is yellow; and two or more levels away are red. Other colors
	may indicate other status levels; e.g., purple denotes that the business
	capability does not exist today but is desired in the future. Missing
	capabilities signify a significant gap.
	
	The heat map example shown in Figure 4 represents ABC Company’s business
	capabilities when viewed from a capability maturity perspective.
	
	  ------------ ---------------------- --------------------- ---------------------------------
	  Strategic    Business Planning      Market Planning       Partner Management
	               Capital Management     Policy Management     Government Relations Management
	  Core         Account Management     Product Management    Distribution Management
	               Customer Management    Channel Management    Agent Management
	  Supporting   Financial Management   HR Management         Procurement Management
	               IT Management          Training Management   Operations Management
	  ------------ ---------------------- --------------------- ---------------------------------
	
	Figure 4: ABC Company Business Capability Heat Map
	
	Here, we can see that Market Planning, Government Relations Management,
	and HR Management are in need of immediate attention. Partner
	Management, Customer Management, and Training Management have some
	issues but are of lower priority. Agent Management is a new business
	capability that the business wishes to develop. Business leaders can
	then take this information and ensure that investments and project
	initiatives are prioritized and funded at an appropriate level to bring
	those business capabilities shown in purple, red, or yellow up to the
	desired level of maturity.
	
	Different heat maps can be generated from the same business capability
	map, depending on what criteria, perspective, or lens the business
	wishes to apply. Other heat mapping examples include:
	
	-   Strategic contribution
	-   Performance/effectiveness
	-   Revenue contribution
	-   Cost contribution
	-   Coverage (the degree to which each business capability is used by
	    more than one business unit)
	-   Criticality
	
snippet togaf_reference-models_digital-business-reference-model_5.1_Introduction "5.1 Introduction"
	
	In a digital world, aligning business and IT is no longer sufficient.
	Organizations have to design the enterprise in such a way that it can
	adapt to emerging customer and business needs.
	
	This will require organizations to adopt an adaptive enterprise model
	when developing their Enterprise Architecture building blocks to
	facilitate the co-evolution of the Enterprise Architecture blueprint
	with the environment and the required decision-making at the appropriate
	organizational level to enable required organizational agility.
	
	The Digital Architecture is essential to enable Agile Architecture
	development that is based on the modular building blocks that can be
	configured and assembled in a variety of manners. This approach will
	enable the incorporation of various architecture development styles and
	the respective Agile Architecture perspectives.
	
snippet togaf_adm-techniques_5_Gap_Analysis_5.1_Introduction "5.1 Introduction"
	
	A key step in validating an architecture is to consider what may have
	been forgotten. The architecture must support all of the essential
	information processing needs of the organization. The most critical
	source of gaps that should be considered is stakeholder concerns that
	have not been addressed in prior architectural work.
	
	Potential sources of gaps include:
	
	-   Business domain gaps:
	    -   People gaps (e.g., cross-training requirements)
	    -   Process gaps (e.g., process inefficiencies)
	    -   Tools gaps (e.g., duplicate or missing tool functionality)
	    -   Information gaps
	    -   Measurement gaps
	    -   Financial gaps
	    -   Facilities gaps (buildings, office space, etc.)
	-   Data domain gaps:
	    -   Data not of sufficient currency
	    -   Data not located where it is needed
	    -   Not the data that is needed
	    -   Data not available when needed
	    -   Data not created
	    -   Data not consumed
	    -   Data relationship gaps
	-   Applications impacted, eliminated, or created
	-   Technologies impacted, eliminated, or created
	
snippet togaf_metadata-management_5.1_Metadata_Management_Reference_Model_Detailed_Business_Functions "5.1 Metadata Management Reference Model – Detailed Business Functions"
	
	Figure 13 shows detailed business functions of the Metadata Management
	capability.
	
	[]
	
	[]
	
	[]
	
	Figure 13: Metadata Management Detailed Business Functions
	
	Table 2 provides detailed descriptions of the business functions shown
	in Figure 13.
	
	Table 2: Detailed Business Functions
	
	+-----------------------------------+-----------------------------------+
	| Business Function                 | Description                       |
	+===================================+===================================+
snippet togaf_adm_5_C_Information_Systems_Architectures_5.1_Objectives "5.1 Objectives"
	
	The objectives of Phase C are to:
	
	-   Develop the Target Information Systems Architectures, describing how
	    the enterprise's Information Systems Architecture will enable the
	    Business Architecture and the Architecture Vision, in a way that
	    addresses the Statement of Architecture Work and stakeholder
	    concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Information Systems (Data and
	    Application) Architectures
	
snippet togaf_architecture-content_5_Building_Blocks_5.1_Overview "5.1 Overview"
	
	This section is intended to explain and illustrate the concept of
	building blocks in architecture.
	
	Following this overview, there are two main parts:
	
	-   Introduction to Building Blocks (see 5.2 Introduction to Building
	    Blocks), discusses the general concepts of building blocks, and
	    explains the differences between ABBs and SBBs
	-   Building Blocks and the ADM (see 5.3 Building Blocks and the ADM),
	    summarizes the stages at which building block design and
	    specification occurs within the TOGAF ADM
	
snippet togaf_architecture-project-management_5.1_Phase_A_Architecture_Project_Initiation_and_Planning "5.1 Phase A: Architecture Project Initiation and Planning"
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.1_Preliminary_Phase "5.1 Preliminary Phase"
	
	The Preliminary Phase establishes the security context required to guide
	the Security Architecture design. To build the security context, the
	following security artifacts need to be determined during this phase.
	These artifacts can be integrated into existing architecture
	documentation.
	
snippet togaf_guides_agile-sprints_5.1_Purpose-Based_Enterprise_Architecture "5.1 Purpose-Based Enterprise Architecture"
	
	Enterprise Architecture can be implemented based on purpose. In The Open
	Group White Paper: World-Class Enterprise Architecture (see Referenced
	Documents), four different classes were introduced, each based on a
	purpose:
	
	-   Enterprise Architecture to Support Strategy
	-   Enterprise Architecture to Support Portfolio
	-   Enterprise Architecture to Support Project
	-   Enterprise Architecture to Support Solution Delivery
	
	The concept was further elaborated in the following publications (see
	Referenced Documents):
	
	-   TOGAF^(®) Series Guide: The TOGAF^(®) Leader’s Guide to Establishing
	    and Evolving an EA Capability
	-   TOGAF^(®) Series Guide: A Practitioners’ Approach to Developing
	    Enterprise Architecture Following the TOGAF^(®) ADM
	
	The concepts introduced in this document may be applied in all four
	purposes, but they must be adapted; e.g., to their level of Enterprise
	Architecture capability. It is important to remember that those
	publications have not specifically been written with Agile in mind.
	Nevertheless, the recommendations described there are possible to apply
	using sprints, but specific hints on how to adapt them in an Agile
	approach are outside the scope of this document.
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.1_Role "5.1 Role"
	
	Architecture Contracts are the joint agreements between development
	partners and sponsors on the deliverables, quality, and
	fitness-for-purpose of an architecture. Successful implementation of
	these agreements will be delivered through effective Architecture
	Governance (see 3. Architecture Governance). By implementing a governed
	approach to the management of contracts, the following will be ensured:
	
	-   A system of continuous monitoring to check integrity, changes,
	    decision-making, and audit of all architecture-related activities
	    within the organization
	-   Adherence to the principles, standards, and requirements of the
	    existing or developing architectures
	-   Identification of risks in all aspects of the development and
	    implementation of the architecture(s) covering the internal
	    development against accepted standards, policies, technologies, and
	    products as well as the operational aspects of the architectures
	    such that the organization can continue its business within a
	    resilient environment
	-   A set of processes and practices that ensure accountability,
	    responsibility, and discipline with regard to the development and
	    usage of all architectural artifacts
	-   A formal understanding of the governance organization responsible
	    for the contract, their level of authority, and scope of the
	    architecture under the governance of this body
	
	The traditional Architecture Contract is an agreement between the
	sponsor and the architecture function or Information Systems (IS)
	department. However, increasingly more services are being provided by
	systems integrators, applications providers, and service providers,
	co-ordinated through the architecture function or IS department. There
	is therefore a need for an Architecture Contract to establish joint
	agreements between all parties involved in the architecture development
	and delivery.
	
	Architecture Contracts may occur at various stages of the ADM; for
	example:
	
	-   The Statement of Architecture Work created in Phase A of the TOGAF
	    Standard — Architecture Development Method is effectively an
	    Architecture Contract between the architecting organization and the
	    sponsor of the Enterprise Architecture (or the IT governance
	    function)
	
	-   The development of one or more architecture domains (Business, Data,
	    Application, Technology), and in some cases the oversight of the
	    overall Enterprise Architecture, may be contracted out to systems
	    integrators, applications providers, and/or service providers
	
	    Each of these arrangements will normally be governed by an
	    Architecture Contract that defines the deliverables, quality, and
	    fitness-for-purpose of the developed architecture, and the processes
	    by which the partners in the architecture development will work
	    together.
	
	-   At the beginning of Phase G (Implementation Governance), between the
	    architecture function and the function responsible for implementing
	    the Enterprise Architecture defined in the preceding ADM phases;
	    typically, this will be either the in-house systems development
	    function, or a major contractor to whom the work is outsourced
	    -   What is being "implemented" in Phase G of the ADM is the overall
	        Enterprise Architecture
	
	        This will typically include the technology infrastructure (from
	        Phase D), and also those enterprise applications and data
	        management capabilities that have been defined in the
	        Application Architecture and Data Architecture (from Phase C),
	        either because they are enterprise-wide in scope, or because
	        they are strategic in business terms, and therefore of
	        enterprise-wide importance and visibility. However, it will
	        typically not include non-strategic business applications, which
	        business units will subsequently deploy on top of the technology
	        infrastructure that is implemented as part of the Enterprise
	        Architecture.
	
	    -   In larger-scale implementations, there may well be one
	        Architecture Contract per implementation team in a program of
	        implementation projects
	
	-   When the finalized Architecture Definition Document is available (at
	    the end of Phase F), an Architecture Contract will normally be drawn
	    up between the architecting function (or the IT governance function,
	    subsuming the architecting function) and the business users who will
	    subsequently be building and deploying application systems in the
	    architected environment
	
	It is important to bear in mind in all these cases that the ultimate
	goal is not just an Enterprise Architecture, but a dynamic Enterprise
	Architecture; i.e., one that allows for flexible evolution in response
	to changing technology and business drivers, without unnecessary
	constraints. The Architecture Contract is crucial to enabling a dynamic
	Enterprise Architecture and is key to governing the implementation.
	
	Typical contents of these three kinds of Architecture Contract are
	explained below.
	
snippet togaf_digital-technology-adoption_5.1_Step_1_Select_the_Adoption_Approach "5.1 Step 1: Select the Adoption Approach"
	
	The organization must select the adoption approach for the digital
	technology it desires to adopt. The “ABCD” framework comprises the
	fitment of all types of organization with respect to their digital
	technology adoption strategy.
	
	The x-axis of the framework depicts the ubiquity of digital technology
	adoption wherein it refers to the breadth/extensiveness of digital
	implementation. The y-axis depicts the envisaged velocity of adoption –
	a function of time. It is imperative that this step is supported with
	strong justification as to why a specific approach is preferred over
	others. Clarity on “why” a specific approach is selected encourages
	insight, oversight, and foresight.
	
	[]
	
	Figure 4: “ABCD” Framework for Digital Technology Adoption
	
	Based on the ABCD framework, the four quadrants represent the following
	adoption approach:
	
	-   Avant-Garde (low ubiquity, high velocity): enterprises that allow or
	    enable some parts (like a Line of Business (LOB), function,
	    geography, department) to adopt first and pass on this experience to
	    others
	-   Big-Bang (high ubiquity, high velocity): enterprises that have the
	    willingness and ability to roll out an enterprise-wide adoption of
	    digital technology, favoring an all-at-once approach
	-   Cohesive (high ubiquity, low velocity): enterprises that take along
	    every part of the organization through a process of consensus as a
	    common mission, even if it impacts the speed of adoption
	-   Discreet (low ubiquity, low velocity): enterprises that take a
	    cautious approach toward the adoption of digital technology by
	    starting slow and steady, building competence gradually
	
	Note: The four quadrants merely represent the four categories (or types)
	of approaches the enterprise could choose. The quadrants do not depict
	any type of ranking or statement of evaluation (i.e., B is not better
	than A, and C is not better than B, and so on).
	
snippet togaf_guides_microservices-architecture_5.1_The_Principles_of_MSA "5.1 The Principles of MSA"
	
	The starting point for MSA development with the TOGAF framework is that
	the architecture team for the project under consideration adopts the key
	principles of an MSA as architecture principles. (Again, regardless of
	whether the Enterprise Architecture has already adopted
	service-orientation as a guiding architecture principle.)
	
	Architecture principles define the underlying general rules and
	guidelines for the use and deployment of all IT resources and assets
	across the enterprise. They reflect a level of consensus among the
	various elements of the enterprise, and form the basis for making future
	architecture decisions. The Preliminary Phase defines the architecture
	principles that will form part of the constraints on any architecture
	work undertaken in this project. They are typically developed by the
	lead Project Architect, in conjunction with key stakeholders, and are
	approved per the governance which controls this project. Note that the
	architecture for any project must be consistent with the overall
	Enterprise Architecture and its adopted architecture principles, or else
	a waiver must be explicitly requested and approved by the Architecture
	Review Board. The architecture principles are included in the Tailored
	Architecture Framework, which is an output of the Preliminary Phase.
	
	The key architecture principles for an MSA, based on microservices, are
	enumerated in The Open Group White Paper: Microservices Architecture
	(see Referenced Documents. These principles will not all be replicated
	here, but we reiterate the principle of service-independence as an
	example, since it is the fundamental principle which otherwise
	distinguishes an MSA from an SOA, of which it is a subset.
	
	  Principle      Independent Services
	  -------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Statement      A microservice is independent of all other services.
	  Rationale      Independence of services enables rapid service development and deployment, and permits scalability through instantiation of parallel, independent services. This characteristic also provides resilience; a microservice is allowed to fail and its responsibilities are taken over by parallel instantiations (of the same microservice), which do not depend on other services. When a microservice fails, it does not bring down other services.
	  Implications   Both design and runtime independence of services are required. It is necessary for the business to determine whether providing scalability and resilience of the business function are paramount considerations. If so, MSA provides a means of achieving these characteristics.
	
	An enterprise wishing to use the TOGAF framework for MSA should include
	this principle in its set of architecture principles. The many benefits
	in resilience, scalability, and reliability which can be achieved with
	an MSA will not be attained if this principle is ignored.
	
	If the architect is introducing the TOGAF framework to an enterprise
	that is already committed to the use of microservices and distributed
	architectures, or that is part of a larger enterprise that has made a
	strategic decision to use MSA, then adoption of these principles is a
	given. If, on the other hand, the project is adapting, for example, a
	legacy monolithic application to an MSA, or is launching an entirely new
	development, there are implications for the organization and the
	architecture governance which must be considered during this Preliminary
	Phase.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.1_What_is_Expected "5.1 What is Expected?"
	
	Where will the EA Capability team be engaged? How to validate that the
	EA Capability is doing the right thing?
	
	A quick perusal of the literature on the role of an Enterprise Architect
	or EA Capability will leave no understanding of the role. At the
	extremes, the role is classified as an enabler of enterprise
	transformation or responsible for the selection of technical IT
	standards. This wide variance is responsible for most failures of an EA
	Capability. A mixed bag of expectations will result in improper scoping
	for work products and planning the evolution and development of the EA
	Capability.
	
	In its simplest terms, EA is used to describe the future state of an
	enterprise to guide the change to reach the future state. The
	description of the future state enables key people to understand what
	must be in their enterprise to meet the enterprise’s goals, objective,
	mission, and vision in the context within which the enterprise operates.
	
	The gap between the enterprise’s current state and future state
	highlights what must change within the enterprise. This gap is a
	function of the enterprise context and the scope of changes the
	enterprise sees.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.1_What_to_Expect_in_a_Well-Run_Architecture_Repository__EA_Landscape "5.1 What to Expect in a Well-Run Architecture Repository & EA Landscape"
	
	Note: In order to provide concrete examples of working in a repository,
	this Guide presents a few screenshots using a modeling tool. These
	represent one way that the challenges of a managing an EA Landscape can
	be met. As outlined in Section 1.3, this Guide does not mean to suggest
	that the referenced tool, techniques, and literature are definitive.
	These examples are intended to illustrate the TOGAF concepts. Other
	tools and techniques are available.
	
	The TOGAF Standard identifies a broad set of materials that will be
	contained within the Architecture Repository. As a Practitioner, you
	will be directly concerned with the Architecture Landscape, Reference
	Library, Standards Library, Architecture Requirements Repository, and
	the Compliance Assessments in the Governance Repository. Typically,
	these are implemented by a modeling and analytic tool, and a file
	repository.
	
	[41_archrepos.png]
	
	Figure 6: TOGAF Architecture Repository
	
	A high-functioning EA team cannot deliver without using modeling and
	analytic software. Some Practitioners sketch diagrams casually as
	initial steps in understanding a system, or explaining one. Maintenance
	of a collection of sketches is not practical. It does not matter where
	they use a marker and 11” x 17” paper or spend hours connecting objects
	in drawing software, these sketches are not modeling and do not provide
	a meaningful contribution to the EA Landscape. Further, the gaps and
	errors inherent in casual sketching preclude considering the sketches as
	a model.
	
	Do not confuse the guidance about managing an EA Landscape and EA
	Repository with commentary on effective communication. Most things an EA
	Capability needs to represent are complex. Visualization of complex
	situations to support the Practitioner, the stakeholder, and others that
	need to be communicated with is critical. Hand sketches are one of the
	most powerful communication tools available to a Practitioner. Beyond
	ideation it is a serious error to present poorly thought-out
	visualizations to stakeholders and decision-makers. This Guide strongly
	recommends the inclusion of information visualization skills in any EA
	team to address the needs of different communities – decision-makers,
	implementers, and stakeholders. One of the most significant challenges
	to developing a high-functioning EA team is overcoming poor information
	management and information presentation practice.
	
	A significant factor that results in a well-run sustainable EA
	Repository is the ruthless minimization of information gathered and
	maintained. Any information that is not required for the current
	Architecture Project, or supports minimal traceability, should not be
	captured. EA teams routinely drown in an information overload after
	capturing and maintaining extraneous information – information that is
	typically only useful for more detailed architecture analysis or
	implementation. Good Practitioners will not confuse ruthless
	minimization of work with skipping necessary work: all stakeholders’
	concerns must be addressed. Leading Practitioners will understand that
	stakeholder management is necessary and attention to non-key
	stakeholders is rarely on the critical path.
	
	The three most powerful components of an EA Repository are the
	Architecture Requirements Specification, controls, and gaps. Managing
	the transition from levels of detail can be greatly simplified when,
	instead of modeling for the sake of building a comprehensive end to end
	model, its integrity is preserved, avoiding incomplete analysis for
	areas of the architecture where sufficient detail is not available. When
	there is sufficient detail to guide and constrain, the Practitioner’s
	work is done.
	
	The test of sufficiency is a function of fitness for purpose. Best
	practice governance has the architect demonstrate that the views
	produced for the stakeholders and any constraints and guidance are
	derived from the architecture. Stakeholders approve views, not
	architecture descriptions.
	
	More detail is always available to be captured and represented in the
	architecture model; additional model kinds; additional refinement. When
	a Practitioner models for the sake of modeling, there is no endpoint.
	The test of success is whether the stakeholder’s concern can be
	addressed. As an example, the Enterprise is attempting to improve
	agility – can the view demonstrate to the satisfaction of the
	stakeholder that this Target Architecture and all associated change
	delivers agility? When sufficient information is gathered, and analyzed
	to demonstrate agility, the Practitioner is done. When the implementer
	can be provided with a list of gaps that need to be filled, Architecture
	Requirements Specifications, and controls that must be followed, the
	Practitioner is done. Do not do the work that comes after the decision,
	or activity that you are currently architecting to support.
	
	A high-functioning EA team will be supported by modeling and analytic
	software, as well as a document management system. Whether these
	software functions are provided in a single suite or a set of software
	tools is not material. A Practitioner requires the linkage between any
	models and documentation, as well as a space to perform necessary
	analysis to develop their candidate architecture.
	
	What is produced is either a work product that is actively consumed or
	the intermediate work products the Practitioner needs to produce the
	requested work product. Table 3 provides a summary of work products that
	are actively consumed by key Enterprise processes.
	
	Table 3: Partial List of Work Product Alignment with Key Processes
	
	+-------------+-------------+-------------+-------------+-------------+
	| Practice    | A           | A           | A           | A           |
	| Supports    | rchitecture | rchitecture | rchitecture | rchitecture |
	|             | to Support  | to Support  | to Support  | to Support  |
	|             | Strategy    | Portfolio   | Project     | Solution    |
	|             |             |             |             | Delivery    |
	+=============+=============+=============+=============+=============+
	| Phase A     | Key         | Key         | Often not   | Limited use |
	| Work        | deliverable | deliverable | used        |             |
	| Product:    |             |             |             | Primary use |
	| Vision      | Before      | Before      | Activity to | is early in |
	|             | framing of  | start of    | produce a   | imp         |
	|             | a strategic | budget      | vision      | lementation |
	|             | planning    | planning    | overlaps    | cycle (via  |
	|             | session     |             | with        | internal    |
	|             |             |             | portfo      | providers   |
	|             | Refresh     |             | lio/program | or          |
	|             | before      |             | candidate   | execution   |
	|             | initiation  |             | a           | partners)   |
	|             | of program  |             | rchitecture |             |
	|             | budgeting   |             | and roadmap |             |
	|             |             |             |             |             |
	|             |             |             | Technique   |             |
	|             |             |             | may be used |             |
	|             |             |             | at          |             |
	|             |             |             | initiation  |             |
	|             |             |             | of business |             |
	|             |             |             | case        |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase E     | During      | Key         | Before      | Before      |
	| Work        | strategic   | deliverable | project     | engagement  |
	| Product:    | planning    |             | initiation  | of          |
	| Candidate   | session     | Before      | and         | execution   |
	| A           |             | start of    | f           | partners    |
	| rchitecture | Refresh as  | budget      | inalization | (including  |
	|             | required in | planning    | of business | internal    |
	|             | program     |             | case        | providers)  |
	|             | budgeting   | Primary use |             |             |
	|             |             | is          | Primary use | Primary use |
	|             |             | stakeholder | is creation | is creation |
	|             |             | acceptance  | of          | of          |
	|             |             | of target   | A           | A           |
	|             |             | and         | rchitecture | rchitecture |
	|             |             | definition  | R           | R           |
	|             |             | of gap      | equirements | equirements |
	|             |             |             | Sp          | Sp          |
	|             |             |             | ecification | ecification |
	+-------------+-------------+-------------+-------------+-------------+
	| Roadmap     | During      | Before      | Limited use | Before      |
	|             | strategic   | start of    |             | engagement  |
	|             | planning    | budget      | Can be used | of          |
	|             | session     | planning    | as an input | execution   |
	|             |             |             | to projects | partners    |
	|             | Refresh as  | Refresh as  | with        | (including  |
	|             | required in | required to | multiple    | internal    |
	|             | program     | support     | interactive | providers)  |
	|             | budgeting   | budgeting   | changes     |             |
	|             |             | and program |             | Primary use |
	|             |             | management  |             | is          |
	|             |             |             |             | ide         |
	|             |             |             |             | ntification |
	|             |             |             |             | of required |
	|             |             |             |             | change, and |
	|             |             |             |             | preferences |
	|             |             |             |             | of how to   |
	|             |             |             |             | execute     |
	|             |             |             |             | change, to  |
	|             |             |             |             | manage      |
	|             |             |             |             | solution    |
	|             |             |             |             | delivery    |
	|             |             |             |             | partner     |
	|             |             |             |             | selection   |
	|             |             |             |             | and         |
	|             |             |             |             | engagement  |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase F     | Likely not  | Limited use | Key         | Key         |
	| Work        | used        |             | deliverable | deliverable |
	| Product:    |             |             |             |             |
	| A           |             |             | Before      | Before      |
	| rchitecture |             |             | completion  | engagement  |
	| Contract &  |             |             | of project  | and         |
	| A           |             |             | initiation  | contracting |
	| rchitecture |             |             |             |             |
	| R           |             |             |             |             |
	| equirements |             |             |             |             |
	| Sp          |             |             |             |             |
	| ecification |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Imp         | Likely not  | During      | Key         | Key         |
	| lementation | used        | portfolio   | deliverable | deliverable |
	| & Migration |             | budgeting   |             |             |
	| Plan        |             |             | Before      | Before      |
	|             |             | Refresh as  | project     | engagement  |
	|             |             | required to | start       | and         |
	|             |             | support     |             | contracting |
	|             |             | budgeting   |             |             |
	|             |             | and program |             |             |
	|             |             | management  |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase G     | Likely not  | Likely not  | Key         | Key         |
	| Work        | used        | used        | deliverable | deliverable |
	| Product:    |             |             |             |             |
	| Compliance  |             |             | At key      | At key      |
	| Assessment  |             |             | points in   | points in   |
	|             |             |             | project     | project     |
	|             |             |             | that allow  | that allow  |
	|             |             |             | reporting   | reporting   |
	|             |             |             | to          | to          |
	|             |             |             | s           | s           |
	|             |             |             | takeholders | takeholders |
	|             |             |             | and         | and         |
	|             |             |             | obtaining   | obtaining   |
	|             |             |             | decisions   | decisions   |
	|             |             |             | for         | for         |
	|             |             |             | non-        | non-        |
	|             |             |             | conformance | conformance |
	+-------------+-------------+-------------+-------------+-------------+
	| Phase H     | Before      | Key         | Limited use | Limited use |
	| Work        | governance  | deliverable |             |             |
	| Product:    | review,     |             | Scope of    | Scope of    |
	| Value       | framing a   | Before      | significant | significant |
	| Assessment  | strategic   | governance  | a           | a           |
	|             | planning    | review and  | rchitecture | rchitecture |
	|             | session and | program     | change and  | change and  |
	|             | program     | budgeting   | value often | value often |
	|             | budget      |             | does not    | does not    |
	|             |             | Refresh as  | cleanly     | cleanly     |
	|             |             | required to | align to    | align to    |
	|             |             | support     | projects    | solution    |
	|             |             | program     |             | deployment  |
	|             |             | management  |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	
	Successful Practitioners will strictly follow the first step of the
	architecture development phases (Phase B, Phase C, and Phase D) that
	says to select appropriate viewpoints. In order to select viewpoints,
	the Practitioner needs to know the stakeholder and concern. From these,
	the viewpoint that addresses the stakeholder/concern pair will identify
	the information necessary to address the stakeholder’s concern. Any
	information that is not required information to address a stakeholder
	concern should not be gathered and analyzed. Extra information is
	pointless.[20]
	
	When the Practitioner focuses on effective communication with
	stakeholders, implementers, and decision-makers, pointless activity is
	eliminated.
	
snippet togaf_reference-models_government-reference-model_5.1_Young_People_and_Education_Taxonomy "5.1 Young People and Education Taxonomy"
	
	  Sector                       Function                      Service                                                                                                                                                                                             Description
	  ---------------------------- ----------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Young People and Education   Children’s Service            Corresponds to social services, and additional safeguarding, adolescent support, and parental support in early years.                                                                               
	                                                             Looked-after Children                                                                                                                                                                               Individuals in the care of local authorities as a result of mandatory care orders or parent agreements.
	                                                             Fostering and Adoption                                                                                                                                                                              The provision of temporary or long-term responsibility of a child to a surrogate parent.
	                                                             Children’s Social Care and Safeguarding                                                                                                                                                             Comprises safeguarding training, policies, and processes to ensure all children are protected from harm.
	                                                             Family and Parenting                                                                                                                                                                                Includes activities to offer information and support to parents and carers to promote emotional wellbeing and positive family relationships.
	                                                             Early Years                                                                                                                                                                                         Provides activities that support the learning, development, and care of children prior to entering schooling.
	                                                             Children and Adolescent Services                                                                                                                                                                    Provides support and guidance through a number of transition stages to adulthood.
	                               Education                     Includes the provisioning of skills and knowledge to children through schooling, education, and adherence to national expectations and standards.                                                   
	                                                             Primary Schools                                                                                                                                                                                     Consists of activities that provide education at an elementary level, with focus on reading and writing.
	                                                             Secondary Schools                                                                                                                                                                                   The provision of education through secondary-level educational establishments.
	                                                             Specialist Teaching                                                                                                                                                                                 Provides extra help, adapted programs or learning environments, specific equipment, or materials to support students.
	                                                             Standards and Achievement                                                                                                                                                                           Comprises developing course materials, learning materials, resources, exam material, and exam administration that adhere to education standards and accredit education qualifications.
	                                                             Curriculum                                                                                                                                                                                          Outlines mandatory courses and units to be completed and communicates with departments to ensure consistency across education establishments.
	                               Higher Education and Skills   Supports the provision of further education and training for work-related disciplines including apprenticeships, on-the-job training, and communications with industry and tertiary institutions.   
	                                                             Higher Education                                                                                                                                                                                    Comprises education beyond secondary schooling.
	                                                             Early Careers                                                                                                                                                                                       Includes the provision of training through workplace and traineeships.
	                                                             Apprenticeships                                                                                                                                                                                     Consists of on-the-job training amalgamated with classroom training.
	
snippet togaf_master-data-management_5.2.1_C-MDM_Detailed_Business_Functions_Reference_Model "5.2.1 C-MDM Detailed Business Functions Reference Model"
	
	[]
	
	Detailed descriptions of theses business functions are provided below.
	
	+-----------------------------------+-----------------------------------+
	| Business Function                 | Description                       |
	+===================================+===================================+
	| C-MDM Capabilities Management and |                                   |
	| Governance                        |                                   |
	+-----------------------------------+-----------------------------------+
	| Define C-MDM Objectives and       | Define the transformation steps   |
	| Roadmaps                          | of the C-MDM capability with      |
	|                                   | clearly defined objectives to     |
	|                                   | achieve each of them and a plan   |
	|                                   | to do so.                         |
	+-----------------------------------+-----------------------------------+
	| Define and Onboard Data Owners    | Identify and onboard business     |
	| and Data Stewards                 | data owners in Business-as-Usual  |
	|                                   | (BAU) mode to focus on kernel     |
	|                                   | customer data.                    |
	+-----------------------------------+-----------------------------------+
	| Define and Operate Data           | Define data governance principles |
	| Governance Principles             | about customer master data.       |
	|                                   | Ensure that the organization and  |
	|                                   | instances (e.g., boards) are set  |
	|                                   | up to operate those principles.   |
	+-----------------------------------+-----------------------------------+
	| Coordinate Decision-Making and    | Set up and animate data           |
	| Prioritization                    | governance board(s) to ensure     |
	|                                   | that the C-MDM roadmap is         |
	|                                   | effectively implemented within    |
	|                                   | the entity. This board ensures    |
	|                                   | the consistency of decisions      |
	|                                   | regarding customer data all over  |
	|                                   | the entity and that all key       |
	|                                   | concern/risk arbitration is       |
	|                                   | reviewed and considered by        |
	|                                   | stakeholders.                     |
	+-----------------------------------+-----------------------------------+
	| Define Team Services and Operate  | Define the catalog of services of |
	| SLAs                              | the C-MDM team.                   |
	|                                   |                                   |
	|                                   | Define potential users of these   |
	|                                   | services, and interfaces to       |
	|                                   | deliver these services (e.g.,     |
	|                                   | ticketing tool, phone number,     |
	|                                   | centralized email point, etc.).   |
	|                                   |                                   |
	|                                   | Define SLAs for each service and  |
	|                                   | ensure that they are respected.   |
	+-----------------------------------+-----------------------------------+
	| C-MDM Design                      |                                   |
	+-----------------------------------+-----------------------------------+
	| Design Customer Data Models       | Design and document the customer  |
	|                                   | master data model (information    |
	|                                   | model, database model, attributes |
	|                                   | definitions and types, etc.).     |
	+-----------------------------------+-----------------------------------+
	| Design C-MDM Architecture         | Define customer master data       |
	| Principles and Ensure Consistency | requirements (e.g., data storage, |
	| of Data Solutions                 | data transfer, data publication,  |
	|                                   | data transformation, data         |
	|                                   | archiving, metadata management,   |
	|                                   | data quality management, master   |
	|                                   | and reference data management,    |
	|                                   | etc.) in line with compliance     |
	|                                   | standards.                        |
	|                                   |                                   |
	|                                   | Define data architecture          |
	|                                   | frameworks to meet these data     |
	|                                   | requirements.                     |
	|                                   |                                   |
	|                                   | Contribute to the IT roadmap and  |
	|                                   | assessment of the proposed        |
	|                                   | investments.                      |
	|                                   |                                   |
	|                                   | Ensure that critical data is      |
	|                                   | available in line with compliance |
	|                                   | and security standards.           |
	+-----------------------------------+-----------------------------------+
	| Support Customer Data Management  | Provide the resources and ensure  |
	| Implementation                    | that the C-MDM systems and team   |
	|                                   | are set up to fit requirements    |
	|                                   | over time.                        |
	|                                   |                                   |
	|                                   | Secure separate implementation    |
	|                                   | steps regarding the defined       |
	|                                   | roadmap over time.                |
	+-----------------------------------+-----------------------------------+
	| Formalize Customer Master Data    | Formalize business rules and      |
	| Validation Workflow, Quality, and | stewardship workflows to          |
	| Business Rules                    | guarantee that quality of         |
	|                                   | existing data will increase. The  |
	|                                   | purpose is also to check that new |
	|                                   | data create and update processes  |
	|                                   | are designed appropriately to     |
	|                                   | ensure the quality of new data.   |
	+-----------------------------------+-----------------------------------+
	| Help Businesses to Adapt their    | In the design of including new    |
	| Processes to Ensure Data Quality  | data scope in the C-MDM           |
	|                                   | capability, or supporting new or  |
	|                                   | existing use-cases, business      |
	|                                   | processes could be impacted and   |
	|                                   | are part of the overall solution. |
	|                                   | This activity is about helping    |
	|                                   | businesses to adapt and even      |
	|                                   | improve the processes that will   |
	|                                   | be supported by C-MDM services.   |
	|                                   | Change management efforts should  |
	|                                   | not be underestimated.            |
	+-----------------------------------+-----------------------------------+
	| Define and Operate Data Access    | Define data access profiles       |
	| Model                             | according to security,            |
	|                                   | privacy/compliance, and business  |
	|                                   | value classification, and operate |
	|                                   | these access models through the   |
	|                                   | C-MDM solution.                   |
	+-----------------------------------+-----------------------------------+
	| Define, Maintain, and Share       | In a shared repository, maintain  |
	| Customer Data Documentation (Data | rules related to master data      |
	| Dictionaries, Glossaries, Models) | objects.                          |
	|                                   |                                   |
	|                                   | Maintain data dictionaries and    |
	|                                   | glossaries about customer master  |
	|                                   | data.                             |
	|                                   |                                   |
	|                                   | Capitalize on and share           |
	|                                   | information and data models.      |
	|                                   |                                   |
	|                                   | Record the point of consumption,  |
	|                                   | point of acquisition, and flows.  |
	|                                   |                                   |
	|                                   | Document data stewardship         |
	|                                   | processes; i.e., who is           |
	|                                   | responsible for what, where,      |
	|                                   | when, how around customer data.   |
	+-----------------------------------+-----------------------------------+
	| Define, Follow, and Monitor Data  | Data retention rules are part of  |
	| Retention Rules                   | the data lifecycle. They make     |
	|                                   | explicit the retention delays of  |
	|                                   | all data, whether the             |
	|                                   | organization should delete data   |
	|                                   | after a defined period (e.g.,     |
	|                                   | data privacy) or should keep it   |
	|                                   | for a while (e.g., tax reports).  |
	+-----------------------------------+-----------------------------------+
	| C-MDM Operation                   |                                   |
	+-----------------------------------+-----------------------------------+
	| Receive and Manage Requests about | The C-MDM team receives a request |
	| Customer Data (GDPR, etc.)        | from the business they serve,     |
	|                                   | such as broker or agent           |
	|                                   | reclamation, a customer request   |
	|                                   | about their data, quality issues  |
	|                                   | sent by operational services.     |
	|                                   | They must then route it to the    |
	|                                   | right person/steward.             |
	+-----------------------------------+-----------------------------------+
	| Assess and Manage Master Customer | Detect data quality issues and    |
	| Data Quality Issues               | manage them, respecting the C-MDM |
	|                                   | team’s SLAs. This function is not |
	|                                   | part of the “Data Quality and     |
	|                                   | Business Value Measurement”       |
	|                                   | because it is not about quality   |
	|                                   | measurement. This function        |
	|                                   | delivers the process to detect    |
	|                                   | concrete data quality issues and  |
	|                                   | correct them, which is part of    |
	|                                   | the core C-MDM operations.        |
	+-----------------------------------+-----------------------------------+
	| Correct Data Issues               | Restore the truth and update data |
	|                                   | according to it.                  |
	+-----------------------------------+-----------------------------------+
	| Validate Customer Merges          | Manually arbitrate the merge of   |
	|                                   | two customers: process the        |
	|                                   | verification of the two customers |
	|                                   | so that they become one person    |
	|                                   | and eventually merge.             |
	+-----------------------------------+-----------------------------------+
	| Ensure Availability of            | Ensure that operational business  |
	| Appropriate C-MDM Data & Services | users (consumers or producers)    |
	| for Operational Business          | have appropriate interfaces to    |
	| Processes                         | optimally support their process.  |
	|                                   | Be aware of business needs and    |
	|                                   | pain points.                      |
	+-----------------------------------+-----------------------------------+
	| Extension of C-MDM Scope and      |                                   |
	| Usages                            |                                   |
	+-----------------------------------+-----------------------------------+
	| Support New Integration of a Data | This activity is BAU. The way of  |
	| Producer Application              | supporting new integration of a   |
	|                                   | data producer application is well |
	|                                   | managed and the process to extend |
	|                                   | sustainably of the C-MDM scope    |
	|                                   | with new populations is mastered. |
	+-----------------------------------+-----------------------------------+
	| Support New Integration of a Data | This activity is BAU. The way of  |
	| Consumer Application              | supporting new integration of a   |
	|                                   | data consumer application is well |
	|                                   | managed. The new consumption of   |
	|                                   | data is well contextualized with  |
	|                                   | clearly-defined use-cases.        |
	+-----------------------------------+-----------------------------------+
	| Support New External Data Source  | This activity is BAU. The way of  |
	| Integration                       | supporting new integration of an  |
	|                                   | external data source in the C-MDM |
	|                                   | ecosystem is well managed.        |
	+-----------------------------------+-----------------------------------+
	| Communication                     |                                   |
	+-----------------------------------+-----------------------------------+
	| Communicate about C-MDM Value and | Communicate on KPIs demonstrating |
	| Current Usages                    | the value of C-MDM capabilities   |
	|                                   | (cost/complexity reduction,       |
	|                                   | generated                         |
	|                                   | qualitative/quantitative gains,   |
	|                                   | satisfaction score from customer  |
	|                                   | data users, etc.).                |
	+-----------------------------------+-----------------------------------+
	| Communicate the Customer Data     | Communicate the customer data     |
	| Team Services Catalog             | team services catalog to the      |
	|                                   | potential internal users of these |
	|                                   | services.                         |
	+-----------------------------------+-----------------------------------+
	| Communicate about Customer Data   | Communicate quality dashboard to  |
	| Quality                           | operational or executive          |
	|                                   | stakeholders.                     |
	+-----------------------------------+-----------------------------------+
	| Data Quality and Business Value   |                                   |
	| Measurement                       |                                   |
	+-----------------------------------+-----------------------------------+
	| Build & Deliver Reports on        | Design a quality dashboard with   |
	| Customer Data Quality and         | executives, businesses, business  |
	| Evolutions                        | data owners, and data stewards.   |
	|                                   | Implement the quality dashboards  |
	|                                   | according to their requirements.  |
	+-----------------------------------+-----------------------------------+
	| Report C-MDM Business Value       | Identify and implement relevant   |
	|                                   | KPIs with businesses (including   |
	|                                   | the IT team).                     |
	+-----------------------------------+-----------------------------------+
	| External Customer Data            |                                   |
	| Acquisition                       |                                   |
	+-----------------------------------+-----------------------------------+
	| Analyze the Data Market and       | Analyze the market around         |
	| Identify Opportunities            | providing party/contact data      |
	|                                   | (potential partners or data       |
	|                                   | providers).                       |
	|                                   |                                   |
	|                                   | Manage and transform these        |
	|                                   | opportunities to develop new ways |
	|                                   | of improving customer data        |
	|                                   | quality.                          |
	+-----------------------------------+-----------------------------------+
	| Set Up a Data Partnership         | Set up a partnership or extend an |
	|                                   | existing partnership to some data |
	|                                   | exchange, in order to improve     |
	|                                   | data quality as a result of these |
	|                                   | external sources.                 |
	|                                   |                                   |
	|                                   | Operationally manage data         |
	|                                   | partnerships over time.           |
	+-----------------------------------+-----------------------------------+
	| Purchase External Customer Data   | Mutualize contact/party data      |
	|                                   | purchasing management and         |
	|                                   | integration of this external data |
	|                                   | in the customer data management   |
	|                                   | processes.                        |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_business-capabilities_5.2.1_Capability_Organization_Mapping "5.2.1 Capability/Organization Mapping"
	
	Many business capabilities align to one and only one part of an
	organization. Business capabilities executed in many different parts of
	the organization can sometimes lead to inconsistent deployment and
	inefficiency. In the earlier example of looking at the organization
	chart to identify business capabilities, each business capability
	aligned to a specific business unit. In this case we did not look at
	duplicated capabilities. The matrix shown in Figure 5 shows how the same
	business capability can exist across different organizational units.
	
	  ----------------------- ---------------------- ------------- ------------------------ ---------------------
	                          Organizational Units                                          
	  Business Capabilities   Human Resources        Real Estate   Information Technology   Sales and Marketing
	  Project Management                                                                    
	  Learning Management                                                                   
	  ----------------------- ---------------------- ------------- ------------------------ ---------------------
	
	Figure 5: Capability/Organization Mapping Example
	
	As an added dimension, the capability heat map shows where there may be
	opportunities to rationalize or harmonize capabilities across the
	organization.
	
	One option may be to standardize using a consistent set of tools within
	the capability. Another option may be a complete realignment of the
	capability around a specific organizational unit to optimize all the
	components of the capability.
	
snippet togaf_guides_index_5.2.1_Define_Problem "5.2.1. Define Problem"
	
	  “Identify the key stakeholders and their concerns/objectives, and
	  define the key business requirements to be addressed.”
	
	— The TOGAF Standard
	
	  “The level of detail addressed in Phase A will depend on the subset of
	  scope and goals associated with this iteration of architecture
	  development.”
	
	— The TOGAF Standard
	
	A sufficient understanding of the strategic goals of the enterprise is a
	prerequisite for any activity, to ensure that individual activities do
	not undermine those goals.
	
	How to improve agility at this stage:
	
	-   Identify the product owner
	
	-   Seek to develop a high-level Strategic Architecture quickly, with
	    only the detail required to plan more constrained activities
	
	-   Use one of the many available Agile tools and techniques to
	    characterize the problem and define the specific set of requirements
	    to be addressed; such as:
	
	    -   Business requirements
	
	    -   Customer journeys
	
	    -   Design thinking: an approach for defining a problem or finding
	        novel and innovative solutions
	
	        Table 2 describes the key characteristics of design thinking.
	
	        +----------------------+----------------------+-----------------------+
	        | Practices            | Thinking Styles      | Mentality             |
	        +======================+======================+=======================+
	        | Human-centered       | Thinking by doing;   | Combination of        |
	        | approach; e.g.,      | e.g., early and fast | divergent and         |
	        | people-based,        | prototyping, fast    | convergent            |
	        | user-centered,       | learning, rapid      | approaches; e.g.,     |
	        | empathizing,         | iterative            | ideation, pattern     |
	        | ethnography,         | development cycles   | finding, creating     |
	        | observation          |                      | multiple alternatives |
	        +----------------------+----------------------+-----------------------+
	        | Collaborative work   | Abductive reasoning; | Reflective reframing; |
	        | style; e.g.,         | e.g., the logic of   | e.g., rephrasing the  |
	        | multi-disciplinary   | “what could be”,     | problem, going beyond |
	        | collaboration,       | finding new          | what is obvious to    |
	        | involving many       | opportunities, the   | see what lies behind  |
	        | stakeholders,        | urge to create       | the problem,          |
	        | interdisciplinary    | something new,       | challenging the given |
	        | teams                | challenging the norm | problem               |
	        +----------------------+----------------------+-----------------------+
	        | Holistic view; e.g., | Integrative          | Experimental &        |
	        | systems thinking,    | thinking; e.g.,      | explorative; e.g.,    |
	        | 360 degree view on   | harmonious balance,  | the license to        |
	        | the issue            | creative resolution  | explore               |
	        |                      | of tension, finding  | possibilities,        |
	        |                      | the balance between  | risking failure,      |
	        |                      | validity and         | failing fast          |
	        |                      | reliability          |                       |
	        +----------------------+----------------------+-----------------------+
	        | Ambiguity-tolerant;  | Optimistic; e.g.,    | Future-oriented;      |
	        | e.g., allowing for   | viewing constraints  | e.g., orientation     |
	        | ambiguity, tolerance | as positive,         | towards the future,   |
	        | for ambiguity,       | optimism attitude,   | vision versus status  |
	        | comfortable with     | enjoying problem     | quo, intuition as a   |
	        | ambiguity, liquid    | solving              | driving force         |
	        | and open process     |                      |                       |
	        +----------------------+----------------------+-----------------------+
	
	        : Table 2. Design Thinking
	
	    -   Epics
	
	    -   Business Model Canvas: a management tool for understanding the
	        fundamental characteristics of the business; see the template in
	        Figure 9. For more details, refer to the TOGAF^(®) Series Guide:
	        Business Models [8].
	
	        [Business Model Canvas]
	
	        Figure 9. Business Model Canvas
	
	To ensure that “just enough” architecture is done:
	
	-   Focus on the required outcomes
	
	-   Define the Minimum Viable Product that the enterprise can offer to
	    its customers
	
	Identify new business opportunities considering new trends in business
	and technology, taking an outside-in approach considering customer
	demands and competitor activities.
	
	  “Agile Architecture shall use marketing and design methods to discover
	  how customers are likely to use products and services. Jobs-to-be-done
	  analysis, customer journey mapping, and design thinking are examples
	  of methods used by Agile enterprises. Design thinking, which is a
	  human-centered approach, incorporates human cognition and emotion as
	  key aspects of the value definition.”
	
	— The Open Group Open Agile Architecture Standard
	Axiom 2: Outside-In Thinking
	
	Value shall be specified from the standpoint of the customer. A value
	stream shall be identified for each product or service family from
	concept to launch and from order to delivery. Enterprise Architecture
	should support value stream definition and also the business
	capabilities needed to fulfil the need.
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.1_Overview "5.2.1 Overview"
	
	This section describes the characteristics of building blocks. The use
	of building blocks in the ADM is described separately in 5.3 Building
	Blocks and the ADM .
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.1_Phase_A_The_Starting_Point "5.2.1 Phase A: The Starting Point"
	
	All architecture development needs to start with Phase A. Without the
	set-up inherent in Phase A Practitioners can expect to slide off-course
	and fail to deliver useful architecture.
	
	The set-up essentials of Phase A are:
	
	-   Define the scope of the Architecture Project
	
	    What problem are you solving? In terms of the EA Landscape (breadth
	    and planning-horizon) and in terms of purpose, which will tend to
	    confirm the necessary level of detail? Be completely clear where in
	    the business cycle this architecture will be used.
	
	-   Identify stakeholders, concerns, and associated requirements
	
	    Explore the EA Repository for superior architecture constraints and
	    guidance. Do the Stakeholder Map. Be completely clear which
	    stakeholders must be served and what they are worrying about.
	
	-   Assess the capability of the EA team
	
	    Take a hard look at the EA team and confirm the ability of the team
	    to deliver on this architecture development project. A good EA team
	    covers gaps in experience, skill, and bias to deliver the
	    architecture that is useful, overcoming weaknesses of few members of
	    the team.
	
	The completion essentials of Phase A:
	
	-   Key stakeholder agreement on a summary of the target and the work to
	    reach the target
	
	    Perform sufficient architecture development in all domains to enable
	    you to communicate to the key stakeholders how the problem you have
	    been assigned can be addressed and the scope of change to reach
	    their articulated preferences. Be clear on the target, the value of
	    the target, and the work to change.
	
	Frankly, Phase A is routinely skipped, or skimmed. Good Practitioners
	know the key stakeholders agree on the summary target, the value, and
	the effort of change before any detailed work is undertaken. If key
	stakeholders won’t agree at the outset, they are unlikely to agree after
	the Practitioners have performed a lot of work detailing what they do
	not want, delivered insufficient value, or will not agree to change.
	
	Completing the outputs of Phase A requires exploring all of the domains
	– whether the exploration is to understand what should change, or where
	change is not an option to determine the impact of retaining current
	architecture.
	
	Practitioners should not be surprised if there are multiple potential
	targets after the initial exploration. Having more than one approach to
	addressing the problem is acceptable to key stakeholders. It facilitates
	better trade-off when performing more detailed analysis. Keep in mind
	that until the target is finalized, the Practitioner is exploring the
	best potential future, not selling a particular future.
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.2.1_Statement_of_Architecture_Work "5.2.1 Statement of Architecture Work"
	
	The Statement of Architecture Work is created as a deliverable of Phase
	A, and is effectively an Architecture Contract between the architecting
	organization and the sponsor of the Enterprise Architecture (or the IT
	governance function, on behalf of the enterprise).
	
	The typical contents of a Statement of Architecture Work are as defined
	in the TOGAF Standard — Architecture Content.
	
snippet togaf_master-data-management_5.2.2_C-MDM_Detailed_Application_Functions_Reference_Model "5.2.2 C-MDM Detailed Application Functions Reference Model"
	
	[]
	
	Detailed descriptions of theses application functions are provided
	below.
	
	+-----------------------------------+-----------------------------------+
	| Application Function              | Description                       |
	+===================================+===================================+
	| Acquisition – User Interface or   |                                   |
	| Services                          |                                   |
	+-----------------------------------+-----------------------------------+
	| Create Master Data                | Create a new customer master      |
	|                                   | record including a unique         |
	|                                   | internal organization key.        |
	+-----------------------------------+-----------------------------------+
	| Update Master Data                | Update an existing customer       |
	|                                   | master record.                    |
	+-----------------------------------+-----------------------------------+
	| Manage Links between Master       | Create, update, and delete links  |
	| Entities and Other Business       | between parties, and potentially  |
	| Objects                           | between parties and other objects |
	|                                   | (e.g., roles in a contract,       |
	|                                   | offer, etc.) that are managed as  |
	|                                   | a replica in C-MDM. Delete        |
	|                                   | operations must be conducted      |
	|                                   | carefully to avoid breaking       |
	|                                   | integrity or creating orphan      |
	|                                   | records.                          |
	+-----------------------------------+-----------------------------------+
	| Import Data Set, Mass Acquisition | Data acquisition on more than one |
	|                                   | party (scheduled batch            |
	|                                   | integrations or manual through    |
	|                                   | the user interface, etc.).        |
	+-----------------------------------+-----------------------------------+
	| Enhance Data with Technical and   | When data is integrated, manage   |
	| Business Metadata (especially     | metadata, such as version of      |
	| data lineage)                     | customer data instance, source of |
	|                                   | update/creation, date of last     |
	|                                   | update.                           |
	+-----------------------------------+-----------------------------------+
	| Quality Management                |                                   |
	+-----------------------------------+-----------------------------------+
	| Manage Business Validation and    | Provide functionalities to        |
	| Workflows                         | support validation processes on   |
	|                                   | master data when this is          |
	|                                   | relevant.                         |
	+-----------------------------------+-----------------------------------+
	| Manage & Apply Attribute Value    | Add, update, and delete rules on  |
	| Quality Rules                     | attribute values to ensure        |
	|                                   | quality and detect format,        |
	|                                   | consistency, and business issues. |
	+-----------------------------------+-----------------------------------+
	| Manage Syntax, Format,            | Manage format validations, and    |
	| Normalization Rules               | set normalization rules (e.g.,    |
	|                                   | based on normalized               |
	|                                   | code/categories list) or          |
	|                                   | standardization rules (based on   |
	|                                   | standard formats).                |
	+-----------------------------------+-----------------------------------+
	| Manage Consistency and Business   | Manage consistency rules (e.g.,   |
	| Rules                             | consistency between two attribute |
	|                                   | values) and business rules.       |
	+-----------------------------------+-----------------------------------+
	| Manage Accuracy                   | Manage accuracy level/confidence  |
	|                                   | score (e.g., based on external    |
	|                                   | source comparisons).              |
	+-----------------------------------+-----------------------------------+
	| Manage Uniqueness Rules           | Set of functions to detect        |
	|                                   | duplicates, and propose best ways |
	|                                   | of de-duplicating rows.           |
	+-----------------------------------+-----------------------------------+
	| De-duplicate with Determinist     | De-duplicate with a designed      |
	| Process                           | automated workflow with rules.    |
	+-----------------------------------+-----------------------------------+
	| De-duplicate with                 | De-duplicate based on pure        |
	| Probabilist/Statistic Process     | statistical comparisons.          |
	+-----------------------------------+-----------------------------------+
	| Recommend Merges to Arbitrate     | Based on determinist or           |
	| (matching)                        | statistical process, system       |
	|                                   | recommends potential merges to    |
	|                                   | arbitrate (not 100% confidence).  |
	+-----------------------------------+-----------------------------------+
	| Manual Merge Arbitrage            | The decision of the merge is      |
	|                                   | validated by an authorized person |
	|                                   | through a user interface.         |
	+-----------------------------------+-----------------------------------+
	| Unmerge                           | Support a manual unmerge.         |
	+-----------------------------------+-----------------------------------+
	| Generate Unique Master Technical  | Manage unique technical key       |
	| Key                               | attributions.                     |
	+-----------------------------------+-----------------------------------+
	| Data Privacy Management           |                                   |
	+-----------------------------------+-----------------------------------+
	| Manual Deletion                   | Search and delete data manually   |
	|                                   | (accessibility of this            |
	|                                   | functionality should be very      |
	|                                   | restricted) .                     |
	+-----------------------------------+-----------------------------------+
	| Automated Deletion with Rules     | Automated deletion or proposals   |
	|                                   | for deletions based on set rules. |
	+-----------------------------------+-----------------------------------+
	| Masking                           | Masking data depending on privacy |
	|                                   | requirements.                     |
	+-----------------------------------+-----------------------------------+
	| Distribution – User Interface or  |                                   |
	| Service                           |                                   |
	+-----------------------------------+-----------------------------------+
	| Search                            | Search person based on different  |
	|                                   | criteria. Criteria could be based |
	|                                   | on attributes (e.g., business     |
	|                                   | key, name, surname, contact data, |
	|                                   | etc.), or related object          |
	|                                   | attribute (e.g., policy number,   |
	|                                   | claim number, etc.).              |
	+-----------------------------------+-----------------------------------+
	| Read Data                         | Read data values about a given    |
	|                                   | person.                           |
	+-----------------------------------+-----------------------------------+
	| Extract Data                      | Extract data values about a scope |
	|                                   | of persons (based on filters, for |
	|                                   | example) by batch or manually.    |
	+-----------------------------------+-----------------------------------+
	| Push Events: Create, Update,      | Push events of data evolutions,   |
	| Define, Merge                     | configure distribution of the     |
	|                                   | events to relevant consumers      |
	|                                   | (e.g., to allow targeted system   |
	|                                   | to update data locally, or to     |
	|                                   | generate some alerts to be        |
	|                                   | tackled over operational          |
	|                                   | processes).                       |
	+-----------------------------------+-----------------------------------+
	| Contextualize Data Visibility &   | Configure the data visibility     |
	| Provided Values                   | rules for each profile/role.      |
	|                                   |                                   |
	|                                   | Contextualize the given values    |
	|                                   | depending on the consumer (e.g.,  |
	|                                   | mastering consumptions in a       |
	|                                   | multiple language context).       |
	+-----------------------------------+-----------------------------------+
	| Administration                    |                                   |
	+-----------------------------------+-----------------------------------+
	| Design Master Data Model          | Have tools to manage the physical |
	|                                   | design of the data model to fit   |
	|                                   | C-MDM requirements.               |
	+-----------------------------------+-----------------------------------+
	| Manage Data Historization and     | Configure the way the data is     |
	| Versioning Rules                  | historized and manage versioning  |
	|                                   | of master data, with potential    |
	|                                   | purge of old data if it is        |
	|                                   | relevant.                         |
	+-----------------------------------+-----------------------------------+
	| Full Database Versioning          | Version overall database          |
	|                                   | (structure and contents) and      |
	|                                   | historize the version.            |
	+-----------------------------------+-----------------------------------+
	| Manage Roles                      | Configure roles of users (human   |
	|                                   | or systems).                      |
	+-----------------------------------+-----------------------------------+
	| Manage Access Rights              | Manage and apply access rights to |
	|                                   | data and to operations (create,   |
	|                                   | update, merge, etc.).             |
	+-----------------------------------+-----------------------------------+
	| Manage Logging                    | Manage the way C-MDM systems log  |
	|                                   | different events.                 |
	+-----------------------------------+-----------------------------------+
	| Dashboards & Reports              |                                   |
	+-----------------------------------+-----------------------------------+
	| Generate Audit Data Evolution     | Generate report to have a good    |
	| Reports                           | understanding of data evolution,  |
	|                                   | on a given scope of persons and   |
	|                                   | time (e.g., indicators by data    |
	|                                   | producer systems, by roles, by    |
	|                                   | persons, etc.).                   |
	+-----------------------------------+-----------------------------------+
	| Generate Data Quality Dashboards  | Generate dashboards about current |
	|                                   | quality, and evolution of data    |
	|                                   | quality (completeness, accuracy,  |
	|                                   | etc.).                            |
	+-----------------------------------+-----------------------------------+
	| Generate Usages Dashboard         | Generate dashboard to understand  |
	|                                   | how C-MDM is used (e.g.,          |
	|                                   | frequency of use, number of       |
	|                                   | update events distributed, etc.). |
	+-----------------------------------+-----------------------------------+
	| Reference Data Management         |                                   |
	+-----------------------------------+-----------------------------------+
	| Input Attributes Transcoding      | Manage transcoding rules from     |
	|                                   | input attribute values to         |
	|                                   | standardized MDM values.          |
	+-----------------------------------+-----------------------------------+
	| Manage Reference List             | Manage reference normalized lists |
	|                                   | (e.g., countries list, status     |
	|                                   | list, etc.).                      |
	+-----------------------------------+-----------------------------------+
	| Manage Customer Key Mapping       | Manage mapping between keys       |
	|                                   | (e.g., operational application    |
	|                                   | customer ID versus master         |
	|                                   | customer ID).                     |
	+-----------------------------------+-----------------------------------+
	| Output Attributes Transcoding     | Manage transcoding rules from     |
	|                                   | standardized MDM attribute values |
	|                                   | to consumer application attribute |
	|                                   | values.                           |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_business-capabilities_5.2.2_Capability_Value_Stream_Mapping "5.2.2 Capability/Value Stream Mapping"
	
	A value stream represents the sequence of activities (or value stages)
	that an organization undertakes to deliver on a customer request. In
	this context, a customer can be an external client or an internal
	stakeholder that is responsible for supporting the delivery of value by
	the organization.
	
	Value streams help organizations identify which specific business
	capabilities are required to create and deliver value to their
	customers. The process of mapping business capabilities to each stage in
	a value stream serves to highlight which ones are more or less critical
	to the business operation. That, in turn, supports investment
	prioritization and initiative planning to develop or enhance those
	business capabilities that provide the greatest contribution to value
	delivery.
	
	Figure 6 shows a sample recruit employee value stream and the various
	value stages mapped to different business capabilities. Each capability
	enables one or more value stages.
	
	[]
	
	Figure 6: Capability/Value Stream Mapping Example
	
	After identifying which business capabilities are needed to fully
	realize the value stream, further analysis can look at whether each of
	those business capabilities exists at the required level of maturity,
	performance, or effectiveness. Once an organization has defined its
	entire set of value streams, capability/value stream cross-mapping can
	also highlight which business capabilities are used in multiple value
	streams and thus have an even higher level of importance to the
	operation and in the success of the business.
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.2.2_Contract_between_Architecture_Design_and_Development_Partners "5.2.2 Contract between Architecture Design and Development Partners"
	
	This is a signed statement of intent on designing and developing the
	Enterprise Architecture, or significant parts of it, from partner
	organizations, including systems integrators, applications providers,
	and service providers.
	
	Increasingly, the development of one or more architecture domains
	(Business, Data, Application, Technology) may be contracted out, with
	the enterprise's architecture function providing oversight of the
	overall Enterprise Architecture, and co-ordination and control of the
	overall effort. In some cases even this oversight role may be contracted
	out, although most enterprises prefer to retain that core responsibility
	in-house.
	
	Whatever the specifics of the contracting-out arrangements, the
	arrangements themselves will normally be governed by an Architecture
	Contract that defines the deliverables, quality, and fitness-for-purpose
	of the developed architecture, and the processes by which the partners
	in the architecture development will work together.
	
	Typical contents of an Architecture Design and Development Contract are:
	
	-   Introduction and background
	-   The nature of the agreement
	-   Scope of the architecture
	-   Architecture and strategic principles and requirements
	-   Conformance requirements
	-   Architecture development and management process and roles
	-   Target architecture measures
	-   Defined phases of deliverables
	-   Prioritized joint workplan
	-   Time window(s)
	-   Architecture delivery and business metrics
	
	The template for this contract will normally be defined as part of the
	Preliminary Phase of the ADM, if not existing already, and the specific
	contract will be defined at the appropriate stage of the ADM, depending
	on the particular work that is being contracted out.
	
snippet togaf_guides_index_5.2.2_Define_Baseline "5.2.2. Define Baseline"
	
	The scope and level of detail to be defined will depend on the extent to
	which existing elements are likely to be carried over into the Target
	Architecture.
	
	Agile development is high risk in the absence of a sufficient
	understanding of the baseline.
	
	How to improve agility at this stage:
	
	-   Progressive development of the Baseline Architecture
	
	-   Understand the big picture
	
	-   Segment the problem
	
	-   Develop detail as required to support subsequent work
	
	-   Consider defining the target first to scope work on the baseline
	
	The key measure is understanding the Minimum Viable Architecture
	necessary to manage trade-offs and risk.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.2_Essential_ADM_Output_and_Knowledge "5.2.2 Essential ADM Output and Knowledge"
	
	A summary of the essential outcome and output is provided in Table 4.
	Keep in mind that the essential output is what stakeholders, sponsor,
	and boss’ boss’ boss wants. No-one wants an architecture; they want
	guidance on planning and executing an effective change. Practitioners
	use an architected approach to providing the best available guidance on
	effective change. The essential outcomes and outputs are derived from
	the objectives of the phase – the statement of why a Practitioner should
	perform this activity.
	
	What the Enterprise values and consumes is typically different than what
	the Practitioner produces. Practitioners deliver an essential output. It
	is provided as views, roadmaps, architecture specifications, controls,
	and other useful things. Architecture is developed, and the EA Landscape
	populated. To do this, Practitioners require a set of essential
	knowledge. The Enterprise consumes effective guidance about and the
	ability to govern change.
	
	Read Table 4 in conjunction with Table 3 to confirm whether for a
	particular purpose the output of the phase is already in existence,
	needs to be created, or is extraneous to the current Architecture
	Project. Good Practitioners will adjust their work accordingly. Table 4
	lists only key outputs and outcomes. For an exhaustive list, refer to
	the TOGAF Standard. In order to achieve these outcomes, the Practitioner
	may have to perform more activities or create more deliverables than
	those listed in the table below. The intent is to keep the focus on what
	is pursued, not what is done.
	
	Table 4: Essential ADM Outputs, Outcomes, and Knowledge
	
	+-----------------------+-----------------------+-----------------------+
	| Phase                 | Output & Outcome      | Essential Knowledge   |
	+=======================+=======================+=======================+
	| Phase A: Architecture | Sufficient            | The scope of the      |
	| Vision                | documentation to get  | problem being         |
	|                       | permission to         | addressed.            |
	|                       | proceed.              |                       |
	|                       |                       | Those who have        |
	|                       | Permission to proceed | interests that are    |
	|                       | to develop a Target   | fundamental to the    |
	|                       | Architecture to prove | problem being         |
	|                       | out a summary target. | addressed.            |
	|                       |                       | (Stakeholders &       |
	|                       |                       | Concerns)             |
	|                       |                       |                       |
	|                       |                       | What summary answer   |
	|                       |                       | to the problem is     |
	|                       |                       | acceptable to the     |
	|                       |                       | stakeholders?         |
	|                       |                       | (Architecture Vision) |
	|                       |                       |                       |
	|                       |                       | Stakeholder priority  |
	|                       |                       | and preference.       |
	|                       |                       |                       |
	|                       |                       | What value does the   |
	|                       |                       | summary answer        |
	|                       |                       | provide?              |
	+-----------------------+-----------------------+-----------------------+
	| Phase B, Phase C, &   | A set of domain       | How does the current  |
	| Phase D               | architectures         | Enterprise fail to    |
	|                       | approved by the       | meet the preferences  |
	|                       | stakeholders for the  | of the stakeholders?  |
	|                       | problem being         |                       |
	|                       | addressed, with a set | What must change to   |
	|                       | of gaps, and work to  | enable the Enterprise |
	|                       | clear the gaps        | to meet the           |
	|                       | understood by the     | preferences of the    |
	|                       | stakeholders.         | stakeholders? (Gaps)  |
	|                       |                       |                       |
	|                       |                       | What work is          |
	|                       |                       | necessary to realize  |
	|                       |                       | the changes, that is  |
	|                       |                       | consistent with the   |
	|                       |                       | additional value      |
	|                       |                       | being created? (Work  |
	|                       |                       | Package)              |
	|                       |                       |                       |
	|                       |                       | How stakeholder       |
	|                       |                       | priority and          |
	|                       |                       | preference adjust in  |
	|                       |                       | response to value,    |
	|                       |                       | effort, and risk of   |
	|                       |                       | change. (Stakeholder  |
	|                       |                       | Requirements)         |
	+-----------------------+-----------------------+-----------------------+
	| Phase E:              | A set of work         | Dependency between    |
	| Opportunities &       | packages that address | the set of changes.   |
	| Solutions             | the set of gaps, with | (Work Package & Gap   |
	|                       | an indication of      | dependency)           |
	|                       | value produced and    |                       |
	|                       | effort required, and  | Value, effort, and    |
	|                       | dependencies between  | risk associated with  |
	|                       | the work packages to  | each change and work  |
	|                       | reach the adjusted    | package.              |
	|                       | target.               |                       |
	|                       |                       | How stakeholder       |
	|                       |                       | priority and          |
	|                       |                       | preference adjust in  |
	|                       |                       | response to value,    |
	|                       |                       | effort, and risk of   |
	|                       |                       | change.               |
	+-----------------------+-----------------------+-----------------------+
	| Phase F:              | An approved set of    | Resources available   |
	| Implementation and    | projects,^([24])      | to undertake the      |
	| Migration Plan        | containing the        | change.               |
	|                       | objective and any     |                       |
	|                       | necessary             | How stakeholder       |
	|                       | constraints,          | priority and          |
	|                       | resources required,   | preference adjust in  |
	|                       | and start and finish  | response to value,    |
	|                       | dates.                | effort, and risk of   |
	|                       |                       | change. (Stakeholder  |
	|                       |                       | Requirements)         |
	+-----------------------+-----------------------+-----------------------+
	| Phase G:              | Completion of the     | Purpose and           |
	| Implementation        | projects to implement | constraints on the    |
	| Governance            | the changes necessary | implementation team.  |
	|                       | to reach the adjusted | (Gap, Architecture    |
	|                       | target state.         | Requirement           |
	|                       |                       | Specification,        |
	|                       |                       | Control)              |
	|                       |                       |                       |
	|                       |                       | How stakeholder       |
	|                       |                       | priority and          |
	|                       |                       | preference adjust in  |
	|                       |                       | response to success,  |
	|                       |                       | value, effort, and    |
	|                       |                       | risk of change.       |
	|                       |                       | (Stakeholder          |
	|                       |                       | Requirements)         |
	+-----------------------+-----------------------+-----------------------+
	| Phase H: Architecture | Direction to proceed  | Gaps between approved |
	| Change Management     | and start developing  | target, or            |
	|                       | a Target Architecture | preference, and       |
	|                       | that addresses        | realization from      |
	|                       | perceived, real, or   | prior work. (Value    |
	|                       | anticipated           | Realization)          |
	|                       | shortfalls in the     |                       |
	|                       | Enterprise relative   | Changes in preference |
	|                       | to stakeholder        | or priority.          |
	|                       | preferences.          | (Stakeholder          |
	|                       |                       | Requirements)         |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.2_Generic_Characteristics "5.2.2 Generic Characteristics"
	
	Building blocks have generic characteristics as follows:
	
	-   A building block is a package of functionality defined to meet the
	    business needs across an organization
	-   A building block normally has a type that corresponds to the
	    metamodel (such as actor, business service, application, or data
	    entity)
	-   A building block has a defined boundary and is generally
	    recognizable as "a thing" by domain experts
	-   A building block may interoperate with other, inter-dependent
	    building blocks.
	-   A good building block has the following characteristics:
	    -   It considers implementation and usage, and evolves to exploit
	        technology and standards
	    -   It may be assembled from other building blocks
	    -   It may be a subassembly of other building blocks
	    -   Ideally a building block is re-usable and replaceable, and well
	        specified
	
	A building block's boundary and specification should be loosely coupled
	to its implementation; i.e., it should be possible to realize a building
	block in several different ways without impacting the boundary or
	specification of the building block. The way in which assets and
	capabilities are assembled into building blocks will vary widely between
	individual architectures. Every organization must decide for itself what
	arrangement of building blocks works best for it. A good choice of
	building blocks can lead to improvements in legacy system integration,
	interoperability, and flexibility in the creation of new systems and
	applications.
	
	Systems are built up from collections of building blocks, so most
	building blocks have to interoperate with other building blocks.
	Wherever that is true, it is important that the interfaces to a building
	block are published and reasonably stable.
	
	Building blocks can be defined at various levels of detail, depending on
	what stage of architecture development has been reached.
	
	For instance, at an early stage, a building block can simply consist of
	a name or an outline description. Later on, a building block may be
	decomposed into multiple supporting building blocks and may be
	accompanied by a full specification.
	
	The level of detail to which a building block should be specified is
	dependent on the objectives of the architecture and, in some cases, less
	detail may be of greater value (for example, when presenting the
	capabilities of an enterprise, a single clear and concise picture has
	more value than a dense 100-page specification).
	
	The Object Management Group® (OMG®) has developed a standard for
	Re-usable Asset Specification (RAS),¹ which provides a good example of
	how building blocks can be formally described and managed.
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.3.1_Characteristics "5.2.3.1 Characteristics"
	
	ABBs:
	
	-   Capture architecture requirements; e.g., Business, Data,
	    Application, and Technology requirements
	-   Direct and guide the development of SBBs
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.3.2_Specification_Content "5.2.3.2 Specification Content"
	
	ABB specifications include the following as a minimum:
	
	-   Fundamental functionality and attributes: semantic, unambiguous,
	    including security capability and manageability
	-   Interfaces: chosen set, supplied
	-   Interoperability and relationship with other building blocks
	-   Dependent building blocks with required functionality and named user
	    interfaces
	-   Map to business/organizational entities and policies
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.3_Architecture_Building_Blocks "5.2.3 Architecture Building Blocks"
	
	Architecture Building Blocks (ABBs) relate to the Architecture Continuum
	(see 6.4.1 Architecture Continuum), and are defined or selected as a
	result of the application of the ADM.
	
snippet togaf_business-architecture_business-capabilities_5.2.3_Capability_Business_Process_Mapping "5.2.3 Capability/Business Process Mapping"
	
	In order to clarify the relationship between business processes and
	business capabilities, it helps to be clear about the relationship
	between business processes and value streams. As the process management
	community becomes more focused on end-to-end processes and using more
	abstract representations beyond task, role, decision, and event
	descriptions to show how to implement a process, their similarity to
	value streams starts to emerge. Value stream principles become more
	suitable for modeling high-level business processes at an abstract,
	end-to-end level.
	
	Within the context of this document, business processes enable business
	capabilities, which are those abilities the organization must have in
	order to deliver the value characterized in the value streams (to the
	stakeholders described). In other words, business capabilities provide
	the abilities required to execute the processes.
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.2.3_Contract_between_Architecting_Function_and_Business_Stakeholders "5.2.3 Contract between Architecting Function and Business Stakeholders"
	
	When the Implementation and Migration Plan has been agreed (at the end
	of Phase F), an Architecture Contract may be drawn up between the
	architecting function and the business stakeholders who will
	subsequently be building and deploying the architected business
	solutions.
	
	A business stakeholder's Architecture Contract may include:
	
	-   Introduction and background
	-   The nature of the agreement
	-   Scope
	-   Strategic requirements
	-   Architecture deliverables that meet the business requirements
	-   Conformance requirements
	-   Architecture adopters
	-   Time window
	-   Architecture business metrics
	-   SLA
	
	This contract is also used to manage changes to the Enterprise
	Architecture in Phase H.
	
snippet togaf_guides_index_5.2.3_Define_Target "5.2.3. Define Target"
	
	The scope and level of detail to be defined will depend on the relevance
	of the business elements to attaining the Target Architecture Vision,
	and on whether architecture descriptions exist.
	
	How to improve agility at this stage:
	
	-   Progressive development of the Target Architecture within the
	    context of the big picture
	
	-   Focus on the Minimum Viable Product
	
	-   Develop detail as required to support subsequent work – only the
	    needed detail (“just enough architecture”)
	
	-   Be guided by the enterprise strategy and prioritized backlog
	
	Again, the key measure is understanding the Minimum Viable Architecture.
	
	Once the problem space has been described then a more detailed
	architecture specification has to be delivered to describe the Business,
	Data, Application, and Technology building blocks needed. These will
	become the input items for a program backlog. Product managers and
	product owners are key stakeholders in this stage.
	
	As described in Chapter 4, Segment and Capability Architecture concepts
	can be applied where necessary to decompose the problem into smaller
	pieces to provide a more progressive and iterative delivery. The
	functional and non-functional components of the architecture are
	decomposed into user stories which make up the architecture backlog.
	User stories are prioritized by the product owner in consultation with
	the Agile team. Those stories prioritized as “must have” collectively
	become the Minimum Viable Architecture.
	
	Once some initial architecture specifications are available, these will
	define the SBBs and begin to build the sprint backlog; i.e., they become
	the intentional architecture. Intentional architecture is a set of
	purposeful, planned architectural strategies and initiatives, which
	enhance solution design, performance, and usability and provide guidance
	for inter-team design and implementation synchronization.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.3_Iteration "5.2.3 Iteration"
	
	The ADM provides a model of activity that supports producing the
	essential output by producing one or more work products. The central
	question determines whether there is a need for the essential purpose of
	a phase on a particular Architecture Project. If so, you will enter the
	phase at some point in time. If the essential purpose is not needed or
	has already been addressed, then this Architecture Project does not
	enter the phase.
	
	Most commentary in the TOGAF Standard on the iteration of the ADM is
	designed to address the point that if the Practitioner does not have the
	information at hand in the EA Landscape, the information must be
	produced. These commentaries speak in terms of activity rather than
	output. Instead of considering iteration in terms of re-sequencing and
	looping the ADM, the Practitioner should explore the EA Landscape. If
	the information required, in terms of subject, detail, time, and recency
	is available – move on. If not, produce the material required. To
	produce material, the Practitioner is exercising a TOGAF ADM phase.
	
	As an example, see the stylized Gantt chart in Figure 10. This figure
	provides a process-oriented view of executing the ADM. The Gantt shows
	the inter-dependent nature of EA requires all ADM phases that develop a
	candidate architecture and test it for acceptance to be open
	simultaneously. The ADM phases stay open to address the information
	required; once it is provided they close. Also, regardless of where the
	Practitioner is in time or purpose or Architecture Project, if the
	Business Architecture is being developed the Practitioner is executing
	Phase B. Executing Phase B is all about addressing the stakeholder
	concerns from the perspective of the Business Architecture domain,
	identifying the gaps in the Business Architecture, and looking at
	impacts across the EA Landscape. The figure highlights that many of the
	steps in the ADM phases can be executed simultaneously. Good
	Practitioners will explore impacts and address stakeholder concerns
	across the entire architecture.[25]
	
	[]
	
	Figure 10: Stylized Architecture Development Gantt Chart
	
	Consider the different purposes and a cascade through time as shown in
	Figure 4. When the plan in the stylized Gant chart in Figure 10 is
	applied to each purpose, it becomes clear that the Practitioner
	continually revisits the required phases, at the appropriate level of
	detail.
	
	Most of the normal problem-solving models provide linear approaches with
	step gates. The linear approach helps us understand the process, and may
	represent the business cycle stage gates. However, they do not represent
	how people actually solve problems. Figure 11 is derived from Jeff
	Conklin’s Wicked Problems & Social Complexity within Dialog Mapping (see
	Referenced Documents), and outlines a standard linear problem solving
	progression and how professionals typically address a problem. Testing
	the concept and potential implementation interactively is a best
	practice. Iteratively considering whether the high-level direction makes
	sense in terms of execution, and does execution make sense in terms of
	high-level direction?
	
	[]
	
	Figure 11: Problem Solving Approach (Derived from Conklin’s “Wicked
	Problems”)
	
	All iteration is driven by the information needs of the current project.
	The process created is not dependent upon the work the EA Capability
	undertakes to produce, but the timing of completion. The essential
	question is when an EA Capability must deliver specific work products.
	Table 3 provides a summary of work products that are actively consumed
	by key Enterprise processes.
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.4.1_Characteristics "5.2.4.1 Characteristics"
	
	SBBs:
	
	-   Define what products and components will implement the functionality
	-   Define the implementation
	-   Fulfil business requirements
	-   Are product or vendor-aware
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.4.2_Specification_Content "5.2.4.2 Specification Content"
	
	SBB specifications include the following as a minimum:
	
	-   Specific functionality and attributes
	-   Interfaces; the implemented set
	-   Required SBBs used with required functionality and names of the
	    interfaces used
	-   Mapping from the SBBs to the IT topology and operational policies
	-   Specifications of attributes shared across the environment (not to
	    be confused with functionality) such as security, manageability,
	    localizability, scalability
	-   Performance, configurability
	-   Design drivers and constraints, including the physical architecture
	-   Relationships between SBBs and ABBs
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.4_ADM_Plan_for_Architecture_to_Support_Strategy "5.2.4 ADM Plan for Architecture to Support Strategy"
	
	The path to developing an Architecture to Support Strategy is a
	configured journey through the ADM. This path follows this journey:
	
	-   Understand context – evaluate capabilities
	-   Perform assessment and analysis
	-   Define approach to target state
	-   Finalize Architecture Vision/target state
	
	The processes iterate through the ADM to deliver an architecture that
	clarifies a Target Architecture roadmap of change over a three to
	ten-year period. The roadmap will identify change initiatives and
	support portfolio and programs. It will set terms of reference for the
	initiatives and identify synergies. A key use is governing the execution
	of strategy via portfolio and programs.
	
	[]
	
	Figure 12: Sample Project Plan to Develop Architecture to Support
	Strategy
	
snippet togaf_guides_index_5.2.4_Develop_Target "5.2.4. Develop Target"
	
	Ensure that the systems development method enables feedback to the
	architecture design.
	
	Adopt one of the many successful Agile development methods:
	
	-   Make sure that people have the necessary skills
	
	-   Ensure that there is appropriate collaboration and governance to
	    deliver the desired business value
	
	How to manage risk:
	
	-   Maintain linkage to architecture descriptions
	
	-   Ensure sufficient feedback to assess conformance to architecture
	
	-   Maintain Transition Architectures through an efficient and Agile
	    change management process
	
snippet togaf_architecture-content_5_Building_Blocks_5.2.4_Solution_Building_Blocks "5.2.4 Solution Building Blocks"
	
	Solution Building Blocks (SBBs) relate to the Solutions Continuum (see
	6.4.2 Solutions Continuum), and may be either procured or developed.
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.5_ADM_Plan_for_Architecture_to_Support_Portfolio "5.2.5 ADM Plan for Architecture to Support Portfolio"
	
	The path to developing an Architecture to Support Portfolio is a
	configured journey through the ADM. This path follows this journey:
	
	-   Group work packages to themes
	-   Balance opportunity and viability
	-   Run up to budget
	-   Drive confidence of delivery
	
	Figure 13 provides a sample project plan to provide Architecture to
	Support Portfolio. This project plan is explored in Chapter 8.
	
	The processes iterate through the ADM to deliver an architecture that
	refers to a single portfolio.[26] The boundary and purpose of the
	portfolio are derived from the superior architecture. It will identify
	projects that comprise the portfolio. The project terms of reference and
	approach are identified. A key use is governing the execution of
	projects within the portfolio.
	
snippet togaf_guides_index_5.2.5_Govern_and_Manage_Change "5.2.5. Govern and Manage Change"
	
	(Drivers for change) Experience with previously delivered project
	increments.
	
	Governance should be embedded within sprints, and as part of sprint
	retrospectives and sprint planning:
	
	-   Provide guidance to solution construction to keep within guardrails
	    and follow the solution runway
	
	    -   Guardrails may be technical boundaries or constraints such as
	        specifying standard components to be used, performance and
	        capacity limits, or technical policies
	
	    -   The runway is the architectural definitions or technical
	        superstructure that will be consumed in future system
	        construction sprints
	
	-   Assess the impact of change on higher-level architectures
	
	-   Gain feedback to evolve higher-level architectures based on
	    experience of each sprint (capability increment)
	
	Once solution implementation has started, the architecture team should
	refine the governance metrics that will be applied to test compliance
	against the Target Architecture. This compliance could be composed by
	Objectives and Key Results (OKRs) to ensure value is being delivered and
	also to ensure alignment with standards and regulations.
	
	As defined in the O-AA™ Standard [6], OKRs spell out the company’s
	priorities in terms of specific accomplishments and performance
	improvements. The objectives consist of a clearly defined qualitative
	change, while the key result is a specific, often quantitative
	performance target that must be met. Agile organizations should set OKRs
	annually and assess progress against them on a quarterly basis.
	
	Change is an inherent part of Agile delivery, and architecture
	governance can help to maintain alignment between delivery teams and
	alignment with higher-level architectures. If a change is large, then a
	pivot may be necessary, but an assessment should be made at the first
	high-level iteration to be sure the final objective and value delivery
	is not lost, and if necessary to adjust business priorities and
	interdependencies.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.6_ADM_Plan_for_Architecture_to_Support_Project "5.2.6 ADM Plan for Architecture to Support Project"
	
	The path to developing an Architecture to Support Project is a
	configured journey through the ADM. This path follows this journey:
	
	-   Ascertain dependencies
	-   Balance options and suppliers
	-   Finalize scope and budget
	-   Prepare for solution delivery governance
	
	Figure 14 provides a sample project plan to provide Architecture to
	Support Project. This project plan is explored in Chapter 9.
	
	The processes iterate through the ADM to deliver an architecture that
	refers to a single project. The boundary and purpose of the project are
	derived from the superior architecture. The EA will identify discrete
	gaps and work packages that have been packaged into a project that
	delivers measurable value on the architecture roadmap. Further, the
	measures of compliance with the architecture are provided. Architecture
	for this purpose will create the Architecture Contract. A key use is
	ensuring value realization of the Implementation Project.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.7_ADM_Plan_for_Architecture_to_Support_Solution_Delivery "5.2.7 ADM Plan for Architecture to Support Solution Delivery"
	
	The path to developing an Architecture to Support Solution Devlivery is
	a configured journey through the ADM. This path follows this journey:
	
	-   Align implementers
	-   Guide delivery
	-   Realizing the solution
	
	Figure 15 provides a sample project plan to provide Architecture to
	Support Solution Delivery. This project plan is explored in Chapter 10.
	
	The processes iterate through the ADM to deliver an architecture that
	facilitates solution delivery. (See Section 4.1.4 for a discussion of
	the distinction between Enterprise and Solution Architecture.) This
	architecture is used to constrain how the change will be designed and
	delivered. It will clarify the purpose, gaps, and expected value that
	constrain all design and implementation. It will provide the controls
	and architecture requirements used to test conformance. It directly
	facilitates governance of implementation and operational change in the
	context of value realization.
	
	[]
	
	Figure 13: Sample Project Plan to Develop Architecture to Support
	Portfolio
	
	[]
	
	Figure 14: Sample Project Plan to Develop Architecture to Support
	Project
	
	[]
	
	Figure 15: Sample Project Plan to Develop Architecture to Support
	Solution Delivery
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2.8_Iteration_Conclusion "5.2.8 Iteration Conclusion"
	
	At the start of this chapter, this Guide suggested that many
	Practitioners interpret the TOGAF ADM as a process model. If you did and
	continue to carry that notion, stop and think. The classic TOGAF diagram
	of the ADM is not an activity diagram. The TOGAF ADM is a logical method
	that places key activity steps together for the purpose of linking
	activity and information flow to produce specific outputs.
	
	The important thing to realize is every time a Practitioner undertakes
	any activity within the scope of the ADM it is developing the contents
	of the EA Landscape. It is developing the EA Landscape through
	iteration. The phase being executed is the appropriate domain. If you
	remain stuck on trying to put the ADM in a one-pass linear order, you
	will draw bizarre looping phase diagrams. Think of the steps as a
	checklist.
	
snippet togaf_adm_5_C_Information_Systems_Architectures_5.2_Approach "5.2 Approach"
	
	Phase C involves some combination of Data and Application Architecture,
	in either order. Advocates exist for both sequences. For example, Steven
	Spewak's Enterprise Architecture Planning (EAP) recommends a data-driven
	approach.
	
	On the other hand, major applications systems — such as those for
	Enterprise Resource Planning (ERP), Customer Relationship Management
	(CRM), etc. — often provide a combination of technology infrastructure
	and business application logic. Some organizations take an
	application-driven approach, whereby they recognize certain key
	applications as forming the core underpinning of the mission-critical
	business processes, and take the implementation and integration of those
	core applications as the primary focus of their architecture effort (the
	integration issues often constituting a major challenge).
	
	Detailed descriptions for Phase C are given separately for each
	architecture domain:
	
	-   Phase C: Information Systems Architectures — Data Architecture
	    (see 6. Phase C: Information Systems Architectures — Data
	    Architecture)
	-   Phase C: Information Systems Architectures — Application
	    Architecture (see 7. Phase C: Information Systems Architectures —
	    Application Architecture)
	
snippet togaf_architecture-skills-framework_5.2_Business_Skills_Methods "5.2 Business Skills & Methods"
	
	[]
	
snippet togaf_master-data-management_5.2_C-MDM_Detailed_Functions_Reference_Model "5.2 C-MDM Detailed Functions Reference Model"
	
	In this section, the reference model presented in Chapter 3 is completed
	with more detailed business and application functions. It can be used to
	deep-dive on specific questions during the architecture study, assess
	maturity of an existing capability, or provide a first framework for
	C-MDM projects to be customized.
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.2_Contents "5.2 Contents"
	
snippet togaf_guides_agile-sprints_5.2_Enterprise_Architecture_and_Sprints_on_Different_Architecture_Levels "5.2 Enterprise Architecture and Sprints on Different Architecture Levels"
	
	So far, this document has described how to use sprints at a capability
	architecture level. Enterprise Architecture according to the TOGAF
	Standard can be created on three different levels: enterprise
	(strategic), segment, and capability. Normally these levels range from
	more abstract to more detailed Enterprise Architecture and from breadth
	to depth.
	
	You can use sprints on enterprise or segment levels of Enterprise
	Architecture. The first stage as described above can absolutely be used
	in the same way. But when you get into enterprise and segment-level
	architectures things change somewhat. Often the Enterprise Architecture
	work at these levels covers areas much larger or more abstract.
	
	At these levels, collaboration between business development and
	Enterprise Architects becomes even more valuable. We are now looking at
	the big picture, not the detail. But the way of using sprints is just
	the same.
	
	This will create additional positive effects:
	
	-   Alignment between business and Enterprise Architecture at an earlier
	    stage
	-   Allowing Enterprise Architecture to evaluate and influence business
	    strategic decisions at an earlier stage
	-   The result can be used for business change backlog definitions and
	    prioritizations
	
	What solution development is then needed at these more abstract levels?
	One very important result is that we could do small (and quick)
	Proof-of-Concepts (PoCs) of matters important to resolve. These PoCs
	could be to test:
	
	-   Proposed process changes
	-   Proposed ecosystem collaborations (using simple communication means)
	-   New technology that could have a large impact on the business model
	-   Advanced COTS products (cloud or private)
	-   Enterprise Architecture slices
	
	Each of these PoCs should be created using Agile practices with small,
	talent-rich teams from different parts of the organization. The PoCs are
	time-boxed and the goal should be to test and learn, but they do not
	deliver reusable solutions. The result is fed back into the business
	development and Enterprise Architecture work, safeguarding that the
	business and architecture decisions are validated.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.2_How_is_ADM_Iteration_Realized_in_Practice "5.2 How is ADM Iteration Realized in Practice?"
	
	An often-misunderstood element of the TOGAF framework is the ADM and the
	concept of iteration. The TOGAF ADM graphic provides a stylized
	representation that is often misinterpreted as a linear waterfall
	process model. This approach leads to some of the most confusing
	diagrams and explanations. The TOGAF ADM is a logical method that places
	key activity steps together for the purpose of understanding
	relationship of activity and clarifying information flow. The classic
	TOGAF crop-circle diagram is a stylized path that demonstrates essential
	information flow.
	
	The TOGAF ADM should not be understood as a processes model. The ADM
	graphic is a stylized representation showing essential information flows
	and is not a representation of activity sequence.
	
	The important thing to realize is every time the EA team is undertaking
	any activity within the scope of the ADM it is executing a Phase and
	developing the contents of the EA Landscape. For example, if a
	Practitioner is working on roadmap development, the Practitioner is
	exercising the steps in the TOGAF ADM Phase E (Opportunities and
	Solutions). The Practitioner needs to consume the mandatory inputs and
	produce the mandatory outputs. This applies to all ADM phases.
	
	Start with recognizing that the inter-dependent nature of developing a
	Target Architecture requires considering the entire architecture,
	resulting gaps, and resulting work to clear the gap simultaneously. No
	Practitioner can consider a change, without considering the impact on
	all other domains, the resulting set of gaps, and the resulting set of
	work to clear the gap.
	
	Unfortunately, describing that level of interaction is not practical. To
	address the complexity, the TOGAF framework provides an ADM phase for
	each essential output. Best practice ensures Practitioners use effective
	information inputs and produce useful outputs.
	
	Depending on what a Practitioner is requested to develop, an
	architecture for the Practitioner’s work plan will vary. Consider the
	impact on which phases of the ADM would be used for the following
	requests:
	
	1.  Given that the organizational design, customer interface, and
	    processes are to be left unmodified, what other changes would allow
	    “moving to the cloud”?
	
	2.  What changes are required to switch from more than 50 independent
	    organizations pursuing small projects, to an integrated company
	    capable of organizing, and controlling, construction projects 100
	    times larger than the current average?
	3.  What changes are required to the core claims platform to allow a
	    300% growth in customers and transactions, and enable continuous
	    change to policy terms?
	4.  Given that the ERP and current Finance & HR processes will be kept,
	    what are the minimum changes to support allocating labor to capital
	    projects?
	5.  How to integrate the acquisition with the minimum change, while
	    sustaining both the current high-efficiency processes and the unique
	    capability from the acquisition?
	6.  How to enable a third-party developer’s agile approach, and
	    Microservices, on the customer intimacy project?
	7.  How to modernize a particular platform without impacting anyone
	    outside IT?
	
	Each of these requests has been addressed using the TOGAF framework, and
	the techniques. Each started with a different purpose, and each
	traversed a distinct path that used a different configuration of the
	TOGAF ADM.
	
	The only exception is Phase A; the Practitioner must start with Phase A.
	An Architecture Project must be initiated.
	
snippet togaf_architecture-content_5_Building_Blocks_5.2_Introduction_to_Building_Blocks "5.2 Introduction to Building Blocks"
	
	This section is an introduction to the concept of building blocks.
	
snippet togaf_reference-models_government-reference-model_5.2_Key_Drivers_for_Change "5.2 Key Drivers for Change"
	
	Education institutions must embrace new technologies to enable
	personalized learning and develop supportive international education
	policies that are integrated with broader national strategies.
	
	In order to do so, they should consider the policies described below.
	
	Innovate Curriculums and Engage with Students at an Individual Level
	
	Education providers should use new digital tools such as AI, Virtual
	Reality (VR), Internet of Things (IoT), advanced analytics, and
	cognitive systems to create personalized learning paths. This will
	facilitate the collection of information on personal goals, learning
	profiles, performance, and co-curricular activities of each student. Key
	features provided from this will include utilization of predictive
	analytics and competency-based learning to enable customized learning
	and provide a detailed view of individual student capabilities.
	
	Internationalize Education
	
	The world is moving towards “education without borders” owing to global
	competition for talent, academic mobility, overseas internships, and
	emergence of international campuses. Developing strategies and
	simplifying migration policies to internationalize education will
	promote national prosperity, reshape international relationships, and
	improve institutional and national visibility. This will subsequently
	enable emerging economies to become global competitors in the
	international student market.
	
	Modernize Classrooms
	
	The design of innovative campus structures by embracing new technologies
	can be used to address climate sustainability challenges. Examples of
	this may include:
	
	-   A shift towards innovation centers furnished with modern
	    technologies (AI, 3D printing, and simulation environment) connected
	    with industry players to facilitate live projects and prototyping
	-   Development of vertical schools that closely resemble the high-tech
	    workplace to enable resource sharing with the community
	
	Adjust National Curriculums
	
	Education will be transformed to help people adapt to changing job
	market needs and learn repeatedly over the course of their lives to
	remain relevant in a world of disruption. To adapt to the changes of the
	job market, national curriculums will also need to be transformed to
	help students develop core skills of the 21^(st) century, such as
	complex problem solving, critical thinking, collaboration, and digital
	literacy.
	
snippet togaf_guides_microservices-architecture_5.2_Maturity_and_Readiness_Assessment "5.2 Maturity and Readiness Assessment"
	
	Development and deployment of a distributed MSA assumes that the
	enterprise is either already or prepared to become service-oriented as a
	starting point. The process of conducting an SOA maturity assessment
	during the Preliminary Phase, using The Open Group Service Integration
	Maturity Model (OSIMM), is described in the SOA Source Book (see
	Referenced Documents) as part of the review of the organizational
	context for conducting Enterprise Architecture, and will not be
	replicated here. Other aspects more specifically tied to implementation
	of an MSA should also be considered.
	
	-   Team organization – relevant skills and competencies for the
	    microservices required
	
	“Stovepiped” in this context refers to the independence of an MSA team
	in the vertical sense, meaning that the entire lifecycle from
	architecture development through technology selection and microservice
	development and deployment is owned by the team responsible for that
	microservice. Development and deployment of the microservice components
	of a distributed architecture will not be effective if the core MSA
	principle of service-independence is not reflected in the organization.
	Individual teams must have the flexibility of selecting the optimum
	technologies and implementations which best suit their project
	development, always of course subject to the overall constraints laid
	down in the Enterprise Architecture.
	
	-   Considerations of microservice lifecycle versus team ownership
	
	It is a common best practice in distributed systems development for a
	single team to own a microservice over its entire lifecycle, from
	development through deployment and ultimate retirement. This is an
	organizational decision that should be made early on.
	
	-   Agile/DevOps methodologies
	
	Although we are not attempting to be prescriptive with respect to
	methodologies, we would be remiss in not noting the rapid adoption of
	Agile/DevOps methodologies across the industry. These are particularly
	well-suited to distributed architecture implementations such as MSA and
	cloud-native, and should be examined seriously by the Enterprise
	Architecture team. These methodologies will also have an impact on the
	membership of the Enterprise Architecture team itself.
	
	As with the introduction of any significant new idea, it is good to
	start with a small project and learn from experience before implementing
	on a wide scale. The architect can undertake a complete but rapid TOGAF
	cycle, without spending too much effort on detailed analysis, to define
	a pilot project. Successful implementation of that project will then
	lead to final adoption of the principle and close off any maturity
	assessment gaps identified over time. Of course, the organizational
	implications of an MSA distributed architecture must be assessed as part
	of this learning process.
	
snippet togaf_reference-models_digital-business-reference-model_5.2_O-AA_Building_Blocks "5.2 O-AA Building Blocks"
	
	Figure 3 depicts the O-AA building blocks and the relationships in line
	with the O-AA perspectives that should be considered when developing the
	Digital Architecture to enable the digital business.
	
	[]
	
	Figure 3: O-AA Building Blocks
	
	The interdependency inherent within the O-AA building blocks should thus
	be managed in an agile manner to enable incremental delivery of the
	respective digital capabilities for a sustainable digital journey and
	Value Creation.
	
	Following is a summary description of the respective O-AA perspectives
	to be considered when developing the Digital Architecture for the
	digital business:
	
	-   The Experience Perspective
	
	Defines value from a client perspective. It analyzes a client’s
	job-to-be done; their pain points and gains. It also covers the
	emotional dimension of the experience, starting from an outside-in view
	that places customer needs and problems at the center. Design thinking
	and market research are incorporated into the broader agile architecting
	discipline.
	
	-   The Work System Perspective
	
	Defines the ability of the enterprise to deliver client benefits
	efficiently. It starts with analyzing commonalities across value
	streams; this helps to identify activities that could be shared, thus
	contributing to architecting the Operating Model.
	
	-   The Technical System Perspective
	
	Covers the software and hardware capabilities of the enterprise. It
	starts from analyzing domains such as payments, mortgage lending, or
	federated identity management and also includes architecting the
	physical world. The Software Architecture discipline is part of the
	broader agile architecting discipline.
	
snippet togaf_architecture-project-management_5.2_Phases_B_to_F_Architecture_Project_Execution_and_Monitoring "5.2 Phases B to F: Architecture Project Execution and Monitoring"
	
	In general, the main goal of the TOGAF ADM Phases B, C, D, E, and F is
	to prepare complete work packages with a migration plan of how the
	target architecture can be achieved. The first three – Phases B, C, and
	D – are assigned to the decomposition solution by looking into the
	business, application, and technology layer and detailing both the
	baseline and target architecture solution. Phase E concentrates on how
	to deliver the architecture. It takes into account the complete set of
	gaps between the baseline and target architectures in all architecture
	domains, and logically groups changes into work packages within the
	enterprise’s portfolios. Phase F brings finalization of the Architecture
	Roadmap and the supporting Implementation and Migration Plan. At the
	beginning of each phase, there is a reassessment and revalidation of
	whether they are properly planned. When needed, the Project Management
	Plan is amended. Planning of the next phase should be prepared in great
	detail, especially in terms of activities and risk assessment. The
	following phases can be kept more general. Detailed planning of the
	closest phase only ensures that the business value, cost of work
	packages, and transition architectures are both optimal and understood
	by key stakeholders.
	
	From the project point of view, we can assume that actions from Phases B
	to F are the next phases of the project and the end of each phase can be
	understood as a milestone which delivers an important functionality. The
	following PMBOK processes should be considered:
	
	-   Direct and Manage Project Work
	-   Perform Integrated Change Control
	-   Close Project or Phase
	-   Validate Scope
	-   Control Scope
	-   Control Quality
	-   Perform Quality Assurance
	-   Manage Communication
	-   Manage Stakeholder Engagement
	
	In order to better understand this, we should look at the entire
	knowledge area of Execution and Monitoring and controlling where we can
	find processes from all areas.
	
	Integration Management (4.3, 4.4, and 4.5):
	
	-   Direct and manage project execution is a process of performing
	    specific work by the Project Manager (or leader of the work) with an
	    intention to reach intended project goals.
	
	Scope Management (5.4 and 5.5)
	
	Time Management (6.4):
	
	-   Keep the plan in sync with intended milestones
	
	Cost Management (7.3):
	
	-   The TOGAF Standard does not provide a way to control costs, but it
	    is an essential part of each project.
	
	Quality Management (8.1, 8.2, and 8.3):
	
	-   Set and control quality standards but also ensure that the intended
	    work with appropriate level of detail has been performed.
	
	HR Management (9.2, 9.3, and 9.4):
	
	-   Working with the team is critical when approaching a topic as broad
	    as Enterprise Architecture. It is very possible that in each phase
	    the team would be changed as the each phase requires a different set
	    of competencies.
	
	Communication Management (10.3, 10.4, and 10.5):
	
	-   With the various stakeholders and their concerns, we will not only
	    need to know who and when to inform, but also to identify the
	    information level that needs to be maintained through to project
	    resolution.
	
	Risk Management (11.5):
	
	-   As risk is something which can seriously damage an Architecture
	    Project, the Project Manager should have a way to identify and
	    mitigate risk. Risk monitoring and controlling management processes
	    can help.
	
	Stakeholder Management:
	
	-   Managing stakeholder expectations is a process of communication and
	    cooperation with stakeholders in order to meet their needs and
	    manage their future concerns.
	-   These activities are strongly related to the ADM step Conduct Formal
	    Stakeholder Review.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.2_Phase_A_Architecture_Vision "5.2 Phase A: Architecture Vision"
	
	In general, Phase A: Architecture Vision describes enough of the TOGAF
	ADM Phases B, C, and D to ensure that key stakeholders can agree to a
	vision of the end-state, which represents a solution to a defined
	problem.
	
	In Phase A sufficient security-specific architecture design is carried
	out to:
	
	-   Satisfy the security stakeholders that the end-state does not
	    represent any unknown or unacceptable risk and aligns with corporate
	    policies, standards, and principles
	-   Satisfy business stakeholders – in particular those who control the
	    budget – that the Security Architecture is instrumental in enabling
	    and supporting the overall architecture required to deliver the
	    business opportunities and benefits identified with the right
	    balance between risk, compliance, and business benefits
	
	In Phase A, it is essential to identify the complete list of all
	stakeholders, their concerns, and associated requirements for approval
	of the architecture. All stakeholders will have security and risk
	concerns and associated requirements. Separating security stakeholders
	ensures that the architecture will address a subset of stakeholders and
	a subset of requirements.
	
	The stakeholder requirements are gathered to determine the security
	blueprint needed to address the various concerns the stakeholders have.
	The security blueprint is defined at a level giving sufficient assurance
	to the stakeholders that the final artifacts and deliverables will
	address their concerns appropriately. The ADM phases related with
	architecture descriptions complete the blueprint and add the required
	detail.
	
	Stakeholders typically have value concerns related to the Security
	Architecture. Value may be measuring items such as reduced risk and
	enablement of the overall architecture. The Business Attribute
	Profile[1] can be useful as a basis for the business case. As a specific
	Business Attribute Profile may not yet be available, the SABSA-provided
	Business Attribute Profile can be used as a starting point. A
	scenario-based approach may be used to obtain stakeholder approval.
	
	The viewpoints and business cases must build on Security Principles,
	drivers, key risks, and risk appetite and should be an integral part of
	the overall Architecture Vision deliverables.
	
snippet togaf_guides_index_5.2_Product_Development_and_Architecture "5.2. Product Development and Architecture"
	
	As shown in Figure 7, a traditional, generalized view of Enterprise
	Architecture contains a number of stages.
	
	[Stages]
	
	Figure 7. Traditional Stages of Enterprise Architecture
	
	In terms of the TOGAF ADM:
	
	-   Phase A defines the problem
	
	-   Phases B, C, and D define the baseline and target
	
	-   Phases E, F, and G deploy the target
	
	-   Phase H manages change
	
	In an Agile environment it is likely that these activities will be a
	continuously managed process with activities proceeding in parallel, as
	shown in Figure 8.
	
	It is not necessary to complete the problem definition before starting
	other activities. Enough of the problem needs to be defined to provide
	context for other activities. As other activities are initiated, work
	can proceed to further elaborate and extend the problem definition.
	
	Clearly, there are dependencies. It is not possible to deploy any part
	of the target until the parts of the baseline and target describing that
	part of the target have been sufficiently defined.
	
	[Activities]
	
	Figure 8. Stages of Enterprise Architecture in an Agile Environment
	
	More practical guidance about different architecture styles of support
	can be found in the TOGAF Standard [1] – Applying the ADM.
	
snippet togaf_business-architecture_business-capabilities_5.2_Relationship_Mapping "5.2 Relationship Mapping"
	
	Business capabilities have relationships to organizational units, value
	streams, information assets, and all other domains of a business and IT
	architecture. Business capability analysis and capability-based planning
	must recognize and evaluate the strength or weakness of each of those
	relationships in order to develop a complete view of the business, and
	to isolate those areas to target for improvement.
	
	The relationships that business capabilities have with other domains can
	be depicted using relationship mapping techniques. Three of the most
	common and useful mappings (from a business planning perspective) are
	capability/organization mapping, capability/value stream mapping, and
	capability/business process mapping.
	
snippet togaf_digital-technology-adoption_5.2_Step_2_Perform_Digital_Technology_Readiness_Assessment "5.2 Step 2: Perform Digital Technology Readiness Assessment"
	
	The DTRA assessment, comprising all the identified factors, is to be
	considered as a toolkit to inspect the readiness of the organization
	against the various critical factors identified in this document. The
	factors, as explained in Chapter 4, are categorized into foundational,
	impact, and sustaining types. The availability of a conducive
	environment which fulfills the factor requirements is antecedent to the
	adoption of digital technology.
	
	The questionnaire is provided in Appendix A of this document.
	
	Who Should Take this Assessment?
	
	The DTRA is designed for enterprises that are ready to adopt digital
	technologies for the reasons explained earlier in this document. The
	assessment (either self or third-party) requires the active involvement
	of key leaders engaged through a process of dialog and consensus. This
	is critical, as missing factors have the potential to decelerate and
	even derail transformation initiatives and addressing them requires
	their focused attention and commitment. The DTRA brings forth and
	magnifies the weak spots so that they can be plugged, and a field-tested
	adoption roadmap developed.
	
snippet togaf_adm-techniques_5_Gap_Analysis_5.2_Suggested_Steps "5.2 Suggested Steps"
	
	The suggested steps are as follows:
	
	-   Draw up a matrix with all the ABBs of the Baseline Architecture on
	    the vertical axis, and all the ABBs of the Target Architecture on
	    the horizontal axis
	
	-   Add to the Baseline Architecture axis a final row labeled "New", and
	    to the Target Architecture axis a final column labeled "Eliminated"
	
	-   Where an ABB is available in both the Baseline and Target
	    Architectures, record this with "Included" at the intersecting cell
	
	-   Where an ABB from the Baseline Architecture is missing in the Target
	    Architecture, each must be reviewed
	
	    If it was correctly eliminated, mark it as such in the appropriate
	    "Eliminated" cell. If it was not, an accidental omission in the
	    Target Architecture has been uncovered that must be addressed by
	    reinstating the ABB in the next iteration of the architecture design
	    — mark it as such in the appropriate "Eliminated" cell.
	
	-   Where an ABB from the Target Architecture cannot be found in the
	    Baseline Architecture, mark it at the intersection with the "New"
	    row as a gap that needs to filled, either by developing or procuring
	    the building block
	
	When the exercise is complete, anything under "Eliminated" or "New" is a
	gap, which should either be explained as correctly eliminated, or marked
	as to be addressed by reinstating or developing/procuring the building
	block.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.2_What_is_the_Depth_and_Breadth_of_EA "5.2 What is the Depth and Breadth of EA?"
	
	Typically, there are four broad purposes[16] of an EA Capability:
	
	-   EA to support Strategy: deliver EA to provide a target architecture,
	    and develop roadmaps of change over a three to ten-year period
	
	    An architecture for this purpose will typically span many change
	    programs or portfolios. In this context, architecture is used to
	    identify change initiatives and supporting portfolio and programs.
	    Set terms of reference, identify synergies, and govern execution of
	    strategy via portfolio and programs.
	
	-   EA to support Portfolio: deliver EA to support cross-functional,
	    multi-phase, and multi-project change initiatives
	
	    An architecture for this purpose will typically span a single
	    portfolio. In this context, architecture is used to identify
	    projects, and set their terms of reference, align their approaches,
	    identify synergies, and govern their execution of projects.
	
	-   EA to support Project: deliver EA to support the enterprise’s
	    project delivery method
	
	    An architecture for this purpose will typically span a single
	    project. In this context, the architecture is used to clarify the
	    purpose and value of the project, identify requirements to address
	    synergy and future dependency, assure compliance with architectural
	    governance, and support integration and alignment between projects.
	
	-   EA to support Solution Delivery: deliver EA that is used to support
	    the solution deployment
	
	    An architecture for this purpose will typically be a single project
	    or a significant part of it. In this context the architecture is
	    used to define how the change will be designed and delivered,
	    identify constraints, controls, and architecture requirements to the
	    design, and finally act as a governance framework for change.
	
	These four purposes frame the depth and breadth of an EA Capability’s
	operations and need to sustain an EA repository. Within the scope of the
	purpose, the Leader must understand what is expected from an EA
	Capability. Questions to ask include:
	
	-   Where in this hierarchy is the EA Capability expected to support
	    decision-making?
	-   Where in this hierarchy is the EA Capability expected to support
	    governing change activity?
	-   Is there a priority of focus; for example, solution deployment over
	    strategy?
	-   Is there a concern that current change initiatives are failing to
	    deliver expected value?
	
	Consider that one EA Capability may support a strategist or functional
	Leader defining where the enterprise is going. Another EA Capability may
	take the strategist’s output and support governance activity to realize
	the changes specified by the strategist. Questions such as the above
	list help clarify the nuances of the purposes mentioned above. Given
	that different architecture projects may address different levels of
	detail, the way the EA Landscape is filled will vary. If plotted on a
	three-dimensional graph, at any given point of time, work being executed
	will look like a scatter diagram.
	
snippet togaf_architecture-content_5_Building_Blocks_5.3.1.1_Building_Blocks_in_Architecture_Design "5.3.1.1 Building Blocks in Architecture Design"
	
	An architecture is a set of building blocks depicted in an architectural
	model, and a specification of how those building blocks are connected to
	meet the overall requirements of the business.
	
	The various building blocks in an architecture specify the scope and
	approach that will be used to address a specific business problem.
	
	There are some general principles underlying the use of building blocks
	in the design of specific architectures:
	
	-   An architecture need only contain building blocks that are relevant
	    to the business problem that the architecture is attempting to
	    address
	
	-   Building blocks may have complex relationships to one another
	
	    One building block may support multiple building blocks or may
	    partially support a single building block (for example, the business
	    service of "complaint handling" would be supported by many data
	    entities and possibly multiple application components)
	
	-   Building blocks should conform to standards relevant to their type,
	    the principles of the enterprise, and the standards of the
	    enterprise
	
snippet togaf_architecture-content_5_Building_Blocks_5.3.1.2_Building_Block_Design "5.3.1.2 Building Block Design"
	
	The process of identifying building blocks includes looking for
	collections of capabilities or assets that interact with one another and
	then drawing them together or making them different:
	
	-   Consider three classes of building blocks:
	    -   Re-usable building blocks, such as legacy items
	    -   Building blocks to be the subject of development, such as new
	        applications
	    -   Building blocks to be the subject of purchase; i.e., Commercial
	        Off-The-Shelf (COTS) applications
	-   Use the desired level of integration to bind or combine functions
	    into building blocks; for instance, legacy elements could be treated
	    as large building blocks to avoid breaking them apart
	
	In the early stages and during views of the highest-level enterprise,
	the building blocks are often kept at a broad integration definition. It
	is during these exercises that the services definitions can often be
	best viewed. As implementation considerations are addressed, more
	detailed views of building blocks can often be used to address
	implementation decisions, focus on the critical strategic decisions, or
	aid in assessing the value and future impact of commonality and
	re-usability.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.3.1_Alignment_of_EA_Capability_Team_in_the_Organization_Model "5.3.1 Alignment of EA Capability Team in the Organization Model"
	
	Most teams delivering an EA Capability today fall under one of the three
	variants – function-centric,[17] strategy-centric, or IT-centric, as
	shown in Figure 7. As with all conceptual models, there will be
	variations or hybrids specific to an enterprise. For example,
	participants in the team may be aligned to one team, and the
	contributing members may be aligned with line of business
	(function-centric) teams.
	
	The initial scope and impact of the EA Capability varies based on the
	model that is being followed in the enterprise. This alignment will
	impact the constitution of the architecture review board, governance
	model, and time to realize value.
	
	Function-Centric EA
	
	[]
	
	IT-Centric EA
	
	[]
	
	Strategy-Centric EA
	
	[]
	
	Figure 7: EA Team Common Organizational Placements
	
	Each model supports a different set of objectives, empowerment, and
	constraints for the EA Capability team, as they are reflections of the
	outcome expectations from the EA. Having such a model does not preclude
	the charter for a team providing the EA Capability from addressing other
	aspects. When the expectation is such, there exists a possibility for
	alignment hierarchy for the EA Capability team to shift from one model
	to another as objectives and strategies change. The Leader must be
	cognizant of a coherent or mixed bag of expectations and charter to
	define appropriate execution methods.
	
	A high-functioning EA Capability requires cross-discipline function
	behavior and engagement in other processes of the enterprise. These
	processes include corporate governance, fiscal control, customer and
	stakeholder engagement, and project management. Further, Martin van den
	Berg and Marlies van Steenbergen (2006)[18] highlight the need to cover
	individualistic architect functions like consulting, mentoring,
	commitment, motivation, and persistence. The EA Capability team must
	have sufficient capacity and diversity of domain knowledge, soft skills,
	and context to be successful.
	
snippet togaf_architecture-content_5_Building_Blocks_5.3.1_Basic_Principles "5.3.1 Basic Principles"
	
	This section focuses on the use of building blocks in the ADM. General
	considerations and characteristics of building blocks are described in
	5.2 Introduction to Building Blocks .
	
	
snippet togaf_guides_index_5.3.1_Identification_of_a_New_Need_Define_and_Identify_the_Problem "5.3.1. Identification of a New Need – Define and Identify the Problem"
	
	Apply Enterprise Architecture principles and stakeholder assessment,
	supported by other techniques like design thinking, to identify new
	business opportunities considering the new trends in business and
	technology, taking an outside-in approach to consider customer demands,
	and assessing what competitors are doing.
	
	As stated in Axiom 2, Outside-In Thinking, in the O-AA Standard [6],
	Agile Architecture shall use marketing and design methods to discover
	how customers are likely to use products and services. Jobs-to-be-done
	analysis, customer journey mapping, and design thinking are examples of
	methods used by Agile enterprises. Design thinking, which is a
	human-centered approach, incorporates human cognition and emotion as key
	aspects of the value definition.
	
	Another important consideration is to perform a business readiness
	assessment, to adopt a new emerging technology that might be related
	with the new business need identified, and also to consider regulatory
	and compliance – adherence to standards and corporative principles is
	also a key consideration while defining the problem.
	
	Agile Architecture should identify the enterprise value streams. Value
	shall be specified from the standpoint of the customer. A value stream
	has to be identified for each product or service family from concept to
	launch and from order to delivery. Enterprise Architecture should
	support the value stream definition and also the business capabilities
	needed to fulfill the need.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.1_Security_Policy_Architecture "5.3.1 Security Policy Architecture"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	The Security Policy Architecture (or Framework) contains a set of
	security policies that express the security strategy. It assigns
	ownership and accountability for security and risk management. It also
	addresses the linkage and hierarchy of operational risk management in
	general with the various security aspects such as business continuity,
	information security, system security, and physical security.
	
snippet togaf_architecture-content_5_Building_Blocks_5.3.2_Building_Block_Specification_Process_in_the_ADM "5.3.2 Building Block Specification Process in the ADM"
	
	The process of building block definition takes place gradually as the
	ADM is followed, mainly in Phases A, B, C, and D. It is an evolutionary
	and iterative process because as definition proceeds, detailed
	information about the functionality required, the constraints imposed on
	the architecture, and the availability of products may affect the choice
	and the content of building blocks.
	
	The key phases and steps of the ADM at which building blocks are evolved
	and specified are summarized in Figure 5-1 . The major work in these
	steps consists of identifying the ABBs required to meet the business
	goals and objectives. The selected set of ABBs is then refined in an
	iterative process to arrive at a set of SBBs which can either be bought
	off-the-shelf or custom developed.
	
	[]
	
	Figure 5-1: Key ADM Phases/Steps at which Building Blocks are
	Evolved/Specified
	
	------------------------------------------------------------------------
	
	Footnotes
	
	1. Refer to www.omg.org/spec/RAS.
	
snippet togaf_guides_index_5.3.2_Define_Target "5.3.2. Define Target"
	
	Once the problem space has been described then a more detailed
	architecture specification has to be delivered to describe the Business,
	Data, Application, and Technology building blocks needed – this
	specification will be the input for a product backlog definition.
	Product managers and product owners are key stakeholders in this
	process.
	
	In order to provide an Agile approach, it is also necessary to segment
	the problem.
	
	The Segment and Capability Architecture concepts should be applied to
	decouple the problem into smaller pieces so that the specifications will
	be delivered in an Agile way.
	
	The features depicted in the architecture will be useful to define
	priorities for the product backlog and to identify any interdependencies
	that will facilitate the definition of the sprint backlog.
	
	Once the architecture specifications have been finished, they will
	provide the input to define the SBBs and to shape the final solution
	following the partitions concept – this solution definition is the input
	for the sprint backlog definition and conforms the basis for the
	intentional architecture that will support Agile implementation.
	
	Once the Agile teams start the delivery process based on the
	architecture descriptions, Enterprise Architecture teams should refine
	the governance metrics that will be applied to test compliance. This
	compliance could be composed through OKRs to ensure value is being
	delivered and also to ensure alignment with standards and regulatory
	compliance.
	
	Governance activity should not be made in isolation, so every time an
	Agile team delivers an output a retrospective should be made, and the
	governance process should be part of that sprint iteration retrospective
	and planning.
	
	On the other hand, change management should also continue during the
	whole process since changes could have an impact in any of the
	iterations described above. Therefore, these changes should be
	identified in a dynamic way so changes can be applied quickly to avoid
	further delays in the process.
	
	If a change is too big or disruptive, then analysis at the first
	high-level iteration should be carried out to be sure the final
	objective and value delivery is not lost and the proper adjustments in
	priorities and interdependencies can be made.
	
	An important concept to follow for Agile Architecture is intentional
	architecture, which specifies a set of purposeful, planned architectural
	strategies and initiatives to enhance solution design, performance, and
	usability and provide guidance for inter-team design and implementation
	synchronization.
	
	In Figure 10, intentional architecture is delivered as part of the
	Capability Architecture specification and it is aimed to provide
	guardrails to support implementation.
	
	The output of the Strategic Architecture gives input to define the
	product backlog that is defined in further detail in the Segment
	Architecture. At the Capability Architecture level, the spring backlog
	is defined and also the intentional architecture that will guide
	implementation (deploy target).
	
	Change management will address any new requirements and features and
	will support the refinement and prioritization for the product backlog,
	for them to be distributed in different releases.
	
	[Agilecycle]
	
	Figure 10. Agile Architecture and Product Development
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.2_Security_Domain_Model "5.3.2 Security Domain Model"
	
	Location in the Architecture Framework: the TOGAF Standard –
	Introduction and Core Concepts (Glossary of Supplementary Definitions:
	Information Domain). Complete text: “Grouping of information (or data
	entities) by a set of criteria such as security classification,
	ownership, location, etc. In the context of security, information
	domains are defined as a set of users, their information objects, and a
	security policy.”
	
	Note: The concept of information domain corresponds with the definition
	of a security domain below.
	
	A security domain represents a set of assets that could be described by
	a similar set of business attributes. In other words, the security
	domain groups the assets with the same security level that fall under
	the jurisdiction of one security policy. In addition, the security
	domain model helps in defining responsibility areas where responsibility
	is exchanged with external parties. It can also be used to distinguish
	between areas of different security or trust levels. A security policy
	authority is responsible for setting and implementing the security
	policy within the domain.
	
	If the business model of the organization does encompass federation with
	other organizations, the extent of the security federation should be
	established at this point in the process. This is the case when
	organizations have data objects or activities in common. Contractual
	federation agreements should be examined for their security implications
	and agreements. It may be necessary to establish joint architecture
	meetings with other members of a federation if they belong to the same
	security domain.
	
snippet togaf_guides_index_5.3.3_Projects_versus_Products "5.3.3. Projects versus Products"
	
	Project and product management are closely related, but in general
	product management is a broader discipline than project management.
	Product management covers the full lifecycle of discovery, development,
	delivery, long-term support and maintenance, and disposal, although
	disposal is often a relatively trivial step with digital products.
	Within this product lifecycle, there are likely to be a number of
	projects and processes invoked; e.g., a project for each major product
	deliverable, and a process to handle support requests from product
	users. Figure 11 shows the relationship between products and projects.
	
	[Products and Projects]
	
	Figure 11. Products and Projects, based on Figure 43 from the Digital
	Practitioner Body of Knowledge™ Standard
	
	For further information on product management techniques, refer to the
	DPBoK™ Standard [9].
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.3_Trust_Framework "5.3.3 Trust Framework"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Trust relationships are the basis for doing business with other parties.
	The trust framework describes trust relationships between various
	entities in the architecture domain and on what basis this trust exists.
	Trust relationships can be unidirectional, bidirectional, or
	non-existent. The onus for assessing trust is the responsibility of
	those choosing to enter into the contracts and their legal counsel. It
	is important to note that technology (e.g., digital certificates) cannot
	create trust, but can only convey in the electronic world the trust that
	already exists in the real world through business relationships, legal
	agreements, and security policy consistencies.[2]
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.4_Risk_Assessment "5.3.4 Risk Assessment"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ERM.
	
	Although the TOGAF Standard – ADM Techniques (Initial Risk Assessment)
	describes one method of administrating the result of a risk assessment,
	the actual act of assessing risk and the ways to do that are not
	described. Therefore, this concept is augmented by this document for use
	with the TOGAF Standard.
	
	A risk assessment is the activity of determining the risks that are
	relevant to an asset or objective. A qualitative risk assessment
	delivers a listing of relevant risk scenarios with a high-level
	prioritization (high-medium-low), whereas a quantitative approach seeks
	for numeric determination of the risk. This is commonly based on
	identified threats, their likelihood of materializing, and the impact of
	an incident. A deliverable of a risk assessment is the Business Risk
	Model.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.5_Business_Risk_Model_Risk_Register "5.3.5 Business Risk Model/Risk Register"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ERM.
	
	The Business Risk Model is a Risk Register. It determines the cost (both
	qualitative and quantitative) of asset loss/impact in failure cases. It
	is the result of a risk assessment, based on identified threats,
	likelihood of materializing, and impact of an incident. Business impact
	should be aligned with the definitions in the Business Attribute
	Profile, which act as pseudo-assets. Security classification should be
	carried out at this stage based on the risks identified. The business
	risk model is a detailing of the risk strategy of an organization. The
	classification of the information determines the maximum risk the
	business is willing to accept, and the owner of the information decides
	what mitigation is enough for his/her information.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.6_Applicable_Law_and_Regulation_Register "5.3.6 Applicable Law and Regulation Register"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	The Applicable Law and Regulation Register contains the specific laws
	and regulations that apply within the scope of the Enterprise
	Architecture engagement, based on the business function inventory. It is
	kept up-to-date, following legal and regulatory changes. This register
	is important for compliance purposes.
	
	Whether the business function is subject to regulation depends upon the
	functionality of the system as a whole and the data collected or
	maintained. In addition, the jurisdiction where the supporting systems
	or services are deployed, where the users reside, etc. is relevant
	information. It may be wise to obtain legal counsel regarding these
	obligations at the outset of activities.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3.7_Applicable_Control_Framework_Register "5.3.7 Applicable Control Framework Register"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	The Applicable Control Framework Register contains the suitable set of
	control frameworks that best satisfy the requirements and address the
	risks related to the engagement scope and context. Control frameworks
	contain requirements and/or mandatory security measures. Examples of
	control frameworks are ISO/IEC 27001:2013 [4], ISO/IEC 27002:2013 [5],
	COBIT [10], PCI-DSS, Common Criteria, etc.
	
	Factors that drive the selection of control frameworks are:
	
	-   Mandatory certifications, due to the nature of the business process
	    or the industry
	-   Way of working of the internal ISM process – this is often inspired
	    by ISO/IEC 27001:2013 but might mandate additional control
	    frameworks as well
	-   Marketing objectives – customers may ask for specific control
	    framework certifications
	-   Support for security audits
	
snippet togaf_guides_index_5.3_Architecture_Product_Development_and_Delivery "5.3. Architecture, Product Development, and Delivery"
	
	In an Agile environment and within supporting organizations that have
	adopted an Agile delivery approach, it is likely that the activities
	presented in Section 5.2 will be a continuously managed process handled
	in parallel and focusing more on the outcome with architecture as the
	vehicle to support product delivery.
	
	For an Agile approach the stages to follow are similar but performed in
	a different way. Enterprise Architecture iterations support this product
	definition and product architecture.
	
	The problem is defined at the Strategic and Segment level, then at the
	Segment and Capability level a target is defined, and at the Capability
	level a target is deployed by Agile teams supported by the architect and
	the Capability Architecture definition.
	
	As explained in Section 4.4, at the Strategic level a high-level
	architecture specification is defined – strategic themes, epics, that
	will guide the subsequent problem definition. At the Segment level, the
	backlog is defined in alignment with the strategic definition (problem
	definition). This backlog should be refined further to produce the
	sprint backlog that will be delivered using any Agile technique. This
	Agile delivery is supported by a Capability Architecture supporting
	Agile solution delivery.
	
snippet togaf_architecture-content_5_Building_Blocks_5.3_Building_Blocks_and_the_ADM "5.3 Building Blocks and the ADM"
	
snippet togaf_architecture-skills-framework_5.3_Enterprise_Architecture_Skills "5.3 Enterprise Architecture Skills"
	
	[]
	
snippet togaf_adm-techniques_5_Gap_Analysis_5.3_Example "5.3 Example"
	
	Figure 5-1 shows an example analysis for ABBs that are services from the
	Network Services category of the TOGAF Technical Reference Model (TRM),
	and shows a number of services from the Baseline Architecture missing
	from the Target Architecture.
	
snippet togaf_guides_microservices-architecture_5.3_Governance_and_Support_Strategy "5.3 Governance and Support Strategy"
	
	The TOGAF Standard does not attempt to describe all aspects of
	implementation and operational governance; only those areas directly
	related to the architecture under development. It assumes that detailed
	governance for those areas is in place. The Preliminary Phase includes
	confirmation of the architecture governance and support strategy as part
	of the Organizational Model for Enterprise Architecture. It needs to be
	understood up-front that the governance requirements for a distributed
	architecture such as MSA are going to be very different from traditional
	Enterprise Architectures, even those focused on SOA. In order to
	function efficiently, an MSA team must follow two parallel tracks for
	governance; making its own governance decisions as needed, applied only
	to that MSA, while still residing within the guardrails established for
	the enterprise.
	
	It should also be borne in mind that governance is not about developing
	a set of governance requirements, but rather the process and approach to
	apply them. Following the agile principles, governance should become an
	ongoing activity performed by the architects working side-by-side with
	implementation teams.
	
	As noted earlier, the MSA will be by definition a subset of the overall
	Enterprise Architecture. In order to allow for efficient development of
	MSA/cloud services, the individual development teams must have the
	freedom to select the optimum technologies and methodologies to speed
	their development and deployment cycles, which will change as a function
	of time, if nothing else. At the same time, these teams must still
	adhere to the overall governance rules established by the Enterprise
	Architects, or explicitly ask for a waiver allowing them to take
	exception to one or more of these rules. Failure to adhere to the rules
	established by the Enterprise Architects runs the risk of
	institutionalizing technological chaos and instability.
	
	It may not be appropriate to undertake the detailed development of
	governance rules and procedures as part of the Preliminary Phase. It
	could be better to confirm the architecture governance procedures, and
	to commission a separate project to define implementation and
	operational governance procedures before implementation starts.
	
	For MSA governance, although we are not prescribing a DevOps
	methodology, a distributed and rapidly changing set of microservices
	will require the following kinds of governance tools:
	
	-   Appropriate levels of review prior to any change releases (e.g.,
	    “two sets of eyes” methodology)
	-   Least privilege concepts applied to protect production pipelines
	-   Robust change monitoring
	-   High levels of automation – both of monitoring functions and testing
	
	For further information on DevOps and MSA, we recommend reviewing The
	Open Group White Paper: Benefits of DevOps Methodology for Microservices
	Solutions (see Referenced Documents). A high-level view of how MSA
	governance is related to the Enterprise Architecture and IT governance
	is given in Figure 2.
	
	[]
	
	Figure 2: SOA Governance Supports IT and Enterprise Architecture
	Governance
	
	The MSA Governance Reference Model is largely identical to the SOA
	Governance Reference Model, other than being restricted to MSA
	processes. It is depicted in Figure 3.
	
	[]
	
	Figure 3: MSA Governance Reference Model
	
	Any governance model should be viewed as a process and not a project;
	therefore, the phases of the Governance Reference Model should be viewed
	as a continuous improvement loop, whereby progress is measured and
	course-correction and updates to the processes are performed when
	needed, as indicated in Figure 3.
	
snippet togaf_guides_agile-sprints_5.3_Length_of_Sprints "5.3 Length of Sprints"
	
	The length of the sprint depends on the circumstance or nature of the
	project. The duration of the sprint can be one week to four weeks. But
	it is generally believed that the sprint length should be two weeks. The
	project management team should decide the length of the sprint.
	
	It is recommended for the sprints to be fixed in length so that the team
	has a predictable amount of time available to them to work, which in
	turn assists in both short and long-term planning. If sprints are rarely
	the same length, then the sprint team will struggle to do any reliable
	planning.
	
	It can be argued that a sprint is not sufficient to create enough
	business development or Enterprise Architecture to create value for the
	business or future solution sprints. Key factors to consider when trying
	to determine the appropriate stimulus-to-response time for your project
	are:
	
	-   The expected duration of the project
	-   Customers/stakeholders
	
	—  How often they are able to provide feedback and guidance
	
	—  The cultural barriers existing in the company or within the
	stakeholder/customer group
	
	—  Environmental factors
	
	—  Team experience
	
	—  Technical capabilities, such as automated acceptance testing,
	Test-Driven Development (TDD), automated releases, etc.
	
	—  Ability to decompose work – this is critical since a sprint should
	deal with an atomic topic (ideally) or with the least interdependencies
	possible
	
	If it is impossible to complete enough work in one sprint, let the
	business development and Enterprise Architecture work span more than one
	sprint, but still the work should be divided into chunks that fit in the
	sprints and the output from a sprint should be something valuable for
	the stakeholders.
	
	Another alternative is to define a set of transition architectures
	(releases) where business development and Enterprise Architecture have
	reached some level of maturity and then the Agile solution development
	teams work with the release material supported by the business
	development and Enterprise Architecture teams. This is closely related
	to an Agile Release Train (ART). In parallel, the business development
	and Enterprise Architecture teams work on material for the next release.
	
snippet togaf_reference-models_digital-business-reference-model_5.3_O-AA_Development_Building_Blocks_for_Digital_Architecture "5.3 O-AA Development Building Blocks for Digital Architecture"
	
	The following elements are essential to enable the extension of the DBRM
	core elements and should be considered to address the specific
	requirement for Digital Architecture development:
	
	-   Value Creation
	
	Digital Value Creation through digital stack to create additional
	business value within the primary value chain of enterprises to enable
	Customer Experience. Value definition for the organization must consider
	the Customer Focus elements – Digital Context/Needs, Customer Experience
	expectations, and the inherent Digital Value.
	
	-   Agile Strategy
	
	Sustainable differentiation-based appropriate strategic positioning with
	the digital ecosystem. Agile Strategy should deploy within the agile
	organization, which also influences strategy in a bottom-up manner to
	build the Digital Enterprise. Agile Strategy influences the definition
	of the enterprise’s top-level organization. The respective Ecosystem and
	Business Model, Operating Model, and Business Capability Model should
	then be geared towards enabling an agile organization underpinned by the
	appropriate Digital Architecture building blocks to create sustainable
	value for the customers.
	
	-   Experience Design
	
	Combines customer research and product discovery during a set of design
	thinking iterations. This is not a linear process; it alternates between
	divergent and convergent thinking and is achieved through the
	development of journey maps. Journey maps bridge outside-in thinking
	with inside-out thinking by defining which activities deliver the
	experience customers expect. Experience Design discovers the products
	that meet the needs of client segments. Organizations should consider
	Experience Design when defining their Product Architecture. The Product
	Architecture will have an impact on the underlying Business Operating
	Environment and the respective Digital Enablement elements.
	
	-   Product Architecture
	
	The assignment of the functional elements of a product to its building
	blocks or product components (Source: Ulrich et al 2020). The Product
	Architecture specifies what the Operations Architecture must do
	particularly well; i.e., what is required. The Product Architecture may
	require new operational capabilities that the Operations Architecture
	should deliver. The Product Architecture is developed concurrently with
	the Software and Hardware Architecture (Technology Architecture). The
	development of the Product Architecture must take into consideration
	core Business Services and Products, the respective Technology
	Architecture, and the Digital Enablement element. It would have an
	impact in the resulting experience, and the Digital Value realized by
	the target customers and digital product consumers.
	
	-   Operations Architecture
	
	Operations Architecture improves the value streams and processes that
	deliver products and designs the target Operating Model. The Operations
	Architecture is developed concurrently with the Software Architecture,
	and incorporates software functionalities. The Operations Architecture
	starts with an outward view that specifies the operational capabilities
	that products need. The analysis of operational capabilities is
	conducted for each targeted customer segment and is prioritized around
	cost, lead time, quality, flexibility, and agility. The Operations
	Architecture is about improving or redesigning enterprise operations to
	better meet client needs in alignment with the enterprise strategy. The
	main levers used by the Operations Architecture are value stream
	mapping, automation, and employee development and sourcing.
	Organizations should thus use the Operating Model, Business Capability
	Model, and Business Operating Environment when developing their
	respective Operations Architecture.
	
	-   Data/Information and Analytics
	
	Data becomes information when it is interpreted, when it has meaning.
	Data can be interpreted by humans or algorithms. AI transforms data into
	predictions, prescriptions, and automation capabilities. Effective data
	services and maturing data management capabilities for digitalization
	should thus be considered when addressing the Digital Enablement
	element.
	
	-   Technology Architecture
	
	Software and hardware include computer programs, tools, machines,
	wiring, and other physical components of a system. Software and hardware
	have become an increasing part of products and their supporting
	operations in the Digital Enterprise. Software Architecture, Product
	Architecture, and Operations Architecture must be developed in a
	concurrent manner to enable effective Digital Architecture. The
	convergence of Technology Architecture components, Business Operating
	Environment, and Digital Enablement are very important for the
	realization of the Digital Enterprise. Digital Architecture is the
	backbone of the sustainable Digital Enterprise – based on an appropriate
	Digital Products and Services delivery model, Digital Operations, and
	Digital Competencies elements. The organization that seeks to implement
	an appropriate Technology Architecture to enable the implementation f
	appropriate Digital Architecture must ensure that the Technology
	Architecture is informed by the understanding of the envisaged Digital
	Enterprise in response to the respective target customers.
	
	Table 2 depicts the relationship between the DBRM elements and the
	respective Digital Architecture viewpoints.
	
	Table 2: DBRM/Digital Architecture Viewpoints
	
	+-----------------------+-----------------------+-----------------------+
	| DBRM Domain           | DBRM Element          | Digital Architecture  |
	|                       |                       | Viewpoint             |
	+=======================+=======================+=======================+
	| Digital Domain        | Customer Focus        | Experience Design     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Digital Enterprise    | Product Architecture  |
	|                       |                       |                       |
	|                       |                       | Operations            |
	|                       |                       | Architecture          |
	+-----------------------+-----------------------+-----------------------+
	| Strategy Domain       | Strategic Context     | Agile Strategy        |
	|                       |                       |                       |
	|                       |                       | Value Creation        |
	+-----------------------+-----------------------+-----------------------+
	|                       | Business Motivation   |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Business Services and | Product Architecture  |
	|                       | Products              |                       |
	|                       |                       | Operations            |
	|                       |                       | Architecture          |
	+-----------------------+-----------------------+-----------------------+
	| Structural Domain     | Ecosystem and         |                       |
	|                       | Business Model        |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Operating Model       |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Business Capability   |                       |
	|                       | Model                 |                       |
	+-----------------------+-----------------------+-----------------------+
	| Operational Domain    | Business Operating    | Operations            |
	|                       | Environment           | Architecture          |
	|                       |                       |                       |
	|                       |                       | Journey Maps and      |
	|                       |                       | Value Streams         |
	+-----------------------+-----------------------+-----------------------+
	|                       | Digital Enablement    | Software and Hardware |
	|                       |                       | Architecture          |
	|                       |                       | (Technology           |
	|                       |                       | Architecture)         |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.3_Operating_in_the_Context_of_Superior_Architecture "5.3 Operating in the Context of Superior Architecture"
	
	The superior architecture always guides and constrains the development
	of more detailed architecture. As a quick summary, superior architecture
	is the less detailed approved target that overlaps in terms of breadth.
	This quick summary is complicated by the different states the superior
	architecture may actually exist in the EA Landscape.
	
	The superior architecture may not perfectly align to detail, breadth,
	time-horizon, and recency. Further, the superior architecture may be in
	some mixture of current, transition, and target state.
	
	Practitioners must treat the superior architecture as guides and
	constraints to current architecture development. Stakeholders have
	already approved the superior architecture in the EA Landscape; barring
	a material change, the Practitioner accepts prior work as cornerstones
	to build a current workaround.
	
	Where there is a material change, both the current Architecture Project
	and the changes to the superior architecture must be properly approved
	and published through the governance process.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.3_Phase_B_Business_Architecture "5.3 Phase B: Business Architecture"
	
	The security elements of Phase B: Business Architecture comprise
	business-level trust, risk, and controls, independent from specific IT
	or other systems within the specific scope of the architecture
	engagement.
	
	The security-related Business Architecture artifacts are described
	below.
	
snippet togaf_architecture-project-management_5.3_Phase_F_Architecture_Project_Closing "5.3 Phase F: Architecture Project Closing"
	
	Complete the Architecture Development Cycle and Document Lessons Learned
	
	Close Project or Phase (4.6)
	
	This last step of Phase F is related to the PMBOK process closing
	project or phase. The use of the PMBOK approach is recommended.
	
	Glossary
	
	See also Architecture Project Management Concepts (Section 2.3) for
	Architecture Project Management concepts that are key to understanding
	this Guide.
	
	Architecture
	
	The structure of components, their inter-relationships, and the
	principles and guidelines governing their design and evolution over
	time. [Source: the TOGAF Standard; one of two definitions provided]
	
	Enterprise
	
	The highest level (typically) of description of an organization and
	typically covers all missions and functions. An enterprise will often
	span multiple organizations. [Source: the TOGAF Standard]
	
	Project
	
	A temporary endeavor undertaken to create a unique product, service, or
	result. [Source: PMBOK Guide]
	
	Project Management
	
	Application of knowledge, skills, tools, and techniques to project
	activities to meet the project requirements. [Source: PMBOK Guide]
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] The TOGAF^(®) Standard – Architecture Development Method: Phase A:
	Architecture Vision (Establish the Architecture Project): “Each cycle of
	the ADM should normally be handled as a project using the project
	management framework of the enterprise.”
	
	[2] This is a PRINCE2 definition. According to the more general PMBOK
	definition, Project Management is an application of knowledge, skills,
	tools, and techniques to project activities to meet the project
	requirements.
	
	[3] For guidance on architecture levels, refer to the TOGAF^(®) Standard
	– Applying the ADM: Applying the ADM Across the Architecture Landscape.
	
	[4] For guidance on architecture domains, refer to the TOGAF^(®)
	Standard – Introduction and Core Concepts: Core Concepts (What Kind of
	Architecture Does the TOGAF Standard Deal With?).
	
	[5] This statement refers to Enterprise Editions of the TOGAF Standard
	(Versions 8 and above), which became popular and are a de facto standard
	for Enterprise Architecture. The TOGAF Standard, Version 8 was published
	in 2003 (with the latest revision of the TOGAF Standard, Version 9
	published in 2018), PRINCE2 in 1996 (with a major refresh in 2009), and
	PMBOK in 1996 (with a major revision in 2004 which was the 3rd Edition;
	this Guide is based on the 5th Edition published in 2013).
	
	[6] The PRINCE2 Foundation Training Manual, by Frank Turley.
	
	[7] Practice Standard for Project Risk Management, PMI.
	
	[8] The TOGAF^(®) Standard – Introduction and Core Concepts: Definitions
	(Stakeholder).
	
	[9] Managing Successful Projects with PRINCE2, Glossary.
	
	[10] PMBOK Guide, 5th Edition, Glossary.
	
	[11] The two can be, of course, the same person.
	
	[12] See the TOGAF^(®) Standard – ADM Techniques: Stakeholder Management
	(Template Stakeholder Map).
	
	[13] Managing Successful Projects with PRINCE2, Section C.5 (Project
	Manager).
	
	[14] Guide to the PMBOK, Section 1.7 (Role of the Project Manager).
	
	[15] The TOGAF^(®) Series Guide: Architecture Skills Framework.
	
	[16] In this Guide we refer to the Lessons Log as a repository filled
	continuously during the project, as opposed to Lessons Learned or a
	Lessons Report, which are the documents concluding the project and
	containing only the most important information.
	
	[17] The TOGAF^(®) Standard – Architecture Development Method: Phase F:
	Migration Planning (Complete the Architecture Development Cycle and
	Document Lessons Learned) and the TOGAF^(®) Standard – Architecture
	Development Method: Phase H: Architecture Change Management (Drivers for
	Change).
	
	[18] There is multitude of resources on this framework on the Internet,
	covering different applications. However, the clou is the same
	everywhere. We would like to restrain from recommending any particular
	resource.
	
	[19] Since we are discussing Architecture Project Management, the
	governance of the project is two-fold – both architecture governance and
	project governance are applicable.
	
	[20] This term is used in the PMBOK to describe the “Project Manager and
	the group of individuals who act together in performing the work of the
	project to achieve its objectives”. As mentioned earlier, this term
	differs from the Project Management Team used in PRINCE2, because it
	does not include the body providing oversight (herein called the Project
	Owner), as opposed to the Project Management Team, but includes all the
	operational people – something which is not covered in the other method.
	
	[21] See the PRINCE2 Glossary of Terms.
	
	[22] Managing Successful Projects with PRINCE2.
	
	[23] TOGAF^(®) Standard – Architecture Development Method: Phase A:
	Architecture Vision (Define Scope) and the TOGAF^(®) Standard – Applying
	the ADM: Applying the ADM Across the Architecture Landscape.
	
	[24] PMBOK Guide, 5th Edition.
	
	[25] PMBOK Guide, 5th Edition.
	
	[26] PMBOK Guide, 5th Edition.
	
	[27] PMBOK Guide, 5th Edition.
	
	[28] PMBOK Guide, 5th Edition.
	
	[29] PMBOK Guide, 5th Edition.
	
	[30] PMBOK Guide, 5th Edition.
	
	[31] PMBOK Guide, 5th Edition.
	
	[32] The PMBOK uses the word “phase”. In this Guide, we use the word
	“stage” when referring to PRINCE2 “stages” and PMBOK “phases”. We use
	the word “phase” according to its TOGAF definition (the ADM consists of
	phases, which do not necessarily equal Architecture Project stages).
	
	[33] Refer to the TOGAF^(®) Standard – Applying the ADM: Applying
	Iteration to the ADM (Iteration Considerations) for more information on
	applying iteration to the ADM.
	
	[34] Refer to the TOGAF^(®) Standard – Applying the ADM: Applying
	Iteration to the ADM (Approaches to Architecture Development) for more
	information on approaches to architecture development.
	
	[35] PMBOK Guide, 5th Edition, Section 2.4.2.
	
	[36] PRINCE2, Chapter 17.
	
	[37] The TOGAF^(®) Standard – Architecture Development Method: Phase F:
	Migration Planning (Steps).
	
	[38] PMBOK Guide, 5th Edition.
	
	[39] The TOGAF^(®) Standard – Architecture Development Method:
	Preliminary Phase: Approach (Management Frameworks, and Relating the
	Management Frameworks).
	
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5.3_Relationship_to_Architecture_Governance "5.3 Relationship to Architecture Governance"
	
	The Architecture Contract document produced in Phase G of the ADM
	figures prominently in the area of Architecture Governance, as explained
	in 3. Architecture Governance .
	
	In the context of Architecture Governance, the Architecture Contract is
	often used as a means of driving architecture change.
	
	In order to ensure that the Architecture Contract is effective and
	efficient, the following aspects of the governance framework may need to
	be introduced into Phase G:
	
	-   Simple processes
	-   People-centered authority
	-   Strong communication
	-   Timely responses and an effective escalation process
	-   Supporting organizational structures
	-   Status tracking of architecture implementation
	
snippet togaf_digital-technology-adoption_5.3_Step_3_Identify_Factors_Needing_Management_Attention "5.3 Step 3: Identify Factors Needing Management Attention"
	
	The next step in the process is to analyze the output of the readiness
	assessment. There might be certain factors that are not as per
	expectations and the organization is falling short in parameters. It is
	paramount to understand the implications of missing factors. Hence, the
	following matrix (see Figure 5) could be leveraged to understand the
	implications of the missing factors.
	
	The “Primary Consequences”, as depicted in Figure 5, capture the crux
	and implication of missing factors for the organization.
	
	How to Read the Table – the Consequence of Missing Factors
	
	Each row of the table depicts a possible missing factor (shown in
	white), and the final column captures the primary consequence of the
	missing factor.
	
	For instance, in the fourth row, if the result of the readiness
	assessment shows that the organization is lagging in “Implementation
	Approach”, it means that the consequence could lead to a likelihood of
	missed opportunities due to a trial and error-based approach.
	
	Organizations may have more than one missing factor and, therefore, the
	primary consequence of all the factors needs to be understood
	collectively without any prejudice and bias. Another important point to
	note is that the consequences also generally tend to reinforce each
	other in certain ways; refer to Figure 2.
	
	[]
	
	Figure 5: Consequence of Missing Factors on the Adoption of Digital
	Technology
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.3_What_is_the_Organization_Model_for_EA_Capability "5.3 What is the Organization Model for EA Capability?"
	
	Most enterprises have some functioning EA Capability. The EA Capability
	is either being purposefully evolved or re-booted. In either case, the
	existing EA Capability needs to be assessed against expected purpose and
	objectives.
	
	Questions to ask include:
	
	-   Does the existing EA Capability deliver recommendations before the
	    required type of decision (budget, charter/business case)?
	
	-   Does the existing EA Capability provide support for governing
	    follow-on activity against the decision?
	
	-   Does the existing EA Capability support all the desired decisions
	    and governance support?
	
	    When an EA Capability has previously been IT-centric, it is common
	    to have its support for decision and governance constrained to the
	    IT domain and its involvement in decision-making artificially
	    elevated.
	
	-   The outputs of these questions will directly impact the process
	    alignment, governance framework, and architecture contents – the gap
	    between the existing EA Capability and the desired EA Capability
	    will directly feed the roadmap to evolve the EA Capability into what
	    the enterprise desires
	
	The following tables, derived from the World-Class Enterprise
	Architecture White Paper, provide an indication of the engagement of
	different stakeholders with support for decision-making and governance.
	
	Table 1 and Table 2 should be used diagnostically in conjunction with
	Section 10.1 (What are the Touch-Points with Existing Enterprise
	Processes?). The Leader will need to ensure that the EA Capability is
	properly aligned. The essential questions are:
	
	-   Does the EA Capability support the decision-making needs of key
	    stakeholders?
	-   Does the EA Capability support the governance needs of key
	    stakeholders?
	-   Does the EA Capability engage with the correct enterprise
	    decision-maker and execution processes?
	
	Table 1: EA Capability to Stakeholder Decision-Making Needs
	
	+-------------+-------------+-------------+-------------+-------------+
	| Stakeholder | Relevance   |             |             |             |
	| Group       | of EA       |             |             |             |
	|             | Capability  |             |             |             |
	|             | to the      |             |             |             |
	|             | Stakeholder |             |             |             |
	|             | Group       |             |             |             |
	|             | deci        |             |             |             |
	|             | sion-making |             |             |             |
	|             | for the …   |             |             |             |
	+=============+=============+=============+=============+=============+
	|             | Strategy    | Portfolio   | Project     | Solution    |
	|             | Purpose     | Purpose     | Purpose     | Delivery    |
	|             |             |             |             | Purpose     |
	+-------------+-------------+-------------+-------------+-------------+
	| CEO         | High        | Low         | Low         | Low         |
	+-------------+-------------+-------------+-------------+-------------+
	| Heads of    | High        | Medium      | Low         | Medium      |
	| Change      |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Operational | High        | High        | Low         | Medium      |
	| Executives  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| CIO         | High        | High        | Medium      | High        |
	+-------------+-------------+-------------+-------------+-------------+
	| Project     | Low         | Medium      | High        | High        |
	| Governance  |             |             |             |             |
	| Bodies      |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Program &   | Low         | Medium      | High        | High        |
	| Project     |             |             |             |             |
	| Management  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Commercial  | Low         | Medium      | Low         | High        |
	| & Financial |             |             |             |             |
	| Executives  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Subject     | Low         | Low         | Medium      | Low         |
	| Matter      |             |             |             |             |
	| Experts &   |             |             |             |             |
	| Project     |             |             |             |             |
	| Teams       |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Chief Risk  | High        | Medium      | Medium      | Low         |
	| Officer     |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Chief       | High        | Medium      | Medium      | Low         |
	| Compliance  |             |             |             |             |
	| Officer     |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	
	Table 2: EA Capability to Stakeholder Governance Needs
	
	+-------------+-------------+-------------+-------------+-------------+
	| Stakeholder | Relevance   |             |             |             |
	| Group       | of EA       |             |             |             |
	|             | Capability  |             |             |             |
	|             | to the      |             |             |             |
	|             | Governance  |             |             |             |
	|             | activity    |             |             |             |
	|             | for the …   |             |             |             |
	+=============+=============+=============+=============+=============+
	|             | Strategy    | Portfolio   | Project     | Solution    |
	|             | Purpose     | Purpose     | Purpose     | Delivery    |
	|             |             |             |             | Purpose     |
	+-------------+-------------+-------------+-------------+-------------+
	| CEO         | High        | Medium      | Low         | Medium      |
	+-------------+-------------+-------------+-------------+-------------+
	| Heads of    | High        | Medium      | Medium      | Medium      |
	| Change      |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Operational | High        | High        | Medium      | Medium      |
	| Executives  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| CIO         | High        | High        | High        | High        |
	+-------------+-------------+-------------+-------------+-------------+
	| Project     | Low         | Low         | High        | High        |
	| Governance  |             |             |             |             |
	| Bodies      |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Program &   | Low         | High        | High        | High        |
	| Project     |             |             |             |             |
	| Management  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Commercial  | Low         | Low         | High        | High        |
	| & Financial |             |             |             |             |
	| Executives  |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Subject     | Low         | Low         | Medium      | Low         |
	| Matter      |             |             |             |             |
	| Experts &   |             |             |             |             |
	| Project     |             |             |             |             |
	| Teams       |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Chief Risk  | High        | Medium      | Medium      | Medium      |
	| Officer     |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Chief       | High        | Medium      | Medium      | Medium      |
	| Compliance  |             |             |             |             |
	| Officer     |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	
	As a rule, stakeholders will require different support for
	decision-making than for governance activity. An EA Capability that is
	not engaged in architecture to support strategy decision-making, but is
	engaged at the portfolio level, may provide support for governance
	activity against the strategy level. This Guide turns to the importance
	of alignment of the EA Capability team, given the expectations of
	outcomes at strategy, portfolio, project, or third-party engagement
	levels.
	
snippet togaf_guides_index_5.4.1_Automation_of_Enterprise_Architecture "5.4.1. Automation of Enterprise Architecture"
	
	The implementation of TOGAF architecture artifacts can be accelerated
	with the use of Enterprise Architecture tools. These tools can collect
	business operational data in real-time and build/enhance architecture
	models. Using Artificial Intelligence (AI) algorithms, they can optimize
	the models. The tools also enable ideation and collaboration between the
	users by showing the impact of adopting various digital technologies.
	Most importantly, these tools enable the Enterprise Architecture to
	quantify and measure transformation changes to the architecture.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.4.1_Revivalist_and_Bottom-Up_EA_Capability "5.4.1 Revivalist and Bottom-Up EA Capability"
	
	It is easy to get caught in recurrent cycles of trial and error which
	ultimately repeat themselves when attempting to re-boot an EA
	Capability. In a re-boot or bottom-up scenario for EA Capability, it may
	often seem that the Leader is given the luxury to obtain answers to the
	questions the sponsors are identifying, albeit without budgetary
	support. Sometimes a change Leader gives the explicit sponsorship to
	make the enterprise a better place.
	
	With bottom-up approaches, the challenge is to identify and deliver
	value to key decision-makers who have a passion to change the
	organization. If this is not accomplished from the outset, it is better
	to wait for decision-maker interest to align in the future. Attempting
	to deliver value before buy-in, in a bottom-up or self-initiation,
	though prevalent models, has wrought many challenges, as the Leader must
	act upon interpretation and assumption. When what is delivered is not
	valued by the potential sponsor, not only has the EA Capability team
	failed again, the team has wasted valuable resource. At a minimum, it is
	strongly recommended to understand the enterprise context and develop a
	value proposition to those in the enterprise who will sponsor a reviving
	EA Capability. It is strongly recommended to get proper buy-in,
	including financial allocation and resource commitments, before
	attempting to pursue a bottom-up approach to establish the EA practice.
	The Leader has to dig deeper for the reasons that prompted a need to
	re-initiate the effort. Consider the questions and answers about
	enterprise needs very carefully. Most of all, assume that the goal is to
	make the enterprise a better place.
	
	The following are themes that can be used to deliver value and make the
	charter clear:
	
	-   Theme of “foundations for future scale”: creating an implementable
	    effort – like integrating disparate systems or enabling flexibility
	    to update systems and applications independent of each other with a
	    well-defined investment and timeline
	
	-   Theme of “function clarity”: EA is about enablement and realization
	    of alignment of business and technology functions; EA is not about
	    monopolizing any one function – it is about collaborative success
	
	    Create a charter and communicate terms of collaboration and
	    collective success.
	
	-   Theme of “risk reduction”: the very act of involvement in an
	    economic activity is risky
	
	    The probability of occurrence and impact is what constitutes
	    outcome. Building a story from a recent “incident” that could have
	    been avoided with the EA Capability, articulating a pattern
	    providing cost avoidance, and minimizing impact on future
	    occurrence.
	
	It is imperative that the Leader validates the enterprise context and
	objectives of the EA Capability periodically. Every enterprise exists in
	a dynamic environment. It is important to check the purpose for each
	planning cycle that the EA Capability team supports. It is essential
	that the Leader checks the objectives and context once in the planning
	cycle and again in the middle of the cycle. Best practice EA is a
	continuous, adaptive, incremental, and iterative process.
	
	Carve out an EA Capability that can succeed and thrive in the
	enterprise. Use the knowledge from understanding the context for the
	enterprise. If failure happens in the first attempt to make the business
	case, consider rebuilding the case after reading through Section 11.2
	(Linking the EA Value Map to the Enterprise Value Map) and Chapter 12
	(Establishing and Evolving the EA Capability).
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.4.1_Security_Services_Catalog "5.4.1 Security Services Catalog"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Note: The TOGAF Standard has a Business Services Catalog that is a list
	of the enterprise's business services and their functional and
	non-functional requirements. It is used to analyze the functional and
	non-functional requirements. The Security Services Catalog stores and
	provides more kinds of information about each service, so this needs to
	be introduced.
	
	The Security Services Catalog is a list of services that provide
	security-specific functionality as part of the overall architecture.
	Unlike control frameworks that contain requirements, the Security
	Services Catalog describes security building blocks that actually
	realize the security goals. It provides a common terminology and
	reference framework for the domain of security management. The Security
	Services Catalog contains conceptual definitions of the services, as
	well as operational information about implementation and usage.
	
	Examples of security services are:
	
	-   Identity & Access Management
	-   Continuity Management
	-   Security Intelligence
	-   Digital Forensics
	-   Security Analytics
	-   Audit, Network Monitoring
	-   Compliance Management
	-   Training & Awareness Programs, etc.
	
	This is the area of security that most security practitioners will
	recognize. One of the main advantages of the Security Services Catalog
	is that it is a common terminology and reference framework for the
	domain of security management allowing better cooperation between the
	parties concerned.
	
snippet togaf_guides_index_5.4.2_Minimalistic_Artifacts "5.4.2. Minimalistic Artifacts"
	
	Artifacts and their templates should contain the minimum content that is
	consistent with their purpose, and no more. The progressive, iterative
	development of architecture described in previous sections of this
	document can be realized by producing the artifacts using a series of
	templates of increasing detail and/or scope. For example, a first
	artifact from Phase B, Business Architecture, might contain just the
	Baseline Architecture, or for large projects, this could be further
	divided into an overview artifact followed by a series of artifacts with
	more detailed descriptions.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.4.2_Security_Classification "5.4.2 Security Classification"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Security classification is a label attached to an asset, according to a
	classification scheme. In most cases, this scheme is defined and
	described in the corporate information security policy and the
	classification is based on one or more characteristics of the asset.
	
	Keep in mind that the asset can be any relevant component of the
	architecture. Assets include business service, a capability,
	information, an information system service, physical data component, or
	physical technology component. The security classification determines
	the security requirements that apply to the asset; for example,
	regarding access control, confidentiality, or availability. It is a
	means to implement the security policy.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.4.3_Data_Quality "5.4.3 Data Quality"
	
	Note: From an Enterprise Security Architecture perspective, data
	quality[3] requirements are an integral part of the security
	requirements and so are the related risk assessment and selection of
	measures.
	
	Data quality is a key factor in operational risk management. Some of the
	key attributes that contribute to data quality are accuracy, relevance,
	timeliness, currency, completeness, consistency, availability, and
	accessibility. Safeguarding data quality starts with a clear overview on
	the datasets in question. For each dataset, ownership and responsibility
	for the quality of data needs to be assigned. The owner authorizes
	people or processes that are trusted for a certain activity on the data
	under certain circumstances. It might also be necessary to change
	information systems in order to handle the data properly. Finally, each
	of the key attributes should be measured based on log and performance
	data.
	
snippet togaf_guides_index_5.4_Architecture_Artifacts "5.4. Architecture Artifacts"
	
	The TOGAF Standard – Architecture Content describes the TOGAF Content
	Framework. In general, the artifacts and their relationships apply
	equally to Agile delivery as to other delivery lifecycle approaches.
	However, the tooling and format may need to be adapted for Agile
	delivery.
	
snippet togaf_guides_agile-sprints_5.4_Architecture_Governance_and_Sprints "5.4 Architecture Governance and Sprints"
	
	In an Agile world we need to look at Enterprise Architecture governance
	in a different way.
	
	Governance is a very important part of Enterprise Architecture to ensure
	that what is delivered is what was architected based on the desired
	outcomes for the level of Enterprise Architecture, such as long-term
	vision, goals, and strategies.
	
	The business needs, goals, and strategies are still important parts in
	the process of creating business value, and are usually directional, and
	possibly longer-term, but other areas in the Enterprise Architecture can
	be quickly challenged, refuted, or proven by creating solutions based on
	prioritized Enterprise Architecture decisions defined in sprints. The
	Enterprise Architecture governance process is moved into the sprint
	process and both Enterprise Architecture and solutions can be adopted
	and adjusted based on experience and learning. Governance then becomes a
	way of collaborating, delegating, and governing each other through
	accountability for the outcomes and delivery.
	
	According to the Management 3.0 model,[9] there are seven levels of
	delegation: tell, sell, consult, agree, advise, inquire, and delegate.
	This model is symmetrical and works in both directions. Tell is opposite
	to delegate, and consult is the reverse of advise. These seven levels of
	delegation can be used to define how decision-making is delegated
	between Agile teams (business development, Enterprise Architecture, and
	solution development).
	
	One other perspective of governance is who is responsible for making
	decisions. Jeff Bezos of Amazon[10] said that there are two types of
	decision-making:
	
	1.  Where the decisions can be rolled back they are delegated to
	    individual teams
	
	2.  Where the decisions cannot be rolled back they need to be made by a
	    larger group of stakeholders including all Agile teams
	
	The distinction made by Jeff Bezos may be helpful when establishing the
	Enterprise Architecture capability and Enterprise Architecture
	governance model to obtain proper balance. The Management 3.0 model may
	be useful while considering different levels of delegation for different
	types of decisions.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5.4_How_is_Success_Going_to_be_Measured "5.4 How is Success Going to be Measured?"
	
	The enterprise’s objectives directly translate into metrics for the EA
	Capability and are directly derived from the purpose of the EA
	Capability. Some metrics will be operational health while others will be
	derived from the enterprise’s scorecard or strategy.
	
	Recognize that not all EA Capability objectives are tangible and readily
	measurable. Consider an insurance company that says: “we need an
	architecture to make all of our customers be our promoters”. This
	statement applies to the entire enterprise. Though it appears
	measurable, dimensions like type of customer (enterprise versus single
	human), neutrality, or cultural differences should be accounted for to
	arrive at specific measures. Likewise, it is possible that folks in the
	team providing the EA Capability, including the Leader, have some ideas
	that could appear relevant, immediately actionable, and to be common
	sense. Including such ideas in the list of objectives without validation
	is one of several death traps for EA Capability. Be prepared to embrace
	such objectives and classify them accordingly, before converting them
	into measures.
	
	Some of the objectives may have to be met by other functions in the
	enterprise. Given the objectives and purpose, care must be taken to
	align processes, the organizational model, and governance. One of the
	many death traps for an EA Capability is confusing “supporting
	decision-making” with “decision-making”. Consider an EA Capability that
	supports strategy: a team member lobbying to defund an effort considered
	risky has confused sound advice with ownership of the decision. This
	conflict is most common in IT-centric EA Capability and plays out in
	efforts to achieve elevated decision-making power without commensurate
	outcome responsibility. Confusing supporting a decision with empowerment
	and governance is simply wishful thinking.
	
	Define success measures that reflect the level of empowerment, quality
	of outcome delivered, and impact expectations of the sponsor. For
	example, Gartner signals that EA Capability should present leadership
	with signature-ready recommendations. What kind of measure should a
	Leader attach to such an execution model?
	
	Some questions that yield a wealth of insights to define the measures
	are:
	
	-   What would the enterprise do if the EA Capability did not exist?
	
	-   How will the enterprise track benefits realized at different levels
	    of decision-making?
	
	-   Executive management is a directive function, and EA Capability is
	    an advisory function. How do we measure the value of good advice?
	
	-   What would happen when EA Capabilities have a limited ability to
	    deliver?
	
	    In general, increased risk and lower levels of value created.
	    Measures may be instability within the business, lower profits, poor
	    investment success track record.
	
	-   How will benefits from mature EA Capabilities be realized at
	    different levels of decision-making?
	
	    How many recommendations have been accepted by decision authorities?
	    What is the track record of risk identification and mitigation? Has
	    the level of governance been commensurate with the business benefits
	    to be realized?
	
	Further, is the EA Capability being set up in response to a problem? The
	success measures will vary with the nature of the problem being solved.
	Common examples of problems to be solved include:
	
	-   Struggling expansion via Mergers and Acquisitions (M&A) and
	    divestitures
	-   Stalled strategic growth in a specific market segment
	-   Impact of disruption
	-   Restructuring or retooling the enterprise
	-   Investor confidence problems from operational cost or unrealized R&D
	    spend
	-   Inability to decide through information, communication, and
	    technology complexity
	-   Inability to decide the balance of future gains against compromising
	    business-as-usual
	-   Fear of recurrence of recent upheavals in supply chain, security, or
	    IT project
	-   Perceived disruptive changes in operational practice (automation,
	    cloud, outsourcing)
	
snippet togaf_guides_microservices-architecture_5.4_Initial_Architecture_Repository_and_the_MSA_Reference_Architecture "5.4 Initial Architecture Repository and the MSA Reference Architecture"
	
	The enterprise’s Architecture Repository contains a collection of
	models, patterns, architecture descriptions, and other artifacts that
	are available for the development of its architectures. They may result
	from previous architecture work in the enterprise or from work in other
	enterprises, or in industry bodies. The TOGAF Preliminary Phase includes
	the establishment of an Architecture Repository with an initial
	collection of material.
	
	The Architecture Repository may contain numerous artifacts that are
	outside the scope of the MSA. For this layer, the primary artifacts of
	interest to the team are those which identify microservices that have
	already been developed, the provenance of those services, and how to
	interact with them. This is addressed further in Chapter 12. Although
	service repositories have largely been proven as ineffective in the
	past, solutions exist to provide for this sort of microservice discovery
	and prevent duplication of effort. Microservices are reachable only
	through a published API, which nowadays is typically managed through an
	API management framework, which encompasses both service meshes and API
	gateways. This is evolving with work such as the OpenAPI Specifications
	(OAS).[1]
	
	An MSA Reference Architecture is in development. It will be focused, as
	has been identified in other MSA White Papers, on how an MSA is designed
	to meet the requirements of a specific business need, as contrasted with
	the focus on enterprise integration of the analogous SOA Reference
	Architecture (refer to ISO/IEC 18384 – see Referenced Documents). (As
	noted above, an MSA is not a complete Enterprise Architecture; it is an
	architecture only concerned with the layers at which the (micro)
	services of the architecture reside.) They are described as follows:
	
	-   Operational Systems Layer:
	
	—  Programs and data of the operational systems of the enterprise
	
	—  The new and existing infrastructure needed to support the SOA
	solution
	
	-   Microservice Components Layer:
	
	—  Software components, each of which provides the implementation or
	“realization” for a microservice, or operation on a microservice, and
	binds the microservice contract to the implementation of the
	microservice in the operational systems layer
	
	-   Microservices Layer:
	
	—  Microservices, with their descriptions, contracts, and policies, and
	the containers that contain the microservice components
	
	—  Microservices and programs that support the application of the rules
	and the operation of the procedures
	
	-   Business Processes Layer:
	
	—  Business processes, and compositions in which business processes are
	composed of other business processes and services
	
	In an MSA, we only worry about the relationship between a particular ABF
	and its implementation by the microservices. The requirements for these
	business processes will tend to be also much more distributed for an MSA
	implementation, since we are likely dealing with a federated
	organization as well as a federated architecture. Each part of that
	federated organization will be to a large extent autonomously
	responsible for its own requirements.
	
	-   Consumer Interfaces Layer:
	
	—  The programs by which the users interface to the microservices
	
	-   Integration Layer:
	
	—  Integration of and communication between other building blocks,
	including messaging, message transformation, complex event processing,
	microservice composition, and service discovery
	
	Service composition can only take place at the application layer, not
	within the MSA.
	
	-   Quality of Service Layer:
	
	—  Monitoring and management of the quality of service of the
	architected system, including its performance, reliability,
	availability, scalability, security, and manageability
	
	-   Information Layer:
	
	—  Management, analysis, interpretation, and transformation of data
	
	-   Governance Layer:
	
	—  Governance rules and procedures
	
	—  Microservices and programs that support the application of the rules
	and the operation of the procedures
	
	[]
	
	Figure 4: SOA Reference Architecture
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.4_Managing_Multiple_States_Candidate_Current_Transition_and_Target "5.4 Managing Multiple States (Candidate, Current, Transition, and Target)"
	
	The Practitioner must track transition states across two
	characteristics: the first being time, and the second being a
	conformance test. Theoretically, it might be preferable to use
	transitions to track the value resting places and changes in
	conformance. Good practice is to architect to value resting states; a
	state where the Enterprise can receive value if all change activity is
	suspended. However, the pressure of the budget cycle forces us to use
	time as a pragmatic transition marker. Tracking to change in conformance
	facilitates the Implementation Project and operational change
	governance. To the extent possible, minimize transition states.
	
	When considering transition states, the Practitioner needs to keep in
	mind the distinction between an Architecture Requirements Specification
	and an implemented system. Using the EA Repository as a CMDB confuses
	implementation record keeping and architecture. Practitioners have to
	keep in mind that many implementations or operational changes are not
	architecturally significant. See Chapter 15 for a discussion of the
	different roles involved in developing and using architecture.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.4_Phase_C_Information_Systems_Architectures "5.4 Phase C: Information Systems Architectures"
	
	The security elements of Phase C: Information Systems Architectures
	comprise functional security services and their security classification.
	
	The artifacts are described in more detail below.
	
snippet togaf_architecture-skills-framework_5.4_Program_or_Project_Management_Skills "5.4 Program or Project Management Skills"
	
	[]
	
snippet togaf_digital-technology-adoption_5.4_Step_4_Address_Shortcomings_and_Initiate_Digital_Technology_Adoption "5.4 Step 4: Address Shortcomings and Initiate Digital Technology Adoption"
	
	This step in the journey is to prepare and address shortcomings (plug
	the gaps) based on the primary consequences identified in the previous
	step.
	
	As shown in Figure 6, there are three categories of organizations based
	on the assessment:
	
	-   Type 1: Enterprises that fulfill foundational factors only
	-   Type 2: Those that fulfill foundational and impact factors
	-   Type 3: Those that fulfill foundational, impact, and sustaining
	    factors
	
	If the organization does not meet the requirements of the foundational
	factors, it is futile to evaluate for impact and sustaining factors.
	Hence, it is paramount that enterprises adopt a progressive (step-wise)
	and Agile approach to mitigate the shortcomings. For this, the factor
	progression could be leveraged to initiate digital technology adoption.
	
	[]
	
	Figure 6: Factor Progression
	
	If the enterprise is evaluated to be at Type 3; i.e., there is
	sufficient readiness across all three levels of factors, the readiness
	of the enterprise is more conducive to start the digital technology
	adoption than an enterprise evaluated to be at Type 2 or Type 1.
	
	The adoption approach (Step 3) and factor progression (Step 4) are not
	mutually-exclusive. An organization can choose the avant-garde approach
	and then, for the selected LOB, the factor progression can be leveraged.
	
	In this step, during the adoption of digital technology, the ADM cycle
	could be leveraged considering the right adoption approach (Step 1),
	DTRA conducted across factors (Step 2), and strategy to mitigate the
	consequences of missing factor(s) (Step 3). The as-is state and target
	state is to be analyzed corresponding to the factors marked in various
	phases of the ADM cycle in the next chapter.
	
	Note: It is recommended to follow the progressive and Agile path; i.e.,
	foundational followed by impact, followed by sustaining factors.
	However, for practical reasons, the adoption might be a mixed approach
	and it would depend on the contextual understanding of the enterprise.
	In such a case, Figure 5 could be used for informed decision-making.
	
snippet togaf_guides_agile-sprints_5.5_Architecture_Demo_Retrospectives_and_Sprint_Planning "5.5 Architecture Demo, Retrospectives, and Sprint Planning"
	
	During sprint planning, the Enterprise Architecture can support the
	clarification of desired outcomes, the definition of metrics, and
	functional and non-functional requirements addressed in order to correct
	and iterate back. It is important for the architects to collaborate
	closely with the business development and solution development teams and
	support them during each sprint.
	
	 
	
	Appendix A: Acronyms and Abbreviations
	
	ABB Architecture Building Block
	
	ADD Architecture Definition Document
	
	ADM Architecture Development Method
	
	ART Agile Release Train
	
	CALMS Culture, Automation Lean, Measurement, and Sharing
	
	CD Continuous Deployment
	
	CI Continuous Integration
	
	COTS Commercial Off-The-Shelf
	
	DORP Demo, Outcome, Retrospective, and Planning
	
	EDUF Enough Design Upfront
	
	IMS Implementation and Migration Strategy
	
	MSA Microservices Architecture
	
	MVA Minimum Viable Architecture
	
	MVBD Minimum Viable Business Development
	
	MVP Minimum Viable Product
	
	PoC Proof-of-Concept
	
	SBB Solution Building Block
	
	SOA Service-Oriented Architecture
	
	TDD Test-Driven Development
	
	VUCA Volatility, Uncertainty, Complexity, Ambiguity
	
	XML eXtensible Markup Language
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] Refer to Integrating Systems Thinking and Design Thinking, John
	Pourdehnad et al (see Referenced Documents).
	
	[2] Refer to https://en.wikipedia.org/wiki/Timeboxing.
	
	[3] Refer to https://en.wikipedia.org/wiki/Continuous_deployment.
	
	[4] Refer to https://en.wikipedia.org/wiki/Continuous_integration.
	
	[5] Refer to the TOGAF^(®) Series Guide: Using the TOGAF^(®) Framework
	to Define and Govern Service-Oriented Architectures (see Referenced
	Documents).
	
	[6] Refer to the TOGAF Standard – Applying the ADM (Architecture
	Partitioning), and the TOGAF^(®) Series Guide: Using the TOGAF^(®)
	Framework to Define and Govern Service-Oriented Architectures (see
	Referenced Documents).
	
	[7] Refer to The Open Group SOA Work Group White Paper: Benefits of
	DevOps Methodology for Microservices Solutions (see Referenced
	Documents).
	
	[8] Refer to the TOGAF Standard – Applying the ADM (Applying Iteration
	to the ADM) (see Referenced Documents).
	
	[9] Refer to Delegation Poker & Delegation Board, Management 3.0 (see
	Referenced Documents).
	
	[10] Refer to Two Types of Decisions, Jeff Bezos (see Referenced
	Documents).
	
snippet togaf_architecture-skills-framework_5.5_IT_General_Knowledge_Skills "5.5 IT General Knowledge Skills"
	
	[]
	
snippet togaf_guides_microservices-architecture_5.5_Partitions_and_Distribution_of_Responsibility_Establishing_the_Architecture_Team "5.5 Partitions and Distribution of Responsibility: Establishing the Architecture “Team”"
	
	The TOGAF framework establishes the architecture team and organization –
	team structure, roles, responsibilities, etc. – in the Preliminary Phase
	to support a desired architecture capability. With a distributed
	architecture such as MSA it is important for the organization to allow
	partitioning of the architectural elements among a variety of
	development teams. The federated nature of an MSA solution should be
	reflected in the federated nature of the organization.
	
	Different teams will work on different elements of architecture at the
	same time. Partitions allow for specific groups of architects to own and
	develop specific elements of the architecture (see partitions and
	scoping in Phase A). It is suggested that the team start with a focused
	initiative before implementing on a wide scale.
	
	A successful architectural team organization will have several key
	attributes:
	
	-   A clear definition of each team’s mission: why it exists, its scope
	    of responsibility, and what the organization and the architecture
	    practice should expect from the team
	-   Clear goals for the team including measurements and Key Performance
	    Indicators (KPIs); it is important to ensure that the measures and
	    KPIs of the team do not drive inappropriate selection of
	    technologies and architectural choices
	-   The teams must always remain cognizant of the overall constraints
	    and responsibilities laid down by the Enterprise Architecture team
	-   Interchange and dissemination of skills, experience, and
	    capabilities across teams to the rest of the architecture practice
	    is to be strongly encouraged
	-   Identify how members of the team and other architecture
	    practitioners will be rewarded for success
	-   At the start, perform a skills assessment across the organization to
	    determine the distribution of necessary skills to create fully
	    functional teams
	-   The necessary skills and experience must be carefully identified,
	    and where they are not present, acquired
	
	A fundamental skill for leading practitioners within the organization is
	the ability to mentor other practitioners transferring knowledge,
	skills, and experience.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.5_Phase_D_Technology_Architecture "5.5 Phase D: Technology Architecture"
	
	In most cases, the development of specific Technology Architecture
	security artifacts is not necessary, as long as it incorporates the
	relevant security controls and mechanisms defined in earlier phases. The
	Security Architect must ensure that the required controls are included
	in the Technology Architecture and verify whether the controls are used
	in an effective and efficient way. This includes the technology for the
	provision and regulation of system resources, such as electric power,
	processing capacity, network bandwidth, and memory.
	
	A security stakeholder may request the creation of a specific Technology
	Architecture security view or deliverable that describes all
	security-related technology components and how they inter-relate. This
	view should explain which business risks are mitigated by what
	technology, providing justification for the technology.
	
snippet togaf_guides_index_5.5_TOGAF_ADM_Phases_and_Artifacts_Supporting_Product_Architecture "5.5. TOGAF ADM Phases and Artifacts Supporting Product Architecture"
	
	-   Preliminary Phase
	
	    -   Define the Enterprise Architecture organization capabilities and
	        maturity model to support an optimized Business, Data,
	        Application, and Technology Architecture, especially if they
	        respond to disruptive trends from the market; for example, new
	        value propositions to evolve the organization into digital
	        product offerings and the customer journey mapping for their
	        delivery
	
	    -   Define the Enterprise Architecture principles and governance
	        framework to support the Architecture Vision
	
	    -   Define the changes needed at the organizational level to adapt
	        the organization capabilities and structure to implement the
	        business value and to support development and deployment in an
	        efficient and effective way; for example, adapting to fulfill
	        Agile methodologies for application/system/portfolio delivery
	        when and if necessary
	
	        A new model for organizational structure might be needed which
	        implies new roles, skills, and capabilities and a new
	        organizational model cross-cutting organizational units and
	        aimed at having autonomous self-empowered Agile teams. This will
	        allow organizations to scale their Agile development.
	
	    -   Artifacts needed:
	
	        -   Organization map; refer to the TOGAF^(®) Series Guide:
	            Organization Mapping [10]
	
	        -   How to set an Enterprise Architecture capability; refer to
	            the TOGAF^(®) Series Guide: The TOGAF^(®) Leader’s Guide to
	            Establishing and Evolving an EA Capability [11]
	
	    -   Organizational principles – review and adapt if needed
	
	-   Phase A: Architecture Vision
	
	    -   Define the business value proposition and strategy in alignment
	        with the organization strategy and mission
	
	    -   If the whole company strategy needs to be redefined to fulfill
	        the new trends this needs to be addressed in the Architecture
	        Vision phase
	
	    -   Artifacts needed:
	
	        -   Strategy and motivation models, depicting product strategy
	            to support Capability-level decision-making
	
	    -   Additional support:
	
	        -   How to adapt the ADM to support strategy architecture and
	            decision taking; refer to the TOGAF^(®) Series Guide: A
	            Practitioners’ Approach to Developing Enterprise
	            Architecture Following the TOGAF^(®) ADM [12]
	
	        -   Value stream and business capability modeling, business
	            model guides for high-level model of the product; refer to
	            the TOGAF^(®) Series Guide Set: Business Architecture [7]
	
	    -   At this stage it is very important to vision the Enterprise
	        Architecture as modular so its delivery and support will be more
	        efficient and easier to change
	
	-   Phase B: Business Architecture
	
	    -   Applied to define the key features and benefits aimed to solve
	        the problem space and build the solution space
	
	    -   Requirements definition and translation into functional and
	        non-functional requirements – and define the product target
	        market, features, and value proposition for each
	
	    -   Design the value streams and business capabilities needed to
	        deliver the product
	
	    -   Artifacts needed:
	
	        -   Value stream, business capabilities, connected with the
	            organizational map, information map to identify key
	            information needed – business models like BMC and also the
	            business operational model
	
	    -   Model the customer journey for the different audiences; refer to
	        the TOGAF^(®) Series Guide Set: Business Architecture [7]
	
	-   Phase C: Information Systems Architectures
	
	    -   Information needed to deliver the product features and to handle
	        relevant customer segments – information that will be needed to
	        build and support the product in its different delivery stages
	        and also to market and sell the product to the target audiences
	        and customers: customer profiling
	
	    -   Refine the customer journey map with the information needed and
	        the data analytics needed
	
	-   Phase C: Application Architecture
	
	    -   Map the product functional features with the capabilities needed
	        for the product to be delivered into the market
	
	    -   Artifacts needed:
	
	        -   Mapping the functions with application components and
	            services
	
	    -   The key to applying architectural patterns based in
	        micro-services and loosely-coupled components, making them
	        easier to develop, deliver, and maintain and with clear
	        integration points, is to pursue effective integration and
	        delivery
	
	-   Phase D: Technology Architecture
	
	    -   Technology or technical platforms to support product
	        development, delivery, and maintenance – the approach depends on
	        the kind of product: if it is an application or software system
	        then it will be the technological platforms supporting the
	        application components and services; if the approach is a
	        cloud-based service then the approach should be adapted to
	        fulfill that
	
	------------------------------------------------------------------------
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5.5_Where_are_ABBs "5.5 Where are ABBs?"
	
	The TOGAF concept of the Architecture Building Block (ABB) is the
	effective Practitioner’s friend. A good ABB facilitates time-to-market
	and completeness. As with most TOGAF definitions, knowing that an ABB is
	“a constituent of the architecture model that describes a single aspect
	of the overall model” doesn’t immediately tell us what they look like in
	an EA Repository.
	
	An ABB will look like whatever it must be to describe part of the
	overall architecture – efforts to carefully define the contents and
	structure of this concept will flounder on the variability and scope of
	what can be described within an EA Landscape. A building block is part
	of a greater whole that accelerates the effective description of the
	candidate architecture.
	
	In some cases, it will be a re-usable description of part of the
	architecture; using it again enables the Practitioner to simply adopt a
	known successful way to address a problem. In this case, the ABB is
	complete in all regards, providing a complete description, and
	constraints that address repeated requirements. In other cases, it will
	not have the constraints and specifications predefined. In this latter
	case, the components of the description will be complete, but the detail
	will vary depending upon the requirements.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.6.1_Risk_Mitigation_Plan "5.6.1 Risk Mitigation Plan"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ERM.
	
	Note: In the TOGAF Standard, 10^(th) Edition risk mitigation is done for
	transition risks, but it is not explained how this should be created or
	what possible risk mitigation strategies there are, so this document
	provides additional guidance on this issue.
	
	The Risk Mitigation Plan contains activities to mitigate risks. It is
	the implementation of the risk mitigation strategy, which could aim to
	increase the level of control, transfer the risk to another party, avoid
	the risk by changing the business activity, delay the risk, compensate
	for the risk, etc.
	
	The broader sense of risk is addressed by the ERM process in this phase.
	The scope includes the latest information security risks as identified
	during the risk assessments that are done earlier in the ADM (in Phase
	B). This is where the risks get “solutioned” or “treated”. The Risk
	Mitigation Plan should also consider risks that appear as a result of
	the new architecture.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.6_Phase_E_Opportunities_and_Solutions "5.6 Phase E: Opportunities and Solutions"
	
	In defining the roadmap, where the sequence of gaps to be addressed is
	determined, it is imperative that security and risk are evaluated.
	Ensure the stakeholders’ security and risk concerns are addressed in the
	analysis. Confirm that risk owners are consulted. The value expected to
	be delivered by work packages should include measures related to
	security and risk value to ensure the roadmap addresses the complete set
	of business goals and drivers.
	
	The security building blocks defined in the previous phases become SBBs
	in this phase so that more specific implementation-oriented requirements
	and specifications are defined. A whole solution design might be needed
	at this stage.
	
	The Security Services Catalog of the Baseline Security Architecture
	probably contains existing security services or security building blocks
	that meet the requirements. For example, if the requirement exists for
	application access control, an existing central authentication service
	might be used to fill that in. The efficacy of existing security
	services and controls earmarked for re-use must be verified to ensure
	that the end-state contains security measures, which work and integrate
	well.
	
snippet togaf_guides_microservices-architecture_5.6_Summary "5.6 Summary"
	
	In summary, when developing the Preliminary Phase, there are a number of
	methods, tools, and reference materials that have been developed by The
	Open Group to help the Enterprise Architecture team develop their MSA.
	These include:
	
	-   Principles: microservice-independence
	-   Determining organization readiness for MSA: OSIMM, independent team
	    organization, Agile/DevOps methodologies
	-   Governance: The Open Group MSA Governance Reference Model
	-   Adapting reference architectures to the organization: the MSA
	    Reference Architecture (in progress)
	
snippet togaf_architecture-skills-framework_5.6_Technical_IT_Skills "5.6 Technical IT Skills"
	
	[]
	
snippet togaf_architecture-skills-framework_5.7_Legal_Environment "5.7 Legal Environment"
	
	[]
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.7_Phase_F_Migration_Planning "5.7 Phase F: Migration Planning"
	
	Migration is itself a business process that needs to be secured. The
	migration strategy should include a risk assessment and a Risk
	Mitigation Plan. In Phase F, the Risk Mitigation Plan is limited to the
	transition. These concepts have already been mentioned in earlier phases
	of the ADM. Migration of live environments should always include
	regression planning so that there is a way to reverse out a failed
	migration. This is an essential part of risk management.
	
	In addition, migration planning should include a security impact
	analysis to understand any security impacts of the target state of the
	change.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.8.1_Security_Audit "5.8.1 Security Audit"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Security audit includes security reviews of implemented processes,
	technical designs, developed code, and configurations against policies
	and requirements. It also includes security testing, comprising
	functional security testing, performance testing, and penetration
	testing.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.8.2_Security_Training_and_Awareness "5.8.2 Security Training and Awareness"
	
	Location in the Architecture Framework: Enterprise Security
	Architecture: ISM.
	
	Security training and awareness means that sufficient training is
	provided to ensure correct deployment, configuration, and operations of
	security-relevant subsystems and components; including awareness
	training of all users and non-privileged operators of the system and/or
	its components. It is critical for a proper, continuous, and secure
	performance.
	
	In many control frameworks, security training must be followed and
	results documented to demonstrate due diligence. Substantiated
	corrective actions or sanctions are needed in cases where exploits or
	errors compromise security objectives.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.8_Phase_G_Implementation_Governance "5.8 Phase G: Implementation Governance"
	
	Security Architecture implementation governance provides assurance that
	the detailed design and implemented processes and systems adhere to the
	overall Security Architecture. This ensures that deviations from
	Architecture Principles and implementation guidelines don’t create any
	unacceptable risk.
	
	The following artifacts are relevant in this phase.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5.9_Phase_H_Architecture_Change_Management "5.9 Phase H: Architecture Change Management"
	
	Phase H does not produce tangible security outputs but defines two
	processes essential for continued alignment between the business
	requirements and the architecture: risk management and architecture
	governance. Even though they are not formal artifacts, they are added
	here to emphasize their importance.
	
	ERM is the process in which the existing architecture is continuously
	evaluated regarding changes to business opportunity and security threat.
	Based on the results of this process, the current architecture might
	deem it unsuitable to mitigate changed or new risks, or it might
	constrain the business too much in exploiting new opportunities. In that
	case, a decision on architecture change must be made.
	
	Architecture governance is the process in which decisions are made on
	changes to the existing architecture, either by minor changes in the
	current iteration or by means of a completely new iteration. This is
	explained in the TOGAF Standard – Enterprise Architecture Capability and
	Governance (Architecture Governance Framework). Changes related to risk
	and security should be an explicit part of that framework. Large changes
	to the architecture should include a security impact analysis.
	
	Change is driven by new requirements or changes in the environment. For
	instance, changes in security requirements can be caused by changes in
	the threat environment, changed compliance requirements, or changes due
	to discovered vulnerabilities in the existing processes and solutions.
	Changes required due to security-related causes are often more
	disruptive than a simplification or incremental change.
	
	Due care must be taken in deciding whether a security change triggers a
	new iteration though the TOGAF ADM cycle – for instance, when enterprise
	risk appetite changes – a seemingly small security requirement change
	can easily trigger a new architecture development cycle.
	
	An example of where changes can be applied within the existing
	architecture is when security standards or requirements change. This is
	usually less disruptive since the trade-off for their adoption is based
	on the value of the change – that is, evaluation of the risk – the
	trade-off between the opportunity for business improvement, the
	perceived threat to the business in security terms, and the threat posed
	by the change itself, which would perhaps be very disruptive and
	expensive. This is an excellent example of where the SABSA concept of
	balancing risks can be applied to decision-making.
	
	It is therefore essential that the architecture change board or any
	other governance structure that is responsible for applying appropriate
	architecture change management comprises suitable security skilled
	individuals.
	
snippet togaf_ea-capability-and-governance_INDEX_5_Architecture_Contracts "-   5. Architecture Contracts"
	    -   5.1 Role
	    -   5.2 Contents
	        -   5.2.1 Statement of Architecture Work
	        -   5.2.2 Contract between Architecture Design and Development
	            Partners
	        -   5.2.3 Contract between Architecting Function and Business
	            Stakeholders
	    -   5.3 Relationship to Architecture Governance
snippet togaf_ea-capability-and-governance_5_Architecture_Contracts_5_Architecture_Contracts "5. Architecture Contracts"
	
	  -- -----------------------------------------------------------------------------------------
	     Chapter Contents: 5.1 Role | 5.2 Contents | 5.3 Relationship to Architecture Governance
	  -- -----------------------------------------------------------------------------------------
	
	This chapter provides guidelines for defining and using Architecture
	Contracts.
	
snippet togaf_architecture-content_INDEX_5_Building_Blocks "-   5. Building Blocks"
	    -   5.1 Overview
	    -   5.2 Introduction to Building Blocks
	        -   5.2.1 Overview
	        -   5.2.2 Generic Characteristics
	        -   5.2.3 Architecture Building Blocks
	            -   5.2.3.1 Characteristics
	            -   5.2.3.2 Specification Content
	        -   5.2.4 Solution Building Blocks
	            -   5.2.4.1 Characteristics
	            -   5.2.4.2 Specification Content
	    -   5.3 Building Blocks and the ADM
	        -   5.3.1 Basic Principles
	            -   5.3.1.1 Building Blocks in Architecture Design
	            -   5.3.1.2 Building Block Design
	        -   5.3.2 Building Block Specification Process in the ADM
	        -   Footnotes
snippet togaf_architecture-content_5_Building_Blocks_5_Building_Blocks "5. Building Blocks"
	
	  -- --------------------------------------------------------------------------------------------------------
	     Chapter Contents: 5.1 Overview | 5.2 Introduction to Building Blocks | 5.3 Building Blocks and the ADM
	  -- --------------------------------------------------------------------------------------------------------
	
	This chapter explains the concept of building blocks.
	
snippet togaf_togaf-leaders-guide_5_Business_Objectives_for_the_EA_Capability_5_Business_Objectives_for_the_EA_Capability "5 Business Objectives for the EA Capability"
	
	In many regards, the two most important activities in establishing a
	successful EA Capability are understanding the enterprise context and
	the objective of the EA Capability. Too often, conversations about EA
	implicitly assume an enterprise context and a set of objectives.
	Participants in the conversation use the same words, with no common
	meaning, or shared expectations. Implicit assumptions invariably lead to
	failures. EA should endeavor to explicitly extract the enterprise
	context and set of objectives from the sponsor of the EA Capability,
	like the CEO or the CIO. Implicit deductions, though possible from
	certain documents, invariably misdirects the effort. Successful
	evolution of an EA Capability happens only when explicit alignment is
	continuously established and validated.
	
	The purpose and objectives of the EA Capability will directly shape the
	EA organization model, the governance framework, the architecture
	contents, and the process model. Further, they will define whether the
	EA Capability is successful, or will follow the recurrent path of try,
	fail, and re-boot.
	
	To have common understanding of the objectives and expectations, the
	following questions need to be answered:
	
	-   What is the EA Capability expected to achieve and why?
	-   What is the usage and application of the EA produced? For example,
	    EA to support strategy, program, segment, capability, project, or
	    third party.
	-   How is success going to be measured?
	-   Is the EA Capability doing the right thing for the enterprise
	    context?
	-   What is the depth and breadth of the EA?
	-   What is the organization model of the EA Capability?
	
	By approaching and answering questions, the purpose of the EA Capability
	and what it needs to be successful are framed. The Leader is in a
	position to separate wheat from chaff and focus on what is expected and
	what will be successful. Challenges regarding process integration and
	governance can be addressed. Challenges regarding organization model and
	existing resources are placed in stark relief.
	
	Most sponsors for an EA Capability speak regarding financial goals or
	broad objectives (decrease cost of doing business, improve
	speed-to-market). Suyog Mahendra Shah[15] identifies that stakeholders
	may have different motivations and perspectives. The unaddressed gap
	between sponsors’ objectives and stakeholder perspective results in
	failure. The thought process of stakeholders will have to be shifted
	from task-based or project-based to thinking regarding systems and
	enterprise level.
	
	A key first step for the EA Capability Leader is to play back the
	executive talk in explicit capabilities, go-to market approaches, or
	operational requirements. It is important to be specific to get
	alignment with the enterprise’s values, goals, and strategies to have a
	common understanding of the objectives and expectations of the EA
	Capability.
	
snippet togaf_digital-technology-adoption_5_Charting_the_Course_for_Digital_Technology_Adoption "5 Charting the Course for Digital Technology Adoption"
	
	This chapter gives an overview of the four steps that need to be
	followed for a comprehensive approach to digital technology adoption.
	The four steps are highlighted in Figure 3 and then explained in more
	detail in the text that follows.
	
	[]
	
	Figure 3: Four-Step Roadmap for Digital Technology Adoption
	
snippet togaf_business-architecture_value-streams_5_Conclusion "5 Conclusion"
	
	The use of value streams is an important Business Architecture
	technique, designed to understand what value needs to be created and
	delivered to each group of key stakeholders in order for it to be
	successful. Decomposing value streams into value stream stages provides
	a clearer understanding of how that value is (or needs to be) created or
	delivered, as well as what business capabilities are necessary to
	support those critical value-adding activities.
	
	Value streams and value stream maps are, in effect, the counterpoint to
	business capabilities and capability maps. Whereas business capabilities
	deal with what a business does, value streams focus on the actions
	describing (at a high level) how a business delivers value to its
	stakeholders – through the effective combination of those capabilities.
	Value streams thus have an intrinsic relationship with business
	capabilities. Together, they form a powerful analytical device with
	which to unpick the constituent parts of a business to better understand
	its inner workings, to assess the degree of alignment between the
	organization’s mission and the activities it performs in support of
	that, and to identify where opportunities for improvement exist.
	
	In this Guide we have shown that mapping value streams provides a
	powerful way to obtain a snapshot of the entire business in conjunction
	with business capabilities, since those value streams represent all of
	the work the business needs to perform from a value-delivery
	perspective. Doing so helps business leaders assess their organization’s
	effectiveness at creating, capturing, and delivering value for different
	stakeholders. The methods and examples provide a starting toolset for
	the architect to model the most critical paths for a company to deliver
	business value and enable business strategy.
	
snippet togaf_business-architecture_business-scenarios_5_Contributions_to_the_Business_Scenario "5 Contributions to the Business Scenario"
	
	It is important to realize that the creation of a Business Scenario is
	not solely the province of the architect. As mentioned previously,
	business line management and other stakeholders in the enterprise are
	involved to ensure that the business goals are accurately captured. In
	addition, depending on the relationship that an organization has with
	its IT vendors, the latter also may be involved to ensure that the roles
	of technical solutions are also accurately captured, and to ensure
	communication with the vendors.
	
	Typically, the involvement of the business management is greatest in the
	early stages while the business problems are being explored and
	captured; while the involvement of the architect is greatest in the
	later stages and when architectural solutions are being described.
	Similarly, if vendors are involved in the Business Scenario process, the
	involvement of the customer side (business management plus Enterprise
	Architects) is greatest in the early stages, while that of the vendors
	is greatest in the later stages when the role of specific technical
	solutions is being explored and captured. This concept is illustrated in
	Figure 3.
	
	[Relative Contributions to a Business Scenario]
	
	Figure 3: Relative Contributions to a Business Scenario
	
	Vendor IT architects might be able to assist enterprise IT architects
	with integration of the vendor’s products into the Enterprise
	Architecture. This assistance most probably falls in the middle of the
	timeline in Figure 3.
	
snippet togaf_adm-practitioners_5_Coordination_Across_the_EA_Landscape_and_EA_Team_5_Coordination_Across_the_EA_Landscape_and_EA_Team "5 Coordination Across the EA Landscape and EA Team"
	
	This chapter will address the following questions:
	
	-   What to expect in a well-run Architecture Repository & EA Landscape
	-   How is ADM iteration realized in practice?
	-   How to work in the context of superior architecture
	-   How are multiple states managed (candidate, current, transition, and
	    target)?
	
snippet togaf_adm_INDEX_5_C_Information_Systems_Architectures "-   5. Phase C: Information Systems Architectures"
	    -   5.1 Objectives
	    -   5.2 Approach
snippet togaf_adm_5_C_Information_Systems_Architectures_5_C_Information_Systems_Architectures "5. Phase C: Information Systems Architectures"
	
	  -- -------------------------------------------------
	     Chapter Contents: 5.1 Objectives | 5.2 Approach
	  -- -------------------------------------------------
	
	This chapter describes the Information Systems Architectures for an
	architecture project, including the development of Data and Application
	Architectures.
	
	[]
	
	Figure 5-1: Phase C: Information Systems Architectures
	
snippet togaf_reference-models_digital-business-reference-model_5_Digital_Architecture_Development "5 Digital Architecture Development"
	
snippet togaf_business-architecture_information-mapping_5_Distinguishing_between_Information_Maps_and_Data_Models "5 Distinguishing between Information Maps and Data Models"
	
	To provide examples with familiar content, Figure 1 and Figure 2 are
	limited to information that could be broken into conceptual data types
	and, given appropriate Data Architecture practices, resolved into a data
	schema that can be communicated, used, and stored. Limiting key
	information concepts only to those captured in data models, however,
	could lead to significant gaps and wasted investments trying to solve
	the wrong problem. The data architect will want to use business-focused
	Information Maps as a source to map into conceptual data, but should
	understand they are not the same.
	
	For example, a critical type of customer information may be Customer
	Perception; a characterization of their viewpoint in relation to a
	specific topic. Another critical type of information for your business
	may be Product Offering, which has a relationship to Customer Perception
	where your business needs to know that perception of that product to
	inform internal planning. A Sales Lead (stakeholder) has the ability to
	assess customer needs (Customer Analysis – a business capability), which
	includes the subjective ability (not in a form reducible to a data
	field), through experience, to assess Customer Perception. The Sales
	Lead, armed with stored data such as previous sales volume in a customer
	relationship management system and product characteristics in a product
	data management system, makes a final recommendation on product
	development based on their subjective view of Customer Perception. A
	sample of this relationship is shown in Figure 3.
	
	[]
	
	Figure 3: Sample Relationship between Multiple Business Concepts
	
	Usually, however, many types of business information lend themselves to
	being characterized as data, as long as the reason that the information
	matters to the business and the relevant relationships are understood
	first. This includes structured data that lends itself to conventional
	Data Architecture methods, and unstructured data that modern
	technologies can consume to provide actionable input if based on sound
	architecture and well-understood business logic.
	
snippet togaf_architecture-skills-framework_5_Enterprise_Architecture_Skill_Definitions "5 Enterprise Architecture Skill Definitions"
	
	The following tables show a notional alignment of maturity/skill level
	versus role. Certain pursuits may require different levels of
	sophistication for specific roles than those identified herein.
	
snippet togaf_adm-techniques_INDEX_5_Gap_Analysis "-   5. Gap Analysis"
	    -   5.1 Introduction
	    -   5.2 Suggested Steps
	    -   5.3 Example
snippet togaf_adm-techniques_5_Gap_Analysis_5_Gap_Analysis "5. Gap Analysis"
	
	  -- ------------------------------------------------------------------------
	     Chapter Contents: 5.1 Introduction | 5.2 Suggested Steps | 5.3 Example
	  -- ------------------------------------------------------------------------
	
	The technique known as gap analysis is widely used in the TOGAF
	Architecture Development Method (ADM) to validate an architecture that
	is being developed. The basic premise is to highlight a shortfall
	between the Baseline Architecture and the Target Architecture; that is,
	items that have been deliberately omitted, accidentally left out, or not
	yet defined.
	
snippet togaf_business-architecture_business-capabilities_5_Mapping_Business_Capabilities_to_Other_Business_Architecture_Perspectives "5 Mapping Business Capabilities to Other Business Architecture Perspectives"
	
	Having identified and organized the business capabilities into a
	business capability map, we can now start to apply the information to
	business analysis and planning.
	
	There are two aspects to consider:
	
	1.  Heat mapping the business capability map itself
	2.  Mapping the relationships between the business capabilities and
	    other business and IT architecture domains
	
	Heat mapping helps identify opportunities for business improvement or
	investment. It visually highlights business capabilities that are
	performing at a sub-optimal level, or that might not exist in a form
	that is required to meet some future strategic need.
	
	The second approach helps to strengthen alignment across different parts
	of the business, ensuring that what the business wishes to do is:
	
	-   Reflected in the company’s strategic and operational plans (the why)
	-   Supported by the appropriate systems, processes, information, and
	    organizational structure (the how and where)
	
snippet togaf_guides_agile-sprints_5_Other_Enterprise_Architecture_Perspectives "5 Other Enterprise Architecture Perspectives"
	
	In this chapter we discuss some more aspects that could be considered
	when using sprints for Enterprise Architecture. Each of the topics
	discussed here is itself worthy of a separate guide and elaboration. We
	have limited them to the scope of this document; i.e., using sprints.
	
snippet togaf_architecture-project-management_5_PMBOK_to_ADM_Mapping "5 PMBOK to ADM Mapping"
	
	The aim of this section is to present the TOGAF ADM mapping to PMBOK
	processes. This section is intended to provide general information about
	the mapping, not detailed information about the TOGAF ADM phases and
	PMBOK processes; therefore, the standard terms are used without
	description. A detailed description can be seen in the TOGAF Standard
	and the PMBOK Guide, 5th Edition.
	
	In general, the TOGAF ADM Phase A (Architecture Vision) can be mapped to
	the PMBOK initiation and planning process groups. The TOGAF ADM Phase B
	(Business Architecture), Phase C (Information Systems Architectures),
	Phase D (Technology Architecture), Phase E (Opportunities and
	Solutions), and Phase F (Migration Planning) can be grouped together and
	considered delivery stages. Project closing should be considered as the
	last step of Phase F.
	
	The TOGAF Standard provides the ADM that defines the Enterprise
	Architecture lifecycle. In this ADM there are distinct phases that are
	divided into steps that describe the processes related to architecture
	planning, development, implementation, and architecture change
	management.
	
	PMBOK describes the processes divided into knowledge areas and process
	groups. The knowledge areas contain: integration management, scope
	management, time management, cost management, quality management, human
	resource management, communication management, risk management,
	procurement management, and stakeholder management. The process groups
	are divided into: initiating, planning, executing, monitoring, and
	closing.
	
	The TOGAF Standard recommends managing the ADM cycle as a project and
	using for this purpose the Project Management framework that is
	implemented in the enterprise.[39] Based on the ADM phases and Project
	Management process groups we could initially map the PMBOK Project
	Management processes into the TOGAF ADM.
	
	A detailed description of the mapping of the Project Management
	processes to the ADM steps follows. Process activities are covered fully
	or partially in the TOGAF ADM steps. Some processes are not covered in
	the TOGAF Standard so we discuss them as additional Project Management
	processes.
	
	Figure 9 presents the high-level mapping between the TOGAF ADM and PMBOK
	processes. In order to ensure clear understanding of mapping, some tasks
	and processes were aggregated and simplified.
	
	[Figure 9.png]
	
	Figure 9: TOGAF ADM and PMBOK Mapping (High-Level) (Derived from the
	TOGAF Standard and the PMBOK Guide)
	
	The following part of this section presents the detailed description of
	the PMBOK processes mapping to the TOGAF ADM cycle. First, Phase A is
	being assessed. In this section each step is mapped to the PMBOK
	processes. Then, Phases B to F are assessed. The last part presents the
	closing part of the Architecture Project. The mapping covers an
	explanation of why and how specific processes are mapped to each of the
	steps.
	
snippet togaf_guides_microservices-architecture_5_Preliminary_Phase "5 Preliminary Phase"
	
	The TOGAF Preliminary Phase is about preparing the enterprise to
	determine “where, what, why, who, and how we do architecture” in the
	enterprise, concerning all the ABBs.
	
	An MSA provides the service layer in an architecture, and the associated
	infrastructure for those services. To reap the major benefits of an MSA,
	it usually focuses on the technology capabilities in the enterprise and
	may be a vital cog in providing a set of highly reliable and scalable
	capabilities. This document provides information for the MSA layer;
	information for the development of the Enterprise Architecture is
	provided in other sources, such as the TOGAF^(®) Series Guide: Using the
	TOGAF^(®) Framework to Define and Govern Service-Oriented Architectures
	(see Referenced Documents).
	
	Given this role for the MSA within an overall enterprise, it is worth
	noting that coordination and alignment with other stakeholders will
	always be a mandatory concern during the development of an MSA. How
	Enterprise Architects will engage and support an MSA implementation is
	an enterprise-level decision. The implementation of the MSA for a
	particular set of business capabilities, and the technology choices for
	that implementation, will be the responsibility of the Project
	Architect. A typical set of stakeholders is listed in Table 1.
	
	Table 1: MSA Implementation Stakeholders
	
	  Stakeholder                 Role Within the Enterprise
	  --------------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Enterprise Architects       Responsible for overall Enterprise Architecture. Prescribe company standards and chair Architecture Review Board.
	  Architecture Review Board   Responsible for reviewing and coordinating all Enterprise Architectures for compliance to company standards. Requests for waivers and deviations must be approved by this board.
	  Project Architect           Responsible for the architecture development of an individual project (in this case, the MSA). Must coordinate with other stakeholders to ensure project success.
	  Domain Architects           (Common in larger enterprises.) Responsible for the architecture of a particular bounded context within the enterprise (Business, Data, Application, and Technology).
	  Development/Operations/IT   Responsible for the development of the deployed systems and their daily operations. MSA is well aligned with DevOps methodologies, emphasizing automation, feedback, and matching of development to production environments. Substantial autonomy is granted at the team level, while maintaining alignment with Domain and Enterprise Architects on technology selections and roadmaps.
	
	The TOGAF framework provides for incremental architecture development.
	This framework still applies to an MSA, although the emphasis in some
	phases will be different. The Preliminary Phase ensures the skills,
	capabilities, and governance required for MSA are addressed. Each cycle
	through Phases A to H creates an increment to the architecture, with
	Requirements Management being a continuous phase to capture all MSA
	requirements and enable a dynamic architecture approach. It should be
	noted that for MSA these cycle times can be expected to be quite short,
	measured in durations of weeks rather than months.
	
	The Preliminary Phase is where the architect adopts the principles of
	service design particular to an MSA: independence, self-containment, and
	single responsibility. This decision is necessary even if the enterprise
	is already service-oriented. This affects two other outputs of the
	phase: the governance and support strategy, and the content of the
	initial Architecture Repository.
	
snippet togaf_metadata-management_5_Reference_Models "5 Reference Models"
	
snippet togaf_master-data-management_5_Reference_Models "5 Reference Models"
	
	Reference models aim to become a stable and common language to describe
	the functions that platforms should cover. They can be used:
	
	-   To describe the functional coverage of a given provider or to
	    compare the functional coverage of two providers
	-   To assess the Baseline (as-is) Architecture of a given organization
	    both from a business and technical point of view
	-   To design the Target (to-be) Architecture and Transition
	    Architecture of a given organization
	-   To evaluate the maturity of a capability
	-   In Architecture Governance, to decide on a scenario for the Target
	    Architecture
	
	This chapter provides two types of reference model:
	
	-   Kernel customer data scope reference model
	-   C-MDM detailed business and application functions reference model
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM "5 Security and Risk Concepts in the TOGAF ADM"
	
	The TOGAF ADM contains the concept of “artifacts” (work products) that
	are consumed or produced by each phase. To match this, the core concepts
	of the Enterprise Security Architecture are expressed in TOGAF
	terminology and related to TOGAF concepts, which will ensure correct
	embedding of the relevant risk and security concepts at the appropriate
	ADM phases. A complete overview of all selected SABSA artifacts is given
	in Figure 1.
	
	These core security concepts are explained in more detail in the
	following sections for each TOGAF ADM phase. Besides the description,
	the location in the “Architecture Framework” is given. That can be in
	the TOGAF Standard – if it’s already there – or in the Enterprise
	Security Architecture. The Enterprise Security Architecture is used here
	as a generic Security Architecture concept, encompassing both ISM and
	ERM.
	
snippet togaf_business-architecture_organization-mapping_5_The_Relationship_to_Business_Capabilities_Value_Streams_and_Information_Maps "5 The Relationship to Business Capabilities, Value Streams, and Information Maps"
	
	The first step is to set out a tabular description of elements that are
	often related to organizational elements such as the organization unit.
	As shown in Table 2, the organization map starts with a central
	construct that names the scope of the enterprise to be mapped. In the
	second row, organization units (or lines of business or divisions) are
	the elements that directly make up that enterprise. The next step is
	often to describe business capabilities, to outline which organization
	units have which business capabilities (with a many-to-many mapping); a
	powerful construct that can help understand many issues around
	authority, investments, information flow, and change management.
	
	Independent of mapping to business capabilities, however, organization
	units can also have relationships to location or other attributes that
	make meaningful distinctions between the units but are not themselves an
	organizational element. In the fifth row, value flows are shown and
	labeled between organization units in tangible or intangible forms.
	Here, key information types can be shown flowing between organization
	units. Examples for some of these are shown in Chapter 7. Note that it
	is expected that some of these relationships will be built based on the
	needs of the architecture effort, but rarely all of them. Finally, a
	table of this form can provide an understanding of possible
	relationships between artifacts in the architectural knowledge base,
	including whether those relationships are direct, or derived through the
	use of other artifacts.
	
	Table 2: Organization Map Relationships to Other Domains
	
	  Element               Type           Relation   Purpose                                                                                                                   Examples
	  --------------------- -------------- ---------- ------------------------------------------------------------------------------------------------------------------------- ------------------------------------------------------------------------------------------
	  Scope of enterprise   Organization   Direct     Basis of the organization map that sets the scope for boundaries                                                          Name of the business entity and extended team including customers and strategic partners
	  Organization unit     Organization   Direct     The enterprise decomposes into organization units                                                                         Marketing, Finance, Supply Chain, HR
	  Business capability   Capability     Direct     Organization units have one or more business capabilities                                                                 Market Management, Financial Management, Supplier Management
	  Location              Geographical   Direct     Organization units have one or more locations                                                                             Global versus regional locations
	  Value flow            Value          Derived    Characterized through labeled lines between organization units, naming the value that flows from one to the other         Product Delivery, Payment Approval, Personalized Service
	  Information flow      Information    Derived    Characterized through labeled lines between organization units, naming the information that flows from one to the other   Product Attributes, Payment Terms, Agreement
	
snippet togaf_guides_index_5_Using_Agile_Product_Management_Techniques "5. Using Agile Product Management Techniques"
	
	Many techniques have become popular within Agile product management that
	can be beneficial when applied to the TOGAF ADM. This chapter describes
	some of those techniques and how they can be applied.
	
snippet togaf_business-architecture_business-models_5_Using_Business_Models_in_the_TOGAF_Standard "5 Using Business Models in the TOGAF Standard"
	
	The physical process of constructing a business model artifact presents
	a great opportunity for the architect to bring strategic perspectives of
	the enterprise into strategy formulation and business planning
	activities. In this case, the architect and the models they create
	bridge the gap between strategy and architecture. This helps to:
	
	-   Improve the alignment of Enterprise Architecture to strategy
	-   Elevate the overall quality of the architecture
	-   Increase the knowledge and value of the architect to the
	    organization
	
	Business models can be a key input into Phase B: Business Architecture
	of the TOGAF ADM. As such, they are normally associated with the
	Architecture Vision phase of Enterprise Architecture development. The
	business model is highly effective at aligning members of the leadership
	team around new strategies or a different business direction. The
	Business Architecture is more effective at aligning the rest of the
	enterprise on what needs to be done (and how) at an operational and
	organizational level:
	
	-   First, planners and architects use the business model to identify
	    key partners that are stakeholders in the change
	
	The business models are analyzed to gain insight into additional
	stakeholders, and their concerns, objectives, and key business
	requirements.
	
	-   Next, the business models are used to verify the business goals,
	    strategic drivers, and constraints of the organization
	
	Any inconsistencies or gaps are provided as feedback to the sponsors of
	the architecture statement of work for clarification.
	
	-   Architects then analyze the business models and use capability
	    mapping to identify new capabilities (or enhancements to existing
	    ones) that are required to realize the target business model
	
	Architects also use value stream mapping to identify new value streams
	(or gaps in existing value streams) that must be developed to produce
	the value items described in the business model value propositions.
	
	-   Having assessed the capability gaps and future requirements, the
	    target business models can be used to define the scope of the
	    architecture statement of work in greater detail
	
	They offer insights as to the breadth and depth of the architecture
	efforts. During this scoping step, the architecture is partitioned and
	aligned with the organization’s business models to ensure alignment of
	the architecture to strategy and value.
	
	-   The business models help to formulate architecture and business
	    principles
	
	For example, an organization shifting to a model that requires greater
	orchestration of the customer experience may benefit from establishing
	business principles for managing customer-centered solutions and
	handling customer information at different touch points.
	
	-   The business models provide an anchor for the development of the
	    architecture project value proposition
	
	An architecture project value proposition that demonstrates close
	alignment to the business model value proposition provides a powerful
	business case for the project.
	
	-   Finally, the business models facilitate the detailed statement of
	    work and approval of the architecture project
	
	This analysis provides a better understanding of the business problem at
	hand and offers insights into the nature, scope, and effort required for
	the architecture project.
	
	Business models are part of the Architecture Vision inputs to the
	Business Architecture phase of the TOGAF ADM where they serve to help
	describe the business problem and scope of work of the Business
	Architecture phase, provide the business value context for the Business
	Architecture target description, and provide a means to align the
	Business Architecture to strategy and value:
	
	-   Planners and architects use the business models to understand the
	    essential business problem and the vision of the change being
	    proposed
	-   Business models help determine the Business Architecture statement
	    of work and the types of Business Architecture models or artifacts
	    required
	
	For example, a company that envisions a business model that expands its
	existing product offering through new delivery channels to new customers
	may not require updates to the existing product catalog or product
	lifecycle diagrams.
	
	-   Business Architects utilize the business models as context and a
	    starting point for baseline and target Business Architecture
	    development
	-   Transition business models, if available, are valuable inputs to
	    creating transition Business Architectures and business roadmaps
	
	Business models help keep initiatives focused on the organization’s
	value-producing logic during the remainder of the TOGAF ADM phases. In
	the Information Systems Architecture and Technology Architecture phases,
	they can help planners and architects to maintain orientation of the
	architecture effort to the organization’s vision for value creation and
	exchange. During the Opportunities & Solutions and Migration Planning
	phases, business models, companions to the business roadmap produced in
	the Business Architecture phase, provide context for the development of
	architecture roadmaps, and implementation and migration plans.
	
	Finally, because business models speak the language of the business and
	are validated early, they serve as an effective tool to communicate
	traceability of the architecture and solutions to the organization’s
	strategy. This greatly facilitates stakeholder engagement.
	
snippet togaf_reference-models_government-reference-model_5_Young_People_and_Education "5 Young People and Education"
	
	Young People and Education comprises educational programs that
	correspond to early years, primary school, secondary school, higher
	education, and specialist schooling. This also includes children’s
	social services, safeguarding, and associated children and adolescent
	services; as well as skill or training activities undertaken by the
	government to promote education.
	
	[]
	
	Figure 5: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Young People and Education Sector
	
snippet togaf_master-data-management_6.1.1_C-MDM_Integration_Styles "6.1.1 C-MDM Integration Styles"
	
	The three main C-MDM integration styles are: consolidation, cooperation,
	and centralized. They are described below.
	
	These three styles are not mutually-exclusive and can be used in
	combination. If the organization has not started their IT journey with
	the centralized style, it will have to start with consolidation and
	evolve toward cooperation.
	
	Consolidation Style (or Downstream MDM)
	
	All systems have their own data. Updates are pushed to the MDM hub where
	they are consolidated. This is the simplest to implement because it has
	no impact on operational systems. It is the first step for organizations
	starting with the C-MDM capability. The BI & Analytics capability can be
	a simple solution here. It addresses the need for after-the-fact
	analyses and reporting that require customer data. Nevertheless, as
	there is no single point of truth for the customer and no impact on
	operational processes, data quality will be difficult to improve, and
	merge will not be possible.
	
	Cooperation Style
	
	All systems have their own data. Updates are pushed to the MDM hub where
	they are consolidated. The “new version of the truth” is then forwarded
	to all connected systems that can synchronize with the master through
	the customer ID attributed by the C-MDM application. The cooperation
	style is more complex from an IT point of view, but it allows a high
	level of control on customer data quality and governance in information
	systems that have been built in silos. In this style, the MDM capability
	is supporting user interfaces, workflows, and transactions to create,
	update, merge, or delete customer data that cannot be addressed by BI &
	Analytics platforms. A specific transactional application is therefore
	required.
	
	Centralized Style
	
	No system has its own data. The MDM is the only system that stores the
	master data. All connected systems retrieve the master data from the
	MDM: identifying the customer with the same data and when creating a new
	customer and checking capability if it already exists in the repository.
	In the same way as the cooperation style, this MDM capability must
	support user interfaces, workflows, and transactions and will be
	supported by a specific transactional application.
	
	[]
	
	Figure 8: C-MDM Integration Styles
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.1.1_Key_Characteristics "6.1.1 Key Characteristics"
	
	The following characteristics have been adapted from Corporate
	Governance by Ramani Naidoo[20] and are positioned here to highlight
	both the value and necessity for governance as an approach to be adopted
	within organizations and their dealings with all involved parties:
	
	-   Discipline: all involved parties will have a commitment to adhere to
	    procedures, processes, and authority structures established by the
	    enterprise
	-   Transparency: all actions implemented and their decision support
	    will be available for inspection by authorized enterprise and
	    provider parties
	-   Independence: all processes, decision-making, and mechanisms used
	    will be established so as to minimize or avoid potential conflicts
	    of interest
	-   Accountability: identifiable groups within the enterprise – e.g.,
	    governance boards who take actions or make decisions – are
	    authorized and accountable for their actions
	-   Responsibility: each contracted party is required to act responsibly
	    to the enterprise and its stakeholders
	-   Fairness: all decisions taken, processes used, and their
	    implementation will not be allowed to create unfair advantages to
	    any one particular party
	
	Governance is about a hierarchy of decision-making that everyone commits
	to. Governance can be used to drive a set of behaviors. The act of
	observation by the governance team should not change the fact or how
	something is done. An observation results in some form of measurement.
	Define a set of measurements and metrics that can be used to achieve
	organizational objectives. Being transparent about why the measurement
	is being made and what mitigation options are available will drive
	positive behavior. Revisit the previous chapter to fine tune what to
	measure and why that measurement is needed.
	
	Identify and define appropriate governance tiers to align what, how,
	when, and which tier gets escalated for relief. Absence of relief within
	each tier will result in loss of effective control and local autonomy.
	In general, lower tiers tend to be tactical in scope. Cross-cutting or
	higher tiers constrain lower tiers.
	
	It is likely that the enterprise already has processes defined for some
	or all of the tiers shown in Figure 8.
	
	[]
	
	Figure 8: Potential Governance Tiers
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.1.1_Stakeholder_Engagement_and_Requirements_Management "6.1.1 Stakeholder Engagement and Requirements Management"
	
	The TOGAF framework places requirements management and stakeholder
	engagement at the center of architecture development. Practitioners
	develop EA in accordance with the preferences and priorities of their
	organization’s stakeholders. Architecture is never sold to a
	stakeholder. Stakeholder preferences are never manipulated.
	
	Stakeholders own the architecture and the value preference and priority
	the architecture is expected to enable. Practitioners must completely
	submerge their preferences, biases, and priorities. Practitioners must
	act for their stakeholders.
	
	This is one of the most difficult activities a Practitioner must
	perform. Good Practitioners are passionately engaged in the future of
	their organization, as well as participating in defining and realizing
	the target state. Practitioners typically perform several roles: they
	will act as Subject Matter Experts (SMEs) and agents for their
	stakeholders in addition to developing architecture – see Chapter 15 for
	a discussion of roles. As an SME, the Practitioner is a source of expert
	advice. As an agent, the Practitioner may speak on behalf of a
	stakeholder. In order to be successful when performing these roles, the
	good Practitioner must understand when they are acting in a different
	role and behave appropriately.
	
	Effective requirements management is dependent upon clear traceability
	from the organization’s vision, mission, business model, and strategies
	through the most detailed statement of requirement. In order to perform
	this, the Practitioner must carefully distinguish between direct
	effective support and loose association. Things that do not best enable
	the complete set of stakeholder preferences are distractions from the
	main chance.
	
	When engaging with stakeholders, Practitioners must maintain the
	complete set of every stakeholder’s preference, and the implications of
	those preferences. Success requires abandoning absolute and entering the
	realm of satisficing. Bluntly, if there is a single obvious best answer,
	the organization’s stakeholders do not need an architecture.
	
	Effective engagement is based upon effective communication. Effective
	communication is based on the concept of view and viewpoint. Different
	stakeholders have different concerns about the architecture. These
	concerns must be addressed and represented effectively to the
	stakeholder to enable the stakeholder to approve the Target Architecture
	(see Table 2).
	
snippet togaf_master-data-management_6.1.2_Related_Integration_Patterns "6.1.2 Related Integration Patterns"
	
	To support these different integration styles, activation of different
	integration patterns is needed for each style.
	
	The examples below show exchange patterns between:
	
	-   Point of Acquisition (PoA) of customer data and the C-MDM system
	-   C-MDM system and the Point of Consumption (PoC) of customer data
	
	The relevant pattern to use depends on the usage or business process it
	needs to support and might be different from one operational application
	to another.
	
	Note: The scope of these patterns is about maintaining or consuming the
	latest updated information about the customer held by the C-MDM system.
	Nevertheless, applications could consume older instances/versions of
	customer data stored in the
	C-MDM system or keep their own version of the truth (e.g., age used to
	calculate the premium, etc.) if this is relevant for their specific
	usages.
	
	[]
	
	Figure 9: C-MDM Data Exchange Types Overview
	
	These different kinds of patterns can be put in place step-by-step in
	the different stages of the
	C-MDM architecture roadmap.
	
	Patterns to use for the consolidation style are the Batch Acquisition
	and Batch Consumption patterns (see Figure 10), which support customer
	data consolidation for analytical use-cases but not operational
	interactions with customers.
	
	[]
	
	Figure 10: Consolidation Style Patterns
	
	Patterns to use for the cooperation style are data “synchronization”
	management between primary source and replica sources (see Figure 11).
	The operational system should be aligned to the C-MDM truth, but
	potentially with some latency regarding exchange
	frequencies/architecture.
	
	[]
	
	Figure 11: Cooperation Style Patterns
	
	Patterns to use for the centralized style are:
	
	-   All updates and creation initiated through the C-MDM point of truth
	    system and services
	-   The same functional coverage as the cooperation style, but less
	    complex and more efficient from the architecture and information
	    system operations point of view
	
	New applications requiring customer data must rely on the C-MDM system
	from the start. Changing the mastership of customer data in an
	application that was not designed with this principle is far more
	complex and not always possible with reasonable effort.
	
	[]
	
	Figure 12: Centralized Style Patterns
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.1.2_Trade-Off "6.1.2 Trade-Off"
	
	One of the most valuable activities a Practitioner will perform during
	architecture development is facilitating the stakeholders’ trade-off
	decision. Facilitating trade-off is often more valuable than finalizing
	an architecture description. Good architecture addresses complex
	problems. Complex problems[27] do not have clear, unambiguous best
	answers. Instead, they have reasonable compromises.
	
	Trade-off requires a compromise between one stakeholder’s preferences as
	well as between different stakeholders’ preferences. Effective trade-off
	requires understanding value preference and priority as well as the
	scope of change necessary to realize the target.
	
	As a rule, stakeholders underperform when that trade-off stands beyond
	their span of control or span of interest. In particular, stakeholders
	underperform when the trade-off involves the preferences of different
	stakeholders. Stakeholders typically overemphasize the institutional
	role and preferences of their portion of the organization.
	
	Practitioners are most valuable facilitating trade-off between
	stakeholders and across organizational boundaries. This facilitation
	allows different stakeholders to effectively measure preferences,
	priorities, and costs that they do not intuitively understand. Best
	practice EA finds the best fit across competing preference, priority,
	and value. In facilitating the trade-off discussion, chase down all
	impacts and think through the end game needs. Work with the Enterprise
	risk management process to surface requisite dimensions. Think through
	all transition states. Leverage the architecture tool to handle the
	complexities of the EA Landscape and to accelerate the process.
	
	Practitioners should not underestimate the value their organization
	receives from facilitation of trade-off across organizational
	boundaries.
	
snippet togaf_reference-models_government-reference-model_6.1_Health_and_Community_Wellbeing_Taxonomy "6.1 Health and Community Wellbeing Taxonomy"
	
	  Sector                           Function                          Service                                                                                     Description
	  -------------------------------- --------------------------------- ------------------------------------------------------------------------------------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Health and Community Wellbeing   Hospital and Community Services   The provision of services in order to safeguard the mental and physical health of adults.   
	                                                                     Adult Social Care                                                                           Involves activities required in order to support adults with physical or learning difficulties.
	                                                                     Adult Mental Health                                                                         Provides access to psychological, employment support, trauma informed care, medicines management, and personalized support for adults with mental health needs.
	                                                                     Preventative Health                                                                         Refers to care provisioned in order to prevent illnesses or diseases.
	                                                                     Psychotherapy                                                                               Involves the use of physiological methods to support and assist adults with mental and emotional difficulties.
	                                                                     Counseling                                                                                  Involves the use of talk therapy in order to support and assist adults with mental and emotional difficulties.
	                                                                     Community Services                                                                          Involves protection of the physical and mental wellbeing of community members and monitoring community health services.
	                                                                     Adult Safeguarding                                                                          Comprises safeguarding training, policies, and processes to ensure all adults are protected from harm.
	                                                                     Medical Aligned Professions                                                                 Refers to the provision of diagnostic, technical, therapeutic, and support services by registered or qualified healthcare professionals.
	                                                                     Hospital Outpatients                                                                        The provision of hospital care and supervision for patients for less than one night.
	                                                                     Hospital Inpatients                                                                         The provision of hospital care and supervision for patients for at least one night.
	                                                                     Facilities Management                                                                       Corresponds to the maintenance, management, and upkeep of hospital and community facilities.
	                                                                     Emergency Services                                                                          The provision of pre-hospital care including ambulances, urgent response, and out of hospital treatment.
	                                   Medical                           Includes type, classification, and/or specialization of healthcare.                         
	                                                                     Medical Professional Lead                                                                   Refers to the service that sets the direction for medical practices and healthcare professionals.
	                                                                     Primary Care Strategy                                                                       Provides the direction and framework for future primary care.
	                                                                     Regulatory Oversight                                                                        Refers to services used to co-ordinate functions that ensure policy is implemented consistently.
	                                                                     Information and Strategy Governance                                                         Refers to the alignment of medical professionals, processes, tools, and technologies to achieve results.
	                                                                     Mortality                                                                                   Refers to services and information related to a death and bereavement.
	                                                                     Litigation                                                                                  Refers to any disagreements/legal action taken against medical parties in the public sector.
	                                                                     Pharmacy                                                                                    Services that are conducted to prescribe, dispense, and distribute medication.
	                                   Nursing                           The provision of services related to the care of the sick and infirm.                       
	                                                                     Nursing Strategy and Governance                                                             Refers to the alignment of nursing services, processes, tools, and technologies to achieve results.
	                                                                     Nursing Standards and QA                                                                    Comprises activities used to evaluate standards of patient care and professional capabilities of nurses.
	                                                                     Health and Community Nursing                                                                Manages care of the community, health, and leads teams of district nurses, community nurses, and support workers.
	
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6.1_Implementation_Factor_Catalog "6.1 Implementation Factor Catalog"
	
	The technique of creating an Implementation Factor catalog can be used
	to document factors impacting the architecture Implementation and
	Migration Plan.
	
	The catalog should include a list of the factors to be considered, their
	descriptions, and the deductions that indicate the actions or
	constraints that have to be taken into consideration when formulating
	the plans.
	
	Factors typically include:
	
	-   Risks
	-   Issues
	-   Assumptions
	-   Dependencies
	-   Actions
	-   Impacts
	
	An example catalog is shown in Figure 6-1 .
	
	[]
	
	Figure 6-1: Implementation Factor Catalog
	
snippet togaf_master-data-management_6.1_Integration_of_C-MDM_Systems "6.1 Integration of C-MDM Systems"
	
snippet togaf_reference-models_digital-business-reference-model_6.1_Introduction "6.1 Introduction"
	
	The adaptation and application of the TOGAF Architecture Development
	Method (ADM) process to deal with many different usage scenarios,
	including different process styles like iteration and Agile Architecture
	development, is essential to enable continued relevance and value of the
	TOGAF Standard.
	
	This chapter outlines the relationship between the DBRM elements and the
	TOGAF ADM phases, the metamodel, and a summary.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.1_Introduction "6.1 Introduction"
	
	Ensuring the compliance of individual projects with the Enterprise
	Architecture is an essential aspect of Architecture Governance (see 3.
	Architecture Governance). To this end, the IT governance function within
	an enterprise will normally define two complementary processes:
	
	-   The Architecture function will be required to prepare a series of
	    Project Architectures; i.e., project-specific views of the
	    Enterprise Architecture that illustrate how the Enterprise
	    Architecture impacts on the major projects within the organization
	    (see ADM Phases A to F)
	-   The Enterprise and IT Governance functions will define a formal
	    Architecture Compliance review process (see 6.3 Architecture
	    Compliance Reviews) for reviewing the compliance of all projects to
	    the Enterprise Architecture
	
	Apart from defining formal processes, the Architecture Governance
	function (see 3. Architecture Governance) may also stipulate that the
	architecture function should extend beyond the role of architecture
	definition and standards selection, and participate also in the
	technology selection process, and even in the commercial relationships
	involved in external service provision and product purchases. This may
	help to minimize the opportunity for misinterpretation of the Enterprise
	Architecture, and maximize the value of centralized commercial
	negotiation.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.1_Introduction_to_Governance "6.1 Introduction to Governance"
	
	ISO/IEC 38500:2015[19] defines governance as: “a system that directs and
	controls the current and future state”. The process by which direction
	and control is provided should take into account equality of concern and
	transparency, protecting the rights and interests of the business.
	
	Governance is a decision-making process with a defined structure of
	relationships to direct and control the enterprise to achieve stated
	goals. The key difference between governance and management rests on the
	cornerstone of fiduciary and sustainable responsibility. To define a
	customized governance approach, let us start to define the following:
	
	-   What is to be governed?
	-   Why should something be governed?
	-   When and who should decide on the recommended alternatives?
	-   How does this link to the EA process discussed in Chapter 10
	    (Process Model)?
	
	Common mistakes to avoid are “fixing the blame” and “warned you before”
	processes and allowing weak policies that are focused on narrow-minded
	interests instead of securing the interests of the enterprise.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.1_Key_Activity "6.1 Key Activity"
	
	All architecture development has a set of consistent key activity that
	is essentially unchanged for different purposes.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.1_Objectives "6.1 Objectives"
	
	The objectives of the Data Architecture part of Phase C are to:
	
	-   Develop the Target Data Architecture that enables the Business
	    Architecture and the Architecture Vision, in a way that addresses
	    the Statement of Architecture Work and stakeholder concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Data Architectures
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.1_Overview "6.1 Overview"
	
	The Enterprise Continuum provides methods for classifying architecture
	and solution artifacts, both internal and external to the Architecture
	Repository, as they evolve from generic Foundation Architectures to
	Organization-Specific Architectures.
	
	The Enterprise Continuum enables the architect to articulate the broad
	perspective of what, why, and how the Enterprise Architecture has been
	designed with the factors and drivers considered. The Enterprise
	Continuum is an important aid to communication and understanding, both
	within individual enterprises, and between customer enterprises and
	vendor organizations. Without an understanding of "where in the
	continuum you are", people discussing architecture can often talk at
	cross-purposes because they are referencing different points in the
	continuum at the same time, without realizing it.
	
	Any architecture is context-specific; for example, there are
	architectures that are specific to individual customers, industries,
	subsystems, products, and services. Architects, on both the buy side and
	supply side, must have at their disposal a consistent language to
	effectively communicate the differences between architectures. Such a
	language will enable engineering efficiency and the effective leveraging
	of COTS product functionality. The Enterprise Continuum provides that
	consistent language.
	
	The Enterprise Continuum enables the organization of re-usable
	architecture artifacts and solution assets to maximize the Enterprise
	Architecture investment opportunities.
	
snippet togaf_architecture-skills-framework_6.1_Role_Description "6.1 Role Description"
	
	Enterprise Architects are visionaries, coaches, team leaders,
	business-to-technical liaisons, computer scientists, and industry
	experts.
	
	The following is effectively a job description for an Enterprise
	Architect:
	
	“The architect has a responsibility for ensuring the completeness
	(fitness-for-purpose) of the architecture, in terms of adequately
	addressing all the pertinent concerns of its stakeholders; and the
	integrity of the architecture, in terms of connecting all the various
	views to each other, satisfactorily reconciling the conflicting concerns
	of different stakeholders, and showing the trade-offs made in so doing
	(as between security and performance, for example).
	
	The choice of which particular architecture views to develop is one of
	the key decisions that the Enterprise Architect has to make. The choice
	has to be constrained by considerations of practicality, and by the
	principle of fitness-for-purpose (i.e., the architecture should be
	developed only to the point at which it is fit-for-purpose, and not
	reiterated ad infinitum as an academic exercise).”
	
	The role of the Enterprise Architect is more like that of a city planner
	than that of a building architect, and the product of the Enterprise
	Architect is more aptly characterized as a planned community (as opposed
	to an unconstrained urban sprawl), rather than as a well-designed
	building or set of buildings.
	
	An Enterprise Architect does not create the technical vision of the
	enterprise, but has professional relationships with executives of the
	enterprise to gather and articulate the technical vision, and to produce
	the strategic plan for realizing it. This plan is always tied to the
	business plans of the enterprise, and design decisions are traceable to
	the business plan.
	
	The strategic plan of the Enterprise Architect is tied to the
	Architecture Governance process (see the TOGAF^(®) Standard – Enterprise
	Architecture Capability and Governance) for the enterprise, so design
	decisions are not circumvented for tactical convenience.
	
	The Enterprise Architect produces documentation and rationale of
	high-level design decisions for Segment and Solution Architects,
	business development, application development, or product development
	teams to execute.
	
	An architect is involved in the entire process; beginning with working
	with the customer to understand real needs, as opposed to wants, and
	then throughout the process to translate those needs into capabilities
	verified to meet the needs. Additionally, the architect may present
	different models to the customer that communicate how those needs may be
	met, and is therefore an essential participant in the consultative
	selling process.
	
	However, the architect is not the builder, and must remain at a level of
	abstraction necessary to ensure that they do not get in the way of
	practical implementation.
	
	The following excerpt from The Art of Systems Architecting (Rechtin &
	Maier, 2000) depicts this notion:
	
	“It is the responsibility of the architect to know and concentrate on
	the critical few details and interfaces that really matter, and not to
	become overloaded with the rest.”
	
	The architect’s focus is on understanding what it takes to satisfy the
	stakeholders, where qualitative worth is used more than quantitative
	measures. The architect uses more inductive skills than the deductive
	skills of the builder. The architect deals more with guidelines, rather
	than rules that builders use as a necessity.
	
	It also must be clear that the role of an architect may be performed by
	an engineer. A goal of this document is to describe the role – what
	should be done, regardless of who is performing it.
	
	Thus, the role of the architect can be summarized as to:
	
	-   Understand and interpret requirements
	
	Probe for information, listen to information, influence people,
	facilitate consensus building, synthesize and translate ideas into
	actionable requirements, articulate those ideas to others, and identify
	use or purpose, constraints, risks, etc.
	
	The architect participates in the discovery and documentation of the
	customer’s business scenarios that are driving the solution. The
	architect is responsible for requirements understanding and embodies
	that requirements understanding in the architecture specification.
	
	-   Create a useful model
	
	Take the requirements and develop well-formulated models of the
	components of the solution, augmenting the models as necessary to fit
	all of the circumstances, and show multiple views through models to
	communicate the ideas effectively.
	
	The architect is responsible for the overall architecture integrity and
	maintaining the vision of the offering from an architectural
	perspective. The architect also ensures leverage opportunities are
	identified, using building blocks, and is a liaison between the
	functional groups (for example, development and marketing) to ensure
	that the leverage opportunities are realized.
	
	The architect provides and maintains these models as a framework for
	understanding the domain(s) of development work, guiding what should be
	done within the organization, or outside the organization. The architect
	must represent the organization view of the architecture by
	understanding all the necessary business components.
	
	-   Validate, refine, and expand the model
	
	Verify assumptions, bring in subject matter experts, etc. in order to
	improve the model and to further define it, adding as necessary new
	ideas to make the result more flexible and more tightly linked to
	current and expected requirements.
	
	The architect additionally should assess the value of solution-enhancing
	developments emanating from field work and incorporate these into the
	architecture models as appropriate.
	
	-   Manage the architecture
	
	Continuously monitor the models and update them as necessary to show
	changes, additions, and alterations.
	
	Represent architecture and issues during development and decision points
	of the program. The architect is an “agent of change”, representing that
	need for the implementation of the architecture. Through this
	development cycle, the architect continuously fosters the sharing of
	customer, architecture, and technical information between organizations.
	
snippet togaf_guides_microservices-architecture_6.1_The_Nature_of_the_Project "6.1 The Nature of the Project"
	
	The scope of the MSA development depends on the size and structure of
	the project. The first key decision is to determine the focus of the
	architecture effort, by determining which business functions are to be
	implemented by the project.
	
	The TOGAF Standard does not attempt to provide a definition of “project”
	as it does with “enterprise”. However, it does note the increasing
	tendency for large-scale architectural developments to take the form of
	federated architectures, which are “independently developed, maintained,
	and managed architectures that are subsequently integrated within a
	meta-architectural framework”. It is almost certainly true that it is
	impossible to have a single enterprise-level architecture that applies
	to every business function within the enterprise, unless that
	architecture itself is a federated one. The important implication is
	that each of those functional or project architectures must be
	consistent with the overall Enterprise Architecture, with overall
	governance and change management as discussed later in Chapter 12 and
	Chapter 13, respectively.
	
	For the purposes of this document, we will assume that an overall
	Enterprise Architecture exists, of whatever complexity the enterprise
	requires, and concern ourselves with the development of the
	project-level architecture that is required for the particular system in
	question. Aside from general specifications of standards,
	interoperability requirements, and governance/change management, the
	Enterprise Architecture could also identify those particular business
	functions which could be potential applications for an MSA, although as
	an enterprise artifact it should not be specifying individual
	requirements for microservices or providing a detailed set of
	infrastructure requirements. The Enterprise Architecture may, for legacy
	applications, include additional constraints that apply to Capability
	Architectures, such as legacy interfaces or applications, as well as
	additional mandates that must be taken into account.
	
	The development of the project architecture begins with a clear
	understanding of the business functions that are to be implemented via
	this architecture. It is at this point that the key business drivers
	which are mandating the use of an MSA should be enumerated: requirements
	for scalability, resiliency, failover, etc. The position of the MSA
	layer in the overall architecture must be made clear. What are the ABFs
	that are supplied by this layer? (The MSA Work Group understands an ABF
	to be the smallest unit of business function within an enterprise that
	delivers value, typically supporting a single business capability.)
	Interfaces where the microservice inputs and outputs are exchanged with
	other architectural layers should be identified. Governance and change
	management are inherited from the overall Enterprise Architecture. An
	example of a project architecture is shown in Figure 6.
	
	[]
	
	Figure 6: Project Architecture
	
	This project-level architecture will be expanded into the Solution
	Architecture in the later phases of the architecture development
	process.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.2.1_Reference_Materials_External_to_the_Enterprise "6.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	-   TOGAF® Series Guide: Information Architecture — Customer Master Data
	    Management
	-   The Open Group Guide: Information Architecture: Business
	    Intelligence & Analytics and Metadata Management Reference Models
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.2.2_Non-Architectural_Inputs "6.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.2.3_Architectural_Inputs "6.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Data principles (see the TOGAF Standard — ADM Techniques), if
	    existing
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks (in particular, definitions of current
	        data)
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Gap analysis results (from Business Architecture)
	    -   Relevant technical requirements that will apply to this phase
	-   Business Architecture components of an Architecture Roadmap (see the
	    TOGAF Standard — Architecture Content)
	
snippet togaf_architecture-skills-framework_6.2_Characterization_in_Terms_of_the_Enterprise_Continuum "6.2 Characterization in Terms of the Enterprise Continuum"
	
	Under certain circumstances, the complexity of a solution may require
	additional architects to support the architecture effort. The different
	categories of architects are described below, but as they are
	architects, they all perform the tasks described above. Any combination
	of Enterprise, Enterprise Solution, and Solution Architects may be
	utilized as a team. In such cases each member may have a specific focus,
	if not specific roles and responsibilities, within the phases of the
	development process. In cases where a team of architects is deemed
	necessary, a lead Enterprise Architect should be assigned to manage and
	lead the team members.
	
	-   The Enterprise Architect has the responsibility for architectural
	    design and documentation at an architectural landscape and technical
	    reference model level
	
	The Enterprise Architect often leads a group of the Segment Architects
	and/or Solution Architects related to a given program. The focus of the
	Enterprise Architect is on enterprise-level business capabilities
	required.
	
	-   The Segment Architect has the responsibility for architectural
	    design and documentation of specific business problems or
	    organizations
	
	A Segment Architect re-uses the output from all other architects,
	joining detailed technical solutions to the overall architectural
	landscape. The focus of the Segment Architect is on enterprise-level
	business solutions in a given domain, such as finance, human resources,
	sales, etc.
	
	The Segment Architect’s skill set is similar to that of the Enterprise
	Architect, the only difference is that they do not have to understand
	the whole enterprise’s business and related IT. Typically, a Segment
	Architect needs an understanding of all architecture domains and all the
	skills related to them.
	
	-   The Solution Architect has the responsibility for architectural
	    design and documentation at a system or subsystem level, such as
	    management or security
	
	A Solution Architect may shield the Enterprise/Segment Architect from
	the unnecessary details of the systems, products, and/or technologies.
	The focus of the Solution Architect is on system technology solutions;
	for example, a component of a solution such as enterprise data
	warehousing.
	
	The Solution Architect is more IT centered than the Enterprise Architect
	but needs to understand the business environment where the solution will
	be delivered. The Solution Architect does not need to be an expert in
	business modeling or business process design. The focus of the required
	skills is more in the application, data, and technical domains.
	
	Figure 1 illustrates the difference between Segment Architecture and
	Solution Architecture.
	
	[]
	
	Figure 1: Segment and Solution Architectures
	
	Figure 2 illustrates the different skills required of the Segment and
	Solution Architect.
	
	[]
	
	Figure 2: Segment and Solution Architect Skills
	
	For more information about Solution and Segment Architects and
	Architecture, see the TOGAF Standard.
	
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6.2_Consolidated_Gaps_Solutions_Dependencies_Matrix "6.2 Consolidated Gaps, Solutions, & Dependencies Matrix"
	
	The technique of creating a Consolidated Gaps, Solutions, and
	Dependencies matrix allows the architect to group the gaps identified in
	the domain architecture gap analysis results and assess potential
	solutions and dependencies to one or more gaps.
	
	This matrix can be used as a planning tool when creating work packages.
	The identified dependencies will drive the creation of projects and
	migration planning in Phases E and F.
	
	An example matrix is shown in Figure 6-2 .
	
	[]
	
	Figure 6-2: Consolidated Gaps, Solutions, and Dependencies Matrix
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.2_Enterprise_Continuum_and_Architecture_Re-Use "6.2 Enterprise Continuum and Architecture Re-Use"
	
	The simplest way of thinking of the Enterprise Continuum is as a view of
	the repository of all the architecture assets. It can contain
	Architecture Descriptions, models, building blocks, patterns,
	architecture viewpoints, and other artifacts — that exist both within
	the enterprise and in the IT industry at large, which the enterprise
	considers to have available for the development of architectures for the
	enterprise.
	
	Examples of internal architecture and solution artifacts are the
	deliverables of previous architecture work, which are available for
	re-use. Examples of external architecture and solution artifacts are the
	wide variety of industry reference models and architecture patterns that
	exist, and are continually emerging, including those that are highly
	generic (such as the TOGAF TRM); those specific to certain aspects of IT
	(such as a web services architecture, or a generic manageability
	architecture); those specific to certain types of information
	processing, such as e-Commerce, supply chain management, etc.; and those
	specific to certain vertical industries, such as the models generated by
	vertical consortia like the TM Forum (in the Telecommunications sector),
	ARTS (Retail), Energistics® (Petrotechnical), etc.
	
	The Enterprise Architecture determines which architecture and solution
	artifacts an organization includes in its Architecture Repository.
	Re-use is a major consideration in this decision.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.2_Essential_Governance "6.2 Essential Governance"
	
	A common failure pattern is to establish an EA governance board that
	believes it maintains decision rights about the target architecture,
	change to the architecture, relief, and enforcement. Decision rights
	about the target architecture, relief, and enforcement are always vested
	in the architecture’s stakeholders. Successful teams providing the EA
	Capability make sure that even within the lowest tier (technology
	architecture governance), stakeholders own the decision rights. An EA
	governance board owns process, and a recommendation regarding
	completeness and confidence in the work that led to the target
	architecture.
	
	The short decision-tree checklist for an EA board to require an
	architect to answer when assessing a target architecture is given below.
	Note that it may sound natural to start anywhere on this checklist or
	pursue answers to these questions simultaneously. Experience has shown
	this approach to create more work than making governance invisible;
	however, it has proved to be effective. Notice the choice of words at
	the beginning of the paragraph. This is a “decision-tree” presented in
	free flow text format for readability. All questions are mandatory. As
	in any decision-tree, a negative response may force you to re-enter the
	tree at a higher level.
	
	1.  Were the correct stakeholders identified? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to engage with the stakeholders
	appropriate to the scope of the architecture being developed
	
	2.  Were constraints and guidance from superior architecture taken into
	    account? Y/N
	
	—  If yes, proceed
	
	—  If no, either exercise architecture governance to change superior
	architecture, obtain relief, or enforce the architecture by directing
	the architect to take into account guidance and constraints from
	superior architecture
	
	3.  Do appropriate subject matter experts agree with the facts and
	    interpretation of the facts in the architecture? Y/N
	
	—  If yes, proceed
	
	—  If no, either direct the architect to engage with the subject matter
	experts or develop a recommendation for the stakeholders that they
	should have limitations in confidence
	
	4.  Do any constraints or guidance produced reflect the views produced
	    for stakeholders and any underpinning architecture models and
	    analysis? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to do their job
	
	5.  Do the views produced for the stakeholders reflect their concerns
	    and reflect any underpinning architecture models and analysis? Y/N
	
	—  If yes, proceed to the stakeholders for approval
	
	—  If no, direct the architect to develop appropriate views
	
	6.  Do the stakeholders understand the value, and any uncertainty in
	    achieving the value, provided by reaching the target state? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to develop appropriate views and return
	to the stakeholders
	
	7.  Do the stakeholders understand the work necessary to reach the
	    target state and any uncertainty in successfully accomplishing the
	    work? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to develop appropriate views and return
	to the stakeholders
	
	8.  Do the stakeholders understand any limitations in confidence they
	    should have in the target architecture? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to develop appropriate views and return
	to the stakeholders
	
	9.  Have the stakeholders approved the views? Y/N
	
	If the answer to the last question is yes, the EA board should approve
	the architecture for publication in the EA repository as the approved
	target architecture. Because the failure pattern is so embedded in
	practice we will re-iterate: there is no role for the EA governance
	board to debate, or approve, the contents of the target architecture and
	its constraints or guidance.
	
	If the answer to the last question is no, the EA board should make a
	decision to either direct the architect to re-work the architecture
	usually through more advanced trade-off, or more often embracing the
	stakeholders’ preferences, or cancel the architecture initiative.
	
	When the architecture is being used, changes to the enterprise are being
	guided, or constrained. Two factors impact governance of change. First,
	organizations operate in a dynamic environment, and the analysis of the
	target architecture cannot have assessed every circumstance or change
	option possible. Second, the target was produced for a purpose and may
	not have been developed to the level of detail required for the current
	use. The governance process requires the ability to change the
	architecture, provide relief from constraint, and enforce the
	architecture.
	
	The role of EA governance is to manage the process of assessing
	compliance. All change is subject to compliance reviews against the
	constraints and guidance in the target architecture. Typically, these
	assessments are performed on a periodic basis to assess the
	operationally changing current state, and associated with a project to
	assess project-driven change. Where there is non-compliance, the
	stakeholders have three choices: first, enforce compliance; second,
	provide relief; and third, change the target architecture.
	
	The short checklist for an EA board to require an architect to answer
	when assessing a non-compliance report is:
	
	1.  Did the organization embarking on a change reasonably interpret the
	    target architecture’s guidance and constraints? Y/N
	
	—  If yes, their interpretation should be accepted as compliance and any
	issues addressed through a change to the architecture
	
	—  If no, proceed
	
	2.  Do appropriate subject matter experts agree with the facts and
	    interpretation of the facts in the impact assessment? Y/N
	
	—  If yes, proceed
	
	—  If no, either direct the architect to engage with the subject matter
	experts or develop a recommendation for the stakeholders that they
	should have limitations in confidence
	
	3.  Do appropriate subject matter experts agree with the recommendation
	    to enforce the target, grant time-bound relief, or change the
	    architecture? Y/N
	
	—  If yes, proceed
	
	—  If no, either direct the architect to engage with the subject matter
	experts or develop a recommendation for the stakeholders that they
	should have limitations in confidence
	
	4.  Do the views produced for the stakeholders reflect the impact
	    assessment and reflect any underpinning architecture models and
	    analysis? Y/N
	
	—  If yes, proceed to the stakeholders for approval
	
	—  If no, direct the architect to develop appropriate views
	
	5.  Do the stakeholders understand any limitations in confidence they
	    should have in the impact assessment? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to develop appropriate views and return
	to the stakeholders
	
	6.  Do the stakeholders understand the impact on prior expected value,
	    and any change in certainty in achieving the value, provided by
	    reaching the target state? Y/N
	
	—  If yes, proceed
	
	—  If no, direct the architect to develop appropriate views and return
	to the stakeholders
	
	7.  Have the stakeholders approved the recommendation to enforce the
	    target, grant relief, or change the architecture? Y/N
	
	If the answer to the last questions is yes, the EA board should approve
	the non-compliance action recommendation for publication in the EA
	repository. Because the failure pattern is so embedded in practice, we
	will re-iterate: there is no role for the EA governance board to debate,
	or approve, the recommendation. Lastly, where relief is provided, the EA
	board should ensure that future compliance assessment and reporting take
	place to review time-bound relief. Without this step the enterprise has
	simply agreed to change the target architecture without the bother of an
	approval.
	
	If the answer is no, the EA governance board has a difficult decision.
	In short, either the architect must be directed to expand the
	information provided to the stakeholders, or re-work the recommendation
	to embrace the stakeholders’ preferences.
	
	Design of the EA governance two essential practices must be done in the
	context of the enterprise’s existing governance, reporting, and ERM
	practices.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.2_Inputs "6.2 Inputs"
	
	This section defines the inputs to Phase C (Data Architecture).
	
snippet togaf_reference-models_government-reference-model_6.2_Key_Drivers_for_Change "6.2 Key Drivers for Change"
	
	The Health and Community Wellbeing sector faces enormous changes and
	challenges arising from greater life expectancy and as medical practices
	start to shift from traditional practices of prioritizing disease
	treatment to prevention.
	
	As a result, governments will need to consider the points below.
	
	Respond to Demographic Changes
	
	It is reasonable to expect longer-term trends in life expectancy to
	continue as a result of a combination of:
	
	-   Improved diets
	-   More effective management of the use of pharmaceuticals
	-   Improved ability to manage complex diseases
	-   Better integration of health and social care
	
	Consequently, we can expect the influence of ageing populations to
	increase pressure on the demand, and need, for public healthcare
	services.
	
	Innovate
	
	“Synthetic biology” is a multi-disciplinary scientific approach that
	uses an engineering approach to biology to design and build functions in
	cells. Annual investment in microbiome health and wellness start-ups has
	risen by 1,600% in the ten years up to 2020.
	
	Innovation potential can be realized by using synthetic biology to
	engender personalized gene therapies to treat chronic disease and
	genetic disorders. Harnessing the capabilities of microorganisms will
	help solve existing health challenges and create opportunities across
	industries.
	
	Incorporate Technology Advancements
	
	The incorporation of technology advancements will result in fundamental
	changes to the use and ownership of data by using:
	
	-   AI and Intelligence: current technology leverages wireless and smart
	    device technology to increase mobility of support – in the future,
	    electronic health records will also be supplemented by patient
	    collected data and genomics in order to enable codified real-time
	    data
	-   Blockchain: blockchain technology will be used to archive related
	    activity logs and as an additional layer of security to ensure the
	    integrity of health records by recording and time stamping each
	    instance of access or each change to a patient’s electronic records
	-   Sensors: precision sensors, including graphene and quantum sensors,
	    can be used to conduct real-time monitoring of changes in the human
	    body, collect data on performance of digital infrastructure, and
	    have the potential to detect pathogens
	-   Quantum Computing: this will enable more efficient computing and
	    facilitate drug discovery as progress accelerates
	
snippet togaf_guides_microservices-architecture_6.2_Level_of_Detail_of_Implementation_Specification "6.2 Level of Detail of Implementation Specification"
	
	How completely should the architecture define the implementation? In the
	case of a project-level architecture, it should be expected that the
	architecture will contain more detail than would typically be found in
	an enterprise-level architecture. This architecture is, after all,
	addressing the requirements of specific ABFs that need to be
	implemented. At the same time, it is not intended to be a Solution
	Architecture. Bear in mind that for a typically agile architectural
	paradigm such as MSA, frequent changes or modifications are to be
	expected; it is important that the architecture is not unnecessarily
	proscriptive in terms of, for example, technologies, although
	consistency across the enterprise and effective (albeit distributed)
	governance is still mandatory.
	
	Solution project definition and planning is carried out in Phase E
	(Opportunities & Solutions) and Phase F (Migration Planning) of the
	TOGAF ADM, and the architecture team has a supervisory role for those
	projects in Phase G (Implementation Governance).
	
	The Enterprise Architecture applies to each of the components of the
	enterprise and describes aspects that they have in common. Governance,
	change management, standards, and any common required infrastructures
	can be defined in the Enterprise Architecture and inherited by each
	project architecture.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.2_Terminology_The_Meaning_of_Architecture_Compliance "6.2 Terminology: The Meaning of Architecture Compliance"
	
	A key relationship between the architecture and the implementation lies
	in the definitions of the terms "conformant", "compliant", etc. While
	terminology usage may differ between organizations, the concepts of
	levels of conformance illustrated in Figure 6-1 should prove useful in
	formulating an IT compliance strategy.
	
	[]
	
	Figure 6-1: Levels of Architecture Conformance
	
	The phrase "in accordance with" in Figure 6-1 means:
	
	-   Supports the stated strategy and future directions
	-   Adheres to the stated standards (including syntax and semantic rules
	    specified)
	-   Provides the stated functionality
	-   Adheres to the stated principles; for example:
	    -   Open wherever possible and appropriate
	    -   Re-use of component building blocks wherever possible and
	        appropriate
	
snippet togaf_reference-models_digital-business-reference-model_6.2_TOGAF_ADM_Phases "6.2 TOGAF ADM Phases"
	
	The TOGAF ADM lifecycle element of the DBRM is intended to enable
	incorporation and adaptation of the ADM method and the TOGAF
	Standard-related elements when an organization is adopting and
	implementing the DBRM.
	
	Figure 4 depicts the TOGAF Content Framework in line with the ADM
	phases.
	
	[]
	
	Figure 4: The TOGAF Content Framework by ADM Phase
	
	Following is a summary description of the respective components of the
	TOGAF Content Framework that should be considered when adapting the ADM
	processes to enable the adoption and the implementation of the DBRM:
	
	-   Architecture Principles, Vision, Motivation, and Requirements models
	    are intended to capture the surrounding context of formal
	    architecture models, including general Architecture Principles,
	    Strategic Context that forms input for architecture modeling, and
	    requirements generated from the architecture
	
	The relevant aspects of the business context that have given rise to the
	Request for Architecture Work are typically investigated, refined,
	validated, and recorded in the Preliminary and Architecture Vision
	phases.
	
	-   The Business Architecture captures architecture models of the
	    business, looking specifically at factors that motivate the
	    enterprise, its structure, and its capabilities
	-   Information Systems Architecture models capture architecture models
	    of IT systems, looking at applications and data in line with the
	    TOGAF ADM phases
	-   Technology Architecture models capture technology assets that are
	    used to implement and realize information system solutions
	-   Architecture Realization/Transformation models capture change
	    roadmaps showing transition between architecture states and binding
	    statements that are used to steer and govern an implementation of
	    the architecture
	-   Architecture Change Management models capture value realization
	    management events, internal and external, that impact the Enterprise
	    Architecture and the generation of requirements for action
	
	The following is a summary of the ADM phases:
	
	-   The Preliminary Phase describes the preparation and initiation
	    activities required to create an Architecture Capability including
	    customization of the TOGAF framework and definition of Architecture
	    Principles
	-   Phase A: Architecture Vision describes the initial phase of an
	    architecture development cycle; it includes information about
	    defining the scope of the architecture development initiative,
	    identifying the stakeholders, creating the Architecture Vision, and
	    obtaining approval to proceed with the architecture development
	-   Phase B: Business Architecture describes the development of a
	    Business Architecture to support the agreed Architecture Vision
	-   Phase C: Information Systems Architectures describes the development
	    of Information Systems Architectures to support the agreed
	    Architecture Vision
	-   Phase D: Technology Architecture describes the development of the
	    Technology Architecture to support the agreed Architecture Vision
	-   Phase E: Opportunities & Solutions conducts initial implementation
	    planning and the identification of delivery vehicles for the
	    architecture defined in the previous phases
	-   Phase F: Migration Planning addresses how to move from the Baseline
	    to the Target Architectures by finalizing a detailed Implementation
	    and Migration Plan
	-   Phase G: Implementation Governance provides an architectural
	    oversight of the implementation
	-   Phase H: Architecture Change Management establishes procedures for
	    managing change to the new architecture
	-   Requirements Management operates the process of managing
	    architecture requirements throughout the ADM
	
	Table 3 outlines the relationship between the DBRM elements, TOGAF ADM
	phases, and the TOGAF Content Framework elements.
	
	Table 3: DBRM/TOGAF Metamodel Relationship
	
	  TOGAF ADM Phase                              Content Category                                                TOGAF Content Framework                          DBRM Domain   DBRM Element
	  -------------------------------------------- --------------------------------------------------------------- ------------------------------------------------ ------------- --------------------------------
	  Preliminary Phase                            Architecture Principles, Vision, Motivation, and Requirements   Preliminary                                      Strategy      Strategic Context
	  Phase A: Architecture Vision                                                                                 Architecture Requirements                                      
	                                                                                                               Architecture Vision                              Structural    Ecosystem and Business Model
	  Phase B: Business Architecture               Architecture Definition                                         Motivation                                       Structural    Ecosystem and Business Model
	                                                                                                                                                                Strategy      Business Motivation
	                                                                                                               Business Architecture                                          Business Services and Products
	                                                                                                                                                                Structural    Operating Model
	                                                                                                                                                                              Business Capability Model
	  Phase C: Information Systems Architectures                                                                   Information Systems Architecture                 Operational   Business Operating Environment
	  Phase D: Technology Architecture                                                                             Technology Architecture                                        
	  Phase E: Opportunities & Solutions           Architecture Realization                                        Opportunities &, Solutions, Migration Planning                 Digital Enablement
	                                                                                                               Implementation Governance                                      
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.2_Trade-Off_Decisions "6.2 Trade-Off Decisions"
	
	The most common interpretations of trade-off are “a balance achieved
	between two desirable but incompatible features; a compromise” and
	“losing one quality, aspect, or amount of something in return for
	gaining another quality, aspect, or amount”. In developing an Enterprise
	Architecture, trade-offs are never about compromises, but about a
	question of when or the context. When the context or the objective of
	the Enterprise is poorly analyzed, some choices will appear obvious or
	low-cost. Jumping to employ those choices as a viable candidate will
	result in sub-optimal achievement of the target or total failure of the
	initiative.
	
	For example, when a Practitioner is exploring a candidate target
	architecture and discovers what appears to be an obvious improvement
	without a champion, they are likely to be jumping to a decision that is
	based on poor analysis. When faced with such circumstances, the
	Practitioner should look for the hidden value. Hidden value will never
	be described in terms of the obvious cost savings.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1.1_Determine_Overall_Modeling_Process "6.3.1.1 Determine Overall Modeling Process"
	
	For each viewpoint, select the models needed to support the specific
	view required, using the selected tool or method.
	
	Ensure that all stakeholder concerns are covered. If they are not,
	create new models to address concerns not covered, or augment existing
	models (see above).
	
	The recommended process for developing a Data Architecture is as
	follows:
	
	-   Collect data-related models from existing Business Architecture and
	    Application Architecture materials
	-   Rationalize data requirements and align with any existing enterprise
	    data catalogs and models; this allows the development of a data
	    inventory and entity relationship
	-   Update and develop matrices across the architecture by relating data
	    to business service, business capability, business function, access
	    rights, and application
	-   Elaborate Data Architecture views by examining how data is created,
	    distributed, migrated, secured, and archived
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1.2_Identify_Required_Catalogs_of_Data_Building_Blocks "6.3.1.2 Identify Required Catalogs of Data Building Blocks"
	
	Descriptions of data may be captured as a catalog showing decomposition
	across related model entities (e.g., data entity -> logical data
	component -> physical data component).
	
	During the Business Architecture phase, a Business Service/Information
	diagram was created showing the key data entities required by the main
	business services. This is a prerequisite to successful Data
	Architecture activities.
	
	Using the traceability from business function/business capability to
	application and data entity, it is possible to create an inventory of
	the data needed to support the Architecture Vision.
	
	Once the data requirements are consolidated in a single location, it is
	possible to refine the data inventory to achieve semantic consistency
	and to remove gaps and overlaps.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of catalogs which should be considered for development
	within a Data Architecture, describing them in detail and relating them
	to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1.3_Identify_Required_Matrices "6.3.1.3 Identify Required Matrices"
	
	At this stage, an entity to applications matrix could be produced to
	validate this mapping. How data is created, maintained, transformed, and
	passed to other applications, or used by other applications, will now
	start to be understood. Obvious gaps such as entities that never seem to
	be created by an application or data created but never used, need to be
	noted for later gap analysis.
	
	The rationalized data inventory can be used to update and refine the
	architectural diagrams of how data relates to other aspects of the
	architecture.
	
	Once these updates have been made, it may be appropriate to drop into a
	short iteration of the Application Architecture to resolve the changes
	identified.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of matrices which should be considered for development
	within a Data Architecture, describing them in detail and relating them
	to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1.4_Identify_Required_Diagrams "6.3.1.4 Identify Required Diagrams"
	
	Diagrams present the Data Architecture information from a set of
	different perspectives (viewpoints) according to the requirements of the
	stakeholders.
	
	Once the data entities have been refined, a diagram of the relationships
	between entities and their attributes can be produced.
	
	It is important to note at this stage that information may be a mixture
	of enterprise-level data (from system service providers and package
	vendor information) and local-level data held in personal databases and
	spreadsheets.
	
	The level of detail modeled needs to be carefully assessed. Some
	physical system data models will exist down to a very detailed level;
	others will only have core entities modeled. Not all data models will
	have been kept up-to-date as applications were modified and extended
	over time. It is important to achieve a balance in the level of detail
	provided (e.g., the reproduction of existing detailed system physical
	data schemas or the presentation of high-level process maps and data
	requirements highlight the two extreme views).
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of diagrams which should be considered for development
	within a Data Architecture, describing them in detail and relating them
	to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1.5_Identify_Types_of_Requirement_to_be_Collected "6.3.1.5 Identify Types of Requirement to be Collected"
	
	Once the Data Architecture catalogs, matrices, and diagrams have been
	developed, architecture modeling is completed by formalizing the
	data-focused requirements for implementing the Target Architecture.
	
	These requirements may:
	
	-   Relate to the data domain
	-   Provide requirements input into the Application and Technology
	    Architectures
	-   Provide detailed guidance to be reflected during design and
	    implementation to ensure that the solution addresses the original
	    architecture requirements
	
	Within this step, the architect should identify requirements that should
	be met by the architecture (see 13.5.2 Requirements Development).
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.3.1_Purpose "6.3.1 Purpose"
	
	The goals of an Architecture Compliance review include some or all of
	the following:
	
	-   First and foremost, catch errors in the project architecture early,
	    and thereby reduce the cost and risk of changes required later in
	    the lifecycle
	
	    This in turn means that the overall project time is shortened, and
	    that the business gets the bottom-line benefit of the architecture
	    development faster.
	
	-   Ensure the application of best practices to architecture work
	
	-   Provide an overview of the compliance of an architecture to mandated
	    enterprise standards
	
	-   Identify where the standards themselves may require modification
	
	-   Identify services that are currently application-specific but might
	    be provided as part of the enterprise infrastructure
	
	-   Document strategies for collaboration, resource sharing, and other
	    synergies across multiple architecture teams
	
	-   Take advantage of advances in technology
	
	-   Communicate to management the status of business and technical
	    readiness of the project
	
	-   Identify key criteria for procurement activities; e.g., for
	    inclusion in Commercial Off-The-Shelf (COTS) product Request for
	    Information (RFI)/Request for Proposal (RFP) documents
	
	-   Identify and communicate significant architectural gaps to product
	    and service providers
	
	Apart from the generic goals related to quality assurance outlined
	above, there are additional, more politically-oriented motivations for
	conducting Architecture Compliance reviews, which may be relevant in
	particular cases:
	
	-   The Architecture Compliance review can be a good way of deciding
	    between architectural alternatives, since the business
	    decision-makers typically involved in the review can guide decisions
	    in terms of what is best for the business, as opposed to what is
	    technically more pleasing or elegant
	-   The output of the Architecture Compliance review is one of the few
	    measurable deliverables to the executive management to assist in
	    decision-making
	-   Architecture reviews can serve as a way for the architecture
	    organization to engage with development projects that might
	    otherwise proceed without involvement of the architecture function
	-   Architecture reviews can demonstrate rapid and positive support to
	    the enterprise business community:
	    -   The Enterprise Architecture and Architecture Compliance helps
	        ensure the alignment of IT projects with business objectives
	    -   Architects can sometimes be regarded as being deep into
	        technical infrastructure and far removed from the core business
	    -   Since an Architecture Compliance review tends to look primarily
	        at the critical risk areas of a system, it often highlights the
	        main risks for system owners
	
	While compliance to architecture is required for development and
	implementation, non-compliance also provides a mechanism for
	highlighting:
	
	-   Areas to be addressed for realignment
	-   Areas for consideration for integration into the architectures as
	    they are uncovered by the compliance processes
	
	The latter point identifies the ongoing change and adaptability of the
	architectures to requirements that may be driven by indiscipline, but
	also allows for changes to be registered by faster moving changes in the
	operational environment. Typically, dispensations (see 3.1.4 IT
	Governance) will be used to highlight these changes and set in motion a
	process for registering, monitoring, and assessing the suitability of
	any changes required.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.1_Select_Reference_Models_Viewpoints_and_Tools "6.3.1 Select Reference Models, Viewpoints, and Tools"
	
	Review and validate (or generate, if necessary) the set of data
	principles. These will normally form part of an overarching set of
	Architecture Principles. Guidelines for developing and applying
	principles, and a sample set of data principles, are given in the TOGAF
	Standard — ADM Techniques.
	
	Select relevant Data Architecture resources (reference models, patterns,
	etc.) on the basis of the business drivers, stakeholders, concerns, and
	Business Architecture.
	
	Select relevant Data Architecture viewpoints (for example, stakeholders
	of the data — regulatory bodies, users, generators, subjects, auditors,
	etc.; various time dimensions — real-time, reporting period,
	event-driven, etc.; locations; business processes); i.e., those that
	will enable the architect to demonstrate how the stakeholder concerns
	are being addressed in the Data Architecture.
	
	Identify appropriate tools and techniques (including forms) to be used
	for data capture, modeling, and analysis, in association with the
	selected viewpoints. Depending on the degree of sophistication
	warranted, these may comprise simple documents or spreadsheets, or more
	sophisticated modeling tools and techniques such as data management
	models, data models, etc.
	
	Examples of data modeling techniques are:
	
	-   Entity relationship diagram
	-   Class diagram
	
	Further guidance on Information Architecture reference models can be
	found in the following documents:
	
	-   TOGAF® Series Guide: Information Architecture — Customer Master Data
	    Management
	-   The Open Group Guide: Information Architecture: Business
	    Intelligence & Analytics and Metadata Management Reference Models
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.1_Select_Reference_Models_Viewpoints_and_Tools "6.3.1 Select Reference Models, Viewpoints, and Tools"
	
	Avoid rework. Practitioners test with the following questions:
	
	-   Given a set of stakeholders and concerns, what information do you
	    need to know about the system being examined to address their
	    concerns?
	-   Given a set of information, how will you model, represent, capture,
	    and analyze it?
	-   Are there reference models that allow you to skip to gathering and
	    analyzing rather than inventing?
	-   What information is missing from the EA Landscape right now?
	
snippet togaf_architecture-skills-framework_6.3.1_Skills_and_Experience_in_Producing_Designs "6.3.1 Skills and Experience in Producing Designs"
	
	An Enterprise Architect must be proficient in the techniques that go
	into producing designs of complex systems, including requirements
	discovery and analysis, formulation of solution context, identification
	of solution alternatives and their assessment, technology selection, and
	design configuration.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.2_Develop_Baseline_Data_Architecture_Description "6.3.2 Develop Baseline Data Architecture Description"
	
	Develop a Baseline Description of the existing Data Architecture, to the
	extent necessary to support the Target Data Architecture. The scope and
	level of detail to be defined will depend on the extent to which
	existing data elements are likely to be carried over into the Target
	Data Architecture, and on whether architectural descriptions exist, as
	described in 6.5 Approach . To the extent possible, identify the
	relevant Data Architecture building blocks, drawing on the Architecture
	Repository (see the TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Baseline
	Architecture.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.2_Develop_Target_Baseline_and_Gap "6.3.2 Develop Target, Baseline, and Gap"
	
	Just enough for the purpose. If the current state is accepted, the only
	reason to describe the baseline is to develop gaps. If stakeholders, or
	SMEs, dispute the current state, especially its fitness to objective,
	then describing current state to get an alignment is useful. Otherwise,
	let us re-iterate: only to the extent necessary to determine gaps.
	
	Consider the limitation of restricting description to where there is a
	gap. If part of the EA Landscape will have no change, and is not needed
	for traceability, what useful reason is there for a Practitioner to
	spend time describing it?
	
	A recurrent question is how to describe the current state. Frankly, use
	the exact same techniques as the candidate. Description using the same
	technique at the same level of detail enables identification of gaps. A
	gap is simply everything that changes.
	
snippet togaf_architecture-skills-framework_6.3.2_Extensive_Technical_Breadth_with_Technical_Depth_in_One_or_a_Few_Disciplines "6.3.2 Extensive Technical Breadth, with Technical Depth in One or a Few Disciplines"
	
	A lead Enterprise Architect should possess an extensive technical
	breadth through experience in the IT industry. This breadth should be in
	areas of application development and deployment, and in the areas of
	creation and maintenance of the infrastructure to support the complex
	application environment. Current IT environments are heterogeneous by
	nature, and the experienced Enterprise Architect will have skills across
	multiple platforms. Enterprise Architects will have, as a result of
	their careers, skills in at least one discipline that is considered to
	be at the level of a subject matter expert.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.3.2_Timing "6.3.2 Timing"
	
	Timing of compliance activities should be considered with regard to the
	development of the architectures themselves.
	
	Compliance reviews are held at appropriate project milestones or
	checkpoints in the project's lifecycle. Specific checkpoints should be
	included as follows:
	
	-   Development of the architecture itself (ADM compliance)
	-   Implementation of the architecture(s) (architecture compliance)
	
	Architecture project timings for assessments should include:
	
	-   Project initiation
	-   Initial design
	-   Major design changes
	-   Ad hoc
	
	The Architecture Compliance review is typically targeted for a point in
	time when business requirements and the Enterprise Architecture are
	reasonably firm, and the project architecture is taking shape, well
	before its completion.
	
	The aim is to hold the review as soon as practical, at a stage when
	there is still time to correct any major errors or shortcomings, with
	the obvious proviso that there needs to have been some significant
	development of the project architecture in order for there to be
	something to review.
	
	Inputs to the Architecture Compliance review may come from other parts
	of the standard project lifecycle, which may have an impact on timing.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.3_Develop_Target_Data_Architecture_Description "6.3.3 Develop Target Data Architecture Description"
	
	Develop a Target Description for the Data Architecture, to the extent
	necessary to support the Architecture Vision and Target Business
	Architecture. The scope and level of detail to be defined will depend on
	the relevance of the data elements to attaining the Target Architecture,
	and on whether architectural descriptions exist. To the extent possible,
	identify the relevant Data Architecture building blocks, drawing on the
	Architecture Repository (see TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Target
	Architecture.
	
	If appropriate, investigate different Target Architecture alternatives
	and discuss these with stakeholders using the Architecture Alternatives
	and Trade-offs technique (see the TOGAF Standard — ADM Techniques).
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.3.3_Governance_and_Personnel_Scenarios "6.3.3 Governance and Personnel Scenarios"
	
	In terms of the governance and conduct of the Architecture Compliance
	review, and the personnel involved, there are various possible
	scenarios:
	
	-   For smaller-scale projects, the review process could simply take the
	    form of a series of questions that the project architects or project
	    leaders pose to themselves, using the checklists provided below,
	    perhaps collating the answers into some form of project report to
	    management
	
	    The need to conduct such a process is normally included in overall
	    enterprise-wide governance policies.
	
	-   Where the project under review has not involved a practicing or
	    full-time architect to date (for example, in an application-level
	    project), the purpose of the review is typically to bring to bear
	    the architectural expertise of an Enterprise Architecture function
	
	    In such a case, the Enterprise Architecture function would be
	    organizing, leading, and conducting the review, with the involvement
	    of business domain experts. In such a scenario, the review is not a
	    substitute for the involvement of architects in a project, but it
	    can be a supplement or a guide to their involvement. It is probable
	    that a database will be necessary to manage the volume of data that
	    would be produced in the analysis of a large system or set of
	    systems.
	
	-   In most cases, particularly in larger-scale projects, the
	    architecture function will have been deeply involved in, and perhaps
	    leading, the development project under review
	
	    (This is the typical TOGAF scenario.) In such cases, the review will
	    be co-ordinated by the lead Enterprise Architect, who will assemble
	    a team of business and technical domain experts for the review, and
	    compile the answers to the questions posed during the review into
	    some form of report. The questions will typically be posed during
	    the review by the business and technical domain experts.
	    Alternatively, the review might be led by a representative of an
	    Architecture Board or some similar body with enterprise-wide
	    responsibilities.
	
	In all cases, the Architecture Compliance review process needs the
	backing of senior management, and will typically be mandated as part of
	corporate Architecture Governance policies (see 3. Architecture
	Governance). Normally, the enterprise CIO or Enterprise Architecture
	Board (see 4. Architecture Board) will mandate architecture reviews for
	all major projects, with subsequent annual reviews.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.3_Identify_the_Work_to_Reach_the_Target_Considering_Cost_and_Value "6.3.3 Identify the Work to Reach the Target Considering Cost and Value"
	
	Without understanding the work required to reach the target,
	stakeholders will approve the impossible. Why wouldn’t they want
	telepathy helmets and self-manufacturing products if they were free and
	easy?
	
	The Practitioner is accountable for guarding value. A target provides an
	increase in value, at a cost of change. If you do not have an
	understanding of the work to reach the target, how can a Practitioner
	represent to a stakeholder that any target is a good idea and addresses
	the organization’s preferences?
	
snippet togaf_architecture-skills-framework_6.3.3_Method-Driven_Approach_to_Execution "6.3.3 Method-Driven Approach to Execution"
	
	Enterprise Architects approach their job through the consistent use of
	recognized design methods such as the TOGAF Architecture Development
	Method (ADM). Enterprise Architects should have working knowledge of
	more than one design method and be comfortable deploying parts of
	methods appropriate to the situation in which they are working. This
	should be seen in the body of design work the Enterprise Architect has
	produced through repeated successful use of more than one design method.
	Proficiency in methodology use is in knowing what parts of methods to
	use in a given situation, and what methods not to use.
	
snippet togaf_architecture-skills-framework_6.3.4_Full_Project_Scope_Experience "6.3.4 Full Project Scope Experience"
	
	While Enterprise Architects are responsible for design and hand-off of
	the project to implementors, it is vital that they have experience with
	all aspects of a project from design through development, testing,
	implementation, and production. This scope of experience will serve to
	keep Enterprise Architects grounded in the notion of fitness-for-purpose
	and the practical nature of system implementation. The impact of full
	project scope experience should lead the Enterprise Architect to make
	better design decisions, and better inform the trade-offs made in those
	decisions.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.4_Perform_Gap_Analysis "6.3.4 Perform Gap Analysis"
	
	Verify the architecture models for internal consistency and accuracy:
	
	-   Perform trade-off analysis to resolve conflicts (if any) among the
	    different views
	-   Validate that the models support the principles, objectives, and
	    constraints
	-   Note changes to the viewpoint represented in the selected models
	    from the Architecture Repository, and document
	-   Test architecture models for completeness against requirements
	
	Identify gaps between the Baseline and Target, using the gap analysis
	technique as described in the TOGAF Standard — ADM Techniques.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.4_Resolving_Impacts "6.3.4 Resolving Impacts"
	
	Resolving impacts across the EA Landscape is one of the most important
	steps in managing the EA Landscape. The Practitioner explores the impact
	of their candidate architecture against other candidate architectures,
	transition states, the target state, and in-flight Implementation
	Projects. The Practitioner also works with the Enterprise risk
	management process to assess impact to the Enterprise’s risk.
	Altogether, this is one of the most complex activities for an engaged
	high-functioning EA team. It requires a functioning EA Repository and
	solid analytic and reporting software. Every organization is a set of
	constantly changing interconnected parts. All architecture descriptions
	are approximations.
	
	In practical terms, the more complex the EA Landscape is, the more
	difficult, and the more necessary, resolving impacts is. Practitioners
	attempting to manage an EA Landscape without an effective model and
	analytic tooling will struggle to resolve impacts. All impacts need to
	be resolved in terms of value expectation which is based upon clear
	traceability from the work required to realize the Target Architecture
	through the gap to the expected value.
	
	Without care and attention to addressing the impacts across the
	architecture landscape in all of its states, the Practitioner cannot
	have confidence that their candidate architecture best serves the
	Enterprise.
	
	Manage the information volume down to the minimum and constantly chase
	the minimum set of concerns that visibly support value in the eyes of
	key stakeholders.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.5_Approval "6.3.5 Approval"
	
	Without approval by the stakeholders, no implementation governance is
	possible, and no governance of more detailed architecture is possible.
	Without approval, the Practitioner has a documented opinion.
	Stakeholders, SMEs, implementers, and decision-makers also have
	opinions.
	
	Real approval is complex. Real approval should be complex. The
	Practitioner is assisting their organization select the best possible
	path against a set of competing preferences over time. They have taken
	the time to explore options and impacts.
	
	With an approved Target Architecture, the future is defined,
	traceability to the objective is available, and trade-off has been
	performed. Good architecture trade-off explores options, cost, and
	benefits to reach the optimal answer for an organization. Often that
	answer is a compromise between competing interests.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.5_Define_Candidate_Roadmap_Components "6.3.5 Define Candidate Roadmap Components"
	
	Following the creation of a Baseline Architecture, Target Architecture,
	and gap analysis, a data roadmap is required to prioritize activities
	over the coming phases.
	
	This initial Data Architecture roadmap will be used as raw material to
	support more detailed definition of a consolidated, cross-discipline
	roadmap within the Opportunities & Solutions phase.
	
snippet togaf_architecture-skills-framework_6.3.5_Leadership "6.3.5 Leadership"
	
	Communication and team building are key to the successful role of the
	Enterprise Architect. The mix of good technical skill and the ability to
	lead are crucial to the job. The Enterprise Architect should be viewed
	as a leader in the enterprise by the IT organization, the stakeholders
	they serve, and management.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3.6_Minimum_Needed_and_Look_in_the_EA_Repository "6.3.6 Minimum Needed and Look in the EA Repository"
	
	Practitioners start and finish with the contents of the EA Repository.
	
	Whenever analysis, or reporting, is needed, the first stop is the EA
	Repository. Practitioners should apply the following tests:
	
	-   Is the information that will address the question at hand already
	    available?
	-   Is there a superior architecture that guides and constrains the task
	    at hand?
	-   What is the minimum information needed to cover shortfalls in the EA
	    Repository?
	
	It does not matter whether the EA Repository is a well-structured
	modeling and analysis tool or a collection of presentations, start with
	the EA Repository. Gather and analyze the minimum to address the
	question at hand. Questions that do not have a clear line of site to
	understanding the system to address a stakeholder concern are beside the
	point. Good Practitioners are not paralyzed by the potential analysis
	that could be done; they perform the analysis that must be done.
	
snippet togaf_architecture-skills-framework_6.3.6_Personal_and_Professional_Skills "6.3.6 Personal and Professional Skills"
	
	The Enterprise Architect must have strong communications and
	relationship skills. A major task of the Enterprise Architect is to
	communicate complex technical information to all stakeholders of the
	project, including those who do not have a technical background. Strong
	negotiation and problem-solving skills are also required. The Enterprise
	Architect must work with the project management team to make decisions
	in a timely manner to keep projects on track.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.6_Resolve_Impacts_Across_the_Architecture_Landscape "6.3.6 Resolve Impacts Across the Architecture Landscape"
	
	Once the Data Architecture is finalized, it is necessary to understand
	any wider impacts or implications.
	
	At this stage, other architecture artifacts in the Architecture
	Landscape should be examined to identify:
	
	-   Does this Data Architecture create an impact on any pre-existing
	    architectures?
	-   Have recent changes been made that impact the Data Architecture?
	-   Are there any opportunities to leverage work from this Data
	    Architecture in other areas of the organization?
	-   Does this Data Architecture impact other projects (including those
	    planned as well as those currently in progress)?
	-   Will this Data Architecture be impacted by other projects (including
	    those planned as well as those currently in progress)?
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.7_Conduct_Formal_Stakeholder_Review "6.3.7 Conduct Formal Stakeholder Review"
	
	Check the original motivation for the architecture project and the
	Statement of Architecture Work against the proposed Data Architecture.
	Conduct an impact analysis to identify any areas where the Business and
	Application Architectures (e.g., business practices) may need to change
	to cater for changes in the Data Architecture (for example, changes to
	forms or procedures, applications, or database systems).
	
	If the impact is significant, this may warrant the Business and
	Application Architectures being revisited.
	
	Identify any areas where the Application Architecture (if generated at
	this point) may need to change to cater for changes in the Data
	Architecture (or to identify constraints on the Application Architecture
	about to be designed).
	
	If the impact is significant, it may be appropriate to drop into a short
	iteration of the Application Architecture at this point.
	
	Identify any constraints on the Technology Architecture about to be
	designed, refining the proposed Data Architecture only if necessary.
	
snippet togaf_architecture-skills-framework_6.3.7_Skills_and_Experience_in_One_or_More_Industries "6.3.7 Skills and Experience in One or More Industries"
	
	Industry skill and experience will make the task of gathering
	requirements and deciding priorities easier and more effective for the
	Enterprise Architect. Enterprise Architects must understand the business
	processes of the enterprise in which they work, and how those processes
	work with other peer enterprises in the industry. They should also be
	able to spot key trends and correct flawed processes, giving the IT
	organization the capability to lead the enterprise, not just respond to
	requests. The mission of the Enterprise Architect is strategic
	architectural leadership.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.8_Finalize_the_Data_Architecture "6.3.8 Finalize the Data Architecture"
	
	-   Select standards for each of the building blocks, re-using as much
	    as possible from the reference models selected from the Architecture
	    Repository
	-   Fully document each building block
	-   Conduct a final cross-check of overall architecture against business
	    requirements; document the rationale for building block decisions in
	    the architecture document
	-   Document the final requirements traceability report
	-   Document the final mapping of the architecture within the
	    Architecture Repository; from the selected building blocks, identify
	    those that might be re-used, and publish via the Architecture
	    Repository
	-   Finalize all the work products, such as gap analysis
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3.9_Create_Update_the_Architecture_Definition_Document "6.3.9 Create/Update the Architecture Definition Document"
	
	Document the rationale for building block decisions in the Architecture
	Definition Document.
	
	Prepare the Data Architecture sections of the Architecture Definition
	Document, comprising some or all of:
	
	-   Business data model
	-   Logical data model
	-   Data management process model
	-   Data Entity/Business Function matrix
	-   Data interoperability requirements (e.g., XML schema, security
	    policies)
	-   If appropriate, use reports and/or graphics generated by modeling
	    tools to demonstrate key views of the architecture; route the
	    document for review by relevant stakeholders, and incorporate
	    feedback
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.3_Architecture_Compliance_Reviews "6.3 Architecture Compliance Reviews"
	
	An Architecture Compliance review is a scrutiny of the compliance of a
	specific project against established architectural criteria, spirit, and
	business objectives. A formal process for such reviews normally forms
	the core of an Enterprise Architecture Compliance strategy.
	
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6.3_Architecture_Definition_Increments_Table "6.3 Architecture Definition Increments Table"
	
	The technique of creating an Architecture Definition Increments table
	allows the architect to plan a series of Transition Architectures
	outlining the status of the Enterprise Architecture at specified times.
	
	A table should be drawn up, as shown in Figure 6-3 , listing the
	projects and then assigning their incremental deliverables across the
	Transition Architectures.
	
	[]
	
	Figure 6-3: Architecture Definition Increments Table
	
snippet togaf_reference-models_digital-business-reference-model_6.3_Architecture_Domains "6.3 Architecture Domains"
	
	-   Business Architecture defines the business strategy, governance,
	    organization, and key business processes
	-   Data Architecture describes the structure of an organization’s
	    logical and physical data assets and data management resources
	-   Application Architecture provides a blueprint for the individual
	    applications to be deployed, their interactions, and their
	    relationships to the core business processes of the organization
	-   Technology Architecture describes the Digital Architecture and the
	    logical software and hardware infrastructure capabilities and
	    standards that are required to support the deployment of business,
	    data, and applications services; this includes digital services,
	    IoT, social media infrastructure, cloud services, IT infrastructure,
	    middleware, networks, communications, processing, standards, etc.
	
	Table 4 outlines the relationship between the TOGAF Enterprise
	Architecture domains, the DBRM elements and their respective DBRM
	domains.
	
	Table 4: DBRM/TOGAF Architecture Domains
	
	+-------------+-------------+-------------+-------------+-------------+
	| A           | Domain      | DBRM        | DBRM        | DBRM Domain |
	| rchitecture | Element     | Sub-Element | Element     |             |
	| Domain      | Enterprise  |             |             |             |
	|             | Metamodel   |             |             |             |
	|             | Entity      |             |             |             |
	+=============+=============+=============+=============+=============+
	| Business    | Value       | Strategic   | Ecosystem   | Structural  |
	| A           | Streams     | Principles  | and         |             |
	| rchitecture |             | and         | Business    |             |
	|             |             | Business    | Model       |             |
	|             |             | Model       |             |             |
	|             |             |             |             |             |
	|             |             | Business    |             |             |
	|             |             | Ecosystem   |             |             |
	|             |             | Model       |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Strategic   | Operating   |             |
	|             |             | Posture and | Model       |             |
	|             |             | Value       |             |             |
	|             |             | Disciplines |             |             |
	|             |             |             |             |             |
	|             |             | Service     |             |             |
	|             |             | Model       |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Digital     | Customer    | Digital     |
	|             |             | Co          | Focus       |             |
	|             |             | ntext/Needs |             |             |
	|             |             |             |             |             |
	|             |             | Customer    |             |             |
	|             |             | Experience  |             |             |
	|             |             |             |             |             |
	|             |             | Digital     |             |             |
	|             |             | Value       |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Service     | Business    | Operational |
	|             |             | Experience  | Operating   |             |
	|             |             | and         | Environment |             |
	|             |             | Customer    |             |             |
	|             |             | Journey     |             |             |
	|             |             | Maps        |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Value Chain |             |             |
	|             |             | Model and   |             |             |
	|             |             | Value       |             |             |
	|             |             | Streams     |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Business    | Cust        | Business    | Structural  |
	|             | C           | omer-Facing | Capability  |             |
	|             | apabilities | and         | Model       |             |
	|             |             | Market      |             |             |
	|             |             | ing-Focused |             |             |
	|             |             | C           |             |             |
	|             |             | apabilities |             |             |
	|             |             |             |             |             |
	|             |             | Service     |             |             |
	|             |             | Delivery    |             |             |
	|             |             | Enabling    |             |             |
	|             |             | C           |             |             |
	|             |             | apabilities |             |             |
	|             |             |             |             |             |
	|             |             | Operations  |             |             |
	|             |             | Management  |             |             |
	|             |             | C           |             |             |
	|             |             | apabilities |             |             |
	|             |             |             |             |             |
	|             |             | Shared &    |             |             |
	|             |             | Support     |             |             |
	|             |             | C           |             |             |
	|             |             | apabilities |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Course of   | Digital     | Digital     | Operational |
	|             | Action      | Principles  | Enablement  |             |
	|             |             | and         |             |             |
	|             |             | Strategy    |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Agile       |             |             |
	|             |             | Digital     |             |             |
	|             |             | Delivery    |             |             |
	|             |             | Model       |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Business    | Business    | Business    | Operational |
	|             | I           | Information | Operating   |             |
	|             | nformation, | Map         | Environment |             |
	|             | Service     |             |             |             |
	|             | Qualities,  |             |             |             |
	|             | Contracts,  |             |             |             |
	|             | Business    |             |             |             |
	|             | Services    |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Digital     | Digital     | Digital     |
	|             |             | Products    | Enterprise  |             |
	|             |             | and Service |             |             |
	|             |             | Port        |             |             |
	|             |             | folio/Model |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Products,   | Primary     | Business    | Strategy    |
	|             | Processes,  | Business    | Services    |             |
	|             | Events,     | Services    | and         |             |
	|             | Controls    |             | Products    |             |
	|             |             | Core        |             |             |
	|             |             | Business    |             |             |
	|             |             | Products    |             |             |
	|             |             |             |             |             |
	|             |             | Value-Add   |             |             |
	|             |             | Services    |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Business    | Business    | Operational |
	|             |             | Process Map | Operating   |             |
	|             |             |             | Environment |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Policy and  | Ecosystem   | Structural  |
	|             |             | Risk        | and         |             |
	|             |             | Management  | Business    |             |
	|             |             | Framework   | Model       |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Digital     | Digital     | Digital     |
	|             |             | Operations  | Enterprise  |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Digital     | Digital     | Operational |
	|             |             | Governance  | Enablement  |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Functions,  | Org         | Operating   | Structural  |
	|             | O           | anizational | Model       |             |
	|             | rganization | Model       |             |             |
	|             | Unit        |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Actors,     | Business    | Operational |
	|             |             | Roles, and  | Operating   |             |
	|             |             | O           | Environment |             |
	|             |             | rganization |             |             |
	|             |             | Structure   |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | O           | Ecosystem   | Structural  |
	|             |             | rganization | and         |             |
	|             |             | Culture and | Business    |             |
	|             |             | Behavior    | Model       |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Agile       | Digital     | Operational |
	|             |             | Digital     | Enablement  |             |
	|             |             | Delivery    |             |             |
	|             |             | Model       |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Actors,     | Digital     | Digital     | Digital     |
	|             | Roles       | C           | Enterprise  |             |
	|             |             | ompetencies |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             |             | Resource    | Operating   | Structural  |
	|             |             | Model       | Model       |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Data        | Data        | Business    | Business    | Operational |
	| A           | Entities    | Systems and | Operating   |             |
	| rchitecture |             | Data Models | Environment |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Logical     |             |             |             |
	|             | Data        |             |             |             |
	|             | Entities    |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Physical    |             |             |             |
	|             | Data        |             |             |             |
	|             | Components  |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Application | Application | Business    | Business    |             |
	| A           | Services    | Systems and | Operating   |             |
	| rchitecture |             | Data Models | Environment |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Logical     | Digital     | Digital     |             |
	|             | Application | Platforms   | Enablement  |             |
	|             | Components  |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Physical    |             |             |             |
	|             | Application |             |             |             |
	|             | Components  |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Technology  | Technology  |             |             |             |
	| A           | Services    |             |             |             |
	| rchitecture |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Logical     |             |             |             |
	|             | Technology  |             |             |             |
	|             | Components  |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	|             | Physical    |             |             |             |
	|             | Technology  |             |             |             |
	|             | Components  |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.3_Constituents_of_the_Enterprise_Continuum "6.3 Constituents of the Enterprise Continuum"
	
	An overview of the context and constituents of the Enterprise Continuum
	is shown in Figure 6-1 .
	
	[]
	
	Figure 6-1: Enterprise Continuum
	
	The Enterprise Continuum is partitioned into three distinct continua as
	follows:
	
	-   The Enterprise Continuum (see 6.4 Enterprise Continuum in Detail) is
	    the outermost continuum and classifies assets related to the context
	    of the overall Enterprise Architecture
	
	    The Enterprise Continuum classes of assets may influence
	    architectures, but are not directly used during the ADM architecture
	    development. The Enterprise Continuum classifies contextual assets
	    used to develop architectures, such as policies, standards,
	    strategic initiatives, organizational structures, and
	    enterprise-level capabilities. The Enterprise Continuum can also
	    classify solutions (as opposed to descriptions or specifications of
	    solutions). Finally, the Enterprise Continuum contains two
	    specializations, namely the Architecture and Solutions Continua.
	
	-   The Architecture Continuum (see 6.4.1 Architecture Continuum) offers
	    a consistent way to define and understand the generic rules,
	    representations, and relationships in an architecture, including
	    traceability and derivation relationships (e.g., to show that an
	    Organization-Specific Architecture is based on an industry or
	    generic standard)
	
	    The Architecture Continuum represents a structuring of Architecture
	    Building Blocks (ABBs) which are re-usable architecture assets. ABBs
	    evolve through their development lifecycle from abstract and generic
	    entities to fully expressed Organization-Specific Architecture
	    assets. The Architecture Continuum assets will be used to guide and
	    select the elements in the Solutions Continuum (see below). The
	    Architecture Continuum shows the relationships among foundational
	    frameworks (such as the TOGAF framework), common system
	    architectures (such as the III-RM), industry architectures, and
	    Enterprise Architectures. The Architecture Continuum is a useful
	    tool to discover commonality and eliminate unnecessary redundancy.
	
	-   The Solutions Continuum (see 6.4.2 Solutions Continuum) provides a
	    consistent way to describe and understand the implementation of the
	    assets defined in the Architecture Continuum
	
	    The Solutions Continuum defines what is available in the
	    organizational environment as re-usable SBBs. The solutions are the
	    results of agreements between customers and business partners that
	    implement the rules and relationships defined in the architecture
	    space. The Solutions Continuum addresses the commonalities and
	    differences among the products, systems, and services of implemented
	    systems.
	
	The Enterprise Continuum classifies architecture assets that are
	applicable across the entire scope of the Enterprise Architecture. These
	assets, which may be referred to as building blocks, can represent a
	variety of elements that collectively define and constrain the
	Enterprise Architecture. They can take the form of business goals and
	objectives, strategic initiatives, capabilities, policies, standards,
	and principles.
	
	The Enterprise Continuum also contains the Architecture Continuum and
	the Solutions Continuum. Each of these continua is described in greater
	detail in the following sections.
	
snippet togaf_architecture-skills-framework_6.3_Key_Characteristics_of_an_Enterprise_Architect "6.3 Key Characteristics of an Enterprise Architect"
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.3_Phases_B_C_and_D_Developing_the_Architecture "6.3 Phases B, C, and D – Developing the Architecture"
	
	Practitioners often find it surprising that the steps outlined in the
	TOGAF Standard to develop architecture in Phases B, C, and D are
	identical. The steps are identical because the approach to developing an
	architecture, confirming the work product developed fits, and confirming
	approval are identical. These steps are also mandatory. Steps can be
	skipped, but the final outcome could be at risk.
	
	What changes from purpose to purpose, domain to domain, project to
	project, and EA team to EA team is the level of detail, precision, and
	formality. All Practitioners should use the steps as a checklist.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.3_Steps "6.3 Steps"
	
	The level of detail addressed in Phase C will depend on the scope and
	goals of the overall architecture effort.
	
	New data building blocks being introduced as part of this effort will
	need to be defined in detail during Phase C. Existing data building
	blocks to be carried over and supported in the target environment may
	already have been adequately defined in previous architectural work;
	but, if not, they too will need to be defined in Phase C.
	
	The order of the steps in this phase as well as the time at which they
	are formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance. In
	particular, determine whether in this situation it is appropriate to
	conduct Baseline Description or Target Architecture development first,
	as described in the TOGAF Standard — Applying the ADM.
	
	All activities that have been initiated in these steps should be closed
	during the Finalize the Data Architecture step (see 6.3.8 Finalize the
	Data Architecture). The documentation generated from these steps must be
	formally published in the Create/Update the Architecture Definition
	Document step (see 6.3.9 Create/Update the Architecture Definition
	Document).
	
	The steps in Phase C (Data Architecture) are as follows:
	
	-   Select reference models, viewpoints, and tools (see 6.3.1 Select
	    Reference Models, Viewpoints, and Tools)
	-   Develop Baseline Data Architecture Description (see 6.3.2 Develop
	    Baseline Data Architecture Description)
	-   Develop Target Data Architecture Description (see 6.3.3 Develop
	    Target Data Architecture Description)
	-   Perform gap analysis (see 6.3.4 Perform Gap Analysis)
	-   Define candidate roadmap components (see 6.3.5 Define Candidate
	    Roadmap Components)
	-   Resolve impacts across the Architecture Landscape (see 6.3.6 Resolve
	    Impacts Across the Architecture Landscape)
	-   Conduct formal stakeholder review (see 6.3.7 Conduct Formal
	    Stakeholder Review)
	-   Finalize the Data Architecture (see 6.3.8 Finalize the Data
	    Architecture)
	-   Create/update the Architecture Definition Document (see 6.3.9
	    Create/Update the Architecture Definition Document)
	
snippet togaf_guides_microservices-architecture_6.3_The_Vision "6.3 The Vision"
	
	The Architecture Vision includes a high-level description of the final
	architecture that is envisaged.
	
	Like any SOA (of which MSA is a subset), the MSA description uses
	different language, with words such as “microservice”, “composition”,
	and “contract”, and it has different models, such as matrices showing
	use of services by business processes and use of applications by
	services. The Microservice Ontology (https://webprotege.stanford.edu/ –
	requires registration and login) can provide taxonomical and ontological
	assistance with the language of a microservice-based architecture.
	
	Although it may not include the kinds of detailed model produced in
	Phases B, C, and D, the high-level description produced in Phase A will
	reflect the service-oriented nature of the architecture that is
	envisaged.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.3_What_is_the_Current_Reporting_Framework "6.3 What is the Current Reporting Framework?"
	
	Redrawing the existing processes to showcase various interactions
	happening in an enterprise will help identify what should be governed.
	Figure 9 shows possible governance boards that exist in an enterprise to
	manage internal and external interactions. These interactions impact the
	business and hence the EA. These interactions result in exchange of
	information within and outside the enterprise, brokered via different
	mediums. Each kind of information dissemination or consumption could
	enable value or pose risk. The governance framework defines who will
	direct and control what kind of information exchange and when.
	
	[]
	
	Figure 9: External and Internal Interactions Affecting Governance[21]
	
	The governance framework should balance the needs of tactical and
	strategic operations of the enterprise. The enforcement responsibility
	and organizational level where enforcement happens will vary based on
	the charter for the EA Capability. The first step is to confirm the
	existence of existing governance mechanisms as shown in Figure 9, and
	determine which can be leveraged to include EA governance. At times, it
	may be possible to change the charter of an existing governance body to
	include architecture governance. In TOGAF terms, the architecture
	governance body is called the architecture board. The rest of the
	discussion in this chapter applies whether a Leader is creating a new or
	leveraging an existing body.
	
	Governance is comprised of mechanisms, processes, and teams through
	which architects and stakeholders articulate their interests, exercise
	their legal rights, meet their obligations, and mediate their
	differences. The objective is to create a sustainable environment for
	inclusive and responsive processes to achieve the goals of the
	enterprise, mitigating all risks. To govern effectively and efficiently,
	basic policies, principles, and rules should be identified, created, and
	published. Having a set of architecture principles, standards, reference
	architectures, and best practice defined is useful. The principles
	defined should be commensurate with the size, complexity, structure,
	economic significance, and risk profile of the enterprise’s operations.
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.4.1_Architecture_Continuum "6.4.1 Architecture Continuum"
	
	The Architecture Continuum illustrates how architectures are developed
	and evolved across a continuum ranging from Foundation Architectures,
	such as the TOGAF® Series Guide: The TOGAF® Technical Reference Model
	(TRM) through Common Systems Architectures, and Industry Architectures,
	and to an enterprise's own Organization-Specific Architectures.
	
	The arrows in the Architecture Continuum represent the relationship that
	exists between the different architectures in the Architecture
	Continuum. The leftwards direction focuses on meeting enterprise needs
	and business requirements, while the rightwards direction focuses on
	leveraging architectural components and building blocks.
	
	[]
	
	Figure 6-2: Architecture Continuum
	
	The enterprise needs and business requirements are addressed in
	increasing detail from left to right. The architect will typically look
	to find re-usable architectural elements toward the left of the
	continuum. When elements are not found, the requirements for the missing
	elements are passed to the left of the continuum for incorporation.
	Those implementing architectures within their own organizations can use
	the same continuum models specialized for their business.
	
	The four particular architecture types illustrated in Figure 6-2 are
	intended to indicate the range of different types of architecture that
	may be developed at different points in the continuum; they are not
	fixed stages in a process.
	
	Many different types of architecture may occur at points in between
	those illustrated in Figure 6-2 . Although the evolutionary
	transformation continuum illustrated does not represent a formal
	process, it does represent a progression, which occurs at several
	levels:
	
	-   Logical to physical
	-   Horizontal (IT-focused) to vertical (business-focused)
	-   Generalization to specialization
	-   Taxonomy to complete and specific architecture specification
	
	At each point in the continuum, an architecture is designed in terms of
	the design concepts and building blocks available and relevant to that
	point.
	
	The four architectures illustrated in Figure 6-2 represent main
	classifications of potential architectures, and will be relevant and
	familiar to many architects. They are analyzed in detail below.
	
	Foundation Architecture
	
	A Foundation Architecture consists of generic components,
	inter-relationships, principles, and guidelines that provide a
	foundation on which more specific architectures can be built. The TOGAF
	ADM is a process that would support specialization of such Foundation
	Architectures in order to create organization-specific models.
	
	The TOGAF TRM is an example of a Foundation Architecture. It is a
	fundamental architecture upon which other, more specific architectures
	can be based. See the TOGAF® Series Guide: The TOGAF® Technical
	Reference Model (TRM) for more details.
	
	Common Systems Architectures
	
	Common Systems Architectures guide the selection and integration of
	specific services from the Foundation Architecture to create an
	architecture useful for building common (i.e., highly re-usable)
	solutions across a wide number of relevant domains.
	
	Examples of Common Systems Architectures include: a security
	architecture, a management architecture, a network architecture, an
	operations architecture, etc. Each is incomplete in terms of overall
	system functionality, but is complete in terms of a particular problem
	domain (security, manageability, networking, operations, etc.), so that
	solutions implementing the architecture constitute re-usable building
	blocks for the creation of functionally complete operating states of the
	enterprise.
	
	Other characteristics of Common Systems Architectures include:
	
	-   Reflects requirements specific to a generic problem domain
	-   Defines building blocks specific to a generic problem domain
	-   Defines business, data, application, or technology standards for
	    implementing these building blocks
	-   Provides building blocks for easy re-use and lower costs
	
	The TOGAF Integrated Information Infrastructure Reference Model (III-RM)
	— see the TOGAF® Series Guide: The TOGAF Integrated Information
	Infrastructure Reference Model (III-RM) — is a reference model that
	supports describing Common Systems Architecture in the Application
	Domain that focuses on the requirements, building blocks, and standards
	relating to the vision of Boundaryless Information Flow.
	
	Industry Architectures
	
	Industry Architectures guide the integration of common systems
	components with industry-specific components, and guide the creation of
	industry solutions for targeted customer problems within a particular
	industry.
	
	A typical example of an industry-specific component is a data model
	representing the business capabilities and processes specific to a
	particular vertical industry, such as the Retail industry's "Active
	Store" architecture, or an Industry Architecture that incorporates the
	Energistics Data Model (refer to www.energistics.org).
	
	Other characteristics of Industry Architectures include:
	
	-   Reflects requirements and standards specific to a vertical industry
	-   Defines building blocks specific to a generic problem domain
	-   Contains industry-specific logical data and process models
	-   Contains industry-specific applications and process models, as well
	    as industry-specific business rules
	-   Provides guidelines for testing collections of systems
	-   Encourages levels of interoperability throughout the industry
	
	Organization-Specific Architectures
	
	Organization-Specific Architectures describe and guide the final
	deployment of solution components for a particular enterprise or
	extended network of connected enterprises.
	
	There may be a variety of Organization-Specific Architectures that are
	needed to effectively cover the organization's requirements by defining
	the architectures in increasing levels of detail. Alternatively, this
	might result in several more detailed Organization-Specific
	Architectures for specific entities within the global enterprise.
	Breaking down Organization-Specific Architectures into constituent
	pieces is addressed in the TOGAF Standard — Applying the ADM.
	
	The Organization-Specific Architecture guides the final customization of
	the solution, and has the following characteristics:
	
	-   Provides a means to communicate and manage business operations
	    across all four architecture domains
	-   Reflects requirements specific to a particular enterprise
	-   Defines building blocks specific to a particular enterprise
	-   Contains organization-specific business models, data, applications,
	    and technologies
	-   Provides a means to encourage implementation of appropriate
	    solutions to meet business needs
	-   Provides the criteria to measure and select appropriate products,
	    solutions, and services
	-   Provides an evolutionary path to support growth and new business
	    needs
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.4.1_Overview "6.4.1 Overview"
	
	The Architecture Compliance review process is illustrated in Figure 6-2
	.
	
	[]
	
	Figure 6-2: Architecture Compliance Review Process
	
	Note:
	    Another way to gain conformance checks in architecture is through
	    the use of traceability in models and "drill-down" diagrams. In this
	    technique, the Enterprise Architect creates a top-level view of an
	    architecture which the Solution Architects further refine by tracing
	    their elements to the Enterprise Architecture model. These
	    refinements can be managed through so-called "drill-down" diagrams
	    which contain all the refinement elements and their traceability. In
	    this way, conformance can be reviewed and at least partially
	    automated by tools (such as having a script that checks that all
	    Enterprise Architecture elements have refinements in the Solution
	    Architecture).
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.4.1_What_is_Risk "6.4.1 What is Risk?"
	
	The heart of effective risk management is managing to the expected
	objective. Every activity, operational activity, and change activity has
	an element of risk that needs to be managed, and every outcome is
	uncertain. Risk management is about reducing uncertainty. The ISO 31000
	Risk Management standard definition of risk is the “effect of
	uncertainty on objectives”. The effect of uncertainty is any deviation
	from what is expected.
	
	Uncertainty typically involves a deficiency of information and leads to
	inadequate or incomplete knowledge or understanding. In the context of
	risk management, uncertainty exists whenever the knowledge or
	understanding of an event, consequence, or likelihood is inadequate or
	incomplete.
	
	The EA Capability is focused on where the enterprise is going, and its
	path to change. A different future, and the changes required to realize
	such a future, are intertwined with the “effect of uncertainty on
	objectives”. This requires close integration with the enterprise’s ERM
	approach. Inherent in strong risk management is striking the balance
	between positive and negative outcomes resulting from the realization of
	either.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.4.2_Core_Concepts_of_Enterprise_Risk_Management_ERM "6.4.2 Core Concepts of Enterprise Risk Management (ERM)"
	
	The definitive standard for Enterprise Risk Management (ERM) – the ISO
	31000 standard – outlines a risk management approach to aiding
	decision-making by taking account of uncertainty and the effect of this
	uncertainty reaching the enterprise’s objectives. Following the ISO
	31000 standard approach ensures that risk management is embedded deeply
	and firmly in all business activities. It also states that it is a
	continuous lifecycle rather than an isolated activity.
	
	[]
	
	Figure 10: The ISO 31000 Standard Model for Risk Management[23]
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.4.2_Roles "6.4.2 Roles"
	
	The main roles in the process are tabulated below.
	
	+-----------------+-----------------+-----------------+-----------------+
	| No.             | Role            | R               | Notes           |
	|                 |                 | esponsibilities |                 |
	+:================+:================+:================+:================+
	| 1               | Architecture    | To ensure that  | Sponsor and     |
	|                 | Board           | Enterprise      | monitor         |
	|                 |                 | Architectures   | architecture    |
	|                 |                 | are consistent  | activities.     |
	|                 |                 | and support     |                 |
	|                 |                 | overall         |                 |
	|                 |                 | business needs. |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 2               | Project Leader  | Responsible for |                 |
	|                 | (or Project     | the whole       |                 |
	|                 | Board)          | project.        |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 3               | Architecture    | To administer   | More likely to  |
	|                 | Review          | the whole       | be              |
	|                 | Co-ordinator    | architecture    | bu              |
	|                 |                 | development and | siness-oriented |
	|                 |                 | review process. | than            |
	|                 |                 |                 | techn           |
	|                 |                 |                 | ology-oriented. |
	+-----------------+-----------------+-----------------+-----------------+
	| 4               | Lead Enterprise | To ensure that  | An appropriate  |
	|                 | Architect       | the             | architecture    |
	|                 |                 | architecture is | specialist.     |
	|                 |                 | business and    |                 |
	|                 |                 | technically     |                 |
	|                 |                 | coherent and    |                 |
	|                 |                 | future-proof.   |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 5               | Architect       | One of the Lead |                 |
	|                 |                 | Enterprise      |                 |
	|                 |                 | Architect's     |                 |
	|                 |                 | assistants.     |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 6               | Customer        | To ensure that  | Manages that    |
	|                 |                 | business        | part of the     |
	|                 |                 | requirements    | organization    |
	|                 |                 | are clearly     | that will       |
	|                 |                 | expressed and   | depend on the   |
	|                 |                 | understood.     | success of the  |
	|                 |                 |                 | Enterprise      |
	|                 |                 |                 | Architecture.   |
	+-----------------+-----------------+-----------------+-----------------+
	| 7               | Business Domain | To ensure that  | Knows how the   |
	|                 | Expert          | the processes   | business domain |
	|                 |                 | to satisfy the  | operates; may   |
	|                 |                 | business        | also be the     |
	|                 |                 | requirements    | customer.       |
	|                 |                 | are justified   |                 |
	|                 |                 | and understood. |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 8               | Project         | To ensure that  | Members of the  |
	|                 | Principals      | the architects  | customer's      |
	|                 |                 | have a          | organization    |
	|                 |                 | sufficiently    | who have input  |
	|                 |                 | detailed        | to the business |
	|                 |                 | understanding   | requirements    |
	|                 |                 | of the customer | that the        |
	|                 |                 | department's    | architecture is |
	|                 |                 | processes. They | to address.     |
	|                 |                 | can provide     |                 |
	|                 |                 | input to the    |                 |
	|                 |                 | business domain |                 |
	|                 |                 | expert or to    |                 |
	|                 |                 | the architects. |                 |
	+-----------------+-----------------+-----------------+-----------------+
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.4.2_Solutions_Continuum "6.4.2 Solutions Continuum"
	
	The Solutions Continuum represents the detailed specification and
	construction of the architectures at the corresponding levels of the
	Architecture Continuum. At each level, the Solutions Continuum is a
	population of the architecture with reference building blocks — either
	purchased products or built components — that represent a solution to
	the enterprise's business need expressed at that level. A populated
	repository based on the Solutions Continuum can be regarded as a
	solutions inventory or re-use library, which can add significant value
	to the task of managing and implementing improvements to the enterprise.
	
	The Solutions Continuum is illustrated in Figure 6-3 .
	
	[]
	
	Figure 6-3: Solutions Continuum
	
	"Moving to the right" on the Solutions Continuum is focused on providing
	solutions value (i.e., foundation solutions provide value in creating
	common systems solutions; common systems solutions are used to create
	industry solutions; and industry solutions are used to create
	organization-specific solutions). "Moving to the left" on the Solutions
	Continuum is focused on addressing enterprise needs. These two
	viewpoints are significant for a company attempting to focus on its
	needs while maximizing the use of available resources through leverage.
	
	The following subsections describe each of the solution types within the
	Solutions Continuum.
	
	Foundation Solutions
	
	Foundation Solutions are highly generic concepts, tools, products,
	services, and solution components that are the fundamental providers of
	capabilities. Services include professional services — such as training
	and consulting services — that ensure the maximum investment value from
	solutions in the shortest possible time; and support services — such as
	Help Desk — that ensure the maximum possible value from solutions
	(services that ensure timely updates and upgrades to the products and
	systems).
	
	Example Foundation Solutions would include programming languages,
	operating systems, foundational data structures (such as EDIFACT),
	generic approaches to organization structuring, foundational structures
	for organizing IT operations (such as ITIL® or the IT4IT Reference
	Architecture), etc.
	
	Common Systems Solutions
	
	A Common Systems Solution is an implementation of a Common Systems
	Architecture comprised of a set of products and services, which may be
	certified or branded. It represents the highest common denominator for
	one or more solutions in the industry segments that the Common Systems
	Solution supports.
	
	Common Systems Solutions represent collections of common requirements
	and capabilities, rather than those specific to a particular customer or
	industry. Common Systems Solutions provide organizations with operating
	environments specific to operational and informational needs, such as
	high availability transaction processing and scalable data warehousing
	systems. Examples of Common Systems Solutions include an enterprise
	management system product or a security system product.
	
	Computer systems vendors are the typical providers of technology-centric
	Common Systems Solutions. "Software as a service" vendors are typical
	providers of common application solutions. Business process outsourcing
	vendors are typical providers of business capability-centric Common
	Systems Solutions.
	
	Industry Solutions
	
	An Industry Solution is an implementation of an Industry Architecture,
	which provides re-usable packages of common components and services
	specific to an industry.
	
	Fundamental components are provided by Common Systems Solutions and/or
	Foundation Solutions, and are augmented with industry-specific
	components. Examples include: a physical database schema or an
	industry-specific point-of-service device.
	
	Industry Solutions are industry-specific, aggregate procurements that
	are ready to be tailored to an individual organization's requirements.
	
	In some cases an industry solution may include not only an
	implementation of the Industry Architecture, but also other solution
	elements, such as specific products, services, and systems solutions
	that are appropriate to that industry.
	
	Organization-Specific Solutions
	
	An Organization-Specific Solution is an implementation of the
	Organization-Specific Architecture that provides the required business
	capabilities. Because solutions are designed for specific business
	operations, they contain the highest amount of unique content in order
	to accommodate the varying people and processes of specific
	organizations.
	
	Building Organization-Specific Solutions on Industry Solutions, Common
	Systems Solutions, and Foundation Solutions is the primary purpose of
	connecting the Architecture Continuum to the Solutions Continuum, as
	guided by the architects within an enterprise.
	
	An Organization-Specific Solution will be structured in order to support
	specific SLAs to ensure support of the operational systems at desired
	service levels. For example, a third-party application hosting provider
	may offer different levels of support for operational systems. These
	agreements would define the terms and conditions of that support.
	
	Other key factors to be defined within an Organization-Specific Solution
	are the key operating parameters and quality metrics that can be used to
	monitor and manage the environment.
	
	The Enterprise Continuum can provide a key link between architecture,
	development, and operations personnel by allowing them to communicate
	and reach agreement on anticipated operational support requirements.
	Operations personnel can in turn access the Enterprise Continuum to
	obtain information regarding the operation concepts and service support
	requirements of the deployed system.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.4.3_Steps "6.4.3 Steps"
	
	The main steps in the process are tabulated below.
	
	+-----------------+-----------------+-----------------+-----------------+
	| No.             | Action          | Notes           | Who             |
	+:================+:================+:================+:================+
	| 1               | Request         | As mandated by  | Anyone, whether |
	|                 | architecture    | governance      | IT or           |
	|                 | review.         | policies and    | bus             |
	|                 |                 | procedures.     | iness-oriented, |
	|                 |                 |                 | with an         |
	|                 |                 |                 | interest in or  |
	|                 |                 |                 | responsibility  |
	|                 |                 |                 | for the         |
	|                 |                 |                 | business area   |
	|                 |                 |                 | affected        |
	+-----------------+-----------------+-----------------+-----------------+
	| 2               | Identify        |                 | Architecture    |
	|                 | responsible     |                 | Review          |
	|                 | part of         |                 | Co-ordinator    |
	|                 | organization    |                 |                 |
	|                 | and relevant    |                 |                 |
	|                 | project         |                 |                 |
	|                 | principals.     |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 3               | Identify Lead   |                 | Architecture    |
	|                 | Enterprise      |                 | Review          |
	|                 | Architect and   |                 | Co-ordinator    |
	|                 | other           |                 |                 |
	|                 | architects.     |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 4               | Determine scope | Identify which  | Architecture    |
	|                 | of              | other business  | Review          |
	|                 | review.         | un              | Co-ordinator    |
	|                 |                 | its/departments |                 |
	|                 |                 | are involved.   |                 |
	|                 |                 | Understand      |                 |
	|                 |                 | where the       |                 |
	|                 |                 | system fits in  |                 |
	|                 |                 | the corporate   |                 |
	|                 |                 | architecture    |                 |
	|                 |                 | framework.      |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 5               | Tailor          | To address the  | Lead Enterprise |
	|                 | checklists.     | business        | Architect       |
	|                 |                 | requirements.   |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 6               | Schedule        |                 | Architecture    |
	|                 | Architecture    |                 | Review          |
	|                 | Review Meeting. |                 | Co-ordinator    |
	|                 |                 |                 | with            |
	|                 |                 |                 | collaboration   |
	|                 |                 |                 | of Lead         |
	|                 |                 |                 | Enterprise      |
	|                 |                 |                 | Architect       |
	+-----------------+-----------------+-----------------+-----------------+
	| 7               | Interview       | To get          | Lead Enterprise |
	|                 | project         | background and  | Architect       |
	|                 | principals.     | technical       | and/or          |
	|                 |                 | information:    | Architect,      |
	|                 |                 |                 | Project Leader, |
	|                 |                 | -   For         | and Customers   |
	|                 |                 |     internal    |                 |
	|                 |                 |     project: in |                 |
	|                 |                 |     person      |                 |
	|                 |                 | -   For COTS:   |                 |
	|                 |                 |     in person   |                 |
	|                 |                 |     or via RFP  |                 |
	|                 |                 |                 |                 |
	|                 |                 | Use checklists. |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 8               | Analyze         | Review against  | Lead Enterprise |
	|                 | completed       | corporate       | Architect       |
	|                 | checklists.     | standards.      |                 |
	|                 |                 | Identify and    |                 |
	|                 |                 | resolve issues. |                 |
	|                 |                 | Determine       |                 |
	|                 |                 | r               |                 |
	|                 |                 | ecommendations. |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 9               | Prepare         | May involve     | Lead Enterprise |
	|                 | Architecture    | supporting      | Architect       |
	|                 | Compliance      | staff.          |                 |
	|                 | review report.  |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 10              | Present review  | -   To Customer | Lead Enterprise |
	|                 | findings.       | -   To          | Architect       |
	|                 |                 |                 |                 |
	|                 |                 |    Architecture |                 |
	|                 |                 |     Board       |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| 11              | Accept review   |                 | Architecture    |
	|                 | and             |                 | Board           |
	|                 | sign off.       |                 | and Customer    |
	+-----------------+-----------------+-----------------+-----------------+
	| 12              | Send assessment |                 | Lead Enterprise |
	|                 | report/summary  |                 | Architect       |
	|                 | to Architecture |                 |                 |
	|                 | Review          |                 |                 |
	|                 | Co-ordinator.   |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6.4_ADM_Conclusion "6.4 ADM Conclusion"
	
	The TOGAF ADM sets the TOGAF framework apart from every other EA
	frameworks because it contains how to develop and use effective EA. It
	is not a simple nor a linear path around the ADM phases to develop the
	architectures for different purposes. It is, however, filled with tasks
	that are mandatory. Again, to skip tasks undertakes risks.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.4_Architecture_Compliance_Review_Process "6.4 Architecture Compliance Review Process"
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.4_Enterprise_Continuum_in_Detail "6.4 Enterprise Continuum in Detail"
	
	The Enterprise Continuum is intended to represent the classification of
	all assets that are available to an enterprise. It classifies assets
	that exist within the enterprise along with other assets in the wider
	environment that are relevant to the enterprise, such as products,
	research, market factors, commercial factors, business strategies, and
	legislation.
	
	The TOGAF Standard is intended to be a framework for conducting
	Enterprise Architecture and as a result many of the assets that reside
	within the Enterprise Continuum are beyond the specific consideration of
	the TOGAF framework. However, architectures are fundamentally shaped by
	concerns outside the practice of architecture and it is therefore of
	paramount importance that any architecture must accurately reflect
	external context.
	
	The specific contextual factors to be identified and incorporated in an
	architecture will vary from architecture to architecture. However,
	typical contextual factors for architecture development are likely to
	include:
	
	-   External influencing factors, such as regulatory change,
	    technological advances, and competitor activity
	-   Business strategy and context, including mergers, acquisitions, and
	    other business transformation requirements
	-   Current business operations, reflecting deployed architectures and
	    solutions
	
	By observing the context for architecture, it can be seen that
	architecture development activity exists within a wider enterprise
	lifecycle of continuous change.
	
	ABBs are defined in relation to a set of contextual factors and then
	realized through SBBs. SBBs are deployed as live solutions and become a
	part of the baseline operating model of the enterprise. The operating
	model of the enterprise and empiric information on the performance of
	the enterprise shapes the context and requirements for future change.
	Finally, these new requirements for change create a feedback loop to
	influence the creation of new Target Architectures.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.4_Outputs "6.4 Outputs"
	
	The outputs of Phase C (Data Architecture) may include, but are not
	restricted to:
	
	-   Refined and updated versions of the Architecture Vision phase
	    deliverables, where applicable:
	    -   Statement of Architecture Work (see the TOGAF Standard —
	        Architecture Content), updated if necessary
	    -   Validated data principles (see the TOGAF Standard — ADM
	        Techniques), or new data principles (if generated here)
	-   Draft Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Baseline Data Architecture, Approved, if appropriate
	    -   Target Data Architecture, Approved, including:
	        -   Business data model
	        -   Logical data model
	        -   Data management process models
	        -   Data Entity/Business Function matrix
	    -   Views corresponding to the selected viewpoints addressing key
	        stakeholder concerns
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including such Data Architecture
	    requirements as:
	    -   Gap analysis results
	    -   Data interoperability requirements
	    -   Relevant technical requirements that will apply to this
	        evolution of the architecture development cycle
	    -   Constraints on the Technology Architecture about to be designed
	    -   Updated business requirements, if appropriate
	    -   Updated application requirements, if appropriate
	-   Data Architecture components of an Architecture Roadmap (see the
	    TOGAF Standard — Architecture Content)
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase.
	
snippet togaf_guides_microservices-architecture_6.4_Stakeholders_Concerns_and_Business_Requirements "6.4 Stakeholders, Concerns, and Business Requirements"
	
	Phase A is followed by the three TOGAF phases that produce detailed
	architecture descriptions for the Architecture Definition Document. In
	each of these phases, the architect:
	
	-   Develops models of the target system in the light of requirements
	-   Discusses concerns with stakeholders, using views of the system that
	    are derived from the models
	-   Refines the models
	-   Identifies further requirements to be addressed
	
	This is an iterative process, repeated until the architect is satisfied
	that the concerns relevant to the phase have been discussed and the
	requirements relevant to the phase are addressed.
	
	For MSA, the individual business capability and functions that are being
	addressed should be defined in the context of the overall enterprise.
	This is particularly important when considerations of lifecycle and
	governance are addressed; these would only apply to changes to that
	particular business function. The degree of change should be fairly
	small after the initial Baseline Architecture has been created.
	
	The requirements to address, the stakeholders to consult, and the models
	and views to develop vary from one architecture engagement to another.
	In Phase A of each engagement the architect identifies the key
	stakeholders and their concerns, states the key business requirements to
	be addressed, and considers which architecture views and viewpoints to
	develop.
	
snippet togaf_reference-models_digital-business-reference-model_6.4_Summary_Classification_Model "6.4 Summary Classification Model"
	
	In a typical enterprise, many architectures will be described in the
	Architecture Landscape at any point in time. Some architectures will
	address very specific needs; others will be more general. Some will
	address detail; some will provide a big picture.
	
	The Architecture Landscape holds architectural views of the state of the
	enterprise at particular points in time.
	
	Figure 5 depicts the TOGAF summary of the classification model for the
	Architecture Landscape to enable appropriate granularity for the
	definition of the Architecture Landscape.
	
	[Y:\\Cathy]
	
	Figure 5: TOGAF Summary of the Classification Model for the Architecture
	Landscape
	
	The Architecture Landscape is divided into three levels of granularity,
	as follows:
	
	-   The Strategic Architecture provides an organizing framework for
	    operational and change activity and allows for direction-setting at
	    an executive level; it shows a long-term summary view of the entire
	    enterprise
	-   The Segment Architecture provides an organizing framework for
	    operational and change activity and allows for direction-setting and
	    the development of effective architecture roadmaps at a program or
	    portfolio level; it provides more detailed Operating Models for
	    areas within an enterprise
	-   The Capability Architecture provides an organizing framework for
	    change activity and the development of effective architecture
	    roadmaps realizing capability increments; it shows in a more
	    detailed fashion how the enterprise can support a particular unit of
	    capability
	
	Table 5 outlines the relationship between the TOGAF summary
	classification model and DBRM elements.
	
	Table 5: DBRM/TOGAF Summary Classification Model
	
	  Classification Summary Level   DBRM Element                     DBRM Domain
	  ------------------------------ -------------------------------- -------------
	  Strategic Architecture         Customer Focus                   Digital
	                                 Strategic Context                Strategic
	                                 Business Motivation              
	                                 Ecosystem and Business Model     Structural
	  Segment Architecture           Business Services and Products   Strategic
	                                 Operating Model                  Structural
	                                 Business Capability Model        
	                                 Digital Enterprise               Digital
	  Capability Architecture        Business Operating Environment   Operational
	                                 Digital Enablement               
	
	Acronyms & Abbreviations
	
	ADM        Architecture Development Method
	
	AI         Artificial Intelligence
	
	CAS        Complex Adaptive Systems
	
	DBRM       Digital Business Reference Model
	
	IoT        Internet of Things
	
	ITSM       IT Service Management
	
	ML         Machine Learning
	
	------------------------------------------------------------------------
	
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6.4_Transition_Architecture_State_Evolution_Table "6.4 Transition Architecture State Evolution Table"
	
	The technique of creating the Transition Architecture State Evolution
	table allows the architect to show the proposed state of the
	architectures at various levels using the defined taxonomy (e.g., the
	TOGAF TRM).
	
	A table should be drawn, listing the services from the taxonomy used in
	the enterprise, the Transition Architectures, and proposed
	transformations, as shown in Figure 6-4 .
	
	All SBBs should be described with respect to their delivery and impact
	on these services. They should also be marked to show the progression of
	the Enterprise Architecture. In the example, where target capability has
	been reached, this is shown as "new" or "retain"; where capability is
	transitioned to a new solution, this is marked as "transition"; and
	where a capability is to be replaced, this is marked as "replace".
	
	[]
	
	Figure 6-4: Transition Architecture State Evolution Table
	
	Another technique (not shown here) is to use color coding in the matrix;
	for example:
	
	-   Green: service SBB in place (either new or retained)
	-   Yellow: service being transitioned into a new solution
	-   Red: service to be replaced
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.4_What_is_the_Current_Risk_Management_Approach "6.4 What is the Current Risk Management Approach?"
	
	A central role of the EA Capability is to facilitate creation of an
	environment where operational risk can be optimized for maximum business
	benefit and minimum business loss. This requires close integration with
	the enterprise’s risk management approach and an understanding of the
	scope and interests of Enterprise Risk Management (ERM). Tight
	integration with ERM facilitates tilting the EA to improve realization
	of objectives, and the reduction of uncertainty.
	
	Consideration of ERM in the context of governance is driven by the
	foundation that governance is a decision-making process, with a defined
	structure of relationships to direct and control the enterprise to
	achieve stated goals. The process by which direction and control is
	provided should imbibe equality of concern and transparency, protecting
	the rights and interests of the business.
	
	The most common understanding of risk is derived from Information
	Security Management (ISM), which is largely focused on mitigating threat
	and vulnerability. While ISM is important, a broad understanding of ERM
	is required. Detailed understanding of risk and risk management can be
	gained from The Open Group White Paper: TOGAF^(®) and SABSA^(®)
	Integration.[22]
	
	Central questions that need to be answered are:
	
	-   What is the enterprise’s risk appetite?
	-   What is the enterprise’s risk tolerance?
	
	Associated governance questions include:
	
	-   Who agrees to a risk assessment?
	-   Who agrees to a risk treatment plan?
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.1_Data_Structure "6.5.1 Data Structure"
	
	A Data Architecture should be able to handle:
	
	-   Data at rest — data in stores
	-   Data in motion — data in transactions or services/APIs
	-   Data in use — data at the border of the application (e.g., GUI)
	-   Open data — data that the organization provides for public usage and
	    which it is voluntarily or legally required to provide
	
	Different alternate ways of working with these types of Data
	Architecture will be added.
	
	Data Architecture is created by using three metamodel entities: data
	entity, logical data component, and physical data component.
	
	Data entities can be used to create conceptual data models to help the
	IT developers understand the concepts they will be dealing with. Often
	the entity relationship models also contain some requirements on the
	relations (e.g., a customer can only have one address).
	
	Logical data components can be used to create logical data models. Often
	it is important for the IT area to have a clear view of all data that is
	used in the IT environment. The logical data model is often used as a
	requirement on the data stored in applications (at rest), data moved
	between applications (in motion), or data at the user interface of
	applications (data in use).
	
	Physical data components are clusters of logical data components that
	have been implemented by some earlier project (links to, for example,
	XML message, database schemas) or requirements for new implementation
	projects.
	
	All three data entities can be used in data exchange models for data
	passed between/into/out of IS services, logical application components,
	or physical application components.
	
	All data entities can have quality attributes for specific situations.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.5.1_Definition_of_Roles "6.5.1 Definition of Roles"
	
	Roles define those who get to participate and their span of control in
	which tier should be identified and defined. Just like the differences
	in skill set and approach to developing architecture and managing
	architecture, there are differences in execution style between
	architecture governance and management. Architecture management involves
	the development of policies and standards and the recommendation of
	scenarios under which they should be applied. This keeps the governance
	body informed of the context of the impact of architecture in a concise
	format.
	
	There is an important distinction in practice. The governance body
	approves the policies, standards, and rules recommended by the
	architecture management team for the EA Capability, but does not approve
	the architecture. Only the set of stakeholders can approve an
	architecture and roadmap. An EA Capability governance body focuses on
	ensuring the process was followed; the appropriate stakeholders were
	engaged, and the materials produced are internally consistent. It is the
	responsibility of the EA Capability Leader to differentiate the role of
	these functions and identify qualified personnel. It is common that the
	functional head of an EA Capability is not the head of the architecture
	governance body.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.1_Hardware_and_Operating_System_Checklist "6.5.1 Hardware and Operating System Checklist"
	
	1.  What is the project's lifecycle approach?
	2.  At what stage is the project in its lifecycle?
	3.  What key issues have been identified or analyzed that the project
	    believes will drive evaluations of hardware and operating systems
	    for networks, servers, and end-user devices?
	4.  What system capabilities will involve high-volume and/or
	    high-frequency data transfers?
	5.  How does the system design impact or involve end-user devices?
	6.  What is the quantity and distribution (regional and global) of
	    usage, data storage, and processing?
	7.  What applications are affinitized with your project by similarities
	    in data, application services, etc.? To what degree is data
	    affinitized with your project?
	8.  What hardware and operating system choices have been made before the
	    functional design of key elements of the system?
	9.  If hardware and operating system decisions were made outside of the
	    project's control:
	    -   What awareness does the project have of the rationale for those
	        decisions?
	    -   How can the project influence those decisions as system design
	        takes shape?
	10. If some non-standards have been chosen:
	    -   What are the essential business and technical requirements for
	        not using corporate standards?
	    -   Is this supported by a business case?
	    -   Have the assumptions in the business case been subject to
	        scrutiny?
	11. What is your process for evaluating full lifecycle costs of hardware
	    and operating systems?
	12. How has corporate financial management been engaged in evaluation of
	    lifecycle costs?
	13. Have you performed a financial analysis of the supplier?
	14. Have you made commitments to any supplier?
	15. Do you believe your requirements can be met by only one supplier?
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.2.1_Data_Management "6.5.2.1 Data Management"
	
	When an enterprise has chosen to undertake large-scale architectural
	transformation, it is important to understand and address data
	management issues. A structured and comprehensive approach to data
	management enables the effective use of data to capitalize on its
	competitive advantages.
	
	Considerations include:
	
	-   A clear definition of which application components in the landscape
	    will serve as the system of record or reference for enterprise
	    master data
	
	-   Will there be an enterprise-wide standard that all application
	    components, including software packages, need to adopt?
	
	    (In the main, packages can be prescriptive about the data models and
	    may not be flexible.)
	
	-   Clearly understand how data entities are utilized by business
	    capabilities, business functions, processes, and business and
	    application services
	
	-   Clearly understand how and where enterprise data entities are
	    created, stored, transported, and reported
	
	-   What is the level and complexity of data transformations required to
	    support the information exchange needs between applications?
	
	-   What will be the requirement for software in supporting data
	    integration with the enterprise's customers and suppliers (e.g., use
	    of Extract, Transform, Load (ETL) tools during data migration, data
	    profiling tools to evaluate data quality, etc.)?
	
	More guidance on data management can be found in the TOGAF® Series
	Guide: Information Architecture — Customer Master Data Management.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.2.2_Data_Migration "6.5.2.2 Data Migration"
	
	When an existing application is replaced, there will be a critical need
	to migrate data (master, transactional, and reference) to the new
	application. The Data Architecture should identify data migration
	requirements and also provide indicators as to the level of
	transformation, weeding, and cleansing that will be required to present
	data in a format that meets the requirements and constraints of the
	target application. The objective being that the target application has
	quality data when it is populated. Another key consideration is to
	ensure that an enterprise-wide common data definition is established to
	support the transformation.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.2.3_Data_Governance "6.5.2.3 Data Governance"
	
	Data governance considerations ensure that the enterprise has the
	necessary dimensions in place to enable the transformation, as follows:
	
	-   Structure: this dimension pertains to whether the enterprise has the
	    necessary organizational structure and the standards bodies to
	    manage data entity aspects of the transformation
	
	-   Management System: here enterprises should have the necessary
	    management system and data-related programs to manage the governance
	    aspects of data entities throughout its lifecycle
	
	-   People: this dimension addresses what data-related skills and roles
	    the enterprise requires for the transformation
	
	    If the enterprise lacks such resources and skills, the enterprise
	    should consider either acquiring those critical skills or training
	    existing internal resources to meet the requirements through a
	    well-defined learning program.
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.2_Key_Considerations_for_Data_Architecture "6.5.2 Key Considerations for Data Architecture"
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.2_Software_Services_and_Middleware_Checklist "6.5.2 Software Services and Middleware Checklist"
	
	1.  Describe how error conditions are defined, raised, and propagated
	    between application components.
	2.  Describe the general pattern of how methods are defined and arranged
	    in various application modules.
	3.  Describe the general pattern for how method parameters are defined
	    and organized in various application modules. Are [in], [in/out],
	    [out] parameters always specified in the same order? Do Boolean
	    values returned by modules have a consistent outcome?
	4.  Describe the approach that is used to minimize the number of
	    round-trips between client and server calls, particularly for
	    out-of-process calls, and when complex data structures are involved.
	5.  Describe the major data structures that are passed between major
	    system components.
	6.  Describe the major communication protocols that are used between
	    major system components.
	7.  Describe the marshaling techniques that are used between various
	    system components. Describe any specialized marshaling arrangements
	    that are used.
	8.  Describe to what extent the system is designed with stateful and
	    stateless components.
	9.  Describe how and when state is saved for both stateful and stateless
	    components.
	10. Describe the extent to which objects are created, used, and
	    destroyed versus re-used through object pooling.
	11. Describe the extent to which the system relies on threading or
	    critical section coding.
	12. Describe the approach and the internal documentation that is used
	    internally in the system to document the methods, methods arguments,
	    and method functionality.
	13. Describe the code review process that was used to build the system.
	14. Describe the unit testing that has been used to test the system
	    components.
	15. Describe the pre- and post-condition testing that is included in
	    various system modules.
	16. Describe the assertion testing that is included with the system.
	17. Do components support all the interface types they need to support
	    or are certain assumptions made about what types of components will
	    call other components either in terms of language bindings or other
	    forms of marshaling?
	18. Describe the extent to which big-endian or little-endian data format
	    problems need to be handled across different platforms.
	19. Describe if numbers or strings need to be handled differently across
	    different platforms.
	20. Describe whether the software needs to check for floating-point
	    round-off errors.
	21. Describe how time and date functions manage dates so as to avoid
	    improper handling of time and date calculation or display.
	22. Describe what tools or processes have been used to test the system
	    for memory leaks, reachability, or general robustness.
	23. Describe the layering of the systems services software. Describe the
	    general number of links between major system components. Is the
	    system composed of a lot of point-to-point interfaces or are major
	    messaging backbones used instead?
	24. Describe to what extent the system components are either loosely
	    coupled or tightly coupled.
	25. What requirements does the system need from the infrastructure in
	    terms of shared libraries, support for communication protocols, load
	    balancing, transaction processing, system monitoring, naming
	    services, or other infrastructure services?
	26. Describe how the system and system components are designed for
	    refactoring.
	27. Describe how the system or system components rely on common
	    messaging infrastructure versus a unique point-to-point
	    communication structure.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.3.1_Infrastructure_Enterprise_Productivity_Applications "6.5.3.1 Infrastructure (Enterprise Productivity) Applications"
	
	1.  Is there need for capabilities that are not provided through the
	    enterprise's standard infrastructure application products? For
	    example:
	    -   Collaboration
	        -   Application sharing
	        -   Video conferencing
	        -   Calendaring
	        -   Email
	    -   Workflow management
	    -   Publishing/word processing applications
	        -   HTML
	        -   SGML and XML
	        -   Portable document format
	        -   Document processing (proprietary format)
	        -   Desktop publishing
	    -   Spreadsheet applications
	    -   Presentation applications
	        -   Business presentations
	        -   Image
	        -   Animation
	        -   Video
	        -   Sound
	        -   CBT
	        -   Web browsers
	    -   Data management applications
	        -   Database interface
	        -   Document management
	        -   Product data management
	        -   Data warehouses/mart
	    -   Program management applications
	        -   Project management
	        -   Program visibility
	2.  Describe the business requirements for enterprise infrastructure
	    application capabilities that are not met by the standard products.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.3.2_Business_Applications "6.5.3.2 Business Applications"
	
	1.  Are any of the capabilities required provided by standard products
	    supporting one or more line-of-business applications? For example:
	    -   Business acquisition applications
	        -   Sales and marketing
	    -   Engineering applications
	        -   Computer-aided design
	        -   Computer-aided engineering
	        -   Mathematical and statistics analysis
	    -   Supplier management applications
	        -   Supply chain management
	        -   Customer relationship management
	    -   Manufacturing applications
	        -   Enterprise Resource Planning (ERP) applications
	        -   Manufacturing execution systems
	        -   Manufacturing quality
	        -   Manufacturing process engineering
	        -   Machine and adaptive control
	    -   Customer support applications
	        -   Airline logistics support
	        -   Maintenance engineering
	    -   Finance applications
	    -   People applications
	    -   Facilities applications
	    -   Information systems applications
	        -   Systems engineering
	        -   Software engineering
	        -   Web developer tools
	        -   Integrated development environments
	        -   Lifecycle categories
	        -   Functional categories
	        -   Specialty categories
	    -   Computer-aided manufacturing
	    -   e-Business enablement
	    -   Business process engineering
	        -   Statistical quality control
	2.  Describe the process requirements for business application
	    capabilities that are not met by the standard products.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.3.3_Application_Integration_Approach "6.5.3.3 Application Integration Approach"
	
	1.  What integration points (business process/activity, application,
	    data, computing environment) are targeted by this architecture?
	2.  What application integration techniques will be applied (common
	    business objects [Object Request Brokers (ORBs)], standard data
	    definitions [XML, etc.], common user interface
	    presentation/desktop)?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.3_Applications_Checklists "6.5.3 Applications Checklists"
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5.3_Architecture_Repository "6.5.3 Architecture Repository"
	
	As part of this phase, the architecture team will need to consider what
	relevant Data Architecture resources are available in the organization's
	Architecture Repository (see the TOGAF Standard — Architecture Content);
	in particular, generic data models relevant to the organization's
	industry "vertical" sector.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.1_Data_Values "6.5.4.1 Data Values"
	
	1.  What are the processes that standardize the management and use of
	    the data?
	2.  What business process supports the entry and validation of the data?
	    Use of the data?
	3.  What business actions correspond to the creation and modification of
	    the data?
	4.  What business actions correspond to the deletion of the data and is
	    it considered part of a business record?
	5.  What are the data quality requirements required by the business
	    user?
	6.  What processes are in place to support data referential integrity
	    and/or normalization?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.2_Data_Definition "6.5.4.2 Data Definition"
	
	1.  What are the data model, data definitions, structure, and hosting
	    options of purchased applications (COTS)?
	2.  What are the rules for defining and maintaining the data
	    requirements and designs for all components of the information
	    system?
	3.  What shareable repository is used to capture the model content and
	    the supporting information for data?
	4.  What is the physical data model definition (derived from logical
	    data models) used to design the database?
	5.  What software development and data management tools have been
	    selected?
	6.  What data owners have been identified to be responsible for common
	    data definitions, eliminating unplanned redundancy, providing
	    consistently reliable, timely, and accurate information, and
	    protecting data from misuse and destruction?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.3_Security_Protection "6.5.4.3 Security/Protection"
	
	1.  What are the data entity and attribute access rules which protect
	    the data from unintentional and unauthorized alterations,
	    disclosure, and distribution?
	2.  What are the data protection mechanisms to protect data from
	    unauthorized external access?
	3.  What are the data protection mechanisms to control access to data
	    from external sources that temporarily have internal residence
	    within the enterprise?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.4_Hosting_Data_Types_and_Sharing "6.5.4.4 Hosting, Data Types, and Sharing"
	
	1.  What is the discipline for managing sole-authority data as one
	    logical source with defined updating rules for physical data
	    residing on different platforms?
	2.  What is the discipline for managing replicated data, which is
	    derived from operational sole-authority data?
	3.  What tier data server has been identified for the storage of high or
	    medium-critical operational data?
	4.  What tier data server has been identified for the storage of type C
	    operational data?
	5.  What tier data server has been identified for the storage of
	    decision support data contained in a data warehouse?
	6.  What Database Management Systems (DBMSs) have been implemented?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.5_Common_Services "6.5.4.5 Common Services"
	
	1.  What are the standardized distributed data management services
	    (e.g., validation, consistency checks, data edits, encryption, and
	    transaction management) and where do they reside?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4.6_Access_Method "6.5.4.6 Access Method"
	
	1.  What are the data access requirements for standard file, message,
	    and data management?
	2.  What are the access requirements for decision support data?
	3.  What are the data storage and the application logic locations?
	4.  What query language is being used?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.4_Information_Management_Checklists "6.5.4 Information Management Checklists"
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.5_Security_Checklist "6.5.5 Security Checklist"
	
	1.  Security Awareness: Have you ensured that the corporate security
	    policies and guidelines to which you are designing are the latest
	    versions? Have you read them? Are you aware of all relevant
	    computing security compliance and risk acceptance processes?
	    (Interviewer should list all relevant policies and guidelines.)
	2.  Identification/Authentication: Diagram the process flow of how a
	    user is identified to the application and how the application
	    authenticates that the user is who they claim to be. Provide
	    supporting documentation to the diagram explaining the flow from the
	    user interface to the application/database server(s) and back to the
	    user. Are you compliant with corporate policies on accounts,
	    passwords, etc.?
	3.  Authorization: Provide a process flow from beginning to end showing
	    how a user requests access to the application, indicating the
	    associated security controls and separation of duties. This should
	    include how the request is approved by the appropriate data owner,
	    how the user is placed into the appropriate access-level
	    classification profile, how the user ID, password, and access is
	    created and provided to the user. Also include how the user is
	    informed of their responsibilities associated with using the
	    application, given a copy of the access agreement, how to change
	    password, who to call for help, etc.
	4.  Access Controls: Document how the user IDs, passwords, and access
	    profiles are added, changed, removed, and documented. The
	    documentation should include who is responsible for these processes.
	5.  Sensitive Information Protection: Provide documentation that
	    identifies sensitive data requiring additional protection. Identify
	    the data owners responsible for this data and the process to be used
	    to protect storage, transmission, printing, and distribution of this
	    data. Include how the password file/field is protected. How will
	    users be prevented from viewing someone else's sensitive
	    information? Are there agreements with outside parties (partners,
	    suppliers, contractors, etc.) concerning the safeguarding of
	    information? If so, what are the obligations?
	6.  Audit Trails and Audit Logs: Identify and document group accounts
	    required by the users or application support, including operating
	    system group accounts. Identify and document individual accounts
	    and/or roles that have superuser type privileges, what these
	    privileges are, who has access to these accounts, how access to
	    these accounts is controlled, tracked, and logged, and how password
	    change and distribution are handled, including operating system
	    accounts. Also identify audit logs, who can read the audit logs, who
	    can modify the audit logs, who can delete the audit logs, and how
	    the audit logs are protected and stored. Is the user ID obscured in
	    the audit trails?
	7.  External Access Considerations: Will the application be used
	    internally only? If not, are you compliant with corporate external
	    access requirements?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.6_System_Management_Checklist "6.5.6 System Management Checklist"
	
	1.  What is the frequency of software changes that must be distributed?
	2.  What tools are used for software distribution?
	3.  Are multiple software and/or data versions allowed in production?
	4.  What is the user data backup frequency and expected restore time?
	5.  How are user accounts created and managed?
	6.  What is the system license management strategy?
	7.  What general system administration tools are required?
	8.  What specific application administration tools are required?
	9.  What specific service administration tools are required?
	10. How are service calls received and dispatched?
	11. Describe how the system is uninstalled.
	12. Describe the process or tools available for checking that the system
	    is properly installed.
	13. Describe tools or instrumentation that are available that monitor
	    the health and performance of the system.
	14. Describe the tools or process in place that can be used to determine
	    where the system has been installed.
	15. Describe what form of audit logs are in place to capture system
	    history, particularly after a mishap.
	16. Describe the capabilities of the system to dispatch its own error
	    messages to service personnel.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.1_General "6.5.7.1 General"
	
	1.  What other applications and/or systems require integration with
	    yours?
	2.  Describe the integration level and strategy with each.
	3.  How geographically distributed is the user base?
	4.  What is the strategic importance of this system to other user
	    communities inside or outside the enterprise?
	5.  What computing resources are needed to provide system service to
	    users inside the enterprise? Outside the enterprise and using
	    enterprise computing assets? Outside the enterprise and using their
	    own assets?
	6.  How can users outside the native delivery environment access your
	    applications and data?
	7.  What is the life expectancy of this application?
	8.  Describe the design that accommodates changes in the user base,
	    stored data, and delivery system technology.
	9.  What is the size of the user base and their expected performance
	    level?
	10. What performance and stress test techniques do you use?
	11. What is the overall organization of the software and data
	    components?
	12. What is the overall service and system configuration?
	13. How are software and data configured and mapped to the service and
	    system configuration?
	14. What proprietary technology (hardware and software) is needed for
	    this system?
	15. Describe how each and every version of the software can be
	    reproduced and re-deployed over time.
	16. Describe the current user base and how that base is expected to
	    change over the next three to five years.
	17. Describe the current geographic distribution of the user base and
	    how that base is expected to change over the next three to five
	    years.
	18. Describe how many current or future users need to use the
	    application in a mobile capacity or who need to work off-line.
	19. Describe what the application generally does, the major components
	    of the application, and the major data flows.
	20. Describe the instrumentation included in the application that allows
	    for the health and performance of the application to be monitored.
	21. Describe the business justification for the system.
	22. Describe the rationale for picking the system development language
	    over other options in terms of initial development cost versus
	    long-term maintenance cost.
	23. Describe the systems analysis process that was used to come up with
	    the system architecture and product selection phase of the system
	    architecture.
	24. Who besides the original customer might have a use for or benefit
	    from using this system?
	25. What percentage of the users use the system in browse mode versus
	    update mode?
	26. What is the typical length of requests that are transactional?
	27. Do you need guaranteed data delivery or update, or does the system
	    tolerate failure?
	28. What are the up-time requirements of the system?
	29. Describe where the system architecture adheres or does not adhere to
	    standards.
	30. Describe the project planning and analysis approach used on the
	    project.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.2_Processors_Servers_Clients "6.5.7.2 Processors/Servers/Clients"
	
	1.  Describe the client/server Application Architecture.
	2.  Annotate the pictorial to illustrate where application functionality
	    is executed.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.3_Client "6.5.7.3 Client"
	
	1.  Are functions other than presentation performed on the user device?
	2.  Describe the data and process help facility being provided.
	3.  Describe the screen-to-screen navigation technique.
	4.  Describe how the user navigates between this and other applications.
	5.  How is this and other applications launched from the user device?
	6.  Are there any inter-application data and process sharing
	    capabilities? If so, describe what is being shared and by what
	    technique/technology.
	7.  Describe data volumes being transferred to the client.
	8.  What are the additional requirements for local data storage to
	    support the application?
	9.  What are the additional requirements for local software
	    storage/memory to support the application?
	10. Are there any known hardware/software conflicts or capacity
	    limitations caused by other application requirements or situations
	    which would affect the application users?
	11. Describe how the look-and-feel of your presentation layer compares
	    to the look-and-feel of the other existing applications.
	12. Describe to what extent the client needs to support asynchronous
	    and/or synchronous communication.
	13. Describe how the presentation layer of the system is separated from
	    other computational or data transfer layers of the system.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.4_Application_Server "6.5.7.4 Application Server"
	
	1.  Can/do the presentation layer and application layers run on separate
	    processors?
	2.  Can/do the application layer and data access layer run on separate
	    processors?
	3.  Can this application be placed on an application server independent
	    of all other applications? If not, explain the dependencies.
	4.  Can additional parallel application servers be easily added? If so,
	    what is the load balancing mechanism?
	5.  Has the resource demand generated by the application been measured
	    and what is the value? If so, has the capacity of the planned server
	    been confirmed at the application and aggregate levels?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.5_Data_Server "6.5.7.5 Data Server"
	
	1.  Are there other applications which must share the data server? If
	    so, identify them and describe the data and data access
	    requirements.
	2.  Has the resource demand generated by the application been measured
	    and what is the value? If so, has the capacity of the planned server
	    been confirmed at the application and aggregate levels?
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7.6_COTS_where_applicable "6.5.7.6 COTS (where applicable)"
	
	1.  Is the vendor substantial and stable?
	2.  Will the enterprise receive source code upon demise of the vendor?
	3.  Is this software configured for the enterprise's usage?
	4.  Is there any peculiar A&D data or processes that would impede the
	    use of this software?
	    -   Is this software currently available?
	5.  Has it been used/demonstrated for volume/availability/service-level
	    requirements similar to those of the enterprise?
	    -   Describe the past financial and market share history of the
	        vendor.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.7_System_Engineering_Overall_Architecture_Checklists "6.5.7 System Engineering/Overall Architecture Checklists"
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5.8_System_Engineering_Methods_Tools_Checklist "6.5.8 System Engineering/Methods & Tools Checklist"
	
	1.  Do metrics exist for the current way of doing business?
	2.  Has the system owner created evaluation criteria that will be used
	    to guide the project? Describe how the evaluation criteria will be
	    used.
	3.  Has research of existing architectures been done to leverage
	    existing work? Describe the method used to discover and understand.
	    Will the architectures be integrated? If so, explain the method that
	    will be used.
	4.  Describe the methods that will be used on the project:
	    -   For defining business strategies
	    -   For defining areas in need of improvement
	    -   For defining baseline and target business processes
	    -   For defining transition processes
	    -   For managing the project
	    -   For team communication
	    -   For knowledge management, change management, and configuration
	        management
	    -   For software development
	    -   For referencing standards and statements of direction
	    -   For quality assurance of deliverables
	    -   For design reviews and deliverable acceptance
	    -   For capturing metrics
	5.  Are the methods documented and distributed to each team member?
	6.  To what extent are team members familiar with these methods?
	7.  What processes are in place to ensure compliance with the methods?
	8.  Describe the infrastructure that is in place to support the use of
	    the methods through the end of the project and anticipated releases.
	    -   How is consultation and trouble-shooting provided?
	    -   How is training co-ordinated?
	    -   How are changes and enhancements incorporated and cascaded?
	    -   How are lessons learned captured and communicated?
	9.  What tools are being used on the project? (Specify versions and
	    platforms). To what extent are team members familiar with these
	    tools?
	10. Describe the infrastructure that is in place to support the use of
	    the tools through the end of the project and anticipated releases.
	    -   How is consultation and trouble-shooting provided?
	    -   How is training co-ordinated?
	    -   How are changes and enhancements incorporated and cascaded?
	    -   How are lessons learned captured and communicated?
	11. Describe how the project will promote the re-use of its deliverables
	    and deliverable content.
	12. Will the architecture designs "live" after the project has been
	    implemented? Describe the method that will be used to incorporate
	    changes back into the architecture designs.
	13. Were the current processes defined?
	14. Were issues documented, rated, and associated to current processes?
	    If not, how do you know you are fixing something that is broken?
	15. Were existing/planned process improvement activities identified and
	    associated to current processes? If not, how do you know this
	    activity is not in conflict with or redundant to other Statements of
	    Work?
	16. Do you have current metrics? Do you have forecasted metrics? If not,
	    how do you know you are improving something?
	17. What processes will you put in place to gather, evaluate, and report
	    metrics?
	18. What impacts will the new design have on existing business
	    processes, organizations, and information systems? Have they been
	    documented and shared with the owners?
	
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6.5_Approach "6.5 Approach"
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.5_Architecture_Compliance_Review_Checklists "6.5 Architecture Compliance Review Checklists"
	
	The following review checklists provide a wide range of typical
	questions that may be used in conducting Architecture Compliance
	reviews, relating to various aspects of the architecture. The
	organization of the questions includes the basic disciplines of system
	engineering, information management, security, and systems management.
	The checklists are based on material provided by a member of The Open
	Group, and are specific to that organization. Other organizations could
	use the following checklists with other questions tailored to their own
	particular needs.
	
	The checklists provided contain too many questions for any single
	review: they are intended to be tailored selectively to the project
	concerned (see 6.6 Architecture Compliance Review Guidelines). The
	checklists actually used will typically be developed/selected by subject
	matter experts. They are intended to be updated annually by interest
	groups in those areas.
	
	Some of the checklists include a brief description of the Architecture
	Principle that provokes the question, and a brief description of what to
	look for in the answer. These extensions to the checklist are intended
	to allow the intelligent re-phrasing of the questions, and to give the
	user of the checklist a feel for why the question is being asked.
	
	Occasionally the questions will be written, as in RFPs, or in working
	with a senior project architect. More typically they are expressed
	orally, as part of an interview or working session with the project.
	
	The checklists provided here are designed for use in individual
	architecture projects, not for business domain architecture or for
	architecture across multiple projects. (Doing an architecture review for
	a larger sphere of activity, across multiple business processes and
	system projects, would involve a similar process, but the checklist
	categories and their contents would be different.)
	
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6.5_Business_Value_Assessment_Technique "6.5 Business Value Assessment Technique"
	
	A technique to assess business value is to draw up a matrix based on a
	value index dimension and a risk index dimension. An example is shown in
	Figure 6-5 . The value index should include criteria such as compliance
	to principles, financial contribution, strategic alignment, and
	competitive position. The risk index should include criteria such as
	size and complexity, technology, organizational capacity, and impact of
	a failure. Each criterion should be assigned an individual weight.
	
	The index and its criteria and weighting should be developed and
	approved by senior management. It is important to establish the
	decision-making criteria before the options are known.
	
	[]
	
	Figure 6-5: Sample Project Assessment with Respect to Business Value and
	Risk
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6.5_Existing_Governance_Process "6.5 Existing Governance Process"
	
	The process should be documented in such a way that information about
	when and which approval, enforcement, and relief mechanisms should be
	deployed should be as self-explanatory, transparent, and effective as
	needed. In selecting an existing governance body, consider the
	simplicity of process and its effectiveness.
	
	At all levels of the governance process, it is essential that
	measurements, metrics, and rationale for relief be defined in business
	terms. Governing a portfolio by number of machines eliminated does not
	relate itself to a business outcome. Translate to something like cost
	optimization for the same operational capacity.
	
	It is possible for a perception to exist in the enterprise that EA
	exists as an ivory tower or as an overhead organization, especially when
	EA is being re-booted after a failure. To not follow the rules in the
	first paragraph of this chapter would probably provide the reasons for
	such a perception. It is OK to go to market with full awareness and a
	plan for risk mitigation within the context of the enterprise’s appetite
	and tolerance for risk instead of recommending “stoppage” of work
	against a theoretically risk-free approach. It is better to be ahead of
	the curve and influence the selection of better and viable alternatives
	during the feasibility study or initiation of an effort. Define the
	governance process so that it can achieve delivery proactively.
	
	Governance often results in a change, either to current effort or future
	efforts. Organizational and architecture change management should
	account for triggers and provide a timeline to implement the change from
	governance decisions. Imagine opening a faucet for hot water in the
	morning. Other control mechanisms sense the opening of the faucet, and
	it takes a while for the hot water to start flowing out of the faucet –
	flushing out the cold water in the line. Governance operates in a
	similar way at times, and its process should also account for long lead
	times for corrective actions to take effect.
	
	All governance decisions and scope are not the same – for example,
	business architecture decisions will impact operational processes and
	cost, or when the goal has to be restated, scope of impact and
	governance decisions are the same. Nor will the level of decision-making
	– operational to strategic – impact the scope of change.
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.5_The_Enterprise_Continuum_and_the_ADM "6.5 The Enterprise Continuum and the ADM"
	
	The TOGAF ADM describes the process of developing an enterprise-specific
	architecture and an enterprise-specific solution(s) which conform to
	that architecture by adopting and adapting (where appropriate) generic
	architectures and solutions (left to right in the continuum
	classification). In a similar fashion, specific architectures and
	solutions that prove to be credible and effective will be generalized
	for re-use (right to left in the continuum classification).
	
	At relevant places throughout the TOGAF ADM, there are pointers to
	useful architecture assets at the relevant level of generality in the
	continuum classification. These assets can include reference models from
	The Open Group and industries at large.
	
	The TOGAF Library provides reference models for consideration for use in
	developing an organization's architecture.
	
	However, in developing architectures in the various domains within an
	overall Enterprise Architecture, the architect will need to consider the
	use and re-use of a wide variety of different architecture assets, and
	the Enterprise Continuum provides an approach for categorizing and
	communicating these different assets.
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.6.1_Relationships "6.6.1 Relationships"
	
	Each of the three continua contains information about the evolution of
	the architectures during their lifecycle:
	
	-   The Enterprise Continuum provides an overall context for
	    architectures and solutions, and classifies assets that apply across
	    the entire scope of the enterprise
	-   The Architecture Continuum provides a classification mechanism for
	    assets that collectively define the architecture at different levels
	    of evolution from generic to specific
	-   The Solutions Continuum provides the classification for assets to
	    describe specific solutions for the organization that can be
	    implemented to achieve the intent of the architecture
	
	The relationships between the Architecture Continuum and Solutions
	Continuum are shown in Figure 6-4 .
	
	[]
	
	Figure 6-4: Relationships between Architecture and Solutions Continua
	
	The relationship between the Architecture Continuum and the Solutions
	Continuum is one of guidance, direction, and support. For example,
	Foundation Architectures guide the creation or selection of Foundation
	Solutions. Foundation Solutions support the Foundation Architecture by
	helping to realize the architecture defined in the Architecture
	Continuum. The Foundation Architecture also guides development of
	Foundation Solutions, by providing architectural direction,
	requirements, and principles that guide selection, and realization of
	appropriate solutions. A similar relationship exists between the other
	elements of the Enterprise Continuum.
	
	The Enterprise Continuum presents mechanisms to help improve
	productivity through leverage. The Architecture Continuum offers a
	consistent way to understand the different architectures and their
	components. The Solutions Continuum offers a consistent way to
	understand the different products, systems, services, and solutions
	required.
	
	The Enterprise Continuum should not be interpreted as representing
	strictly chained relationships. Organization-Specific Architectures
	could have components from a Common Systems Architecture, and
	Organization-Specific Solutions could contain Foundation Solutions. The
	relationships depicted in Figure 6-1 are an illustration showing
	opportunities for leveraging architecture and solution components.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.6.1_Tailoring_the_Checklists "6.6.1 Tailoring the Checklists"
	
	-   Focus on:
	    -   High risk areas
	    -   Expected (and emergent) differentiators
	-   For each question in the checklist, understand:
	    -   The question itself
	    -   The principle behind it
	    -   What to look for in the responses
	-   Ask subject experts for their views
	-   Fix the checklist questions for your use
	-   Bear in mind the need for feedback to the Architecture Board
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.6.2_Conducting_Architecture_Compliance_Reviews "6.6.2 Conducting Architecture Compliance Reviews"
	
	-   Understand clearly the objectives of those soliciting the review;
	    and stay on track and deliver what was asked for. For example, they
	    typically want to know what is right or wrong with the system being
	    architected; not what is right or wrong with the development
	    methodology used, their own management structure, etc. It is easy to
	    get off-track and discuss subjects that are interesting and perhaps
	    worthwhile, but not what was solicited. If you can shed light and
	    insight on technical approaches, but the discussion is not necessary
	    for the review, volunteer to provide it after the review.
	-   If it becomes obvious during the discussion that there are other
	    issues that need to be addressed, which are outside the scope of the
	    requested review, bring it up with the meeting chair afterwards. A
	    plan for addressing the issues can then be developed in accordance
	    with their degree of seriousness.
	-   Stay "scientific". Rather than: "We like to see large databases
	    hosted on ABC rather than XYZ.", say things like: "The downtime
	    associated with XYZ database environments is much greater than on
	    ABC database environments. Therefore we don't recommend hosting type
	    M and N systems in an XYZ environment."
	-   Ask "open" questions; i.e., questions that do not presume a
	    particular answer.
	-   There are often "hidden agendas" or controversial issues among those
	    soliciting a review, which you probably won't know up-front. A
	    depersonalized approach to the discussions may help bridge the gaps
	    of opinion rather than exacerbate them.
	-   Treat those being interviewed with respect. They may not have built
	    the system "the way it should be", but they probably did the best
	    they could under the circumstances in which they were placed.
	-   Help the exercise become a learning experience for you and the
	    presenters.
	-   Reviews should include detailed assessment activities against the
	    architectures and should ensure that the results are stored in the
	    Enterprise Continuum.
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.6.2_Your_Enterprise "6.6.2 Your Enterprise"
	
	The TOGAF Standard provides a method for you to "architect" the systems
	in your enterprise. Your architecture organization will have to deal
	with each type of architecture described above. For example, it is
	recommended that you have your own Foundation Architecture that governs
	all of your systems. You should also have your own Common Systems
	Architectures that govern major shared systems — such as the networking
	system or management system. You may have your own industry-specific
	architectures that govern the way your systems must behave within your
	industry. Finally, any given department or organization within your
	business may need its own individual Organization-Specific Architecture
	to govern the systems within that department.
	
	Your architecture organization will either adopt or adapt existing
	architectures, or will develop its own architectures from the ground up.
	In either case, the TOGAF Standard is a tool to help. It provides a
	method to assist you in generating/maintaining any type of architecture
	within the Architecture Continuum while leveraging architecture assets
	already defined, internal or external to your organization. The TOGAF
	ADM helps you to re-use architecture assets, making your architecture
	organization more efficient and effective.
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6.6_Architecture_Compliance_Review_Guidelines "6.6 Architecture Compliance Review Guidelines"
	
snippet togaf_architecture-content_6_Enterprise_Continuum_6.6_The_Enterprise_Continuum_and_Your_Organization "6.6 The Enterprise Continuum and Your Organization"
	
	The preceding sections have described the Enterprise Continuum, the
	Architecture Continuum, and the Solutions Continuum. The following
	sections describe the relationships between each of the three continua
	and how these relationships should be applied within your organization.
	
snippet togaf_adm-practitioners_6_Approach_to_the_ADM_6_Approach_to_the_ADM "6 Approach to the ADM"
	
	The TOGAF Architecture Development Method (ADM) is the core of the TOGAF
	Standard. This method sets the TOGAF framework apart from every other EA
	framework because it contains the “how”.
	
	The path through and around the ADM phases to develop architectures for
	different purposes is not simple nor linear. The level of detail and
	specificity of each architecture is different. For instance, to develop
	an Architecture to Support Strategy, all that is needed is to follow a
	path from Phase A through Phase D at the strategic level. Not all the
	steps are executed, but logical entities that drive Business,
	Applications, and Technology Architectures are captured and defined.
	Architecture to Support Strategy provides an end-to-end view of the
	Enterprise and a candidate roadmap to achieve target state. The
	governance model, as articulated in the TOGAF^(®) Leader’s Guide to
	Establishing and Evolving an EA Capability (see Referenced Documents),
	is leveraged to trace the rest of the architectures and their alignment
	to target state.
	
snippet togaf_digital-technology-adoption_6_Architectural_Implication_and_Alignment_to_the_TOGAF_ADM "6 Architectural Implication and Alignment to the TOGAF ADM"
	
	Whenever the aspirational (target) state is related to digital
	technologies, the factors identified need to be analyzed and captured.
	
	For maximizing the impact of DTRA, it should initiate the Architecture
	Vision phase of the ADM cycle to understand where the organization
	currently stands. Based on the outcome of the assessment, and in each
	phase of the ADM cycle, the as-is state and the to-be (target) state of
	business is analyzed, keeping relevant factors in consideration.
	Assessment can be a handy tool to use to re-evaluate, either at the end
	of the ADM cycle or vision of the next cycle to understand where the
	organization stands and the next steps to be undertaken.
	
	[]
	
	Figure 7: Mapping Factors to the TOGAF ADM
	
	Table 2: Architectural Implications
	
	+-----------------------------------+-----------------------------------+
	| ADM Cycle Stages                  | Implications                      |
	+===================================+===================================+
	| Preliminary                       | This phase includes the           |
	|                                   | understanding of enterprise       |
	|                                   | capabilities, architecture        |
	|                                   | frameworks used, and the          |
	|                                   | governance framework for the      |
	|                                   | factors driving the digital       |
	|                                   | technology adoption.              |
	|                                   |                                   |
	|                                   | It is imperative that such        |
	|                                   | details are identified and        |
	|                                   | analyzed to understand the        |
	|                                   | capabilities better as this       |
	|                                   | defines the model for such an     |
	|                                   | adoption. Also, architecture      |
	|                                   | principles must be defined for    |
	|                                   | developing strategic plans. With  |
	|                                   | an emphasis on the DTRA, the      |
	|                                   | objective in this phase is to     |
	|                                   | determine the architecture        |
	|                                   | capability desired by the         |
	|                                   | organization with a focus on      |
	|                                   | digital technology.               |
	+-----------------------------------+-----------------------------------+
	| Phase A: Architecture Vision      | [][]                              |
	|                                   |                                   |
	|                                   | During this phase, the high-level |
	|                                   | vision for the aspirational state |
	|                                   | shall be captured. The            |
	|                                   | identification of stakeholders to |
	|                                   | understand business drivers and   |
	|                                   | concerns, including carrying out  |
	|                                   | readiness assessment, is an       |
	|                                   | important step in this phase. On  |
	|                                   | the basis of the assessment       |
	|                                   | output, appropriate architecture  |
	|                                   | paths can be selected.            |
	+-----------------------------------+-----------------------------------+
	| Phase B: Business Architecture    | [][][]                            |
	|                                   |                                   |
	|                                   | [][]                              |
	|                                   |                                   |
	|                                   | The development of the Target     |
	|                                   | Business Architecture for the     |
	|                                   | strategic vision laid out in      |
	|                                   | Phase A needs to be undertaken in |
	|                                   | this phase. A detailed capability |
	|                                   | assessment, analysis of business  |
	|                                   | drivers and goals, along with     |
	|                                   | capability assessment are         |
	|                                   | important to ensure the           |
	|                                   | architecture is well-defined in   |
	|                                   | the subsequent phases.            |
	+-----------------------------------+-----------------------------------+
	| Phase C: Information Systems      | [][][]                            |
	| Architecture                      |                                   |
	|                                   | [][]                              |
	|                                   |                                   |
	|                                   | As in Phase B, Phase C would      |
	|                                   | include similar steps for         |
	|                                   | Application and Data              |
	|                                   | Architectures. The development of |
	|                                   | the Target Data and Application   |
	|                                   | Architectures for the strategic   |
	|                                   | vision laid out in Phase A needs  |
	|                                   | to be undertaken in this phase. A |
	|                                   | detailed capability assessment,   |
	|                                   | analysis of Data and Application  |
	|                                   | Architecture drivers, gap         |
	|                                   | analysis, and a communication     |
	|                                   | plan are essential to ensure data |
	|                                   | and application components are    |
	|                                   | appropriately addressed in the    |
	|                                   | architecture.                     |
	|                                   |                                   |
	|                                   | ¹ Factor-wise, the focus is on    |
	|                                   | the organization capability in    |
	|                                   | terms of data and                 |
	|                                   | application-related prowess.      |
	+-----------------------------------+-----------------------------------+
	| Phase D: Technology Architecture  | [][][]                            |
	|                                   |                                   |
	|                                   | [][]                              |
	|                                   |                                   |
	|                                   | Phase D would involve an          |
	|                                   | understanding of gaps and         |
	|                                   | analysis for the Technology       |
	|                                   | Architecture; using technology    |
	|                                   | principles to ensure the          |
	|                                   | Technology Architecture is        |
	|                                   | aligned to the digital adoption   |
	|                                   | being undertaken by the           |
	|                                   | enterprise.                       |
	|                                   |                                   |
	|                                   | ² Factors mentioned are focused   |
	|                                   | on the technical prowess of the   |
	|                                   | organization.                     |
	+-----------------------------------+-----------------------------------+
	| Phase E: Opportunities and        | Apart from gaps identified across |
	| Solutions                         | the Business, Data, Application,  |
	|                                   | and Technology domains, there is  |
	|                                   | a need to find the current state  |
	|                                   | of the organization holistically  |
	|                                   | for digital technology adoption.  |
	|                                   |                                   |
	|                                   | Factors identified in this        |
	|                                   | document are pivotal for digital  |
	|                                   | technology adoption. Enterprise   |
	|                                   | Architects must analyze and       |
	|                                   | provide a solutioning approach    |
	|                                   | towards the readiness of these    |
	|                                   | factors for digital technology    |
	|                                   | adoption. The gap identified in   |
	|                                   | key factors identified shall help |
	|                                   | derive the intermittent and       |
	|                                   | target states with precision.     |
	+-----------------------------------+-----------------------------------+
	| Phase F: Migration Planning       | []                                |
	|                                   |                                   |
	|                                   | During this phase of the ADM in   |
	|                                   | the digital adoption, steps need  |
	|                                   | to be undertaken to ensure        |
	|                                   | implementation and migration      |
	|                                   | planning are aligned with the     |
	|                                   | enterprise’s approach and vision  |
	|                                   | for the Digital Transformation.   |
	|                                   |                                   |
	|                                   | The implementation and migration  |
	|                                   | strategy along with the breakdown |
	|                                   | of the implementation plan is     |
	|                                   | crucial to ensure business value  |
	|                                   | is delivered via proper           |
	|                                   | implementation.                   |
	+-----------------------------------+-----------------------------------+
	| Phase G: Implementation           | Ensuring conformance of the       |
	| Governance                        | expected target state, the Target |
	|                                   | Architecture, is a key objective  |
	|                                   | of this phase. For the digital    |
	|                                   | adoption being undertaken,        |
	|                                   | adherence to the implementation   |
	|                                   | plan is ensured via compliance    |
	|                                   | and reviews.                      |
	|                                   |                                   |
	|                                   | Note: Governance here implies the |
	|                                   | appropriateness of the            |
	|                                   | implementation approach. This is  |
	|                                   | not to be confused with the       |
	|                                   | factor “Governance and            |
	|                                   | Compliance” which caters to the   |
	|                                   | Application, Data, and Technology |
	|                                   | Architecture phases of the ADM.   |
	+-----------------------------------+-----------------------------------+
	| Phase H: Architecture Change      | With any digital adoption there   |
	| Management                        | are bound to be changes expected  |
	|                                   | to the architecture as the        |
	|                                   | maturity and landscape evolve. It |
	|                                   | is paramount to ensure that the   |
	|                                   | architecture change cycle is      |
	|                                   | maintained for meeting changing   |
	|                                   | requirements in any enterprise.   |
	|                                   | Management of this change is an   |
	|                                   | essential step for any successful |
	|                                   | digital technology adoption.      |
	+-----------------------------------+-----------------------------------+
	| Requirements Management           | For digital adoption,             |
	|                                   | requirements management needs to  |
	|                                   | be sustained and operated across  |
	|                                   | all ADM phases. Changes in        |
	|                                   | requirements need to be addressed |
	|                                   | with requirements impact          |
	|                                   | statements. Furthermore, the      |
	|                                   | changes shall be implemented in   |
	|                                   | the relevant ADM phase in the     |
	|                                   | next cycle.                       |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_INDEX_6_Architecture_Compliance "-   6. Architecture Compliance"
	    -   6.1 Introduction
	    -   6.2 Terminology: The Meaning of Architecture Compliance
	    -   6.3 Architecture Compliance Reviews
	        -   6.3.1 Purpose
	        -   6.3.2 Timing
	        -   6.3.3 Governance and Personnel Scenarios
	    -   6.4 Architecture Compliance Review Process
	        -   6.4.1 Overview
	        -   6.4.2 Roles
	        -   6.4.3 Steps
	    -   6.5 Architecture Compliance Review Checklists
	        -   6.5.1 Hardware and Operating System Checklist
	        -   6.5.2 Software Services and Middleware Checklist
	        -   6.5.3 Applications Checklists
	            -   6.5.3.1 Infrastructure (Enterprise Productivity)
	                Applications
	            -   6.5.3.2 Business Applications
	            -   6.5.3.3 Application Integration Approach
	        -   6.5.4 Information Management Checklists
	            -   6.5.4.1 Data Values
	            -   6.5.4.2 Data Definition
	            -   6.5.4.3 Security/Protection
	            -   6.5.4.4 Hosting, Data Types, and Sharing
	            -   6.5.4.5 Common Services
	            -   6.5.4.6 Access Method
	        -   6.5.5 Security Checklist
	        -   6.5.6 System Management Checklist
	        -   6.5.7 System Engineering/Overall Architecture Checklists
	            -   6.5.7.1 General
	            -   6.5.7.2 Processors/Servers/Clients
	            -   6.5.7.3 Client
	            -   6.5.7.4 Application Server
	            -   6.5.7.5 Data Server
	            -   6.5.7.6 COTS (where applicable)
	        -   6.5.8 System Engineering/Methods & Tools Checklist
	    -   6.6 Architecture Compliance Review Guidelines
	        -   6.6.1 Tailoring the Checklists
	        -   6.6.2 Conducting Architecture Compliance Reviews
	
snippet togaf_ea-capability-and-governance_6_Architecture_Compliance_6_Architecture_Compliance "6. Architecture Compliance"
	
	  -- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 6.1 Introduction | 6.2 Terminology: The Meaning of Architecture Compliance | 6.3 Architecture Compliance Reviews | 6.4 Architecture Compliance Review Process | 6.5 Architecture Compliance Review Checklists | 6.6 Architecture Compliance Review Guidelines
	  -- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter provides guidelines for ensuring project compliance to the
	architecture.
	
snippet togaf_togaf-leaders-guide_6_Architecture_Governance_6_Architecture_Governance "6 Architecture Governance"
	
	The development and use of EA must be governed.
	
	This Guide now turns to the enterprise’s approach to decision-making,
	direction, and control. It discusses the process of governance, roles,
	and responsibilities as they pertain to the architecture process model
	in Chapter 10 (Process Model). Governance (decision-making, direction
	setting, and control) is addressed so early in this Guide to have
	clarity on the objectives. From this point onward, every action a Leader
	takes should be validated against this objective to stay relevant and
	focused on the outcome – not the ceremony of activities to be performed.
	A Leader should be very clear on what to report and to whom.
	
	It is likely that the existing governance and support models of an
	enterprise will need to change to obtain the most value from the EA
	Capability. Understanding the enterprise’s required architecture
	governance requires the following questions to be answered:
	
	-   What is the reporting framework?
	-   What is the decision-making approach?
	-   What is the risk management approach?
	-   What is the enterprise’s approach to governance?
	
	It is important to understand that governance applies to the development
	of a target architecture, how that target architecture governs change,
	and how the target architecture evolves.
	
snippet togaf_business-architecture_business-models_6_A_Structured_Approach_for_Business_Model_Innovation "6 A Structured Approach for Business Model Innovation"
	
	In order to steer the business in the face of constant change or to
	intentionally disrupt the market, business strategists are starting to
	use business models to identify new opportunities for innovation. Like
	other architecture disciplines, a designed structure that helps align
	leaders on the big shifts in revenue streams, costs, customer segments,
	and value propositions will improve the chances of success for any new
	strategy formulation.
	
	Classically, business innovation has focused on product development or
	on process optimization. Businesses are increasingly recognizing that
	there are other aspects of the enterprise that offer more lucrative
	opportunities for improvement. For example, revenue streams (moving
	customers to subscription models rather than one-time purchases), value
	propositions (emphasizing service rather than just the physical
	product), cost structures (streamlining the supply chain), or channels
	(moving to online channels and reducing the physical footprint).
	Business model analysis enables this kind of innovation by explicitly
	calling out other aspects of the business around which more significant
	opportunities to improve business outcomes may exist.
	
	Business model innovation involves taking a proposed business model or
	models from ideation to implementation in line with an overall business
	strategy. Using a design-oriented approach, business model innovators
	first construct observations about their environment and the
	organization’s position within that environment, including a description
	of the current-state business model. Then they develop and test a set of
	hypotheses using alternative future-state business models. They may
	design working prototypes of those business models in order to test and
	validate assumptions.
	
	Most importantly, business model innovators use test results to confirm
	or reject the hypotheses and adjust or iterate the business model
	prototypes accordingly. Finally, they select the optimal business model
	(or models, as required to address different customer groups and value
	propositions within a single business) and describe them in sufficient
	detail through the Enterprise Architecture to support planning,
	development, and deployment.
	
	While it might be a relatively easy task to conceive a new business
	model, implementing it and then continuously adapting it are not so
	easy. However, in the current environment of constant and rapid change,
	implementation and adaptation are exactly where successful organizations
	need to excel. It is not sufficient to establish a business model and
	then stop there; companies must constantly re-evaluate and redefine
	basic precepts including:
	
	-   What the company currently does
	-   How the company does it
	-   What the company could do
	-   How the company could do it
	-   With whom the company should do it
	-   How each piece interacts with parts of the company’s business
	    ecosystem and the world at large^([5])
	
	The last point is particularly significant. When constructing a business
	model, organizations should ensure that they design and build all
	elements of that business model for agility so as to enable the business
	to thrive in a state of constant motion.
	
snippet togaf_business-architecture_business-scenarios_6_Business_Scenarios_and_the_TOGAF_ADM "6 Business Scenarios and the TOGAF ADM"
	
	Business Scenarios figure most prominently in the initial phase of the
	TOGAF ADM cycle, Phase A: Architecture Vision, when they are used to
	define relevant business requirements, and to build consensus with
	business management and other stakeholders. They are also used in the
	Business Architecture phase to derive the characteristics of the
	architecture directly from the high-level requirements of the business.
	
	The business requirements are referred to throughout all phases of an
	ADM lifecycle, as part of the TOGAF ADM Requirements Management,
	illustrated in Figure 4.
	
	[]
	
	Figure 4: Relevance of Requirements throughout the TOGAF ADM
	
	Business Scenarios can also be used in any ADM phase, if there is a need
	to derive requirements. For example, they can be used in the Preliminary
	Phase to define requirements for establishing an Enterprise Architecture
	capability.
	
	Because business requirements are important throughout all phases of the
	ADM cycle, the Business Scenario technique has an important role to play
	in the TOGAF ADM, by ensuring that the business requirements themselves
	are complete and correct.
	
snippet togaf_adm_INDEX_6_C_Information_Systems_Architectures_Data_Architecture "-   6. Phase C: Information Systems Architectures — Data Architecture"
	    -   6.1 Objectives
	    -   6.2 Inputs
	        -   6.2.1 Reference Materials External to the Enterprise
	        -   6.2.2 Non-Architectural Inputs
	        -   6.2.3 Architectural Inputs
	    -   6.3 Steps
	        -   6.3.1 Select Reference Models, Viewpoints, and Tools
	            -   6.3.1.1 Determine Overall Modeling Process
	            -   6.3.1.2 Identify Required Catalogs of Data Building
	                Blocks
	            -   6.3.1.3 Identify Required Matrices
	            -   6.3.1.4 Identify Required Diagrams
	            -   6.3.1.5 Identify Types of Requirement to be Collected
	        -   6.3.2 Develop Baseline Data Architecture Description
	        -   6.3.3 Develop Target Data Architecture Description
	        -   6.3.4 Perform Gap Analysis
	        -   6.3.5 Define Candidate Roadmap Components
	        -   6.3.6 Resolve Impacts Across the Architecture Landscape
	        -   6.3.7 Conduct Formal Stakeholder Review
	        -   6.3.8 Finalize the Data Architecture
	        -   6.3.9 Create/Update the Architecture Definition Document
	    -   6.4 Outputs
	    -   6.5 Approach
	        -   6.5.1 Data Structure
	        -   6.5.2 Key Considerations for Data Architecture
	            -   6.5.2.1 Data Management
	            -   6.5.2.2 Data Migration
	            -   6.5.2.3 Data Governance
	        -   6.5.3 Architecture Repository
snippet togaf_adm_6_C_Information_Systems_Architectures_Data_Architecture_6_C_Information_Systems_Architectures_Data_Architecture "6. Phase C: Information Systems Architectures — Data Architecture"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 6.1 Objectives | 6.2 Inputs | 6.3 Steps | 6.4 Outputs | 6.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the Data Architecture part of Phase C.
	
snippet togaf_architecture-content_INDEX_6_Enterprise_Continuum "-   6. Enterprise Continuum"
	    -   6.1 Overview
	    -   6.2 Enterprise Continuum and Architecture Re-Use
	    -   6.3 Constituents of the Enterprise Continuum
	    -   6.4 Enterprise Continuum in Detail
	        -   6.4.1 Architecture Continuum
	            -   Foundation Architecture
	            -   Common Systems Architectures
	            -   Industry Architectures
	            -   Organization-Specific Architectures
	        -   6.4.2 Solutions Continuum
	            -   Foundation Solutions
	            -   Common Systems Solutions
	            -   Industry Solutions
	            -   Organization-Specific Solutions
	    -   6.5 The Enterprise Continuum and the ADM
	    -   6.6 The Enterprise Continuum and Your Organization
	        -   6.6.1 Relationships
	        -   6.6.2 Your Enterprise
snippet togaf_architecture-content_6_Enterprise_Continuum_6_Enterprise_Continuum "6. Enterprise Continuum"
	
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 6.1 Overview | 6.2 Enterprise Continuum and Architecture Re-Use | 6.3 Constituents of the Enterprise Continuum | 6.4 Enterprise Continuum in Detail | 6.5 The Enterprise Continuum and the ADM | 6.6 The Enterprise Continuum and Your Organization
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_reference-models_government-reference-model_6_Health_and_Community_Wellbeing "6 Health and Community Wellbeing"
	
	Health and Community Wellbeing encompasses medical and nursing
	governance, strategy and care services provided to individuals and
	families, research and the provision of hospital and community services
	to safeguard mental and physical health.
	
	[]
	
	Figure 6: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Health and Community Wellbeing Sector
	
snippet togaf_master-data-management_6_Integration_Methodologies "6 Integration Methodologies"
	
snippet togaf_adm-techniques_INDEX_6_Migration_Planning_Techniques "-   6. Migration Planning Techniques"
	    -   6.1 Implementation Factor Catalog
	    -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	    -   6.3 Architecture Definition Increments Table
	    -   6.4 Transition Architecture State Evolution Table
	    -   6.5 Business Value Assessment Technique
snippet togaf_adm-techniques_6_Migration_Planning_Techniques_6_Migration_Planning_Techniques "6. Migration Planning Techniques"
	
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 6.1 Implementation Factor Catalog | 6.2 Consolidated Gaps, Solutions, & Dependencies Matrix | 6.3 Architecture Definition Increments Table | 6.4 Transition Architecture State Evolution Table | 6.5 Business Value Assessment Technique
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter contains a number of techniques used to support migration
	planning in Phases E and F.
	
snippet togaf_guides_microservices-architecture_6_Phase_A_Architecture_Vision "6 Phase A: Architecture Vision"
	
	The TOGAF Architecture Vision phase is concerned with establishing the
	architecture project and obtaining approval to proceed.
	
	This phase captures the scope of the architectural initiative, which
	depends on the nature of the project and the level of detail of the
	implementation specification. It creates a compelling vision of what the
	organization will have at end-of-job, after all the projects necessary
	to instantiate the architecture have been completed. And it identifies
	the key stakeholders, concerns, and business requirements.
	
	It must be noted that an MSA will only address one layer of an overall
	system or Enterprise Architecture. For example, the requirements for
	independence and self-containment which characterize a microservice
	mandate that any requirements for, for example, orchestration or
	choreography must take place at the application layer. Generally, an
	Enterprise Architecture will exist at a level substantially higher than
	the MSA.
	
	At the enterprise level, we would expect that the Enterprise
	Architecture team would have developed a Strategic Architecture that
	gives a summary formal description of the enterprise, providing an
	organizing framework for operational and change activity, and an
	executive-level, long-term view for direction-setting. This might, for
	example, identify particular segments where microservices/cloud-native
	approaches should be used, and call for use of standards for interaction
	between segments, but it is highly unlikely to specify particular
	microservices or groups of microservices, or to prescribe a detailed
	infrastructure to support those microservices. The architect could then
	develop Segment Architectures, each of which gives a detailed, formal
	description of areas within an enterprise, used at the program or
	portfolio level to organize and align change activity. Below these
	Segment Architectures are the individual Capability Architectures, where
	the MSA layers would be expected to reside. This concept is depicted in
	Figure 5.
	
	[]
	
	Figure 5: Scoping the Enterprise Architecture
	
snippet togaf_architecture-skills-framework_6_Role_and_Skills_of_the_Enterprise_Architect "6 Role and Skills of the Enterprise Architect"
	
	Of all the roles listed above, the one that needs particularly detailed
	analysis and definition is, of course, the central role of Enterprise
	Architect. As explained above, “Enterprise Architecture” and “Enterprise
	Architect” are terms that are very widely used but very poorly defined
	in industry today, denoting a wide variety of practices and skills
	applied in a wide variety of architecture domains.
	
	This chapter therefore explores in some detail the characteristics of
	the role of Enterprise Architect, and some key skill requirements,
	whatever the particular architecture domain (Enterprise Architecture,
	Business Architecture, Data Architecture, Application Architecture,
	Technology Architecture, etc.).
	
snippet togaf_reference-models_digital-business-reference-model_6_TOGAF_Standard_Adoption "6 TOGAF Standard Adoption"
	
snippet togaf_business-architecture_business-capabilities_6_Using_Business_Capability_Maps_with_the_TOGAF_Standard "6 Using Business Capability Maps with the TOGAF Standard"
	
	Business capabilities and business capability mapping are both core
	features of the TOGAF Standard, 10^(th) Edition (see Referenced
	Documents). We see them introduced early in the Preliminary Phase as
	part of the process to Define and Establish Enterprise Architecture Team
	and Organization (see the TOGAF Standard – Architecture Development
	Method) and determine existing enterprise and business capability.
	Business Capability Management (the process for determining what
	business capabilities are required to deliver business value) is also
	identified as a focus area for coordination with the TOGAF Standard.
	
	In Phase A (Architecture Vision), the architect starts to identify the
	required business capabilities that the enterprise must possess to act
	on its strategic priorities (see the TOGAF Standard – Architecture
	Development Method). These business capability requirements, documented
	using a Business Capability Map, are then used to create a high-level
	view of the Baseline and Target Architectures.
	
	A detailed assessment of any business capability gaps belongs in the
	subsequent Phase B (Business Architecture). This is where heat mapping
	is applied to identify and analyze those gaps. Suggested heat mapping
	perspectives include maturity, effectiveness, performance, and the value
	or cost of each capability to the business.
	
	In the TOGAF Standard – Architecture Development Method (Applying
	Business Capabilities), the business capabilities are mapped back to the
	organizational units, value streams, information systems, and strategic
	plans within the scope of the Enterprise Architecture project. This
	relationship mapping provides greater insight into the alignment and
	optimizations of each of these domains.
	
snippet togaf_business-architecture_information-mapping_6_Using_Information_Maps_with_the_TOGAF_ADM "6 Using Information Maps with the TOGAF ADM"
	
	The role of Information Mapping for the Enterprise Architect applying
	the TOGAF Architecture Development Method (ADM) builds from the sections
	above, with a similar objective as other Business Architecture
	artifacts:
	
	-   Phase A introduces the subject and alerts the architect to find
	    existing Information Maps in the context of critical business terms,
	    as well as existing relationships between information and other core
	    artifacts such as business capability maps
	-   Phase B puts the approach in this Guide into action, building
	    additional information concepts, relationships, and linkage to
	    elements in other business artifacts as needed for the scope of the
	    Enterprise Architecture effort
	-   Phases C and D translate information, where possible, into data
	    models and capture information tied to other critical elements, such
	    as technology services, applications, and logical attributes driving
	    design
	-   Phase E may involve updating the Business Architecture, which could
	    mean updating the Information Map
	
snippet togaf_business-architecture_organization-mapping_6_Using_Organization_Maps_with_the_TOGAF_Standard "6 Using Organization Maps with the TOGAF Standard"
	
	To the Business Architect focused solely on blueprints for the business,
	an organization map can be a pure business construct articulating the
	relationships between the primary entities that make up the enterprise,
	its partners, and stakeholders. To the Enterprise Architect, for whom
	Business Architecture is a phase to fully characterize business needs
	and concerns to then be addressed by technologies, an organization map
	is a means to an end of identifying stakeholders for solutions resulting
	from the architecture phases.
	
	With the definition of a stakeholder as an individual, team,
	organization, or class thereof, having an interest in a system, the
	TOGAF framework focuses on the organizational understanding needed to
	drive the focus and scope of Enterprise Architecture,[4] as well as
	identifying stakeholders key to the acceptance and use of technology
	solutions. The organization map of the Business Architect also relates
	to TOGAF operating issues such as business actors, roles, or processes,
	in the context of using technology solutions.
	
	The TOGAF framework supports the use of organization maps in both
	contexts, with the introduction of the topic in Phase A and Phase B. In
	Phase A, the architect searches for and uses existing organization
	descriptions, even if only in the form of conventional organizational
	charts. In Phase B, the architect builds out the organization map with
	the detail and relationships to other views needed to ensure the
	business needs are understood. The metamodel also introduces the
	organization entity with relationships to other entities, using the term
	organizational unit. This entity has relationships to others such as
	delivering business capabilities, delivering products, and realizing
	business functions.
	
	Applying this guide, the Enterprise Architect can draw a much richer
	relationship between organizational entities, business capabilities, and
	information concepts to shape the path for implementing systems,
	applications, data models, and infrastructure. This blueprint, such as
	the general examples in Chapter 5 or the applied examples in Chapter 7,
	guides how a business capability gap that might be partly addressed by a
	new or refreshed technology also relates to the organizational elements
	that may call out critical stakeholders, and the key information
	concepts that should be supported by the technology solution. Note the
	caveat “partly” addresses another key role for developing Business
	Architecture before designing solutions, that very few business problems
	can be addressed by technology alone. As in the associated TOGAF^(®)
	Series Guides for Business Capabilities, Information Mapping, and Value
	Streams, (see Referenced Documents), an organization map that is well
	thought out and then linked to those other domains will help ensure that
	the real business problem is solved with the best combination of process
	changes, roles and responsibilities, data capture, and technologies
	enabling them through applications and infrastructure.
	
snippet togaf_guides_microservices-architecture_7.1_Business_Function_Decomposition "7.1 Business Function Decomposition"
	
	A business function can be decomposed into its constituent parts in a
	similar fashion to how the enterprise is decomposed into a full
	Enterprise Architecture (refer to the TOGAF Standard, Phase B: Business
	Architecture).
	
	-   Business Capability Mapping
	
	Identifies, categorizes, and decomposes the capabilities required for
	the function to have the ability to deliver value to one or more
	stakeholders. This essentially defines the services, operations,
	products, and other outputs that a business function needs to deliver to
	achieve its purpose.
	
	-   Information Mapping
	
	Collecting the information concepts and their relationships that matter
	most to the business.
	
	-   Organization Mapping
	
	In an MSA Business Architecture there are two goals: the first is to
	establish the position and role of the business function within the
	enterprise, and the second is to describe the internal organization of
	the business function. Normally these can be established once for the
	business function and re-used for future iterations.
	
	-   Value Stream Mapping
	
	The value stream is the stream for the business function putting the
	stream in the context of value to the enterprise as a stakeholder. For
	an MSA the value stream artifacts illustrate how a function delivers
	value in the context of the enterprise or a containing subset of the
	enterprise. These artifacts must align with the overall Target
	Architecture.
	
	-   Structured and Use-Case Analysis
	
	In the context of the business function, identify the key services or
	operations provided and within the scope. Actors and their roles are
	identified and mapped to the delivery of services within the business
	function.
	
	-   Process Modeling
	
	The primary scope of process modeling here is for the processes
	contained within the business function. Interfaces to external processes
	should be modeled as black boxes, reflecting the independence of the
	services offered by the business function with respect to external
	services. These interfaces can be modeled as inputs, outputs, and
	controls which can be affected by external business functions.
	
	In an MSA, the business function essentially becomes an independent
	component or building block of the enterprise. It is important to
	establish the interfaces that define how the business function interacts
	with other organizations. This includes defining the services and
	operations provided by the function, as well as the contracts and other
	documents that govern the interfaces.
	
snippet togaf_togaf-leaders-guide_7_Alignment_with_Other_Frameworks_7.1_Create_a_Catalog_of_Frameworks "7.1 Create a Catalog of Frameworks"
	
	The first step is to create a catalog of such frameworks and their area
	of focus. This catalog should focus on planning and execution (Project
	Management Institute (PMI), PRINCE2, Six Sigma), information systems
	governance and operation (Lean, COBIT, ITIL), and management and
	measurement frameworks (Balanced Scorecard and SABSA Enterprise Risk).
	It is important to also include industry-specific frameworks (SCOR and
	eTOM) and industry-specific architecture content frameworks (BIAN,
	DoDAF, DNDAF) that provide a view of business process and capability and
	an architecture description.
	
	Group the frameworks against the econometric, accountability, and
	execution models like risk, accounting, and planning. The grouping may
	create an overlap view similar to Figure 11. Rationalize what is needed
	from each framework, method, or technique for effective
	operationalization of recommendations from the EA Capability (attaining
	the target state).
	
	All mapping exercises require understanding of an enterprise’s depth of
	commitment to an approach. Many enterprises pay lip-service to a
	framework, adopting a few terminology elements and skipping substantive
	change. Focus all analysis and alignment on frameworks to which the
	enterprise is committed.
	
	[]
	
	Figure 11: Relationships Across Framework Families[24]
	
snippet togaf_business-architecture_business-scenarios_7.1_General_Guidelines "7.1 General Guidelines"
	
	The stakeholders (e.g., business managers, end users) will tell you what
	they want, but as an architect you must still gain an understanding of
	the business, so you must know the most important actors in the system.
	If the stakeholders do not know what they want:
	
	-   Take time, observe, and record how they are working today
	-   Structure information in such a way that it can be used later
	-   Uncover critical business rules from domain experts
	-   Stay focused on what needs to be accomplished, and how it is to be
	    accomplished
	
	This effort provides the anchor for a chain of reason from business
	requirements through to technical solutions. It will pay off later to be
	diligent and critical at the start.
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.1_Introduction "7.1 Introduction"
	
	The objective of this architecture is to define an end-to-end Target
	Architecture and a roadmap to achieve it constrained by the planning
	horizon (normally three to ten years). This architecture will drive
	creation of several targeted change initiatives, define the boundary
	conditions for governance, and acceptance criteria for value reporting.
	Activities to develop this architecture will iterate the ADM at least
	once at the Enterprise level and once for the EA Capability.
	
	On most occasions, EA initiatives are triggered in the middle of a
	business cycle. It is most likely performed by an Enterprise that has
	been operating for many years. A logical point to start the architecture
	work is to understand the rationale for EA work. Table 5 summarizes how
	the ADM phases are executed and to what outcome. The content of the
	table is discussed in detail in the rest of this chapter.
	
	Table 5: Summary Table: ADM Phases and Architecture to Support Strategy
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Understand Context                | Partial Strategic Level Phase H   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Review any existing roadmap   |
	|                                   | -   Understand/infer gaps         |
	|                                   | -   (Background) Request for      |
	|                                   |     Architecture Work             |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase A   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Goals, objectives,            |
	|                                   |     initiatives, competitive, and |
	|                                   |     tactic analysis               |
	|                                   | -   Reaffirm planning horizon     |
	|                                   | -   Operating model               |
	|                                   | -   Existing governance and risk  |
	|                                   |     management model              |
	|                                   | -   Stakeholder and concern       |
	|                                   |     identification                |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   EA Capability model           |
	|                                   | -   Customized EA process model   |
	|                                   | -   Content model & (industry)    |
	|                                   |     reference architectures       |
	|                                   | -   Approach to covering EA       |
	|                                   |     Landscape                     |
	+-----------------------------------+-----------------------------------+
	| Perform Assessment and Analysis   | Partial Strategic Level Phases B, |
	|                                   | C, and D                          |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Assess current and target     |
	|                                   |     operational levels for        |
	|                                   |     process, business terms,      |
	|                                   |     information systems           |
	|                                   |     (application, data,           |
	|                                   |     technology, etc.), and        |
	|                                   |     capabilities                  |
	|                                   | -   Assess current and target     |
	|                                   |     levels for business and       |
	|                                   |     extended context, specific to |
	|                                   |     the Enterprise                |
	|                                   | -   Identify candidate ABBs       |
	|                                   |     (optional)                    |
	|                                   | -   Document and define the gulf  |
	|                                   |     between current and target    |
	|                                   |                                   |
	|                                   | Partial Capability Level Phases   |
	|                                   | B, C, and D                       |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Assess current and target     |
	|                                   |     operational challenges,       |
	|                                   |     engagement with partners and  |
	|                                   |     suppliers                     |
	|                                   | -   Organizational structure and  |
	|                                   |     stakeholder matrix            |
	|                                   | -   Reaffirm value proposition of |
	|                                   |     the Enterprise                |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Revise EA content model       |
	|                                   | -   Revise EA Repository          |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase A   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Identify and analyze gaps     |
	|                                   | -   Identify viewpoints           |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase G   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Compliance review             |
	|                                   | -   Completeness and confidence   |
	|                                   |     assessment                    |
	+-----------------------------------+-----------------------------------+
	| Define Approach to Target State   | Partial Strategy Level Phases B,  |
	|                                   | C, and D                          |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Define specification and work |
	|                                   |     packages for each gap         |
	|                                   | -   Identify capabilities to      |
	|                                   |     improve                       |
	|                                   | -   Create candidate organization |
	|                                   |     model                         |
	|                                   | -   Create candidate operating    |
	|                                   |     model                         |
	|                                   | -   Populate requirements         |
	|                                   |     management (or EA Repository) |
	|                                   |                                   |
	|                                   | Partial Strategy Level Phase A    |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Develop Architecture Vision   |
	|                                   | -   Develop Architecture          |
	|                                   |     Definition                    |
	|                                   | -   Reaffirm vision, definition,  |
	|                                   |     work package, operating       |
	|                                   |     model, and organization model |
	|                                   |     for relevance                 |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Revise EA governance model    |
	|                                   | -   Revise EA engagement Model    |
	|                                   |                                   |
	|                                   | Partial Strategy Level Phase E    |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Assess impact of              |
	|                                   |     differentiating processes     |
	|                                   | -   Identify options to close     |
	|                                   |     gaps                          |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase G   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Risk and compliance review    |
	|                                   | -   Finalize stakeholder matrix   |
	+-----------------------------------+-----------------------------------+
	| Finalize Architecture             | Partial Strategic Level Phase F   |
	| Vision/Target State               |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Complete roadmap              |
	|                                   | -   Define governance model       |
	|                                   | -   Complete architecture         |
	|                                   |     definition and specification  |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_reference-models_government-reference-model_7.1_Judiciary_Justice_and_Home_Affairs_Taxonomy "7.1 Judiciary, Justice, and Home Affairs Taxonomy"
	
	  Sector                                 Function                                   Service                                                                                                        Description
	  -------------------------------------- ------------------------------------------ -------------------------------------------------------------------------------------------------------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Judiciary, Justice, and Home Affairs   Protection and Law Enforcement             Refers to services that protect and safeguard the public and ensure compulsory compliance regarding the law.   
	                                                                                    Customs                                                                                                        Used to check for illegal goods or goods for which a tax may be applicable, and advises on quotas and customs regulations including inspections, cargo clearance, screen, and search.
	                                                                                    Immigration                                                                                                    Monitors the status of incoming travelers from overseas to the country to confirm that they are permitted to enter, and ensures on-arrival clearance through the passenger entry control system.
	                                                                                    Emergency Planning                                                                                             Provides urgent assistance in unforeseen circumstances including emergency funding, logistical support, advises on equipment regulations, and co-ordinates government and community-based services.
	                                                                                    Fire Service                                                                                                   Enables the provision of fire fighters and assistance to extinguish fires, minimize damage, promote fire safety, and enable emergency prevention, protection, and response.
	                                                                                    Health and Safety                                                                                              Consists of activities used to design, develop, and implement health and safety programs.
	                                                                                    Police Service                                                                                                 Comprises activities that advise on rules and regulations, improve public safety, and reduce violence and use of illegal substances.
	                                         Criminal Justice and Offender Management   Refers to the delivery of justice to those that have committed crimes or offences.                             
	                                                                                    Youth Offending                                                                                                Oversees young offenders and provisions community services to prevent young people recommitting crimes in the future.
	                                                                                    Criminal Justice                                                                                               Encompasses the delivery of justice to individuals who have committed crimes and includes the provision of prosecution lawyers.
	                                                                                    Prison Monitoring                                                                                              Represents the monitoring of facilities used to detain criminal offenders.
	                                                                                    Police Authority                                                                                               Consists of activities that co-ordinate law enforcement services.
	                                                                                    Law Commission                                                                                                 Reviews existing laws and recommends potential for reform if necessary.
	                                                                                    Criminal Compensation                                                                                          Encompasses programs that reimburse victims of crime for expenses related to the crime.
	                                                                                    Police Complaints                                                                                              Handles the assessment of dissatisfaction with a police force or individual to maintain public confidence.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.1_Objectives "7.1 Objectives"
	
	The objectives of the Application Architecture part of Phase C are to:
	
	-   Develop the Target Application Architecture that enables the
	    Business Architecture and the Architecture Vision, in a way that
	    addresses the Statement of Architecture Work and stakeholder
	    concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Application Architectures
	
snippet togaf_architecture-content_7_Architecture_Repository_7.1_Overview "7.1 Overview"
	
	Operating a mature Architecture Capability within a large enterprise
	creates a huge volume of architectural output. Effective management and
	leverage of these architectural work products require a formal taxonomy
	for different types of architectural asset alongside dedicated processes
	and tools for architectural content storage.
	
	This section provides a structural framework for an Architecture
	Repository that allows an enterprise to distinguish between different
	types of architectural assets that exist at different levels of
	abstraction in the organization. This Architecture Repository is one
	part of the wider Enterprise Repository, which provides the capability
	to link architectural assets to components of the Detailed Design,
	Deployment, and Service Management Repositories.
	
	At a high level, the following classes of architectural information are
	expected to be held within an Architecture Repository:
	
	-   The Architecture Metamodel describes the organizationally tailored
	    application of an architecture framework, including a method for
	    architecture development and a metamodel for architecture content
	-   The Architecture Capability defines the parameters, structures, and
	    processes that support governance of the Architecture Repository
	-   The Architecture Landscape presents an architectural representation
	    of assets in use, or planned, by the enterprise at particular points
	    in time
	-   The Standards Library captures the standards with which new
	    architectures must comply, which may include industry standards,
	    selected products and services from suppliers, or shared services
	    already deployed within the organization
	-   The Reference Library provides guidelines, templates, patterns, and
	    other forms of reference material that can be leveraged in order to
	    accelerate the creation of new architectures for the enterprise
	-   The Governance Repository provides a record of governance activity
	    across the enterprise
	-   The Architecture Requirements Repository provides a view of all
	    authorized architecture requirements which have been agreed with the
	    Architecture Board
	-   The Solutions Landscape presents an architectural representation of
	    the SBBs supporting the Architecture Landscape which have been
	    planned or deployed by the enterprise
	
	The relationships between these areas of the Architecture Repository are
	shown in Figure 7-1 .
	
	[]
	
	Figure 7-1: Overview of Architecture Repository
	
	The following sections describe the structure and content of the
	repository areas.
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.1_Overview "7.1 Overview"
	
	A definition of interoperability is "the ability to share information
	and services". Defining the degree to which the information and services
	are to be shared is a very useful architectural requirement, especially
	in a complex organization and/or extended enterprise.
	
	The determination of interoperability is present throughout the ADM as
	follows:
	
	-   In the Architecture Vision (Phase A), the nature and security
	    considerations of the information and service exchanges are first
	    revealed within the business scenarios
	-   In the Business Architecture (Phase B), the information and service
	    exchanges are further defined in business terms
	-   In the Data Architecture (Phase C), the content of the information
	    exchanges is detailed using the corporate data and/or information
	    exchange model
	-   In the Application Architecture (Phase C), the way that the various
	    applications are to share the information and services is specified
	-   In the Technology Architecture (Phase D), the appropriate technical
	    mechanisms to permit the information and service exchanges are
	    specified
	-   In Opportunities & Solutions (Phase E), the actual solutions (e.g.,
	    COTS packages) are selected
	-   In Migration Planning (Phase F), the interoperability is logically
	    implemented
	
snippet togaf_business-architecture_business-scenarios_7.2.1_Identifying_Documenting_and_Ranking_the_Problem "7.2.1 Identifying, Documenting, and Ranking the Problem"
	
	Is the problem described as a statement of what needs to be
	accomplished, like steps in a process, and not how (with technology
	“push”)?
	
	If the problem is too specific or a “how”:
	
	-   Raise a red flag
	-   Ask “why do you need to do it that way?” questions
	
	If the problem is too vague or not actionable:
	
	-   Raise a red flag
	-   Ask “what is it you need to do, or will be able to do if this
	    problem is solved?” questions
	
	Ask questions that help to identify where and when the problem exists:
	
	-   Where are you experiencing this particular problem? In what business
	    process?
	-   When do you encounter these issues? During the beginning of the
	    process, the middle, the end?
	
	Ask questions that help to identify the costs of the problem:
	
	-   Do you account for the costs associated with this problem? If so,
	    what are they?
	-   Are there hidden costs? If so, what are they?
	-   Is the cost of this problem covered in the cost of something else?
	    If so, what and how much?
	-   Is the problem manifested in terms of poor quality or a perception
	    of an ineffective organization?
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.2.1_Reference_Materials_External_to_the_Enterprise "7.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	
snippet togaf_business-architecture_business-scenarios_7.2.2_Identifying_the_Business_and_Technical_Environment_and_Documenting_in_Models "7.2.2 Identifying the Business and Technical Environment and Documenting in Models"
	
	Questions to ask about the business environment:
	
	-   What key process suffers from the issues? What are the major steps
	    that need to be processed?
	-   What is the location/scale of internal business departments?
	-   What is the location/scale of external business partners?
	-   Are there any specific business rules and regulations related to the
	    situation?
	
	Questions to ask about the current technology environment:
	
	-   What technology components are already presupposed to be related to
	    this problem?
	-   Are there any technology constraints?
	-   Are there any technology principles that apply?
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.2.2_Non-Architectural_Inputs "7.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.2.3_Architectural_Inputs "7.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Application principles (see the TOGAF Standard — ADM Techniques), if
	    existing
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Gap analysis results (from Business Architecture and Data
	        Architecture, if available)
	    -   Relevant technical requirements that will apply to this phase
	-   Business and Data Architecture components of an Architecture
	    Roadmap, if available (see the TOGAF Standard — Architecture
	    Content),
	
snippet togaf_business-architecture_business-scenarios_7.2.3_Identifying_and_Documenting_Objectives "7.2.3 Identifying and Documenting Objectives"
	
	Is the “what” sufficiently backed up with the rationale for “why”? If
	not, ask for measurable rationale in the following areas:
	
	-   Return on investment
	-   Scalability
	-   Performance needs
	-   Compliance to standards
	-   Ease-of-use measures
	
snippet togaf_business-architecture_business-scenarios_7.2.4_Identifying_Human_Actors_and_their_Place_in_the_Business_Model "7.2.4 Identifying Human Actors and their Place in the Business Model"
	
	An actor represents anything that interacts with or within the system.
	This can be a human, or a machine, or a computer program. Actors
	initiate activity with the system; for example:
	
	-   Computer user with the computer
	-   Phone user with the telephone
	-   Payroll clerk with the payroll system
	-   Internet subscriber with the web browser
	
	An actor represents a role that a user plays; i.e., a user is someone
	playing a role while using the system (e.g., John (user) is a dispatcher
	(actor)). Each actor uses the system in different ways (otherwise they
	should be the same actor). Ask about the humans that will be involved,
	from different viewpoints, such as:
	
	-   Developer
	-   Maintainer
	-   Operator
	-   Administrator
	-   User
	
snippet togaf_business-architecture_business-scenarios_7.2.5_Identifying_Computer_Actors_and_their_Place_in_the_Technology_Model "7.2.5 Identifying Computer Actors and their Place in the Technology Model"
	
	Ask about the computer components likely to be involved, again from
	different points of view. What must they do?
	
snippet togaf_business-architecture_business-scenarios_7.2.6_Documenting_Roles_Responsibilities_Measures_of_Success_and_Required_Scripts "7.2.6 Documenting Roles, Responsibilities, Measures of Success, and Required Scripts"
	
	When defining roles, ask questions like:
	
	-   What are the main tasks of the actor?
	-   Will the actor have to read/write/change any information?
	-   Will the actor have to inform the system about outside changes?
	-   Does the actor wish to be informed about unexpected changes?
	
snippet togaf_business-architecture_business-scenarios_7.2.7_Checking_for_Fitness-for-Purpose_and_Refining_if_Necessary "7.2.7 Checking for Fitness-for-Purpose and Refining, if Necessary"
	
	Is there enough information to identify who/what could fulfil the
	requirement? If not, probe more deeply.
	
	Is there a description of when, and how often, the requirement needs to
	be addressed? If not, ask about timing.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.2_Architecture_Landscape "7.2 Architecture Landscape"
	
	The Architecture Landscape holds architectural views of the state of the
	enterprise at particular points in time. Due to the sheer volume and the
	diverse stakeholder needs throughout an entire enterprise, the
	Architecture Landscape is divided into three levels of granularity:
	
	1.  Strategic Architectures (see the TOGAF Standard — Architecture
	    Development Method) show a long-term summary view of the entire
	    enterprise. Strategic Architectures provide an organizing framework
	    for operational and change activity and allow for direction setting
	    at an executive level.
	2.  Segment Architectures (see the TOGAF Standard — Architecture
	    Development Method) provide more detailed operating models for areas
	    within an enterprise. Segment Architectures can be used at the
	    program or portfolio level to organize and operationally align more
	    detailed change activity.
	3.  Capability Architectures (see the TOGAF Standard — Architecture
	    Development Method) show in a more detailed fashion how the
	    enterprise can support a particular unit of capability. Capability
	    Architectures are used to provide an overview of current capability,
	    target capability, and capability increments and allow for
	    individual work packages and projects to be grouped within managed
	    portfolios and programs.
	
snippet togaf_guides_microservices-architecture_7.2_Constraints "7.2 Constraints"
	
	An MSA should be constrained by the Enterprise Architecture of the
	enterprise. Architects supporting the MSA must adhere to the Enterprise
	Architecture constraints and follow the governance of the Enterprise
	Architecture when there is conflict. However, independence from
	governance is a potential advantage of an MSA; therefore, it is
	recommended that the Enterprise Architecture organization practice
	flexibility with MSA organizations within the enterprise.
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.2_Defining_Interoperability "7.2 Defining Interoperability"
	
	There are many ways to define interoperability and the aim is to define
	one that is consistently applied within the enterprise and extended
	enterprise. It is best that both the enterprise and the extended
	enterprise use the same definitions.
	
	Many organizations find it useful to categorize interoperability as
	follows:
	
	-   Operational or Business Interoperability defines how business
	    processes are to be shared
	-   Information Interoperability defines how information is to be shared
	-   Technical Interoperability defines how technical services are to be
	    shared or at least connect to one another
	
	From an IT perspective, it is also useful to consider interoperability
	in a similar vein to Enterprise Application Integration (EAI);
	specifically:
	
	-   Presentation Integration/Interoperability is where a common
	    look-and-feel approach through a common portal-like solution guides
	    the user to the underlying functionality of the set of systems
	
	-   Information Integration/Interoperability is where the corporate
	    information is seamlessly shared between the various corporate
	    applications to achieve, for example, a common set of client
	    information
	
	    Normally this is based upon a commonly accepted corporate ontology
	    and shared services for the structure, quality, access, and
	    security/privacy for the information.
	
	-   Application Integration/Interoperability is where the corporate
	    functionality is integrated and shareable so that the applications
	    are not duplicated (e.g., one change of address service/component;
	    not one for every application) and are seamlessly linked together
	    through functionality such as workflow
	
	    This impacts the business and infrastructure applications and is
	    very closely linked to corporate business process
	    unification/interoperability.
	
	-   Technical Integration/Interoperability includes common methods and
	    shared services for the communication, storage, processing, and
	    access to data primarily in the application platform and
	    communications infrastructure domains
	
	    This interoperability is premised upon the degree of rationalization
	    of the corporate IT infrastructure, based upon standards and/or
	    common IT platforms. For example, multiple applications sharing one
	    infrastructure or 10,000 corporate websites using one centralized
	    content management/web server (rather than thousands of servers and
	    webmasters spread throughout the country/globe).
	
	Many organizations create their own interoperability models, such as
	illustrated in the example below from the Canadian Government. They have
	a high-level definition of the three classes of interoperability and
	identify the nature of the information and services that they wish to
	share. Interoperability is coined in terms of e-enablers for
	e-Government. Their interoperability breakdown is as follows:
	
	-   Information Interoperability:
	    -   Knowledge management
	    -   Business intelligence
	    -   Information management
	    -   Trusted identity
	-   Business Interoperability:
	    -   Delivery networks
	    -   e-Democracy
	    -   e-Business
	    -   Enterprise resource management
	    -   Relationship and case management
	-   Technical Interoperability:
	    -   IT infrastructure
	
	In certain architectural approaches, such as system of systems or a
	federated model, interoperability is a strongly recommended best
	practice that will determine how the systems interact with each other. A
	key consideration will be the enterprise's business operating model.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.2_Inputs "7.2 Inputs"
	
	This section defines the inputs to Phase C (Application Architecture).
	
snippet togaf_togaf-leaders-guide_7_Alignment_with_Other_Frameworks_7.2_Intersection_with_EA_Capability "7.2 Intersection with EA Capability"
	
	EA provides value in planning, change governance, and purposeful
	benefits realization. The depth of commitment to different frameworks
	will define how to adapt the EA Capability and the TOGAF framework.
	
	This is an important concept. All of the outcomes that different
	frameworks provide regarding planning, change management, and benefits
	realization are required for a high-functioning EA Capability. Where
	they are provided, the EA Capability must fit in. Should there be a gap,
	the EA Capability must fill in. Adjust the roadmap to either fit the EA
	Capability into an existing capability or extend the EA Capability to
	fill a gap.
	
	The next exercise is to understand the organizational dynamics to
	sequence the steps from one or more of these frameworks. As a starting
	point, The Open Group has published a set of mapping documents and White
	Papers to map the frameworks, methods, and techniques (see under “TOGAF”
	at www.opengroup.org/library/white-papers).
	
	The scope of describing detailed fitting-in and filling-out options is
	beyond the scope of this Guide, as any reasonable exercise will vary
	dramatically across organizations. Further, the level of work explodes
	exponentially as differences in purpose and enterprise context are
	considered. This exercise provides an understanding of where the
	enterprise has gaps to effect best practice for change. The rest of the
	chapters in this Guide provide an insight into which touch-point from
	any of these frameworks should be considered for customizing the TOGAF
	ADM and aligning to an organization’s culture.
	
snippet togaf_reference-models_government-reference-model_7.2_Key_Drivers_for_Change "7.2 Key Drivers for Change"
	
	With advancements in technology, there is significant potential to
	improve and adapt the judiciary and justice sector as the political
	climate and regulations evolve with society. To advance the performance
	and efficiency of the judicial system, governments will need to consider
	the points below.
	
	Prepare for New Threats
	
	With social change comes new possible threats that will require reforms
	in the judiciary and justice sector but also greater prevention and
	training:
	
	-   With a more online focused population due to advances in technology
	    and situations such as the COVID-19 pandemic, greater remote working
	    and schooling can lead to an increase in cybercrime
	
	The threat for fraud, data theft, grooming, stalking, or harassment is
	amplified. Reforms in the law to deal with those types of crimes are
	necessary, but most importantly processes to prevent them should be
	implemented.
	
	-   Civil rights movements can also be drivers for change, where the
	    justice system adapts to society as it evolves
	-   Threats like organized crime, terrorism, and human trafficking will
	    require greater co-operation between cross-border jurisdictions and
	    law enforcements
	
	Victim Support
	
	Supporting victims of crime and traumatic incident is essential within
	the judicial system. Providing free services such as emotional support,
	counseling, safe places to stay, access to specialists, and financial
	support are crucial to help people move forward. To ensure their needs
	are met in the criminal justice system, victims should also be made
	aware of their rights, including being kept informed about the
	investigation and having their privacy respected.
	
	Modernize Prison Infrastructure
	
	Most criminal justice systems are increasingly reliant on prisons, with
	most failing to reach their objectives of keeping society safe.
	Countries with high reoffending rates tend to prioritize punishment
	within their prisons, whereas lower rates are seen in prisons that
	prioritize relationships and decency. The price of reforming is the
	principal reason for ageing prison infrastructure; however, inmate
	rehabilitation and successful reintegration are indispensable to
	ensuring public safety. More successful models, such as the Scandinavian
	model is generally considered to be, can guide a template to justify
	this investment.
	
	Leverage New Technologies
	
	The use of technology to modernize the judiciary and justice system has
	multiple purposes:
	
	-   Better access to the law online increases the amount of information
	    or services available to court users such as online settlement
	    forms, user-friendly information portals to learn about their
	    rights, and procedural steps
	
	The use of digital communication and information tools can create a more
	accessible public justice service to more citizens.
	
	-   Re-designing processes by improving the communication and
	    co-operation between professionals, the quality of decisions based
	    on larger legal databases, and reducing the administrative burden
	
	This can simplify and accelerate procedures, make them more
	user-centric, and reduce time and costs.
	
	-   Facilitate cross-border co-operation to overcome barriers of
	    distance and language and complexities in accessing justice in other
	    countries
	
	The Europa portal or e-CODEX[1] provides online tools such as
	guidelines, forms, information for legal practitioners, authorities, and
	citizens to exchange more easily and speed up processes.
	
	-   Improve the criminal justice process through new technologies like
	    IoT, AI, and sensors to assist in solving investigations but also in
	    preventing crimes
	
	Shared databases have also proven to be essential to law enforcement;
	for example, in linking suspects to crimes or improving evidence
	analysis and processing.
	
snippet togaf_business-architecture_business-scenarios_7.2_Questions_to_Ask_for_Each_Area "7.2 Questions to Ask for Each Area"
	
	The Business Scenario workshops mentioned in the Gathering step are
	really structured interviews. While there is no single set of
	appropriate questions to ask in all situations, the following provides
	some guidance to help Business Scenario consultants ask good questions.
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.2_Understanding_Context "7.2 Understanding Context"
	
	Implicit roadmaps and direction have been used to execute the current
	year’s initiatives. Most of them are meant to address a gap. Most likely
	the progress or the impact concerns triggered the need for architecture
	work. Document such concerns and initiatives as the draft Request for
	Architecture Work. Those concerns are probably valid even now.
	
	When approaching Architecture for Strategy, achieving the goals of the
	Architecture Vision phase is arguably the most important step for
	achieving a proper rollout of the next phases of the ADM as well as
	setting the stage for success for subsequent architectures. An implicit
	constraint to developing the strategic architecture is the duration of
	planning horizon. The Target Architecture should be commensurate with
	the ability of the Enterprise to look into the future, competition,
	investment strengths, etc. Another aspect is the existing models for
	governance and risk management. It may not be defined or stated
	explicitly. It is the fastest path to getting the efforts off the
	ground. If the EA Capability has not documented the model, spend the
	time to get it done.
	
	The scope of a strategy architecture usually involves a wide breadth, a
	shallower depth, and a long timeframe. In order to define what is inside
	and outside the scope of the baseline and Target Architecture efforts,
	the following must be defined:
	
	-   The breadth, depth, and timeframe of the architecture landscape
	-   The level of detail to be covered in each of the architecture
	    domains
	-   The partitioning characteristics of the architecture
	-   The known constraints
	-   The architectural assets to be leveraged, such as assets available
	    elsewhere in the industry like frameworks, system models, etc.
	
	As always, stay on top of what creates value for the Enterprise –
	meaning match the architecture to the problem at hand. The scope will
	limit the architecture to exactly what is needed to achieve the goals
	and no more.
	
	A key deliverable to this step is the creation of a Stakeholder Map
	which should clearly state the stakeholder concerns, requirements, and
	viewpoints as well as their classification and level of involvement.
	Other inputs from gaining an understanding of stakeholders are cultural
	factors, which can help the EA team understand how to present and
	communicate the proposed architecture.
	
	This step is very important to strategy architecture since having a
	clear understanding of stakeholder needs, interests, visions, etc. will
	dictate how strategy architecture is understood by its sponsors and
	guide the EA team to act accordingly.
	
	From a strategy perspective, it is important to ask whether the context
	of a business aligns with the mission. Do the capabilities match to the
	project scope? Are we carrying baggage from a previous project or from a
	different part of the company that is outside the confines of the
	architecture? Knowing the context of the work can help fine-tune the
	vision of the strategy architecture.
	
	Finally, validate that the models specified by the EA Capability to
	analyze processes, engage with stakeholders, and deliver the
	architecture are relevant and current.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1.1_Determine_Overall_Modeling_Process "7.3.1.1 Determine Overall Modeling Process"
	
	For each viewpoint, select the models needed to support the specific
	view required, using the selected tool or method.
	
	Ensure that all stakeholder concerns are covered. If they are not,
	create new models to address concerns not covered, or augment existing
	models (see above).
	
	The recommended process for developing an Application Architecture is as
	follows:
	
	-   Understand the list of applications or application components that
	    are required, based on the baseline Application Portfolio, what the
	    requirements are, and the Business Architecture scope
	-   Simplify complicated applications by decomposing them into two or
	    more applications
	-   Ensure that the set of application definitions is internally
	    consistent, by removing duplicate functionality as far as possible,
	    and combining similar applications into one
	-   Identify logical applications and the most appropriate physical
	    applications
	-   Develop matrices across the architecture by relating applications to
	    business services, business capabilities, data, processes, etc.
	-   Elaborate a set of Application Architecture views by examining how
	    the application will function, capturing integration, migration,
	    development, and operational concerns
	
	The level and rigor of decomposition needed varies from enterprise to
	enterprise, as well as within an enterprise, and the architect should
	consider the enterprise's goals, objectives, scope, and purpose of the
	Enterprise Architecture effort to determine the level of decomposition.
	
	The level of granularity should be sufficient to enable identification
	of gaps and the scope of candidate work packages.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1.2_Identify_Required_Catalogs_of_Application_Building_Blocks "7.3.1.2 Identify Required Catalogs of Application Building Blocks"
	
	The organization's Application Portfolio is captured as a catalog within
	the Architecture Repository. Catalogs are hierarchical in nature and
	capture a decomposition of a metamodel entity and also decompositions
	across related model entities (e.g., logical application component ->
	physical application component -> application service).
	
	Catalogs form the raw material for the development of matrices and
	diagrams and also act as a key resource for managing the business and IT
	capability.
	
	The structure of catalogs is based on the attributes of metamodel
	entities, as defined in the TOGAF Standard — Architecture Content.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of catalogs which should be considered for development
	within an Application Architecture, describing them in detail and
	relating them to entities, attributes, and relationships in the TOGAF
	Enterprise Metamodel.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1.3_Identify_Required_Matrices "7.3.1.3 Identify Required Matrices"
	
	Matrices show the core relationships between related model entities.
	
	Matrices form the raw material for development of diagrams and also act
	as a key resource for impact assessment.
	
	Once the baseline Application Portfolio has been assembled, it is
	necessary to map the applications to their purpose in supporting the
	business. The initial mapping should focus on business services within
	the Business Architecture, as this is the level of granularity where
	architecturally significant decisions are most likely to be needed.
	
	Once applications are mapped to business services, it will also be
	possible to make associations from applications to data, through the
	business-information diagrams developed during Business Architecture.
	
	If readily available, baseline application data models may be used to
	validate the Business Architecture and also to identify which data is
	held locally and which is accessed remotely.
	
	The Data Architecture phase will focus on these issues, so at this point
	it may be appropriate to drop into a short iteration of the Data
	Architecture if it is deemed to be valuable to the scope of the
	architecture engagement.
	
	Using existing information in the baseline application catalog, the
	Application Architecture should identify user and organizational
	dependencies on applications. This activity will support future state
	planning by determining impacted user communities and also facilitating
	the grouping of applications by user type or user location.
	
	A key user community to be specifically considered is the operational
	support organization. This activity should examine application
	dependencies on shared operations capabilities and produce a diagram on
	how each application is effectively operated and managed.
	
	Specifically considering the needs of the operational community may
	identify requirements for new or extended governance capabilities and
	applications.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of matrices which should be considered for development
	within an Application Architecture, describing them in detail and
	relating them to entities, attributes, and relationships in the TOGAF
	Enterprise Metamodel.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1.4_Identify_Required_Diagrams "7.3.1.4 Identify Required Diagrams"
	
	Diagrams present the Application Architecture information from a set of
	different perspectives (viewpoints) according to the requirements of the
	stakeholders. Once the desired functionality of an application is known,
	it is necessary to perform an internal assessment of how the application
	should be best structured to meet its requirements.
	
	In the case of packaged applications, it is likely to be the case that
	the application supports a number of configuration options, add-on
	modules, or application services that may be applied to the solution.
	For custom developed applications, it is necessary to identify the
	high-level structure of the application in terms of modules or
	subsystems as a foundation to organize design activity.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of diagrams which should be considered for development
	within an Application Architecture, describing them in detail and
	relating them to entities, attributes, and relationships in the TOGAF
	Enterprise Metamodel.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1.5_Identify_Types_of_Requirement_to_be_Collected "7.3.1.5 Identify Types of Requirement to be Collected"
	
	Once the Application Architecture catalogs, matrices, and diagrams have
	been developed, architecture modeling is completed by formalizing the
	application-focused requirements for implementing the Target
	Architecture.
	
	These requirements may:
	
	-   Relate to the application domain
	-   Provide requirements input into the Data and Technology
	    Architectures
	-   Provide detailed guidance to be reflected during design and
	    implementation to ensure that the solution addresses the original
	    architecture requirements
	
	Within this step, the architect should identify requirements that should
	be met by the architecture (see 13.5.2 Requirements Development).
	
snippet togaf_architecture-content_7_Architecture_Repository_7.3.1_Overview "7.3.1 Overview"
	
	The Reference Library provides a repository to hold reference materials
	that should be used to develop architectures. Reference materials held
	may be obtained from a variety of sources, including:
	
	-   Standards bodies
	-   Product and service vendors
	-   Industry communities or forums
	-   Standard templates
	-   Enterprise best practice
	
	The Reference Library should contain:
	
	-   Reference Architectures
	-   Reference Models
	-   Viewpoint Library
	-   Templates
	
	Note:
	    The terms reference architecture and reference model are not used
	    carefully in most literature. Reference architecture and reference
	    model have the same relationship as architecture and model. Either
	    can exist as either generic or an organization-specific state.
	    Typically, a generic reference architecture provides the
	    architecture team with an outline of their organization-specific
	    reference architecture that will be customized for a specific
	    organization. For example, a generic reference architecture may
	    identify that there is a need for data models. An example of a
	    reference architecture is the IT4IT Reference Architecture which
	    also defines a common information model for IT management. Another
	    example is the TM Forum eTOM and SID as an organization-specific
	    reference architecture.
	
	In order to segregate different classes of architecture reference
	materials, the Reference Library can use the Architecture Continuum as a
	method for classification.
	
	[]
	
	Figure 7-2: Architecture Continuum
	
	The Architecture Continuum, as shown in Figure 7-2 , can be viewed as a
	Reference Library classification scheme. As such it illustrates how
	reference architectures can be organized across a range — from
	Foundation Architectures, and Industry-Specific Architectures, to an
	Organization-Specific Architecture.
	
	The enterprise needs and business requirements are addressed in
	decreasing abstraction from left to right. The architect will typically
	find more re-usable architectural elements toward the left of the range.
	When elements are not found, the requirements for the missing elements
	are passed to the left of the range for incorporation.
	
	Through this exercise it is important to keep in mind the concepts of
	levels and partitions. At different levels of granularity there may
	exist reference materials appropriate to the level, and partitions
	within the Architecture Landscape can be expected to use different
	reference material (see the TOGAF Standard — Applying the ADM).
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.1_Select_Reference_Models_Viewpoints_and_Tools "7.3.1 Select Reference Models, Viewpoints, and Tools"
	
	Review and validate (or generate, if necessary) the set of application
	principles. These will normally form part of an overarching set of
	Architecture Principles. Guidelines for developing and applying
	principles, and a sample set of application principles, are given in the
	TOGAF Standard — ADM Techniques.
	
	Select relevant Application Architecture resources (reference models,
	patterns, etc.) from the Architecture Repository, on the basis of the
	business drivers, the stakeholders, and their concerns.
	
	Select relevant Application Architecture viewpoints (for example,
	stakeholders of the applications — viewpoints relevant to functional and
	individual users of applications, etc.); i.e., those that will enable
	the architect to demonstrate how the stakeholder concerns are being
	addressed in the Application Architecture.
	
	Identify appropriate tools and techniques to be used for capture,
	modeling, and analysis, in association with the selected viewpoints.
	Depending on the degree of sophistication warranted, these may comprise
	simple documents or spreadsheets, or more sophisticated modeling tools
	and techniques.
	
	Consider using platform-independent descriptions of business logic. For
	example, the OMG Model-Driven Architecture® (MDA®) offers an approach to
	modeling Application Architectures that preserves the business logic
	from changes to the underlying platform and implementation technology.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.2_Develop_Baseline_Application_Architecture_Description "7.3.2 Develop Baseline Application Architecture Description"
	
	Develop a Baseline Description of the existing Application Architecture,
	to the extent necessary to support the Target Application Architecture.
	The scope and level of detail to be defined will depend on the extent to
	which existing applications are likely to be carried over into the
	Target Application Architecture, and on whether Architecture
	Descriptions exist, as described in 7.5 Approach . To the extent
	possible, identify the relevant Application Architecture building
	blocks, drawing on the Architecture Repository (see the TOGAF Standard —
	Architecture Content). If not already existing within the Architecture
	Repository, define each application in line with the Application
	Portfolio catalog (see the TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Baseline
	Architecture.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.3_Develop_Target_Application_Architecture_Description "7.3.3 Develop Target Application Architecture Description"
	
	Develop a Target Description for the Application Architecture, to the
	extent necessary to support the Architecture Vision, Target Business
	Architecture, and Target Data Architecture. The scope and level of
	detail to be defined will depend on the relevance of the application
	elements to attaining the Target Architecture Vision, and on whether
	architectural descriptions exist. To the extent possible, identify the
	relevant Application Architecture building blocks, drawing on the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Target
	Architecture.
	
	If appropriate, investigate different Target Architecture alternatives
	and discuss these with stakeholders using the Architecture Alternatives
	and Trade-offs technique (see the TOGAF Standard — ADM Techniques).
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.4_Perform_Gap_Analysis "7.3.4 Perform Gap Analysis"
	
	Verify the architecture models for internal consistency and accuracy:
	
	-   Perform trade-off analysis to resolve conflicts (if any) among the
	    different views
	-   Validate that the models support the principles, objectives, and
	    constraints
	-   Note changes to the viewpoint represented in the selected models
	    from the Architecture Repository, and document
	-   Test architecture models for completeness against requirements
	
	Identify gaps between the baseline and target, using the gap analysis
	technique as described in the TOGAF Standard — ADM Techniques.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.5_Define_Candidate_Roadmap_Components "7.3.5 Define Candidate Roadmap Components"
	
	Following the creation of a Baseline Architecture, Target Architecture,
	and gap analysis, an application roadmap is required to prioritize
	activities over the coming phases.
	
	This initial Application Architecture roadmap will be used as raw
	material to support more detailed definition of a consolidated,
	cross-discipline roadmap within the Opportunities & Solutions phase.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.6_Resolve_Impacts_Across_the_Architecture_Landscape "7.3.6 Resolve Impacts Across the Architecture Landscape"
	
	Once the Application Architecture is finalized, it is necessary to
	understand any wider impacts or implications.
	
	At this stage, other architecture artifacts in the Architecture
	Landscape should be examined to identify:
	
	-   Does this Application Architecture create an impact on any
	    pre-existing architectures?
	-   Have recent changes been made that impact the Application
	    Architecture?
	-   Are there any opportunities to leverage work from this Application
	    Architecture in other areas of the organization?
	-   Does this Application Architecture impact other projects (including
	    those planned as well as those currently in progress)?
	-   Will this Application Architecture be impacted by other projects
	    (including those planned as well as those currently in progress)?
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.7_Conduct_Formal_Stakeholder_Review "7.3.7 Conduct Formal Stakeholder Review"
	
	Check the original motivation for the architecture project and the
	Statement of Architecture Work against the proposed Application
	Architecture. Conduct an impact analysis, to identify any areas where
	the Business and Data Architectures (e.g., business practices) may need
	to change to cater for changes in the Application Architecture (for
	example, changes to forms or procedures, applications, or database
	systems). If the impact is significant, this may warrant the Business
	and Data Architectures being revisited.
	
	Identify any constraints on the Technology Architecture (especially the
	infrastructure) about to be designed.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.8_Finalize_the_Application_Architecture "7.3.8 Finalize the Application Architecture"
	
	-   Select standards for each of the building blocks, re-using as much
	    as possible from the reference models selected from the Architecture
	    Repository
	-   Fully document each building block
	-   Conduct a final cross-check of overall architecture against business
	    requirements; document the rationale for building block decisions in
	    the architecture document
	-   Document the final requirements traceability report
	-   Document the final mapping of the architecture within the
	    Architecture Repository; from the selected building blocks, identify
	    those that might be re-used, and publish via the Architecture
	    Repository
	-   Finalize all the work products, such as gap analysis
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3.9_Create_Update_the_Architecture_Definition_Document "7.3.9 Create/Update the Architecture Definition Document"
	
	-   Document the rationale for building block decisions in the
	    Architecture Definition Document
	-   Prepare the Application Architecture sections of the Architecture
	    Definition Document; if appropriate, use reports and/or graphics
	    generated by modeling tools to demonstrate key views of the
	    architecture; route the document for review by relevant
	    stakeholders, and incorporate feedback
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.3_Assess_the_Enterprise "7.3 Assess the Enterprise"
	
	This is the core of the effort required to deliver Architecture to
	Support Strategy. Working across the breadth of the Enterprise,
	identify, define, and articulate as clearly as possible the operational
	state. This analysis covers capabilities, business processes,
	information systems, technology, business terms, security, service
	providers, customer satisfaction, etc. For each of these, gather the
	desired operational state that would enable the Enterprise to achieve
	most or all of its objectives.
	
	Completing the assessment may require use of techniques like Strategy
	Map or Five Forces. The outcome from such exercise will change the
	strategy statements and objectives. When the initial analysis does not
	provide the growth amplification expectations of the stakeholder, employ
	these techniques to guide the stakeholder to explore new ways to play in
	the market. The architecture being delivered is driving a change, but
	the analysis is just a path to identify a right change to introduce.
	Some or all work products created while developing the architecture may
	not go into the Architecture Repository or become a deliverable.
	
	The assessment should be performed to address key concerns of the
	stakeholders. If the Enterprise is chasing agility, assess for current
	and desired[28] agility levels. If it is after operational stability,
	assess current and desired. If the need is the ability to replace
	suppliers with ease, assess it. It is perfectly acceptable to state that
	one or more capabilities or information systems or processes are not
	needed in the desired state. Likewise, it is acceptable to move a
	capability or service from being a differentiator from competition to
	“on par” with competition. These are indirect statements of direction
	the Enterprise is planning to take. Validate that the value proposition,
	objectives, and the assessment values for the desired state are
	consistent.
	
	What the Enterprise is after is defined in the context and Request for
	Architecture Work. It is likely that stakeholders may state new concerns
	to be assessed. Refine and finalize the Request for Architecture Work
	after assessments. Remember that the goal is to capture just enough data
	to identify the gaps. How the outcome of each process, application,
	service, or capability measures against the concern is sufficient to
	complete the assessment. Going after who made the application or what
	version is deployed in the data center are noise and should be avoided.
	
	The chasm between current state and desired state is the chasm the
	Enterprise has to cross to achieve its objectives. The chasm has to be
	acknowledged and agreed upon by all stakeholders.
	
	In order to communicate what concerns were assessed across what
	capabilities, processes, information systems, etc., identify appropriate
	viewpoints. Validate that the team performing the assessment followed
	the documented EA processes and consulted requisite and relevant SMEs
	and stakeholders.
	
	In order to provide confidence to the stakeholders of the completeness
	of analysis and resultant development of the target state and roadmap,
	have a detailed trail of the personnel consulted. Employ any of the
	standard techniques like interviews, surveys, inspections to gather the
	current and target state information. For each of these techniques,
	there are well researched metrics for the number of stakeholders and
	SMEs to be consulted. Completeness and confidence in the assessment is
	the Achilles heel of this architecture.
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.3_Enterprise_Operating_Model "7.3 Enterprise Operating Model"
	
	Key to establishing interoperability is the determination of the
	corporate operating model, where the operating model is "the necessary
	level of business process integration and standardization for delivering
	goods and services to customers. An operating model describes how a
	company wants to thrive and grow. By providing a more stable and
	actionable view of the company than strategy, the operating model drives
	the design of the foundation for execution."¹
	
	For example, if lines of business or business units only need to share
	documents, then the ABBs and SBBs may be simpler than if there is a need
	to share structured transaction data. Similarly, if the Architecture
	Vision includes a shared services environment, then it is useful to
	define the level the services are to be shared.
	
	The corporate operating model will normally indicate what type of
	interoperability approach will be appropriate. This model should be
	determined in Phase A (Architecture Vision) if not in Phase B (Business
	Architecture), and definitely by Phase E (Opportunities & Solutions).
	
	Complex enterprises and/or extended enterprises (e.g., supply chain) may
	have more than one type of operating model. For example, it is common
	for the internal operating model (and supporting interoperability model)
	to differ from the one used for the extended enterprise.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.3_Reference_Library "7.3 Reference Library"
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.3_Steps "7.3 Steps"
	
	The level of detail addressed in Phase C will depend on the scope and
	goals of the overall architecture effort.
	
	New application building blocks being introduced as part of this effort
	will need to be defined in detail during Phase C. Existing application
	building blocks to be carried over and supported in the target
	environment may already have been adequately defined in previous
	architectural work; but, if not, they too will need to be defined in
	Phase C.
	
	The order of the steps in this phase as well as the time at which they
	are formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance. In
	particular, determine whether in this situation it is appropriate to
	conduct Baseline Description or Target Architecture development first,
	as described in the TOGAF Standard — Applying the ADM.
	
	All activities that have been initiated in these steps should be closed
	during the Finalize the Application Architecture step (see 7.3.8
	Finalize the Application Architecture). The documentation generated from
	these steps must be formally published in the Create/Update the
	Architecture Definition Document step (see 7.3.9 Create/Update the
	Architecture Definition Document).
	
	The steps in Phase C (Application Architecture) are as follows:
	
	-   Select reference models, viewpoints, and tools (see 7.3.1 Select
	    Reference Models, Viewpoints, and Tools)
	-   Develop Baseline Application Architecture Description (see 7.3.2
	    Develop Baseline Application Architecture Description)
	-   Develop Target Application Architecture Description (see 7.3.3
	    Develop Target Application Architecture Description)
	-   Perform gap analysis (see 7.3.4 Perform Gap Analysis)
	-   Define candidate roadmap components (see 7.3.5 Define Candidate
	    Roadmap Components)
	-   Resolve impacts across the Architecture Landscape (see 7.3.6 Resolve
	    Impacts Across the Architecture Landscape)
	-   Conduct formal stakeholder review (see 7.3.7 Conduct Formal
	    Stakeholder Review)
	-   Finalize the Application Architecture (see 7.3.8 Finalize the
	    Application Architecture)
	-   Create/Update the Architecture Definition Document (see 7.3.9
	    Create/Update the Architecture Definition Document)
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.4.1_Confirm_Enterprise_Change_Attributes "7.4.1 Confirm Enterprise Change Attributes"
	
	This step looks at how to implement an architecture taking the
	organization culture into consideration when assessing the business
	units and overall Enterprise in terms of their transition capabilities
	and skill sets. These assessments should be documented in an
	Implementation Factor catalog so that it can be used as an archive and
	record of decisions taken. Culture is very important to strategy
	architecture since strategies are long term, and often culture is set
	for the long term. Getting these two in sync is paramount to building a
	successful architecture. Other components of this step that are relevant
	to the strategy architecture include assessing the context that shaped
	the need for the strategy and performing a gap analysis of the
	Architecture Vision to the candidate architecture.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.4.1_Overview "7.4.1 Overview"
	
	The Standards Library provides a repository area to hold a set of
	specifications, to which architectures must conform. Establishment of a
	Standards Library provides an unambiguous basis for Architecture
	Governance because:
	
	-   The standards are easily accessible to projects and therefore the
	    obligations of the project can be understood and planned for
	-   Standards are stated in a clear and unambiguous manner, so that
	    compliance can be objectively assessed
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.4.2_Develop_Value_Proposition "7.4.2 Develop Value Proposition"
	
	It is important that not only the value proposition for strategy
	architecture be understood by stakeholders but also the effort needed is
	accepted in its entirety. Consent and understanding should be manifested
	in a simple Solution Concept diagram that illustrates the major
	components of the solution and how the solution will positively impact
	the business. Since the value proposition is specific to stakeholder
	interests and concerns, it is important to pay close attention in this
	step as well-defined value propositions are key to strategy architecture
	success. For any architecture, sub-steps involve:
	
	-   Risk Assessment – leverage risk management processes to determine
	    the level of risk appropriate to the vision
	-   Determine Value – link value to work packages as they pertain to
	    stakeholders or stakeholder groupings
	-   Determine Key Performance Indicators (KPIs) – can be associated with
	    concerns, risk assessment, and value
	
	Determining the KPIs is necessary in the strategy architecture in
	connection to governance.
	
	Determining the value proposition and how it is linked to various
	stakeholders and deliverables will help formulate very high-level
	definitions of the baseline and target environments from multiple points
	of view. Strategy is all about high-level concepts, but agreement on
	these concepts is key for a successful vision to be formulated and
	adhered to.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.4.2_Types_of_Standard "7.4.2 Types of Standard"
	
	Standards typically fall into three classes:
	
	-   Legal and Regulatory Obligations: these standards are mandated by
	    law and therefore an enterprise must comply or face serious
	    consequences
	
	-   Industry Standards: these standards are established by industry
	    bodies, such as The Open Group, and are then selected by the
	    enterprise for adoption
	
	    Industry Standards offer potential for interoperation and sharing
	    across enterprises, but also fall outside of the control of the
	    enterprise and therefore must be actively monitored.
	
	-   Organizational Standards: these standards are set within the
	    organization and are based on business aspiration (e.g., selection
	    of standard applications to support portfolio consolidation)
	
	    Organizational Standards require processes to allow for exemptions
	    and standards evolution.
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.4.3_Identify_and_Sequence_Work_Packages "7.4.3 Identify and Sequence Work Packages"
	
	Logically group the various activities into work packages. This way the
	missing business capabilities can be assessed and, in the solutions
	column, proposed solutions for the gaps and activities that might orient
	towards a new development can be recommended. This step allows us to
	prepare for solution delivery, as the new developments might already
	hint at using external service providers.
	
	Having done the sequencing and sifting down to relevant architecture
	requirements, the candidate roadmap and candidate Target Architecture
	are ready to construct the Architecture Vision. Create the initial
	version of the roadmap by consolidating the work packages from the
	previous steps while keeping in mind that this roadmap will link to
	subsequent phases. At the broadest level, the roadmap should define
	where the business wants to go, how it will get there, and by which
	means. Keeping an eye on the sufficient level of detail needed for this
	roadmap to be implemented should forbid the architecture to transition
	to different results.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.4.3_Standards_Lifecycle "7.4.3 Standards Lifecycle"
	
	Standards do not generally exist for all time. New standards are
	identified and managed through a lifecycle process.
	
	Typically, standards pass through the following stages:
	
	-   Proposed Standard: a potential standard has been identified for the
	    organization, but has not yet been evaluated for adoption
	
	-   Provisional Standard (also known as a Trial Standard): a Provisional
	    Standard has been identified as a potential standard for the
	    organization, but has not been tried and tested to a level where its
	    value is fully understood
	
	    Projects wishing to adopt Provisional Standards may do so, but under
	    specific pilot conditions, so that the viability of the standard can
	    be examined in more detail.
	
	-   Standard (also known as an Active Standard): a Standard defines a
	    mainstream solution that should generally be used as the approach of
	    choice
	
	-   Phasing-Out Standard (also known as a Deprecated Standard): a
	    Phasing-Out Standard is approaching the end of its useful lifecycle
	
	    Projects that are re-using existing components can generally
	    continue to make use of Phasing-Out Standards. Deployment of new
	    instances of the Phasing-Out Standard is generally discouraged.
	
	-   Retired Standard (also known as an Obsolete Standard): a Retired
	    Standard is no longer accepted as valid within the landscape
	
	    In most cases, remedial action should be taken to remove the Retired
	    Standard from the landscape. Change activity on a Retired Standard
	    should only be accepted as a part of an overall decommissioning
	    plan.
	
	All standards should be periodically reviewed to ensure that they sit
	within the right stage of the standards lifecycle. As a part of
	standards lifecycle management, the impact of changing the lifecycle
	status should be addressed to understand the landscape impact of a
	standards change and plan for appropriate action to address it.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.4.4_Standards_Classification_within_the_Standards_Library "7.4.4 Standards Classification within the Standards Library"
	
	Standards within the Standards Library are categorized according to the
	building blocks within the TOGAF Enterprise Metamodel. Each metamodel
	entity can potentially have standards associated with it (e.g., Business
	Service, Technology Component).
	
	Standards may relate to "approved" building blocks (e.g., a list of
	standard technology components) or may specify appropriate use of a
	building block (e.g., scenarios where messaging infrastructure is
	appropriate, application communication standards are defined).
	
	At the top level, standards are classified in line with the TOGAF
	architecture domains, including the following areas:
	
	-   Business Standards:
	    -   Standard shared business capabilities
	    -   Standard role and actor definitions
	    -   Security and governance standards for business activity
	-   Data Standards:
	    -   Standard coding and values for data
	    -   Standard structures and formats for data
	    -   Standards for origin and ownership of data
	    -   Restrictions on replication and access
	-   Applications Standards:
	    -   Standard/shared applications supporting specific business
	        functions
	    -   Standards for application communication and interoperation
	    -   Standards for access, presentation, and style
	-   Technology Standards;
	    -   Standard hardware products
	    -   Standard software products
	    -   Standards for software development
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.4_Define_an_Approach_to_Target_State "7.4 Define an Approach to Target State"
	
	With all the data gathered, look at the whole picture: where the
	Enterprise wants to go, the forces acting on the Enterprise from outside
	and within, resources it possesses, and finally the structural and
	behavioral changes needed. Each providing new specification. Each
	refining the view of the gaps. Some of the requirements may be not
	vetted against the desired state. As long as it is not in violation of
	the desired state and the objectives, it is a candidate that needs to be
	recorded.
	
	An architect adds most value in correlating the facts, and identifying a
	potentially new operating model, organization model, and capabilities
	the Enterprise should invest and improve upon.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.4_Outputs "7.4 Outputs"
	
	The outputs of Phase C (Application Architecture) may include, but are
	not restricted to:
	
	-   Refined and updated versions of the Architecture Vision phase
	    deliverables, where applicable:
	    -   Statement of Architecture Work (see the TOGAF Standard —
	        Architecture Content), updated if necessary
	    -   Validated application principles, or new application principles
	        (if generated here)
	-   Draft Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Baseline Application Architecture, Approved, if appropriate
	    -   Target Application Architecture, Approved
	    -   Views corresponding to the selected viewpoints, addressing key
	        stakeholder concerns
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including such Application
	    Architecture requirements as:
	    -   Gap analysis results
	    -   Applications interoperability requirements
	    -   Relevant technical requirements that will apply to this
	        evolution of the architecture development cycle
	    -   Constraints on the Technology Architecture about to be designed
	    -   Updated business requirements, if appropriate
	    -   Updated data requirements, if appropriate
	-   Application Architecture components of an Architecture Roadmap (see
	    the TOGAF Standard — Architecture Content)
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase.
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.4_Refining_Interoperability "7.4 Refining Interoperability"
	
	Implementing interoperability requires the creation, management,
	acceptance, and enforcement of realistic standards that are SMART
	(Specific, Measurable, Actionable, Realistic, and Time-bound). Clear
	measures of interoperability are key to success.
	
	Architecture is the key for identifying standards and facilitated
	sessions will examine potential pragmatic ways (that fit within the
	current or emerging business culture) to achieve the requisite degree of
	interoperability.
	
	Interoperability should be refined so that it meets the needs of the
	enterprise and/or extended enterprise in an unambiguous way. The refined
	interoperability measures (degrees, types, and high-level targets)
	should be part of or referred to the Enterprise Architecture strategic
	direction.
	
	These measures are instantiated within a transformation strategy that
	should be embedded within the Target Architecture definition and
	pragmatically implemented in the Transition Architectures. Upon
	completion, also update the consolidated gap analysis results and
	dependencies to ensure that all output from facilitated sessions is
	captured.
	
	An example of specifying interoperability is the Degrees of
	Interoperability (used within the Canadian Department of National
	Defense and NATO). These organizations were focused on the sharing of
	information and came up with four degrees of interoperability as
	follows:
	
	-   Degree 1: Unstructured Data Exchange involves the exchange of
	    human-interpretable unstructured data, such as the free text found
	    in operational estimates, analysis, and papers
	-   Degree 2: Structured Data Exchange involves the exchange of
	    human-interpretable structured data intended for manual and/or
	    automated handling, but requires manual compilation, receipt, and/or
	    message dispatch
	-   Degree 3: Seamless Sharing of Data involves the automated sharing of
	    data amongst systems based on a common exchange model
	-   Degree 4: Seamless Sharing of Information is an extension of Degree
	    3 to the universal interpretation of information through data
	    processing based on co-operating applications
	
	These degrees should be further refined and made technically meaningful
	for each of the degrees. An example refinement of Degree 3 with four
	subclassifications follows:
	
	-   3A: Formal Message Exchange
	-   3B: Common Data Exchange
	-   3C: Complete Data Exchange
	-   3D: Real-time Data Exchange
	
	The intent is to specify the detailed degrees of interoperability to the
	requisite level of detail so that they are technically meaningful.
	
	These degrees are very useful for specifying the way that information
	has to be exchanged between the various systems and provide critical
	direction to the projects implementing the systems.
	
	Similar measures should be established to determine service/business and
	technical interoperability.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.4_Standards_Library "7.4 Standards Library"
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.5.1_Architecture_Repository "7.5.1 Architecture Repository"
	
	As part of this phase, the architecture team will need to consider what
	relevant Application Architecture resources are available in the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	In particular:
	
	-   Generic business models and related application models relevant to
	    the organization's industry sector
	-   Application models relevant to common high-level business functions,
	    such as electronic commerce, supply chain management, etc.
	
	The Open Group has a Reference Model for Integrated Information
	Infrastructure (III-RM) — see the TOGAF® Series Guide: The TOGAF
	Integrated Information Infrastructure Reference Model (III-RM) — that
	focuses on the application-level components and services necessary to
	provide an integrated information infrastructure.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.5.1_Overview "7.5.1 Overview"
	
	The Governance Repository provides a repository area to hold shared
	information relating to the ongoing governance of projects. Maintaining
	a shared repository of governance information is important, because:
	
	-   Decisions made during projects (such as standards deviations or the
	    rationale for a particular architectural approach) are important to
	    retain and access on an ongoing basis
	
	    For example, if a system is to be replaced, having sight of the key
	    architectural decisions that shaped the initial implementation is
	    highly valuable as it will highlight constraints that may otherwise
	    be obscured.
	
	-   Many stakeholders are interested in the outcome of project
	    governance (e.g., other projects, customers of the project, the
	    Architecture Board, etc.)
	
snippet togaf_architecture-content_7_Architecture_Repository_7.5.2_Contents_of_the_Governance_Repository "7.5.2 Contents of the Governance Repository"
	
	The Governance Repository should contain the following items:
	
	-   Decision Log: a log of all architecturally significant decisions
	    that have been made in the organization
	
	    This would typically include:
	
	    -   Product selections
	    -   Justification for major architectural features of projects
	    -   Standards deviations
	    -   Standards lifecycle changes
	    -   Change Request evaluations and approvals
	    -   Re-use assessments
	
	-   Compliance Assessments: at key checkpoint milestones in the progress
	    of a project, a formal architecture review will be carried out
	
	    This review will measure the compliance of the project to the
	    defined architecture standards. For each project, this log should
	    include:
	
	    -   Project overview
	    -   Progress overview (timeline, status, issues, risks,
	        dependencies, etc.)
	    -   Completed architecture checklists
	    -   Standards compliance assessment
	    -   Recommended actions
	
	-   Capability Assessments: depending on their objectives, some projects
	    will carry out assessments of business, IT, or Architecture
	    Capability
	
	    These assessments should be periodically carried out and tracked to
	    ensure that appropriate progress is being made. This log should
	    include:
	
	    -   Templates and reference models for executing Capability
	        Assessments
	    -   Business Capability Assessments
	    -   IT capability, maturity, and impact assessments
	    -   Architecture maturity assessments
	
	-   Calendar: the Calendar should show a schedule of in-flight projects
	    and formal review sessions to be held against these projects
	
	-   Project Portfolio: the Project Portfolio should hold summary
	    information about all in-flight projects that fall under
	    Architecture Governance, including:
	    -   The name and description of the project
	    -   Architectural scope of the project
	    -   Architectural roles and responsibilities associated with the
	        project
	
	-   Performance Measurement: based on a charter for the architecture
	    function, a number of performance criteria will typically be defined
	
	    The Performance Measurement log should capture metrics relating to
	    project governance and any other performance metrics relating to the
	    architecture charter so that performance can be measured and
	    evaluated on an ongoing basis.
	
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7.5_Approach "7.5 Approach"
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.5_Determining_Interoperability_Requirements "7.5 Determining Interoperability Requirements"
	
	Co-existence between emerging and existing systems, especially during
	transformation, will be a major challenge and facilitated sessions
	should attempt to figure out what has to be done to reduce the pain. It
	is imperative to involve the operations management staff and architects
	in this step as they will be responsible for operating the portfolio
	deliverables.
	
	For example, there might be a need for a "wrapper" application (an
	application that acts as the interface [a.k.a. interpreter] between the
	legacy application and the emerging infrastructure). Indeed,
	pragmatically, in the "if it works do not fix it" world, the "wrapper"
	might become a permanent solution.
	
	Regardless, using the gap analysis results and business scenarios as a
	foundation, discuss the IT issues and work them through to ensure that
	all of the gaps are clearly identified and addressed and verify that the
	organization-specific requirements will be met.
	
	It is important to note that the ensuing development process must
	include recognition of dependencies and boundaries for functions and
	should take account of what products are available in the marketplace.
	An example of how this might be expressed can be seen in the building
	blocks example (see the TOGAF Standard — Architecture Content).
	
	If a mechanism such as the Degrees of Interoperability is used, then a
	matrix showing the interoperability requirements is a useful tool, as
	illustrated in Figure 7-1 and Figure 7-2 , noting that the degree of
	information sharing is not necessarily symmetrical or bidirectional
	between systems and/or stakeholders.
	
	The matrix below can be used within the enterprise and/or within the
	extended enterprise as a way of detailing that information and/or
	services can be shared. The matrix should start in the Business
	Architecture (Phase B) to capture the nature of the sharing of
	information between stakeholders, and evolve to determine what systems
	share what information in Phase C.
	
	[]
	
	Figure 7-1: Business Information Interoperability Matrix
	
	Figure 7-1 shows that Stakeholder A requires structured data exchange
	(Degree 2) with Stakeholders/Systems B and D, and seamless sharing of
	data (Degree 3) with Stakeholders/Systems C, E, F, and G.
	
	The business information interoperability matrix should be refined
	within the Information Systems Architecture using refined measures and
	specifying the actual systems used by the stakeholders. A sample is
	shown in Figure 7-2 .
	
	[]
	
	Figure 7-2: Information Systems Interoperability Matrix
	
	In Figure 7-2 , both the nature of the exchange is more detailed (e.g.,
	Degree 3A versus only Degree 3) and the sharing is between specific
	systems rather than stakeholders. For example, System A shares
	information with the other systems in accordance with enterprise
	technical standards.
	
	In many organizations the Business Architectures describe the nature of
	the information shared between stakeholders and/or organizations (e.g.,
	in defense the term is "operational node"), and the Data Architecture
	specifies the information shared between systems.
	
	Update the defined target data and Application Architecture (Approved)
	with the interoperability issues that were raised.
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.5_Finalize_Architecture_Vision_and_Target_Architecture "7.5 Finalize Architecture Vision and Target Architecture"
	
	Tie-up any loose ends or mismatch in work packages and capabilities;
	resolve the impacts to the candidate architecture, and resolve impacts
	across the Target Architecture by performing stakeholder concern
	trade-off analysis. The roadmap should be significant in breadth for
	clear outcomes but shallow enough in depth to outline work packages
	without going into too much detail. The transition and migration plan
	must likewise demonstrate a minimum activity necessary to realize the
	roadmap. It is key to take the context of the Enterprise into account
	when formulating the implementation plan since there will be different
	approaches to consider depending on the business.
	
	Sub-steps to follow for both of these points include:
	
	-   Context Assessment – assess the roadmap components and work packages
	    in the context of the capability, value, and risk assessment
	-   Describe Candidate Transition Architecture – where there are
	    significant points being changed in the Target Architecture along
	    the roadmap, create a transition architecture that supports new
	    models, identify building blocks to be used in the transition,
	    identify views that address stakeholder concerns, and identify
	    specifications
	-   Resolve Impacts Across the Architecture – determine the impact and
	    interact with risk management to create a plan for the transition
	-   Perform Trade-off Analysis – interact with the requirements
	    management process to update requirements and with risk management
	    to update risk based on these trade-offs
	-   Have the Target State Approved by the Appropriate Stakeholder(s) –
	    you do not have a roadmap until the organization has signed up to do
	    the work. Without an agreement to do the required work you only have
	    an intention to change
	
snippet togaf_architecture-content_7_Architecture_Repository_7.5_Governance_Repository "7.5 Governance Repository"
	
snippet togaf_architecture-content_7_Architecture_Repository_7.6.1_Overview "7.6.1 Overview"
	
	The Architecture Requirements Repository is used by all phases of the
	ADM to record and manage all information relevant to the architecture
	requirements. The requirements address the many types of architecture
	requirements; i.e., strategic, segment, and capability requirements
	which are the major drivers for the Enterprise Architecture.
	
	Requirements can be gathered at every stage of the architecture
	development cycle and need to be approved through the various phases and
	governance processes.
	
	The Requirements Management phase is responsible for the management of
	the contents of the Architecture Requirements Repository and ensuring
	the integrity of all requirements and their availability for access by
	all phases.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.6.2_Contents_of_the_Architecture_Requirements_Repository "7.6.2 Contents of the Architecture Requirements Repository"
	
	The Architecture Requirements Repository holds architectural
	requirements of the required state of the enterprise at particular
	points in time. Due to the sheer volume and the diverse stakeholder
	needs throughout the architecture development cycle, the Architecture
	Requirements are divided into three levels of granularity:
	
	1.  Strategic Architecture Requirements show a long-term summary view of
	    the requirements for the entire enterprise.
	
	    Strategic Architecture Requirements identify operational and change
	    requirements for direction setting at an executive level.
	
	2.  Segment Architecture Requirements provide more detailed operating
	    model requirements for areas within an enterprise.
	
	    Segment Architecture Requirements may identify requirements at the
	    program or portfolio level to identify and align more detailed
	    change activity.
	
	3.  Capability Architecture Requirements identify the detailed
	    requirements for a particular unit of capability.
	
	    Capability Architecture Requirements identify requirements for
	    individual work packages and projects to be grouped within managed
	    portfolios and programs.
	
	The business outcomes for architecture requirements will be reflected in
	the Solutions Landscape over time. When this occurs, the architecture
	requirements are met and archived for audit purposes.
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7.6_Conclusion "7.6 Conclusion"
	
	Communicate the Architecture Vision and populate the governance model
	and process with stakeholders, review cycle, and objectives. Ensure that
	stakeholders and decisions-makers understand, agree with, and provide
	the license to proceed with populating the EA Landscape. This license to
	proceed with the stated vision, Target Architecture, and the roadmap
	constrains and guides all future architecture work. Creation of a value
	chain, , value streams, organization maps, strategy map, or balanced
	scorecard can be completed meaningfully when the Architecture to Support
	Strategy is ready.
	
	A list of duplicative efforts that require rationalization and a graph
	of sustain and improvement capabilities are populated into the roadmap.
	The stakeholders have successfully directed the creation of the
	architecture and have populated the governance details for further
	detailing and implementation of the architecture. This is the superior
	architecture[29] that will guide and direct the Architecture to Support
	Portfolio.
	
	Success is measured by alignment on the target state and clear
	understanding by the decision-makers and stakeholders of the effort
	required to achieve the target state.
	
snippet togaf_adm-techniques_7_Interoperability_Requirements_7.6_Reconciling_Interoperability_Requirements_with_Potential_Solutions "7.6 Reconciling Interoperability Requirements with Potential Solutions"
	
	The Enterprise Architect will have to ensure that there are no
	interoperability conflicts, especially if there is an intention to
	re-use existing SBBs and/or COTS.
	
	The most significant issue to be addressed is in fact business
	interoperability. Most SBBs or COTS will have their own business
	processes embedded. Changing the embedded business processes will often
	require so much work that the advantages of re-using solutions will be
	lost. There are numerous examples of this in the past.
	
	Furthermore, there is the workflow aspect between the various systems
	that has to be taken into account. The Enterprise Architect will have to
	ensure that any change to the business interoperability requirements is
	signed off by the Business Architects and architecture sponsors in a
	revised Statement of Architecture Work.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	1. Enterprise Architecture as Strategy (Ross et al., 2006) provides
	potential models.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.6_The_Architecture_Requirements_Repository "7.6 The Architecture Requirements Repository"
	
snippet togaf_architecture-content_7_Architecture_Repository_7.7_Solutions_Landscape "7.7 Solutions Landscape"
	
	The Solutions Landscape holds the SBBs which support the ABBS specified,
	developed, and deployed. The building blocks may be products or services
	which may be categorized according to the Enterprise Continuum
	categorization and/or the ABB specifications as Strategic, Segment, or
	Capability SBBs.
	
	SBBs may also include tools, systems, services, and information which
	describe the actual solutions that may be selected and their operation.
	For example, vendor-specific reference models or vendor-specific Levels
	4 and 5 of the IT4IT Reference Architecture would be defined here.
	
	However, the Solutions Landscape will not include the information and
	data content produced by the solutions selected; that is the
	responsibility of the solutions themselves.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.8_The_Enterprise_Repository "7.8 The Enterprise Repository"
	
	While the Architecture Repository holds information concerning the
	Enterprise Architecture and associated specifications and artifacts,
	there are a considerable number of enterprise repositories that support
	the architecture both inside and outside of the enterprise.
	
	These can include development repositories, specific operating
	environments, instructions, and configuration management repositories.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.9.1_External_Reference_Models "7.9.1 External Reference Models"
	
	There are many industry reference models available which may assist in
	understanding the role of and developing the reference architectures.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.9.2_External_Standards "7.9.2 External Standards"
	
	These relate to industry, best practice, or formal defined standards
	used by leading organizations. Examples include ISO, IEEE, and
	Government standards.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.9.3_Architecture_Board_Approvals "7.9.3 Architecture Board Approvals"
	
	Decisions made by the Architecture Board which affect the Enterprise
	Architecture are often recorded in the minutes of meetings. These
	minutes are often held in documentation archives which are excluded from
	the Architecture Repository for legal or regulatory reasons.
	
snippet togaf_architecture-content_7_Architecture_Repository_7.9_External_Repositories "7.9 External Repositories"
	
snippet togaf_togaf-leaders-guide_7_Alignment_with_Other_Frameworks_7_Alignment_with_Other_Frameworks "7 Alignment with Other Frameworks"
	
	The TOGAF framework is one of several major frameworks used by most
	enterprises for architecture development. Alignment and interaction with
	other major enterprise frameworks is required for assurance of outcome
	and governance. These enterprise frameworks approach the enterprise with
	a different focus, purpose, and terminology.
	
	This step requires the following questions to be answered:
	
	-   Is there a precedence of enterprise frameworks?
	-   What is the depth of commitment to different enterprise frameworks?
	-   How does the TOGAF framework fit in?
	
	Getting stuck on semantics between definition of a framework, method,
	and technique at this point has stalled several EA Capability
	improvement initiatives. Avoid this pitfall and focus on creating a
	mapping to answer the questions above. The purpose of this activity is
	to identify how the enterprise approaches planning, execution, and
	governance functions and how committed the enterprise is to these
	approaches, how established the approaches are, and how it thinks about
	itself.
	
snippet togaf_architecture-content_INDEX_7_Architecture_Repository "-   7. Architecture Repository"
	    -   7.1 Overview
	    -   7.2 Architecture Landscape
	    -   7.3 Reference Library
	        -   7.3.1 Overview
	    -   7.4 Standards Library
	        -   7.4.1 Overview
	        -   7.4.2 Types of Standard
	        -   7.4.3 Standards Lifecycle
	        -   7.4.4 Standards Classification within the Standards Library
	    -   7.5 Governance Repository
	        -   7.5.1 Overview
	        -   7.5.2 Contents of the Governance Repository
	    -   7.6 The Architecture Requirements Repository
	        -   7.6.1 Overview
	        -   7.6.2 Contents of the Architecture Requirements Repository
	    -   7.7 Solutions Landscape
	    -   7.8 The Enterprise Repository
	    -   7.9 External Repositories
	        -   7.9.1 External Reference Models
	        -   7.9.2 External Standards
	        -   7.9.3 Architecture Board Approvals
	
snippet togaf_architecture-content_7_Architecture_Repository_7_Architecture_Repository "7. Architecture Repository"
	
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 7.1 Overview | 7.2 Architecture Landscape | 7.3 Reference Library | 7.4 Standards Library | 7.5 Governance Repository | 7.6 The Architecture Requirements Repository | 7.7 Solutions Landscape | 7.8 The Enterprise Repository | 7.9 External Repositories
	  -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
snippet togaf_business-architecture_business-capabilities_7_Conclusion "7 Conclusion"
	
	Business capabilities are a key building block for developing and
	optimizing a Business or Enterprise Architecture. Linking business
	capabilities to their underlying components provides a business context
	for the underlying people, processes, information, and resources that
	combine to deliver value in the form of products and services to the
	stakeholders of a business.
	
	Organizing the business capabilities into a business capability map
	provides architects and stakeholders with a stable view of the business
	that is agnostic of the organization’s structure. The model describes
	what the business does, or expects to do, at some point in the future.
	This abstraction also helps business leaders to manage the overall
	complexity inherent in their business.
	
	Finally, mapping business capabilities to different business
	perspectives helps business leaders make better decisions.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] A Guide to the Business Architecture Body of Knowledge^(®)
	(BIZBOK^(®) Guide); see Referenced Documents.
	
	[2] This chart is not a complete list of possible business capabilities,
	much like any first pass where there is not enough time to meet with all
	stakeholder groups or there is not enough information to define a
	particular capability.
	
	[3] See https://www.businessarchitectureguild.org.
	
snippet togaf_architecture-skills-framework_7_Conclusions "7 Conclusions"
	
	The TOGAF Architecture Skills Framework provides an assessment of the
	skills required to deliver a successful Enterprise Architecture.
	
	It is hoped that the provision of this Architecture Skills Framework
	will help reduce the time, cost, and risk involved in training,
	recruiting, and managing IT architecture professionals, and at the same
	time enable and encourage more organizations to institute an Enterprise
	Architecture Practice, hopefully based on (or at least leveraging) the
	role and skill definitions provided.
	
	 
	
snippet togaf_digital-technology-adoption_7 _Conclusion "7  Conclusion"
	
	An important first step when embarking on a digital technology adoption
	journey is to assess the readiness of the organization. Measuring
	readiness is a systematic analysis of an organization’s ability to
	undertake a transformational process or change. Organizations need to
	assess the readiness of people, processes, ecosystem, technology, and
	systems. Likewise, organizational leadership should be evaluated based
	on their ability to adapt and implement digital technology. A readiness
	assessment identifies the potential challenges that might arise when
	implementing new procedures, structures, and processes within the
	current organizational context. Furthermore, through the identification
	of the gaps within the existing organization, the readiness assessment
	offers the opportunity to remedy these gaps either before or as part of
	the implementation plan.
	
	The DTRA provides a view of how ready the enterprise is for the changes
	related to digital technology adoption through the lens of
	experience-derived foundational factors, impact factors, and sustaining
	factors. This provides a quantifiable measurement for the preparedness
	of organizations to undergo a large transformation and identify gaps to
	be addressed. Organizations may not want to start a big transformation
	initiative without knowing if they have the right resources and
	conditions to accomplish the evolution effectively and derive the full
	benefits sustainably.
	
	Digital technologies and the transformation they bring provide a
	compelling opportunity to maximize the benefits to deliver value and
	attain growth. The DTRA helps to evaluate the current state of the
	organization for the respective factors. Based on industry experience,
	the impact of the gaps is also recommended in this document. The DTRA
	considers factors that apply to industries and domains across the board.
	The decision-maker may want to consider additional factors pertaining to
	the domain, industry, and organization. Similarly, the decision-maker
	can use the assessment questionnaire provided in a way they find
	beneficial in as-is form or along with additional questions that may
	help to gain better insight for the purpose. We recommend that you
	review factors where the score is other than “Strongly Agree” or
	“Agree”, with a view to taking appropriate measures to reduce any
	adverse impact and to improve the probability of success. Organizations
	may decide their course of action based on the potential of the
	opportunity, the impact of failure, and the risk of disruptive changes
	in the ecosystem. However, it is the responsibility of the
	decision-maker to make informed decisions and create a meaningful
	roadmap based on the DTRA outcome for the next steps in order to control
	the impact and guide the value realization with strong governance.
	
	------------------------------------------------------------------------
	
snippet togaf_adm_INDEX_7_C_Information_Systems_Architectures_Application "-   7. Phase C: Information Systems Architectures — Application"
	    Architecture
	    -   7.1 Objectives
	    -   7.2 Inputs
	        -   7.2.1 Reference Materials External to the Enterprise
	        -   7.2.2 Non-Architectural Inputs
	        -   7.2.3 Architectural Inputs
	    -   7.3 Steps
	        -   7.3.1 Select Reference Models, Viewpoints, and Tools
	            -   7.3.1.1 Determine Overall Modeling Process
	            -   7.3.1.2 Identify Required Catalogs of Application
	                Building Blocks
	            -   7.3.1.3 Identify Required Matrices
	            -   7.3.1.4 Identify Required Diagrams
	            -   7.3.1.5 Identify Types of Requirement to be Collected
	        -   7.3.2 Develop Baseline Application Architecture Description
	        -   7.3.3 Develop Target Application Architecture Description
	        -   7.3.4 Perform Gap Analysis
	        -   7.3.5 Define Candidate Roadmap Components
	        -   7.3.6 Resolve Impacts Across the Architecture Landscape
	        -   7.3.7 Conduct Formal Stakeholder Review
	        -   7.3.8 Finalize the Application Architecture
	        -   7.3.9 Create/Update the Architecture Definition Document
	    -   7.4 Outputs
	    -   7.5 Approach
	        -   7.5.1 Architecture Repository
snippet togaf_adm_7_C_Information_Systems_Architectures_Application_Architecture_7_C_Information_Systems_Architectures_Application_Architecture "7. Phase C: Information Systems Architectures — Application Architecture"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 7.1 Objectives | 7.2 Inputs | 7.3 Steps | 7.4 Outputs | 7.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the Application Architecture part of Phase C.
	
snippet togaf_business-architecture_business-scenarios_7_Developing_Business_Scenarios "7 Developing Business Scenarios"
	
snippet togaf_business-architecture_business-models_7_Example_of_a_Business_Model_Framework "7 Example of a Business Model Framework"
	
	We will now use a specific type of business model framework – the
	Business Model Canvas – to provide a use-case. Appendix A provides a
	deeper definition of the structural elements in the canvas and how to
	interpret them. The starting place to build a model in the canvas
	depends on the organization and the desired usage for describing
	business value. Our use-case will take us through a retail business,
	which relates to the examples previously used in the TOGAF Series Guides
	to Business Capabilities and Value Streams (see Referenced Documents).
	
	In Figure 6, we have a generic representation of a retail business model
	in its current state, meaning it represents how the business has been
	delivering value for the last several years. One way to understand the
	model is to read from the customers’ perspective – right-to-left –
	seeing how the business strives to serve both a mass retail shopper
	market and provide some regional specialization; provides both personal
	and sustained services; and gives shoppers both physical store
	shopfronts and the ability to find inventory ahead of time through the
	Internet. The business intends to provide greater value than the
	competition through lower prices, personalized help, and a better
	product range. To achieve this, they must have strong customer
	analytics, maintain their brand and facilities, and keep strong
	partnerships that lead to the right products through the right suppliers
	to meet those customer needs.
	
	[]
	
	Figure 6: Retailer Business Model Canvas – Current State
	
	Next we look at a situation that could lead to a change in the business
	model. The business may need to make significant changes due to market
	pressures, reduced sales, or increasing costs, or it may want to
	introduce new products or services to address unmet customer needs. A
	common guideline is that a truly new business model comes from a
	combined shift in customer segments and value proposition; anything
	narrower or on a smaller scale is merely an adjustment to the current
	business model.
	
	In the future-state model (see Figure 7), we see shifts in both the
	revenue-generating side of the canvas (increased specialization with
	specific customers, more online and digital presence, targeted value at
	the lowest possible cost) and the cost side (digital technologies being
	a key cost driver, a need for new partnerships, plus the global impacts
	on partnerships and costs). Some areas, such as key activities and
	sources of revenue, don’t change. Forming a new business model like this
	is a very people-oriented process, ideally based on good market,
	product, and cost data, but with leaders reaching alignment on how the
	business will deliver the most value in the future.
	
	Let’s focus on the potential role of the architect and the Business
	Architecture methodology involved in helping leadership make this
	journey. The retailer has decided to pursue a new business model based
	on sound market trends and competitive imperatives (addressed on the
	revenue-generating or right-hand side of the canvas), but lacks a clear
	understanding of how value is truly delivered to stakeholders. Value
	streams can help provide that exact understanding, which then lead to
	identifying key business capability gaps that in turn define the
	required changes to the cost (left-hand) side.
	
	[]
	
	Figure 7: Retailer Business Model Canvas - Future State
	
	As examples of these relationships:
	
	-   The shift in the business model’s direction drives a need to
	    reassess the “Acquire Retail Product” value stream as shown in the
	    TOGAF Series Guide to Value Streams (§4.1), where the value stages
	    may stay the same but some of the stakeholders, criteria, and value
	    items will be affected
	-   Value may now be delivered to the customer from all five value
	    stages when customers are located anywhere in the world, including
	    finding products specialized to their local needs
	-   The changes to internal resources and partnerships (digital
	    technologies as a key cost and source of new partnerships) could
	    lead to critical business capability gaps to support value delivery,
	    as detailed in the TOGAF Series Guide to Business Capabilities
	    (§4.2); e.g., there may be gaps in Product Marketing that must be
	    addressed to support a digital presence that includes online and
	    mobile shopping, along with other new requirements caused by the
	    desire for more global scale and partnerships
	
snippet togaf_adm-techniques_INDEX_7_Interoperability_Requirements "-   7. Interoperability Requirements"
	    -   7.1 Overview
	    -   7.2 Defining Interoperability
	    -   7.3 Enterprise Operating Model
	    -   7.4 Refining Interoperability
	    -   7.5 Determining Interoperability Requirements
	    -   7.6 Reconciling Interoperability Requirements with Potential
	        Solutions
	        -   Footnotes
snippet togaf_adm-techniques_7_Interoperability_Requirements_7_Interoperability_Requirements "7. Interoperability Requirements"
	
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 7.1 Overview | 7.2 Defining Interoperability | 7.3 Enterprise Operating Model | 7.4 Refining Interoperability | 7.5 Determining Interoperability Requirements | 7.6 Reconciling Interoperability Requirements with Potential Solutions
	  -- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter provides guidelines for defining and establishing
	interoperability requirements.
	
snippet togaf_reference-models_government-reference-model_7_Judiciary_Justice_and_Home_Affairs "7 Judiciary, Justice, and Home Affairs"
	
	Judiciary, Justice, and Home Affairs covers the total cost of judiciary,
	prosecution, expenses connected with funding protection, law enforcement
	services, and the cost of criminal justice including incarceration,
	supervision, parole, and rehabilitation of prisoners.
	
	[]
	
	Figure 7: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Judiciary, Justice, and Home Affairs Sector
	
snippet togaf_guides_microservices-architecture_7_Phase_B_Business_Architecture "7 Phase B: Business Architecture"
	
	An MSA is normally targeted to a single business function within a
	larger organization. Business functions are subsets of the enterprise
	that provide services and products that are consumed by customers and
	partners. These customers and partners may be wholly contained within
	the business. An enterprise has many, sometimes overlapping business
	functions. When a decision has been made to commit to an MSA for the
	business function (an organization within the larger enterprise), an
	architecture effort should be started to create the initial architecture
	for the function. The Business Architecture for the function needs to
	provide context for the business function within the enterprise as well
	as an understanding of the services and operations that the business
	function provides. This initial architecture serves as the baseline for
	future architecture efforts.
	
	+-----------------------------------------------------------------------+
	| Business Function                                                     |
	|                                                                       |
	| According to the TOGAF Standard, a business function is:              |
	|                                                                       |
	| “A collection of business behavior based on a chosen set of criteria, |
	| closely aligned to an organization.”                                  |
	+-----------------------------------------------------------------------+
	| Atomic Business Function                                              |
	|                                                                       |
	| The MSA Work Group defines an Atomic Business Function (ABF) to be    |
	| the smallest unit of business function within an enterprise that      |
	| delivers value. An ABF typically provides services supporting a       |
	| single enterprise capability. Business capabilities are delivered by  |
	| processes carried out by business functions which may be composed of  |
	| other business functions. As an example, most organizations have a    |
	| business function for marketing. The marketing function may contain a |
	| customer loyalty business function within it. If the loyalty function |
	| does not contain any other business functions, it is an ABF providing |
	| services around the capability of managing customer loyalty           |
	| relationships.                                                        |
	+-----------------------------------------------------------------------+
	
	Once the initial MSA for the business function has been established,
	future iterations should be focused on the changes related to the
	business function supported by the MSA and the context of the function
	within the overall organization.
	
	An MSA is not created in a vacuum, but is constrained by the overall
	Enterprise Architecture. This helps to reduce redundancies that may
	occur when multiple business functions share a need for common
	capabilities.
	
	When developing a Business Architecture for an MSA project, the
	practitioner should limit the scope of the Business Architecture to that
	of the business function. Once the Business Architecture has been
	established for the business function, it can be re-used for future
	iterations.
	
snippet togaf_business-architecture_information-mapping_7_Putting_Information_Maps_into_Practice "7 Putting Information Maps into Practice"
	
	To assist the reader in the development of an initial Information Map, a
	tabular example of common information concepts and linkages between them
	is provided in Table 1.[2] In the Information Concept Category column,
	the Secondary terms belong under the Primary term above. The architect
	can start with this basic reference, then with business and corporate
	leaders to:
	
	-   Extract and modify the information concepts that apply
	-   Add definitions that make the most sense in context (a business
	    glossary)
	-   Build out areas such as products or customers (common taxonomy to
	    guide decisions)
	-   Provide a reference for mapping business capability gaps (driven by
	    ability to deliver value) to the key information needed as part of
	    solving those gaps
	-   Act as the starting point for cross-mapping to stakeholders
	
	[]
	
	Table 1: Reference Table for an Information Map
	
snippet togaf_business-architecture_organization-mapping_7_Putting_Organization_Maps_into_Practice "7 Putting Organization Maps into Practice"
	
	Continuing with the retail business examples that have been used
	throughout the Business Architecture TOGAF^(®) Series Guides (see
	Referenced Documents), a typical organization map for a global retail
	corporation might look like that shown in Figure 4.
	
	[]
	
	Figure 4: Retail Business Organization Map
	
	As a reminder, the central oval (the enterprise) should be interpreted
	as denoting the total scope to be represented in the map, not just as
	the name of the legal entity. Also note that all of these entities are
	organization units, while the term business unit is being used to denote
	the next level below the enterprise (in this case representing lines or
	channels of business).
	
	Not only is it immediately apparent how the business functions at an
	organizational as well as operational level, but the organization map
	can be extended to show the relationships between organization units and
	other Business Architecture domains such as business capabilities.
	Figure 5 shows an example of cross-mapping the Project Management of the
	IT organization unit and the Learning Management of Sales & Marketing.
	Note the ability to also apply heat mapping to each capability to
	provide a visual indication of performance, maturity, or some other
	relevant attribute.
	
	[]
	
	Figure 5: Organization Unit-to-Business Capability Cross-Mapping
	
snippet togaf_adm-practitioners_7_Walk_Through_Architecture_to_Support_Strategy_7_Walk_Through_Architecture_to_Support_Strategy "7 Walk Through Architecture to Support Strategy"
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.1.1_Business_Transformation_Enablement_Program_BTEP "8.1.1 Business Transformation Enablement Program (BTEP)"
	
	The Canadian Government Business Transformation Enablement Program
	(BTEP) provides guidance on how to identify the business
	transformation-related issues.
	
	The BTEP recommends that all projects conduct a transformation readiness
	assessment to at least uncover the business transformation issues. This
	assessment is based upon the determination and analysis/rating of a
	series of readiness factors. The outcome is a deeper understanding of
	the challenges and opportunities that could be presented in the course
	of the endeavor. Many of the challenges translate directly into risks
	that have to be addressed, monitored, and, if possible, mitigated.
	
	The following sections describe Business Transformation Readiness
	Assessment using the BTEP method, including some lessons learned.
	Readers should keep in mind that most organizations will have their own
	unique set of factors and criteria, but most are similar.
	
snippet togaf_guides_microservices-architecture_8.1_Data_Architecture "8.1 Data Architecture"
	
	The Data Architecture of an MSA is constrained by the data being
	collected and distributed by the business function supported by the MSA.
	This means that the relevant entities, attributes, and relationships are
	also constrained.
	
	-   Data Entity Catalog
	
	Provides brief descriptions of the domain data entities within the
	context of the business function.
	
	-   Data Entity to Business Function Mapping (Matrix)
	
	An MSA is focused on a single business function, but may feed data to
	other functions and may be provided with data that originates
	externally. This matrix shows the external feeds and providers used to
	maintain the MSA.
	
	-   Data to Application Mapping (Matrix)
	
	This table matches the data collected or exposed to the individual
	services and operations used for data access.
	
	-   Conceptual and Logical Data Diagrams
	
	These diagrams represent the standard conceptual (business-oriented,
	domain entities, and core relationships only) and logical (entities and
	significant fields) in the context of the business function supported by
	the MSA.
	
	-   Data Distribution Models and Diagrams
	
	Most data stores in an MSA will use one form of distributed data model
	or another. This diagram needs to capture the distribution model used
	for each data store within the MSA. In data stores using shards the
	sharding strategy should be included as part of the discussion of this
	diagram.
	
	-   Data Security Mapping
	
	Maps the security levels to data entities or attributes depending on the
	requirements. If entity mapping is used, the entity should be mapped
	based on the highest security requirement of any attribute contained
	within the entity.
	
	-   Data Lifecycle Mapping
	
	This maps data entities to the expected duration of the existence of
	their instances. This may be driven by retention policies.
	
	-   Data Migration Mapping
	
	Data migration typically covers movement of data between retiring
	systems and new systems. In the MSA context, there may also be migration
	between MSA live systems and batch systems that are updated
	periodically. When this occurs it is important to show those systems
	that participate in this type of batch transfer and the frequencies or
	triggers of the transfers.
	
snippet togaf_reference-models_government-reference-model_8.1_Financial_Taxonomy "8.1 Financial Taxonomy"
	
	  Sector      Function                   Service                                                                                                                                     Description
	  ----------- -------------------------- ------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------
	  Financial   Revenue                    Activities associated with the collection of money owed to the government from domestic and foreign sources.                                
	                                         Tax Office                                                                                                                                  Responsible for the administration of the tax system, tax policy development, maintenance, and implementation.
	                                         Social Security                                                                                                                             Promotes the welfare of the population through assistance measures to help in case of instability of living and to prevent such instability.
	                                         Import Duty                                                                                                                                 The collection of taxes on imports and some exports by customs authorities.
	                                         Tax and Revenue Compliance                                                                                                                  Supports individuals and businesses towards compliance with taxation requirements and surrendering of taxes and levies to the government.
	              Strategic Finance          Activities pertaining to delivering long-term financial strategies to support future service delivery, financial monitoring, and control.   
	                                         Policy Support                                                                                                                              Assesses the sustainability of current programs and policies.
	                                         Corporate and Business Planning                                                                                                             Examines internal capabilities and lays out strategies for how to use those capabilities to meet goals.
	                                         Strategic Risk                                                                                                                              Analyzes exposure to risk and determines appropriate measures to ensure continued activities.
	                                         Financial Planning                                                                                                                          Assesses the long-term fiscal needs of the government and acquires, allocates resources, and manages costs.
	                                         Investment Decisions                                                                                                                        Determines where and how much capital will be spent on investment opportunities.
	              Accounting and Reporting   Activities to identify, organize, classify, record, summarize, and communicate information of financial transactions.                       
	                                         Finance Business Partnering                                                                                                                 Manages business partnerships and relationships between businesses, organizations, and individuals that contribute to the government’s objectives.
	                                         Finance Planning and Performance                                                                                                            Defines the set of capabilities to measure the effectiveness of a government’s financial assets and capital.
	                                         Accounting Standards Compliance                                                                                                             Ensures that accounting information is uniform and accounting decisions are made in a reasonable way.
	              Investment Management      Refers to the handling of financial assets and other investments.                                                                           
	                                         Cash Management                                                                                                                             The process of collecting and managing cash flows.
	                                         Investments                                                                                                                                 Monetary assets acquired with the goal of generating income in the future.
	                                         Shareholders of Owned Subsidiaries                                                                                                          Refers to shares in a company owned or controlled by a parent company.
	                                         Pension Fund Management                                                                                                                     About investing and managing pension fund assets to optimize contributions made into that pension fund.
	              Risk and Audit             Methodical examination and review of regulated activities to ensure compliance with standards for regulated activity.                       
	                                         Enterprise Risk                                                                                                                             Identifies and addresses the potential events that represent risks to the achievement of strategic objectives.
	                                         Financial Governance                                                                                                                        Collects, manages, monitors, and controls financial information.
	                                         Internal Audit                                                                                                                              Provides independent assurance that a government’s risk management, governance, and internal control processes are operating effectively.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.1_Introduction "8.1 Introduction"
	
	Almost all EA engagements, external or with an in-house EA team, are
	initiated for an Enterprise that has been in existence for a while.
	Whether explicitly initiated or acknowledged, an architecture is in
	place and solutions are being delivered against that architecture. Even
	when the Architecture to Support Strategy has been created for the first
	time, there are ongoing efforts and their impact that will have to be
	accounted for.
	
	The primary objective of Architecture to Support Portfolio is to
	identify projects, identify dependencies and synergies, and prioritize
	and initiate the projects. From that perspective, it would appear that
	all of the work is confined to Phase F to complete the architecture work
	and transition to solution delivery work.
	
	The Enterprise’s solutions are delivered on a continuum. This continuum
	is split into four phases, all focused on achieving the objective to
	meet stated goals. These phases are:
	
	-   Stay on par with other players in the market for a given capability
	-   Maintain the edge a capability has over other players
	-   Create new differentiations in capabilities
	-   Create new markets and revenue streams
	
	Once a new capability or a differentiation in a capability is achieved,
	the incremental advantage will have to be maintained.
	
	[]
	
	Figure 16: Capability and Project Continuum
	
	It is imperative that Architecture to Support Portfolio takes into
	account an existing implicit or explicit Target Architecture and the
	impact driven by in-flight projects. Hence, in true sense, this work
	starts in Phase H of the ADM. The work is considered complete when all
	the specifications that constrain the Architecture to Support Project
	are defined, understood, and signed off. In other words, the need to
	perform Phase A for the solution delivery projects that are triggered by
	the portfolio is complete.
	
	In doing to so, the architecture provides a data-driven approach to
	reduce the possibility of one set of decision-makers netting the
	majority of the available budget because of the way it has been in the
	past. This is achieved by developing appropriate models, like-to-like
	comparison, and incremental exploration of the EA Landscape to assess
	impacts and dependencies.
	
	It is imperative that the Architecture to Support Portfolio concludes at
	least 30 days before the budget preparation. A best practice is to is
	offset this work by at least a quarter (three months) from the business
	cycle of the Enterprise.
	
	Questions answered by this effort are:
	
	-   Is the architecture recent and current enough to guide decisions?
	-   What is the confidence that the allocated budget drives the
	    Enterprise closer to target state?
	-   Are the controls on risks sufficient enough to trigger and guide
	    viable alternate actions?
	-   How often is the solution delivered to be inspected to assure
	    general correctness of direction?
	-   How to identify and initiate changes when any of the trade-off
	    criteria are impacted?
	
	When pivoting on program and project management concepts, a portfolio
	can include operational improvement efforts; not a clearly defined
	end-date for closure. The intrinsic value of the Enterprise is elevated
	when related and cohesive parts of the EA Landscape are improved. From
	an EA point of view, a portfolio addresses improvement of the intrinsic
	value and reduction of risk factors.
	
	Table 6 summarizes the activities and use of appropriate steps from the
	ADM phases. The content of the table is discussed in detail in the rest
	of this chapter.
	
	Table 6: Summary Table: ADM Phases and Architecture to Support Portfolio
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Group Work Packages to Themes     | Partial Strategic Level Phase H   |
	| (Section 8.2)                     |                                   |
	|                                   | -   Enterprise context:           |
	|                                   | -   In-flight projects and gaps   |
	|                                   | -   Current fiscal year roadmap   |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Goals                         |
	|                                   | -   Request for Architecture Work |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase A   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Updated strategic             |
	|                                   |     architecture                  |
	|                                   | -   Updated roadmap               |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Work package and themes       |
	|                                   | -   Stakeholder priority          |
	|                                   |     trade-off                     |
	|                                   | -   Updated architecture          |
	|                                   |     specifications                |
	|                                   | -   Traceability matrix for value |
	|                                   |     proposition                   |
	|                                   |                                   |
	|                                   | Partial Strategic Level Phase G   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Perform architecture          |
	|                                   |     compliance reviews            |
	|                                   | -   Risk assessment               |
	+-----------------------------------+-----------------------------------+
	| Balance Opportunity and Viability | Partial Capability Level Phases   |
	| (Section 8.3)                     | B, C, and D                       |
	|                                   |                                   |
	|                                   | For each capability or project in |
	|                                   | the portfolio:                    |
	|                                   |                                   |
	|                                   | -   Elaborate specifications to   |
	|                                   |     estimate effort size          |
	|                                   | -   Identify reference            |
	|                                   |     architectures and market      |
	|                                   |     benchmarks                    |
	|                                   | -   Identify candidate ABBs       |
	|                                   | -   Identify Solution Building    |
	|                                   |     Blocks (SBBs) (optional)      |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase E  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Identify solution providers   |
	|                                   | -   Readiness assessment          |
	|                                   | -   Gather estimates              |
	|                                   | -   Assess viability and fitness  |
	|                                   |     of solution options           |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase F  |
	|                                   |                                   |
	|                                   | For each capability in the        |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Initial/draft Implementation  |
	|                                   |     and Migration Plan            |
	|                                   | -   Draft governance plan         |
	|                                   |                                   |
	|                                   | Partial Project Level Phase A     |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Candidate proof-of-concept    |
	|                                   |     work packages (as needed)     |
	|                                   | -   Draft success measures        |
	+-----------------------------------+-----------------------------------+
	| Run Up to Budget                  | Partial Capability Level Phase A  |
	| (Section 8.4)                     |                                   |
	|                                   | For each capability or project in |
	|                                   | the portfolio:                    |
	|                                   |                                   |
	|                                   | -   Update roadmap                |
	|                                   | -   Update risk matrix            |
	|                                   | -   Update work package and       |
	|                                   |     architecture specification    |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase F  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Populate governance and       |
	|                                   |     approval plan                 |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase G  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Finalize governance model and |
	|                                   |     plan                          |
	+-----------------------------------+-----------------------------------+
	| Drive Confidence of Delivery      | Partial Enterprise Level Phase F  |
	| (Section 8.5)                     |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Initiate completion of        |
	|                                   |     architecture work             |
	|                                   | -   Define target transition      |
	|                                   |     architectures                 |
	|                                   | -   Finalize effort and resource  |
	|                                   |     estimates                     |
	|                                   | -   Define variance measures in   |
	|                                   |     project-specific governance   |
	|                                   |     model                         |
	|                                   | -   Update risk matrix            |
	|                                   |                                   |
	|                                   | Context specific for the EA       |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Revise EA governance          |
	|                                   | -   Revise EA engagement model    |
	|                                   | -   Revise EA organization model  |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.1_Introduction "8.1 Introduction"
	
	Enterprise Architecture is a major endeavor within an organization and
	most often an innovative Architecture Vision (Phase A) and supporting
	Architecture Definition (Phases B to D) will entail considerable change.
	There are many dimensions to change, but by far the most important is
	the human element. For example, if the enterprise envisages a
	consolidation of information holdings and a move to a new paradigm such
	as service orientation for integrated service delivery, then the human
	resource implications are major. Potentially coupled with a
	change-averse culture and a narrowly skilled workforce, the most sound
	and innovative architecture could go nowhere.
	
	Understanding the readiness of the organization to accept change,
	identifying the issues, and then dealing with them in the Implementation
	and Migration Plans is key to successful architecture transformation in
	Phases E and F. This will be a joint effort between corporate
	(especially human resources) staff, lines of business, and IT planners.
	
	The recommended activities in an assessment of an organization's
	readiness to address business transformation are:
	
	-   Determine the readiness factors that will impact the organization
	-   Present the readiness factors using maturity models
	-   Assess the readiness factors, including determination of readiness
	    factor ratings
	-   Assess the risks for each readiness factor and identify improvement
	    actions to mitigate the risk
	-   Work these actions into Phase E and F Implementation and Migration
	    Plan
	
snippet togaf_adm_8_D_Technology_Architecture_8.1_Objectives "8.1 Objectives"
	
	The objectives of Phase D are to:
	
	-   Develop the Target Technology Architecture that enables the
	    Architecture Vision, target business, data, and application building
	    blocks to be delivered through technology components and technology
	    services, in a way that addresses the Statement of Architecture Work
	    and stakeholder concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Technology Architectures
	
snippet togaf_business-architecture_business-scenarios_8.1_Textual_Documentation "8.1 Textual Documentation"
	
	Effective Business Scenario documentation requires a balance between
	ensuring that the detail is accessible, and preventing it from
	overshadowing the results and overwhelming the reader. To this end, the
	Business Scenario document should have the main findings in the body of
	the document and the details in appendices.
	
	In the appendices:
	
	-   Capture all the important details about a Business Scenario:
	
	—  Situation description and rationale
	
	—  All measurements
	
	—  All actor roles and sub-measurements
	
	—  All services required
	
	-   Capture the critical steps between actors that address the
	    situation, and sequence the interactions
	-   Declare relevant information about all actors:
	
	—  Partition the responsibility of the actors
	
	—  List pre-conditions that have to be met prior to proper system
	functionality
	
	—  Provide technical requirements for the service to be of acceptable
	quality
	
	In the main body of the Business Scenario:
	
	-   Generalize all the relevant data from the detail in the appendices
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8.1_What_is_the_EA_Capabilitys_Purpose_Supporting_Decision-Making_and_Governance "8.1 What is the EA Capability’s Purpose Supporting Decision-Making and Governance?"
	
	With the understanding of the outcomes expected from the EA Capability,
	consider the information the EA Capability requires.
	
	As a rule-of-thumb, the more high-level decision-making the EA
	Capability supports, the less detail and consistency are required in
	documentation and supporting information. The more it focuses on
	governance of change project and solution delivery activity, the more
	detail and consistency are required in supporting information and
	documentation.
	
	The level of detail required will directly impact the choices on the
	structure of the architecture repository and how formal the team
	delivering the EA Capability needs to be. The need for detail and
	consistency drives formal architecture modeling techniques for
	traceability and consistent documentation stored in a well-structured
	repository.
	
	Consider that detail and consistency come at a price regarding tooling,
	process integration, and skill within the team that delivers the EA
	Capability.
	
snippet togaf_adm_8_D_Technology_Architecture_8.2.1_Reference_Materials_External_to_the_Enterprise "8.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	-   Product information on candidate products
	
snippet togaf_adm_8_D_Technology_Architecture_8.2.2_Non-Architectural_Inputs "8.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	
snippet togaf_adm_8_D_Technology_Architecture_8.2.3_Architectural_Inputs "8.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Technology principles (see the TOGAF Standard — ADM Techniques), if
	    existing
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Gap analysis results (from Business, Data, and Application
	        Architectures)
	    -   Relevant technical requirements from previous phases
	-   Business, Data, and Application Architecture components of an
	    Architecture Roadmap (see the TOGAF Standard — Architecture Content)
	
snippet togaf_guides_microservices-architecture_8.2_Application_Architecture "8.2 Application Architecture"
	
	In general, the Application Architecture is about the applications used
	by a business organization to deliver the capabilities of that
	organization. An MSA is more constrained and is focused on the delivered
	capabilities of a business function within a larger organization. In
	this context, “application” typically refers to services and service
	operations; however, there may be tools and utilities like configuration
	editors and such that are used to support and maintain the underlying
	services and the supporting infrastructure.
	
	The common artifacts for the Application Architecture and how they map
	to an MSA include:
	
	-   Application Portfolio Catalog
	
	In the MSA context, the Application Portfolio Catalog becomes the list
	of available services and operations exposed to external and internal
	consumers of those services.
	
	-   Interface Catalog
	
	Describes the SOA contract information required to understand, interact
	with, and consume the services exposed by the MSA. This may also cover
	the requirements for establishing credentials and service levels for the
	consumers of each operation.
	
	-   Application to Role Matrix
	
	This is a matrix describing the services and operation available to
	consumers acting in various roles.
	
	-   API to Consumer (Interaction) Mapping
	
	This maps the various service interfaces to classes of expected
	consumers or to individual consumers as needed. It should be noted that
	in some cases this might need to be implemented using a report based on
	actual and planned consumers of the services.
	
	-   Application Use-Case Diagrams
	
	A collection of use-cases and/or business scenarios giving context and
	describing how specific services and operations are intended to be used.
	
	-   Process/Application Realization Diagram
	
	Descriptions and process diagrams showing how the various services and
	operations are expected to operate.
	
	-   Application Deployment/Distribution Model
	
	An MSA will always be a distributed system. This model describes the
	distribution mechanism for the nodes of the MSA and should also cover
	when the numbers or nodes are expected to grow or shrink in response to
	demand or failover situations. In general, the TOGAF Standard considers
	this an extension to the normal Information Systems Architecture
	artifacts, but this is critical for an MSA.
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8.2_Are_there_Specific_Questions_to_be_Addressed "8.2 Are there Specific Questions to be Addressed?"
	
	EA Capability is established for a purpose. That purpose helps define
	the questions that the EA Capability is expected to answer.
	
	Keep in mind that this Guide deliberately does not refer to an EA team
	or organization. It is very common that organizationally associated
	resources answer many of the questions asked of an EA Capability.
	
	Some of the typical questions asked of the team delivering the EA
	Capability to support decision-making at a portfolio level include:
	
	1.  To execute on strategy “A”, what are the the size and scope of
	    impact on organizational changes, process, procedures, and
	    technologies?
	2.  What if the enterprise switched the service provider from “A” to
	    “B”? How soon can change be initiated and completed? Who should be
	    involved? And so on.
	3.  What should be done in response to one of the technology suppliers
	    changing its product?
	4.  A vulnerability has been identified in the product sourced from a
	    key supplier. The supplier has provided a mitigation option. What is
	    the exposure from the vulnerability? How soon should the fix be
	    applied? What would be the potential impact during and after the
	    mitigation process has been operationalized?
	5.  What are the possible root causes of complaints from the customers
	    regarding product “A”?
	6.  How should the delivery against the portfolio be aligned to optimize
	    operational cost?
	7.  How can the enterprise maximize differentiation by aligning delivery
	    of the portfolio?
	8.  How can the enterprise minimize time-to-market by modifying delivery
	    options on the portfolio?
	9.  How can the efforts on innovation be maximized by adjusting delivery
	    against the portfolio?
	10. What is the optimal level and ease of communication amongst
	    technology and material suppliers to maintain the operational
	    stability of the enterprise?
	11. Is there any wasteful work done or latency introduced with any
	    process flow related to delivery of products and services to
	    customers?
	
	Each of these questions requires the EA Capability to have different
	information. The different expectations from the team providing the EA
	Capability will shape the information that is required and the different
	work products to be produced. In short, these questions will identify
	the concerns that the EA Capability must address.
	
	Successful, high-functioning EA Capability teams maintain a viewpoint
	library that identifies such questions, and the information the team
	providing the EA Capability must have to answer. The information to
	which the EA Capability team must have ready access will define the
	Content Metamodel and repository approach.
	
	One of the steps in establishing a high-functioning EA Capability is
	defining the viewpoint library. Consider the purpose the EA Capability
	is being established to serve. This purpose will likely highlight
	classes of stakeholders and their consistent concerns. This set of
	consistent stakeholders and concerns will identify the information the
	EA Capability must have to answer stakeholder concerns. This will drive
	the design of the Content Framework, Content Metamodel, and the
	formality of the EA repository.
	
snippet togaf_business-architecture_business-scenarios_8.2_Business_Scenario_Models "8.2 Business Scenario Models"
	
	Remember the purpose of using models is to:
	
	-   Help comprehension
	-   Give a starting point to confirm requirements
	-   Relate actors and interactions
	
	Keep drawings clear and neat:
	
	-   Do not put too much into one diagram
	-   Simpler diagrams are easier to understand
	
	Number diagrams for easy reference:
	
	-   Maintain a catalog of the numbers to avoid duplicates
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.2_Determine_Readiness_Factors "8.2 Determine Readiness Factors"
	
	The first step is to determine what factors will impact on the business
	transformation associated with the migration from the Baseline to Target
	Architectures.
	
	This can be best achieved through the conduct of a facilitated workshop
	with individuals from different parts of the organization. It is
	important that all perspectives are sought as the issues will be varied.
	In this workshop it is very useful to start off with a tentative list of
	factors that participants can re-use, reject, augment, or replace.
	
	An example set of factors drawn from the BTEP follows:
	
	-   Vision is the ability to clearly define and communicate what is to
	    be achieved
	
	    This is where management is able to clearly define the objectives,
	    in both strategic and specific terms. Leadership in defining vision
	    and needs comes from the business side with IT input. Predictable
	    and proven processes exist for moving from vision to statement of
	    requirements. The primary drivers for the initiative are clear. The
	    scope and approach of the transformation initiative have been
	    clearly defined throughout the organization.
	
	-   Desire, Willingness, and Resolve is the presence of a desire to
	    achieve the results, willingness to accept the impact of doing the
	    work, and the resolve to follow through and complete the endeavor
	
	    There is active discussion regarding the impact that executing the
	    project may have on the organization, with a clear indication of the
	    intent to accept the impacts. Key resources (e.g., financial, human,
	    etc.) are allocated for the endeavor and top executives project the
	    clear message that the organization will follow through; a message
	    that identifies the effort as well as the benefits. Organizationally
	    there is a history of finishing what is started and of coming to
	    closure on issues in the timeframes needed and there is agreement
	    throughout the organization that the transformation initiative is
	    the "right" thing to do.
	
	-   Need, in that there is a compelling need to execute the endeavor
	
	    There are clear statements regarding what the organization will not
	    be able to do if the project does not proceed, and equally clear
	    statements of what the project will enable the organization to do.
	    There are visible and broadly understood consequences of endeavor
	    failure and success criteria have been clearly identified and
	    communicated.
	
	-   Business Case exists that creates a strong focus for the project,
	    identifying benefits that must be achieved and thereby creating an
	    imperative to succeed
	
	    The business case document identifies concrete benefits (revenues or
	    savings) that the organization is committed to deliver and clearly
	    and unquestionably points to goals that the organization is
	    committed to achieving.
	
	-   Funding, in the form of a clear source of fiscal resources, exists
	    that meets the endeavor's potential expenditures
	
	-   Sponsorship and Leadership exists and is broadly shared, but not so
	    broad as to diffuse accountability
	
	    Leadership keeps everyone "on board" and keeps all focused on the
	    strategic goals. The endeavor is sponsored by an executive who is
	    appropriately aligned to provide the leadership the endeavor needs
	    and able to articulate and defend the needs of the endeavor at the
	    senior management level. These executive sponsors are and will
	    remain engaged throughout.
	
	-   Governance is the ability to engage the involvement and support of
	    all parties with an interest in or responsibility to the endeavor
	    with the objective of ensuring that the corporate interests are
	    served and the objectives achieved
	
	    There are clearly identified stakeholders and a clear sense of their
	    interest in and responsibility to the project; a culture that
	    encourages participation towards corporate rather than local
	    objectives; a history of being able to successfully manage
	    activities that cross interest areas; a culture that fosters
	    meaningful, as opposed to symbolic, participation in management
	    processes; and a commitment to ongoing project review and challenge
	    and openness to outside advice.
	
	-   Accountability is the assignment of specific and appropriate
	    responsibility, recognition of measurable expectations by all
	    concerned parties, and alignment of decision-making with areas of
	    responsibility and with where the impact of the decisions will be
	    felt
	
	    Accountability is aligned with the area where the benefits of
	    success or consequences of failure of the endeavor will be felt as
	    well as with the responsibility areas.
	
	-   Workable Approach and Execution Model is an approach that makes
	    sense relative to the task, with a supporting environment, modeled
	    after a proven approach
	
	    There are clear notions of the client and the client's role relative
	    to the builder or prime contractor and the organization is
	    experienced with endeavors of this type so that the processes,
	    disciplines, expertise, and governance are already in place, proven,
	    and available to apply to the transformation endeavor. All the
	    players know their roles because they have played them before with
	    success. In particular, the roles of "client" and "systems builder"
	    are mature and stable. There is a communication plan covering all
	    levels of the organization and meeting the needs ranging from
	    awareness to availability of technical detail. There is a reward and
	    recognition plan in place to recognize teams and individuals who use
	    good change management practices, planning and prevention of crisis
	    behaviors, and who reinforce behaviors appropriate to the new way of
	    doing business. It is clear to everyone how implementation will
	    occur, how it will be monitored, and how realignment actions will be
	    made and there are adequate resources dedicated for the life of the
	    transformation.
	
	-   IT Capacity to Execute is the ability to perform all the IT tasks
	    required by the project, including the skills, tools, processes, and
	    management capability
	
	    There has been a recent successful execution of a similar endeavor
	    of similar size and complexity and there exist appropriate
	    processes, discipline, skills, and a rationale model for deciding
	    what skills and activities to source externally.
	
	-   Enterprise Capacity to Execute is the ability of the enterprise to
	    perform all the tasks required by the endeavor, in areas outside of
	    IT, including the ability to make decisions within the tight time
	    constraints typical to project environments based upon the recent
	    successful execution of a similar endeavor of at least half the size
	    and complexity
	
	    There exist non-IT-specific processes, discipline, and skills to
	    deal with this type of endeavor. The enterprise has a demonstrated
	    ability to deal with the type of ongoing project/portfolio
	    management issues and requirements. There is a recognition of the
	    need for knowledge and skill-building for the new way of working as
	    well as the value of a formal gap analysis for skills and behavior.
	
	-   Enterprise Ability to Implement and Operate the transformation
	    elements and their related business processes, absorb the changes
	    arising from implementation, and ongoing ability to operate in the
	    new environment
	
	    The enterprise has a recent proven ability to deal with the change
	    management issues arising from new processes and systems and has in
	    place a solid disciplined and process-driven service management
	    program that provides operations, maintenance, and support for
	    existing systems.
	
	Once the factors have been identified and defined, it is useful to call
	a follow-on workshop where the factors shall be assessed in some detail
	in terms of their impact/risk. The next section will deal with preparing
	for an effective assessment of these factors.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.2_Group_Work_Packages_to_Themes_30 "8.2 Group Work Packages to Themes[30]"
	
	The minimum dataset required to initiate this effort is:
	
	-   Current fiscal year’s roadmap (to the extent available)
	-   List of in-flight projects and relationship to objectives
	-   Strategic architecture (gaps, work package, and candidate roadmap)
	    for the next fiscal year, from Architecture to Support Strategy
	-   Catalog of stakeholders, decision-makers, and implementers
	-   Risk catalog
	
	Note: The backlog from the current fiscal year is not of concern, as the
	Architecture to Support Strategy has accounted for them.
	
	Given the context surrounding the Enterprise and the EA project, develop
	a Baseline Architecture from the current state architecture created by
	the superior architecture (Architecture to Support Strategy). The
	Baseline Architecture is not a physical thing. It is a point of
	reference in time, defining a metric and a measure to enable value
	reporting. The baseline is a collective view that provides credit for
	value added by in-flight projects. All value assessment and trade-off
	shall be performed against the baseline.
	
	The Baseline Architecture groups the in-flight projects against the new
	objectives defined in the Target Architecture. It is possible that
	in-flight projects may not align cleanly with the Target Architecture.
	When a project aligns to more than one objective, assigning credit from
	such an effort to all objectives to create the baseline will not impact
	the value reporting. The impact of gaps between current state and Target
	Architecture will invariably outweigh.
	
	Using the Architecture Vision as reference and the list of work
	packages, develop a set of themes, if not previously defined by
	Architecture to Support Strategy (prior architecture work). It may be
	necessary to create multiple baselines, one for each theme. Themes are
	defined by factoring the current and target organizational structure,
	productivity, differentiation, and scaling objectives. The organization
	structure articulates stakeholders, decision-makers, and implementers,
	their interests and concerns. As the work packages are moved across
	themes, perform an assessment of impact to stakeholders,
	decision-makers, and implementers. The resulting grouping of the work
	packages can be suboptimal due to dependency on pending organizational
	change.
	
	When performing EA activity for the first time in the Enterprise it is
	safe to assume that there were no target transition architectures that
	were used to create projects in the current year. The Target
	Architecture and gaps were inferred by whoever drove the budget
	preparation and budget allocation. Many of the in-flight projects could
	have a target completion date that extends beyond the next couple of
	business cycles. Altering the course of these initiatives takes time
	and, hence, suboptimal architectures in the first go around of the
	architecture effort. Revisit the gaps list created by the Architecture
	Project and work packages, and make appropriate adjustment due to
	in-flight projects and any inferred roadmap for the current fiscal year.
	Prioritizing, estimating, and sequencing of this list is the scope of
	work for the Architecture to Support Portfolio.
	
	To identify the prioritization of the effort, build Table 7. Populating
	the table forms the basis for performing further elaboration of the EA
	Landscape. Any cell in this table without data conveys that the
	architecture is not complete.
	
	Table 7: Work Package Grouping
	
	  ----------------- ------------------- ----------------------- ------------ ----------------------------- ----------------- -------------------------
	  Portfolio Theme   Work Package Name   Work Package Required   Importance   Impact Realization Timeline   Effort Required   Magnitude of Investment
	                                                                                                                             
	                                                                                                                             
	                                                                                                                             
	  ----------------- ------------------- ----------------------- ------------ ----------------------------- ----------------- -------------------------
	
	The importance of a work package is carried over from the strategic
	architecture. The last three columns will be populated as the
	architecture is developed further. As noted earlier, the work package to
	“theme” association is made using the lens of improving intrinsic value
	of the Enterprise, populating cohesive parts of the EA Landscape.
	
	Analysis of the mapping between portfolio themes and stakeholder
	concerns identifies the subset of stakeholders to engage for each
	portfolio. For each portfolio, reaffirm that there are no changes in the
	internal and external forces that created the work package. Identify
	resources required and track the resources that cross organizational
	boundaries. It is typical for most organizations to require an elaborate
	process to move resources. Identification of such a need changes the
	dependencies and priorities of the work packages.
	
	Using the stakeholder concerns from prior architecture work and the new
	grouping of the work packages, perform a trade-off analysis to quantify
	the changes to gaps and cascading impact on time to achieve the target
	state. Identify any new risks and develop appropriate controls. Using
	Table 7 and the mapping of work package to objectives via gaps, reaffirm
	that the value proposition delivered by the portfolio is aligned to the
	objectives.
	
	The work packages carry an attribute to identify whether they are new or
	a carry-over from the current fiscal year’s effort. From now on, the
	merits of the work package in shortening the path to target state drives
	decisions to invest. Continuation of the current efforts may be factored
	in, but they are not a determining factor. Now, a reasonable candidate
	Architecture Vision for each theme, and hence, a portfolio is created.
	
snippet togaf_adm_8_D_Technology_Architecture_8.2_Inputs "8.2 Inputs"
	
	This section defines the inputs to Phase D.
	
snippet togaf_reference-models_government-reference-model_8.2_Key_Drivers_for_Change "8.2 Key Drivers for Change"
	
	In recent years, the pace of technological change, evolving customer
	expectations, and a changing regulatory framework have led to continued
	innovation in the Financial sector such as fintech, mobile banking, and
	crypto currencies. Combined with recent market disruptions, such as the
	COVID-19 global pandemic, the long-term impacts remain unclear. To adapt
	and build resilience, the Financial sector needs to transform
	accordingly.
	
	A summarized description of the drivers for transformation is provided
	below.
	
	Strategic Shock
	
	Unprecedented market disruptions like the COVID-19 pandemic have led to
	important changes in public spending. This has resulted in increased
	expenditure, reduced revenue, and greater levels of market volatility.
	
	-   To maintain financial stability in a crisis, policy responses must
	    be coordinated with regulators and central banks to minimize impact
	
	Monetary and fiscal policies should be coordinated to safely meet the
	public’s needs, adapted to the situation, and implemented strategically
	depending on national priorities.
	
	-   Crisis recovery necessitates rethinking of approaches to public
	    finances
	
	Leveraging technology to better predict a future crisis and its impact;
	introducing resilience-building criteria for the allocation of public
	investments; and integrating social and environmental objectives into
	recovery plans are some of the measures that can be taken when reshaping
	the finance function.
	
	Fast Technological Change
	
	As in the private sector, technological innovations are driving change
	in the public finance function. With greater public scrutiny and tech
	fluency, governments are also pressured to innovate using technologies.
	
	-   Big Data and predictive analytics can help make better financial
	    decisions with public finances, identify and minimize risks, thus
	    improving financial planning and performance
	-   Back-office transformation is driven by AI, robotics, and automation
	    that can reduce manual work and remove the administrative burden
	    from employees so that efforts can shift towards more productive
	    roles
	-   With a greater use of technologies, there are more entry points for
	    potential attacks; cybersecurity should be at the forefront and the
	    government will need to be more responsible with data collected from
	    the public and ensure data security policies are implemented
	-   Other technologies such as affective computing or “emotional AI” can
	    be used by governments to influence the behavior of citizens
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.1_Determine_Overall_Modeling_Process "8.3.1.1 Determine Overall Modeling Process"
	
	For each viewpoint, select the models needed to support the specific
	view required, using the selected tool or method. Ensure that all
	stakeholder concerns are covered. If they are not, create new models to
	address them, or augment existing models (see above).
	
	The process to develop a Technology Architecture incorporates the
	following steps:
	
	-   Define a taxonomy of technology services and logical technology
	    components (including standards)
	-   Identify relevant locations where technology is deployed
	-   Carry out a physical inventory of deployed technology and abstract
	    up to fit into the taxonomy
	-   Look at application and business requirements for technology
	-   Is the technology in place fit-for-purpose to meet new requirements
	    (i.e., does it meet functional and non-functional requirements)?
	    -   Refine the taxonomy
	    -   Product selection (including dependent products)
	-   Determine configuration of the selected technology
	-   Determine impact:
	    -   Sizing and costing
	    -   Capacity planning
	    -   Installation/governance/migration impacts
	
	In the earlier phases of the ADM, certain decisions made around service
	granularity and service boundaries will have implications on the
	technology component and the technology service. The areas where the
	Technology Architecture may be impacted will include the following:
	
	-   Performance: the granularity of the service will impact on
	    technology service requirements
	
	    Coarse-grained services contain several units of functionality with
	    potentially varying non-functional requirements, so platform
	    performance should be considered. In addition, coarse-grained
	    services can sometimes contain more information than actually
	    required by the requesting system.
	
	-   Maintainability: if service granularity is too coarse, then
	    introducing changes to that service becomes difficult and impacts
	    the maintenance of the service and the platform on which it is
	    delivered
	
	-   Location and Latency: services might interact with each other over
	    remote links and inter-service communication will have in-built
	    latency
	
	    Drawing service boundaries and setting the service granularity
	    should consider platform/location impact of these inter-service
	    communications.
	
	-   Availability: service invocation is subject to network and/or
	    service failure
	
	    High communication availability is an important consideration during
	    service decomposition and defining service granularity.
	
	Product selection processes may occur within the Technology Architecture
	phase where existing products are re-used, incremental capacity is being
	added, or product selection decisions are a constraint during project
	initiation.
	
	Where product selection deviates from existing standards, involves
	significant effort, or has wide-ranging impact, this activity should be
	flagged as an opportunity and addressed through the Opportunities &
	Solutions phase.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.2_Identify_Required_Catalogs_of_Technology_Building_Blocks "8.3.1.2 Identify Required Catalogs of Technology Building Blocks"
	
	Catalogs are inventories of the core assets of the business. Catalogs
	are hierarchical in nature and capture a decomposition of a metamodel
	entity and also decompositions across related model entities (e.g.,
	technology service -> logical technology component -> physical
	technology component).
	
	Catalogs form the raw material for development of matrices and diagrams
	and also act as a key resource for managing the business and IT
	capability.
	
	The Technology Architecture should create technology catalogs as
	follows:
	
	-   Based on existing technology catalogs and analysis of applications
	    carried out in the Application Architecture phase, collect a list of
	    products in use
	-   If the requirements identified in the Application Architecture are
	    not met by existing products, extend the product list by examining
	    products available on the market that provide the functionality and
	    meet the required standards
	-   Classify products against the selected taxonomy if appropriate,
	    extending the model as necessary to fit the classification of
	    technology products in use
	-   If technology standards are currently in place, apply these to the
	    technology component catalog to gain a baseline view of compliance
	    with technology standards
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of catalogs which should be considered for development
	within a Technology Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.3_Identify_Required_Matrices "8.3.1.3 Identify Required Matrices"
	
	Matrices show the core relationships between related model entities.
	
	Matrices form the raw material for development of diagrams and also act
	as a key resource for impact assessment.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of matrices which should be considered for development
	within a Technology Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.4_Identify_Required_Diagrams "8.3.1.4 Identify Required Diagrams"
	
	Diagrams present the Technology Architecture information from a set of
	different perspectives (viewpoints) according to the requirements of the
	stakeholders.
	
	This activity provides a link between platform requirements and hosting
	requirements, as a single application may need to be physically located
	in several environments to support local access, development lifecycles,
	and hosting requirements.
	
	For major baseline applications or application platforms (where multiple
	applications are hosted on the same infrastructure stack), produce a
	stack diagram showing how hardware, operating system, software
	infrastructure, and packaged applications combine.
	
	If appropriate, extend the Application Architecture diagrams of software
	distribution to show how applications map onto the technology platform.
	
	For each environment, produce a logical diagram of hardware and software
	infrastructure showing the contents of the environment and logical
	communications between components. Where available, collect capacity
	information on the deployed infrastructure.
	
	For each environment, produce a physical diagram of communications
	infrastructure, such as routers, switches, firewalls, and network links.
	Where available, collect capacity information on the communications
	infrastructure.
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of diagrams which should be considered for development
	within a Technology Architecture, describing them in detail and relating
	them to entities, attributes, and relationships in the TOGAF Enterprise
	Metamodel.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.5_Identify_Types_of_Requirement_to_be_Collected "8.3.1.5 Identify Types of Requirement to be Collected"
	
	Once the Technology Architecture catalogs, matrices, and diagrams have
	been developed, architecture modeling is completed by formalizing the
	technology-focused requirements for implementing the Target
	Architecture.
	
	These requirements may:
	
	-   Relate to the technology domain
	-   Provide detailed guidance to be reflected during design and
	    implementation to ensure that the solution addresses the original
	    architecture requirements
	
	Within this step, the architect should identify requirements that should
	be met by the architecture (see 13.5.2 Requirements Development).
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1.6_Select_Services "8.3.1.6 Select Services"
	
	The services portfolios are combinations of basic services from the
	service categories in the defined taxonomy that do not conflict. The
	combination of services are again tested to ensure support for the
	applications. This is a prerequisite to the later step of defining the
	architecture fully.
	
	The previously identified requirements can provide more detailed
	information about:
	
	-   Requirements for organization-specific elements or pre-existing
	    decisions (as applicable)
	-   Pre-existing and unchanging organizational elements (as applicable)
	-   Inherited external environment constraints
	
	Where requirements demand definition of specialized services that are
	not identified in the TOGAF Standard, consideration should be given to
	how these might be replaced if standardized services become available in
	the future.
	
	For each building block, build up a service description portfolio as a
	set of non-conflicting services. The set of services must be tested to
	ensure that the functionality provided meets application requirements.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.1_Select_Reference_Models_Viewpoints_and_Tools "8.3.1 Select Reference Models, Viewpoints, and Tools"
	
	Review and validate the set of technology principles. These will
	normally form part of an overarching set of Architecture Principles.
	Guidelines for developing and applying principles, and a sample set of
	technology principles, are given in the TOGAF Standard — ADM Techniques.
	
	Select relevant Technology Architecture resources (reference models,
	patterns, etc.) from the Architecture Repository (see the TOGAF Standard
	— Architecture Content), on the basis of the business drivers,
	stakeholders, and their concerns.
	
	Select relevant Technology Architecture viewpoints that will enable the
	architect to demonstrate how the stakeholder concerns are being
	addressed in the Technology Architecture.
	
	Identify appropriate tools and techniques to be used for capture,
	modeling, and analysis, in association with the selected viewpoints.
	Depending on the degree of sophistication required, these may comprise
	simple documents and spreadsheets, or more sophisticated modeling tools
	and techniques.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.2_Develop_Baseline_Technology_Architecture_Description "8.3.2 Develop Baseline Technology Architecture Description"
	
	Develop a Baseline Description of the existing Technology Architecture,
	to support the Target Technology Architecture. The scope and level of
	detail to be defined will depend on the extent to which existing
	technology components are likely to be carried over into the Target
	Technology Architecture, and on whether architectural descriptions
	exist, as described in 8.5 Approach .
	
	Identify the relevant Technology Architecture building blocks, drawing
	on any artifacts held in the Architecture Repository. If nothing exists
	within the Architecture Repository, define each application in line with
	the Technology Portfolio catalog (see the TOGAF Standard — Architecture
	Content).
	
	Begin by converting the description of the existing environment into the
	terms of the organization's taxonomy of technology services and
	technology components (e.g., the TOGAF Technical Reference Model (TRM)).
	This will allow the team developing the architecture to gain experience
	and understanding of the taxonomy. The team may be able to take
	advantage of a previous architectural definition, but it is assumed that
	some adaptation may be required to match the architectural definition
	techniques described as part of this process. Another important task is
	to set down a list of key questions which can be used later in the
	development process to measure the effectiveness of the new
	architecture.
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Baseline
	Architecture.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.3_Develop_Target_Technology_Architecture_Description "8.3.3 Develop Target Technology Architecture Description"
	
	Develop a Target Description for the Technology Architecture, to the
	extent necessary to support the Architecture Vision, Target Business
	Architecture, and Target Information Systems Architecture. The scope and
	level of detail to be defined will depend on the relevance of the
	technology elements to attaining the Target Architecture, and on whether
	architectural descriptions exist. To the extent possible, identify the
	relevant Technology Architecture building blocks, drawing on the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	A key process in the creation of a broad architectural model of the
	target system is the conceptualization of building blocks. ABBs describe
	the functionality and how they may be implemented without the detail
	introduced by configuration or detailed design. The method of defining
	building blocks, along with some general guidelines for their use in
	creating an architectural model, is described in the TOGAF Standard —
	Architecture Content.
	
	Where new architecture models need to be developed to satisfy
	stakeholder concerns, use the models identified within Step 1 as a
	guideline for creating new architecture content to describe the Target
	Architecture.
	
	If appropriate, investigate different Target Architecture alternatives
	and discuss these with stakeholders using the Architecture Alternatives
	and Trade-offs technique (see the TOGAF Standard — ADM Techniques).
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.4_Perform_Gap_Analysis "8.3.4 Perform Gap Analysis"
	
	Verify the architecture models for internal consistency and accuracy:
	
	-   Perform trade-off analysis to resolve conflicts (if any) among the
	    different views
	-   Validate that the models support the principles, objectives, and
	    constraints
	-   Note changes to the viewpoint represented in the selected models
	    from the Architecture Repository, and document
	-   Test architecture models for completeness against requirements
	
	Identify gaps between the baseline and target, using the gap analysis
	technique as described in the TOGAF Standard — ADM Techniques.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.5_Define_Candidate_Roadmap_Components "8.3.5 Define Candidate Roadmap Components"
	
	Following the creation of a Baseline Architecture, Target Architecture,
	and gap analysis, a Technology Roadmap is required to prioritize
	activities over the coming phases.
	
	This initial Technology Architecture roadmap will be used as raw
	material to support more detailed definition of a consolidated,
	cross-discipline roadmap within the Opportunities & Solutions phase.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.6_Resolve_Impacts_Across_the_Architecture_Landscape "8.3.6 Resolve Impacts Across the Architecture Landscape"
	
	Once the Technology Architecture is finalized, it is necessary to
	understand any wider impacts or implications.
	
	At this stage, other architecture artifacts in the Architecture
	Landscape should be examined to identify:
	
	-   Does this Technology Architecture create an impact on any
	    pre-existing architectures?
	-   Have recent changes been made that impact the Technology
	    Architecture?
	-   Are there any opportunities to leverage work from this Technology
	    Architecture in other areas of the organization?
	-   Does this Technology Architecture impact other projects (including
	    those planned as well as those currently in progress)?
	-   Will this Technology Architecture be impacted by other projects
	    (including those planned as well as those currently in progress)?
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.7_Conduct_Formal_Stakeholder_Review "8.3.7 Conduct Formal Stakeholder Review"
	
	Check the original motivation for the architecture project and the
	Statement of Architecture Work against the proposed Technology
	Architecture, asking if it is fit for the purpose of supporting
	subsequent work in the other architecture domains. Refine the proposed
	Technology Architecture only if necessary.
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.8_Finalize_the_Technology_Architecture "8.3.8 Finalize the Technology Architecture"
	
	-   Select standards for each of the building blocks, re-using as much
	    as possible from the reference models selected from the Architecture
	    Repository
	-   Fully document each building block
	-   Conduct a final cross-check of overall architecture against business
	    goals; document the rationale for building block decisions in the
	    architecture document
	-   Document the final requirements traceability report
	-   Document the final mapping of the architecture within the
	    Architecture Repository; from the selected building blocks, identify
	    those that might be re-used (working practices, roles, business
	    relationships, job descriptions, etc.), and publish via the
	    Architecture Repository
	-   Finalize all the work products, such as gap analysis
	
snippet togaf_adm_8_D_Technology_Architecture_8.3.9_Create_Update_the_Architecture_Definition_Document "8.3.9 Create/Update the Architecture Definition Document"
	
	Document the rationale for building block decisions in the Architecture
	Definition Document.
	
	Prepare the technology sections of the Architecture Definition Document,
	comprising some or all of:
	
	-   Fundamental functionality and attributes — semantic, unambiguous
	    including security capability and manageability
	-   Dependent building blocks with required functionality and named
	    interfaces
	-   Interfaces — chosen set, supplied (APIs, data formats, protocols,
	    hardware interfaces, standards)
	-   Map to business/organizational entities and policies
	
	If appropriate, use reports and/or graphics generated by modeling tools
	to demonstrate key views of the architecture. Route the document for
	review by relevant stakeholders, and incorporate feedback.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.3_Balance_Opportunity_and_Viability "8.3 Balance Opportunity and Viability"
	
	The analysis and architecture development so far has been heavily
	focused on an inside-out approach. It is time to seek help outside the
	Enterprise. For the kind of changes being driven, potentially
	accelerating solutions might be available in the market – within the
	same industry vertical or otherwise. Technological developments and
	environmental changes might present new options to meet the needs of the
	work packages. Considering business cycles of suppliers, partners, and
	the Enterprise, it may be prudent to initiate identification of
	implementers now. These implementers are not decisions-makers or
	stakeholders. It is not good practice to include them in the stakeholder
	matrix.
	
	Develop the Business, Information Systems, and Technology Architecture
	specifications to the extent needed to scout the market for options. The
	focus is more on identifying the motivations behind the solutions than
	identifying a solution. If the purpose is to transmit information
	digitally, identify whether imaging is not an acceptable option. This
	still leaves the option to innovate, if needed, the right fit at the
	solution delivery stage. A related question would be: is the
	transmission of data for record-keeping purposes or transaction
	management purposes? Such a motivation identifies attributes of the
	building blocks and potential reuse of solutions already employed in the
	Enterprise. Assess the solution options more from an exclusion point of
	view, rather than narrowing down to “the solution”.
	
	In elaborating the architecture, new risks and dependencies will arise,
	and so should appropriate controls. Develop a matrix of options, risks,
	and controls to enable viability analysis and trade-off with
	stakeholders. Keep populating the requirements management function with
	data from such elaborations. Identify the list of standards and
	reference architecture that can be leveraged or imposed as limiting
	conditions on the solution. Identification of such standards and
	architectures amplifies and drives specificity of the (constraints)
	architecture specification from the superior architecture. It may also
	provide an accelerated path to solution. Capture all possible attributes
	to inform trade-off analysis.
	
	It is time to reach into the EA Repository for viewpoints, views,
	appropriate building blocks, and reference architectures to develop an
	approach to address the gaps. The viewpoints should provide a point of
	reference to the EA Landscape that is relevant for the stakeholder and
	decision-maker. Continuously validate that specifications for all work
	packages in the theme are elaborated equally, to the extent possible and
	necessary to decide the priority and resource needs.
	
	Identify pockets where a solution may have to be invented. In such a
	case, create new work packages to perform proof-of-concept validations
	before scaling out. Understand that proof-of-concept work is actually
	implementation, not architecture. Architecture work is identifying the
	placeholder required to allocate appropriate funds and mitigate
	unknowns. The main focus of the Architecture to Support Portfolio is to
	maximize the mileage gained with available resources. The second
	objective is to identify conditions under with projected mileage gain is
	achievable. The third is to identify barriers to achieve the goal and
	build efforts to diminish the impact of such barriers. The final
	objective is to provide assurance of investment to reward ratio being
	unaltered. Populate the list of projects required to meet these four
	objectives.
	
	Gather effort and resource estimates for all work packages. Revisit the
	dependencies across work packages. Identify the importance and impact of
	the work packages. The ability to authenticate the identity of the
	person carrying a ticket will vary with context. An Enterprise may have
	the same need for more than one scenario or portfolio. Or, in the case
	of boarding an aircraft, multiple agencies may have to be involved. Such
	work packages have high importance and impact, requiring early
	investments in the overall improvement cycle.
	
	Perform an opportunity analysis factoring viable options to approach the
	solution. Remember, the focus is driving a baseline estimate and
	assurance of achievability of the target. The validation of the
	portfolio and the trade-off is focused on grouping by theme, related
	impact, and importance assessment. The decisions driven here impact the
	distribution of limited resources across the investment continuum.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.3_Present_Readiness_Factors "8.3 Present Readiness Factors"
	
	Once the factors are determined, it is necessary to present them in such
	a way that the assessment is clear and the maximum value is derived from
	the participants.
	
	One such presentation is through the use of maturity models. If each
	factor is converted into a maturity model (a re-usable governance asset
	as well) accompanied by a standard worksheet template containing all of
	the information and deductions that have to be gathered, it can be a
	very useful tool.
	
	The maturity model should enable participants to:
	
	-   Assess their current (Baseline Architecture) maturity level
	-   Determine the target maturity level that would have to be achieved
	    to realize the Target Architecture
	-   Determine an intermediate target that would be achievable in a
	    lesser timeframe
	
	The care spent preparing the models (which is not insignificant) will be
	recouped by a focused workshop that will rapidly go through a
	significant number of factors.
	
	It is important that each factor be well-defined and that the scope of
	the Enterprise Architecture endeavor (preliminary planning) be reflected
	in the models to keep the workshop participants focused and productive.
	
	Circulating the models before the workshop for comments would be useful,
	if only to ensure that they are complete as well as allowing the
	participants to prepare for the workshop. Note that the model shown
	below also has a recommended target state put in by the Enterprise
	Architect; this again acts as governance.
	
	An example of a maturity model is shown in Figure 8-1 for one of the
	BTEP factors.
	
	[]
	
	Figure 8-1: Business Transformation Readiness Assessment — Maturity
	Model
	
snippet togaf_adm_8_D_Technology_Architecture_8.3_Steps "8.3 Steps"
	
	The level of detail addressed in Phase D will depend on the scope and
	goals of the overall architecture effort.
	
	New technology building blocks being introduced as part of this effort
	will need to be defined in detail during Phase D. Existing technology
	building blocks to be supported in the target environment may need to be
	redefined in Phase D to ensure interoperability and fit-for-purpose
	within this specific Technology Architecture.
	
	The order of the steps in Phase D as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance. In
	particular, determine whether in this situation it is appropriate to
	conduct Baseline Description or Target Architecture development first,
	as described in the TOGAF Standard — Applying the ADM.
	
	All activities that have been initiated in these steps should be closed
	during the Finalize the Technology Architecture step (see 8.3.8 Finalize
	the Technology Architecture). The documentation generated from these
	steps must be formally published in the Create/Update the Architecture
	Definition Document step (see 8.3.9 Create/Update the Architecture
	Definition Document).
	
	The steps in Phase D are as follows:
	
	-   Select reference models, viewpoints, and tools (see 8.3.1 Select
	    Reference Models, Viewpoints, and Tools)
	-   Develop Baseline Technology Architecture Description (see 8.3.2
	    Develop Baseline Technology Architecture Description)
	-   Develop Target Technology Architecture Description (see 8.3.3
	    Develop Target Technology Architecture Description)
	-   Perform gap analysis (see 8.3.4 Perform Gap Analysis)
	-   Define candidate roadmap components (see 8.3.5 Define Candidate
	    Roadmap Components)
	-   Resolve impacts across the Architecture Landscape (see 8.3.6 Resolve
	    Impacts Across the Architecture Landscape)
	-   Conduct formal stakeholder review (see 8.3.7 Conduct Formal
	    Stakeholder Review)
	-   Finalize the Technology Architecture (see 8.3.8 Finalize the
	    Technology Architecture)
	-   Create/Update the Architecture Definition Document (see 8.3.9
	    Create/Update the Architecture Definition Document)
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8.3_What_Constitutes_the_Content_Metamodel "8.3 What Constitutes the Content Metamodel?"
	
	Regarding information management, the purpose defines what information
	the EA Capability must have at hand. In practical terms, information
	needs are derived from the viewpoint library and the information that
	supports the viewpoints. Consider what information is required to answer
	these two questions:
	
	-   How can the enterprise maximize the differentiation by aligning
	    delivery of the portfolio?
	-   What should be done in response to one of the technology suppliers
	    changing its product?
	
	The Content Metamodel is used to structure architectural information in
	an orderly way so that it can be processed to meet stakeholder needs.
	The majority of architecture stakeholders do not actually need to know
	what the architecture Content Metamodel is and are only concerned with
	specific issues, such as: “How can the enterprise maximize
	differentiation by aligning delivery of the portfolio?”.
	
	The difficulty comes when, to answer this question, the EA Capability
	may need to answer:
	
	-   Which processes are orchestrated by the differentiating capability?
	-   Which processes require an application change?
	-   What functionality does an application support?
	-   What is the impact of using cloud infrastructure for the application
	    on information security?
	
	There are two approaches to defining the Content Metamodel. The most
	successful practice ensures that the central questions the EA Capability
	is established to address concern the focus. In this case, look at the
	questions the EA Capability is established to answer, and identify the
	concerns and the viewpoints that address these concerns. The resulting
	viewpoint library defines the Content Metamodel. Anything more is noise
	and results in unnecessary work in future.
	
	Following this approach leads to smaller information demands and crisply
	focuses the EA Capability on expected value. Any expansion in the range
	of critical questions the EA Capability is expected to answer will
	expand the information requirements. The majority of Enterprise
	Architects and analysts who have gone ahead to capture more information
	than what is required have consistently failed.
	
	An alternative practice is to use an established Content Metamodel. This
	approach enables the EA Capability to address a broader set of
	questions. However, this approach typically leads to a great deal of
	superfluous model development and information management. One of the key
	pitfalls to avoid is assuming that an existing Content Framework is
	complete and will answer the questions the enterprise is asking of the
	EA Capability. If you undertake to use an established Content Metamodel,
	in order to minimize information management, identify the minimum
	information the EA Capability requires.
	
	In either case, it is important to keep in mind that the information
	needed is infinite, and resources are finite. Minimize the information
	the EA Capability must maintain and focus on the purpose for which the
	EA Capability was formed. Address just those key questions. Take comfort
	in the fact that development of the Content Metamodel and viewpoint
	library will feed the evolution of each other.
	
	Every component that is added to the enterprise’s Content Metamodel
	comes with relationships that must be maintained and comes with
	attributes that must be tracked. The number of interim architecture
	states and options multiplies the amount of information that must be
	maintained. To succeed, the Leader should identify and define the
	absolute minimum information the EA Capability must maintain to deliver
	the stated purpose.
	
	Recommendation from collective experience of The Open Group is that the
	Leader should start with the most likely set of questions from sponsors
	and stakeholders based upon the enterprise context and the purpose of
	the EA Capability to build the viewpoint library.
	
	Explore the minimum information needed to answer the most pressing and
	recurrent questions. When the questions appear to be hard to answer,
	refer to other models used in the enterprise like strategy development,
	operating model, business capability, process model, project management
	model, and systems development lifecycle model to validate whether they
	would provide the answers. Add only those additional reference models
	that are required to answer the new set of questions. As stated before,
	keep the scope limited to what is necessary and nothing more.
	
	Consider what minimum information the EA Capability must have at hand,
	and what information it will need to gather upon demand. The information
	required at hand is the mandatory minimum. For the other information,
	ensure that there is a consistent way to gather and relate them to the
	mandatory minimum. This allows for traceability across more aspects of
	the enterprise.
	
	The exercise is not to fill out all the information that might be needed
	in the future, but rather to identify the information that must be
	available to describe an EA to address the stakeholders’ questions. Test
	the kind of catalogs, matrices, and diagrams required to capture,
	analyze, and answer the questions asked of the EA Capability.
	
	The TOGAF Content Metamodel provides a good starting point for examining
	the information the EA Capability requires. It provides a list of common
	components and common possible relationships the EA Capability may want
	to keep track of (motivation, role, event, activity, location, resource,
	platform services) and a set of relationships. Explore the alternative
	Content Frameworks listed in Appendix A (Partial List of EA Content
	Frameworks). They are designed to address different purposes that may
	better align with the EA Capability’s purpose.
	
	To answer these stakeholder questions, the EA Capability will have to
	employ more than one technique and approach, to collate, classify, and
	represent back visually, verbally, and with appropriate context. To
	answer these questions requires an understanding and maintenance of
	capability, process, and application functionality models and a roadmap
	with appropriate intersections.
	
	It is rare, but possible, to have a narrow scope for the EA Capability
	that leads to deployment of a narrow-domain approach like UML and BPMN
	or a pre-packaged Content Metamodel. Keep in mind that value questions
	supporting decision-making for strategy and portfolio require
	understanding cross-domain and multiple dimensions. They preclude use of
	narrow domain and pre-packaged metamodels.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.4.1_Internal_Engagement "8.4.1 Internal Engagement"
	
	Other than line of business leaders, personnel from the office of the
	financial controller and Project Management Office (PMO) are key to
	driving the budget. The objectives of these two teams are fundamentally
	different, but converge once a year – the time of budget preparation.
	The convergence is around the trend on variance to budget. Enterprises
	develop guidance on year-on-year funding and budget trend based on
	statistical data, without any qualification for the value delivered. It
	is normal for the delivery or execution teams to ask for more than is
	needed or to keep the same level of ask, without sufficient demand, for
	fear of losing funding.
	
	Another factor that could arise is the conflict due to gaps in the
	agility expectation of the service consumer (say sales team) and that of
	the service provider (say licensing and pricing team). Such a conflict
	creates duplication of capabilities and service in the guise of a
	different objective or effort name. Preparing for the budget, the EA
	team works to eliminate variations from such “opinions” or
	“duplications” of the past using gaps and work packages.
	
	It is highly likely for the superior architecture to recommend
	organizational changes as well. In this case, the Human Resource (HR)
	team is going to play a more critical role in budget preparation than
	ever before. It is not the responsibility or the function of the EA team
	to drive decisions. EA has to frame the conversation and the directions
	to identify the right resources to lead and drive change. It is
	imperative that the engagement of all concerned internal teams – mainly
	HR, PMO, and finance – is key to the success of delivering the
	Architecture to Support Portfolio.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.4.1_Readiness_Factor_Vision "8.4.1 Readiness Factor Vision"
	
	The vision for a readiness factor is the determination of where the
	enterprise has to evolve to address the factor. First, the factor should
	be assessed with respect to its base state and then its target state.
	
	For example, if the "IT capacity to execute" factor is rated as low, the
	factor should ideally be at "high" to realize the Target Architecture
	Vision. An intermediate target might be useful to direct the
	implementation. Maturity models are excellent vehicles to guide this
	determination.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.4.2_Has_the_Target_been_Reached "8.4.2 Has the Target been Reached?"
	
	Having driven confidence in reducing sources of artificial variance to
	budget, next to tackle is accuracy of the estimates. When the changes
	require a reasonable number of proof-of-concept efforts to be done or
	require employment of specialized services, veracity of the estimates
	would be questioned. In order to drive the level of confidence, it would
	appear that more time, more analysis, or more iterations are needed.
	Other than time, here is a short checklist that will indicate that it is
	time to stop iterating:
	
	1.  For each “theme”, have the work packages been classified into a
	    capability continuum (a work package cannot address both Sustain and
	    Improve)?
	
	2.  Are the dependencies and cascading impact of work packages
	    acknowledged by decision-makers and implementers?
	3.  Is there a contiguous elaboration and exploration of EA Landscape?
	4.  Have the mitigations and controls for risks (unknown events) been
	    added to the portfolio?
	5.  Is there a blend of operational excellence and fitness for purpose
	    within each theme?
	6.  Are there any recency concerns?
	7.  Is a raw estimate and contingency factor available (% buffer to
	    account for market and external trends)?
	8.  Is the ratio of growth in breadth of coverage architecture
	    specification to depth of coverage diminishing between iterations?
	9.  Is the variation in estimates between current and previous iteration
	    less than the contingency factor?
	10. How many of the efforts are one-time executions to support
	    transformations?
	
	The point of diminishing returns is met when positive responses are
	given to either (8) or (9) above. Mostly during the first two to three
	years after initiating an architecture-driven planning cycle, the EA
	team will run out of time before (8) or (9) could be met. Plan for
	recommending a discretionary spending bucket.
	
	To complete the architecture work, update the architecture roadmap, risk
	matrix, architecture definitions, and specifications to the extent
	needed and necessary. As needed, consult and conduct reviews with SMEs
	and stakeholders to validate the direction. For each theme, define the
	governance plan and model that is acceptable to stakeholders and
	decision-makers.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.4.2_Readiness_Factor_Rating "8.4.2 Readiness Factor Rating"
	
	Once the factor visions are established, then it is useful to determine
	how important each factor is to the achievement of the Target
	Architecture as well as how challenging it will be to migrate the factor
	into an acceptable visionary state.
	
	The BTEP uses a Readiness Rating Scheme that can be used as a start
	point for any organization in any vertical. Each one of the readiness
	factors are rated with respect to:
	
	-   Urgency, whereby if a readiness factor is urgent, it means that
	    action is needed before a transformation initiative can begin
	-   Readiness Status, which is rated as either Low (needs substantial
	    work before proceeding), Fair (needs some work before proceeding),
	    Acceptable (some readiness issues exist; no showstoppers), Good
	    (relatively minor issues exist), or High (no readiness issues)
	-   Degree of Difficulty to Fix rates the effort required to overcome
	    any issues identified as either No Action Needed, Easy, Moderate, or
	    Difficult
	
	Although a more extensive template can be used in the workshop, it is
	useful to create a summary table of the findings to consolidate the
	factors and provide a management overview. A summary is shown in Figure
	8-2 .
	
	[]
	
	Figure 8-2: Summary Table of Business Transformation Readiness
	Assessment
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.4.3_Readiness_Factor_Risks_Actions "8.4.3 Readiness Factor Risks & Actions"
	
	Once the factors have been rated and assessed, derive a series of
	actions that will enable the factors to change to a favorable state.
	
	Each factor should be assessed with respect to risk using the process
	highlighted in 9. Risk Management , including an estimate of impact and
	frequency.
	
	Each factor should be discretely assessed and a series of improvement
	actions outlined. Before starting anew, existing actions outlined in the
	architectures should be checked first before creating new ones.
	
	These newly identified actions should then be formally incorporated into
	the emerging Implementation and Migration Plan.
	
	From a risk perspective, these actions are designed to mitigate the
	risks and produce an acceptable residual risk. As risks, they should be
	part of the risk management process and closely monitored as the
	Enterprise Architecture is being implemented.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.4_Assess_Readiness_Factors "8.4 Assess Readiness Factors"
	
	Ideally, the factors should be assessed in a multi-disciplinary
	workshop. Using a mechanism such as maturity models, Enterprise
	Architects will normally have to cover a great deal of ground in little
	time.
	
	The use of a series of templates for each factor would expedite the
	assessment, and ensure consistency across the wide range of factors.
	
	The assessment should address three things, namely:
	
	-   Readiness Factor Vision
	-   Readiness Factor Rating
	-   Readiness Factor Risks & Actions
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8.4_Information_Managed_by_the_EA_Capability "8.4 Information Managed by the EA Capability"
	
	Managing an EA repository is often performed with EA modeling tools.
	Each item that is being produced should have a lineage to the question
	that demands a response. The need for a formal modeling technique is
	directly related to the level of detail required.
	
	The needs of the data collated and the decisions to be taken dictate the
	needs and approach of the repository and analytic tools. To manage and
	analyze large volumes of complex sets of data requires automation. It is
	prudent to have the Content Framework and Content Metamodel suitable for
	the enterprise and then look for formal tools that support the EA
	Capability. A high-functioning EA Capability will be asked questions
	that demand use of automation tools. Use the tools to provide defendable
	analytics to support decision-making and traceability to support
	governance.
	
	It is normal that the EA Capability will not manage all of the
	information required to support the purpose for the EA Capability.
	Interlinking all the necessary information via information governance
	channels will reduce the effort required to collect and manage the
	information. The EA Capability team needs to maintain the catalog and
	taxonomy only. Using a taxonomy and catalog of items, analysis about the
	landscape of processes and technology can be performed consistently,
	providing consistent and rich insights.
	
	Respective disciplines manage detailed data like project financials and
	technical specification of a robotic arm. To operationalize the ability
	to mine such varied, in-depth data, it may be necessary to automate the
	capturing, management, and visualization of insights.
	
	In most cases, assumptions and constraints are time-bound. Depending on
	the organizational structure, EA may hold the entire repository of data
	required for analysis or it may just link the structures that enable
	business operations effectiveness analysis.
	
	The EA Capability should ensure that the notations, vocabulary, and
	concepts reflected in the work products can be employed to communicate
	within and outside the enterprise. The demand for alignment to a common
	vocabulary and framework arises from a need to promptly answer
	decision-making questions and support governance decision-making.
	
	See Chapter 13 (Mapping the EA Leader’s Guide to the TOGAF Framework) to
	understand how answering questions raised in this Guide results in the
	population of the TOGAF Content Metamodel and broader Content Framework.
	This mapping is provided as an example of how the types of information
	required, and the iteration of the TOGAF ADM, can be structured.
	
snippet togaf_adm_8_D_Technology_Architecture_8.4_Outputs "8.4 Outputs"
	
	The outputs of Phase D may include, but are not restricted to:
	
	-   Refined and updated versions of the Architecture Vision phase
	    deliverables, where applicable:
	    -   Statement of Architecture Work (see the TOGAF Standard —
	        Architecture Content), updated if necessary
	    -   Validated technology principles, or new technology principles
	        (if generated here)
	-   Draft Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Baseline Technology Architecture, Approved, if appropriate
	    -   Target Technology Architecture, Approved, including:
	        -   Technology Components and their relationships to information
	            systems
	        -   Technology platforms and their decomposition, showing the
	            combinations of technology required to realize a particular
	            technology "stack"
	        -   Environments and locations — a grouping of the required
	            technology into computing environments (e.g., development,
	            production)
	        -   Expected processing load and distribution of load across
	            technology components
	        -   Physical (network) communications
	        -   Hardware and network specifications
	    -   Views corresponding to the selected viewpoints addressing key
	        stakeholder concerns
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including such Technology
	    Architecture requirements as:
	    -   Gap analysis results
	    -   Requirements output from Phases B and C
	    -   Updated technology requirements
	-   Technology Architecture components of an Architecture Roadmap (see
	    the TOGAF Standard — Architecture Content)
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.4_Run_Up_to_Budget "8.4 Run Up to Budget"
	
snippet togaf_adm_8_D_Technology_Architecture_8.5.1_Emerging_Technologies "8.5.1 Emerging Technologies"
	
	The evolution of new technologies is a major driver for change in
	enterprises looking for new innovative ways of operating and improving
	their business. The Technology Architecture needs to capture the
	transformation opportunities available to the enterprise through the
	adoption of new technology.
	
	While the Enterprise Architecture is led by business concerns, drivers
	for change are often found within evolving technology capabilities. As
	more digital innovations reach the market, stakeholders need to both
	anticipate and be open to technology-driven change. Part of Digital
	Transformation has arisen due to the convergence of telecommunications
	and computer capabilities which have opened up new ways of implementing
	infrastructures.
	
	Solution development methods are also evolving to challenge traditional
	development methods and are putting pressure on the shared services and
	common use benefits of the traditional Enterprise Architecture approach.
	Without a strong Enterprise Architecture approach, the rapid adoption of
	changing technologies will cause discontinuities across the enterprise.
	
	The flexibility of the TOGAF ADM enables technology change to become a
	driver and strategic resource rather than a recipient of Change
	Requests. As a result, the Technology Architecture may both drive
	business capabilities and respond to information system requirements at
	the same time.
	
snippet togaf_adm_8_D_Technology_Architecture_8.5.2_Architecture_Repository "8.5.2 Architecture Repository"
	
	As part of Phase D, the architecture team will need to consider what
	relevant Technology Architecture resources are available in the
	Architecture Repository (see the TOGAF Standard — Architecture Content).
	
	In particular:
	
	-   Existing IT services as documented in the IT repository or IT
	    service catalog
	-   The adopted technical reference model, if applicable
	-   Generic technology models relevant to the organization's industry
	    sector
	-   Technology models relevant to Common Systems Architectures
	    -   The Open Group has a Reference Model for Integrated Information
	        Infrastructure (III-RM) — see the TOGAF® Series Guide: The TOGAF
	        Integrated Information Infrastructure Reference Model (III-RM) —
	        that focuses on the application-level components and underlying
	        services necessary to provide an integrated information
	        infrastructure
	
snippet togaf_adm_8_D_Technology_Architecture_8.5_Approach "8.5 Approach"
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.5_Drive_Confidence_of_Delivery "8.5 Drive Confidence of Delivery"
	
	Useful architecture drives change and simplifies decision-making. The
	objective of budget preparation is to drive confidence of estimates,
	confidence of delivery against the roadmap, and garner the resources
	required to drive change. The set of prioritized work packages grouped
	by themes that traces to objectives drives confidence in responses to
	the “why” and “what” questions. The set of estimates that is backed by
	variance control drives confidence to the “how” and “how much”
	questions. Creating a set of project governance that reduces the chances
	of execution decisions delaying the time to target state serves the
	final objective of this architecture – balancing innovation and
	considered controls.
	
	Develop just enough views, models, and specifications to support the
	budget request. These documents are supported by a matrix of accountable
	parties for delivery and accountable parties for acceptance, usage, and
	sign-off. Success measures are articulated in value terms – controls in
	cost measures, and risks and outcome in value measures.
	
	Initiate activities to complete the architecture work. This involves
	populating the appropriate project vision documents, project
	architecture definitions, project stakeholder list, communication plan,
	and conditions that govern trade-off. Populate the data required by
	monitoring the system for each project, should the project be approved
	for execution. Populate the dependency matrix in accordance with the
	boundaries set for each project and the “theme”. The Architecture
	Project cannot be completed until the Architecture to Support Project is
	delivered. Initiating the effort at this stage communicates the
	decisions at the strategy level that can be revisited in the future. The
	last validation is to define that the operating model (recovery-driven
	or engagement and continuity-driven) is aligned to the business model.
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8.5_Managing_the_Enterprise_Repository "8.5 Managing the Enterprise Repository"
	
	Information management is a critical task for an EA Capability. It is
	all too easy for an EA Capability to drown in a flood of unintegrated
	information, usually separated into divergent documents. Effectively
	managing the EA repository is dependent on effectively limiting the
	information needed to manage, automate, and apply appropriate
	standardization.
	
	The priority is to minimize the information collected and maintained.
	See Section 8.2 (Are there Specific Questions to be Addressed?), and
	Section 8.3 (What Constitutes the Content Metamodel?). Including
	nice-to-have information will pose a substantive sustainability burden
	on the EA Capability team. This burden is particularly troublesome for
	an EA Capability that is IT-oriented and structured for the purpose of
	supporting projects. For these, a common pitfall is attempting to
	include design and operational information as part of the EA repository.
	If the information is not required to support the purpose, the essential
	questions, or any mandatory viewpoints, what is the value in collecting
	it? Design and operational information does not help to answer
	architecture or governance decision-making questions.
	
	The second priority is determining the level of standardization and
	automation. Standardization is distinct from automation. Standardization
	can be performed with appropriate templates and a document repository.
	Automation requires implementation of an EA modeling tool.
	
	Before any effort is made to capture information, define acceptance
	criteria for the content regarding completeness, integrity, flexibility,
	understandability, and ease of sustainment.
	
	Key factors to consider are the purpose, size, and geographic and
	organizational distribution of the EA Capability team and its
	stakeholders. The purpose of the EA Capability will drive the required
	level of repeatability of process, analysis, and representation, which
	in turn drives the level of standardization of the Content Framework.
	The geographic and organizational distribution of the EA Capability has
	the largest impact on the need for automation. A co-located
	organizationally unified EA Capability can rely far more upon informal
	collaboration than those who are organizationally and geographically
	dispersed. The need for automation drives deployment of multi-user model
	management and analytic tools.
	
	Table 3: EA Repository Standardization Factors (Process versus
	Presentation)
	
	  How Repeatability Influences Standardization of the EA Content Framework                          
	  -------------------------------------------------------------------------- ----------- ---------- --------------
	  EA to Support …                                                            Process     Analysis   Presentation
	  Strategy                                                                   Low         Low        Low
	  Portfolio                                                                  Medium      Medium     Medium
	  Project                                                                    High        High       Very High
	  Solution Delivery                                                          Very High   High       Very High
	
	It is common to assume a high-functioning EA Capability requires a high
	level of repeatability. Purpose heavily impacts repeatability.
	Architecture to support strategy and portfolio has a strong tendency to
	be addressing unique questions, using divergent information, and not be
	tightly tied to predictable execution patterns. This is especially true
	for EA supporting portfolio. Where there is a low need for
	repeatability, high levels of standardization are a barrier to value
	creation.
	
	Conversely, an EA Capability supporting solution delivery engagement
	requires an extremely high level of standardization. Effective
	engagement with a solution provider must be predictable to the
	enterprise and the solution provider. Repeatability will not be possible
	without a consistently used viewpoint library, information gathering and
	analysis, and mandated use of reference models and reference
	architecture.
	
	Table 4: EA Repository Standardization Factors (Team Model versus
	Analysis Needs)
	
	+-----------------+-----------------+-----------------+-----------------+
	| How the EA Team |                 |                 |                 |
	| Organization    |                 |                 |                 |
	| Model and       |                 |                 |                 |
	| Analysis Needs  |                 |                 |                 |
	| Influence EA    |                 |                 |                 |
	| Repository      |                 |                 |                 |
	| Standardization |                 |                 |                 |
	+=================+=================+=================+=================+
	| EA to Support … | Impact of       | Impact of       | Impact of Level |
	|                 | Geographic      | Federated       | of              |
	|                 | Distribution    | Organization    | Complex         |
	|                 |                 | Model           | Analysis        |
	+-----------------+-----------------+-----------------+-----------------+
	| Strategy        | Limited Impact  | Very Limited    | Very High       |
	|                 |                 | Impact          |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Portfolio       | Some Impact     | Significant     | Very High       |
	|                 |                 | Impact          |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Project         | Significant     | Significant     | Low             |
	|                 | Impact          | Impact          |                 |
	+-----------------+-----------------+-----------------+-----------------+
	| Solution        | Significant     | Massive Impact  | Limited         |
	| Delivery        | Impact          |                 |                 |
	+-----------------+-----------------+-----------------+-----------------+
	
	There are EA Capability teams serving the entire spectrum – from
	supporting strategy to engaging with a solution provider (internal and
	external to the enterprise). Mostly, such teams are federated. These
	teams may be responding to financial planning questions, alignment with
	organizational goals, lifecycle tracking (project and operational
	management), and asset inventory tracking. Two kinds of EA team
	(Federated EA and Dedicated EA) have a significant need to standardize
	on taxonomy and data flow and be integrated across all toolsets
	(financial planning, contract management, project management, and asset
	tracking).
	
	IT delivery is only part of the solution for the enterprise challenges.
	IT solutions alter enterprise processes and impact other organizations.
	Hence, an IT-focused team may require some level of continuity between
	portfolio planning and solution architecture development. Why an IT
	solution is being developed or modified and how the change is going to
	be absorbed by the enterprise are foundations the EA team must know.
	
	In a well-run, creative organization many good ideas are not derived
	from gaps identified in architecture. In these organizations, a Request
	for Architecture Work comes from someone with a good idea for improving
	the organization. We call this the “Request from the Wild”. Normally
	such a request will be proxied by a champion for the stakeholder. The
	champion may not have visibility into all aspects of the request. Such
	requests demand a great deal of critical thinking to identify the
	appropriate spot within the EA Landscape. The EA repository is the most
	important tool to accelerate the analysis and subsequent conversation
	with the stakeholder regarding the impact of this request on the EA
	Landscape and the portfolio.
	
	Evaluate the charter and EA team model before embarking on automation of
	the EA repository. Consider the tax on team capacity due to lack of
	automation or limited automation, but do not overemphasize ease of
	governance. Automation should focus on productivity and collaboration,
	not control or decision-making.
	
	It is good practice to focus formal modeling to supporting analysis.
	This drives the use of catalogs and matrices, with a very strong use of
	component attributes. Normally a graphical model is a barrier to strong
	analytics and the development of a strong architecture specification. In
	fact, the current and target states often have the same graphical
	objects and connections, while the attributes that define the
	characteristics of the components and relationships are different.
	Useful visualization routinely requires far more involved techniques
	than diagrams showing boxes and connections. Evolving the EA Capability
	and identifying transition states are highly dependent on data analytics
	work.
	
	Utilizing budding architects and analysts to maintain and manage the EA
	repository is recommended both from a development standpoint and
	capacity management standpoint. It is beneficial to employ specialized
	graphic design resources to support the creation of effective diagram
	viewpoints in comparison to using out-of-the-box visualizations from EA
	tools.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.5_Readiness_and_Migration_Planning "8.5 Readiness and Migration Planning"
	
	The assessment exercise will provide a realistic assessment of the
	organization and will be a key input into the strategic migration
	planning that will be initiated in Phase E and completed in Phase F. It
	is important to note whether the business transformation actions will be
	on the vision's critical path and, if so, determine how they will impact
	implementation. There is no point deploying new IT capability without
	employees trained to use it and support staff ready to sustain it.
	
	The readiness factors, as part of an overall Implementation and
	Migration Plan, will have to be continuously monitored (Phase G) and
	rapid corrective actions taken through the IT governance framework to
	ensure that the defined architectures can be implemented.
	
	The readiness factors assessment will be a living document and during
	the migration planning and execution of the Transition Architectures,
	the business transformation activities will play a key role.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.6_Marketing_the_Implementation_Plan "8.6 Marketing the Implementation Plan"
	
	The Architecture Definition should not be widely circulated until the
	business transformation issues are identified and mitigated, and the
	associated actions part of an overall "marketing" plan for the vision
	and the Implementation and Migration Plan.
	
	For example, the consolidation of information holdings could result in
	hundreds of lost jobs and this vision should not be announced before a
	supporting business transformation/human resources plan is formulated to
	retrain or support the workers' quest for new employment.
	
	The business transformation workshops are a critical part of the
	Communications Plan whereby key individuals from within the organization
	gather to assess the implications of transforming the enterprise. To do
	this they will become aware of the Architecture Vision and architecture
	definition (if they were not already involved through the business
	scenarios and Business Architecture). This group will feel ownership of
	the Enterprise Architecture, recognizing the Enterprise Architect as a
	valuable steward.
	
	Their determination of the factors will again create a culture of
	understanding across the enterprise and provide useful insights for the
	Implementation and Migration Plan.
	
	The latter plan should include a Communications Plan, especially to keep
	the affected personnel informed. In many cases collaborating with the
	unions and shop stewards will further assist a humane (and peaceful)
	transition to the target state.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.6_Request_for_Architecture_Work_Originating_from_a_Random_Idea_from_the_Wild "8.6 Request for Architecture Work Originating from a Random Idea from the Wild"
	
	In a well-run, creative organization many good ideas are not derived
	from gaps identified in the architecture. In these organizations, a
	Request for Architecture Work comes from someone with a good idea for
	improving the organization.
	
	With a request from the wild, the Practitioner will typically engage
	with a strong champion and identify holes in the EA Landscape. There is
	little need to worry about bumping shoulders with other identified gaps
	and work packages. However, the champion often will have a limited, or
	myopic, view of the stakeholder’s preferences and concerns.
	
	The Practitioner must take care to stay within the context of the wild
	architecture development relying on the mission, vision, and strategy of
	the Enterprise. Requests from the wild should be expected to challenge
	the status quo. The inherent creativity is welcomed by good
	Practitioners. Without much guidance from the strategy or portfolio to
	constrain the architecture development, Practitioners must ensure that
	identification of the correct stakeholders is completed and that the
	concerns reflect the stakeholder’s preferences and priorities – see
	Phase A: The Starting Point. Not all champions are stakeholders, and all
	Architecture Projects are subject to superior architecture.
	
	There is a need for critical thinking around the preparation required to
	insert the architecture developed in response to a receipt of a Request
	for Architecture Work from the wild at the optimal point in the sequence
	of work within the Enterprise’s roadmap, or implementation plan. Well
	executed, the organization is able to balance creativity and innovation
	with the benefit derived from clear understanding of dependency to value
	realization.
	
	While most Requests for Architecture work from the wild are for
	Architecture to Support Project and Architecture to Support Solution
	Delivery, strong champions will drive a portfolio initiative.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8.7_Conclusion "8.7 Conclusion"
	
	Conduct periodic value assessment and reporting to communicate lessons
	learned and whether the portfolio created is delivering organic change,
	radical innovation, or maintains the status quo. Implementation Projects
	deliver value a few quarters after the project is closed. It is the
	responsibility of those managing the portfolio to track and report
	value. Add to the portfolio an explicit backlog item to monitor and
	report value realized.
	
	In the event this architecture is supporting a merger, acquisition, or
	divestiture activity, include explicit recommendations to tackle the
	impact of technology in easing the business operations, asset, and risk
	accounting.
	
	Success is measured by alignment by the decision-makers on a number of
	concurrent streams, total resources required over the planning horizon
	period, and trade-off criteria.
	
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8.7_Conclusion "8.7 Conclusion"
	
	In short, Enterprise Architecture implementation will require a deep
	knowledge and awareness of all of the business transformation factors
	that impact transitioning to the visionary state. With the evolution of
	IT, the actual technology is not the real issue any more in Enterprise
	Architecture, but the critical factors are most often the cultural ones.
	Any Implementation and Migration Plan has to take both into
	consideration. Neglecting these and focusing on the technical aspects
	will invariably result in an implementation that falls short of
	realizing the real promise of a visionary Enterprise Architecture.
	
snippet togaf_business-architecture_business-scenarios_8_Business_Scenario_Documentation "8 Business Scenario Documentation"
	
snippet togaf_adm-techniques_INDEX_8_Business_Transformation_Readiness_Assessment "-   8. Business Transformation Readiness Assessment"
	    -   8.1 Introduction
	        -   8.1.1 Business Transformation Enablement Program (BTEP)
	    -   8.2 Determine Readiness Factors
	    -   8.3 Present Readiness Factors
	    -   8.4 Assess Readiness Factors
	        -   8.4.1 Readiness Factor Vision
	        -   8.4.2 Readiness Factor Rating
	        -   8.4.3 Readiness Factor Risks & Actions
	    -   8.5 Readiness and Migration Planning
	    -   8.6 Marketing the Implementation Plan
	    -   8.7 Conclusion
snippet togaf_adm-techniques_8_Business_Transformation_Readiness_Assessment_8_Business_Transformation_Readiness_Assessment "8. Business Transformation Readiness Assessment"
	
	  -- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 8.1 Introduction | 8.2 Determine Readiness Factors | 8.3 Present Readiness Factors | 8.4 Assess Readiness Factors | 8.5 Readiness and Migration Planning | 8.6 Marketing the Implementation Plan | 8.7 Conclusion
	  -- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter describes a technique known as Business Transformation
	Readiness Assessment, used for evaluating and quantifying an
	organization's readiness to undergo change.
	
	This chapter builds on work by the Canadian Government and its Business
	Transformation Enablement Program (BTEP).
	
snippet togaf_business-architecture_organization-mapping_8_Conclusion "8 Conclusion"
	
	An organization map is a Business Architecture blueprint that shows the
	key organizational units, partners, and stakeholder groups that comprise
	the ecosystem of an enterprise. The identification of organization units
	and relationships among them provides one of the four critical pillars
	of Business Architecture. The organization map identifies the business
	units or third parties that possess or use business capabilities, which
	participate in the value streams and have a relationship with business
	information concepts. These four pillars with identified maps within the
	scope of the Enterprise Architecture effort and appropriate
	relationships mapped across the pillars ensure that the scope and reach
	of the full Enterprise Architecture is understood in order to set the
	stage for later solutions across processes, roles, technologies
	(applications, infrastructure), and data models.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] A Guide to the Business Architecture Body of Knowledge^(®)
	(BIZBOK^(®)), Part 1: Introduction, Figure 1.1 (see Referenced
	Documents).
	
	[2] The TOGAF^(®) Series Guides to Business Capabilities, Business
	Models, Business Scenarios, Information Mapping, and Value Streams (see
	Referenced Documents).
	
	[3] Definition of “Organization”, WebFinance Inc.,
	www.businessdictionary.com/definition/organization.html.
	
	[4] The TOGAF^(®) Standard – ADM Techniques, Stakeholder Management (see
	Referenced Documents).
	
snippet togaf_business-architecture_information-mapping_8_Conclusion "8 Conclusion"
	
	This Guide provides the architect with a means to articulate,
	characterize, and visually represent the information that is critical to
	the business, and to shape its representation in ways that enable a more
	detailed analysis of how the business does or should operate. The
	concept of describing and characterizing information at a Business
	Architecture level, joined with business capabilities, value streams,
	and organization maps, provides the Enterprise Architect and other
	practitioners with powerful methods to characterize business value and
	guidance for all later phases of the architecture effort.
	
snippet togaf_business-architecture_business-models_8_Conclusion "8 Conclusion"
	
	Businesses are turning more towards the use of business models as a key
	component of their strategy design and innovation processes. A business
	model by itself, however, does not provide sufficient granularity for
	organizations to construct detailed plans to realize those strategies.
	That is where Business Architecture plays a critical role in
	articulating and enabling the designs prompted by a business model.
	
	This Guide demonstrates that business model innovation combined with
	Business Architecture provides planning teams with a more sophisticated
	set of options for moving from strategy through to actionable
	deployment. In doing so, it underscores the crucial role that business
	models can play in the effective execution of business strategy, while
	highlighting a number of opportunities to increase their use and
	effectiveness as an everyday business tool.
	
	Appendix A: Overview of the Business Model Canvas
	
	The framers of the Business Model Canvas purposefully created it to be
	an elegant, one-page representation of a business model that:
	
	-   Provides a shared perspective and understanding of an organization’s
	    business model(s)
	-   Enables informed discussion among business executives on business
	    issues and necessary change
	-   Fosters a design-oriented approach to identify what a business can
	    do differently to maximize value exchanges between market
	    participants
	-   Enables collaboration and co-creation of current-state and
	    future-state business model options
	-   Focuses on the key revenue and cost components supporting an agreed
	    value proposition for a particular customer segment
	
	The Business Model Canvas includes nine building blocks, as depicted in
	Figure 8:
	
	-   Customer Segments – the different groups of people or organizations
	    an enterprise aims to reach and serve
	-   Value Propositions – the benefits customers can expect from products
	    and services
	-   Channels – how a company communicates with and reaches its Customer
	    Segments to deliver a Value Proposition
	-   Customer Relationships – the types of relationships a company
	    establishes with specific Customer Segments
	-   Revenue Streams – the revenue a company generates from each Customer
	    Segment
	-   Key Resources – the most important assets required to make a
	    business model work
	-   Key Activities – the most important things a company must do to make
	    its business model work
	-   Key Partnerships – the network of suppliers and partners that make
	    the business model work
	-   Cost Structures – all costs incurred to operate a business model
	
	[]
	
	Figure 8: The Business Model Canvas[6]
	
	The Business Model Canvas is a particularly useful tool for
	understanding how a business handles its key determinants of revenue and
	cost, the value proposition it uses to go to market, the customers it
	serves, and the resources it needs to execute. These elements play a
	crucial step in laying the framework for:
	
	-   The business case to move forward
	-   The remaining work to address the specific application, information,
	    and technology solutions
	-   Achieving alignment between the business strategy and deployment
	    plans
	
	Identifying and working with a clearly articulated business model that
	supports the goals and objectives of the organization is a critical
	success factor for executing strategy – from inception to deployment.
	The Business Model Canvas can help expose capability gaps that exist
	with a proposed business model to assist strategists in charting the
	necessary course of action.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] See the referenced Business Model Generation, p.14.
	
	[2] Linking Business Models with Business Architecture to Drive
	Innovation, A Business Architecture Guild White Paper, August 2015.
	
	[3] Defining the IT Operating Model, White Paper published by The Open
	Group, September 2017 (see Referenced Documents).
	
	[4] What is Business Design?, Rotman DesignWorks, 2015.
	
	[5] From The Age of the Platform by Phil Simon, 2011.
	
	[6] A. Osterwalder, Yves Pigneur et al, Business Model Generation (John
	Wiley & Sons, Inc., 2010. Page 14).
	
snippet togaf_togaf-leaders-guide_8_Customization_of_Architecture_Contents_and_Metamodel_8_Customization_of_Architecture_Contents_and_Metamodel "8 Customization of Architecture Contents and Metamodel"
	
	The TOGAF framework identifies two central concepts: a Content Framework
	and a Content Metamodel. The TOGAF Content Framework describes the types
	of work products that will be consumed and produced by an EA Capability.
	A subset of these will be a formal description or architecture
	description of a system including the components and their
	inter-relationships. This subset is the Content Metamodel. Both must be
	customized based upon the purpose of the EA Capability and the
	enterprise context.
	
	An EA Capability focused on supporting decision-making for strategy will
	use a different set of work products than an EA Capability chartered to
	support governance of projects. This is a critical distinction. The
	Content Framework and Content Metamodel should be adjusted to align with
	the charter of the EA Capability. Further, the links between an EA
	Capability and other functions within an enterprise, such as finance,
	compliance, and operations aspects, require the EA Capability to fit-in
	and fill-out.
	
	The TOGAF Content Framework identifies two sets of work products. First,
	work products that are used by others that impact planning, change
	governance, and purposeful benefits realization. Second, work products
	that are used within the EA Capability to produce the first set. An EA
	Capability produces value in direct relation to the consumed work
	products that improve planning, change governance, and purposeful
	benefits realization.
	
	Understanding the EA Capability’s information requirements requires the
	following questions to be answered:
	
	-   What is the EA Capability’s purpose supporting decision-making and
	    governance?
	-   What is the enterprise Content Metamodel?
	-   What is the structure of the architecture repository?
	-   Are there any other considerations pertinent to the enterprise?
	-   What are the authority, access, and planning divisions for the EA
	    Capability?
	-   How formal should the documentation and work products of the EA
	    Capability be?
	
	For Leaders working for an enterprise that has a well-established
	Content Framework, such as defense with DoDAF, this chapter may not add
	value. Apart from the question of formality, all of the decisions
	regarding Content Metamodel and Content Framework have been made by
	DoDAF.
	
snippet togaf_adm_INDEX_8_D_Technology_Architecture "-   8. Phase D: Technology Architecture"
	    -   8.1 Objectives
	    -   8.2 Inputs
	        -   8.2.1 Reference Materials External to the Enterprise
	        -   8.2.2 Non-Architectural Inputs
	        -   8.2.3 Architectural Inputs
	    -   8.3 Steps
	        -   8.3.1 Select Reference Models, Viewpoints, and Tools
	            -   8.3.1.1 Determine Overall Modeling Process
	            -   8.3.1.2 Identify Required Catalogs of Technology
	                Building Blocks
	            -   8.3.1.3 Identify Required Matrices
	            -   8.3.1.4 Identify Required Diagrams
	            -   8.3.1.5 Identify Types of Requirement to be Collected
	            -   8.3.1.6 Select Services
	        -   8.3.2 Develop Baseline Technology Architecture Description
	        -   8.3.3 Develop Target Technology Architecture Description
	        -   8.3.4 Perform Gap Analysis
	        -   8.3.5 Define Candidate Roadmap Components
	        -   8.3.6 Resolve Impacts Across the Architecture Landscape
	        -   8.3.7 Conduct Formal Stakeholder Review
	        -   8.3.8 Finalize the Technology Architecture
	        -   8.3.9 Create/Update the Architecture Definition Document
	    -   8.4 Outputs
	    -   8.5 Approach
	        -   8.5.1 Emerging Technologies
	        -   8.5.2 Architecture Repository
snippet togaf_adm_8_D_Technology_Architecture_8_D_Technology_Architecture "8. Phase D: Technology Architecture"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 8.1 Objectives | 8.2 Inputs | 8.3 Steps | 8.4 Outputs | 8.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the development of a Technology Architecture for
	an architecture project.
	
	[]
	
	Figure 8-1: Phase D: Technology Architecture
	
snippet togaf_reference-models_government-reference-model_8_Financial "8 Financial"
	
	The Financial sector maintains controls over public spending, revenue,
	financial reporting, auditing, and providing the direction for future
	investment decisions and financial planning.
	
	[]
	
	Figure 8: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Financial Sector
	
snippet togaf_guides_microservices-architecture_8_Phase_C_Information_Systems_Architectures_Data_and_Application "8 Phase C: Information Systems Architectures (Data and Application)"
	
	Phase C: Information Systems Architectures of the TOGAF ADM consists of
	two architecture domains for the project: the Data Architecture and the
	Application Architecture. In the context of an MSA, the applications
	generally consist of the services and operations exposed to service
	consumers and utilities used to maintain the services. Data is
	constrained to the data managed by the business function being served by
	the MSA and external data sources that may be used as an offline source
	or repository for such data.
	
	In general, once the baseline Information Systems Architectures for the
	MSA supporting a business function have been established, future efforts
	will typically be focused on the changes required to achieve a new
	Target Architecture.
	
snippet togaf_adm-practitioners_8_Walk_Through_Architecture_to_Support_Portfolio_8_Walk_Through_Architecture_to_Support_Portfolio "8 Walk Through Architecture to Support Portfolio"
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1.1_Project_is_not_a_Magical_Place_to_Swap_Out_Stakeholders "9.1.1 Project is not a Magical Place to Swap Out Stakeholders"
	
	Who are the complete set of stakeholders across the architecture? The
	stakeholders in the portfolio level will need to be reaffirmed.
	
	It is common to find organizational leaders who, at the start of an
	Architecture Project, feel a strong need to replace the stakeholders
	identified in their superior architecture with stakeholders which have a
	high enough power to block or advance a project but not the
	architecture; see the TOGAF Standard – ADM Techniques (Classify
	Stakeholder Positions).
	
	This will introduce new project-specific concerns into the architecture.
	It cannot be stressed enough, to hold on to the distinction between the
	stakeholders that have high power in the Architecture Project and those
	that have high power only in relation to the Implementation Project. At
	the end of the day, the Practitioner addresses the concerns of the
	empowered stakeholders holding the key to the success of the
	Architecture Project because they have the power to shape any
	Implementation Project in order to conform with the approved target. It
	may be useful to identify the project-specific stakeholders’ concerns if
	we can solve for both and get something for free. Solving for an
	Implementation Project-specific concern is what can be called a
	“nice-to-have”.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1.2_Stakeholders_versus_Key_Players "9.1.2 Stakeholders versus Key Players"
	
	Look at the previous Stakeholder Map from the portfolio. Assess recency.
	Map the complete set of stakeholders of the Architecture Project against
	their known concerns.
	
	Do not include an Implementation Project-specific set of stakeholders
	(otherwise known as key players to the Architecture Project) in the
	Stakeholder Map. If desired, map the key players to any additional
	Implementation Project-specific concerns separately. Having more than
	one set of key stakeholders completely blocks the ability to perform
	trade-off.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1.3_Viewpoints_and_Requirements "9.1.3 Viewpoints and Requirements"
	
	The most important piece before doing any work; knowing what you need to
	know. Once you have a complete set of views which describe the
	stakeholders’ concerns, you know exactly what you need to do, or at the
	very least, where to go look to find out what needs to be done.
	
	When selecting viewpoints from the viewpoint library or developing new
	viewpoints, ask if the viewpoint represents the complete set of
	stakeholder concerns to the Architecture Project. Are all the
	stakeholders’ classes representative of those which own the approval
	rights around the Target Architecture and decision rights around the
	Implementation Project?
	
	Are the concerns consolidated and constrained into topic areas derived
	from the Enterprise’s strategy, which will be consistent across
	Architecture Projects?
	
	Does the viewpoint give a point of reference for what you need to know
	and where to look in the EA Landscape?
	
	Once the Practitioner knows what information is needed and where to find
	it, it is safe to continue doing work without the fear of stepping on a
	figurative land mine.
	
	Review the Architecture Repository for resources, especially
	architecture specifications, requirements, and work packages from the
	superior architectures to address the stakeholders’ concerns for the
	Architecture Project.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1.4_Go_Talk_to_the_Neighbors "9.1.4 Go Talk to the “Neighbors”"
	
	In developing a candidate architecture, the key to success is to be
	aware of the neighbors of the Architecture Project in the EA Landscape
	and to assess the “neighborhood” for recency. How much room is there for
	the Architecture Project until there would be an overlap or collide with
	another one?[31] When must you go and have a conversation with the
	neighborhood and assess their work for recency?
	
	To add complexity, what is the current status of the neighboring
	architectures? Are the neighboring Architecture Projects approved, in
	transition, or becoming realized? You may not have to worry about
	rubbing shoulders with a neighboring Architecture Project until one of
	them enters a transition state.
	
	Have the necessary conversations with the neighbors periodically to make
	the process of resolving impacts across Architecture Projects easier.
	The later these conversations with the “neighbors” takes place, the more
	likely the Practitioner will incur harder decisions, which would have
	been easily avoided; such as de-scoping decisions. The Practitioner must
	check the candidate architecture’s flexibility to withstand the volatile
	environment shared with other Architecture Projects undergoing a number
	of transitional states.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1.5_Delivery_and_Acceptance_Ability_Assessment "9.1.5 Delivery and Acceptance Ability Assessment"
	
	This is an opportune time to assess the readiness of the organization to
	actually start to execute and realize the change. It involves
	identifying whether the work packages cover the necessary changes to
	business processes, operating procedure, training, and everything that
	has to happen once the solution is delivered. The assessment is narrowly
	focused to test the scaffolding the neighbors should have in place. A
	second set of assessment is the ability of the solution delivery team,
	internal or external, to deliver to the needs of the architecture
	specification. The project manager and the product owner are fully aware
	of the trade-off criteria to retain value; aware of dependencies from
	the neighbors to this effort and from this project to others; and the
	risks and controls to mitigate them.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.1_Ascertain_Dependencies "9.1 Ascertain Dependencies"
	
	Throughout the entirety of the ADM, it is recommended to have a close
	look at the superior architecture in the EA Landscape. It is possible
	that Practitioners of superior architecture have already specified a
	list of things which the Practitioners of the preceding architectures
	are able to pull down to include as new inserts of an architecture
	description.
	
	There is not much need to explore a reason to do architecture when the
	purpose of the project has already been specified within a roadmap. The
	Practitioner may find that they already have a sufficient Architecture
	Vision from the work that has been done in the portfolio architecture.
	However, the Practitioner must take responsible action to confirm the
	Architecture Vision along with a number of portfolio-level Target
	Architecture components to assess the impact of recency (see Section
	3.2.1).
	
	Assessing recency is the pulse of the Architecture Project. It will
	involve looking “bottom-up” at the current work in the EA Landscape to
	assess the impacts of recency to prior EA. Look at the set of
	Architecture Visions from the Architecture to Support Portfolio. The
	following set of questions will guide assessing the impacts of recency
	to prior EA work for the purpose of use:
	
	-   What EA is parallel in development?
	-   Which targets are in the process of being realized?
	-   Which targets have been approved?
	-   What is effect of recency on prior EA?
	
	After prior EA work has been reviewed, reaffirmed, or replaced, the
	effect of recency is reset and mitigates the risk to the Architecture
	Project significantly.
	
snippet togaf_reference-models_government-reference-model_9.1_Growth_Housing_and_Environment_Taxonomy "9.1 Growth, Housing, and Environment Taxonomy"
	
	  Sector                            Function                        Service                                                                                                                                        Description
	  --------------------------------- ------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Growth, Housing and Environment   Partnerships                    Relationships between two or more functions.                                                                                                   
	                                                                    Business and SME Support                                                                                                                       Provides support systems to small and medium-sized enterprises and businesses.
	                                                                    Tourism                                                                                                                                        Encourages recreational visitors to the area, supports the tourism industry, and advises on tourism regulations.
	                                                                    Sport                                                                                                                                          Encompasses activities required to maintain, run, and advise on regulations for recreational and sporting facilities.
	                                                                    Culture                                                                                                                                        Pertains to activities that support development and management of the arts and cultural organizations, such as museums, galleries, and artifacts.
	                                                                    Rural Economy                                                                                                                                  Encompasses activities associated with the development, investment, and regulation of nature, agricultural activities, and the human environment.
	                                                                    Grants                                                                                                                                         Refers to the provision of loans in order to assist with funding partners.
	                                                                    Telecommunications                                                                                                                             Involves the support of telecommunications organizations that transmit signals and advises on regulations, standards, and new technology associated with telecoms.
	                                                                    Water                                                                                                                                          Refers to the activities that support water industry partnerships, and advises on regulations and standards associated with water management and usage.
	                                                                    Electricity                                                                                                                                    Refers to the activities that support industry partnerships, and advises on regulations and standards associated with electricity usage and power.
	                                                                    Port                                                                                                                                           Refers to the activities that support industry partnerships and adequate regulation of maritime ports.
	                                                                    Post                                                                                                                                           Refers to the activities that support the collection and delivery of packages and letters, issues postage stamps, and advises on regulations and standards associated with mail.
	                                    Natural Environment             The management and conservation of the surrounding environment and wildlife to protect and ensure sustainability of the natural environment.   
	                                                                    Environmental Services                                                                                                                         Refers to the maintenance, safeguarding, and provision of advice in order to preserve the natural environment.
	                                                                    Environmental Ecology                                                                                                                          Refers to activities to modify a habitat to a better state, protect ecosystems, and support conservation.
	                                                                    Meteorological Services                                                                                                                        Involves the provision of advice, information, and warnings about the climate, weather forecasts, and severe weather.
	                                                                    Veterinary Services                                                                                                                            Refers to advice and research provided to ensure good health of domestic animals.
	                                                                    Marine and Fisheries                                                                                                                           Carries out maintenance and promotes community awareness of sea-based areas of the natural environment.
	                                    Property and Special Projects   Delivers investment and management services for development and infrastructure projects.                                                       
	                                                                    Property                                                                                                                                       Pertains to activities that support, develop, and manage buildings.
	                                                                    Surveying                                                                                                                                      Refers to the valuation, costing, management, marketing, and maintenance of public property and buildings.
	                                                                    Architects                                                                                                                                     Encompasses the activities associated with the planning, design, and construction of properties and buildings.
	                                                                    Capital Projects                                                                                                                               Refers to the support, development, and management of long-term investment projects.
	                                                                    Asset Management                                                                                                                               Accounts for support for the management of government assets.
	                                    Regulation                      Refers to the delivery of regulatory processes.                                                                                                
	                                                                    Building Control                                                                                                                               Determines the minimum standards required for design and construction.
	                                                                    Trading Standards                                                                                                                              Refers to the enforcement of legislation associated with partnerships to ensure protection of consumers.
	                                                                    Document Verification Service                                                                                                                  Verifies key government issued documentation to ensure adherence to legislation and mitigate fraud.
	                                                                    Environmental Health                                                                                                                           Advises and evaluates the effects of industry, tourism, or community use on the natural environment.
	                                                                    Licensing                                                                                                                                      Refers to activities associated with granting, revoking, and management of the documented authority required to perform a regulated task or function.
	                                                                    Environmental Protection                                                                                                                       Refers to activities associated with the correcting and offsetting of environmental deficiencies.
	
snippet togaf_adm-techniques_9_Risk_Management_9.1_Introduction "9.1 Introduction"
	
	There will always be risk with any architecture/business transformation
	effort. It is important to identify, classify, and mitigate these risks
	before starting so that they can be tracked throughout the
	transformation effort.
	
	Mitigation is an ongoing effort and often the risk triggers may be
	outside the scope of the transformation planners (e.g., merger,
	acquisition) so planners must monitor the transformation context
	constantly.
	
	It is also important to note that the Enterprise Architect may identify
	the risks and mitigate certain ones, but it is within the governance
	framework that risks have to be first accepted and then managed.
	
	There are two levels of risk that should be considered, namely:
	
	1.  Initial Level of Risk: risk categorization prior to determining and
	    implementing mitigating actions
	2.  Residual Level of Risk: risk categorization after implementation of
	    mitigating actions (if any)
	
	The process for risk management is described in the following sections
	and consists of the following activities:
	
	-   Risk classification
	-   Risk identification
	-   Initial risk assessment
	-   Risk mitigation and residual risk assessment
	-   Risk monitoring
	
snippet togaf_guides_microservices-architecture_9.1_Microservices "9.1 Microservices"
	
	A microservice is a service that performs a single ABF and is
	independent of other microservices. In particular, it is developed
	independently, and is independently deployable.
	
	As a service, a microservice has a defined service contract, which
	includes the specification of an interface, usually termed an API. The
	microservices available to other architecture components are listed in a
	service catalog.
	
	The development, deployment, and execution of microservices is
	illustrated in Figure 7.
	
	[]
	
	Figure 7: Development, Deployment, and Execution of Microservices
	
	Each microservice has a source unit. This source unit contains the code
	that implements the microservice’s ABF. It does not share code with
	other microservice source units, and cannot access their data. It may
	use libraries for functions that are not business-related. Each
	microservice also has a deployment unit that is built from its source
	unit and the libraries that the source unit uses. A deployment unit
	cannot include code for more than one microservice. Each microservice
	deployment unit is deployed as a single execution unit or, in a system
	at scale, multiple execution units running the same code.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.1_Objectives "9.1 Objectives"
	
	The objectives of Phase E are to:
	
	-   Generate the initial complete version of the Architecture Roadmap,
	    based upon the gap analysis and candidate Architecture Roadmap
	    components from Phases B, C, and D
	-   Determine whether an incremental approach is required, and if so
	    identify Transition Architectures that will deliver continuous
	    business value
	-   Define the overall Solution Building Blocks (SBBs) to finalize the
	    Target Architecture based on the ABBs
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.1_Shared_Roles_and_Alignment "9.1 Shared Roles and Alignment"
	
	Developing, implementing, and managing an EA practice requires
	multi-discipline engagement. To define the structure and capacity for
	the EA Capability, involvement of personnel executing business strategy
	development, project, program and portfolio management (both operations
	and IT), quality management (process and product), governance
	(financial, legal, others), and IT delivery functions should be defined.
	Rationale and engagement levels with other disciplines are discussed in
	Chapter 6 (Architecture Governance) and Chapter 10 (Process Model). It
	is more than likely that the enterprise already has individual people or
	teams that perform these functions embedded in other broader functions.
	To build cross-team alignment, it is necessary to identify the teams or
	individuals who perform strategy development and program management.
	
snippet togaf_business-architecture_business-scenarios_9.1_The_Importance_of_Goals "9.1 The Importance of Goals"
	
	One of the first steps in the development of an architecture is to
	define the overall goals and objectives for the development. The
	objectives should be derived from the business goals of the
	organization, and the way in which IT is seen to contribute to meeting
	those goals.
	
	Every organization behaves differently in this respect, some seeing IT
	as the driving force for the enterprise and others seeing IT in a
	supporting role, simply automating the business processes which already
	exist. The essential thing is that the architectural objectives should
	be very closely aligned with the business goals and objectives of the
	organization.
	
snippet togaf_business-architecture_business-scenarios_9.2.1_Example_of_Making_Objectives_SMART "9.2.1 Example of Making Objectives SMART"
	
	Under the general goal heading “Improve User Productivity” below, there
	is an objective to provide a “Consistent User Interface” and it is
	described as follows:
	
	“A consistent user interface will ensure that all user-accessible
	functions and services will appear and behave in a similar, predictable
	fashion regardless of application or site. This will lead to better
	efficiency and fewer user errors, which in turn may result in lower
	recovery costs.”
	
	To make this objective SMART, we ask whether the objective is specific,
	measurable, actionable, realistic, and time-bound, and then augment the
	objective appropriately.
	
	The following captures an analysis of these criteria for the stated
	objective:
	
	-   Specific: the objective of providing “a consistent user interface
	    that will ensure all user-accessible functions and services will
	    appear and behave in a similar, predictable fashion regardless of
	    application or site” is pretty specific; however, the measures
	    listed in the second sentence could be more specific
	-   Measurable: as stated above, the objective is measurable, but could
	    be more specific; the second sentence could be amended to read (for
	    example): “this will lead to 10% greater user efficiency and 20%
	    fewer order entry user errors, which in turn may result in 5% lower
	    order entry costs”
	-   Actionable: the objective does appear to be actionable; it seems
	    clear that consistency of the user interface must be provided, and
	    that could be handled by whoever is responsible for providing the
	    user interface to the user device
	-   Realistic: the objective of providing “a consistent user interface
	    that will ensure all user-accessible functions and services will
	    appear and behave in a similar, predictable fashion regardless of
	    application or site” might not be realistic; considering the use
	    today of PDAs at the user end might lead us to augment this
	    objective to ensure that the downstream developers don’t unduly
	    create designs that hinder the use of new technologies – the
	    objective could be re-stated as “a consistent user interface, across
	    user interface devices that provide similar functionality that will
	    ensure …”
	-   Time-bound: the objective as stated is not time-bound; to be
	    time-bound the objective could be re-stated as “by the end of Q3,
	    provide a consistent ...”
	
	The above results in a SMART objective that looks more like this (again
	remember this is an example):
	
	“By the end of Q3, provide a consistent user interface across user
	interface devices that provide similar functionality to ensure all
	user-accessible functions and services appear and behave in a similar
	way when using those devices in a predictable fashion, regardless of
	application or site. This will lead to 10% greater user efficiency and
	20% fewer order entry user errors, which in turn may result in 5% lower
	order entry costs.”
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.2.1_Performing_Trade-Off "9.2.1 Performing Trade-Off"
	
	As the saying goes “you can’t step in the same river twice”; the water’s
	always changing, always flowing. Without discovery of where the
	candidate Target Architecture stands before finalization within the EA
	Landscape, it is harder to guide projects from running off waterfalls
	and large cliffs.
	
	Only until the Practitioner looks “downstream” are they in a position to
	perform a trade-off, resolve impacts across the Target Architecture, and
	choose the smoothest course. Doing a consistent reconnaissance of the EA
	Landscape will enlighten the Practitioner to where the project can avoid
	disaster further down the river.
	
	In order to perform, the Practitioner is chasing the barriers to deliver
	and realize value. This is too early to define the architecture for
	solution delivery. This is definitely not the place to define and design
	the solution. Implementation is not architecture. The architecture is
	assuring resilience to risks and guidance to implementers. Any
	recommendations of ABBs and SBBs to accelerate value realization and
	improve conformance are identified and included in an architecture
	specifications.
	
	If it is discovered that the Implementation Project’s candidate Target
	Architecture is impacting or will be impacted by a finalized Target
	Architecture of another project in-flight, always assess recency,
	confirm, and do a trade-off analysis. Keep in mind that when doing a
	trade-off analysis and resolving impacts across the Target Architecture
	that the Implementation Project is already heavily constrained and may
	need to mold a path down the river around the other projects that have
	been approved and have taken root along the river bank. Then, given any
	new discoveries to the Implementation Project, if any, create the
	architecture specifications for the Implementation Project to assure
	avoidance of overlap and conflict.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.2.1_Reference_Materials_External_to_the_Enterprise "9.2.1 Reference Materials External to the Enterprise"
	
	-   Architecture reference materials (see the TOGAF Standard —
	    Architecture Content)
	-   Product information
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.2.2_Managing_the_Current_Approach_towards_Implementing_the_Change "9.2.2 Managing the Current Approach towards Implementing the Change"
	
	Once impacts have been resolved, create the views necessary to convey to
	the stakeholders that their concerns have been addressed with the
	necessary constraints and guidance developed prior to initiation of
	solution delivery for it to be successful.
	
	The Practitioner’s analysis of the Target Architecture cannot have
	assessed every circumstance, or change option possible. There will
	always be an infinite number of things to discover about the
	Architecture Project. The Practitioner’s job is to show that a
	sufficient level of scrutiny led to the deliverables of the Architecture
	Project for the solution delivery architecture to succeed. The
	Practitioner should only assess to the extent of avoiding major cliffs.
	Once you start assessing the Architecture Project for all the subtle
	bumps, you have exceeded the sufficient level of scrutiny and are
	wasting valuable resources.
	
	Prove to the stakeholders that when the Architecture Project is consumed
	by the solution delivery architecture, their requirements have been met
	and changes to the Enterprise will be guided and constrained
	efficiently. Identify and secure approval for the resources necessary to
	begin allocating the budget for the solution delivery architecture to
	begin.
	
	The Practitioner will know that the Architecture Project is a success
	upon receipt of the Request Architecture Work for solution delivery.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.2.2_Non-Architectural_Inputs "9.2.2 Non-Architectural Inputs"
	
	-   Request for Architecture Work (see the TOGAF Standard — Architecture
	    Content)
	-   Capability Assessment (see the TOGAF Standard — Architecture
	    Content)
	-   Communications Plan (see the TOGAF Standard — Architecture Content)
	-   Planning methodologies
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.2.3_Architectural_Inputs "9.2.3 Architectural Inputs"
	
	-   Organizational Model for Enterprise Architecture (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Scope of organizations impacted
	    -   Maturity assessment, gaps, and resolution approach
	    -   Roles and responsibilities for architecture team(s)
	    -   Constraints on architecture work
	    -   Budget requirements
	    -   Governance and support strategy
	-   Governance models and frameworks for:
	    -   Corporate Business Planning
	    -   Enterprise Architecture
	    -   Portfolio, Program, Project Management
	    -   System Development/Engineering
	    -   Operations (Service)
	-   Tailored Architecture Framework (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Tailored architecture method
	    -   Tailored architecture content (deliverables and artifacts)
	    -   Configured and deployed tools
	-   Statement of Architecture Work (see the TOGAF Standard —
	    Architecture Content)
	-   Architecture Vision (see the TOGAF Standard — Architecture Content)
	-   Architecture Repository (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Re-usable building blocks
	    -   Publicly available reference models
	    -   Organization-specific reference models
	    -   Organization standards
	-   Draft Architecture Definition Document, which may include Baseline
	    and/or Target Architectures of any architecture domain
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Architectural requirements
	    -   Gap analysis results (from Business, Data, Application, and
	        Technology Architecture)
	    -   IT Service Management requirements
	-   Change Requests for existing business programs and projects (see the
	    TOGAF Standard — Architecture Content)
	-   Candidate Architecture Roadmap components from Phases B, C, and D
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.2_Alignment "9.2 Alignment"
	
	Most likely, the sponsor of the EA Capability has already defined how
	the team interfaces with the rest of the enterprise. Figure 12 below
	shows some of the variants of organizational alignment of a team
	providing the EA Capability in the industry. They are used to convey an
	idea and do not account for preferences like customer segment, product
	lines, or country and geography an enterprise may have. It is likely
	that the enterprise is experimenting with EA and has chartered the
	Leader to work with external consultants and service providers. This
	Guide does not take into account where the professionals come from.
	
	Table 5: Examples of Management Systems Integrating/Interoperating with
	the EA Capability
	
	+-----------------------------------+-----------------------------------+
	| Examples of Management Systems    |                                   |
	| with which the EA Capability must |                                   |
	| Integrate and Interoperate        |                                   |
	+===================================+===================================+
	| Business Strategy and Planning    | Application Portfolio Management  |
	|                                   |                                   |
	| Solutions Delivery                | Finance                           |
	|                                   |                                   |
	| Business Intelligence             | Technology Planning and           |
	|                                   | Management                        |
	| Security                          |                                   |
	|                                   | Systems Planning, Management,     |
	| Business Process Management       | Operations                        |
	|                                   |                                   |
	|                                   | …                                 |
	+-----------------------------------+-----------------------------------+
	
	Its context provides an important part of the requirements and
	constraints on an EA Capability. In the case of the EA Capability, its
	interactions will be with the other management systems that support or
	govern the work of enterprise transformation.
	
	To keep the visualizations simple, teams like project management and
	quality are not called out explicitly. As they are also shared functions
	like EA, it is fair to assume they will also follow a model very similar
	to EA.
	
	In a strategy-centric model, EA can be aligned with corporate strategy,
	overall operations, or finance. The team providing the EA Capability
	extends its services to the rest of the enterprise based on the charter
	(sustained growth, operational efficiency, cost and risk reduction).
	
	The charter of the EA Capability will determine the coordination and
	reporting structure the shared teams will have. Business objectives and
	empowerment provided by the sponsor are sources that will help to
	identify the alignment model. Variants of the alignment model shown
	below are not intended to suggest that all activities within an EA
	Capability should exist within one functional unit.
	
	In a function-centric model, it is possible that EA is part of each of
	the functional verticals and one of the teams consolidates all EA
	activities. Another variant is EA could be part of the dominant or key
	function of the enterprise. In this variant, it may be prudent to draw
	members of the team providing the EA Capability from each of the
	functional units having extended responsibility for a common goal, from
	an HR management perspective, and report to respective functional or
	regional business leaders.
	
	Function-Centric EA
	
	[]
	
	IT-Centric EA
	
	[]
	
	Strategy-Centric EA
	
	[]
	
	Figure 12: Possibilities for EA Team Alignment
	
	In an IT-centric model, EA is normally aligned to the IT organization,
	irrespective of how it is named. The charter for the team may vary
	depending upon how IT is structured within the organization. When IT is
	aligned to the CFO, the charter for the EA team may be driving
	operational efficiency and cost control. When IT is aligned to delivery
	or marketing, the charter is more likely to focus on agility and
	efficiency. Understand the context, and draw members with process
	analysis and cost management expertise or deep functional knowledge of
	operations.
	
	When there are multiple EA teams, there is one EA Capability and there
	should be one Leader. All teams should work under the guidance of this
	Leader and collaborate. The reporting and funding hierarchies of the
	teams can be separated from alignment and execution against EA
	Capability objectives.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.2_Balance_Options_and_Suppliers "9.2 Balance Options and Suppliers"
	
	Architecture to Support Project is to answer a set of problems in a box;
	the answers are expected to stay within the box. The Practitioner must
	elaborate all domain architectures just enough to assure that the
	architecture is addressing all of the work. The project cannot move
	forward until it is proven that the project will be a success. Gather
	the estimates of all resources required to deliver the project. All of
	the bridge will be built, not just some of the bridge. Remember, the
	focus is to clarify and confirm the purpose and value of the project.
	Part of the bridge does not serve any purpose or add any value.
	
	The up-side is the Practitioners involved in the Implementation Project
	have blinders on that only allows them to see the distance from where
	they are standing to the horizon. The horizon is the work needed before
	implementation begins. In the context of the Implementation Project, the
	Practitioner’s line of sight is always the horizon, including the
	distance to get there. It is already understood what “success” will look
	like, standing on the horizon. What is the work that will take us there?
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.2_Inputs "9.2 Inputs"
	
	This section defines the inputs to Phase E.
	
snippet togaf_reference-models_government-reference-model_9.2_Key_Drivers_for_Change "9.2 Key Drivers for Change"
	
	The Growth, Housing, and Environment sector faces important challenges
	as climate change becomes one of the greatest threats for the planet,
	accelerated by a growing population and increased consumption. The
	factors below will be considered as drivers.
	
	Population Growth and Economic Activity
	
	There is an increasing population with demographic changes, as well as
	social changes. Faster urbanization and more economic spending also lead
	to a strain on natural resources, increased wastage, and pollution, and
	thus accelerate climate change. All these factors should be taken into
	consideration when dealing with and mitigating the threat of climate
	change. In fact, younger generations are more progressive on social
	issues through greater availability of information, digitalization, and
	travel. It is important to work towards policies and regulations that
	create a more sustainable future for these generations.
	
	Climate Change
	
	Humanity is dependent on the environment for water, air, food, and
	shelter. With population growth, the use of polluting, carbon-intensive
	technologies and over-exploitation of resources has led to challenges
	for future generations. It is necessary for leaders to consider climate
	risks and impacts more seriously, including adverse effects on supply
	chains and physical infrastructure. Over the past couple of years, many
	governments have been in the process of implementing green recovery
	plans and funding projects that will alleviate decarbonization.
	
	Digitalization and Technology
	
	Advancements in technology have allowed a greater use and exploitation
	of renewable energies. But new technologies can also help to focus on
	mitigating the effects of climate change rather than recover from them.
	Digitalization of processes can significantly reduce costs but also
	operational waste, and this also applies to housing. The development of
	“smart cities” is an opportunity to decouple economic and population
	growth from environmental change.
	
snippet togaf_adm-techniques_9_Risk_Management_9.2_Risk_Classification "9.2 Risk Classification"
	
	Risk is pervasive in any Enterprise Architecture activity and is present
	in all phases within the ADM. From a management perspective, it is
	useful to classify the risks so that the mitigation of the risks can be
	executed as expeditiously as possible.
	
	One common way for risks to be classified is with respect to impact on
	the organization (as discussed in 9.4 Initial Risk Assessment), whereby
	risks with certain impacts have to be addressed by certain levels of
	governance.
	
	Risks are normally classified as time (schedule), cost (budget), and
	scope but they could also include client transformation relationship
	risks, contractual risks, technological risks, scope and complexity
	risks, environmental (corporate) risks, personnel risks, and client
	acceptance risks.
	
	Another way of delegating risk management is to further classify risks
	by architecture domains. Classifying risks as business, information,
	applications, and technology is useful but there may be
	organizationally-specific ways of expressing risk that the corporate
	Enterprise Architecture directorate should adopt or extend rather than
	modify.
	
	Ultimately, Enterprise Architecture risks are corporate risks and should
	be classified and as appropriate managed in the same or extended way.
	
snippet togaf_guides_microservices-architecture_9.2_Steps "9.2 Steps"
	
	Development of a Technology Architecture to support microservices
	typically requires the following additional steps in order to complete
	the steps described in the TOGAF Standard for Phase D (Technology
	Architecture):
	
	-   Define the scope of the application functionality described in the
	    Application Architecture that will be supported by microservices
	-   Review the use of data by applications within the chosen scope, as
	    described in the Data Architecture
	-   Review the requirements, with particular reference to requirements
	    for transactionality and scalability
	-   Specify the principles and patterns that will apply to the use of
	    microservices to support the applications and their use of data and
	    to meet the requirements
	-   Specify the standards that will apply to service contracts and
	    interface definitions, and to the service catalog
	-   Specify the microservice deployment mechanisms and execution
	    environment
	
	Independent development of microservices is a feature of MSA. Decisions
	about programming languages, libraries, development tools, and build
	mechanisms can be left to the microservice DevOps teams. These decisions
	may, however, be constrained to some extent by the Technology
	Architecture.
	
snippet togaf_business-architecture_business-scenarios_9.2_The_Importance_of_SMART_Objectives "9.2 The Importance of SMART Objectives"
	
	Not only must goals be stated in general terms, but also specific
	measures need to be attached to them to make them SMART, as described
	earlier.
	
	The amount of effort spent in doing this will lead to greater clarity
	for the sponsors of the architecture evolution cycle. It will pay back
	by driving proposed solutions much more closely toward the goals at each
	step of the cycle. It is extremely helpful for the different
	stakeholders inside the organization, as well as for suppliers and
	consultants, to have a clear yardstick for measuring
	fitness-for-purpose. If done well, the ADM can be used to trace specific
	decisions back to criteria, and thus yield their justification.
	
	The goals below have been adapted from those given in previous versions
	of the TOGAF Standard. These are categories of goals, each with a list
	of possible objectives. Each of these objectives should be made SMART
	with specific measures and metrics for the task. However, since the
	actual work to be done will be specific to the architecture project
	concerned, it is not possible to provide a list of generic SMART
	objectives that will relate to any project.
	
	Instead, we provide here some example SMART objectives.
	
snippet togaf_business-architecture_business-scenarios_9.3.10_Goal_Increase_Vendor_Independence "9.3.10 Goal: Increase Vendor Independence"
	
	Vendor independence will be increased through the following objectives:
	
	-   Interchangeable components: only hardware and software that have
	    standards-based interfaces will be selected, so that upgrades or the
	    insertion of new products will result in minimal disruption to the
	    user’s environment
	-   Non-proprietary specifications: capabilities will be defined in
	    terms of non-proprietary specifications that support full and open
	    competition and are available to any vendor for use in developing
	    commercial products
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.10_Identify_Transition_Architectures "9.3.10 Identify Transition Architectures"
	
	Where the scope of change to implement the Target Architecture requires
	an incremental approach, then one or more Transition Architectures may
	be necessary. These provide an ability to identify clear targets along
	the roadmap to realizing the Target Architecture. The Transition
	Architectures should provide measurable business value. The time-span
	between successive Transition Architectures does not have to be of
	uniform duration.
	
	Development of Transition Architectures must be based upon the preferred
	implementation approach, the Consolidated Gaps, Solutions, and
	Dependencies matrix, the listing of projects and portfolios, as well as
	the enterprise's capacity for creating and absorbing change.
	
	Determine where the difficult activities are, and unless there are
	compelling reasons, implement them after other activities that most
	easily deliver missing capability.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.11_Create_the_Architecture_Roadmap_Implementation_and_Migration_Plan "9.3.11 Create the Architecture Roadmap & Implementation and Migration Plan"
	
	Consolidate the work packages and Transition Architectures into the
	Architecture Roadmap, Draft, which describes a timeline of the
	progression from the Baseline Architecture to the Target Architecture.
	The timeline informs the Implementation and Migration Plan. The
	Architecture Roadmap frames the migration planning in Phase F.
	Identified Transition Architectures and work packages should have a
	clear set of outcomes. The Architecture Roadmap must demonstrate how the
	selection and timeline of Transition Architectures and work packages
	realizes the Target Architecture.
	
	The detail of the Architecture Roadmap, Draft, should be expressed at a
	similar level of detail to the Architecture Definition Document
	developed in Phases B, C, and D. Where significant additional detail is
	required before implementation the architecture is likely transitioning
	to a different level. See the TOGAF Standard — Applying the ADM for
	techniques to manage iteration and different levels of detail.
	
	The Implementation and Migration Plan must demonstrate the activity
	necessary to realize the Architecture Roadmap. The Implementation and
	Migration Plan forms the basis of the migration planning in Phase F. The
	detail of the Implementation and Migration Plan, Draft, must be aligned
	to the detail of the Architecture Roadmap and be sufficient to identify
	the necessary projects and resource requirements to realize the roadmap.
	
	When creating the Implementation and Migration Plan there are many
	approaches to consider, such as a data-driven sequence, where
	application systems that create data are implemented first, then
	applications that process the data. A clear understanding of the
	dependencies and lifecycle of in-place SBBs is required for an effective
	Implementation and Migration Plan.
	
	Finally, update the Architecture Vision, Architecture Definition
	Document, and Architecture Requirements Specification with any
	additional relevant outcomes from this phase.
	
snippet togaf_business-architecture_business-scenarios_9.3.11_Goal_Reduce_Lifecycle_Costs "9.3.11 Goal: Reduce Lifecycle Costs"
	
	Lifecycle costs can be reduced through most of the objectives discussed
	above. In addition, the following objectives directly address reduction
	of lifecycle costs:
	
	-   Reduced duplication: replacement of isolated systems and islands of
	    automation with interconnected open systems will lead to reductions
	    in overlapping functionality, data duplication, and unneeded
	    redundancy because open systems can share data and other resources
	-   Reduced software maintenance costs: reductions in the quantity and
	    variety of software used in the organization will lead to reductions
	    in the amount and cost of software maintenance – use of standard
	    off-the-shelf software will lead to further reductions in costs
	    since vendors of such software distribute their product maintenance
	    costs across a much larger user base
	-   Incremental replacement: common interfaces to shared infrastructure
	    components allow for phased replacement or upgrade with minimal
	    operational disturbance
	-   Reduced training costs: common systems and consistent Human Computer
	    Interfaces (HCIs) will lead to reduced training costs
	
snippet togaf_business-architecture_business-scenarios_9.3.12_Goal_Improve_Security "9.3.12 Goal: Improve Security"
	
	Security can be improved in the organization’s information through the
	following objectives:
	
	-   Consistent security interfaces for applications: consistent security
	    interfaces and procedures will lead to fewer errors when developing
	    applications and increased application portability; not all
	    applications will need the same suite of security features, but any
	    features used will be consistent across applications
	-   Consistent security interfaces for users: a common user interface to
	    security features will lead to reduced learning time when moving
	    from system to system
	-   Security independence: application deployment can use the security
	    policy and mechanisms appropriate to the particular environment if
	    there is good layering in the architecture
	-   A 25% reduction in calls to the help desk relating to security
	    issues
	-   A 20% reduction in “false positives” detected in the network (a
	    false positive is an event that appears to be an actionable security
	    event, but in fact is a false alarm)
	
snippet togaf_business-architecture_business-scenarios_9.3.13_Goal_Improve_Manageability "9.3.13 Goal: Improve Manageability"
	
	Management improvement can be realized through the following objectives:
	
	-   Consistent management interface: consistent management practices and
	    procedures will facilitate management across all applications and
	    their underlying support structures; a consistent interface can
	    simplify the management burden, leading to increased user efficiency
	-   Reduced operation, administration, and maintenance costs: operation,
	    administration, and maintenance costs may be reduced through the
	    availability of improved management products and increased
	    standardization of the objects being managed
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.1_Determine_Confirm_Key_Corporate_Change_Attributes "9.3.1 Determine/Confirm Key Corporate Change Attributes"
	
	This step determines how the Enterprise Architecture can be best
	implemented to take advantage of the organization's business culture.
	This should include the creation of an Implementation Factor catalog
	(see the TOGAF Standard — ADM Techniques) to serve as a repository for
	architecture implementation and migration decisions. The step also
	includes assessments of the transition capabilities of the organization
	units involved (including culture and abilities), and assessments of the
	enterprise (including culture and skill sets).
	
	The resulting factors from the assessments should be documented in the
	Implementation Factor catalog. For organizations where Enterprise
	Architecture is well established, this step can be simple, but the
	matrix has to be established so that it can be used as an archive and
	record of decisions taken.
	
snippet togaf_business-architecture_business-scenarios_9.3.1_Goal_Improve_Business_Process_Performance "9.3.1 Goal: Improve Business Process Performance"
	
	Business process improvements can be realized through the following
	objectives:
	
	-   Increased process throughput
	-   Consistent output quality
	-   Predictable process costs
	-   Increased re-use of existing processes
	-   Reduced time of sending business information from one process to
	    another process
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.3.1_Roles_and_Responsibilities "9.3.1 Roles and Responsibilities"
	
	Every enterprise has a predefined set of roles and responsibilities. If
	one already exists, use it, test waters, and refine it. While refining,
	start with defining roles and then think of titles. From a simple people
	portability and recruitment point of view, it is imperative that you
	keep the functional titles and roles in common with industry standard
	titles. It is best practice to separate functional titles from pay
	grades.
	
	Consider context, charter, culture, clarity of expectations,
	collaboration, communication and co-ordination, separation of concerns,
	control, competence, and creative innovation while defining each of the
	roles and responsibilities.
	
	There is sufficient literature in organization theory and design. Here
	are some quick pointers (see Referenced Documents):
	
	-   Policy Governance Model (ownership, accountability, authority,
	    delegation), in Reinventing your Board: A Step-by-Step Guide to
	    Implementing Policy Governance, by John Carver
	-   Star Model (strategy, people, structure, processes, and rewards –
	    driving behavior, culture, performance), in Organization Design, by
	    Jay R. Galbraith
	-   Six Box Model (purpose, structure, rewards, helpful mechanisms,
	    relationships, and leadership), in Organizational Diagnosis: Six
	    Places to Look for Trouble With or Without a Theory, by Marvin R.
	    Weisbord
	-   Congruence Model (inputs, outputs, informal and formal
	    organizations, people and work), in Managing Organizations, by
	    David A. Nadler, Michael Tushman, and Nina Hatvany
	-   Multi-Relation Model, in A Causal Model of Organization Performance
	    and Change, by Burke and Litwin
	
	It is likely that the enterprise may not have a team model specifically
	for EA or for any architecture role. In such a case, consider the
	catalog of models (organization, process, information flow,
	infrastructure topography) to be created for the enterprise. If no one
	has been formally building and maintaining an organization model, the
	team providing the EA Capability should assume the responsibility until
	a formal owner is identified. Lack of such ownership is an architectural
	gap and should be part of the work packages to address.
	
	When forward-looking technology research is not conducted (or it is
	being conducted, but not operationalized), the team providing the EA
	Capability should assume ownership until it can be moved to an
	appropriate owner. These activities may include validating
	vendor-supplied solutions, component design to be deployed on board an
	automobile, or be as complex as joint development of a tamper-proof
	credit card and Point of Sale (POS) solution.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.2_Determine_Business_Constraints_for_Implementation "9.3.2 Determine Business Constraints for Implementation"
	
	Identify any business drivers that would constrain the sequence of
	implementation. This should include a review of the business and
	strategic plans, at both a corporate and line-of-business level, and a
	review of the Enterprise Architecture Maturity Assessment.
	
snippet togaf_business-architecture_business-scenarios_9.3.2_Goal_Decrease_Costs "9.3.2 Goal: Decrease Costs"
	
	Cost improvements can be realized through the following objectives:
	
	-   Lower levels of redundancy and duplication in assets throughout the
	    enterprise
	-   Decreased reliance on external IT service providers for integration
	    and customization
	-   Lower costs of maintenance
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.3.2_Skills_Framework "9.3.2 Skills Framework"
	
	Governments and private forums within government like the US Department
	of Labor Occupational Outlook Handbook, the Skills Framework for the
	Information Age (SFIA), and The Open Group Certified Architect (Open CA)
	Program Conformance Requirements (see Referenced Documents) have defined
	detailed expectations for various architect roles. Some of these
	frameworks also provide a career and certification progression from
	beginner level architect to industry leading roles. Use these models
	before inventing one for the enterprise. It will simplify the engagement
	with the HR team.
	
snippet togaf_business-architecture_business-scenarios_9.3.3_Goal_Improve_Business_Operations "9.3.3 Goal: Improve Business Operations"
	
	Business operations improvements can be realized through the following
	objectives:
	
	-   Increased budget available to new business features
	-   Decreased costs of running the business
	-   Decreased time-to-market for products or services
	-   Increased quality of services to customers
	-   Improved quality of business information
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.3.3_Performance_Evaluation_of_the_EA_Capability "9.3.3 Performance Evaluation (of the EA Capability)"
	
	The absence of an approach to evaluate architects has been a common
	hindrance to growth for many in this profession. In most organizations,
	the existing HR framework is likely to have value measurement and
	communication approaches. When an evaluation criteria does exist, it is
	invariably a measure of models, documents, and visualizations produced
	(local to efficiency of building the EA Capability). These are
	inadequate to communicate value delivered by the architects.
	
	Some of the major categories to consider for defining value metrics are
	financial, risk reduction, benefit realization, growth and innovation,
	proactive readiness, development of organizational capability, and ease
	of change management. To be specific, consider how the professionals:
	
	-   Identify, define, and apply alternatives
	-   Tailor the basis for estimation of risk, controlling factors and
	    assumptions, and extrapolations
	-   Eliminate waste; balance agility with innovation, operational
	    stability, and sustainability
	-   Direct capital expenses planning
	-   Create a health map and propose corrective actions
	-   Perform the role of trusted advisor, mentor, or a sales person who
	    expands the scope of the engagement
	-   Perform consistent enterprise impact assessments
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.3_Review_and_Consolidate_Gap_Analysis_Results_from_Phases_B_to_D "9.3.3 Review and Consolidate Gap Analysis Results from Phases B to D"
	
	Consolidate and integrate the gap analysis results from the Business,
	Information Systems, and Technology Architectures (created in Phases B
	to D) and assess their implications with respect to potential solutions
	and inter-dependencies. This should be done by creating a Consolidated
	Gaps, Solutions, and Dependencies matrix, as shown in the TOGAF Standard
	— ADM Techniques, which will enable the identification of SBBs that
	could potentially address one or more gaps and their associated ABBs.
	
	The SBBs are created based on the candidate roadmap components from
	Phases B, C, and D.
	
	If appropriate, investigate different Target Architecture alternatives
	and discuss these with stakeholders using the Architecture Alternatives
	and Trade-offs technique (see the TOGAF Standard — ADM Techniques).
	
	Review the Phase B, C, and D gap analysis results and consolidate them
	in a single list. The gaps should be consolidated along with potential
	solutions to the gaps and dependencies. A recommended technique for
	determining the dependencies is to use sets of views such as the
	Business Interaction matrix, the Data Entity/Business Function matrix,
	and the Application/Function matrix to completely relate elements from
	different architecture domains.
	
	Rationalize the Consolidated Gaps, Solutions, and Dependencies matrix.
	Once all of the gaps have been documented, re-organize the gap list and
	place similar items together. When grouping the gaps, refer to the
	Implementation Factor catalog and review the implementation factors. Any
	additional factors should be added to the Implementation Factor catalog.
	
snippet togaf_business-architecture_business-scenarios_9.3.4_Goal_Improve_Management_Efficacy "9.3.4 Goal: Improve Management Efficacy"
	
	Management efficacy improvements can be realized through the following
	objectives:
	
	-   Increased flexibility of business
	-   Shorter time to make decisions
	-   Higher-quality decisions
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.4_Review_Consolidated_Requirements_Across_Related_Business_Functions "9.3.4 Review Consolidated Requirements Across Related Business Functions"
	
	Assess the requirements, gaps, solutions, and factors to identify a
	minimal set of requirements whose integration into work packages would
	lead to a more efficient and effective implementation of the Target
	Architecture across the business functions that are participating in the
	architecture. This functional perspective leads to the satisfaction of
	multiple requirements through the provision of shared solutions and
	services. The implications of this consolidation of requirements with
	respect to architectural components can be significant with respect to
	the provision of resources. For example, several requirements raised by
	several lines of business can be resolved through the provision of a
	shared set of Business Services and Application Services within a work
	package or project.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.5_Consolidate_and_Reconcile_Interoperability_Requirements "9.3.5 Consolidate and Reconcile Interoperability Requirements"
	
	Consolidate the interoperability requirements identified in previous
	phases. The Architecture Vision and Target Architectures, as well as the
	Implementation Factor catalog and Consolidated Gaps, Solutions, and
	Dependencies matrix, should be consolidated and reviewed to identify any
	constraints on interoperability required by the potential set of
	solutions.
	
	A key outcome is to minimize interoperability conflicts, or to ensure
	such conflicts are addressed in the architecture. Re-used SBBs,
	Commercial Off-The-Shelf (COTS) products, and third-party service
	providers typically impose interoperability requirements that conflict.
	Any such conflicts must be addressed in the architecture, and conflicts
	must be considered across all architecture domains (Business, Data,
	Application, Technology).
	
	There are two basic approaches to interoperability conflicts; either
	create a building block that transforms or translates between
	conflicting building blocks, or make a change to the specification of
	the conflicting building blocks.
	
snippet togaf_business-architecture_business-scenarios_9.3.5_Goal_Reduce_Risk "9.3.5 Goal: Reduce Risk"
	
	Risk improvements can be realized through the following objectives:
	
	-   Ease of implementing new processes
	-   Decreased errors introduced into business processes through complex
	    and faulty systems
	-   Decreased real-world safety hazards (including hazards that cause
	    loss of life)
	
snippet togaf_business-architecture_business-scenarios_9.3.6_Goal_Improve_Effectiveness_of_IT_Organization "9.3.6 Goal: Improve Effectiveness of IT Organization"
	
	IT organization effectiveness can be realized through the following
	objectives:
	
	-   Increased rollout of new projects
	-   Decreased time to roll out new projects
	-   Lower cost in rolling out new projects
	-   Decreased loss of service continuity when rolling out new projects
	-   Common development: applications that are common to multiple
	    business areas will be developed or acquired once and re-used rather
	    than separately developed by each business area
	-   Open systems environment: a standards-based common operating
	    environment, which accommodates the injection of new standards,
	    technologies, and applications on an organization-wide basis, will
	    be established; this standards-based environment will provide the
	    basis for development of common applications and facilitate software
	    re-use
	-   Use of products: as far as possible, hardware-independent,
	    off-the-shelf items should be used to satisfy requirements in order
	    to reduce dependence on custom developments and to reduce
	    development and maintenance costs
	-   Software re-use: for those applications that must be custom
	    developed, development of portable applications will reduce the
	    amount of software developed and add to the inventory of software
	    suitable for re-use by other systems
	-   Resource sharing: data processing resources (hardware, software, and
	    data) will be shared by all users requiring the services of those
	    resources – resource sharing will be accomplished in the context of
	    security and operational considerations
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.6_Refine_and_Validate_Dependencies "9.3.6 Refine and Validate Dependencies"
	
	Refine the initial dependencies, ensuring that any constraints on the
	Implementation and Migration Plans are identified. There are several key
	dependencies that should be taken into account, such as dependencies on
	existing implementations of Business Services and Application Services
	or changes to them. Dependencies should be used for determining the
	sequence of implementation and identifying the co-ordination required. A
	study of the dependencies should group activities together, creating a
	basis for projects to be established. Examine the relevant projects and
	see whether logical increments of deliverables can be identified. The
	dependencies will also help to identify when the identified increments
	can be delivered. Once finished, an assessment of these dependencies
	should be documented as part of the Architecture Roadmap and any
	necessary Transition Architectures.
	
	Addressing dependencies serves as the basis for most migration planning.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.7_Confirm_Readiness_and_Risk_for_Business_Transformation "9.3.7 Confirm Readiness and Risk for Business Transformation"
	
	Review the findings of the Business Transformation Readiness Assessment
	previously conducted in Phase A and determine their impact on the
	Architecture Roadmap and the Implementation and Migration Strategy. It
	is important to identify, classify, and mitigate risks associated with
	the transformation effort. Risks should be documented in the
	Consolidated Gaps, Solutions, and Dependencies matrix.
	
snippet togaf_business-architecture_business-scenarios_9.3.7_Goal_Improve_User_Productivity "9.3.7 Goal: Improve User Productivity"
	
	User productivity improvements can be realized through the following
	objectives:
	
	-   Consistent user interface: a consistent user interface will ensure
	    that all user-accessible functions and services will appear and
	    behave in a similar, predictable fashion regardless of application
	    or site; this will lead to better efficiency and fewer user errors,
	    which in turn may result in lower recovery costs
	-   Integrated applications: applications available to the user will
	    behave in a logically consistent manner across user environments,
	    which will lead to the same benefits as a consistent user interface
	-   Data sharing: databases will be shared across the organization in
	    the context of security and operational considerations, leading to
	    increased ease-of-access to required data
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.8_Formulate_Implementation_and_Migration_Strategy "9.3.8 Formulate Implementation and Migration Strategy"
	
	Create an overall Implementation and Migration Strategy that will guide
	the implementation of the Target Architecture, and structure any
	Transition Architectures. The first activity is to determine an overall
	strategic approach to implementing the solutions and/or exploiting
	opportunities. There are three basic approaches as follows:
	
	-   Greenfield: a completely new implementation
	-   Revolutionary: a radical change (i.e., switch on, switch off)
	-   Evolutionary: a strategy of convergence, such as parallel running or
	    a phased approach to introduce new capabilities
	
	Next, determine an approach for the overall strategic direction that
	will address and mitigate the risks identified in the Consolidated Gaps,
	Solutions, and Dependencies matrix. The most common implementation
	methodologies are:
	
	-   Quick win (snapshots)
	-   Achievable targets
	-   Value chain method
	
	These approaches and the identified dependencies should become the basis
	for the creation of the work packages. This activity terminates with
	agreement on the Implementation and Migration Strategy for the
	enterprise.
	
snippet togaf_business-architecture_business-scenarios_9.3.8_Goal_Improve_Portability_and_Scalability "9.3.8 Goal: Improve Portability and Scalability"
	
	The portability and scalability of applications will be through the
	following objectives:
	
	-   Portability: applications that adhere to open systems standards will
	    be portable, leading to increased ease-of-movement across
	    heterogeneous computing platforms – portable applications can allow
	    sites to upgrade their platforms as technological improvements
	    occur, with minimal impact on operations
	-   Scalability: applications that conform to the model will be
	    configurable, allowing operation on the full spectrum of platforms
	    required
	
snippet togaf_business-architecture_business-scenarios_9.3.9_Goal_Improve_Interoperability "9.3.9 Goal: Improve Interoperability"
	
	Interoperability improvements across applications and business areas can
	be realized through the following objectives:
	
	-   Common infrastructure: the architecture should promote a
	    communications and computing infrastructure based on open systems
	    and systems transparency including, but not limited to, operating
	    systems, database management, data interchange, network services,
	    network management, and user interfaces
	-   Standardization: by implementing standards-based platforms,
	    applications will be provided with, and will be able to use, a
	    common set of services that improve the opportunities for
	    interoperability
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3.9_Identify_and_Group_Major_Work_Packages "9.3.9 Identify and Group Major Work Packages"
	
	Key stakeholders, planners, and the Enterprise Architects should assess
	the missing business capabilities identified in the Architecture Vision
	and Target Architecture.
	
	Using the Consolidated Gaps, Solutions, and Dependencies matrix together
	with the Implementation Factor catalog, logically group the various
	activities into work packages.
	
	Fill in the "Solution" column in the Consolidated Gaps, Solutions, and
	Dependencies matrix to recommend the proposed solution mechanisms.
	Indicate for every gap/activity whether the solution should be oriented
	towards a new development, or be based on an existing product, and/or
	use a solution that can be purchased. An existing system may resolve the
	requirement with minor enhancements. For new development this is a good
	time to determine whether the work should be conducted in-house or
	through a contract.
	
	Classify every current system that is under consideration as:
	
	-   Mainstream: part of the future information system
	-   Contain: expected to be replaced or modified in the planning horizon
	    (next three years)
	-   Replace: to be replaced in the planning horizon
	
	Supporting top-level work packages should then in turn be decomposed
	into increments to deliver the capability increments. Analyze and refine
	these work packages or increments with respect to their business
	transformation issues and the strategic implementation approach.
	Finally, group the work packages into portfolios and projects within a
	portfolio, taking into consideration the dependencies and the strategic
	implementation approach.
	
snippet togaf_business-architecture_business-scenarios_9.3_Categories_of_Goals_and_Objectives "9.3 Categories of Goals and Objectives"
	
	Although every organization will have its own set of goals, some
	examples may help in the development of an organization-specific list.
	The goals given below are categories of goals, each with a list of
	possible objectives, which have been adapted from the goals given in
	previous versions of the TOGAF Standard.
	
	Each of the objectives given below should be made SMART with specific
	measures and metrics for the task involved, as illustrated in the
	example above. However, the actual work to be done will be specific to
	the architecture project concerned, and it is not possible to provide a
	list of generic SMART objectives that will relate to any project.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.3_Finalize_Scope_and_Budget "9.3 Finalize Scope and Budget"
	
	Implementation planning (Phase F) is the most critical piece in
	executing a walk through the ADM for the Implementation Project.
	Practitioners must rationalize for their Architecture Project what
	resources are required.
	
	Package the project’s architecture specifications, which includes the
	subsequent controls that mitigate the identified Implementation
	Project’s risks. The package is then handed off to the Implementation
	Practitioner. It is the responsibility of the Architecture Project
	Practitioner to set up the Implementation Practitioner with everything
	they need to implement the project successfully.
	
	If one or more work packages have not already been assigned to the
	Implementation Project, do so and seek approval. Be familiar with which
	gaps the work package(s) are filling and the purpose of their sequence
	in the roadmap. It may also be necessary to be familiar with the work
	packages the project will not be filling. Identify the risks within the
	work packages and subsequently within the Implementation Project.
	
	Architect the “package” for the purpose of the Implementation Project.
	Create architecture specifications to the extent that an Architecture
	Project will not go off the rails on a crazy train. On the other hand,
	the railroads must not be easily scoured or constrained to the point of
	inflexibility of the volatile environment of the EA Landscape. Keep the
	Implementation Project on the tracks while maintaining the railways of
	the Architecture Project.
	
	The Practitioner should package the architecture specifications
	including the principles, requirements, and controls within the context
	of the light shining down from the Architecture Vision of the portfolio,
	in the review of the Stakeholder Map, and the undertakings of the EA
	Landscape.
	
	Refine the estimates and timeline for the project within the acceptable
	variance limits of the Enterprise. Cascade the update to project scope,
	trade-offs, and timelines to the Enterprise roadmap. Consult the
	requisite SMEs and stakeholders, and complete the architecture review.
	Populate the governance and approval plan for the solution delivery
	effort.
	
snippet togaf_adm-techniques_9_Risk_Management_9.3_Risk_Identification "9.3 Risk Identification"
	
	The maturity and transformation readiness assessments will generate a
	great many risks. Identify the risks and then determine the strategy to
	address them throughout the transformation.
	
	The use of Capability Maturity Models (CMMs) is suitable for specific
	factors associated with architecture delivery to first identify baseline
	and target states and then identify the actions required to move to the
	target state. The implications of not achieving the target state can
	result in the discovery of risks. Refer to 8. Business Transformation
	Readiness Assessment for specific details.
	
	Risk documentation is completed in the context of a Risk Management
	Plan, for which templates exist in standard project management
	methodologies — e.g., Project Management Body of Knowledge (PMBOK®) and
	PRINCE2® — as well as with the various government methodologies.
	
	Normally these methodologies involve procedures for contingency
	planning, tracking and evaluating levels of risk, reacting to changing
	risk level factors, as well as processes for documenting, reporting, and
	communicating risks to stakeholders.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.3_Steps "9.3 Steps"
	
	The level of detail addressed in Phase E will depend on the scope and
	goals of the overall architecture effort.
	
	The order of the steps in Phase E as well as the time at which they are
	formally started and completed should be adapted to the situation at
	hand in accordance with the established Architecture Governance.
	
	All activities that have been initiated in these steps must be closed
	during the Create the Architecture Roadmap & Implementation and
	Migration Plan step (see 9.3.11 Create the Architecture Roadmap &
	Implementation and Migration Plan).
	
	The steps in Phase E are as follows:
	
	-   Determine/confirm key corporate change attributes (see 9.3.1
	    Determine/Confirm Key Corporate Change Attributes)
	-   Determine business constraints for implementation (see 9.3.2
	    Determine Business Constraints for Implementation)
	-   Review and consolidate gap analysis results from Phases B to D (see
	    9.3.3 Review and Consolidate Gap Analysis Results from Phases B to
	    D)
	-   Review consolidated requirements across related business functions
	    (see 9.3.4 Review Consolidated Requirements Across Related Business
	    Functions)
	-   Consolidate and reconcile interoperability requirements (see 9.3.5
	    Consolidate and Reconcile Interoperability Requirements)
	-   Refine and validate dependencies (see 9.3.6 Refine and Validate
	    Dependencies)
	-   Confirm readiness and risk for business transformation (see 9.3.7
	    Confirm Readiness and Risk for Business Transformation)
	-   Formulate Implementation and Migration Strategy (see 9.3.8 Formulate
	    Implementation and Migration Strategy)
	-   Identify and group major work packages (see 9.3.9 Identify and Group
	    Major Work Packages)
	-   Identify Transition Architectures (see 9.3.10 Identify Transition
	    Architectures)
	-   Create the Architecture Roadmap & Implementation and Migration Plan
	    (see 9.3.11 Create the Architecture Roadmap & Implementation and
	    Migration Plan)
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.3_Structure "9.3 Structure"
	
	The structure of the team providing the EA Capability depends on the
	activities to be performed against the charter. Figure 13 summarizes a
	high-level view of activities and suggests some of their relationships
	to each other. Skills required to build and use have different
	requirements with few overlaps.
	
	The EA Capability must run efficiently, effectively, and in line with
	changing operational and financial practices. It is conceptually similar
	to operating any function in the organization. It consists of
	EA-specific activities and activities that are general to any business.
	
	EA-specific activities are either foundational or purpose-specific. The
	nature of work done by the team providing the EA Capability invariably
	places them as a shared function. The team needs continuous input from
	impacted teams on relevance, efficiency, effectiveness, and growth – it
	is imperative to have common foundational elements of the EA Capability.
	
	[]
	
	Figure 13: Decomposition of EA Capability Model
	
	An interesting aspect of leading an EA Capability is the need to apply
	EA services to the EA Capability. This Guide is based upon the premise
	that a properly architected EA Capability out-performs an ad hoc
	organizational design. In fact, this Guide follows an approach
	applicable to architecture to support portfolio to define and describe
	the required EA Capability. The EA Capability will create and revise a
	unified EA strategy and accompanying EA plans, and will produce an
	integrated EA roadmap. This activity must grasp the current state and
	future direction of the business and its supporting systems, and have
	ongoing interactions with the people who are responsible for achieving
	the target state across several enterprise functions.
	
	A certain amount of the EA Capability must be in place before
	architecture work can start; consequently, boot-strapping is necessary.
	For a budding EA Capability team, there will be an expectation to build
	a roadmap to develop the capability and to produce usable architecture.
	The Leader will have to pay attention and track these as separate
	efforts.
	
	Well-formed EA Capability teams have specialists in each of the main
	domains like business, information, applications, technology, and
	security. Depending on organizational alignment, sponsorship, and
	funding, the team providing the EA Capability may employ specialists per
	suite of solution areas like enterprise resource planning, customer
	relationship management, sales force automation, core banking, and
	treasury. Other cross-disciplines to consider are strategic planners,
	financial and market analysts, line of business leaders, or subject
	matter experts, and service or support personnel. It is advisable to
	keep such functional specialists as part of an extended EA team. The
	core team is focused on strategies, processes, and advice.
	
	[]
	
	Figure 14: Teams Executing the EA Capability
	
	This Guide now addresses the matter of having an architecture board or a
	governance council. Chapter 6 (Architecture Governance) discussed the
	composition of the team and its functions. Regarding the purpose and
	approach to staffing the architecture board, apply the separation of
	duties principle. The architecture board is equivalent to the “board of
	directors” of the EA Capability’s business-in-a-business. Members of the
	governance team should have direct influence over the direction of the
	business or the outcome of the initiatives architected by the EA. This
	body sets and manages overall direction for the enterprise. It is not a
	successful pattern to embed rights for certain classes of architecture
	decisions in this body. For example, defining the constitution of an
	architecture building block, solution building block, or a trade-off
	decision around directory services or assembly line layouts is better
	decided at the extended EA team level.
	
	The EA Capability, like any other business, must carry out a basic set
	of general actions. This includes things like finance and budgeting,
	team development, risk management, and performance management. All of
	these must be adapted to the specific EA Capability and enterprise. In
	most enterprises these functions are shared, and EA should benefit from
	tapping into these teams. Occasionally, to scale the reach of the EA
	functions, it may be necessary to franchise some of the activities to
	teams outside the team providing the EA Capability.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.4.1_Recruiting_to_Build_Capacity "9.4.1 Recruiting to Build Capacity"
	
	When the EA Capability is being re-booted or the team providing the EA
	Capability is federated, it is likely that existing pools of architects
	would be inherited. It may be baggage or a bonus. There is value to
	institutional knowledge and rapport – only when balanced against tenure,
	awareness, and institutional bias. Irrespective of the latitude given to
	the Leader to build the team, a good approach to recruiting members of
	the EA Capability team is to follow the knowledge, skill, and talent
	framework. Also, pay attention to the personal growth path desire of the
	individual and balance it against the financial accounting model of the
	team providing the EA Capability. As much as the architect is required
	to present all facets of a problem or topic, the architect is also
	required to take a stand and argue on the merits and metrics. Look
	beyond the daily activities; look for diversity of domains and
	transferrable skills across business domains and problem patterns.
	
	EA is not all about definitions of trade-off criteria to reduce risk or
	cost and to improve sustainability over a period. Understanding the
	organization’s objectives, legal environment, financial model, and
	operating model clarifies that trade-off decisions normally cover more
	than one dimension. A retractable road barrier is a clear example of
	innovative design to avoid trading off security concerns against
	emergency and usability concerns. Enterprise Architects will have to
	look across the functional and departmental barriers of the enterprise,
	so that innovative alternatives or trade-off can be taken into account
	before presenting decision-ready options. It is recommended to have
	people of varying skills, but who have a common thread in thought
	process: how to set and follow trade-off analysis to deliver
	decision-ready recommendations. A deductive reasoning process is not the
	same as belief and bias-oriented black-and-white thinking. As times
	change, some of the concerns change as well. What used to be
	non-functional requirements – like visual appeal and performance – are
	becoming key functional differentiators (as of 2015-2016). A
	prerequisite for an individual to be an Enterprise Architect is the
	ability to keep current and be imaginative.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.4_Capacity "9.4 Capacity"
	
	Architect skill growth invariably starts with domain-level
	specialization and branches into cross-domain expertise. Organizational
	structure, dynamics, or funding level may force the Leader to create
	capacity via federated or virtual teams. If the EA Capability is being
	resurrected, it would be difficult to discern qualified and
	semi-qualified architects embedded in various parts of the enterprise.
	Focusing on measures like adherence to objectives, EA process, and value
	creation approach have proven to surface the right talent to acquire
	both internally and externally.
	
	Refer to the sample EA Capability models shown in Figure 22 and Figure
	23. Develop a model to assess how many architects would be required to
	cover development of these EA Capabilities or apply parts of these EA
	Capabilities to achieve the business. Team members will be spending time
	to keep the architecture repository current or managing changes to the
	EA Capability and the enterprise. In addition to the skills framework,
	consider the talent mix to perform these activities while maintaining
	deep engagement with all stakeholders.
	
	One of the most common mistakes in building capacity relates to the time
	required to coach and mentor. The architecture discipline is partly
	about delivery. Driving change in the thought process of leadership and
	delivery teams that everything is a trade-off, including that
	sub-optimization exists in the short term, consumes time. Such coaching
	invariably results in random disruptions inhibiting members of the EA
	Capability team to meet their schedule. Likewise, it takes time to
	mentor aspiring candidates. Mentors may be mostly productive, but mentee
	time should not be accounted as “available”. Estimate overhead time
	before committing to delivery schedule or capacity.
	
	Members of the EA Capability team may possess a level of maturity and
	capability to deliver against the business objectives and timelines.
	Experience has shown that organizational maturity is needed to
	understand and execute on the roadmap, and, if this is not understood,
	it can result in failure and over committing the team. Like performance
	criteria, define capacity assessment criteria like time, specialization,
	and maturity. If there is no measurement, there is no way to identify
	the need to add more or adjust focus.
	
	As mentioned in the previous chapter, it is advisable to have a set of
	analysts as resources who can manage and curate the EA repository. It is
	advisable to employ a graphic designer, on an as-needed basis. While
	budgeting for the total spend on the EA Capability team, consider such
	part-time resource needs.
	
snippet togaf_adm-techniques_9_Risk_Management_9.4_Initial_Risk_Assessment "9.4 Initial Risk Assessment"
	
	The next step is to classify risks with respect to effect and frequency
	in accordance with scales used within the organization. Combine effect
	and frequency to come up with a preliminary risk assessment.
	
	There are no hard and fast rules with respect to measuring effect and
	frequency. The following guidelines are based upon existing risk
	management best practices.
	
	Effect could be assessed using the following example criteria:
	
	-   Catastrophic infers critical financial loss that could result in
	    bankruptcy of the organization
	-   Critical infers serious financial loss in more than one line of
	    business leading to a loss in productivity and no return on
	    investment on the IT investment
	-   Marginal infers a minor financial loss in a line of business and a
	    reduced return on investment on the IT investment
	-   Negligible infers a minimal impact on a line of business' ability to
	    deliver services and/or products
	
	Frequency could be indicated as follows:
	
	-   Frequent: likely to occur very often and/or continuously
	-   Likely: occurs several times over the course of a transformation
	    cycle
	-   Occasional: occurs sporadically
	-   Seldom: remotely possible and would probably occur not more than
	    once in the course of a transformation cycle
	-   Unlikely: will probably not occur during the course of a
	    transformation cycle
	
	Combining the two factors to infer impact would be conducted using a
	heuristically-based but consistent classification scheme for the risks.
	A potential scheme to assess corporate impact could be as follows:
	
	-   Extremely High Risk (E): the transformation effort will most likely
	    fail with severe consequences
	-   High Risk (H): significant failure of parts of the transformation
	    effort resulting in certain goals not being achieved
	-   Moderate Risk (M): noticeable failure of parts of the transformation
	    effort threatening the success of certain goals
	-   Low Risk (L): certain goals will not be wholly successful
	
	These impacts can be derived using a classification scheme, as shown in
	Figure 9-1 .
	
	[]
	
	Figure 9-1: Risk Classification Scheme
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.4_Outputs "9.4 Outputs"
	
	The outputs of Phase E may include, but are not restricted to:
	
	-   Refined and updated version of the Architecture Vision phase
	    deliverables, where applicable, including:
	    -   Architecture Vision, including definition of types and degrees
	        of interoperability
	    -   Statement of Architecture Work (see the TOGAF Standard —
	        Architecture Content), updated if necessary
	-   Draft Architecture Definition Document (see the TOGAF Standard —
	    Architecture Content), including:
	    -   Baseline Business Architecture, Approved, updated if necessary
	    -   Target Business Architecture, Approved, updated if necessary
	    -   Baseline Data Architecture, Approved, updated if necessary
	    -   Target Data Architecture, Approved, updated if necessary
	    -   Baseline Application Architecture, Approved, updated if
	        necessary
	    -   Target Application Architecture, Approved, updated if necessary
	    -   Baseline Technology Architecture, Approved, updated if necessary
	    -   Target Technology Architecture, Approved, updated if necessary
	    -   Transition Architecture, number and scope as necessary
	    -   Views corresponding to the selected viewpoints addressing key
	        stakeholder concerns
	-   Draft Architecture Requirements Specification (see the TOGAF
	    Standard — Architecture Content), including:
	    -   Consolidated Gaps, Solutions, and Dependencies Assessment
	-   Capability Assessments, including:
	    -   Business Capability Assessment
	    -   IT Capability Assessment
	-   Architecture Roadmap (see the TOGAF Standard — Architecture
	    Content), including:
	    -   Work package portfolio:
	        -   Work package description (name, description, objectives)
	        -   Functional requirements
	        -   Dependencies
	        -   Relationship to opportunity
	        -   Relationship to Architecture Definition Document and
	            Architecture Requirements Specification
	        -   Relationship to any capability increments
	        -   Business value
	        -   Implementation Factor catalog
	        -   Impact
	    -   Identification of Transition Architectures, if any, including:
	        -   Relationship to Architecture Definition Document
	    -   Implementation recommendations:
	        -   Criteria measures of effectiveness
	        -   Risks and issues
	        -   Solution Building Blocks (SBBs)
	-   Implementation and Migration Plan, Draft, including:
	    -   Implementation and Migration Strategy
	
	The TOGAF Standard — Architecture Content contains a detailed
	description of architectural artifacts which might be produced in this
	phase, describing them in detail and relating them to entities,
	attributes, and relationships in the TOGAF Enterprise Metamodel.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.4_Prepare_for_Solution_Delivery_Governance "9.4 Prepare for Solution Delivery Governance"
	
	The maximum value is to be delivered by the Architecture Practitioner to
	the Enterprise in this step. Having finalized the scope and budget, make
	sure that the backlog information is complete for the project;
	trade-off, and decision criteria for the product owner, product manager,
	scrum master, or the project manager (whatever the role and title is)
	and the Implementation Practitioner is fully defined and understood;
	decision-makers and organizational leaders are fully aware of the
	barriers they must work to remove.
	
	Any outstanding proof-of-concept work at this time should be limited to
	understanding an approach to the solution, not the architecture. Provide
	sufficient measurement criteria, indicators to warn of any variances,
	escalation, and deployment of SMEs, and implementation governance.
	
	Initiate steps to close the Architecture Project. The Architecture
	Project’s scope is limited to change management and governance. From
	that aspect, the project is not completed. This is also the time the
	architecture team and most of the Practitioners withdraw themselves from
	the limelight and pass the baton to Implementation Practitioners.
	Provide any required support for the Implementation Practitioners to
	defend the project during budget allocation. The work is not complete
	until the budget is allocated and the Implementation Project charter is
	signed.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.5.1_Value_Chains_Value_Streams_and_Capabilities "9.5.1 Value Chains, Value Streams, and Capabilities"
	
	The major approaches are capability, process, and value stream-based
	segmentation of the business. A capability-based system focuses on what
	sets the enterprise apart from the competition. In a value-centric
	system, the focus is on how to deliver the products and services to the
	customers. It is possible for the enterprise to follow value-based or
	capability-based models in two different business units or the same
	business unit in different geographies. For example, customer center
	operations may be managed as a capability whereas sales may be handled
	as a process.
	
	In some businesses, terms like front-office, middle-office, and
	back-office are commonly used to describe the way operations are
	managed. Front-office means customer-facing operations like branches,
	counters, or vending machines where customers appear and interact.
	Back-office implies capabilities like logistics, infrastructure, legal,
	and finance. Middle-office can indicate nearly everything else. Even
	though different terms are used to describe value stream and
	capabilities, use of front, middle, and back office is a common
	variation.
	
	In the event the enterprise does not have a value chain, value stream
	map, or capability map, but prefers to anchor on one of them, a good
	place to start would be the American Productivity and Quality Center
	(APQC) capability map or value chain or value stream map.
	
	There are businesses like telecom and technology sales where the scope
	for capability or value stream definition may be constrained by a
	country; in China, Vietnam, and Thailand local regulations and market
	behavior are so different that they demand special treatment. Likewise,
	nuances in the mining industry demand that each mine be scoped
	differently for operational purposes, but the entire business has to be
	handled as one unit for strategy purposes.
	
	In the event of managing a Merger and Acquisition (M&A) or divestiture
	activity, the scope may be just that: land the transition from two
	entities to one. When performing business as part of an alliance or
	consortium, scoping should be handled carefully to treat each of the
	legal entities participating in the alliance and the alliance as a whole
	in the context of respective legal boundaries.
	
	Some businesses prefer to handle segmentation based on their portfolio
	of efforts such as growth markets and emerging markets. Such marketing
	taxonomy indicates geographical boundaries and a set of processes or
	capabilities to achieve business goals. From the EA Capability
	standpoint, care must be taken to clarify the set of processes,
	capabilities, and geography that is within scope.
	
	Identify the best suited analysis model for the enterprise – value
	chain, value stream, or capabilities. Validate whether the analysis
	model can be used to drive change and communicate the architecture.
	Align and define the EA team model to the appropriate analysis model and
	architecture delivery model.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.5.2_Domains_and_Layers "9.5.2 Domains and Layers"
	
	This Guide discusses domains and layers for awareness and provides
	clarity on nomenclature. It is sufficient to know that domain knowledge
	constitutes criteria to staff the team.
	
	Domains and layers are typical words in the dictionary of a
	technologist. The TOGAF framework suggests that the word “domain” should
	always be prefixed by a modifying noun to provide context; e.g.,
	architecture domain, business domain, and security domain.
	
	Domain can be defined in a different context as well. Industry-based
	business domain context for each enterprise is defined and a known
	context for the enterprise.
	
	For the purpose of this Guide, the (architecture) domains are limited to
	business, data (and information), application, technology
	(infrastructure and integration), and security. This view is based on
	the meaning of the word domain as “a field of thought, action,
	influence”. This definition is very similar to terms defined in the
	TOGAF framework. See Figure 15 for details on the scope of each of these
	architectural sub-domains.
	
	A security architecture is a structure of organizational, conceptual,
	logical, and physical components that interact in a coherent fashion to
	achieve and maintain a state of managed risk. It is an enabler of
	secure, safe, resilient, and reliable behavior and upholds privacy at
	risk areas throughout the whole enterprise.
	
	Security architecture components always have a relationship with other
	elements in the architecture. Thus, although the security architecture
	might be viewed as one architecture, it can never be an isolated
	architecture. That would be meaningless. After all, security is not the
	problem of security architects; it is a concern for the enterprise.
	
	In the context of security architecture, risk can be operational or
	business-related. Security architecture contains a balanced view on
	risk: negative consequences are kept to an acceptable level, and
	positive opportunities are exploited to their maximum. The
	business-driven approach is key for the security architecture: business
	drivers offer the context for risk assessments. They define whether
	compliance with any control framework is necessary, and they justify the
	need for security measures.
	
	In Figure 15, the visualization does not convey that one domain is a
	subset of the other. The idea is that integration and security domains
	touch business, data, application, and technology domains. Security
	architecture is a cross-cutting concern, pervasive through the whole EA.
	
	As a cross-cutting concern, the security architecture impacts and
	informs business, application, data, and technology architectures. The
	security architecture may often be organized outside of the architecture
	scope, yet parts of it need to be developed in an integrated fashion
	with the architecture. See Figure 16 for a view of how the layers
	interact with each other, and a cross-cutting concern.
	
	[]
	
	Figure 15: Commonly Accepted Domains
	
	When dealing with function or strategy-specific EA efforts, it is
	preferable to consider domains first and, as needed, consider
	introducing the concept of (architecture) layers. When EA is IT-centric,
	use of layers to define standard guides may be useful for the
	enterprise. Layers are normally based on man-to-machine or
	machine-to-machine interactions. Commonly used layers are presentations
	or user experience (or client tier), service (end-points or front tier),
	business rule and logic (middle tier), integration and workflow (middle
	tier), and storage (data tier). As transitions happen to cloud,
	mobility, and the Internet of Things (IoT), the architectural layers in
	the IT landscape will change significantly.
	
	The Open Group SOA Reference Architecture (see Referenced Documents)
	provides a logical solution view, which talks about consumers and
	providers who are brought together via consumer interfaces, business
	processes, services, service components, and operational systems.
	Consumers’ loyalty, usability, and consumption are governed and assured
	by the quality of the service, enabling information exchange between
	participating members. The OSGi Alliance model, the OSI model based on
	the ISO/IEC 7498-1:1994 standard, or Functions, Flows (Processes),
	Layers, and Views (FFLV), are other concepts on technology or
	architecture layers that can be leveraged.
	
	[]
	
	Figure 16: Security as a Cross-Cutting Concern through the Architecture
	
	When communicating domain architectures, terms like conceptual, logical,
	and physical layers are used. Use of the term “layer” in that context is
	about level of abstraction in the detail being communicated in models
	and documentation about the architecture. Conceptual, logical, and
	physical explicitly indicate the intent of the level of detail that can
	be found in the architecture.
	
	When defining the scope for architecture work, the terms enterprise,
	segment, and capability or project are used. Enterprise, segment, and
	capability classification is used to convey how the architecture project
	is scoped. Purpose-based classification is aimed at addressing the
	outcome of the architecture work. For a capability level, all four
	purposes apply. Always remember the distinction between scoping intent
	and outcome intent. When directing the EA team and when communicating
	with stakeholders, be specific and clear about the intent and purpose of
	the architecture work.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.5.3_Depth_and_Breadth "9.5.3 Depth and Breadth"
	
	Clarity in business objectives provides hints for what to focus on
	first: the entire breadth of the enterprise or specific areas. Building
	on the discussion about scoping the EA effort in Section 4.2.4,
	consideration to grow the enterprise via M&A or through organic
	expansion should be included. Objectives like due diligence for M&A
	would start with understanding all capabilities (breadth) and then go
	into each unit or capability stack (depth). Objectives like cost and
	incident reduction would start with a specific capability (depth) and
	then replicate the process across the business (breadth).
	
	Sometimes, the size of the enterprise or the “span of control” of the
	sponsor may call for partitioning. The constraint is either capacity of
	the team providing the EA Capability or value proposition perceived by
	the sponsors. Either way, the only trade-off that can be made is time to
	cover the entire enterprise (or delivering value) against the ability to
	keep the architecture documentation current. When dealing with an
	enterprise structure where the EA lead is a coordinator across
	architects from various business units, a need for unification,
	standardization, or replication of standards, reference models, and
	reference architecture arises. Partitioning enables scale to cover the
	breadth. The Leader should drive clarity on principles to employ,
	approach to classification, and avoidance of duplicate architectural
	work in the unification or diversification model. In these scenarios,
	there is a need to consider carving out a separate integration
	architecture effort.
	
	The approach to scope the EA work is also called “partitioning” and each
	scoped slice is called an architecture partition. Architectures that are
	created to address a subset of issues within an enterprise require a
	consistent frame of reference so that they can be considered as a group
	as well as point deliverables. The dimensions that are used to define
	the scope boundary of a single architecture (e.g., level of detail,
	architecture domain) are typically the same dimensions used to integrate
	the subset of architectures.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.5.4_Impact_of_Time_Dimension_on_Scope "9.5.4 Impact of Time Dimension on Scope"
	
	The capability map or value stream provides a pivot to build the
	end-to-end view of the enterprise. The level of detail to which they are
	explored depends on the scope. The strategy and operations of the
	business change with time. The impact could be in the partition that a
	team of architects is currently engaged, part of a backlog item, or part
	of those pending elaboration in the future. It is also possible that
	concurrent elaboration activities can occur, based on the EA team
	capacity. Pragmatically, the EA Capability must isolate the impact of
	changes across concurrent architecture efforts. A side-effect of such
	isolations or concurrent development is architecture in silos.
	
	Having defined the boundary of the EA Landscape to be fleshed out, the
	approach to fleshing out the details contained within the EA Landscape
	should be approached differently. Defining the boundary sets the context
	for interoperability concerns. Details of the landscape set the context
	for purpose and outcome. One of the common failure patterns is to scope
	the architecture project efforts to flesh out the details of the EA
	Landscape without consideration of the impact to neighboring landscapes.
	The key principle that should never be compromised or traded-off is that
	EA is about a system of systems. Cross-system dependency and interaction
	management should take precedence over the needs of the project or
	success of the “scoped effort”. Care must be taken to define the
	criteria for optimizing or sub-optimizing a particular area for the
	overall benefit of the enterprise.
	
	Having executed on this chapter, use this checklist to assess progress
	made in developing the EA Capability.
	
	-   Trade-off criteria is defined and communicated as architecture
	    principles, sub-optimization considerations, and collaboration
	    needs: Y/N
	-   Team design, skill set, and resource assignment can be completed:
	    Y/N
	-   Based on capacity of the team, number of iterations required to
	    cover the scope in charter is defined: Y/N
	-   Performance evaluation of EA Capability team is defined and linked
	    to objectives: Y/N
	
snippet togaf_adm_9_E_Opportunities_Solutions_9.5_Approach "9.5 Approach"
	
	Phase E concentrates on how to deliver the architecture. It takes into
	account the complete set of gaps between the Target and Baseline
	Architectures in all architecture domains, and logically groups changes
	into work packages within the enterprise's portfolios. This is an effort
	to build a best-fit roadmap that is based upon the stakeholder
	requirements, the enterprise's business transformation readiness,
	identified opportunities and solutions, and identified implementation
	constraints. The key is to focus on the final target while realizing
	incremental business value.
	
	Phase E is the initial step in the creation of the Implementation and
	Migration Plan which is completed in Phase F. It provides the basis of a
	well considered Implementation and Migration Plan that is integrated
	into the enterprise's portfolio in Phase F.
	
	The following four concepts are key to transitioning from developing to
	delivering a Target Architecture:
	
	-   Architecture Roadmap
	-   Work Packages
	-   Transition Architectures
	-   Implementation and Migration Plan
	
	The Architecture Roadmap lists individual work packages in a timeline
	that will realize the Target Architecture.
	
	Each work package identifies a logical group of changes necessary to
	realize the Target Architecture.
	
	A Transition Architecture describes the enterprise at an architecturally
	significant state between the Baseline and Target Architectures.
	Transition Architectures provide interim Target Architectures upon which
	the organization can converge.
	
	The Implementation and Migration Plan provides a schedule of the
	projects that will realize the Target Architecture.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9.5_Project_Request_for_Architecture_Work_Originating_from_the_Wild "9.5 Project Request for Architecture Work Originating from the Wild"
	
	The most common Requests for Architecture Work from the wild are for
	Architecture to Support Project. The central question for the
	Practitioner is to identify the proposed project’s alignment to expected
	value and the opportunity cost for the organization. See Section 8.6 for
	a discussion.
	
snippet togaf_adm-techniques_9_Risk_Management_9.5_Risk_Mitigation_and_Residual_Risk_Assessment "9.5 Risk Mitigation and Residual Risk Assessment"
	
	Risk mitigation refers to the identification, planning, and conduct of
	actions that will reduce the risk to an acceptable level.
	
	The mitigation effort could be a simple monitoring and/or acceptance of
	the risk to a full-blown contingency plan calling for complete
	redundancy in a Business Continuity Plan (with all of the associated
	scope, cost, and time implications).
	
	Due to the implications of this risk assessment, it has to be conducted
	in a pragmatic but systematic manner. With priority going to frequent
	high impact risks, each risk has to be mitigated in turn.
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9.5_Scoping_the_Depth_and_Breadth_of_Business_Impact_with_the_EA_Capability "9.5 Scoping the Depth and Breadth of Business Impact with the EA Capability"
	
	The enterprise context, EA context, and purpose of the EA Capability
	drive the determination of scoping decisions. The EA Capability delivers
	optimal results when different aspects (like environment, strategy,
	internal and external interactions, automation, etc.) are handled the
	way they should be.
	
	This section helps to answer the following questions:
	
	-   What are the possible approaches to understanding the enterprise (or
	    the charter for the EA Capability)?
	-   Which method to partition the scope of work would be best for which
	    industry or enterprise?
	-   Are there reference architectures and models that could be
	    leveraged?
	-   What potential trade-off could result due to time dimension impact
	    on scope?
	-   What if the scope is confined to IT only?
	
	Earlier this Guide discussed enterprise, segment, and capability-based
	approaches for separation and scoping. These are natural mechanisms, if
	already available in your enterprise, that could be leveraged.
	
	In order to deliver value, any business should have three scoping
	statements: customer demography or segment being addressed, products
	(vertical integration) delivered, and geography being covered. Likewise,
	EA should also address business capabilities, architectural or business
	domains, and solution coverage. The Leader will have to create a matrix
	of these in a grid, either follow a row or a column to arrive at the
	right size for the team, and to articulate the value being delivered by
	the EA Capability. Unless the variant chosen is proving to be a
	deterrent to deliver value, it is prudent to stick to one approach.
	
snippet togaf_adm-techniques_9_Risk_Management_9.6_Conduct_Residual_Risk_Assessment "9.6 Conduct Residual Risk Assessment"
	
	Once the mitigation effort has been identified for each one of the
	risks, re-assess the effect and frequency and then recalculate the
	impacts and see whether the mitigation effort has really made an
	acceptable difference. The mitigation efforts will often be
	resource-intensive and a major outlay for little or no residual risk
	should be challenged.
	
	Once the initial risk is mitigated, then the risk that remains is called
	the "residual risk". The key consideration is that the mitigating effort
	actually reduces the corporate impact and does not just move the risk to
	another similarly high quadrant. For example, changing the risk from
	frequent/catastrophic to frequent/critical still delivers an extremely
	high risk. If this occurs, then the mitigation effort has to be
	re-considered.
	
	The final deliverable should be a transformation risk assessment that
	could be structured as a worksheet, as shown in Figure 9-2 .
	
	[]
	
	Figure 9-2: Sample Risk Identification and Mitigation Assessment
	Worksheet
	
snippet togaf_adm-techniques_9_Risk_Management_9.7_Risk_Monitoring_and_Governance_Phase_G "9.7 Risk Monitoring and Governance (Phase G)"
	
	The residual risks have to be approved by the IT governance framework
	and potentially in corporate governance where business acceptance of the
	residual risks is required.
	
	Once the residual risks have been accepted, then the execution of the
	mitigating actions has to be carefully monitored to ensure that the
	enterprise is dealing with residual rather than initial risk. The risk
	identification and mitigation assessment worksheets are maintained as
	governance artifacts and are kept up-to-date in Phase G (Implementation
	Governance) where risk monitoring is conducted.
	
	Implementation governance can identify critical risks that are not being
	mitigated and might require another full or partial ADM cycle.
	
snippet togaf_adm-techniques_9_Risk_Management_9.8_Summary "9.8 Summary"
	
	Risk management is an integral part of Enterprise Architecture.
	Practitioners are encouraged to use their corporate risk management
	methodology or extend it using the guidance in this chapter. In the
	absence of a formal corporate methodology, architects can use the
	guidance in this chapter as a best practice.
	
snippet togaf_adm_9_E_Opportunities_Solutions_9_E_Opportunities_Solutions "9. Phase E: Opportunities & Solutions"
	
	  -- ----------------------------------------------------------------------------------------
	     Chapter Contents: 9.1 Objectives | 9.2 Inputs | 9.3 Steps | 9.4 Outputs | 9.5 Approach
	  -- ----------------------------------------------------------------------------------------
	
	This chapter describes the process of identifying delivery vehicles
	(projects, programs, or portfolios) that effectively deliver the Target
	Architecture identified in previous phases.
	
	[]
	
	Figure 9-1: Phase E: Opportunities & Solutions
	
snippet togaf_reference-models_government-reference-model_9_Growth_Housing_and_Environment "9 Growth, Housing, and Environment"
	
	Growth, Housing, and Environment corresponds to activities that ensure
	natural and urban environment responsibility, provision of core
	infrastructure, and protection of citizens’ standards of living and
	safety through the licensing and enforcement of regulation.
	
	[]
	
	Figure 9: Structure and Content Overview of the L1-L3 Elements of the
	Proposed Growth, Housing, and Environment Sector
	
snippet togaf_business-architecture_business-scenarios_9_Guidelines_on_Goals_and_Objectives "9 Guidelines on Goals and Objectives"
	
snippet togaf_togaf-leaders-guide_9_Organization_Model_for_the_EA_Team_9_Organization_Model_for_the_EA_Team "9 Organization Model for the EA Team"
	
	Keep in mind that this Guide discusses establishing and evolving an EA
	Capability. This Guide does not suggest that creation of such a team
	would guarantee a successful outcome from the EA Capability. This Guide
	does not explicitly discuss an organizational element that could be
	designated as an EA department.
	
	The required EA Capability must be supported by the correct
	organization, roles, and responsibilities. Of particular importance is
	the definition of boundaries between different EA practitioners and
	creating the organizational model that realizes the governance
	framework.
	
	Creating an EA Capability team requires the following questions to be
	answered:
	
	-   How will the EA Capability be organized?
	-   What is the existing enterprise capability and EA Capability, on
	    change planning and execution?
	-   What are the organizational gaps?
	-   What are the budget requirements?
	-   What are the key roles and responsibilities?
	
	This chapter is about considerations to create the team structure for
	the EA Capability. This should not be confused with Organization Model
	of the Enterprise (Section 4.2.3), which is all about capturing the
	existing structure of the enterprise as a whole. At this point, if an EA
	Capability organization does not exist at the enterprise, reset this
	thinking – it is now an organization of one – composed of the Leader.
	When initiated by an executive sponsor, it is a team of two. How to go
	about building the rest of the team? The rest of this chapter is about
	factors to consider while creating a new team:
	
	-   What skill set should the team providing the EA Capability possess?
	-   What skill sets can be shared?
	-   How to approach roles and responsibilities?
	-   Should sub-teams be created? If yes, how to align all teams?
	-   What should be the team size and which factors influence alignment?
	-   How do we measure success and promote the team?
	-   What is needed to build the team or the value delivered?
	
snippet togaf_guides_microservices-architecture_9_Phase_D_Technology_Architecture "9 Phase D: Technology Architecture"
	
	The decision to use microservices to provide some or all of the
	application functionality is a technology decision. It may be made in
	principle in the Architecture Vision phase. It is confirmed, its scope
	of application is decided, and its supporting Technology Architecture is
	specified in Phase D of the TOGAF ADM.
	
	As described in the TOGAF Standard, the objectives of this phase are to:
	
	-   Develop the Target Technology Architecture that enables the
	    Architecture Vision, target business, data, and application building
	    blocks to be delivered through technology components and technology
	    services, in a way that addresses the Statement of Architecture Work
	    and stakeholder concerns
	-   Identify candidate Architecture Roadmap components based upon gaps
	    between the Baseline and Target Technology Architectures
	
	The entire architecture need not be based on microservices. Support for
	microservices may only determine part of the overall Technology
	Architecture.
	
snippet togaf_adm-techniques_INDEX_9_Risk_Management "-   9. Risk Management"
	    -   9.1 Introduction
	    -   9.2 Risk Classification
	    -   9.3 Risk Identification
	    -   9.4 Initial Risk Assessment
	    -   9.5 Risk Mitigation and Residual Risk Assessment
	    -   9.6 Conduct Residual Risk Assessment
	    -   9.7 Risk Monitoring and Governance (Phase G)
	    -   9.8 Summary
snippet togaf_adm-techniques_9_Risk_Management_9_Risk_Management "9. Risk Management"
	
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	     Chapter Contents: 9.1 Introduction | 9.2 Risk Classification | 9.3 Risk Identification | 9.4 Initial Risk Assessment | 9.5 Risk Mitigation and Residual Risk Assessment | 9.6 Conduct Residual Risk Assessment | 9.7 Risk Monitoring and Governance (Phase G) | 9.8 Summary
	  -- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	This chapter describes risk management, which is a technique used to
	mitigate risk when implementing an architecture project.
	
snippet togaf_adm-practitioners_9_Walk_Through_Architecture_to_Support_Project_9_Walk_Through_Architecture_to_Support_Project "9 Walk Through Architecture to Support Project"
	
	In this context, the architecture is used to clarify the purpose and
	value of the project, identify requirements to address synergy and
	future dependency, assure compliance with architectural governance, and
	to support integration and alignment between projects.
	
	This chapter describes development of architecture for one project
	within a portfolio. The effort starts with identifying the context, the
	superior architecture that defines the visions, the scope, and the value
	the project should deliver. Without initial exploration about where the
	project sits inside of the EA Landscape, Architecture to Support Project
	is in a volatile state. It is the responsibility of the Practitioners
	working in the Architecture Project to gather hints of uncovered
	barriers to the project. The project lies inside the roadmap at some
	linear point in a sequence of work packages. There are many hints from
	the roadmap alone of where to see danger ahead and who to ask about any
	unknown warning signs.
	
	The purpose is to highlight the level of detail, time, and breadth
	during the ADM cycle phases for developing an EA as a focus of support
	to project architecture and governance. Most of the effort happens in
	the context of Phase F.
	
	Table 8 summarizes the activities and use of appropriate steps from the
	ADM phases. The content of the table is discussed in detail in the rest
	of this chapter.
	
	Table 8: Summary Table: ADM Phases and Architecture to Support Project
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Ascertain Dependencies            | Partial Capability Level Phase A  |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Verify recency                |
	|                                   | -   Validate stakeholders,        |
	|                                   |     outcomes, timeline            |
	|                                   | -   Define project context in EA  |
	|                                   |     Landscape                     |
	|                                   |                                   |
	|                                   | Partial Capability Level Phases   |
	|                                   | B, C, and D                       |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Assess the readiness of the   |
	|                                   |     Enterprise to absorb proposed |
	|                                   |     solution                      |
	|                                   | -   Assess the ability of the     |
	|                                   |     solution provider to deliver  |
	|                                   |     the solution                  |
	|                                   | -   Ascertain the scope of change |
	|                                   |     of the Implementation Project |
	|                                   |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Elaborate architecture        |
	|                                   |     definition                    |
	|                                   | -   Elaborate architecture        |
	|                                   |     specification                 |
	|                                   | -   Define approach to minimize   |
	|                                   |     dependencies                  |
	|                                   | -   Define risk controls          |
	+-----------------------------------+-----------------------------------+
	| Balance Options and Suppliers     | Partial Capability Level Phases   |
	|                                   | B, C, and D                       |
	|                                   |                                   |
	|                                   | For each capability:              |
	|                                   |                                   |
	|                                   | -   Define the solution boundary  |
	|                                   |     and conditions for            |
	|                                   |     integration                   |
	|                                   | -   Validate continuity in EA     |
	|                                   |     Landscape                     |
	|                                   | -   Create domain-specific work   |
	|                                   |     packages                      |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase E  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Identify candidate ABBs and   |
	|                                   |     SBBs                          |
	|                                   | -   Gather estimates              |
	|                                   | -   Develop project timelines     |
	|                                   | -   Trade-off impact with         |
	|                                   |     superior architecture         |
	|                                   | -   Update roadmap                |
	|                                   | -   Update risk matrix            |
	|                                   | -   Update work package and       |
	|                                   |     architecture specification    |
	+-----------------------------------+-----------------------------------+
	| Finalize Scope and Budget         | Partial Capability Level Phase F  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Finalize estimates and        |
	|                                   |     timeline                      |
	|                                   | -   Update Enterprise roadmap     |
	|                                   | -   Populate governance and       |
	|                                   |     approval plan                 |
	|                                   |                                   |
	|                                   | Partial Capability Level Phase G  |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Perform architecture review   |
	|                                   | -   Confirm stakeholder approval  |
	|                                   |                                   |
	|                                   | Level Phase A                     |
	|                                   |                                   |
	|                                   | For each project in the           |
	|                                   | portfolio:                        |
	|                                   |                                   |
	|                                   | -   Candidate proof-of-concept    |
	|                                   |     work packages (as needed)     |
	|                                   | -   Candidate Statement of Work   |
	|                                   | -   Finalize stakeholder list     |
	|                                   | -   Draft success measures        |
	+-----------------------------------+-----------------------------------+
	| Prepare for Solution Delivery     | Partial Program Level Phase F     |
	| Governance                        |                                   |
	|                                   | Program context:                  |
	|                                   |                                   |
	|                                   | -   Initiate completion of        |
	|                                   |     architecture work             |
	|                                   | -   Define target Solution        |
	|                                   |     Architectures                 |
	|                                   | -   Finalize effort and resource  |
	|                                   |     estimates                     |
	|                                   | -   Define variance measures in   |
	|                                   |     project-specific governance   |
	|                                   |     model                         |
	|                                   | -   Update risk matrix            |
	+-----------------------------------+-----------------------------------+
	
	For Architecture to Support Project, the critical focus points are:
	
	-   Scoping:
	
	—  What is the origin for the receipt of a Request for Architecture
	Work?
	
	—  Where will I have overlap? Who are my neighbors (EA Landscape)?
	
	—  Where do I look (EA Landscape: depth, breadth, detail)?
	
	—  Are my stakeholders/portfolio guidance still relevant (recency)?
	
	-   Domain-specific stakeholders’ concerns and architecture elaboration:
	
	—  Viewpoints/Stakeholder Map
	
	—  What do I need to know/solve for?
	
	—  Resolve impacts across architectures
	
	-   Finalizing the target transition architecture and its value:
	
	—  Creation of requirements and specifications
	
	—  Securing a Request for Architecture Work for the solution delivery
	architecture
	
snippet togaf_business-architecture_information-mapping_A.1_ArchiMate_Language_Example "A.1 ArchiMate Language Example"
	
	As described in Chapter 2, an information concept should be viewed as an
	intangible notion that pertains only to humans. A business object, on
	the other hand, represents a tangible entity. There are two
	relationships between information concepts and business objects:
	
	1.  “Makes explicit”: this relationship links data-oriented business
	    objects that make an information concept explicit; e.g., it links
	    information about customers to customer information records.
	2.  “Is about”: this relationship links information concepts that are
	    metadata about business objects to the corresponding business
	    object; e.g., it links information about customers to those
	    customers.
	
	According to the ArchiMate Specification,[3] “a business object could be
	used to represent information assets that are relevant from a business
	point of view”. The ArchiMate Specification further states that: “The
	ArchiMate language in general focuses on the modeling of types, not
	instances, since this is the most relevant at the Enterprise
	Architecture level of description. Hence a business object typically
	models an object type of which multiple instances may exist in
	operations.”
	
	Figure 4 presents an Information Map in the ArchiMate language using
	business object elements.
	
	[The Business Architect’s Toolbox: Information Mapping]
	
	Figure 4: Information Map using the ArchiMate Language[4]
	
	The ArchiMate language allows use of several relationships between
	business objects. Due to its formal semantics, ArchiMate Information
	Maps provide a more thorough insight into the structure of the
	information landscape.
	
	Next to these business objects, the “meaning” concept may come in handy.
	This represents “the knowledge or expertise present in, or the
	interpretation given to, a core element in a particular context”, which
	is useful if, for example, you want to represent different
	interpretations given to the same concepts or objects by different
	stakeholders.
	
	The ArchiMate modeling notation can also be used to represent the
	relationships between information concepts and other Business
	Architecture concepts; e.g., between business capabilities and
	information concepts.
	
	[]
	
	Figure 5: Information-to-Business Capability Cross-Mapping using the
	Archimate Language
	
snippet togaf_digital-technology-adoption_A.1_Explanation_of_the_Scale_Used "A.1 Explanation of the Scale Used"
	
	The questionnaire is to be answered using the Likert scale provided in
	Figure 8, where each term of the Likert scale has a distinct meaning
	which is explained through the illustration. For instance, the readiness
	of an enterprise would be marked “neutral” if the characteristic
	corresponding to a question is defined, validated, and understood
	without any commitment, dissemination, and evolution path.
	
	[]
	
	Figure 8: The Likert Scale
	
snippet togaf_master-data-management_A.1_Operational_Challenges "A.1 Operational Challenges"
	
	The intent of this section is to highlight the main challenges any
	organization will probably face to some extent when implementing a C-MDM
	capability. The six challenges listed below synthesize the observations
	made across several AXA entities. Despite the various business profile,
	organization, size, information system and legacy, geography, culture,
	data and IT teams in charge of C-MDM implementation projects, they all
	faced these to some extent.
	
	-   Challenge 1: Showing concrete value/benefits of C-MDM, first with a
	    specific business scope and then extended
	-   Challenge 2: Having a dedicated team in charge of ensuring customer
	    data quality, match-and-merge with appropriate governance and
	    stewardship
	-   Challenge 3: Agreeing on customer data ownership between
	    customer/company/distributors/brokers
	-   Challenge 4: Defining the list of kernel party data attributes to
	    master in the MDM
	-   Challenge 5: Implementing customer data quality management through
	    business processes review
	-   Challenge 6: Aligning multiple business, IT, and data roadmaps
	
snippet togaf_business-architecture_value-streams_A.1_Value_Chain "A.1 Value Chain"
	
	Value chains were introduced by Michael Porter in his book Competitive
	Advantage:^([2])
	
	“The value chain disaggregates a firm into its strategically-relevant
	activities in order to understand the behavior of costs and the existing
	potential sources of (competitive) differentiation.”
	
	With its primary focus on activity costs and margins, the value chain
	perspective is mainly concerned with understanding how economic value is
	created. However, value chains (an example of which is shown in Figure
	6) lack a structure from which to model, decompose, and analyze how a
	business combines its various capabilities to produce useful outcomes
	for stakeholders – which is the raison d'être of the value stream. In
	other words, value chains provide a macro-level view of how a business
	produces economic value (i.e., money), whereas value streams provide
	Business and Enterprise Architects the opportunity to decompose the
	end-to-end value producing system into sequences of core activities
	enabled by business capabilities.
	
	[]
	
	Figure 6: Michael Porter’s Value Chain
	
snippet togaf_digital-technology-adoption_A.2_Digital_Technology_Readiness_Assessment_Questionnaire "A.2 Digital Technology Readiness Assessment – Questionnaire"
	
snippet togaf_master-data-management_A.2_Operational_Diagnostic "A.2 Operational Diagnostic"
	
	The intent of this section is to share a list of ten questions that can
	be used to perform a high-level diagnostic of the level of
	implementation of a C-MDM capability in one organization.
	
	1.  Use-cases are managed and drive the C-MDM vision and roadmap.
	2.  C-MDM is identified as a key accelerator for consent and preferences
	    data management in a centralized way. In addition, C-MDM accelerates
	    customer requests management around data regulations (GDPR, local
	    regulations, transparency).
	3.  Strategic vision and roadmap of C-MDM is defined.
	4.  A C-MDM team is in place and responsible for operational data
	    management for customer data (composed of architects, data managers,
	    data stewards, and data owners).
	5.  Business data owners are identified for customer data and contribute
	    to C-MDM activities.
	6.  Data stewards for customer data are identified in the C-MDM team.
	7.  Data documentation around customer data is shared and maintained.
	8.  Data issues, including quality issues, around customer data are
	    captured and well managed.
	9.  The level of quality of customer data is measured and used to manage
	    the data quality improvement process.
	10. External data is a key axis of C-MDM improvement,
	
snippet togaf_business-architecture_information-mapping_A.2_Unified_Modeling_Language_UML "A.2 Unified Modeling Language (UML)"
	
	UML has its roots in object-oriented design. Its class diagrams are
	particularly useful for Information Mapping. The ArchiMate
	Specification’s representation of business objects and their
	relationships owes a lot to UML, basically being a less detailed model
	and omitting things like methods, attributes, and relationship
	cardinalities.
	
	[]
	
	Figure 6: Information Map in UML
	
	In UML, cardinalities also allow the architect to constrain the number
	of objects of a certain class that can be related to a single object of
	the other class. For example, in Figure 7, the cardinality (1..*) means
	that a customer must have at least one account, but that there is no
	upper limit on the number of accounts they can have; the cardinality
	(1..2) means that an account must be related to at least one, but no
	more than two customers.
	
	[]
	
	Figure 7: Relationship among Information Types
	
	The attributes are logical units of information related to each of the
	business entities in the diagram. While it isn’t always necessary to
	show the attributes for every information concept on every diagram, it
	is necessary to define all the attributes for all the business entities
	somewhere. Tables, spreadsheets, and databases are all useful ways to
	store the related data for each information concept, as previously shown
	in Table 1.
	
snippet togaf_business-architecture_value-streams_A.2_Value_Network "A.2 Value Network"
	
	Value networks[3] are focused on describing the social and technical
	resources that exist within and between businesses. As shown in Figure
	7, the nodes in a value network represent people, or roles, in an
	enterprise. The nodes are connected by interactions, which represent
	deliverables that might be tangible (products or cash) or intangible;
	e.g., increased knowledge.
	
	[]
	
	Figure 7: Value Network Map
	
	While value networks deal with the same sort of elements as value
	chains, the main difference is to do with intent: the primary purpose
	for creating a value network is to understand the complex web of
	relationships and areas of value exchange that exist within and between
	businesses.
	
snippet togaf_business-architecture_information-mapping_A.3_Entity_Relationship_Diagrams_ERDs "A.3 Entity Relationship Diagrams (ERDs)"
	
	ERDs have a long history in information systems design. They are
	typically used at three levels of design:
	
	1.  Conceptual, for describing business entities as above
	
	2.  Logical, for modeling the relationships and attributes of these
	    entities in more detail
	3.  Physical, to describe the mapping to database structures
	
	In the context of Business Architecture, conceptual and sometimes
	logical diagrams are the most useful, but will likely contain
	information types that have not been realized in business systems and
	databases. There is no restriction on key business information only
	including structures that have been, or even can be, reduced to
	structured data.
	
	[]
	
	Figure 8: Information Map in an Entity Relationship Diagram
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] See the example in the referenced TOGAF Series Guide: Value Streams,
	page 13.
	
	[2] Table 1 courtesy of the Business Architecture Guild^(®) (see the
	referenced BIZBOK^(®) Guide §2.5).
	
	[3] ArchiMate 3.1 Specification, Section 8.4.1: Business Object.
	
	[4] Figure adapted from the ArchiSurance Case Study, Version 2, Figure
	24: Information Structure View Showing Main Business Objects.
	
snippet togaf_business-architecture_value-streams_A.3_Lean_Value_Stream "A.3 Lean Value Stream"
	
	Lean value streams came out of the Lean Thinking movement,[4] which
	originated in the automotive industry in Japan (at Toyota, the process
	is known as “material and information flow mapping”). The core premise
	of Lean Thinking is to identify and eliminate waste from a firm’s
	processes, with the goal of only retaining those activities that create
	or increase value for the end-user. The lean value stream is a
	diagrammatic representation of the sequence of activities required to
	design, produce, and deliver a good or service to a customer (see Figure
	8). By adding performance metrics around each process (such as
	Processing Time, Response Time, and Percent Complete & Accurate), it
	becomes possible to use lean value streams to identify opportunities for
	waste reduction.
	
	[]
	
	Figure 8: Lean Value Stream
	
	Despite the similarity in name to the Business Architecture value
	stream, the lean value stream’s primary purpose is to document, analyze,
	and improve the flow of information or materials required to produce a
	product or service for a customer. It is not designed (nor is it well
	suited) to broader architectural purposes – namely, decomposing down to
	the critical activities (or stages) that progressively combine to
	produce value for a stakeholder, or cross-mapping those value stream
	stages to the enabling business capabilities.
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] See the referenced The Great Transition: Using the Seven Disciplines
	of Enterprise Engineering to Align People, Technology, and Strategy, by
	James Martin.
	
	[2] See the referenced Competitive Advantage, by Michael Porter.
	
	[3] See the referenced The Future of Knowledge, by Verna Allee.
	
	[4] See the referenced The Machine that Changed the World, by James
	Womack, Daniel Jones, and Daniel Roos.
	
snippet togaf_adm_DOCIX_a "a"
	  across
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.6 Resolve Impacts Across the Architecture Landscape
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.6 Resolve Impacts Across the Architecture Landscape
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.6 Resolve Impacts Across the Architecture Landscape
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.6 Resolve Impacts Across the Architecture Landscape
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	
	  activate
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.7 Activate the Process to Implement Change
	
	  activities
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	
	  activity model
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  adapting
	
	  -   1. Introduction
	      -   1.3 Adapting the ADM
	
	  ADM
	
	  -   1. Introduction
	  -   1.1 ADM Overview
	  -   1.1.1 The ADM, Enterprise Continuum, and Architecture Repository
	  -   1.1.2 The ADM and the Foundation Architecture
	  -   1.1.3 ADM and Supporting Guidelines and Techniques
	
	  -   1.3 Adapting the ADM
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.5 Management Frameworks
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	  -   13. ADM Architecture Requirements Management
	
	  ADM guidelines and techniques
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.3 ADM and Supporting Guidelines and Techniques
	
	  ADM, Requirements Management
	
	  -   13. ADM Architecture Requirements Management
	
	  alternatives
	
	  -   1. Introduction
	      -   1.6 Architecture Alternatives
	
	  amp
	
	  -   9. Phase E: Opportunities & Solutions
	  -   9.3 Steps
	      -   9.3.11 Create the Architecture Roadmap & Implementation and
	          Migration Plan
	
	  analysis
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.4 Perform Gap Analysis
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.4 Perform Gap Analysis
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.4 Perform Gap Analysis
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.4 Perform Gap Analysis
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.4 Provide Analysis for Architecture Change Management
	
	  any
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  application
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	  -   7.3 Steps
	      -   7.3.1 Select Reference Models, Viewpoints, and Tools
	          -   7.3.1.2 Identify Required Catalogs of Application Building
	              Blocks
	      -   7.3.2 Develop Baseline Application Architecture Description
	      -   7.3.3 Develop Target Application Architecture Description
	      -   7.3.8 Finalize the Application Architecture
	
	  Application Architecture
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  application building blocks
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	
	  applying
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.3 Applying Business Capabilities
	          -   4.5.4 Applying Value Streams
	          -   4.5.5 Applying the Organization Map
	          -   4.5.6 Applying Information Maps
	          -   4.5.7 Applying Modeling Techniques
	
	  approach
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	  -   5. Phase C: Information Systems Architectures
	      -   5.2 Approach
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.5 Approach
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	  -   9. Phase E: Opportunities & Solutions
	      -   9.5 Approach
	  -   10. Phase F: Migration Planning
	      -   10.5 Approach
	  -   11. Phase G: Implementation Governance
	      -   11.5 Approach
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	
	  approval
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.11 Develop Statement of Architecture Work; Secure
	              Approval
	
	  architectural
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.3 Architectural Inputs
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.3 Architectural Inputs
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.3 Architectural Inputs
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.3 Architectural Inputs
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.3 Architectural Inputs
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.3 Architectural Inputs
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.3 Architectural Inputs
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.3 Architectural Inputs
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.3 Architectural Inputs
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.3 Architectural Inputs
	
	  architecture
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.1 The ADM, Enterprise Continuum, and Architecture
	              Repository
	          -   1.1.2 The ADM and the Foundation Architecture
	      -   1.2 Architecture Development Cycle
	      -   1.4 Architecture Governance
	      -   1.5 Scoping the Architecture
	      -   1.5.4 Architecture Domains
	  -   1.6 Architecture Alternatives
	  -   1.7 Architecture Integration
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	          -   2.3.4 Identify and Establish Architecture Principles
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	      -   2.5 Approach
	          -   2.5.3 Requirements for Architecture Work
	  -   3. Phase A: Architecture Vision
	  -   3.3 Steps
	      -   3.3.1 Establish the Architecture Project
	      -   3.3.7 Confirm and Elaborate Architecture Principles, including
	          Business Principles
	      -   3.3.8 Develop Architecture Vision
	      -   3.3.9 Define the Target Architecture Value Propositions and
	          KPIs
	      -   3.3.11 Develop Statement of Architecture Work; Secure Approval
	  -   3.5 Approach
	      -   3.5.2 Creating the Architecture Vision
	
	  -   4. Phase B: Business Architecture
	  -   4.3 Steps
	      -   4.3.2 Develop Baseline Business Architecture Description
	      -   4.3.3 Develop Target Business Architecture Description
	      -   4.3.6 Resolve Impacts Across the Architecture Landscape
	      -   4.3.8 Finalize the Business Architecture
	      -   4.3.9 Create/Update the Architecture Definition Document
	  -   4.5 Approach
	      -   4.5.8 Architecture Repository
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   6.3 Steps
	      -   6.3.2 Develop Baseline Data Architecture Description
	      -   6.3.3 Develop Target Data Architecture Description
	      -   6.3.6 Resolve Impacts Across the Architecture Landscape
	      -   6.3.8 Finalize the Data Architecture
	      -   6.3.9 Create/Update the Architecture Definition Document
	  -   6.5 Approach
	      -   6.5.2 Key Considerations for Data Architecture
	      -   6.5.3 Architecture Repository
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	  -   7.3 Steps
	      -   7.3.2 Develop Baseline Application Architecture Description
	      -   7.3.3 Develop Target Application Architecture Description
	      -   7.3.6 Resolve Impacts Across the Architecture Landscape
	      -   7.3.8 Finalize the Application Architecture
	      -   7.3.9 Create/Update the Architecture Definition Document
	  -   7.5 Approach
	      -   7.5.1 Architecture Repository
	
	  -   8. Phase D: Technology Architecture
	  -   8.3 Steps
	      -   8.3.2 Develop Baseline Technology Architecture Description
	      -   8.3.3 Develop Target Technology Architecture Description
	      -   8.3.6 Resolve Impacts Across the Architecture Landscape
	      -   8.3.8 Finalize the Technology Architecture
	      -   8.3.9 Create/Update the Architecture Definition Document
	  -   8.5 Approach
	      -   8.5.2 Architecture Repository
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	  -   12. Phase H: Architecture Change Management
	  -   12.3 Steps
	      -   12.3.4 Provide Analysis for Architecture Change Management
	  -   12.5 Approach
	      -   12.5.2 Enterprise Architecture Change Management Process
	      -   12.5.3 Guidelines for Maintenance versus Architecture Redesign
	
	  -   13. ADM Architecture Requirements Management
	
	  Architecture Board
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	
	  architecture change management
	
	  -   12. Phase H: Architecture Change Management
	
	  Architecture Development Method
	
	  -   1. Introduction
	
	  architecture domain
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	      -   1.5.4 Architecture Domains
	
	  Architecture Governance
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.4 Principles
	  -   11. Phase G: Implementation Governance
	      -   11.5 Approach
	
	  architecture integration
	
	  -   1. Introduction
	      -   1.7 Architecture Integration
	
	  architecture models
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.1 Determine Overall Modeling Process
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.1 Determine Overall Modeling Process
	
	  architecture partition
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	
	  Architecture Principles
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.4 Principles
	
	  Architecture Report
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.9 Create/Update the Architecture Definition Document
	
	  Architecture Repository
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.8 Architecture Repository
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.3 Architecture Repository
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	          -   8.5.2 Architecture Repository
	
	  Architecture Vision
	
	  -   1. Introduction
	      -   1.3 Adapting the ADM
	  -   3. Phase A: Architecture Vision
	
	  architecture, scoping
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	
	  Architecture/Business
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	
	  architectures
	
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.10 Identify Transition Architectures
	
	  assess
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.5 Assess Readiness for Business Transformation
	
	  assessment
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  assign
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	
	  attributes
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.1 Determine/Confirm Key Corporate Change Attributes
	
	  audit information
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	
	  Availability/Delivery
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	
snippet togaf_introduction_C_Abbreviations_ABB "ABB"
	
	Architecture Building Block
	
snippet togaf_introduction_C_Abbreviations_ACMM "ACMM"
	
	Architecture Capability Maturity Model
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_Acronyms "Acronyms"
	
	ABB        Architecture Building Block
	
	ADM        Architecture Development Method
	
	ERM        Enterprise Risk Management
	
	ETSI       European Telecommunications Standards Institute
	
	ISM        Information Security Management
	
	ISMS       Information Security Management System
	
	O-ESA      Open Enterprise Security Architecture
	
	O-ISM3     Open Information Security Management Maturity Model
	
	O-RA       Risk Analysis Standard (Open FAIR)
	
	O-RT       Risk Taxonomy Standard (Open FAIR)
	
	PCI-DSS    Payment Card Industry Data Security Standard
	
	SBB        Solution Building Block
	
	------------------------------------------------------------------------
	
snippet togaf_guides_microservices-architecture_Acronyms_Abbreviations "Acronyms & Abbreviations"
	
	ABB        Architecture Building Block
	
	ABF        Atomic Business Function
	
	ADM        Architecture Development Method
	
	API        Application Program Interface
	
	DDD        Domain-Driven Design
	
	IoT        Internet of Things
	
	IT         Information Technology
	
	KPI        Key Performance Indicator
	
	MSA        Microservices Architecture
	
	O-AA       Open Agile Architecture
	
	OAS        OpenAPI Specifications
	
	OSIMM      The Open Group Service Integration Maturity Model
	
	SaaS       Software as a Service
	
	SGVM       SOA Governance Vitality Method
	
	SOA        Service-Oriented Architecture
	
	------------------------------------------------------------------------
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_Acronyms_and_Abbreviations "Acronyms and Abbreviations"
	
	ACMM       Architecture Capability Maturity Model
	
	ADM        Architecture Development Method
	
	AEA        Association of Enterprise Architects
	
	APQC       American Productivity and Quality Center
	
	BIAN       Banking Industry Architecture Network
	
	BPMN       Business Process Model and Notation
	
	CAPEX      Capital Expenditure
	
	CEB        Corporate Executive Board
	
	CEO        Chief Executive Officer
	
	CFO        Chief Financial Officer
	
	CISR       Center for Information Systems Research
	
	CMM        Capability Maturity Model
	
	COGS       Cost of Goods Sold
	
	DNDAF      The Department of National Defence Architecture Framework
	(Canada)
	
	DoC        Department of Commerce (US)
	
	DoDAF      Department of Defense Architecture Framework (US)
	
	EA         Enterprise Architecture
	
	EPCM       Engineering, Procurement, Construction, and Management
	
	ERM        Enterprise Risk Management
	
	FFLV       Functions, Flows (Processes), Layers, and Views
	
	GAAP       Generally Accepted Accounting Principles
	
	IoT        Internet of Things
	
	IRR        Internal Rate of Return
	
	ITGI       IT Governance Institute
	
	M&A    Merger and Acquisition
	
	NASCIO     National Association of State Chief Information Officers
	
	NPV        Net Present Value
	
	OPEX       Operating Expenditure
	
	PMI        Project Management Institute
	
	PMO        Project Management Office
	
	POS        Point of Sale
	
	ROI        Return On Investment
	
	SCOR       Supply Chain Operations Reference (model)
	
	SEI        Software Engineering Institute
	
	SFIA       Skills Framework for the Information Age
	
	SWOT       Strengths, Weaknesses, Opportunities, and Threats
	
	UML        Unified Modeling Language
	
	------------------------------------------------------------------------
	
snippet togaf_master-data-management_Acronyms_and_Abbreviations "Acronyms and Abbreviations"
	
	API        Application Program Interface
	
	B2B2C      Business to Business to Consumer
	
	BAU        Business-as-Usual
	
	BI         Business Intelligence
	
	C360       Customer 360 (view)
	
	CDO        Chief Data Officer
	
	CIO        Chief Information Officer
	
	CKO        Chief Knowledge Officer
	
	C-MDM      Customer Master Data Management
	
	CRM        Customer Relationship Management
	
	CTO        Chief Technology Officer
	
	ESB        Enterprise Service Bus
	
	ETL        Extract, Transform, Load
	
	FTC        Federal Trade Commission (US)
	
	GDPR       General Data Protection Regulation
	
	KPI        Key Performance Indicator
	
	NGO        Non-Governmental Organization
	
	PIPEDA     Personal Information Protection and Electronic Documents Act
	
	PoA        Point of Acquisition
	
	PoC        Point of Consumption
	
	SLA        Service-Level Agreement
	
	------------------------------------------------------------------------
	
snippet togaf_introduction_C_Abbreviations_ADM "ADM"
	
	Architecture Development Method
	
snippet togaf_info_domains_Agile_Methods "Agile Methods"
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document describes in general terms    |
	| Enabling Enterprise    | how the TOGAF Standard can be adapted to    |
	| Agility                | support an “Agile enterprise”. It is        |
	|                        | written to be applicable to any Agile       |
	|                        | delivery method that follows the commonly   |
	|                        | accepted Agile approach of iterative        |
	|                        | development through a series of sprints.    |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document describes how sprints can be  |
	| Applying the TOGAF ADM | applied in a number of scenarios:           |
	| using Agile Sprints    |                                             |
	|                        | -   Collaboratively apply Enterprise        |
	|                        |     Architecture and the TOGAF®             |
	|                        |     Architecture Development Method (ADM)   |
	|                        |     following an Agile approach             |
	|                        | -   Create an Enterprise Architecture tuned |
	|                        |     for use together with Agile practices   |
	|                        | -   Support and collaborate with Agile      |
	|                        |     teams for a given business need         |
	|                        | -   Enable Enterprise Architects to         |
	|                        |     leverage an Agile practice to assure    |
	|                        |     that the Agile delivery of a solution   |
	|                        |     is in alignment with strategic          |
	|                        |     objectives and takes into account the   |
	|                        |     existing landscape                      |
	+------------------------+---------------------------------------------+
	
snippet togaf_introduction_C_Abbreviations_ANSI "ANSI"
	
	American National Standards Institute
	
snippet togaf_introduction_C_Abbreviations_API "API"
	
	Application Platform Interface
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_Appendix_A_Partial_List_of_EA_Content_Frameworks "Appendix A: Partial List of EA Content Frameworks"
	
	Table 11 provides a list of alternative EA Content Frameworks. Specific
	mapping White Papers exist between the TOGAF Standard and BIAN, DoDAF,
	Frameworx, and SABSA (see Referenced Documents).
	
	Table 11: List of EA Content Frameworks
	
	  Framework      Framework Description
	  -------------- --------------------------------------------------------------------
	  AGATE          The France DGA Architecture Framework
	  BIAN           Banking Industry Architecture Network
	  Deloitte EAF   Deloitte Consulting Enterprise Architecture Framework
	  DNDAF          The Department of National Defence Architecture Framework (Canada)
	  DoDAF          The US Department of Defense Architecture Framework
	  FDIC-EAF       FDIC Enterprise Architecture Framework (US)
	  FEAF           Federal Enterprise Architecture Framework (US)
	  Frameworx      TM Forum
	  GEA            Government Enterprise Architecture – Queensland Government
	  MoDAF          The UK Ministry of Defense Architecture Framework
	  NAF            The NATO Architecture Framework
	  Navigate       Conexiam Enterprise Architecture Content Framework
	  NIST EA        NIST Enterprise Architecture framework (US)
	  NORA           Nederlandse Overheid Referentie Architectuur (The Netherlands)
	  OBASHI         The OBASHI Business & IT Methodology and Framework
	  OEAF           Oracle Enterprise Architecture Framework
	  PEAF           Pragmatic Enterprise Architecture Framework
	  PERA           Purdue Enterprise Reference Architecture Framework
	  SABSA          The SABSA Institute Enterprise Security Architecture
	  TEAF           Treasury Enterprise Architecture Framework (US)
	  UAF            United Architecture Framework (replacement for UPDM)
	  UPDM           United Profile for DoDAF and MoDAF
	  Zachman        Zachman Framework
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_A_Partial_List_of_Modeling_Approaches "Appendix A: Partial List of Modeling Approaches"
	
	Table 11 provides a list of modeling approaches. These examples are
	provided as a starting point for a Practitioner who needs to
	consistently describe some part of an Enterprise.
	
	The EA community is filled with involved discussions of the distinction
	between language, notation, model kind, and model type. Such
	fine-grained distinctions are normally not useful. What is useful is
	describing something consistently.
	
	These approaches may have a formal or informal metamodel, notation, or
	supporting method.
	
	Table 11: List of Useful Modeling Methods
	
	+-----------------------------------+-----------------------------------+
	| Reference Model &                 | Use                               |
	| Reference Architecture            |                                   |
	+===================================+===================================+
	| 4+1 architectural view            | Can be used in Architecture to    |
	| model^([37])                      | Support Solution Delivery. The    |
	|                                   | four views of the model are       |
	|                                   | logical, development, process,    |
	|                                   | physical view, and use-case.      |
	|                                   |                                   |
	|                                   | Provides a nice simplified list   |
	|                                   | of what you need to know and      |
	|                                   | describe.                         |
	+-----------------------------------+-----------------------------------+
	| The ArchiMate Standard            | Excellent fit for Architecture to |
	|                                   | Support Solution Delivery.        |
	|                                   |                                   |
	|                                   | Good fit for Architecture to      |
	|                                   | Support Project.                  |
	+-----------------------------------+-----------------------------------+
	| Business Model Canvas^([38])      | Use is entirely driven by the     |
	|                                   | scope of the value proposition.   |
	|                                   |                                   |
	|                                   | Commonly used for Architecture to |
	|                                   | Support Portfolio and             |
	|                                   | Architecture to Support Project.  |
	+-----------------------------------+-----------------------------------+
	| Business Motivation Model         | Simplified is useful for          |
	| (BMM)^([39])                      | Architecture to Support Project.  |
	|                                   |                                   |
	|                                   | Can be used for Architecture to   |
	|                                   | Support Portfolio BMCs.           |
	+-----------------------------------+-----------------------------------+
	| Business Process Model and        | Can be used for Architecture to   |
	| Notation (BPMN)^([40])            | Support Solution Delivery.        |
	|                                   |                                   |
	|                                   | Limited fit for analysis required |
	|                                   | in architecture.                  |
	+-----------------------------------+-----------------------------------+
	| Kaplan Strategy Map^([41])        | Good for representing final       |
	|                                   | strategy.                         |
	+-----------------------------------+-----------------------------------+
	| Organigraphic                     | Very useful in looking at a       |
	|                                   | governance model of an            |
	|                                   | Enterprise. Use is driven by the  |
	|                                   | scope being described.            |
	|                                   |                                   |
	|                                   | Commonly used for Architecture to |
	|                                   | Support Portfolio and             |
	|                                   | Architecture to Support Project.  |
	+-----------------------------------+-----------------------------------+
	| A3 Thinking^([42])                | Useful in summarizing             |
	|                                   | Architecture to Support Project.  |
	+-----------------------------------+-----------------------------------+
	| Unified Modeling Language         | Good fit for Architecture to      |
	| (UML)^([43])                      | Support Solution Delivery.        |
	|                                   |                                   |
	|                                   | In particular, useful in          |
	|                                   | providing a standard way to       |
	|                                   | visualize the design of a system. |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_business-architecture_information-mapping_Appendix_A_Representations_of_Information_Maps "Appendix A: Representations of Information Maps"
	
	This appendix includes examples of additional techniques for modeling
	information beyond those included in the main body of this Guide. It
	includes examples using the ArchiMate^(®) modeling language, Unified
	Modeling Language™ (UML^(®)) class diagrams, and Entity Relationship
	Diagrams (ERDs). The UML class diagrams and ERDs are used for more
	detailed analysis and design, and would normally be produced during ADM
	Phases C and D.
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_Appendix_B_Maturity_Models "Appendix B: Maturity Models"
	
	Note that most maturity models use the term “maturity” to measure the
	ability of an organization to control change of a capability or process;
	common usage associates maturity with quality of delivery. We recommend
	you are very clear on your usage and objective when referencing a
	maturity model.
	
	-   US Department of Commerce (DoC) has developed an IT Architecture
	    Capability Maturity Model (ACMM) to aid in conducting internal
	    assessments
	-   Software Engineering Institute (SEI) Capability Maturity Model
	    (CMM); refer to: http://cmmiinstitute.com/
	-   US Government’s Office of the CIO Maturity Models; refer to:
	    http://ocio.os.doc.gov/s/groups/public/@doc/@os/@ocio/@oitpp/documents/content/prod01_002340.pdf
	    and
	    http://ocio.os.doc.gov/ITPolicyandPrograms/Enterprise_Architecture/PROD01_004935
	-   National Association of State Chief Information Officers (NASCIO) EA
	    Maturity Model; refer to:
	    www.nascio.org/publications/documents/nascio-eamm.pdf
	-   Innovation Value Institute; refer to:
	    http://ivi.nuim.ie/understanding-it-cmf and
	    http://ivi.nuim.ie/service-management-capability-assessment
	-   US Government Office of Management and Budget’s Enterprise
	    Architecture Assessment Framework; refer to:
	    www.whitehouse.gov/omb/e-gov/eaaf/
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_B_Stakeholder_Concern_Matrix "Appendix B: Stakeholder/Concern Matrix"
	
	We recommend that a set of standardized classes of stakeholders,
	concerns, and associated viewpoints are maintained for each architecture
	purpose. This follows the advice of aligning the EA Capability with the
	questions that are expected to be answered.[44] This appendix provides a
	partial list of common stakeholders, concerns, and their alignment.
	These examples are provided as a starting point for a Practitioner who
	needs to address common questions.
	
	Table 12 shows the relationships between the stakeholder classes and
	concerns for a single architecture purpose.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_C_Sample_Viewpoint_Library "B.1     Common Stakeholder Classes"
	
	-   Senior Leaders are those with responsibility for management and
	    oversight
	
	This responsibility includes approving and realigning strategic
	initiatives, tracking a portfolio of projects, ensuring transformative
	benefits are realized, and meeting operational business goals.
	
	-   Program/Portfolio Managers are those with responsibility for
	    management and oversight of strategic initiatives
	
	This responsibility includes approving and realigning projects, tracking
	project progress, and ensuring project benefits are realized.
	
	-   Business Requirements Owners are those responsible for identifying
	    and expressing business requirements
	
	Typically, these stakeholders are responsible for some aspect of
	business operation.
	
	-   Implementers are those responsible for developing, integrating, and
	    deploying the solution
	-   Risk Owners are those interested in risk
	-   Business Partners are those who are engaged to provide services
	    sustaining a customer value proposition
	
	Note: The architecture may not be provided to business partners, but
	must be evaluated from their perspective.
	
	-   Customers are those who consume products and services
	
	Note: The architecture may not be provided to members, but must be
	evaluated from their perspective.
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_Appendix_C_Suggested_Reading "Appendix C: Suggested Reading"
	
	-   A Carver Policy Governance Guide, Ends and the Ownership, Volume
	    2, J. Carver, M. Carver, J-B Carver Board Governance Series
	-   Are you Sure you have a Strategy? D. Hambrick, J. Fredrickson, The
	    Academy of Management Executive; November 2001, 15, 4; ABI/INFORM
	    Global
	-   Beyond Financial Literacy: The Importance of Business Acumen
	    Training for Managers and Employees, Raymond Green, Paradigm
	    Learning, 2009; refer to:
	    www.paradigmlearning.com/documents/WP_Business%20Acumen.pdf
	-   Enterprise Architecture Planning: Developing a Blueprint for Data,
	    Applications, and Technology, Stephen H. Spewak, QED Publishing
	    Group, 1993.
	    A 2002 presentation by Spewak on Enterprise Architecture planning
	    can be found at:
	    http://apps.adcom.uci.edu/EnterpriseArch/PresentationsConferences/EAWorkshop12172002.ppt
	-   Enterprise Architecture Validation, Jaap Schekkerman, White Paper;
	    refer to:
	    www.serc.nl/lac/2003/papers/EnterpriseArchitectureValidationFullversion.pdf
	-   Enterprise Value: Governance of IT Investments – The Business Case,
	    Cuypers Ataya, IT Governance Institute (ITGI), 2006
	-   Having Trouble with your Strategy? Then Map It, Robert S. Kaplan,
	    David P. Norton, Harvard Business Review, September 2000; refer to:
	    harvardbusinessonline.hbsp.harvard.edu/b02/en/common/item_detail.jhtml?id=5165
	-   Information Technology and the Board of Directors, Richard Nolan,
	    Warren F. McFarlan, Harvard Business Review, October 2005
	-   Innovation: The Five Disciplines for Creating What Customers Want,
	    Curtis R. Carlson, William W. Wilmot, Crown Business, 2006
	-   IT Governance: How Top Performers Manage IT Decision Rights for
	    Superior Results, Peter Weill, Jeanne W. Ross, Harvard Business
	    School Press, 2004
	-   Key Concepts in IT Financial Management: Funding, Costing, Pricing,
	    and Chargeback, Gartner, April 2012
	-   Managing, Henry Mintzberg, Berrett-Koehler Publishers, 2011
	-   Out of the Box: Strategies for Achieving Profits Today and Growth
	    Tomorrow through Web Services, John Hagel III, Harvard Business
	    School Press, 2002
	-   Performance Dashboards: Measuring, Monitoring, and Managing your
	    Business, Wayne Eckerson, Wiley, 2005
	-   Practical Project Delivery, Mike Turner, Project Management Office
	    (PMO) webcast series; refer to:
	    www.brightwork.com/webcasts/pmo_series.htm
	-   Putting Leadership Back into Strategy, Cynthia Montgomery, Harvard
	    Business Review, January 2008
	-   Scenarios: The Art of Strategic Conversation, 2nd Edition, Kees van
	    der Heijden, Wiley, 2005
	-   Strategy Maps: Converting Intangible Assets into Tangible Outcomes,
	    Robert S. Kaplan, David P. Norton, Harvard Business School Press,
	    Boston, 2004
	-   Strategy Safari: A Guided Tour through the Wilds of Strategic
	    Management, H. Mintzberg, J. Lampel, B. Ahlstrand, 2005
	-   The Art of the Long View: Planning for the Future in an Uncertain
	    World, Peter Swartz, Currency Doubleday, 1996
	-   The Balanced Scorecard: Translating Strategy into Action, Robert S.
	    Kaplan, David P. Norton, Harvard Business School Press, Boston, 1996
	-   The Competitive Advantage: Creating and Sustaining Superior
	    Performance, M.E. Porter, NY, Free Press, 1985 (republished with a
	    new introduction, 1998); refer to: www.hbs.edu/faculty/product/193
	-   The Core Competencies, C.K. Prahalad, Allen Hammond, Stuart L. Hart;
	    refer to:
	    https://hbr.org/1990/05/the-core-competence-of-the-corporation/ar/1
	-   The Delta Model, Dean L. Wilde II, Arnoldo C. Hax; refer to:
	    http://sloanreview.mit.edu/article/the-delta-model-adaptive-management-for-a-changing-world
	-   The Fortune at the Bottom of the Pyramid, C.K. Prahalad, Stuart L.
	    Hart; refer to: www.strategy-business.com/article/11518
	-   The Future and How to Think About It, Performance and Innovation
	    Unit (PIU) Report, UK Government, 1999
	-   The Gandhian Engineering, R.A. Mashelkar; refer to:
	    www.worldacademy.org/files/Gandhian%20Engineering%20by%20RA%20
	    Mashelkar.pdf
	-   The Invisible World of Association, H. Mintzberg, R. Molz, E.
	    Raufflet, P. Sloan, C. Abdallah, R. Bercuvitz, C.H. Tzeng, Leader to
	    Leader, pp.37-45, 2005
	-   The Lean Startup: How Today’s Entrepreneurs use Continuous
	    Innovation to Create Radically Successful Businesses, Eric Ries,
	    p.103, Crown Publishing, 2014
	-   The Living Company, Arie De Geus; refer to:
	    https://hbr.org/1997/03/the-living-company
	-   The Science of Persuasion, Robert B. Cialdini, Scientific American
	    Mind, Vol. 14, Issue 1, January 1, 2004
	-   The Second Machine Age, Eric Brynjolfsson, Andrew McAfee; refer to:
	    http://secondmachineage.com
	-   The St. Gallen Business Model Navigator, Oliver Gassmann, Karolin
	    Frankenbergerm, Micheala Csik, University of St. Gallen, 2012
	-   The Strategy-Focused Organization: How Balanced Scorecard Companies
	    Thrive in the New Business Environment, Robert S. Kaplan, David P.
	    Norton, Harvard Business School Press, Boston, 2011
	-   The Structuring of Organizations, Henry Mintzberg, Prentice Hall,
	    January 1979; refer to:
	    www.mintzberg.org/books/structuring-organizations-synthesis-research
	-   Simon Wardley Blog; refer to:
	    http://blog.gardeviance.org/2015/09/somethings-are-different-some-remain.html
	-   World-Class EA: Business Reference Model, White Paper (W146),
	    published by The Open Group, May 2014; refer to:
	    www.opengroup.org/library/w146
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_D_Architecture_Contract_Template "B.2     Common Concern Classes"
	
	-   Agility: what is the ability of the architecture to adapt to future
	    unanticipated change?
	-   Efficiency: how does some aspect of the architecture contribute to
	    efficiency of operations?
	-   Differentiation: how does some aspect of the architecture address
	    enable differentiation?
	-   Value: what is the value of the architecture?
	-   Value Proposition: how does some aspect of the architecture address
	    a value proposition?
	-   Change Cost: what is the impact of a change to the architecture in
	    terms of cost of change?
	-   Change Impact: what is the impact, or scope, of a change to the
	    architecture?
	-   Alignment: to what extent is the architecture aligned with
	    priorities?
	-   Feasibility: what is the probability the architecture will be
	    realized and sustained?
	-   Dependability: how will the architecture consistently deliver value
	    and operate safely?
	-   Control: how will we protect assets in the architecture?
	-   Specification: what needs to be built?
	-   Security: will the architecture consistently address the risks and
	    opportunities embedded in operations?
	-   Confidence: what confidence can be placed in the target?
	-   Customer Intimacy: is the Enterprise delivering products and
	    services the customers want? What is the confidence that the new
	    product or service will be liked by them?
	-   Scalability: Can the architecture and the Enterprise handle the
	    range of demands and growth cycles?
	-   Business Continuity: Does the architecture provide the appropriate
	    level of continuity needs relative to the Enterprise’s needs?
	
	For each intersection, a viewpoint is created the identifies the
	necessary information and communication required to address the concern.
	(See Appendix C.)
	
	Table 12: Stakeholder Responsibility (Portfolio)
	
	[TABLE]
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_E_Another_ADM_Journey_Leader_s_Guide_Capability-Based_Planning_Journey "Appendix C: Sample Viewpoint Library"
	
	We recommend that a Viewpoint Library is maintained to identify the
	standard concerns, stakeholders, and the information required to address
	the question. The information is typically drawn from one or more
	models. How the view should be constructed is purpose-specific.
	
	Table 13 shows the relationship between the stakeholder classes and
	concerns:
	
	Table 13: Viewpoint Library (Portfolio)
	
	  Concern             Stakeholders   View Construction   Information Required
	  ------------------- -------------- ------------------- ----------------------
	  Agility                                                
	  Efficiency                                             
	  Value                                                  
	  Value Proposition                                      
	  Change Cost                                            
	  Change Impact                                          
	  Alignment                                              
	  Feasibility                                            
	  Dependability                                          
	  Control                                                
	  Specification                                          
	  Security                                               
	  Confidence                                             
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Appendix_F_Evolving_List_of_Domain_Architectures "Appendix D: Architecture Contract Template"
	
	This template is maintained to standardize communication from an
	architecture to a solution delivery team.
	
	Table 14 shows the relationship between the stakeholder classes and
	concerns.
	
	Table 14: Solution Delivery Notebook
	
	+-----------------------+-----------------------+-----------------------+
	| Section               | Part                  | Purpose               |
	+=======================+=======================+=======================+
	| Solution Summary      |                       | This section provides |
	|                       |                       | the summary of the    |
	|                       |                       | solution.             |
	|                       |                       |                       |
	|                       |                       | Central is:           |
	|                       |                       |                       |
	|                       |                       | -   What set of gaps  |
	|                       |                       |     in the            |
	|                       |                       |     architecture does |
	|                       |                       |     the solution      |
	|                       |                       |     address?          |
	|                       |                       | -   Who are the       |
	|                       |                       |     stakeholders,     |
	|                       |                       |     relevant inbound  |
	|                       |                       |     requirements, and |
	|                       |                       |     relevant          |
	|                       |                       |     specifications    |
	|                       |                       |     that address the  |
	|                       |                       |     requirements?     |
	|                       |                       | -   What are the      |
	|                       |                       |     risks, and the    |
	|                       |                       |     relevant controls |
	|                       |                       |     that address the  |
	|                       |                       |     risks?            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Solution Concept      | Describes the central |
	|                       | Diagram               | problem and how the   |
	|                       |                       | solution addresses    |
	|                       |                       | the problem.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Stakeholder Catalog   | Identifies key        |
	|                       |                       | stakeholders, their   |
	|                       |                       | requirements, and any |
	|                       |                       | associated            |
	|                       |                       | architecture          |
	|                       |                       | specifications that   |
	|                       |                       | constrain the design  |
	|                       |                       | and implementation.   |
	|                       |                       |                       |
	|                       |                       | This allows any       |
	|                       |                       | design and            |
	|                       |                       | implementation to be  |
	|                       |                       | tested against        |
	|                       |                       | stakeholder           |
	|                       |                       | requirements by       |
	|                       |                       | tracing the design    |
	|                       |                       | and implementation to |
	|                       |                       | the requirement       |
	|                       |                       | through the           |
	|                       |                       | architecture          |
	|                       |                       | specification.        |
	+-----------------------+-----------------------+-----------------------+
	|                       | Risk Catalog          | Identifies the risks  |
	|                       |                       | applicable to the     |
	|                       |                       | solution and the      |
	|                       |                       | mitigating controls.  |
	|                       |                       |                       |
	|                       |                       | This allows the       |
	|                       |                       | design and            |
	|                       |                       | implementation to be  |
	|                       |                       | tested against risk   |
	|                       |                       | though the mitigating |
	|                       |                       | control.              |
	+-----------------------+-----------------------+-----------------------+
	|                       | Gap Catalog           | Lists gaps that are   |
	|                       |                       | addressed by the work |
	|                       |                       | package.              |
	|                       |                       |                       |
	|                       |                       | This identifies what  |
	|                       |                       | is in scope of the    |
	|                       |                       | project and what is   |
	|                       |                       | not in scope. Keep in |
	|                       |                       | mind there will       |
	|                       |                       | routinely be          |
	|                       |                       | additional gaps that  |
	|                       |                       | are not addressed by  |
	|                       |                       | a project that will   |
	|                       |                       | need to be identified |
	|                       |                       | as such.              |
	+-----------------------+-----------------------+-----------------------+
	| Specification Summary |                       | This section provides |
	|                       |                       | the summary for       |
	|                       |                       | testing the design    |
	|                       |                       | and implementation    |
	|                       |                       | against the           |
	|                       |                       | architecture and      |
	|                       |                       | provides the basis of |
	|                       |                       | architecture          |
	|                       |                       | governance.           |
	|                       |                       |                       |
	|                       |                       | Specification         |
	|                       |                       | conformance will be   |
	|                       |                       | tested against:       |
	|                       |                       |                       |
	|                       |                       | Requ                  |
	|                       |                       | irement/specification |
	|                       |                       | pair                  |
	|                       |                       |                       |
	|                       |                       | Risk/control pair     |
	+-----------------------+-----------------------+-----------------------+
	|                       | Implementation        | Identifies the        |
	|                       | Strategy              | preferred approach to |
	|                       |                       | addressing the gaps   |
	|                       |                       | or work packages,     |
	|                       |                       | where a preferred     |
	|                       |                       | approach will improve |
	|                       |                       | value realization.    |
	+-----------------------+-----------------------+-----------------------+
	|                       | Architecture          | Identifies all the    |
	|                       | Specification         | specifications that   |
	|                       |                       | address a             |
	|                       |                       | requirement.          |
	|                       |                       |                       |
	|                       |                       | Specifications can be |
	|                       |                       | of many different     |
	|                       |                       | types.                |
	|                       |                       |                       |
	|                       |                       | Note that the         |
	|                       |                       | specification can     |
	|                       |                       | apply to anything in  |
	|                       |                       | the architecture, but |
	|                       |                       | always traces to a    |
	|                       |                       | requirement.          |
	+-----------------------+-----------------------+-----------------------+
	|                       | Control               | Identifies all the    |
	|                       |                       | controls that         |
	|                       |                       | mitigate a risk.      |
	|                       |                       |                       |
	|                       |                       | Note that the control |
	|                       |                       | can apply to anything |
	|                       |                       | in the architecture,  |
	|                       |                       | but always traces to  |
	|                       |                       | a risk.               |
	+-----------------------+-----------------------+-----------------------+
	| Architecture          |                       | This section provides |
	| Description Summary   |                       | the summary of the    |
	|                       |                       | Target Architecture   |
	|                       |                       | using appropriate     |
	|                       |                       | diagrams, catalogs,   |
	|                       |                       | and matrices.         |
	|                       |                       |                       |
	|                       |                       | This section is       |
	|                       |                       | provided for          |
	|                       |                       | reference.            |
	+-----------------------+-----------------------+-----------------------+
	|                       | Business Architecture |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Information           |                       |
	|                       | Architecture          |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Application           |                       |
	|                       | Architecture          |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Infrastructure        |                       |
	|                       | Architecture          |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Security Architecture |                       |
	+-----------------------+-----------------------+-----------------------+
	|                       | Other specialized     |                       |
	|                       | domain architecture   |                       |
	|                       | depending on the      |                       |
	|                       | specific organization |                       |
	|                       | needs                 |                       |
	+-----------------------+-----------------------+-----------------------+
	
snippet togaf_introduction_C_Abbreviations_ARTS "ARTS"
	
	Association for Retail Technology Standards
	
snippet togaf_business-architecture_value-streams_A_Comparison_of_Alternative_Value_Analysis_Techniques "A Comparison of Alternative Value Analysis Techniques"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_A_Enterprise_Architecture_Benefits "A: Enterprise Architecture Benefits"
	
	-   More effective and efficient business operations:
	
	    -   Lower business operation costs
	
	    -   More Agile organization
	
	    -   Business capabilities shared across the organization
	
	    -   Lower change management costs
	
	    -   More flexible workforce
	
	    -   Improved business productivity
	
	-   More effective and efficient digital enterprise and IT operations:
	
	    -   Extending effective reach of the enterprise through digital
	        capability
	
	    -   Bringing all components of the enterprise into a harmonized
	        environment
	
	    -   Lower software development, support, and maintenance costs
	
	    -   Increased portability of applications
	
	    -   Improved interoperability and easier system and network
	        management
	
	    -   Improved ability to address critical enterprise-wide issues like
	        security
	
	    -   Easier upgrade and exchange of system components
	
	-   Better return on existing investment, reduced risk for future
	    investment:
	
	    -   Simplify the business ability to deliver value through
	        technology
	
	    -   Maximum ROI in existing business and IT infrastructure
	
	    -   The flexibility to make, buy, or out-source business and IT
	        solutions
	
	    -   Reduced risk overall in new investments and their cost of
	        ownership
	
	-   Faster, simpler, and cheaper procurement:
	
	    -   Buying decisions are simpler, because the information governing
	        procurement is readily available in a coherent plan
	
	    -   The procurement process is faster – maximizing procurement speed
	        and flexibility without sacrificing architectural coherence
	
	    -   The ability to procure heterogeneous, multi-vendor open systems
	
	    -   The ability to secure more economic capabilities
	
snippet togaf_master-data-management_A_Operational_Challenges_Diagnostic "A Operational Challenges & Diagnostic"
	
snippet togaf_digital-technology-adoption_A_Ready-to-Use_Assessment_Questionnaire "A Ready-to-Use Assessment Questionnaire"
	
snippet togaf_introduction_INDEX_A_Referenced_Documents "-   A. Referenced Documents"
	    -   The Open Group TOGAF Series Guides
	    -   Other Publications from The Open Group
	    -   Other Referenced Documents
snippet togaf_introduction_A_Referenced_Documents_A_Referenced_Documents "A. Referenced Documents"
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.10_Data_Element "B.10 Data Element"
	
	A basic unit of information having a meaning and that may have
	subcategories (data items) of distinct units and values.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.11_Database "B.11 Database"
	
	A structured or organized collection of data entities, which is to be
	accessed by a computer.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.12_Database_Management_System "B.12 Database Management System"
	
	A computer application program that accesses or manipulates the
	database.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.13_End_User "B.13 End User"
	
	Person who ultimately uses the computer application or output.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.14_Enterprise_Resource_Planning_ERP_System "B.14 Enterprise Resource Planning (ERP) System"
	
	A complete suite of integrated applications that support the major
	business support functions of an organization; e.g., Financial
	(AP/AR/GL), HR, Payroll, Stock, Order Processing and Invoicing,
	Purchasing, Logistics, Manufacturing, etc.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.15_Hardware "B.15 Hardware"
	
	The physical infrastructure needed to run software; e.g., servers,
	workstations, network equipment, etc.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.16_Information_Domain "B.16 Information Domain"
	
	Grouping of information (or data entities) by a set of criteria such as
	security classification, ownership, location, etc. In the context of
	security, information domains are defined as a set of users, their
	information objects, and a security policy.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.17_Information_System_IS "B.17 Information System (IS)"
	
	The computer (or IT)-based portion of a business system.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.18_Interaction "B.18 Interaction"
	
	A relationship between architectural building blocks (i.e., services or
	components) that embodies communication or usage.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.19_Interaction_Model "B.19 Interaction Model"
	
	An architectural view, catalog, or matrix that shows a particular type
	of interaction. For example, a diagram showing application integration.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.1_Application_Software "B.1 Application Software"
	
	Software entities which have a specific business purpose.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_B.1_Common_Stakeholder_Classes "Appendix E: Another ADM Journey: Leader’s Guide Capability-Based Planning Journey"
	
	This Guide has focused on aligning use of the TOGAF Standard to support
	four primary purposes driving the development of an EA. The journeys
	described in Chapters 7, 8, 9, and 10 provide purpose-specific journeys.
	
	Practitioners will face many journeys through the ADM.
	
	Table 15 is from the TOGAF^(®) Leader’s Guide to Establishing and
	Evolving an EA Capability (see Referenced Documents). It outlines a
	customized journey through the TOGAF ADM that is optimized for an EA
	Capability; it is easily adapted to other capability-based planning
	Architecture Projects.
	
	As always, Practitioners identify the information they need to know to
	answer the question at hand. These answers either inform the next
	question and/or support a decision. Effective iteration of the ADM is
	not linear.
	
	Table 15: Mapping EA Capability Development with ADM Phases
	
	+-----------------------------------+-----------------------------------+
	| Topic                             | Mapping to TOGAF ADM Phase        |
	+===================================+===================================+
	| Enterprise Context and EA Context | Partial Strategic Level Phase B   |
	|                                   |                                   |
	|                                   | Enterprise context:               |
	|                                   |                                   |
	|                                   | -   Goals, objectives,            |
	|                                   |     initiatives, competitive, and |
	|                                   |     tactic analysis               |
	|                                   | -   Operating model (partners,    |
	|                                   |     suppliers)                    |
	|                                   | -   Explore what-if scenarios and |
	|                                   |     scorecards                    |
	|                                   |                                   |
	|                                   | EA context specific for the EA    |
	|                                   | Capability:                       |
	|                                   |                                   |
	|                                   | -   Goals                         |
	+-----------------------------------+-----------------------------------+
	| Business Objectives for the EA    | Capability Level Phase A          |
	| Capability                        |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Provide initial goals and     |
	|                                   |     objectives                    |
	|                                   | -   Select a reference EA         |
	|                                   |     Capability and maturity model |
	|                                   | -   Candidate EA Capability       |
	|                                   | -   Candidate operating model     |
	|                                   | -   EA Capability gap and         |
	|                                   |     priority roadmap              |
	+-----------------------------------+-----------------------------------+
	| Architecture Governance           | Partial Segment/Capability Level  |
	|                                   | Phase B                           |
	|                                   |                                   |
	|                                   | For the Enterprise:               |
	|                                   |                                   |
	|                                   | -   Enterprise Risk Management    |
	|                                   |     Model                         |
	|                                   | -   Governance Model              |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Risk Management Model         |
	|                                   | -   Governance Model              |
	|                                   | -   Extend candidate operating    |
	|                                   |     model to include EA           |
	|                                   |     governance                    |
	|                                   | -   Initial Architecture          |
	|                                   |     Partition Model               |
	|                                   | -   Trace to EA Capability goals  |
	+-----------------------------------+-----------------------------------+
	| Alignment with Other Frameworks   | Partial Capability Level Phase B  |
	|                                   | & Partial Phase C (Data)          |
	|                                   |                                   |
	|                                   | For the Enterprise:               |
	|                                   |                                   |
	|                                   | -   Reference models for key      |
	|                                   |     frameworks                    |
	|                                   | -   Capability assessment of key  |
	|                                   |     frameworks                    |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Framework touch-points        |
	|                                   | -   Extend candidate operating    |
	|                                   |     model to include other        |
	|                                   |     frameworks                    |
	|                                   | -   Extend EA governance and EA   |
	|                                   |     risk management               |
	|                                   | -   Initial EA Content Framework  |
	|                                   |     aligned to other frameworks   |
	|                                   |     and EA governance             |
	|                                   | -   Candidate architecture        |
	|                                   |     partition model               |
	|                                   | -   Trace to EA Capability goals  |
	|                                   | -   EA Capability and key         |
	|                                   |     framework gap and priority    |
	|                                   |     roadmap                       |
	+-----------------------------------+-----------------------------------+
	| Customization of Architecture     | Capability Level Phase C (Data)   |
	| Contents and Metamodel            |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   EA Content Framework          |
	|                                   | -   EA Content Metamodel          |
	|                                   | -   Viewpoint Library             |
	|                                   | -   Architecture Repository Model |
	|                                   | -   Trace to EA Capability goals  |
	|                                   | -   Initial EA Content Framework  |
	|                                   |     and Architecture Repository   |
	|                                   |     gap                           |
	+-----------------------------------+-----------------------------------+
	| Organization Model for the EA     | Partial Capability Level Phase B  |
	| Team                              |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   EA organizational model       |
	|                                   | -   Select reference EA skills    |
	|                                   |     framework                     |
	|                                   | -   Initial alignment with        |
	|                                   |     Enterprise job titles and     |
	|                                   |     roles                         |
	|                                   | -   Initial accountability matrix |
	|                                   |     for EA Content Framework and  |
	|                                   |     initial Architecture          |
	|                                   |     Repository                    |
	|                                   | -   Organizational gap and        |
	|                                   |     priority roadmap              |
	+-----------------------------------+-----------------------------------+
	| Process Model                     | Partial Capability Level Phase B  |
	|                                   |                                   |
	|                                   | Capability Level Phase C (App)    |
	|                                   | and Capability Level Phase D      |
	|                                   |                                   |
	|                                   | For the Enterprise:               |
	|                                   |                                   |
	|                                   | -   Process model highlighting    |
	|                                   |     touch-points between EA       |
	|                                   |     Capability and Enterprise     |
	|                                   |     processes the EA Capability   |
	|                                   |     supports^([45])               |
	|                                   | -   Performance matrix for key    |
	|                                   |     processes and organization    |
	|                                   | -   Accountability matrix for EA  |
	|                                   |     Content Framework and         |
	|                                   |     organization                  |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Process model                 |
	|                                   | -   Architecture Repository       |
	|                                   |     application model             |
	|                                   | -   Matrix for EA Content         |
	|                                   |     Framework and Architecture    |
	|                                   |     Repository Applications       |
	|                                   |     Architecture                  |
	|                                   | -   Process and Architecture      |
	|                                   |     Repository gap and priority   |
	|                                   |     roadmap                       |
	+-----------------------------------+-----------------------------------+
	| Create the EA Capability          | Capability Level Phase E          |
	|                                   |                                   |
	|                                   | Create a roadmap highlighting     |
	|                                   | development of the EA Capability  |
	|                                   | by changes in the:                |
	|                                   |                                   |
	|                                   | -   Organizational model          |
	|                                   | -   Process model                 |
	|                                   | -   EA Content Framework          |
	|                                   | -   Architecture Repository       |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Trace roadmap to EA           |
	|                                   |     Capability goals              |
	+-----------------------------------+-----------------------------------+
	| Establishing and Evolving the EA  | Capability Level Phase F and      |
	| Capability                        | Capability Level Phase G          |
	|                                   |                                   |
	|                                   | For the Enterprise:               |
	|                                   |                                   |
	|                                   | -   Transition the EA Capability  |
	|                                   |     Roadmap to an Implementation  |
	|                                   |     & Migration Plan              |
	|                                   |                                   |
	|                                   | For the EA Capability:            |
	|                                   |                                   |
	|                                   | -   Execute the Implementation &  |
	|                                   |     Migration Plan to build the   |
	|                                   |     EA Capability the Enterprise  |
	|                                   |     desires                       |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.20_Interface "B.20 Interface"
	
	Interconnection and inter-relationships between, for example, people,
	systems, devices, applications, or the user and an application or
	device.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.21_Key_Performance_Indicator_KPI "B.21 Key Performance Indicator (KPI)"
	
	A way of quantifying the performance of the business or project.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.22_Lifecycle "B.22 Lifecycle"
	
	The period of time that begins when a system is conceived and ends when
	the system is no longer available for use.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.23_Managing_Successful_Programs_MSP "B.23 Managing Successful Programs (MSP)"
	
	A best practice methodology for program management, developed by the UK
	Office of Government Commerce (OGC).
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.24_Matrix "B.24 Matrix"
	
	A format for showing the relationship between two (or more)
	architectural elements in a grid format.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.25_Metaview "B.25 Metaview"
	
	A pattern or template of the view, from which to develop individual
	views. Establishes the purposes and audience for a view, the ways in
	which the view is documented (e.g., for visual modeling), and the ways
	in which it is used (e.g., for analysis).
	
	See also 4.21 Architecture Viewpoint in 4. Definitions .
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.26_Open_System "B.26 Open System"
	
	A system that implements sufficient open specifications for interfaces,
	services, and supporting formats to enable properly engineered
	application software:
	
	-   To be ported with minimal changes across a wide range of systems
	-   To interoperate with other applications on local and remote systems
	-   To interact with users in a style that facilitates user portability
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.27_Operational_Governance "B.27 Operational Governance"
	
	The operational performance of systems against contracted performance
	levels, the definition of operational performance levels, and the
	implementation of systems that ensure effective operation of systems.
	
	See also 4.48 Governance in 4. Definitions .
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.28_Packaged_Services "B.28 Packaged Services"
	
	Services that are acquired from the market from a Commercial
	Off-The-Shelf (COTS) vendor, rather than being constructed via code
	build.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.29_Portability "B.29 Portability"
	
	1.  The ease with which a system, component, data, or user can be
	    transferred from one hardware or software environment to another.
	2.  A quality metric that can be used to measure the relative effort to
	    transport the software for use in another environment or to convert
	    software for use in another operating environment, hardware
	    configuration, or software system environment.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.2_Availability "B.2 Availability"
	
	In the context of IT systems, the probability that system functional
	capabilities are ready for use by a user at any time, where all time is
	considered, including operations, repair, administration, and logistic
	time. Availability is further defined by system category for both
	routine and priority operations.
	
snippet togaf_adm-practitioners_15_Architecture_Governance_B.2_Common_Concern_Classes "Appendix F: Evolving List of Domain Architectures"
	
	As the ecosystem in which an Enterprise operates and information
	technology evolves, specialty domain architectures will evolve. Table 16
	documents a partial list of domain architectures and a short note about
	the domain. The list or the note about the domain should not be
	considered authoritative or comprehensive.
	
	Table 16: Partial List of Domain Architectures
	
	  Domain Architecture                                                         Short Note about the Domain Architecture
	  ---------------------------------- ---------------------------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Business Architecture                                                       Focuses on business motivations and business operations, linking customers, products, services, finances, suppliers, and partners. The linkages, relationships, and operational aspects are elaborated using the Enterprise’s goals, objectives, strategies, business processes, and capabilities along with its rules and controls.
	  Security Architecture                                                       An approach that clearly addresses the necessities and potential risks involved in a certain scenario or environment. It also specifies when and where to apply controls to eliminate or mitigate the barriers to attain the objectives, including sustainability and continuity of business.
	  Service Architecture                                                        An approach to describe the purpose and method of interaction to get an outcome for the buyer/user. Includes clear articulation of the service availability, location, access control, response expectations, and usage methods.
	                                     Human Machine Interaction Architecture   An approach to study and optimize the effort and understanding required by humans to work with machines and applications.
	  Information Systems Architecture                                            This is a logical grouping describing processes that are automated. The description includes information accessed and produced, infrastructure used to host applications that automates the processes, communicates across applications, or stores information. This is composed of all information, data, application, infrastructure, communications, and integration architectures.
	                                     Information Architecture                 A structural design and approach to help users (humans and machines) understand where data (text, audio, video, binaries) is, how to find it, what to expect, and how to use it to improve quality of decisions.
	                                     Data Architecture                        A description of policies, rules, or standards that govern which data is collected, how it is stored, arranged, integrated, and put to use. Organization of data is normally expressed in models.
	                                     Application Architecture                 Describes the behavior of a solution (automated or manual) applied to solve a business problem, how the solution interacts with other such solutions, and its users. It also describes how the solutions are organized, including its structural and behavioral elements.
	                                     Infrastructure Architecture              A description of elements without which core business operations cannot take place. In generic terms, includes buildings and space for parking, power supply, heating, ventilation and air conditioning systems, dining area and restrooms (in other words facilities). In the information technology context, covers bare metal computing devices like servers, routers, switches, and disks.
	                                     Communications Architecture              A network of people and machines that connects separate components of an organization. The primary focus of this architecture is to enable flow of information across the organization and rest of the world. Normally includes telephony, video conferencing, and automated response systems.
	                                     Integration Architecture                 A description of tools and techniques applied to enable applications to interact with each other using appropriate communications and infrastructure architecture. Its focus is on setting rules of engagement between applications including protocols and method, compliant with risk and security architecture.
	
	------------------------------------------------------------------------
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.30_Portfolio "B.30 Portfolio"
	
	A collection of programs, projects, and/or operations managed as a group
	to achieve strategic objectives. For example, project portfolio,
	application portfolio, technology portfolio, or service portfolio.
	
	Note:
	    Portfolio management is the act of managing portfolios.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.31_PRINCE2 "B.31 PRINCE2"
	
	An acronym for PRojects IN Controlled Environments, which is a standard
	project management method.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.32_Program "B.32 Program"
	
	A co-ordinated set of change projects that deliver business benefit to
	the organization.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.33_Project "B.33 Project"
	
	A single change project which delivers business benefit to the
	organization.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.34_Risk_Management "B.34 Risk Management"
	
	The management of risks and issues that may threaten the success of the
	Enterprise Architecture practice and its ability to meet its vision,
	goals, and objectives, and, importantly, its service provision.
	
	Note:
	    Risk management is described in the TOGAF Standard — Architecture
	    Content.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.35_Scalability "B.35 Scalability"
	
	The ability to use the same application software on many different
	classes of hardware/software platforms from PCs to super-computers
	(extends the portability concept). The capability to grow to accommodate
	increased work loads.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.36_Security "B.36 Security"
	
	Services which protect data, ensuring its confidentiality, availability,
	and integrity.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.37_Server "B.37 Server"
	
	An application component which responds to requests from a client.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.38_Service_Quality "B.38 Service Quality"
	
	A preset configuration of non-functional attributes that may be assigned
	to a service or service contract.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.39_SMART "B.39 SMART"
	
	An acronym for Specific, Measurable, Actionable, Realistic, and
	Timebound, which is an approach to ensure that targets and objectives
	are set in a way that can be achieved and measured.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.3_Business_System "B.3 Business System"
	
	Hardware, software, policy statements, processes, activities, standards,
	and people which together implement a business capability.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.40_Supplier_Management "B.40 Supplier Management"
	
	The management of suppliers of products and services to the Enterprise
	Architecture practice in concert with larger corporate procurement
	activities.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.41_System "B.41 System"
	
	A combination of interacting elements organized to achieve one or more
	stated purposes. (Source: ISO/IEC/IEEE 15288:2015)
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.42_Time_Period "B.42 Time Period"
	
	The timeframe over which the potential impact is to be measured.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.43_Use-Case "B.43 Use-Case"
	
	A view of organization, application, or product functionality that
	illustrates capabilities in context with the user of that capability.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.44_User "B.44 User"
	
	1.  Any person, organization, or functional unit that uses the services
	    of an information processing system.
	2.  In a conceptual schema language, any person or any thing that may
	    issue or receive commands and messages to or from the information
	    system.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.4_Catalog "B.4 Catalog"
	
	A structured list of architectural outputs of a similar kind, used for
	reference. For example, a technology standards catalog or an application
	portfolio.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.5_Client "B.5 Client"
	
	An application component which requests services from a server.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.6_COBIT "B.6 COBIT"
	
	An acronym for Control OBjectives for Information and related
	Technology, created by the Information Systems Audit and Control
	Association (ISACA) and the IT Governance Institute (ITGI), which
	provides a set of recommended best practices for the
	governance/management of information systems and technology.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.7_Configuration_Management "B.7 Configuration Management"
	
	A discipline applying technical and administrative direction and
	surveillance to:
	
	-   Identify and document the functional and physical characteristics of
	    a configuration item
	-   Control changes to those characteristics
	-   Record and report changes to processing and implementation status
	
	Also, the management of the configuration of Enterprise Architecture
	practice (intellectual property) assets and baselines and the control of
	change over of those assets.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.8_CxO "B.8 CxO"
	
	The chief officer within a particular function of the business; e.g.,
	Chief Executive Officer, Chief Financial Officer, Chief Information
	Officer, Chief Technology Officer.
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B.9_Data_Dictionary "B.9 Data Dictionary"
	
	A specialized type of database containing metadata; a repository of
	information describing the characteristics of data used to design,
	monitor, document, protect, and control data in information systems and
	databases; an application system supporting the definition and
	management of database metadata.
	
snippet togaf_introduction_DOCIX_b "  b"
	
	  -   B. Glossary of Supplementary Definitions
	
	  b.1
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.1 Application Software
	
	  b.10
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.10 Data Element
	
	  b.11
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.11 Database
	
	  b.12
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.12 Database Management System
	
	  b.13
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.13 End User
	
	  b.14
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  b.15
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.15 Hardware
	
	  b.16
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.16 Information Domain
	
	  b.17
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.17 Information System (IS)
	
	  b.18
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.18 Interaction
	
	  b.19
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.19 Interaction Model
	
	  b.2
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.2 Availability
	
	  b.20
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.20 Interface
	
	  b.21
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
	  b.22
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.22 Lifecycle
	
	  b.23
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	
	  b.24
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.24 Matrix
	
	  b.25
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.25 Metaview
	
	  b.26
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.26 Open System
	
	  b.27
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.27 Operational Governance
	
	  b.28
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.28 Packaged Services
	
	  b.29
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.29 Portability
	
	  b.3
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.3 Business System
	
	  b.30
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.30 Portfolio
	
	  b.31
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.31 PRINCE2
	
	  b.32
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.32 Program
	
	  b.33
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.33 Project
	
	  b.34
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.34 Risk Management
	
	  b.35
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.35 Scalability
	
	  b.36
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.36 Security
	
	  b.37
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.37 Server
	
	  b.38
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.38 Service Quality
	
	  b.39
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.39 SMART
	
	  b.4
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.4 Catalog
	
	  b.40
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.40 Supplier Management
	
	  b.41
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.41 System
	
	  b.42
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.42 Time Period
	
	  b.43
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.43 Use-Case
	
	  b.44
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.44 User
	
	  b.5
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.5 Client
	
	  b.6
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.6 COBIT
	
	  b.7
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.7 Configuration Management
	
	  b.8
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.8 CxO
	
	  b.9
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.9 Data Dictionary
	
	  baseline
	
	  -   4. Definitions
	      -   4.24 Baseline
	
	  be
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   When should Enterprise Architecture be done?
	
	  benefit
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What are the benefits of an Enterprise Architecture?
	          -   Who would benefit from using the TOGAF Standard?
	
	  block
	
	  -   3. Core Concepts
	      -   3.6 Deliverables, Artifacts, and Building Blocks
	  -   4. Definitions
	      -   4.9 Architecture Building Block (ABB)
	      -   4.26 Building Block
	      -   4.73 Solution Building Block (SBB)
	
	  boundaryless
	
	  -   4. Definitions
	      -   4.25 Boundaryless Information FlowTM
	
	  Boundaryless Information Flow
	
	  -   4. Definitions
	      -   4.25 Boundaryless Information FlowTM
	
	  building
	
	  -   3. Core Concepts
	      -   3.6 Deliverables, Artifacts, and Building Blocks
	  -   4. Definitions
	      -   4.9 Architecture Building Block (ABB)
	      -   4.26 Building Block
	      -   4.73 Solution Building Block (SBB)
	
	  building block
	
	  -   4. Definitions
	      -   4.26 Building Block
	
	  business
	
	  -   4. Definitions
	      -   4.27 Business Architecture
	      -   4.28 Business Capability
	      -   4.29 Business Function
	      -   4.30 Business Governance
	      -   4.31 Business Model
	      -   4.32 Business Service
	  -   B. Glossary of Supplementary Definitions
	      -   B.3 Business System
	
	  Business Architecture
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	  -   4. Definitions
	      -   4.27 Business Architecture
	
	  business capability
	
	  -   4. Definitions
	      -   4.28 Business Capability
	
	  business function
	
	  -   4. Definitions
	      -   4.29 Business Function
	
	  business governance
	
	  -   4. Definitions
	      -   4.30 Business Governance
	
	  business model
	
	  -   4. Definitions
	      -   4.31 Business Model
	
	  business service
	
	  -   4. Definitions
	      -   4.32 Business Service
	
	  business system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.3 Business System
	
snippet togaf_adm-techniques_DOCIX_background "  background"
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.1 Background
	
	  benefit
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 2: Maximize Benefit to the Enterprise
	
	  BTEP
	
	  -   8. Business Transformation Readiness Assessment
	  -   8.1 Introduction
	      -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  BTEP, Readiness Rating Scheme
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.4 Assess Readiness Factors
	          -   8.4.2 Readiness Factor Rating
	
	  business
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	          -   Principle 3: Information Management is Everybody's
	              Business
	          -   Principle 4: Business Continuity
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.4 Patterns and Business Scenarios
	  -   6. Migration Planning Techniques
	      -   6.5 Business Value Assessment Technique
	  -   8. Business Transformation Readiness Assessment
	  -   8.1 Introduction
	      -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  Business Continuity Plan
	
	  -   9. Risk Management
	      -   9.5 Risk Mitigation and Residual Risk Assessment
	
	  business principles, examples
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	
	  Business Transformation Readiness Assessment
	
	  -   8. Business Transformation Readiness Assessment
	
snippet togaf_applying-the-adm_DOCIX_baseline_first "  baseline first"
	
	  -   2. Applying Iteration to the ADM
	      -   2.4 Approaches to Architecture Development
	
	  between
	
	  -   2. Applying Iteration to the ADM
	      -   2.5 Iteration Considerations
	          -   2.5.1 Iteration between ADM Cycles
	
	  breadth
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
snippet togaf_architecture-content_DOCIX_basic "  basic"
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	
	  benefits
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	              -   Benefits Diagram
	
	  Benefits diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	              -   Benefits Diagram
	
	  block
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.1 Architecture Building Blocks
	          -   4.2.19 Solution Building Blocks
	  -   5. Building Blocks
	  -   5.2 Introduction to Building Blocks
	  -   5.2.3 Architecture Building Blocks
	  -   5.2.4 Solution Building Blocks
	
	  -   5.3 Building Blocks and the ADM
	  -   5.3.1 Basic Principles
	      -   5.3.1.1 Building Blocks in Architecture Design
	      -   5.3.1.2 Building Block Design
	  -   5.3.2 Building Block Specification Process in the ADM
	
	  board
	
	  -   7. Architecture Repository
	      -   7.9 External Repositories
	          -   7.9.3 Architecture Board Approvals
	
	  building
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.1 Architecture Building Blocks
	          -   4.2.19 Solution Building Blocks
	  -   5. Building Blocks
	  -   5.2 Introduction to Building Blocks
	  -   5.2.3 Architecture Building Blocks
	  -   5.2.4 Solution Building Blocks
	
	  -   5.3 Building Blocks and the ADM
	  -   5.3.1 Basic Principles
	      -   5.3.1.1 Building Blocks in Architecture Design
	      -   5.3.1.2 Building Block Design
	  -   5.3.2 Building Block Specification Process in the ADM
	
	  building blocks
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	  -   5. Building Blocks
	
	  building blocks, characteristics
	
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.2 Generic Characteristics
	
	  building blocks, design
	
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	              -   5.3.1.2 Building Block Design
	
	  business
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Model Diagram
	              -   Business Capability Map
	          -   3.6.3 Phase B: Business Architecture
	          -   Business Service/Function Catalog
	          -   Business Capabilities Catalog
	          -   Business Glossary Catalog
	          -   Business Interaction Matrix
	          -   Business Footprint Diagram
	          -   Business Service/Information Diagram
	          -   Business Use-Case Diagram
	          -   Business Event Diagram
	          -   Business Capability Map
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
	  Business Capabilities catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Capabilities Catalog
	
	  Business Capability map
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Capability Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Business Capability Map
	
	  business drivers
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
	  Business Event diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Event Diagram
	
	  Business Footprint diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Footprint Diagram
	
	  Business Glossary catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Glossary Catalog
	
	  business goals
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
	  Business Interaction matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Interaction Matrix
	
	  Business Model diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Model Diagram
	
	  business principles
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
	  business scenarios
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.8 Architecture Vision
	
	  Business Service/Function catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Service/Function Catalog
	
	  Business Service/Information diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Service/Information Diagram
	
	  Business Standards
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  Business Use-Case diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Use-Case Diagram
	
	  by
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	
snippet togaf_introduction_C_Abbreviations_BMM "BMM"
	
	Business Motivation Model
	
snippet togaf_introduction_C_Abbreviations_BPM "BPM"
	
	Business Process Management
	
snippet togaf_introduction_C_Abbreviations_BPMN "BPMN"
	
	Business Process Modeling Notation
	
snippet togaf_introduction_C_Abbreviations_BTEP "BTEP"
	
	The Canadian Government Business Transformation Enablement Program
	
snippet togaf_info_domains_Business_Architecture "Business Architecture"
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document provides a basis for          |
	| Business Models        | Enterprise Architects to understand and     |
	|                        | utilize business models, which describe the |
	|                        | rationale of how an organization creates,   |
	|                        | delivers, and captures value. It covers the |
	|                        | concept and purpose of business models and  |
	|                        | highlights the Business Model Canvas™       |
	|                        | technique.                                  |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document answers key questions about   |
	| Business Capabilities, | what a business capability is, and how it   |
	| Version 2              | is used to enhance business analysis and    |
	|                        | planning. It addresses how to provide the   |
	|                        | architect with a means to create a          |
	|                        | capability map and align it with other      |
	|                        | Business Architecture viewpoints in support |
	|                        | of business planning processes.             |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document shows how an organization can |
	| Business Capability    | introduce business capability planning or   |
	| Planning               | revise or refine existing efforts. It       |
	|                        | provides techniques, recommends tools, and  |
	|                        | provides references to other methods useful |
	|                        | for business capability planning.           |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | Value streams are one of the core elements  |
	| Value Streams          | of a Business Architecture. This document   |
	|                        | provides an architected approach to         |
	|                        | developing a business value model. It       |
	|                        | addresses how to identify, define, model,   |
	|                        | and map a value stream to other key         |
	|                        | components of an enterprise’s Business      |
	|                        | Architecture.                               |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document describes how to develop an   |
	| Information Mapping    | Information Map that articulates,           |
	|                        | characterizes, and visually represents      |
	|                        | information that is critical to the         |
	|                        | business. It provides architects with a     |
	|                        | framework to help understand what           |
	|                        | information matters most to a business      |
	|                        | before developing or proposing solutions.   |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document shows how organization        |
	| Organization Mapping   | mapping provides the organizational context |
	|                        | to an Enterprise Architecture. While        |
	|                        | capability mapping exposes what a business  |
	|                        | does and value stream mapping exposes how   |
	|                        | it delivers value to specific stakeholders, |
	|                        | the organization map identifies the         |
	|                        | business units or third parties that        |
	|                        | possess or use those capabilities, and      |
	|                        | which participate in the value streams.     |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document describes the Business        |
	| Business Scenarios     | Scenarios technique, which provides a       |
	|                        | mechanism to fully understand the           |
	|                        | requirements of information technology and  |
	|                        | align it with business needs. It shows how  |
	|                        | Business Scenarios can be used to develop   |
	|                        | resonating business requirements and how    |
	|                        | they support and enable the enterprise to   |
	|                        | achieve its business objectives.            |
	+------------------------+---------------------------------------------+
	
snippet togaf_ea-capability-and-governance_DOCIX_b "  b"
	
	  -   2. Establishing an Architecture Capability
	      -   2.3 Phase B: Business Architecture
	
	  benefits
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	              -   3.2.2.3 Operational Benefits
	
	  between
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.2 Contract between Architecture Design and Development
	              Partners
	          -   5.2.3 Contract between Architecting Function and Business
	              Stakeholders
	
	  board
	
	  -   4. Architecture Board
	  -   4.3 Setting Up the Architecture Board
	  -   4.3.2 Size of the Board
	  -   4.3.3 Board Structure
	
	  -   4.4 Operation of the Architecture Board
	
	  Board-Level
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.5 Architecture Governance: Overview
	              -   3.1.5.2 Architecture Governance as a Board-Level
	                  Responsibility
	
	  business
	
	  -   2. Establishing an Architecture Capability
	      -   2.3 Phase B: Business Architecture
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Business Control
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Any Other Business (AOB)
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.3 Contract between Architecting Function and Business
	              Stakeholders
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.2 Business Applications
	
snippet togaf_adm_DOCIX_b "b"
	
	  -   4. Phase B: Business Architecture
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	
	  Balanced Scorecard technique
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	
	  baseline
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.2 Develop Baseline Business Architecture Description
	      -   4.5 Approach
	          -   4.5.2 Developing the Baseline Description
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.2 Develop Baseline Data Architecture Description
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.2 Develop Baseline Application Architecture
	              Description
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.2 Develop Baseline Technology Architecture Description
	
	  Baseline Application Architecture Description
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.2 Develop Baseline Application Architecture
	              Description
	
	  Baseline Data Architecture Description
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.2 Develop Baseline Data Architecture Description
	
	  Baseline Description
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.2 Developing the Baseline Description
	
	  Baseline Technology Architecture Description
	
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.2 Develop Baseline Technology Architecture Description
	
	  basic
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	          -   1.2.2 Basic Structure
	
	  be
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.5 Identify Types of Requirement to be Collected
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.5 Identify Types of Requirement to be Collected
	
	  blocks
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	
	  BPMN
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  breadth
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.1 Breadth
	
	  breadth, enterprise
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	      -   1.5.1 Breadth
	
	  building
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	
	  business
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.2 Identify Stakeholders, Concerns, and Business
	              Requirements
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	          -   3.3.5 Assess Readiness for Business Transformation
	          -   3.3.7 Confirm and Elaborate Architecture Principles,
	              including Business Principles
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	  -   4. Phase B: Business Architecture
	  -   4.3 Steps
	      -   4.3.1 Select Reference Models, Viewpoints, and Tools
	          -   4.3.1.2 Identify Required Catalogs of Business Building
	              Blocks
	      -   4.3.2 Develop Baseline Business Architecture Description
	      -   4.3.3 Develop Target Business Architecture Description
	      -   4.3.8 Finalize the Business Architecture
	  -   4.5 Approach
	      -   4.5.3 Applying Business Capabilities
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.2 Determine Business Constraints for Implementation
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	          -   9.3.7 Confirm Readiness and Risk for Business
	              Transformation
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.5 Implement Business and IT Operations
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.1 Business Scenarios
	
	  Business Architecture
	
	  -   4. Phase B: Business Architecture
	
	  business capabilities
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.2 Creating the Architecture Vision
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.3 Applying Business Capabilities
	
	  business capability mapping
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  business planning
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  business principles
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.4 Principles
	
	  business process model
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  Business Process Modeling Notation
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  business scenarios
	
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.1 Business Scenarios
	
snippet togaf_introduction_INDEX_B_Glossary_of_Supplementary_Definitions "-   B. Glossary of Supplementary Definitions"
	    -   B.1 Application Software
	    -   B.2 Availability
	    -   B.3 Business System
	    -   B.4 Catalog
	    -   B.5 Client
	    -   B.6 COBIT
	    -   B.7 Configuration Management
	    -   B.8 CxO
	    -   B.9 Data Dictionary
	    -   B.10 Data Element
	    -   B.11 Database
	    -   B.12 Database Management System
	    -   B.13 End User
	    -   B.14 Enterprise Resource Planning (ERP) System
	    -   B.15 Hardware
	    -   B.16 Information Domain
	    -   B.17 Information System (IS)
	    -   B.18 Interaction
	    -   B.19 Interaction Model
	    -   B.20 Interface
	    -   B.21 Key Performance Indicator (KPI)
	    -   B.22 Lifecycle
	    -   B.23 Managing Successful Programs (MSP)
	    -   B.24 Matrix
	    -   B.25 Metaview
	    -   B.26 Open System
	    -   B.27 Operational Governance
	    -   B.28 Packaged Services
	    -   B.29 Portability
	    -   B.30 Portfolio
	    -   B.31 PRINCE2
	    -   B.32 Program
	    -   B.33 Project
	    -   B.34 Risk Management
	    -   B.35 Scalability
	    -   B.36 Security
	    -   B.37 Server
	    -   B.38 Service Quality
	    -   B.39 SMART
	    -   B.40 Supplier Management
	    -   B.41 System
	    -   B.42 Time Period
	    -   B.43 Use-Case
	    -   B.44 User
	
snippet togaf_introduction_B_Glossary_of_Supplementary_Definitions_B_Glossary_of_Supplementary_Definitions "B. Glossary of Supplementary Definitions"
	
	This appendix contains additional definitions to supplement the
	definitions contained in 4. Definitions .
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_B_Principles_from_the_TOGAF_Standard "B: Principles from the TOGAF Standard"
	
	-   Principle 1: Primacy of Principles
	
	    Statement: These principles of information management apply to all
	    organizations within the enterprise.
	
	-   Principle 2: Maximize Benefit to the Enterprise
	
	    Statement: Information management decisions are made to provide
	    maximum benefit to the enterprise as a whole.
	
	-   Principle 3: Information Management is Everybody’s Business
	
	    Statement: All organizations in the enterprise participate in
	    information management decisions needed to accomplish business
	    objectives.
	
	-   Principle 4: Business Continuity
	
	    Statement: Enterprise operations are maintained in spite of system
	    interruptions.
	
	-   Principle 5: Common Use Applications
	
	    Statement: Development of applications used across the enterprise is
	    preferred over the development of similar or duplicative
	    applications which are only provided to a particular organization.
	
	-   Principle 6: Service Orientation
	
	    Statement: The architecture is based on a design of services which
	    mirror real-world business activities comprising the enterprise (or
	    inter-enterprise) business processes.
	
	-   Principle 7: Compliance with Law
	
	    Statement: Enterprise information management processes comply with
	    all relevant laws, policies, and regulations.
	
	-   Principle 8: IT Responsibility
	
	    Statement: The IT organization is responsible for owning and
	    implementing IT processes and infrastructure that enable solutions
	    to meet user-defined requirements for functionality, service levels,
	    cost, and delivery timing.
	
	-   Principle 9: Protection of Intellectual Property
	
	    Statement: The enterprise’s Intellectual Property (IP) must be
	    protected. This protection must be reflected in the IT architecture,
	    implementation, and governance processes.
	
	-   Principle 10: Data is an Asset
	
	    Statement: Data is an asset that has value to the enterprise and is
	    managed accordingly.
	
	-   Principle 11: Data is Shared
	
	    Statement: Users have access to the data necessary to perform their
	    duties; therefore, data is shared across enterprise functions and
	    organizations.
	
	-   Principle 12: Data is Accessible
	
	    Statement: Data is accessible for users to perform their functions.
	
	-   Principle 13: Data Trustee
	
	    Statement: Each data element has a trustee accountable for data
	    quality.
	
	-   Principle 14: Common Vocabulary and Data Definitions
	
	    Statement: Data is defined consistently throughout the enterprise,
	    and the definitions are understandable and available to all users.
	
	-   Principle 15: Data Security
	
	    Statement: Data is protected from unauthorized use and disclosure.
	    In addition to the traditional aspects of national security
	    classification, this includes, but is not limited to, protection of
	    pre-decisional, sensitive, source selection-sensitive, and
	    proprietary information.
	
	-   Principle 16: Technology Independence
	
	    Statement: Applications are independent of specific technology
	    choices and therefore can operate on a variety of technology
	    platforms.
	
	-   Principle 17: Ease-of-Use
	
	    Statement: Applications are easy to use. The underlying technology
	    is transparent to users, so they can concentrate on tasks at hand.
	
	-   Principle 18: Requirements-Based Change
	
	    Statement: Only in response to business needs are changes to
	    applications and technology made.
	
	-   Principle 19: Responsive Change Management
	
	    Statement: Changes to the enterprise information environment are
	    implemented in a timely manner.
	
	-   Principle 20: Control Technical Diversity
	
	    Statement: Technological diversity is controlled to minimize the
	    non-trivial cost of maintaining expertise in and connectivity
	    between multiple processing environments.
	
	-   Principle 21: Interoperability
	
	    Statement: Software and hardware should conform to defined standards
	    that promote interoperability for data, applications, and
	    technology.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.1_Requirements_and_Elicitation "C.1. Requirements and Elicitation"
	
	This service category contains candidate services that enable
	requirements understanding – taking a step beyond requirements
	management, these services help get closer to real needs, which will
	deliver greater business value.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| Business Value       | Provides on-demand   | Competitive           |
	| Assessment and       | assessment and       | assessment report     |
	| Analysis             | analysis of business |                       |
	|                      | value based on the   | Capability assessment |
	|                      | current state of the | report                |
	|                      | landscape            |                       |
	|                      |                      | Value versus risk     |
	|                      |                      | matrix                |
	+----------------------+----------------------+-----------------------+
	| Stakeholders         | Provides             | Stakeholder           |
	| Management           | capabilities to      | identification report |
	|                      | identify,            |                       |
	|                      | understand, decide   | Stakeholder           |
	|                      | upon, and engage     | engagement strategy   |
	|                      | stakeholders based   | and plan              |
	|                      | on the scope of a    |                       |
	|                      | given effort         | Stakeholder needs     |
	|                      |                      | report                |
	+----------------------+----------------------+-----------------------+
	
	: Table 7. Requirements Elicitation and Understanding Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.2_Architecture_Planning "C.2. Architecture Planning"
	
	This service category contains candidate services that enable
	well-planned and executed architecture projects in support of
	organization change. These services would typically be provided in the
	beginning of a “project”, whether large or small, waterfall, or Agile.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| ADM Tailoring        | Maps out how         | Course of action,     |
	|                      | Enterprise           | covering:             |
	|                      | Architects provide   |                       |
	|                      | value and evolve the | -   Iteration         |
	|                      | architecture data in |                       |
	|                      | lockstep with an     | -   How to address    |
	|                      | organization’s       |     the landscape     |
	|                      | processes            |     with various      |
	|                      |                      |     levels            |
	|                      |                      |     (strategic,       |
	|                      |                      |     segment,          |
	|                      |                      |     capability, etc.) |
	|                      |                      |                       |
	|                      |                      | -   Tailoring for     |
	|                      |                      |     frameworks,       |
	|                      |                      |     styles, and/or    |
	|                      |                      |     constraints to    |
	|                      |                      |     produce the right |
	|                      |                      |     deliverables at   |
	|                      |                      |     the right time    |
	+----------------------+----------------------+-----------------------+
	| Architecture Project | Provides a resourced | Statement Of          |
	| Planning             | project plan and     | Architecture Work,    |
	|                      | statement of         | including scope       |
	|                      | architecture work at |                       |
	|                      | the appropriate      | Resources and tools   |
	|                      | level of detail that |                       |
	|                      | matches the          | Expected activities   |
	|                      | organization’s       | to support and enable |
	|                      | change process       |                       |
	+----------------------+----------------------+-----------------------+
	
	: Table 8. Architecture Planning Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.3_Design_Support "C.3. Design Support"
	
	This service category contains candidate services that enable good
	design decisions in support of organization change. These services would
	typically be provided after a project has been funded, whether large or
	small, waterfall, or Agile. These services include the development of
	MVAs and associated analysis to support the design decisions.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| Architecture         | Provides specific    | Compliance criteria   |
	| Compliance           | and actionable       |                       |
	| Development          | compliance criteria  | Guidance for          |
	|                      | for an architecture, | compliance            |
	|                      | whether Enterprise,  |                       |
	|                      | Business,            | Recommendations for   |
	|                      | Information,         | evidence              |
	|                      | Application,         |                       |
	|                      | Technology,          |                       |
	|                      | Infrastructure,      |                       |
	|                      | Systems, or Solution |                       |
	|                      | Architecture         |                       |
	+----------------------+----------------------+-----------------------+
	| Architecture         | Provides analysis    | Updates to all        |
	| Integration          | (across landscape,   | relevant              |
	|                      | dependencies, gaps,  | architectures         |
	|                      | and solutions) of    |                       |
	|                      | relevant             |                       |
	|                      | architectures that   |                       |
	|                      | pertain to a         |                       |
	|                      | particular project   |                       |
	|                      | based on a given     |                       |
	|                      | update to a          |                       |
	|                      | particular           |                       |
	|                      | architecture; for    |                       |
	|                      | example, to ensure   |                       |
	|                      | that all the         |                       |
	|                      | interrelated         |                       |
	|                      | architectures work   |                       |
	|                      | together             |                       |
	+----------------------+----------------------+-----------------------+
	| Architecture         | Provides modeling of | Baseline, Target, or  |
	| Modeling             | architectures (MVA), | Transition            |
	|                      | whether Enterprise,  | Architectures         |
	|                      | Business,            |                       |
	|                      | Information,         |                       |
	|                      | Application,         |                       |
	|                      | Technology,          |                       |
	|                      | Infrastructure,      |                       |
	|                      | Systems, or Solution |                       |
	|                      | Architecture         |                       |
	+----------------------+----------------------+-----------------------+
	| Architecture Vision  | Documents the vision | Expected business     |
	| and Strategy         | that drives the      | value                 |
	| Definition           | architecting efforts |                       |
	|                      | including            | Expected performance  |
	|                      | articulating the     | improvements          |
	|                      | value proposition    |                       |
	|                      | and KPIs             | Intent to support     |
	|                      |                      |                       |
	|                      |                      | Intended uses of the  |
	|                      |                      | architecture and      |
	|                      |                      | value                 |
	+----------------------+----------------------+-----------------------+
	
	: Table 9. Design Support Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.4_Development_Support "C.4. Development Support"
	
	This service category contains candidate services that enable good
	development decisions in support of organization change. These services
	would typically be provided during the development phase of a project,
	whether large or small, waterfall, or Agile. These services focus on
	answering questions and providing enterprise analysis in support of
	development decisions.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| Architecture and     | Provides guidance to | Business              |
	| Standards Guidance   | developing           | recommendations       |
	|                      | organizations on     |                       |
	|                      | using the            | Policy                |
	|                      | architecture and     | recommendations       |
	|                      | implementing         |                       |
	|                      | standards            | Technical             |
	|                      |                      | recommendations       |
	+----------------------+----------------------+-----------------------+
	| Change Management    | Provides             | People impact         |
	|                      | recommendations for  | recommendations       |
	|                      | developing holistic  |                       |
	|                      | change management    | Processes impact      |
	|                      | plans                | recommendations       |
	|                      |                      |                       |
	|                      |                      | Technologies impact   |
	|                      |                      | recommendations       |
	+----------------------+----------------------+-----------------------+
	| Compliance           | Provides assessments | Solutions assessment  |
	| Assessment and       | and analysis of how  | reports               |
	| Analysis             | standards identified |                       |
	|                      | in the pertinent     | Interoperability      |
	|                      | architectures are    | assessment report     |
	|                      | being implemented    |                       |
	+----------------------+----------------------+-----------------------+
	| Release Support      | Provides on-demand   | Release guidance      |
	|                      | guidance on release  |                       |
	|                      | issues based on the  |                       |
	|                      | current state of the |                       |
	|                      | enterprise           |                       |
	+----------------------+----------------------+-----------------------+
	
	: Table 10. Development Support Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.5_Enterprise_Support "C.5. Enterprise Support"
	
	This service category contains services that enable good enterprise
	decisions in support of organization change. These services could be
	provided independent of any individual project. These services focus on
	answering questions and providing enterprise analysis in support of more
	strategic decisions.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| Capability Planning  | Provides an holistic | Capability report     |
	| Support              | view of all it takes | detailing steps to    |
	|                      | to improve and/or to | improve or develop a  |
	|                      | provide specific     | new capability        |
	|                      | capabilities         | (people, process,     |
	|                      |                      | technology, etc.)     |
	|                      |                      | with roadmaps         |
	+----------------------+----------------------+-----------------------+
	| Portfolio Management | Provides on-demand   | Prioritization of     |
	| Support              | analysis and         | portfolio items       |
	|                      | recommendations for  | report                |
	|                      | the portfolio of     |                       |
	|                      | investments required | Acquisition           |
	|                      | to meet the business | recommendation and    |
	|                      | goals of an          | rationale             |
	|                      | organization over a  |                       |
	|                      | time horizon based   |                       |
	|                      | on the current state |                       |
	|                      | of the enterprise    |                       |
	+----------------------+----------------------+-----------------------+
	| Risk Management      | Provides analysis,   | Risk identification   |
	|                      | assessments, and     | report                |
	|                      | recommendations for  |                       |
	|                      | risk mitigation      | Risk assessment       |
	|                      | based on goals of    | report                |
	|                      | the organization     |                       |
	|                      |                      | Risk mitigation       |
	|                      |                      | report                |
	+----------------------+----------------------+-----------------------+
	| Sustainability       | Provides on-demand   | Sustainability        |
	| Management Support   | analysis and         | assessment report     |
	|                      | recommendations for  |                       |
	|                      | ensuring that        | Sustainability        |
	|                      | sustainability is    | recommendations       |
	|                      | being addressed      |                       |
	|                      | throughout programs  |                       |
	|                      | required to meet the |                       |
	|                      | business goals of an |                       |
	|                      | organization over a  |                       |
	|                      | time horizon based   |                       |
	|                      | on the current state |                       |
	|                      | of the enterprise    |                       |
	+----------------------+----------------------+-----------------------+
	| Enterprise Analysis  | Provides support to  | Assessment report     |
	| and Assessment       | various enterprise   |                       |
	|                      | processes such as    | Recommendations       |
	|                      | portfolio            |                       |
	|                      | management, program  | Supporting            |
	|                      | management, project  | information           |
	|                      | management, change   |                       |
	|                      | management, risk     |                       |
	|                      | management (impact), |                       |
	|                      | etc. honed for       |                       |
	|                      | specific subjects    |                       |
	|                      | such as readiness,   |                       |
	|                      | concepts, risks,     |                       |
	|                      | capabilities,        |                       |
	|                      | governance, impact,  |                       |
	|                      | process              |                       |
	|                      | optimization,        |                       |
	|                      | security, laws and   |                       |
	|                      | regulations, etc.    |                       |
	+----------------------+----------------------+-----------------------+
	
	: Table 11. Enterprise Support Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.6_Enterprise_Architecture_Practice_Development_Support "C.6. Enterprise Architecture Practice Development Support"
	
	This service category contains candidate services that enable the
	development and management of an Enterprise Architecture practice. These
	services are focused on improving the Enterprise Architecture
	capability.
	
	+----------------------+----------------------+-----------------------+
	| Service Examples     | Service Description  | Deliverables          |
	+======================+======================+=======================+
	| Enterprise           | This service         | Assessment report     |
	| Architecture         | provides an          |                       |
	| Development Process  | assessment of, and   | Recommendations for   |
	| Improvement          | recommendations for  | improvement           |
	|                      | improving, the       |                       |
	|                      | delivery process of  |                       |
	|                      | an Enterprise        |                       |
	|                      | Architecture Service |                       |
	|                      | Provider             |                       |
	+----------------------+----------------------+-----------------------+
	
	: Table 12. Enterprise Architecture Practice Development Support
	Services
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C.7_Services_Mapped_to_ADM_Phases "C.7. Services Mapped to ADM Phases"
	
	[TOGAFServices c50e2]
	
	Figure 5. Enterprise Architecture Service to ADM Phase
	
snippet togaf_introduction_DOCIX_c "  c"
	
	  -   C. Abbreviations
	  -   INDEX
	
	  capability
	
	  -   3. Core Concepts
	      -   3.13 Establishing and Maintaining an Enterprise Architecture
	          Capability
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   4. Definitions
	      -   4.28 Business Capability
	      -   4.33 Capability
	      -   4.34 Capability Architecture
	      -   4.35 Capability Increment
	
	  Capability Architecture
	
	  -   4. Definitions
	      -   4.34 Capability Architecture
	
	  capability increment
	
	  -   4. Definitions
	      -   4.35 Capability Increment
	
	  catalog
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.4 Catalog
	
	  client
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.5 Client
	
	  COBIT
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.6 COBIT
	
	  communications
	
	  -   4. Definitions
	      -   4.36 Communications and Stakeholder Management
	
	  communications management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   4. Definitions
	      -   4.36 Communications and Stakeholder Management
	
	  component
	
	  -   4. Definitions
	      -   4.4 Application Component
	      -   4.81 Technology Component
	
	  concepts
	
	  -   3. Core Concepts
	
	  conceptual
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.2 Conceptual Abstraction Level
	
	  concern
	
	  -   4. Definitions
	      -   4.37 Concern
	
	  conditions
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.1 Conditions of Use
	
	  conditions of use
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.1 Conditions of Use
	
	  configuration
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.7 Configuration Management
	
	  configuration management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   B. Glossary of Supplementary Definitions
	      -   B.7 Configuration Management
	
	  content
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	      -   3.12.2 Content Framework
	
	  Content Framework
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	          -   3.12.1 Overview
	          -   3.12.2 Content Framework
	
	  context
	
	  -   3. Core Concepts
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	
	  contextual
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.1 Contextual Abstraction Level
	
	  continuum
	
	  -   3. Core Concepts
	      -   3.10 Enterprise Continuum
	  -   4. Definitions
	      -   4.10 Architecture Continuum
	      -   4.44 Enterprise Continuum
	      -   4.74 Solutions Continuum
	
	  core
	
	  -   3. Core Concepts
	
	  core concepts
	
	  -   3. Core Concepts
	
	  cost
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.2 How Much Does the TOGAF Standard Cost?
	
	  course
	
	  -   4. Definitions
	      -   4.38 Course of Action
	
	  course of action
	
	  -   4. Definitions
	      -   4.38 Course of Action
	
	  CxO
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.8 CxO
	
snippet togaf_applying-the-adm_DOCIX_Capability_Architecture "  Capability Architecture"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.2 Architecture Landscape
	
	  classes
	
	  -   2. Applying Iteration to the ADM
	      -   2.3 Classes of Architecture Engagement
	
	  classification
	
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	
	  conclusions
	
	  -   2. Applying Iteration to the ADM
	      -   2.6 Conclusions
	
	  considerations
	
	  -   2. Applying Iteration to the ADM
	      -   2.5 Iteration Considerations
	
	  create
	
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	
	  cycle
	
	  -   2. Applying Iteration to the ADM
	      -   2.2 Iteration Cycles
	      -   2.5 Iteration Considerations
	          -   2.5.1 Iteration between ADM Cycles
	          -   2.5.2 Iteration within an ADM Cycle
	
snippet togaf_adm-techniques_DOCIX_catalog "  catalog"
	
	  -   6. Migration Planning Techniques
	      -   6.1 Implementation Factor Catalog
	
	  change
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 18: Requirements-Based Change
	              -   Principle 19: Responsive Change Management
	
	  characteristics
	
	  -   2. Architecture Principles
	      -   2.2 Characteristics of Architecture Principles
	
	  choose
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.3 Choose from Alternatives and Define in Detail
	
	  classification
	
	  -   9. Risk Management
	      -   9.2 Risk Classification
	
	  classify
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.2 Classify Stakeholder Positions
	
	  common
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 5: Common Use Applications
	          -   2.6.2 Data Principles
	              -   Principle 14: Common Vocabulary and Data Definitions
	
	  compliance
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 7: Compliance with Law
	
	  components
	
	  -   2. Architecture Principles
	      -   2.3 Components of Architecture Principles
	
	  concept
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.1 Concept
	
	  concern
	
	  -   3. Stakeholder Management
	      -   3.2 Approach to Stakeholder Management
	
	  conclusion
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.7 Conclusion
	
	  conduct
	
	  -   9. Risk Management
	      -   9.6 Conduct Residual Risk Assessment
	
	  consolidated
	
	  -   6. Migration Planning Techniques
	      -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	
	  content
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.2 Content of a Pattern
	
	  continuity
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 4: Business Continuity
	
	  continuum
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.2 Patterns and the Architecture Continuum
	
	  control
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 20: Control Technical Diversity
	
	  COTS
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 16: Technology Independence
	
	  criteria
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.1 Criteria
	
snippet togaf_introduction_C_Abbreviations_CMM "CMM"
	
	Capability Maturity Models
	
snippet togaf_introduction_C_Abbreviations_CMMI "CMMI"
	
	Capability Maturity Model Integration
	
snippet togaf_introduction_C_Abbreviations_COBIT "COBIT"
	
	Control OBjectives for Information and related Technology
	
snippet togaf_introduction_C_Abbreviations_COTS "COTS"
	
	Commercial Off-The-Shelf applications
	
snippet togaf_introduction_C_Abbreviations_CRM "CRM"
	
	Customer Relationship Management
	
snippet togaf_introduction_C_Abbreviations_CRUD "CRUD"
	
	Create/Read/Update/Delete
	
snippet togaf_introduction_C_Abbreviations_CSF "CSF"
	
	Critical Success Factor
	
snippet togaf_ea-capability-and-governance_DOCIX_c "  c"
	
	  -   2. Establishing an Architecture Capability
	      -   2.4 Phase C: Data Architecture
	      -   2.5 Phase C: Application Architecture
	
	  capability
	
	  -   2. Establishing an Architecture Capability
	
	  change
	
	  -   2. Establishing an Architecture Capability
	      -   2.10 Phase H: Architecture Change Management
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Requests for Change
	
	  characteristics
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.2 Nature of Governance
	              -   3.1.2.2 Characteristics of Governance
	          -   3.1.5 Architecture Governance: Overview
	              -   3.1.5.1 Architecture Governance Characteristics
	
	  checklist
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	      -   6.5.1 Hardware and Operating System Checklist
	      -   6.5.2 Software Services and Middleware Checklist
	      -   6.5.3 Applications Checklists
	      -   6.5.4 Information Management Checklists
	      -   6.5.5 Security Checklist
	      -   6.5.6 System Management Checklist
	      -   6.5.7 System Engineering/Overall Architecture Checklists
	      -   6.5.8 System Engineering/Methods & Tools Checklist
	  -   6.6 Architecture Compliance Review Guidelines
	      -   6.6.1 Tailoring the Checklists
	
	  client
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.3 Client
	
	  COBIT
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	
	  COBIT framework
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.1 General
	
	  common
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.5 Common Services
	
	  compliance
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Compliance
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Compliance Assessments
	  -   6. Architecture Compliance
	  -   6.2 Terminology: The Meaning of Architecture Compliance
	  -   6.3 Architecture Compliance Reviews
	  -   6.4 Architecture Compliance Review Process
	  -   6.5 Architecture Compliance Review Checklists
	  -   6.6 Architecture Compliance Review Guidelines
	  -   6.6.2 Conducting Architecture Compliance Reviews
	
	  concepts
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   3.2.1.1 Key Concepts
	
	  conceptual
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	
	  conducting
	
	  -   6. Architecture Compliance
	      -   6.6 Architecture Compliance Review Guidelines
	          -   6.6.2 Conducting Architecture Compliance Reviews
	
	  contents
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	
	  contract
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Contract Documentation Management
	  -   5. Architecture Contracts
	  -   5.2 Contents
	      -   5.2.2 Contract between Architecture Design and Development
	          Partners
	      -   5.2.3 Contract between Architecting Function and Business
	          Stakeholders
	
	  control
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Business Control
	
	  corporate
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.2 Elements of an Effective Architecture Governance
	              Strategy
	              -   3.3.2.1 Architecture Governance and Corporate Politics
	
	  corporate governance
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	
	  COTS
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.1 Purpose
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.6 COTS (where applicable)
	
snippet togaf_architecture-content_DOCIX_c "  c"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	          -   3.6.5 Phase C: Application Architecture
	
	  Calendar
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  capabilities
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Capabilities Catalog
	
	  capability
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Capability Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Business Capability Map
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.10 Capability Assessment
	
	  Capability Architecture
	
	  -   7. Architecture Repository
	      -   7.2 Architecture Landscape
	
	  Capability Architecture Requirements
	
	  -   7. Architecture Repository
	      -   7.6 The Architecture Requirements Repository
	          -   7.6.2 Contents of the Architecture Requirements Repository
	
	  Capability Assessment
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.10 Capability Assessment
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  Capability/Organization
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Capability/Organization Matrix
	
	  Capability/Organization matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Capability/Organization Matrix
	
	  catalog
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
	          -   3.6.1 Preliminary Phase
	              -   Principles Catalog
	          -   3.6.2 Phase A: Architecture Vision
	              -   Stakeholder Catalog
	          -   3.6.3 Phase B: Business Architecture
	              -   Organization/Actor Catalog
	              -   Driver/Goal/Objective Catalog
	              -   Role Catalog
	              -   Business Service/Function Catalog
	              -   Location Catalog
	              -   Process/Event/Control/Product Catalog
	              -   Contract/Measure Catalog
	              -   Business Capabilities Catalog
	              -   Value Stream Catalog
	              -   Value Stream Stages Catalog
	              -   Business Glossary Catalog
	          -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Data Component Catalog
	          -   3.6.5 Phase C: Application Architecture
	              -   Application Portfolio Catalog
	              -   Interface Catalog
	          -   3.6.6 Phase D: Technology Architecture
	              -   Technology Standards Catalog
	              -   Technology Portfolio Catalog
	          -   3.6.8 Requirements Management
	              -   Requirements Catalog
	
	  chain
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Value Chain Diagram
	
	  change
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.11 Change Request
	
	  Change Request
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.11 Change Request
	
	  characteristics
	
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.2 Generic Characteristics
	          -   5.2.3 Architecture Building Blocks
	              -   5.2.3.1 Characteristics
	          -   5.2.4 Solution Building Blocks
	              -   5.2.4.1 Characteristics
	
	  classification
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  CMMI
	
	  -   4. Architecture Deliverables
	      -   4.1 Introduction
	
	  common
	
	  -   3. Architectural Artifacts
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.3 Need for a Common Language and Interoperable Tools
	              for Architecture Description
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Common Systems Architectures
	          -   6.4.2 Solutions Continuum
	              -   Common Systems Solutions
	
	  Common Systems Architectures
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Common Systems Architectures
	
	  Common Systems Solutions
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Common Systems Solutions
	
	  communication
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Application Communication Diagram
	          -   3.6.6 Phase D: Technology Architecture
	              -   Network and Communications Diagram
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.12 Communications Plan
	
	  Communications Plan
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.12 Communications Plan
	
	  compliance
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.13 Compliance Assessment
	
	  Compliance Assessment
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.13 Compliance Assessment
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  component
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Data Component Catalog
	
	  Computing/Hardware
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Networked Computing/Hardware Diagram
	
	  concept
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
	          -   3.6.2 Phase A: Architecture Vision
	              -   Solution Concept Diagram
	
	  conceptual
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Conceptual Data Diagram
	
	  Conceptual Data diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Conceptual Data Diagram
	
	  concern
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	
	  conclusions
	
	  -   3. Architectural Artifacts
	      -   3.5 Conclusions
	
	  constituents
	
	  -   6. Enterprise Continuum
	      -   6.3 Constituents of the Enterprise Continuum
	
	  content
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.2 Content Framework
	      -   1.2.4 The TOGAF Content Framework
	  -   1.3 Content Framework and the TOGAF ADM
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.2 Architecture Contract
	              -   Content
	          -   4.2.3 Architecture Definition Document
	              -   Content
	          -   4.2.4 Architecture Principles
	              -   Content
	          -   4.2.5 Architecture Repository
	              -   Content
	          -   4.2.6 Architecture Requirements Specification
	              -   Content
	          -   4.2.7 Architecture Roadmap
	              -   Content
	          -   4.2.8 Architecture Vision
	              -   Content
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	              -   Content
	          -   4.2.10 Capability Assessment
	              -   Content
	          -   4.2.11 Change Request
	              -   Content
	          -   4.2.12 Communications Plan
	              -   Content
	          -   4.2.13 Compliance Assessment
	              -   Content
	          -   4.2.14 Implementation and Migration Plan
	              -   Content
	          -   4.2.15 Implementation Governance Model
	              -   Content
	          -   4.2.16 Organizational Model for Enterprise Architecture
	              -   Content
	          -   4.2.17 Request for Architecture Work
	              -   Content
	          -   4.2.18 Requirements Impact Assessment
	              -   Content
	          -   4.2.20 Statement of Architecture Work
	              -   Content
	          -   4.2.21 Tailored Architecture Framework
	              -   Content
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.3 Architecture Building Blocks
	              -   5.2.3.2 Specification Content
	          -   5.2.4 Solution Building Blocks
	              -   5.2.4.2 Specification Content
	
	  Content Framework
	
	  -   1. Introduction
	  -   1.2 TOGAF Content Framework and Enterprise Metamodel
	  -   1.2.1 Overview
	  -   1.2.2 Content Framework
	  -   1.2.4 The TOGAF Content Framework
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	
	  Content Framework, and the TOGAF ADM
	
	  -   1. Introduction
	      -   1.3 Content Framework and the TOGAF ADM
	
	  contents
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	      -   7.6 The Architecture Requirements Repository
	          -   7.6.2 Contents of the Architecture Requirements Repository
	
	  context
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	              -   Project Context Diagram
	
	  continuum
	
	  -   1. Introduction
	      -   1.4 The Enterprise Continuum
	  -   6. Enterprise Continuum
	  -   6.2 Enterprise Continuum and Architecture Re-Use
	  -   6.3 Constituents of the Enterprise Continuum
	  -   6.4 Enterprise Continuum in Detail
	  -   6.4.1 Architecture Continuum
	  -   6.4.2 Solutions Continuum
	
	  -   6.5 The Enterprise Continuum and the ADM
	  -   6.6 The Enterprise Continuum and Your Organization
	
	  contract
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.2 Architecture Contract
	
	  Contract/Measure
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Contract/Measure Catalog
	
	  Contract/Measure catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Contract/Measure Catalog
	
	  COTS
	
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	              -   5.3.1.2 Building Block Design
	
	  creation
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	          -   3.2.2 Architecture View Creation Process
	
	  CRM
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Application/Data Matrix
	
	  CRUD
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
snippet togaf_adm_DOCIX_c "c"
	
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  candidate
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.5 Define Candidate Roadmap Components
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.5 Define Candidate Roadmap Components
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.5 Define Candidate Roadmap Components
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.5 Define Candidate Roadmap Components
	
	  capabilities
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.4 Evaluate Capabilities
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.3 Applying Business Capabilities
	
	  catalog
	
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	
	  catalog of application building blocks
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	
	  catalogs
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	
	  catalogs, building blocks
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	
	  Catalyst
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  change
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.1 Determine/Confirm Key Corporate Change Attributes
	  -   12. Phase H: Architecture Change Management
	  -   12.3 Steps
	      -   12.3.4 Provide Analysis for Architecture Change Management
	      -   12.3.5 Develop Change Requirements to Meet Performance Targets
	      -   12.3.7 Activate the Process to Implement Change
	  -   12.5 Approach
	      -   12.5.1 Drivers for Change
	      -   12.5.2 Enterprise Architecture Change Management Process
	
	  change management
	
	  -   12. Phase H: Architecture Change Management
	
	  change management process
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  class model
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  close
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.6 Perform Post-Implementation Review and Close the
	              Implementation
	
	  COBIT
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	
	  collected
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.5 Identify Types of Requirement to be Collected
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.5 Identify Types of Requirement to be Collected
	
	  complete
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.6 Complete the Implementation and Migration Plan
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	
	  compliance
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	
	  components
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.5 Define Candidate Roadmap Components
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.5 Define Candidate Roadmap Components
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.5 Define Candidate Roadmap Components
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.5 Define Candidate Roadmap Components
	
	  concerns
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.2 Identify Stakeholders, Concerns, and Business
	              Requirements
	
	  conduct
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.7 Conduct Formal Stakeholder Review
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.7 Conduct Formal Stakeholder Review
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.7 Conduct Formal Stakeholder Review
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.7 Conduct Formal Stakeholder Review
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  confirm
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.2 Confirm Governance and Support Frameworks
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	          -   3.3.7 Confirm and Elaborate Architecture Principles,
	              including Business Principles
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.7 Confirm Readiness and Risk for Business
	              Transformation
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	
	  considerations
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	
	  consolidate
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	          -   9.3.5 Consolidate and Reconcile Interoperability
	              Requirements
	
	  consolidated
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	
	  constraints
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.2 Determine Business Constraints for Implementation
	
	  content tailoring
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  context
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.2 Organizational Context
	
	  continuum
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.1 The ADM, Enterprise Continuum, and Architecture
	              Repository
	
	  corporate
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.1 Determine/Confirm Key Corporate Change Attributes
	
	  Cost/Benefit
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  COTS
	
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.2 Requirements Tools
	
	  create
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	
	  create architecture models
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.1 Determine Overall Modeling Process
	
	  Create/Update
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.9 Create/Update the Architecture Definition Document
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.9 Create/Update the Architecture Definition Document
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.9 Create/Update the Architecture Definition Document
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.9 Create/Update the Architecture Definition Document
	
	  creating
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.2 Creating the Architecture Vision
	
	  cycle
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	
snippet togaf_introduction_C_Abbreviations_C_Abbreviations "C. Abbreviations"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_C_Services_Proposed_for_the_TOGAF_Standard "C: Services Proposed for the TOGAF Standard"
	
	The following are Enterprise Architecture services that package TOGAF
	activities to deliver value on demand. There are two major categories:
	one is customer-centric and the other is more internal to the
	architecting community. This document focuses on customer-centric
	Enterprise Architecture services.
	
	+-------------+-------------+-------------+-------------+-------------+
	| Descriptor  | Typical     | Typical     | Del         | Desired     |
	| (cols)      | Customer    | Provider    | iverable(s) | Result      |
	| Categories  |             |             |             |             |
	| (rows)      |             |             |             |             |
	+=============+=============+=============+=============+=============+
	| Custo       |             |             |             |             |
	| mer-Centric |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| R           | Product     | Enterprise  | Stakeholder | Solid       |
	| EQUIREMENTS | managers    | Architect   | concerns    | outside-in  |
	| ELICITATION |             | with        |             | view of     |
	| AND         |             | r           | R           | r           |
	| UN          |             | equirements | equirements | equirements |
	| DERSTANDING |             | un          |             | and value   |
	| SERVICES    |             | derstanding | Assessments | for         |
	|             |             | specialty   | (value,     | solutions   |
	|             |             |             | ability,    | balanced    |
	|             |             |             | etc.)       | among       |
	|             |             |             |             | s           |
	|             |             |             |             | takeholders |
	+-------------+-------------+-------------+-------------+-------------+
	| DESIGN      | Pr          | Enterprise  | MVA         | Better      |
	| SUPPORT     | ogram-level | Architect   | (including  | design      |
	| SERVICES    | deci        | buil        | standards   | decisions   |
	|             | sion-makers | der/modeler | and         |             |
	|             |             |             | compliance  | Successful  |
	|             |             |             | criteria,   | programs    |
	|             |             |             | roadmaps)   | and         |
	|             |             |             | for         | projects    |
	|             |             |             | programs    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | guidance    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | reports     |             |
	+-------------+-------------+-------------+-------------+-------------+
	| DEVELOPMENT | Pr          | Enterprise  | MVA         | Better      |
	| SUPPORT     | oject-level | Architect   | (including  | product     |
	| SERVICES    | deci        | buil        | standards   | decisions   |
	|             | sion-makers | der/modeler | and         |             |
	|             |             |             | compliance  | Successful  |
	|             |             |             | criteria)   | products    |
	|             |             |             | for         |             |
	|             |             |             | projec      |             |
	|             |             |             | ts/products |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | guidance    |             |
	|             |             |             |             |             |
	|             |             |             | Compliance  |             |
	|             |             |             | reports     |             |
	+-------------+-------------+-------------+-------------+-------------+
	| ENTERPRISE  | C-level     | Enterprise  | Answers to  | Better      |
	| SUPPORT     | management  | analysts    | questions   | enterprise  |
	| SERVICES    |             | using       |             | decisions   |
	|             |             | Enterprise  | Assessment  |             |
	|             |             | A           | reports     | Lower risk  |
	|             |             | rchitecture |             |             |
	|             |             | as a tool   | Reco        |             |
	|             |             |             | mmendations |             |
	+-------------+-------------+-------------+-------------+-------------+
	| Inter       |             |             |             |             |
	| nal-Centric |             |             |             |             |
	+-------------+-------------+-------------+-------------+-------------+
	| A           | A           | Experienced | A           | Resourced   |
	| RCHITECTURE | rchitecture | Enterprise  | rchitecture | a           |
	| PLANNING    | team        | Architect   | project     | rchitecture |
	| SERVICES    | leaders     |             | plans       | team        |
	+-------------+-------------+-------------+-------------+-------------+
	| ENTERPRISE  | A           | Enterprise  | Enterprise  | Highly      |
	| A           | rchitecture | A           | A           | skilled and |
	| RCHITECTURE | o           | rchitecture | rchitecture | organized   |
	| PRACTICE    | rganization | practice    | capability  | Enterprise  |
	| DEVELOPMENT | deci        | experts     | assessments | A           |
	| SUPPORT     | sion-makers |             |             | rchitecture |
	| SERVICES    |             |             | Enterprise  | practice    |
	|             |             |             | A           | o           |
	|             |             |             | rchitecture | rganization |
	|             |             |             | capability  | (internal   |
	|             |             |             | improvement | or          |
	|             |             |             | reco        | external)   |
	|             |             |             | mmendations |             |
	+-------------+-------------+-------------+-------------+-------------+
	
	: Table 6. Enterprise Architecture Service Categories and Descriptors
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.1.1_Aspect_Enterprise_Architecture_Benefits "D.1.1. Aspect: Enterprise Architecture Benefits"
	
	-   More effective and efficient business operations – business
	    capabilities are shared across the organization
	
	-   More effective and efficient digital enterprise and IT operations –
	    to extend the effective reach of the enterprise through digital
	    capability, and to bring all components of the enterprise into a
	    harmonized environment
	
	-   Faster, simpler, and cheaper procurement – create an environment
	    where buying decisions are simpler, because the information
	    governing procurement is readily available in a coherent plan
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.1.2_Aspect_Enterprise_Architecture_Services "D.1.2. Aspect: Enterprise Architecture Services"
	
	-   Requirements Elicitation and Understanding Services – Stakeholders
	    Management Services
	
	-   Design Support Services – Architecture Integration Services,
	    Architecture Modeling, and Documentation Services (MVA)
	
	-   Enterprise Support Services – Portfolio Management Support Services
	    (including Asset Management, Acquisitions), Risk Management
	    Services, Sustainability Management Support Services, Enterprise
	    Analysis and Assessment Services, Capability Planning Support
	    Service
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.1_Organizational_Reality_Capabilities_and_Dependencies "D.1. Organizational Reality, Capabilities, and Dependencies"
	
	Each of the following aspects lists benefits and proposed Enterprise
	Architecture services that support the DPBoK Standard alignment area.
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.2.1_Aspect_Enterprise_Architecture_Benefits "D.2.1. Aspect: Enterprise Architecture Benefits"
	
	-   More effective and efficient digital enterprise and IT operations –
	    extending the effective reach of the enterprise through digital
	    capability, and bringing all components of the enterprise into a
	    harmonized environment
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.2.2_Aspect_Enterprise_Architecture_Services "D.2.2. Aspect: Enterprise Architecture Services"
	
	-   Requirements Elicitation and Understanding Services – Stakeholders
	    Management Services
	
	-   Design Support Services – Architecture Vision and Strategy Services,
	    Architecture Modeling and Documentation Services (MVA)
	
	-   Enterprise Support Services – Enterprise Analysis and Assessment
	    Services, Capability Planning Support Service
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.2_Integrating_Outside-In_and_Inside-Out_Views "D.2. Integrating “Outside-In” and “Inside-Out” Views"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.3.1_Aspect_Enterprise_Architecture_Benefits "D.3.1. Aspect: Enterprise Architecture Benefits"
	
	-   More effective and efficient business operations – business
	    capabilities shared across the organization, more flexible
	    workforce, and improved business productivity
	
	-   More effective and efficient digital enterprise and IT operations –
	    extending effective reach of the enterprise through digital
	    capability, bringing all components of the enterprise into a
	    harmonized environment, and improved interoperability and easier
	    system and network management
	
	-   Better return on existing investment, reduced risk for future
	    investment – reduced complexity in the business and IT
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.3.2_Aspect_Enterprise_Architecture_Services "D.3.2. Aspect: Enterprise Architecture Services"
	
	-   Requirements Elicitation and Understanding Services – Business Value
	    Assessment and Analysis Service
	
	-   Development Support Services – Architecture and Standards Guidance
	    Service, Change Management, Release Support Services
	
	-   Enterprise Support Services – Portfolio Management Support Services
	    (including Asset Management, Acquisitions), Sustainability
	    Management Support Services, Enterprise Analysis and Assessment
	    Services, Capability Planning Support Service
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.3_Strategic_Alignment_and_Synergy "D.3. Strategic Alignment and Synergy"
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.4.1_Aspect_Enterprise_Architecture_Benefits "D.4.1. Aspect: Enterprise Architecture Benefits"
	
	-   More effective and efficient digital enterprise and IT operations –
	    bringing all components of the enterprise into a harmonized
	    environment, increased portability of applications, improved ability
	    to address critical enterprise-wide issues like security
	
	-   Better return on existing investment, reduced risk for future
	    investment – reduced complexity in the business and IT, maximum ROI
	    in existing business and IT infrastructure, reduced risk overall in
	    new investments and their cost of ownership
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.4.2_Aspect_Enterprise_Architecture_Services "D.4.2. Aspect: Enterprise Architecture Services"
	
	-   Design Support Services – Architecture Compliance Development
	    Services (Business, Info, Application, Infrastructure, Systems,
	    etc.)
	
	-   Development Support Services – Compliance Assessment and Analysis
	    Service
	
	-   Enterprise Support Services – Enterprise Analysis and Assessment
	    Services, Risk Management Services
	
	------------------------------------------------------------------------
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D.4_Enabling_Innovation_While_Managing_Technical_Debt "D.4. Enabling Innovation While Managing Technical Debt"
	
snippet togaf_ea-capability-and-governance_DOCIX_d "  d"
	
	  -   2. Establishing an Architecture Capability
	      -   2.6 Phase D: Technology Architecture
	
	  data
	
	  -   2. Establishing an Architecture Capability
	      -   2.4 Phase C: Data Architecture
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.1 Data Values
	              -   6.5.4.2 Data Definition
	              -   6.5.4.4 Hosting, Data Types, and Sharing
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.5 Data Server
	
	  definition
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.2 Data Definition
	
	  design
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.2 Contract between Architecture Design and Development
	              Partners
	
	  development
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.2 Contract between Architecture Design and Development
	              Partners
	
	  direction
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Architecture Strategy and Direction Documentation
	
	  dispensation
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Dispensation (also known as Waiver)
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Dispensations
	
	  dispute
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Dispute Resolution
	
	  documentation
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Architecture Strategy and Direction Documentation
	              -   Contract Documentation Management
	
snippet togaf_introduction_DOCIX_data "  data"
	
	  -   4. Definitions
	      -   4.39 Data Architecture
	  -   B. Glossary of Supplementary Definitions
	      -   B.9 Data Dictionary
	      -   B.10 Data Element
	
	  Data Architecture
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	  -   4. Definitions
	      -   4.39 Data Architecture
	
	  data dictionary
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.9 Data Dictionary
	
	  data element
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.10 Data Element
	
	  database
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.11 Database
	      -   B.12 Database Management System
	
	  database management system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.12 Database Management System
	
	  deal
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	
	  definitions
	
	  -   4. Definitions
	  -   B. Glossary of Supplementary Definitions
	
	  deliverable
	
	  -   3. Core Concepts
	      -   3.6 Deliverables, Artifacts, and Building Blocks
	  -   4. Definitions
	      -   4.40 Deliverable
	
	  design
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.2 Design Support Services
	
	  developing
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	          -   3.12.4 Developing the Enterprise Metamodel
	
	  development
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	  -   3. Core Concepts
	      -   3.4 Architecture Development Method
	      -   3.5 Enterprise Architecture Services
	          -   3.5.3 Development Support Services
	          -   3.5.6 Enterprise Architecture Practice Development Support
	              Services
	  -   4. Definitions
	      -   4.11 Architecture Development Method (ADM)
	
	  dictionary
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.9 Data Dictionary
	
	  different
	
	  -   3. Core Concepts
	      -   3.16 Using the TOGAF Framework with Different Architecture
	          Styles
	
	  digital
	
	  -   4. Definitions
	      -   4.41 Digital Architecture
	
	  digital architecture
	
	  -   4. Definitions
	      -   4.41 Digital Architecture
	
	  document
	
	  -   1. Introduction
	      -   1.2 Structure of this Document
	
	  documentation
	
	  -   2. The TOGAF Documentation Set
	  -   2.1 Structure of the TOGAF Documentation Set
	
	  documents
	
	  -   A. Referenced Documents
	  -   Other Referenced Documents
	
	  does
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.2 How Much Does the TOGAF Standard Cost?
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	
	  domain
	
	  -   4. Definitions
	      -   4.12 Architecture Domain
	  -   B. Glossary of Supplementary Definitions
	      -   B.16 Information Domain
	
	  done
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   When should Enterprise Architecture be done?
	
	  downloads
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.3 Downloads
	
snippet togaf_adm-techniques_DOCIX_data "  data"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	          -   Principle 10: Data is an Asset
	          -   Principle 11: Data is Shared
	          -   Principle 12: Data is Accessible
	          -   Principle 13: Data Trustee
	          -   Principle 14: Common Vocabulary and Data Definitions
	          -   Principle 15: Data Security
	
	  data principles, examples
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	
	  define
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.3 Choose from Alternatives and Define in Detail
	
	  defining
	
	  -   7. Interoperability Requirements
	      -   7.2 Defining Interoperability
	
	  definition
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 14: Common Vocabulary and Data Definitions
	  -   6. Migration Planning Techniques
	      -   6.3 Architecture Definition Increments Table
	
	  Degrees of Interoperability
	
	  -   7. Interoperability Requirements
	      -   7.4 Refining Interoperability
	
	  deliverables
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.4 Tailor Engagement Deliverables
	
	  dependencies
	
	  -   6. Migration Planning Techniques
	      -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	
	  design
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.1 Architecture Patterns and Design Patterns
	
	  design pattern
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.1 Architecture Patterns and Design Patterns
	
	  detail
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.3 Choose from Alternatives and Define in Detail
	
	  determine
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.3 Determine Stakeholder Management Approach
	  -   8. Business Transformation Readiness Assessment
	      -   8.2 Determine Readiness Factors
	
	  determining
	
	  -   7. Interoperability Requirements
	      -   7.5 Determining Interoperability Requirements
	
	  developing
	
	  -   2. Architecture Principles
	      -   2.4 Developing Architecture Principles
	
	  diversity
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 20: Control Technical Diversity
	
snippet togaf_info_domains_Data_Information_Architecture "Data/Information Architecture"
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document describes information         |
	| Information            | architecture techniques to support          |
	| Architecture: Business | architecture work using Business            |
	| Intelligence &         | Intelligence (BI) and Analytics. This       |
	| Analytics              | document includes reference models for the  |
	|                        | assessment and design of BI & Analytics     |
	|                        | capabilities, and an adaptation of the      |
	|                        | TOGAF ADM to support the BI & Analytics     |
	|                        | capability.                                 |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document describes an approach for     |
	| Information            | implementing Customer Master Data           |
	| Architecture: Customer | Management (C-MDM) in an organization. It   |
	| Master Data Management | includes people, process, organizations,    |
	| (C-MDM)                | and systems to manage customer master data  |
	|                        | as an asset.                                |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document describes best practices for  |
	| Information            | Metadata Management, including a framework  |
	| Architecture: Metadata | for accelerating the delivery of value from |
	| Management             | data, and a common language for describing  |
	|                        | the Metadata Management capability. It also |
	|                        | emphasizes the benefits of data             |
	|                        | documentation, and the necessary efforts    |
	|                        | required to set up an effective Metadata    |
	|                        | Management capability within an             |
	|                        | organization.                               |
	+------------------------+---------------------------------------------+
	
snippet togaf_introduction_C_Abbreviations_DBA "DBA"
	
	Database Administrator
	
snippet togaf_introduction_C_Abbreviations_DBMS "DBMS"
	
	Database Management System
	
snippet togaf_applying-the-adm_DOCIX_depth "  depth"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
	  developing
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.3 Developing Architectures at Different Levels
	
	  development
	
	  -   2. Applying Iteration to the ADM
	      -   2.4 Approaches to Architecture Development
	
	  different
	
	  -   1. Introduction
	      -   1.1 Using the TOGAF Framework with Different Architecture
	          Styles
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.3 Developing Architectures at Different Levels
	
snippet togaf_introduction_C_Abbreviations_DoC "DoC"
	
	US Department of Commerce
	
snippet togaf_introduction_DOCIX_DOCIX "  ABB"
	
	  -   4. Definitions
	      -   4.9 Architecture Building Block (ABB)
	
	  abbreviations
	
	  -   C. Abbreviations
	  -   INDEX
	
	  abstraction
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	      -   3.7.1 Contextual Abstraction Level
	      -   3.7.2 Conceptual Abstraction Level
	      -   3.7.3 Logical Abstraction Level
	      -   3.7.4 Physical Abstraction Level
	
	  -   4. Definitions
	      -   4.1 Abstraction
	
	  abstraction, conceptual
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.2 Conceptual Abstraction Level
	
	  abstraction, contextual
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.1 Contextual Abstraction Level
	
	  abstraction, logical
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.3 Logical Abstraction Level
	
	  abstraction, physical
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.4 Physical Abstraction Level
	
	  action
	
	  -   4. Definitions
	      -   4.38 Course of Action
	
	  actor
	
	  -   4. Definitions
	      -   4.2 Actor
	
	  ADM
	
	  -   3. Core Concepts
	      -   3.9 Interoperability
	  -   4. Definitions
	      -   4.11 Architecture Development Method (ADM)
	
	  agility
	
	  -   3. Core Concepts
	      -   3.18 Enterprise Agility
	
	  application
	
	  -   4. Definitions
	      -   4.3 Application Architecture
	      -   4.4 Application Component
	      -   4.5 Application Platform
	      -   4.6 Application Service
	  -   B. Glossary of Supplementary Definitions
	      -   B.1 Application Software
	
	  Application Architecture
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	  -   4. Definitions
	      -   4.3 Application Architecture
	
	  Application Platform
	
	  -   4. Definitions
	      -   4.5 Application Platform
	
	  Application Service
	
	  -   4. Definitions
	      -   4.6 Application Service
	
	  Application Software
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.1 Application Software
	
	  architectural
	
	  -   4. Definitions
	      -   4.7 Architectural Style
	
	  architectural style
	
	  -   4. Definitions
	      -   4.7 Architectural Style
	
	  architecture
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why is an Enterprise Architecture needed?
	          -   What are the benefits of an Enterprise Architecture?
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	          -   What is an architecture framework?
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	          -   When should Enterprise Architecture be done?
	  -   3. Core Concepts
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	      -   3.4 Architecture Development Method
	      -   3.5 Enterprise Architecture Services
	      -   3.5.5 Architecture Planning Services
	      -   3.5.6 Enterprise Architecture Practice Development Support
	          Services
	  -   3.7 Architecture Abstraction
	  -   3.8 Architecture Principles
	  -   3.11 Architecture Repository
	  -   3.13 Establishing and Maintaining an Enterprise Architecture
	      Capability
	  -   3.14 Establishing the Architecture Capability as an Operational
	      Entity
	  -   3.16 Using the TOGAF Framework with Different Architecture Styles
	  -   3.17 Architecture Views and Viewpoints
	
	  -   4. Definitions
	      -   4.3 Application Architecture
	      -   4.8 Architecture
	      -   4.9 Architecture Building Block (ABB)
	      -   4.10 Architecture Continuum
	      -   4.11 Architecture Development Method (ADM)
	      -   4.12 Architecture Domain
	      -   4.13 Architecture Framework
	      -   4.14 Architecture Governance
	      -   4.15 Architecture Landscape
	      -   4.16 Architecture Level
	      -   4.17 Architecture Model
	      -   4.18 Architecture Partition
	      -   4.19 Architecture Principle
	      -   4.20 Architecture View
	      -   4.21 Architecture Viewpoint
	      -   4.22 Architecture Vision
	      -   4.27 Business Architecture
	      -   4.34 Capability Architecture
	      -   4.39 Data Architecture
	      -   4.41 Digital Architecture
	      -   4.43 Enterprise Architecture Service
	      -   4.45 Foundation Architecture
	      -   4.67 Segment Architecture
	      -   4.70 Service-Oriented Architecture (SOA)
	      -   4.72 Solution Architecture
	      -   4.77 Strategic Architecture
	      -   4.78 Target Architecture
	      -   4.79 Taxonomy of Architecture Views
	      -   4.80 Technology Architecture
	      -   4.83 Transition Architecture
	
	  Architecture Building Block
	
	  -   4. Definitions
	      -   4.9 Architecture Building Block (ABB)
	
	  Architecture Capability
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	      -   3.13 Establishing and Maintaining an Enterprise Architecture
	          Capability
	
	  Architecture Continuum
	
	  -   3. Core Concepts
	      -   3.10 Enterprise Continuum
	  -   4. Definitions
	      -   4.10 Architecture Continuum
	
	  Architecture Development Method
	
	  -   4. Definitions
	      -   4.11 Architecture Development Method (ADM)
	
	  architecture domain
	
	  -   4. Definitions
	      -   4.12 Architecture Domain
	
	  Architecture Forum
	
	  -   1. Introduction
	
	  Architecture Framework
	
	  -   4. Definitions
	      -   4.13 Architecture Framework
	
	  Architecture Governance
	
	  -   4. Definitions
	      -   4.14 Architecture Governance
	
	  Architecture Landscape
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	  -   4. Definitions
	      -   4.15 Architecture Landscape
	
	  architecture level
	
	  -   4. Definitions
	      -   4.16 Architecture Level
	
	  Architecture Metamodel
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  architecture model
	
	  -   4. Definitions
	      -   4.17 Architecture Model
	
	  architecture partition
	
	  -   4. Definitions
	      -   4.18 Architecture Partition
	
	  Architecture Principle
	
	  -   3. Core Concepts
	      -   3.8 Architecture Principles
	  -   4. Definitions
	      -   4.19 Architecture Principle
	
	  Architecture Repository
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  Architecture Requirements Repository
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  architecture styles
	
	  -   3. Core Concepts
	      -   3.16 Using the TOGAF Framework with Different Architecture
	          Styles
	
	  architecture view
	
	  -   3. Core Concepts
	      -   3.17 Architecture Views and Viewpoints
	  -   4. Definitions
	      -   4.20 Architecture View
	
	  architecture viewpoint
	
	  -   3. Core Concepts
	      -   3.17 Architecture Views and Viewpoints
	  -   4. Definitions
	      -   4.21 Architecture Viewpoint
	
	  Architecture Vision
	
	  -   4. Definitions
	      -   4.22 Architecture Vision
	
	  architecture, definition
	
	  -   3. Core Concepts
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	
	  are
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What are the benefits of an Enterprise Architecture?
	
	  artifact
	
	  -   3. Core Concepts
	      -   3.6 Deliverables, Artifacts, and Building Blocks
	  -   4. Definitions
	      -   4.23 Artifact
	
	  as
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  availability
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.2 Availability
	
snippet togaf_introduction_C_Abbreviations_DoD "DoD"
	
	US Department of Defense
	
snippet togaf_introduction_C_Abbreviations_DoDAF "DoDAF"
	
	Department of Defense Architecture Framework
	
snippet togaf_architecture-content_DOCIX_d "  d"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	
	  data
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	          -   Data Entity/Data Component Catalog
	          -   Data Entity/Business Function Matrix
	          -   Conceptual Data Diagram
	          -   Logical Data Diagram
	          -   Data Dissemination Diagram
	          -   Data Security Diagram
	          -   Data Migration Diagram
	          -   Data Lifecycle Diagram
	
	  Data Dissemination diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Dissemination Diagram
	
	  Data Entity/Business Function matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Business Function Matrix
	
	  Data Entity/Data Component catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Data Component Catalog
	
	  Data Lifecycle diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Lifecycle Diagram
	
	  Data Migration diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Migration Diagram
	
	  Data Security diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Security Diagram
	
	  Data Standards
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  Decision Log
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  decomposition
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Functional Decomposition Diagram
	              -   Organization Decomposition Diagram
	          -   3.6.6 Phase D: Technology Architecture
	              -   Platform Decomposition Diagram
	
	  definition
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.3 Architecture Definition Document
	
	  deliverable
	
	  -   4. Architecture Deliverables
	  -   4.2 Deliverable Descriptions
	
	  Deployment Repository
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	
	  descriptions
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	
	  design
	
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	              -   5.3.1.1 Building Blocks in Architecture Design
	              -   5.3.1.2 Building Block Design
	
	  detail
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.3 TOGAF Enterprise Metamodel in Detail
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	
	  Detailed Design Repository
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	
	  developing
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	
	  diagram
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
	          -   3.6.2 Phase A: Architecture Vision
	              -   Value Chain Diagram
	              -   Solution Concept Diagram
	              -   Business Model Diagram
	          -   3.6.3 Phase B: Business Architecture
	              -   Business Footprint Diagram
	              -   Business Service/Information Diagram
	              -   Functional Decomposition Diagram
	              -   Product Lifecycle Diagram
	              -   Goal/Objective/Business Service Diagram
	              -   Business Use-Case Diagram
	              -   Organization Decomposition Diagram
	              -   Process Flow Diagram
	              -   Business Event Diagram
	          -   3.6.4 Phase C: Data Architecture
	              -   Conceptual Data Diagram
	              -   Logical Data Diagram
	              -   Data Dissemination Diagram
	              -   Data Security Diagram
	              -   Data Migration Diagram
	              -   Data Lifecycle Diagram
	          -   3.6.5 Phase C: Application Architecture
	              -   Application Communication Diagram
	              -   Application and User Location Diagram
	              -   Application Use-Case Diagram
	              -   Enterprise Manageability Diagram
	              -   Process/Application Realization Diagram
	              -   Software Engineering Diagram
	              -   Application Migration Diagram
	              -   Software Distribution Diagram
	          -   3.6.6 Phase D: Technology Architecture
	              -   Environments and Locations Diagram
	              -   Platform Decomposition Diagram
	              -   Processing Diagram
	              -   Networked Computing/Hardware Diagram
	              -   Network and Communications Diagram
	          -   3.6.7 Phase E: Opportunities and Solutions
	              -   Project Context Diagram
	              -   Benefits Diagram
	
	  dissemination
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Dissemination Diagram
	
	  distribution
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Software Distribution Diagram
	
	  document
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.3 Architecture Definition Document
	
	  Driver/Goal/Objective
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Driver/Goal/Objective Catalog
	
	  Driver/Goal/Objective catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Driver/Goal/Objective Catalog
	
	  drivers
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
snippet togaf_adm_DOCIX_d "d"
	
	  -   8. Phase D: Technology Architecture
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	
	  data
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   6.3 Steps
	      -   6.3.1 Select Reference Models, Viewpoints, and Tools
	          -   6.3.1.2 Identify Required Catalogs of Data Building Blocks
	      -   6.3.2 Develop Baseline Data Architecture Description
	      -   6.3.3 Develop Target Data Architecture Description
	      -   6.3.8 Finalize the Data Architecture
	  -   6.5 Approach
	      -   6.5.1 Data Structure
	      -   6.5.2 Key Considerations for Data Architecture
	      -   6.5.2.1 Data Management
	      -   6.5.2.2 Data Migration
	      -   6.5.2.3 Data Governance
	
	  Data Architecture
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	
	  data building blocks
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	
	  data entity
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.1 Data Structure
	
	  data governance
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.3 Data Governance
	
	  data management
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.1 Data Management
	
	  data migration
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.2 Data Migration
	
	  data structure
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.1 Data Structure
	
	  define
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.6 Define Scope
	          -   3.3.9 Define the Target Architecture Value Propositions
	              and KPIs
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.5 Define Candidate Roadmap Components
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.5 Define Candidate Roadmap Components
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.5 Define Candidate Roadmap Components
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.5 Define Candidate Roadmap Components
	
	  definition
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.9 Create/Update the Architecture Definition Document
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.9 Create/Update the Architecture Definition Document
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.9 Create/Update the Architecture Definition Document
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.9 Create/Update the Architecture Definition Document
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	
	  dependencies
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.6 Refine and Validate Dependencies
	
	  deploy
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.2 Deploy Monitoring Tools
	
	  deployment
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	          -   11.3.2 Identify Deployment Resources and Skills
	          -   11.3.3 Guide Development of Solutions Deployment
	
	  depth
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.2 Depth
	
	  depth, enterprise
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	      -   1.5.2 Depth
	
	  determine
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.1 Determine Overall Modeling Process
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.1 Determine Overall Modeling Process
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.1 Determine Overall Modeling Process
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.2 Determine Business Constraints for Implementation
	
	  Determine/Confirm
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.1 Determine/Confirm Key Corporate Change Attributes
	
	  develop
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.8 Develop Architecture Vision
	          -   3.3.11 Develop Statement of Architecture Work; Secure
	              Approval
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.2 Develop Baseline Business Architecture Description
	          -   4.3.3 Develop Target Business Architecture Description
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.2 Develop Baseline Data Architecture Description
	          -   6.3.3 Develop Target Data Architecture Description
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.2 Develop Baseline Application Architecture
	              Description
	          -   7.3.3 Develop Target Application Architecture Description
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.2 Develop Baseline Technology Architecture Description
	          -   8.3.3 Develop Target Technology Architecture Description
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.5 Develop Change Requirements to Meet Performance
	              Targets
	
	  developing
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.2 Developing the Baseline Description
	
	  development
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	          -   11.3.3 Guide Development of Solutions Deployment
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.2 Requirements Development
	
	  diagrams
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.4 Identify Required Diagrams
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.4 Identify Required Diagrams
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.4 Identify Required Diagrams
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.4 Identify Required Diagrams
	
	  document
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.9 Create/Update the Architecture Definition Document
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.9 Create/Update the Architecture Definition Document
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.9 Create/Update the Architecture Definition Document
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.9 Create/Update the Architecture Definition Document
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	
	  domains
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.4 Architecture Domains
	
	  drivers
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.1 Drivers for Change
	
	  drivers for change
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.1 Drivers for Change
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_D_Rationalizing_the_TOGAF_and_DPBoK_Standards "D: Rationalizing the TOGAF and DPBoK Standards"
	
	This appendix provides another view that might further clarify the
	answer to the question: “Is there a conceptual alignment of the TOGAF
	and DPBoK Standards?”
	
	The DPBoK Standard, Section 4.9: “Compatibility with Enterprise
	Architecture”, describes the connection between the digital enterprise
	and Enterprise Architecture as:
	
	  As part of the paradigm shift to digital, it is important to have a
	  clear understanding of which existing capabilities can be retired, and
	  which new ones will be needed. In some cases, organizations may need
	  to deal with all these changes while keeping their current legacy
	  platform and supporting applications. Integrating new capabilities
	  with existing ones in an effective and efficient way requires a clear
	  landscape and overall view of the organization context. This is
	  provided by Enterprise Architecture.
	
	— The DPBoK Standard
	
	The DPBoK Standard further identifies the following topic areas that can
	be used for aligning a digital enterprise and Enterprise Architecture
	concepts and practices:
	
	-   DPBoK alignment area: A systemic view of organizational reality,
	    capabilities, and dependencies
	
	-   DPBoK alignment area: Recognizing and communicating internal and
	    external context, integrating the “outside-in” and “inside-out”
	    views
	
	-   DPBoK alignment area: Driving strategic alignment and synergy among
	    organizational components
	
	-   DPBoK alignment area: Enabling innovation while also managing
	    technical debt
	
	The following subsections summarize the concepts in the TOGAF Standard
	that supports these alignment areas between the digital enterprise and
	Enterprise Architecture/the TOGAF Standard. Within the subsections we
	consider two aspects:
	
	-   Benefits aspect – considers the general benefits of Enterprise
	    Architecture which support the digital enterprise since the TOGAF
	    Standard has evolved specifically to realize them
	
	    This is accomplished by listing the benefits of Enterprise
	    Architecture that guide the content of the TOGAF Standard and
	    highlighting the specific benefits that relate to the digital
	    enterprise. Having said that, it isn’t a stretch to notice that all
	    the benefits of Enterprise Architecture relate to the digital
	    enterprise, at least indirectly. Consideration was given to
	    Enterprise Architecture benefits listed in Appendix A, Enterprise
	    Architecture Benefits.
	
	-   Enterprise Architecture services aspect – where proposed Enterprise
	    Architecture services, if deployed, would support the subject DPBoK
	    Standard alignment area
	
	    Consideration was given to the candidate Enterprise Architecture
	    services proposed for the TOGAF Standard listed in Appendix C,
	    Services Proposed for the TOGAF Standard.
	
	    Enterprise Architecture services are delivered by architects (or
	    someone in the role of architect) to provide Enterprise Architecture
	    capabilities. Careful consideration should be given to the matter of
	    whether a skilled architect is on a team to deliver those
	    capabilities. Especially in Contexts I and II, team dynamics work
	    best with skilled experts being on the team in contrast to being
	    engaged from an outside source. As the enterprise grows in
	    complexity to the Team of Teams and Enduring Enterprise levels, the
	    value of engaging external Enterprise Architecture services
	    increases.^([7])
	
	In looking at these aspects and their support for the DPBoK Standard
	alignment areas, we observe the following:
	
	-   Each of the following aspects lists benefits and proposed Enterprise
	    Architecture services for each of the DPBoK Standard alignment areas
	
	-   The elements in the lists support the notion of Enterprise
	    Architecture being a valuable asset for the digital enterprise, with
	    slight changes in the delivery of the Enterprise Architecture
	    capability needed
	
	-   It is recommended that the person in the role of Enterprise
	    Architect utilizes a service delivery model to provide Enterprise
	    Architecture services that help the company to realize the benefits
	    in a timely manner, one where delivery is done in support of the
	    digital enterprise tempo
	
snippet togaf_ea-capability-and-governance_DOCIX_e "  e"
	
	  -   2. Establishing an Architecture Capability
	      -   2.7 Phase E: Opportunities & Solutions
	
	  effective
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.2 Elements of an Effective Architecture Governance
	              Strategy
	
	  elements
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.2 Elements of an Effective Architecture Governance
	              Strategy
	
	  Engineering/Methods
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.8 System Engineering/Methods & Tools Checklist
	
	  Engineering/Overall
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	
	  enterprise
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.1 Infrastructure (Enterprise Productivity)
	                  Applications
	
	  environment
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Environment Management
	
	  establishing
	
	  -   2. Establishing an Architecture Capability
	
snippet togaf_introduction_DOCIX_EAI "  EAI"
	
	  -   3. Core Concepts
	      -   3.9 Interoperability
	
	  element
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.10 Data Element
	
	  elicitation
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.4 Requirements Elicitation and Understanding Services
	
	  end
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.13 End User
	
	  end user
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.13 End User
	
	  enterprise
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What is an enterprise?
	          -   Why is an Enterprise Architecture needed?
	          -   What are the benefits of an Enterprise Architecture?
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	          -   When should Enterprise Architecture be done?
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	      -   3.5.1 Enterprise Support Services
	      -   3.5.6 Enterprise Architecture Practice Development Support
	          Services
	  -   3.10 Enterprise Continuum
	  -   3.12 TOGAF Content Framework and Enterprise Metamodel
	  -   3.12.3 Enterprise Metamodel
	  -   3.12.4 Developing the Enterprise Metamodel
	
	  -   3.13 Establishing and Maintaining an Enterprise Architecture
	      Capability
	  -   3.18 Enterprise Agility
	
	  -   4. Definitions
	      -   4.42 Enterprise
	      -   4.43 Enterprise Architecture Service
	      -   4.44 Enterprise Continuum
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  enterprise agility
	
	  -   3. Core Concepts
	      -   3.18 Enterprise Agility
	
	  Enterprise Architecture
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What is an enterprise?
	
	  Enterprise Architecture service
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	  -   4. Definitions
	      -   4.43 Enterprise Architecture Service
	
	  Enterprise Continuum
	
	  -   3. Core Concepts
	      -   3.10 Enterprise Continuum
	  -   4. Definitions
	      -   4.44 Enterprise Continuum
	
	  Enterprise Metamodel
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	      -   3.12.1 Overview
	      -   3.12.3 Enterprise Metamodel
	
	  Enterprise Principles
	
	  -   3. Core Concepts
	      -   3.8 Architecture Principles
	
	  Enterprise Resource Planning system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  entity
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  environment management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  ERP
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  establishing
	
	  -   3. Core Concepts
	      -   3.13 Establishing and Maintaining an Enterprise Architecture
	          Capability
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  executive
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	
snippet togaf_introduction_C_Abbreviations_EAI "EAI"
	
	Enterprise Application Integration
	
snippet togaf_adm-techniques_DOCIX_Ease-of-Use "  Ease-of-Use"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 17: Ease-of-Use
	
	  enablement
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.1 Introduction
	          -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  engagement
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.4 Tailor Engagement Deliverables
	
	  enterprise
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 2: Maximize Benefit to the Enterprise
	  -   7. Interoperability Requirements
	      -   7.3 Enterprise Operating Model
	
	  enterprise operating model
	
	  -   7. Interoperability Requirements
	      -   7.3 Enterprise Operating Model
	
	  enterprise principles
	
	  -   2. Architecture Principles
	      -   2.1 Introduction
	
	  everybody's
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 3: Information Management is Everybody's
	                  Business
	
	  evolution
	
	  -   6. Migration Planning Techniques
	      -   6.4 Transition Architecture State Evolution Table
	
	  example
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	  -   5. Gap Analysis
	      -   5.3 Example
	
snippet togaf_introduction_C_Abbreviations_EDIFACT "EDIFACT"
	
	(United Nations) Electronic Data Interchange For Administration,
	Commerce, and Transport
	
snippet togaf_applying-the-adm_DOCIX_engagement "  engagement"
	
	  -   2. Applying Iteration to the ADM
	      -   2.3 Classes of Architecture Engagement
	
	  enterprise
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
snippet togaf_introduction_C_Abbreviations_ERP "ERP"
	
	Enterprise Resource Planning
	
snippet togaf_info_establishing-an-eateam_Establishing_an_EA_Team "Establishing an EA Team"
	
	This page describes the guidance provided in the TOGAF Standard to
	support establishment of an EA team.
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document is written for the Enterprise |
	| The TOGAF Leader’s     | Architecture (EA) Capability Leader, the    |
	| Guide to Establishing  | person who is tasked to lead the effort to  |
	| and Evolving an EA     | establish or evolve an EA Capability. It    |
	| Capability             | presents advice on establishing an EA       |
	|                        | Capability that aligns to a set of          |
	|                        | requirements and expectations that are      |
	|                        | specific to each enterprise. It proposes an |
	|                        | approach for the standing-up and            |
	|                        | enhancement of an enterprise’s EA           |
	|                        | Capability based upon established best      |
	|                        | practices. This approach follows a          |
	|                        | configured path through the TOGAF           |
	|                        | Architecture Development Method (ADM).      |
	+------------------------+---------------------------------------------+
	
snippet togaf_introduction_C_Abbreviations_ETL "ETL"
	
	Extract, Transform, Load
	
snippet togaf_architecture-content_DOCIX_e "  e"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	
	  Energistics
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Industry Architectures
	
	  engineering
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Software Engineering Diagram
	
	  enterprise
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.3 Enterprise Metamodel
	  -   1.4 The Enterprise Continuum
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	  -   2.2 TOGAF Enterprise Metamodel Vision
	  -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	
	  -   2.3 TOGAF Enterprise Metamodel in Detail
	  -   2.4 TOGAF Enterprise Metamodel Entities
	  -   2.5 TOGAF Enterprise Metamodel Attributes
	  -   2.6 TOGAF Enterprise Metamodel Relationships
	
	  -   3. Architectural Artifacts
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.2 Architecture Views and Architecture Viewpoints in
	              Enterprise Architecture
	
	          -   3.6.5 Phase C: Application Architecture
	              -   Enterprise Manageability Diagram
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.16 Organizational Model for Enterprise Architecture
	  -   6. Enterprise Continuum
	  -   6.2 Enterprise Continuum and Architecture Re-Use
	  -   6.3 Constituents of the Enterprise Continuum
	  -   6.4 Enterprise Continuum in Detail
	  -   6.5 The Enterprise Continuum and the ADM
	  -   6.6 The Enterprise Continuum and Your Organization
	  -   6.6.2 Your Enterprise
	
	  -   7. Architecture Repository
	      -   7.8 The Enterprise Repository
	
	  Enterprise Continuum
	
	  -   1. Introduction
	      -   1.4 The Enterprise Continuum
	  -   6. Enterprise Continuum
	
	  Enterprise Manageability diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Enterprise Manageability Diagram
	
	  Enterprise Metamodel
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.1 Overview
	      -   1.2.3 Enterprise Metamodel
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	
	  Enterprise Metamodel, attributes
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.5 TOGAF Enterprise Metamodel Attributes
	
	  Enterprise Metamodel, detail
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.3 TOGAF Enterprise Metamodel in Detail
	
	  Enterprise Metamodel, entities
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.4 TOGAF Enterprise Metamodel Entities
	
	  Enterprise Metamodel, overview
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.2 TOGAF Enterprise Metamodel Vision
	          -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	
	  Enterprise Metamodel, relationships
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.6 TOGAF Enterprise Metamodel Relationships
	
	  Enterprise Metamodel, vision
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.2 TOGAF Enterprise Metamodel Vision
	
	  Enterprise Repository
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.8 The Enterprise Repository
	
	  entities
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.4 TOGAF Enterprise Metamodel Entities
	
	  Entity/Business
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Business Function Matrix
	
	  Entity/Data
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Data Component Catalog
	
	  Environment diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Environments and Locations Diagram
	
	  environments
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Environments and Locations Diagram
	
	  eTOM
	
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	          -   7.3.1 Overview
	
	  event
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Event Diagram
	
	  example
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	          -   3.1.1 Simple Example of an Architecture Viewpoint and
	              Architecture View
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.1 Example of Architecture Views and Architecture
	              Viewpoints
	
	  external
	
	  -   7. Architecture Repository
	      -   7.9 External Repositories
	      -   7.9.1 External Reference Models
	      -   7.9.2 External Standards
	
snippet togaf_adm_DOCIX_e "e"
	
	  -   9. Phase E: Opportunities & Solutions
	
	  each
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	
	  EAP
	
	  -   5. Phase C: Information Systems Architectures
	      -   5.2 Approach
	
	  elaborate
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	          -   3.3.7 Confirm and Elaborate Architecture Principles,
	              including Business Principles
	
	  emerging
	
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	          -   8.5.1 Emerging Technologies
	
	  emerging technologies
	
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	          -   8.5.1 Emerging Technologies
	
	  enterprise
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.1 The ADM, Enterprise Continuum, and Architecture
	              Repository
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.1 Reference Materials External to the Enterprise
	      -   2.3 Steps
	          -   2.3.1 Scope the Enterprise Organizations Impacted
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	      -   2.5 Approach
	          -   2.5.1 Enterprise
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.1 Reference Materials External to the Enterprise
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.1 Reference Materials External to the Enterprise
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.1 Reference Materials External to the Enterprise
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.1 Reference Materials External to the Enterprise
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.1 Reference Materials External to the Enterprise
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.1 Reference Materials External to the Enterprise
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.1 Reference Materials External to the Enterprise
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.1 Reference Materials External to the Enterprise
	      -   11.3 Steps
	          -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.1 Reference Materials External to the Enterprise
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  establish
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	          -   2.3.4 Identify and Establish Architecture Principles
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.1 Establish the Architecture Project
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.1 Establish Value Realization Process
	
	  estimate
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	
	  evaluate
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.4 Evaluate Capabilities
	
	  evaluation
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	
	  external
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.1 Reference Materials External to the Enterprise
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.1 Reference Materials External to the Enterprise
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.1 Reference Materials External to the Enterprise
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.1 Reference Materials External to the Enterprise
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.1 Reference Materials External to the Enterprise
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.1 Reference Materials External to the Enterprise
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.1 Reference Materials External to the Enterprise
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.1 Reference Materials External to the Enterprise
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.1 Reference Materials External to the Enterprise
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.1 Reference Materials External to the Enterprise
	
snippet togaf_ea-capability-and-governance_DOCIX_f "  f"
	
	  -   2. Establishing an Architecture Capability
	      -   2.8 Phase F: Migration Planning
	
	  factors
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.1 Architecture Governance — Key Success Factors
	
	  framework
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	      -   3.2 Architecture Governance Framework
	      -   3.2.1 Architecture Governance Framework — Conceptual Structure
	      -   3.2.2 Architecture Governance Framework — Organizational
	          Structure
	
	  function
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.3 Contract between Architecting Function and Business
	              Stakeholders
	
snippet togaf_adm-techniques_DOCIX_factor "  factor"
	
	  -   6. Migration Planning Techniques
	      -   6.1 Implementation Factor Catalog
	  -   8. Business Transformation Readiness Assessment
	      -   8.2 Determine Readiness Factors
	      -   8.3 Present Readiness Factors
	      -   8.4 Assess Readiness Factors
	      -   8.4.1 Readiness Factor Vision
	      -   8.4.2 Readiness Factor Rating
	      -   8.4.3 Readiness Factor Risks & Actions
	
	  footnotes
	
	  -   7. Interoperability Requirements
	      -   7.6 Reconciling Interoperability Requirements with Potential
	          Solutions
	          -   Footnotes
	
snippet togaf_introduction_C_Abbreviations_FICO "FICO"
	
	Fair Isaac Corporation
	
snippet togaf_introduction_DOCIX_financial_management "  financial management"
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  FlowTM
	
	  -   4. Definitions
	      -   4.25 Boundaryless Information FlowTM
	
	  footnotes
	
	  -   1. Introduction
	      -   1.4 Why Join The Open Group?
	          -   Footnotes
	  -   2. The TOGAF Documentation Set
	      -   2.3 The TOGAF Library
	          -   Footnotes
	
	  foundation
	
	  -   4. Definitions
	      -   4.45 Foundation Architecture
	
	  Foundation Architecture
	
	  -   4. Definitions
	      -   4.45 Foundation Architecture
	
	  framework
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What is an architecture framework?
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	      -   3.12.2 Content Framework
	  -   3.15 Using the TOGAF Standard with Other Frameworks
	  -   3.16 Using the TOGAF Framework with Different Architecture Styles
	
	  -   4. Definitions
	      -   4.13 Architecture Framework
	      -   4.46 Framework
	
	  function
	
	  -   4. Definitions
	      -   4.29 Business Function
	
snippet togaf_architecture-content_DOCIX_flow "  flow"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Process Flow Diagram
	
	  footnotes
	
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   Footnotes
	
	  footprint
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Footprint Diagram
	
	  foundation
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Foundation Architecture
	          -   6.4.2 Solutions Continuum
	              -   Foundation Solutions
	
	  Foundation Architecture
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Foundation Architecture
	
	  Foundation Solutions
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Foundation Solutions
	
	  framework
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.2 Content Framework
	      -   1.2.4 The TOGAF Content Framework
	  -   1.3 Content Framework and the TOGAF ADM
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.21 Tailored Architecture Framework
	
	  function
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Business Function Matrix
	
	  functional
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Functional Decomposition Diagram
	
	  Functional Decomposition diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Functional Decomposition Diagram
	
snippet togaf_guides_microservices-architecture_Footnotes "Footnotes"
	
	[1] Refer to: https://www.openapis.org/.
	
	[]return to top of page
	
snippet togaf_master-data-management_Footnotes "Footnotes"
	
	[1] Figure 1 is inspired by Michael Porter’s value chain (see Referenced
	Documents) with specific focus on data to become a “data-driven”
	organization.
	
	[2] Refer to: https://gdpr.eu/gdpr-consent-requirements/.
	
snippet togaf_index_Footnotes "Footnotes"
	
	1. The TOGAF Library provides an online publicly available structured
	list of Guides, White Papers, and other resources. Refer to TOGAF
	Library at www.opengroup.org/togaf-library.
	
snippet togaf_reference-models_government-reference-model_Footnotes "Footnotes"
	
	[1] Refer to https://ec.europa.eu/ and https://www.e-codex.eu/.
	
snippet togaf_applying-the-adm_DOCIX_footnotes "  footnotes"
	
	  -   2. Applying Iteration to the ADM
	      -   2.6 Conclusions
	          -   Footnotes
	
	  framework
	
	  -   1. Introduction
	      -   1.1 Using the TOGAF Framework with Different Architecture
	          Styles
	
snippet togaf_adm-practitioners_15_Architecture_Governance_Footnotes "Footnotes"
	
	[1] See the definition of Enterprise in Chapter 2. The important concept
	to keep in mind is that the term “Enterprise” is used as a boundary of
	analysis.
	
	[2] For assistance customizing the TOGAF framework, see the TOGAF^(®)
	Leader’s Guide to Establishing and Evolving an EA Capability (see
	Referenced Documents), which provides in-depth commentary and guidance
	for executing the Preliminary Phase of the TOGAF ADM.
	
	[3] The TOGAF Library is available at
	https://publications.opengroup.org/togaf-library.
	
	[4] See
	https://psu.instructure.com/courses/1783235/files/77571925/download,
	August 12, 2008.
	
	[5] A common trap is getting into efforts to fix terminology by using a
	different synonym. This is always done when people have added meaning,
	or special conditions, to a word. Implementation means “the process of
	putting a decision or plan into effect”. Feel free to substitute
	transformation, change, program execution, or deployment if these words
	align with your preferences.
	
	[6] Refer to Hambrick & Fredrickson: Are you Sure you have a Strategy?
	and Mintzberg et al: Strategy Bites Back (see Referenced Documents) for
	a very good discussion of what a strategy is. For the purposes of this
	Guide, Hambrick’s position is found to be best suited. He focuses on
	what a strategy is used for and defines it as the central integrated,
	externally-oriented concept of how an Enterprise will achieve its
	objectives. A definition that architecture can support.
	
	[7] The term “superior architecture” is used to refer the architecture
	created for broader scope and purpose. For the Architecture to Support
	Portfolio, the Architecture to Support Strategy is the superior
	architecture. When traversing transition states, the reaffirmed Target
	Architecture is the superior architecture.
	
	[8] A well-run EA Landscape will maintain components, as well as
	associated guidance and constraints, through their lifecycle. A typical
	lifecycle is to be introduced as a candidate, approved through
	governance as target, then convert to current following an
	Implementation Project.
	
	[9] See “Managing your Enterprise Repository” in the TOGAF^(®) Leader’s
	Guide to Establishing and Evolving an EA Capability (see Referenced
	Documents).
	
	[10] “Oh that process, it is a P3M, don’t worry about it.”
	
	[11] For example, the term “strategy” is widely used; specifically
	within the OMG’s Business Motivation Model. A high fraction of people
	who use the BMM trip over the term strategy. It holds a subordinate
	element in the model and the definition does not immediately resonate
	with common English. The BMM strategy definition “represents the
	essential Course of Action to achieve Ends – Goals in particular; it is
	accepted as the right approach to achieve its Goals, given the
	environmental constraints and risks”.
	
	[12] The term “stakeholder” is one where many practitioners have
	preconceptions. Part of the problem is formal definitions having to be
	broad to ensure that they properly include all reasonably conceivable
	stakeholders. In this Guide where a formal definition doesn’t provide
	pragmatic guidance, it will move promptly to pragmatic guidance, and
	leave the discussion on semantic purity to others.
	
	The TOGAF Standard definition aligns with ISO/IEC/IEEE 42010:2011: “an
	individual, team, organization, or classes thereof, having an interest
	in an enterprise or system”.
	
	The Project Management Institute (PMI) definition is: “an individual,
	group, or organization, who may affect, be affected by, or perceive
	itself to be affected by a decision, activity, or outcome of a project”.
	
	[13] Tell the inhabitants of Whitehorse, Yukon Territory that they live
	in southern Canada. Technically correct, but not helpful to any
	conversation with someone who knows they live in the North.
	
	[14] See Customization of Architecture Contents and Metamodel in the
	TOGAF^(®) Leader’s Guide to Establishing and Evolving an EA Capability
	(see Referenced Documents), and Appendix B.
	
	[15] Refer to John Carver: Reinventing your Board (see Referenced
	Documents).
	
	[16] In the case of a control, it is always associated to the risk for
	the same reason.
	
	[17] See Process Model in the TOGAF^(®) Leader’s Guide to Establishing
	and Evolving an EA Capability (see Referenced Documents).
	
	[18] Refer to Hambrick & Fredrickson: Are you Sure you have a Strategy?
	(see Referenced Documents).
	
	[19] This Guide is cognizant of repeated efforts to draw distinctions
	between “Enterprise Architecture” and “Solution Architecture”, which
	seems to be driven by some attempts to associate EA to big thoughts and
	big initiatives. In practice it is a distinction that drives no changes
	in an effective EA team’s organization and approach. This Guide treats
	it as a distinction without a practical difference.
	
	[20] At several points in this Guide, and other papers from the same
	authors, there are very statements about effective architecture
	practice. These statements are drawn from the experience of the authors
	and reviewers. Gathering, maintaining, and analyzing pointless
	information is no different than establishing an EA team for the wrong
	purpose. Eventually, it will be fatal for the EA team.
	
	[21] Earlier this Guide used the term “end state”. In reality, there is
	no end state for an Enterprise, unless it is terminating its operations.
	The Guide also used “future state” to indicate lapse of time to achieve
	and experience the improvement. From this point onward this Guide will
	use “target state” to indicate that it is the foreseeable best case
	scenario the Enterprise is striving to achieve. Having achieved, the
	same concepts and approach for trade-off can be applied or fine-tuned to
	new scenarios.
	
	[22] American Productivity and Quality Center; refer to: www.apqc.org.
	
	[23] An Architecture Requirements Specification can be delivered through
	different levels of detail and in multiple ways. For clarity, this Guide
	distinguishes use of an architecture specification to address a
	stakeholder requirement, from a control to address a risk. The semantic
	distinction is used to assess for value. Typically, stakeholder
	requirements have an up-side, where risks have a downside. This Guide
	typically divides architecture specification into four types: Principle,
	used to provide guidance on how to think about the decision; Pattern,
	used to provide a reusable approach to the decision; Standard, used to
	specify a correct approach to the problem, and Rule, used to specify a
	correct answer and eliminate any decision. The level of constraint
	required determines the type used by the Practitioner.
	
	[24] Do not fixate on definition of the term “project” or what a project
	is. It is just an organizing effort for work to achieve an understood
	outcome. Your organization’s internal definition of a project, and the
	label used, will be unlikely to align with anyone else’s. My assistant
	refers to booking a flight as a project.
	
	[25] This does not suggest that one person does it all. Developing an EA
	is a team sport with specialist positions. Following the analogy, the
	team has to play the same game at the same time.
	
	[26] For the purpose of this discussion, this Guide uses “portfolio” to
	refer a collection of projects that work to a common outcome. Whether a
	Practitioner’s organization uses initiative, portfolio, program, or some
	combination will be determined by the organization’s approach to change,
	how it has structured its PMO, and how the Enterprise strategy is
	structured. It is not in the scope of this Guide to pursue the
	theoretical distinctions between appropriate use of these terms.
	
	[27] Refer to Jeff Conklin’s Wicked Problems & Social Complexity within
	Dialog Mapping (see Referenced Documents).
	
	[28] Use of the term “desired” is intentional to communicate the fact
	that it is difficult for a human to foresee and consider change
	parameters in the future. Until a consensus is reached across key
	decision-makers, data gathered during assessment is an opinion or a
	wish. Once confirmed, it becomes a candidate target state. Once funded
	or signed off, it becomes the target state.
	
	[29] Superior architecture is an architecture that constrains, guides,
	and directs population of the EA Landscape within the scope of the
	Request for Architecture Work. Architecture to Support Strategy is the
	superior architecture for Architecture to Support Portfolio.
	Architecture to Support Portfolio is the superior architecture for the
	Architecture Project. The Architecture Project is the superior
	architecture for Architecture to Support Solution Delivery.
	
	[30] Terms like “initiative”, “portfolio”, and “program” carry
	organizational connotations and often derail us from communicating the
	message. Most of the definitions derive from investment management
	concepts, which essentially states portfolio as a mix of assets that
	matches the objectives balancing risks against performance.
	
	As defined by the Project Management Institute: “A portfolio is a
	collection of programs, projects, and/or operations managed as a group.
	The components of a portfolio may not necessarily be interdependent or
	even related, but they are managed together as a group to achieve
	strategic objectives.” And: “A program is a group of related projects
	managed in a coordinated manner to obtain benefits not available from
	managing them individually.”
	
	According to Robert G. Cooper: “Portfolio is a dynamic collection of new
	and existing product or service development efforts, to allocate,
	de-prioritize, or regroup resources in response to dynamic
	opportunities, multiple goals, and strategic considerations,
	interdependence among projects, and multiple decision-makers and
	locations.”
	
	All of these definitions do not explicitly address the continuity and
	connectedness of the efforts in the context of an Enterprise. In order
	to stay away from such limitations, this Guide resorted to using “theme”
	to indicate that work packages should be grouped in such a way as to
	enable populating neighbors in the EA Landscape. One theme may populate
	the Operational Excellence capability landscape while another may
	populate the Financial Controls capability.
	
	[31] Is the Architecture Project in the Mojave Desert of the EA
	Landscape or in Abu Dhabi?
	
	[32] For a discussion of the different roles a Practitioner may play,
	see Section 11.3 and Section 15.2.
	
	[33] See Appendix F.
	
	[34] For a detailed discussion, read the referenced Open Group Guide:
	Integrating Risk and Security within a TOGAF^(®) Enterprise
	Architecture.
	
	[35] ISO/IEC 38500:2015: Information Technology – Governance of IT for
	the Organization.
	
	[36] Architecture Project Management: How to Manage an Architecture
	Project using the TOGAF^(®) Framework and Mainstream Project Management
	Methods (see Referenced Documents).
	
	[37] Refer to Kruchten: Architectural Blueprints – The “4+1” View Model
	of Software Architecture (see Referenced Documents).
	
	[38] See: http://businessmodelgeneration.com/canvas/bmc.
	
	[39] See www.omg.org/spec/BMM/Current/.
	
	[40] See www.omg.org/spec/BPMN/2.0/.
	
	[41] Refer to Kaplan and David: The Balanced Scorecard (see Referenced
	Documents).
	
	[42] See
	http://sloanreview.mit.edu/article/toyotas-secret-the-a3-report/.
	
	[43] See www.omg.org/spec/UML/2.5.
	
	[44] See Customization of Architecture Contents and Metamodel in the
	TOGAF^(®) Leader’s Guide to Establishing and Evolving an EA Capability
	(see Referenced Documents).
	
	^([45]) While this has been stressed in the guide, align to processes
	the EA Capability is expected to support based upon its purpose. Do not
	align to those it could support. Worst practice is to fret over linkage
	to processes the EA Capability could support.
	
snippet togaf_togaf-leaders-guide_13_Mapping_the_EA_Leaders_Guide_to_the_TOGAF_Framework_Footnotes "Footnotes"
	
	[1] The terms business, company, organization, and enterprise are often
	used interchangeably in various texts. This Guide uses the term
	Enterprise to refer to a logical entity that is taking part in an
	economic activity; i.e., one that involves some kind of risk/reward or
	new way of solving socio-economic problems. Likewise, the term
	organization is in reference to a group of personnel brought together to
	perform a set of tasks and deliver the outcomes defined for them. The
	term business is used to refer to the team that formulates and manages
	the outcomes that the Enterprise is set to do. And the term company is
	used only when it improves readability, though the definition remains
	that of an Enterprise.
	
	[2] The references in relation to this paragraph are as follows:
	
	-   The State of Enterprise Architecture in 2011, Forrester Research;
	    refer to:
	    https://go.forrester.com/blogs/11-11-28-the_state_of_enterprise_architecture_in_2011/
	-   The State of EA 2014: New Demands, Same Headcount, Forrester
	    Research; refer to:
	    www.forrester.com/report/The+State+Of+EA+2014+New+Demands+Same+Headcount/-/E-RES104542
	-   The State of EA 2016: Weak Enterprise Agendas Still a Fundamental
	    Problem, Forrester Research; refer to:
	    www.forrester.com/report/The+State+Of+EA+2016+Weak+Enterprise+Agendas+Still+A+Fundamental+Problem/-/E-RES121311
	-   Gartner 2015, EA Summit Proceedings; refer to: www.gartner.com
	-   Corporate Executive Board: see
	    www.cebglobal.com/blogs/the-ea-organization-3-0/ and
	    www.cebglobal.com/blogs/enterprise-architecture-you-dont-always-need-a-seat-at-the-table/
	
	[3] Gartner Clarifies the Definition of the Term “Enterprise
	Architecture” (see Referenced Documents).
	
	[4] Derived from a presentation entitled Enterprise Transformation – An
	Architecture-Based Approach, by William B Rouse at The Open Group
	Conference, January 2012.
	
	[5] Intraprise – a geographically or logically defined grouping of
	autonomous functions within an enterprise with functions not necessarily
	reaching outside the boundaries of the enterprise. Several intraprises
	constitute an enterprise.
	
	[6] Adapted from The Open Group White Paper: World-Class Enterprise
	Architecture and The Open Group White Paper: World-Class EA: A Leader’s
	Approach to Establishing and Evolving an EA Capability (see Referenced
	Documents).
	
	[7] The Open Group White Paper: World-Class Enterprise Architecture (see
	Referenced Documents).
	
	[8] Delivery is the act of taking something to a place. Deployment is
	organizing and sending people or things to be used for a particular
	purpose. Architecture is supporting the act of delivery. Value is
	realized upon deployment and use of a solution. Hence, the difference is
	use of terms.
	
	[9] The State of Enterprise Architecture in 2011, Forrester Research;
	refer to:
	https://go.forrester.com/blogs/11-11-28-the_state_of_enterprise_architecture_in_2011/.
	
	The State of EA 2014: New Demands, Same Headcount, Forrester Research;
	refer to:
	www.forrester.com/report/The+State+Of+EA+2014+New+Demands+Same+Headcount/-/E-RES104542
	
	The State of EA 2016: Weak Enterprise Agendas Still a Fundamental
	Problem, Forrester Research; refer to:
	www.forrester.com/report/The+State+Of+EA+2016+Weak+Enterprise+Agendas+Still+A+Fundamental+Problem/-/E-RES121311
	
	Gartner 2015, EA Summit Proceedings; refer to: www.gartner.com.
	
	Corporate Executive Board: see
	www.cebglobal.com/blogs/the-ea-organization-3-0/ and
	www.cebglobal.com/blogs/enterprise-architecture-you-dont-always-need-a-seat-at-the-table/.
	
	[10] How Competitive Forces Shape Strategy, by Michael E. Porter (see
	Referenced Documents).
	
	[11] The Business Model Canvas, by Alexander Osterwalder (see Referenced
	Documents).
	
	[12] This diagram is adapted from Enterprise Architecture as Strategy:
	Creating a Foundation for Business Execution, by Ross et al. (see
	Referenced Documents).
	
	[13] PMBOK^(®) Guide, 5th Edition, Figure 13-4, p.397 (see Referenced
	Documents).
	
	[14] Diffusion of Innovations (1st Edition), E.M. Rogers (see Referenced
	Documents).
	
	[15] The 2011 article Enterprise Architecture – Critical to Large
	Transformation Programs, by Suyog Mahendra Shah (see Referenced
	Documents).
	
	[16] Depth as used in this Guide relates to the level of detail each
	“purpose” architecture is scoped to explore based on its parent.
	Architecture for strategy scopes architecture for portfolio and cascades
	down. Architecture work for a particular purpose can be performed at any
	level of detail, although the extremes are rare. Always remember the
	distinction between scoping and outcome intent.
	
	[17] Successful Leaders are linguistically nimble. Often particular
	techniques place extreme pressure on a word. Technique practitioners
	will instinctively defend the technique’s value by defending the
	specialized use of key terminology. The term “function” is one such
	word.
	
	This Guide distinguishes between words used in a general manner and when
	a specialized meaning is required. For “function”, this Guide relies on
	a general meaning, referring to elements of an organization such as HR,
	Finance, Sales, Plant Management, and Operations as functions. See
	Section 4.2.3 on the function-based organization model or
	Merriam-Webster Dictionary’s first meaning for function: “the special
	purpose or activity for which a thing exists or is used”.
	
	Successful Leaders need to be able to seamlessly switch back and forth
	between the specialized language of particular techniques and the
	generalized language of everyday communication.
	
	[18] Building an Enterprise Architecture Practice: Tools, Tips, Best
	Practices, Ready-to-Use Insights, by Martin van den Berg and Marlies van
	Steenbergen (see Referenced Documents).
	
	[19] ISO/IEC 38500:2015: Information Technology – Governance of IT for
	the Organization (see Referenced Documents).
	
	[20] Corporate Governance: An Essential Guide for South African
	Companies, by Ramani Naidoo (see Referenced Documents).
	
	[21] The source for this material can be found at:
	www.applied-corporate-governance.com/best-corporate-governance-practice.html,
	adapted from Applied Corporate Governance (see Referenced Documents).
	
	[22] TOGAF^(®) and SABSA^(®) Integration (see Referenced Documents).
	
	[23] Derived from the ISO 31000 Risk Management standard (see Referenced
	Documents).
	
	[24] This figure is an abstracted view of the TOGAF Standard – ADM
	Techniques, Figure 3-1.
	
	[25] Derived from the World-Class Enterprise Architecture White Paper.
	
	[26] For more on blue ocean strategy, see Blue Ocean Strategy: How to
	Create Uncontested Marketspace and Make the Competition Irrelevant, by
	Kim and Mauborgne (see Referenced Documents). Do not confuse this with
	green field work. Some efforts may be green field within an enterprise,
	but the pattern may have been solved elsewhere. There is value in such
	cross-pollination, and the EA team will play the role of a trusted
	advisor.
	
	[27] While this has been stressed in the Guide, align to processes the
	EA Capability is expected to support based upon its purpose. Do not
	align to those it could support. Worst practice is to fret over linkage
	to processes the EA Capability could support.
	
snippet togaf_reference-models_digital-business-reference-model_Footnotes "Footnotes"
	
	[1] Refer to the OMG Business Motivation Model – see Referenced
	Documents.
	
	[2] Refer to SAFe^(®) Agile Product Delivery at:
	https://www.scaledagileframework.com/agile-product-delivery/.
	
snippet togaf_integrating-risk-and-security_5_Security_and_Risk_Concepts_in_the_TOGAF_ADM_Footnotes "Footnotes"
	
	[1] See Chapter 6 (pp.87-97) of the SABSA® Blue Book [2].
	
	[2] The Open Group published a Guide to the Trust Ecosystem in January
	2014 that describes the need for a trust ecosystem, a taxonomy for
	trust, as well as the impact of trust on business relationships and
	contracts (available at www.opengroup.org/library/g141).
	
	[3] This document addresses the TOGAF Standard, 10^(th) Edition which
	does not sustain a distinction between data and information. When your
	architecture makes a clear distinction, all references to data are
	appropriate for information.
	
snippet togaf_introduction_2_The_TOGAF_Documentation_Set_Footnotes "Footnotes"
	
	1. The TOGAF Library is a publicly accessible resource located at
	www.opengroup.org/togaf-library.
	
snippet togaf_introduction_1_Introduction_Footnotes "Footnotes"
	
	1. The TOGAF Library provides an online publicly available structured
	list of Guides, White Papers, and other resources. Refer to TOGAF
	Library at www.opengroup.org/togaf-library.
	
snippet togaf_digital-technology-adoption_Foundational_Factors "Foundational Factors"
	
	+-----------------------------------+-----------------------------------+
	| 1                                 | Vision                            |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has clarity on   |
	|                                   | how the digital technology        |
	|                                   | adoption will enable growth and   |
	|                                   | provide a sustained competitive   |
	|                                   | edge.                             |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has defined a    |
	|                                   | time period in which to achieve   |
	|                                   | the desired state with the        |
	|                                   | adoption of digital technology.   |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization fully            |
	|                                   | understands the consequence of    |
	|                                   | not adopting digital technology.  |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 2                                 | Sponsorship and Direction         |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has identified   |
	|                                   | and onboarded the executive       |
	|                                   | sponsor/sponsoring department and |
	|                                   | other key stakeholders.           |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The benefits of digital           |
	|                                   | technology are understood by the  |
	|                                   | executive sponsor and other key   |
	|                                   | stakeholders.                     |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has defined the  |
	|                                   | strategy, built an adoption       |
	|                                   | roadmap, and secured a funding    |
	|                                   | commitment.                       |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 3                                 | IT Capability                     |
	+-----------------------------------+-----------------------------------+
	| A                                 | The IT department has the         |
	|                                   | independent ability to assess the |
	|                                   | digital technology fitment,       |
	|                                   | utilization, and adoption process |
	|                                   | through the architecture board.   |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The IT department has the         |
	|                                   | internal skills to drive a Proof  |
	|                                   | of Concept (PoC) and pilot        |
	|                                   | followed by the organization-wide |
	|                                   | adoption of the digital           |
	|                                   | technology.                       |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | New digital technology helps the  |
	|                                   | organization to align with the    |
	|                                   | technology roadmap defined by the |
	|                                   | IT strategy.                      |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 4                                 | Culture                           |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization plans and        |
	|                                   | experiments with emerging         |
	|                                   | technologies regularly.           |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization embraces change  |
	|                                   | with minimal resistance to tackle |
	|                                   | obsolescence.                     |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has a structured |
	|                                   | organization change management    |
	|                                   | process.                          |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 5                                 | Scope and Scale                   |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has a            |
	|                                   | clearly-defined scope for digital |
	|                                   | technology adoption.              |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has a clear      |
	|                                   | understanding of areas where new  |
	|                                   | technology should be adopted and  |
	|                                   | areas where it may impact         |
	|                                   | positively.                       |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has a clear      |
	|                                   | understanding of the expected     |
	|                                   | outcomes and ways to achieve them |
	|                                   | with the defined scope.           |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 6                                 | Business Rationale                |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has a clear      |
	|                                   | understanding of key drivers for  |
	|                                   | embarking on the new digital      |
	|                                   | technology adoption journey.      |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has a vision of  |
	|                                   | the expected benefits.            |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has clarity on   |
	|                                   | the competitive advantage that    |
	|                                   | the adoption of digital           |
	|                                   | technology would bring.           |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 7                                 | Implementation Approach           |
	+-----------------------------------+-----------------------------------+
	| A                                 | The impact of digital technology  |
	|                                   | on the existing ecosystem is      |
	|                                   | outlined; integration points and  |
	|                                   | outcome-based objectives are      |
	|                                   | clearly defined.                  |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has well-defined |
	|                                   | business and IT change management |
	|                                   | processes that are followed with  |
	|                                   | discipline and governed by the    |
	|                                   | respective change assessment      |
	|                                   | board.                            |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has a            |
	|                                   | well-defined way of               |
	|                                   | experimentation or implementation |
	|                                   | for any given digital technology. |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_introduction_C_Abbreviations_FTE "FTE"
	
	Full-Time Equivalent
	
snippet togaf_adm_DOCIX_f "f"
	
	  -   10. Phase F: Migration Planning
	
	  finalize
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.8 Finalize the Business Architecture
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.8 Finalize the Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.8 Finalize the Application Architecture
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.8 Finalize the Technology Architecture
	
	  formal
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.7 Conduct Formal Stakeholder Review
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.7 Conduct Formal Stakeholder Review
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.7 Conduct Formal Stakeholder Review
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.7 Conduct Formal Stakeholder Review
	
	  formal stakeholder review
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.7 Conduct Formal Stakeholder Review
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.7 Conduct Formal Stakeholder Review
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.7 Conduct Formal Stakeholder Review
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.7 Conduct Formal Stakeholder Review
	
	  formulate
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.8 Formulate Implementation and Migration Strategy
	
	  foundation
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.2 The ADM and the Foundation Architecture
	
	  framework
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	
	  framework(s
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  frameworks
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.2 Confirm Governance and Support Frameworks
	      -   2.5 Approach
	          -   2.5.5 Management Frameworks
	          -   2.5.6 Relating the Management Frameworks
	
	  functions
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	
snippet togaf_ea-capability-and-governance_DOCIX_g "  g"
	
	  -   2. Establishing an Architecture Capability
	      -   2.9 Phase G: Implementation Governance
	
	  general
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.1 General
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.1 General
	
	  generic
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.2 Nature of Governance
	              -   3.1.2.1 Governance: A Generic Perspective
	
	  governance
	
	  -   2. Establishing an Architecture Capability
	      -   2.9 Phase G: Implementation Governance
	  -   3. Architecture Governance
	  -   3.1 Introduction
	      -   3.1.1 Levels of Governance within the Enterprise
	      -   3.1.2 Nature of Governance
	      -   3.1.2.1 Governance: A Generic Perspective
	      -   3.1.2.2 Characteristics of Governance
	  -   3.1.3 Technology Governance
	  -   3.1.4 IT Governance
	  -   3.1.5 Architecture Governance: Overview
	  -   3.1.5.1 Architecture Governance Characteristics
	  -   3.1.5.2 Architecture Governance as a Board-Level Responsibility
	  -   3.1.5.3 The TOGAF Standard and Architecture Governance
	
	  -   3.2 Architecture Governance Framework
	  -   3.2.1 Architecture Governance Framework — Conceptual Structure
	  -   3.2.1.2 Key Architecture Governance Processes
	
	  -   3.2.2 Architecture Governance Framework — Organizational Structure
	
	  -   3.3 Architecture Governance in Practice
	  -   3.3.1 Architecture Governance — Key Success Factors
	  -   3.3.2 Elements of an Effective Architecture Governance Strategy
	  -   3.3.2.1 Architecture Governance and Corporate Politics
	
	  -   5. Architecture Contracts
	      -   5.3 Relationship to Architecture Governance
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.3 Governance and Personnel Scenarios
	
	  governance, characteristics
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.2 Nature of Governance
	              -   3.1.2.2 Characteristics of Governance
	
	  guidelines
	
	  -   6. Architecture Compliance
	      -   6.6 Architecture Compliance Review Guidelines
	
snippet togaf_introduction_DOCIX_gap "  gap"
	
	  -   4. Definitions
	      -   4.47 Gap
	
	  glossary
	
	  -   B. Glossary of Supplementary Definitions
	
	  governance
	
	  -   4. Definitions
	      -   4.14 Architecture Governance
	      -   4.30 Business Governance
	      -   4.48 Governance
	  -   B. Glossary of Supplementary Definitions
	      -   B.27 Operational Governance
	
	  Governance Repository
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  group
	
	  -   1. Introduction
	      -   1.4 Why Join The Open Group?
	  -   A. Referenced Documents
	      -   The Open Group TOGAF Series Guides
	      -   Other Publications from The Open Group
	
	  guides
	
	  -   A. Referenced Documents
	      -   The Open Group TOGAF Series Guides
	
snippet togaf_architecture-content_DOCIX_general "  general"
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	          -   3.2.1 General Guidelines
	
	  generic
	
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.2 Generic Characteristics
	
	  glossary
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Glossary Catalog
	
	  Goal/Objective/Business
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Goal/Objective/Business Service Diagram
	
	  Goal/Objective/Business Service diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Goal/Objective/Business Service Diagram
	
	  goals
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	
	  governance
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.15 Implementation Governance Model
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	      -   7.5.2 Contents of the Governance Repository
	
	  Governance Repository
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.5 Governance Repository
	
	  Governance Repository, contents of
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  guidelines
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	          -   3.2.1 General Guidelines
	
snippet togaf_info_general-howto_General_How-To_Information "General How-To Information"
	
	This page describes the general how-to information provided in the TOGAF
	Standard.
	
	+------------------------+------------------------------------------+
	| Document               | Summary                                  |
	+========================+==========================================+
	| TOGAF Series Guide: A  | This document is written for the         |
	| Practitioners’         | Practitioner, the person who is tasked   |
	| Approach to Developing | to develop, maintain, and use an EA.     |
	| Enterprise             | Choice of the term Practitioner is       |
	| Architecture Following | deliberate, reflecting the role, rather  |
	| the TOGAF ADM          | than one of the myriad job titles in an  |
	|                        | Enterprise the Practitioner may have.    |
	|                        |                                          |
	|                        | This document provides guidance on using |
	|                        | the TOGAF framework to develop,          |
	|                        | maintain, and use an Enterprise          |
	|                        | Architecture (EA). It is a companion to  |
	|                        | the TOGAF framework and is intended to   |
	|                        | bring the concepts and generic           |
	|                        | constructs in the TOGAF framework to     |
	|                        | life. It puts forward an approach to     |
	|                        | develop, maintain, and use an EA that    |
	|                        | aligns to a set of requirements and      |
	|                        | expectations of the stakeholders and     |
	|                        | enables predictable value creation.      |
	|                        |                                          |
	|                        | Developing, maintaining, and using an EA |
	|                        | requires deep interaction with several   |
	|                        | specialized functions such as strategy   |
	|                        | development, budgeting, benefits         |
	|                        | realization, portfolio management,       |
	|                        | program & project management, and        |
	|                        | operational units.                       |
	+------------------------+------------------------------------------+
	| TOGAF Series Guide:    | This document is written for individuals |
	| Using the TOGAF        | who are undertaking the roles of both    |
	| Standard in the        | Enterprise Architects and Digital        |
	| Digital Enterprise     | Practitioners. For Digital Practitioners |
	|                        | it communicates what architecture        |
	|                        | practices would help to grow their       |
	|                        | digital enterprise, and how to interact  |
	|                        | with the Enterprise Architecture         |
	|                        | community to get them. For those         |
	|                        | undertaking an Enterprise Architect role |
	|                        | it provides guidance on supporting the   |
	|                        | digital enterprise.                      |
	|                        |                                          |
	|                        | This document provides insight on how to |
	|                        | adapt the TOGAF Standard to support the  |
	|                        | digital enterprise in alignment with the |
	|                        | the Digital Practitioner Body of         |
	|                        | Knowledge™ Standard. It sets out to      |
	|                        | answer two overarching questions:        |
	|                        |                                          |
	|                        | 1.  How do Enterprise Architecture and   |
	|                        |     the TOGAF® Standard enable the       |
	|                        |     digital enterprise?                  |
	|                        |                                          |
	|                        | 2.  When and how to apply TOGAF methods  |
	|                        |     and best practices to guide a        |
	|                        |     digital enterprise through its       |
	|                        |     stages of development?               |
	+------------------------+------------------------------------------+
	| TOGAF Series Guide:    | This document provides a technique that  |
	| Digital Technology     | can be used by Enterprise Architects in  |
	| Adoption: A Guide to   | leading and guiding the process of       |
	| Readiness Assessment   | assessment for a Digital Transformation. |
	| and Roadmap            |                                          |
	| Development            | This document covers the critical tenets |
	|                        | of digital technology adoption for any   |
	|                        | organization. The application of this    |
	|                        | document is technology-neutral by        |
	|                        | design. The readers of this document     |
	|                        | will get a defined roadmap that could be |
	|                        | leveraged for adopting digital           |
	|                        | technology. The intent of the document   |
	|                        | is to facilitate readers with a          |
	|                        | readiness assessment which is to be used |
	|                        | as a toolkit.                            |
	+------------------------+------------------------------------------+
	
snippet togaf_introduction_C_Abbreviations_GOTS "GOTS"
	
	Government Off-The-Shelf applications
	
snippet togaf_adm-techniques_DOCIX_g "  g"
	
	  -   9. Risk Management
	      -   9.7 Risk Monitoring and Governance (Phase G)
	
	  gap
	
	  -   5. Gap Analysis
	
	  gap analysis
	
	  -   5. Gap Analysis
	
	  gaps
	
	  -   6. Migration Planning Techniques
	      -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	
	  GOTS
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 16: Technology Independence
	
	  governance
	
	  -   9. Risk Management
	      -   9.7 Risk Monitoring and Governance (Phase G)
	
snippet togaf_adm_DOCIX_g "g"
	
	  -   11. Phase G: Implementation Governance
	
	  gap
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.4 Perform Gap Analysis
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.4 Perform Gap Analysis
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.4 Perform Gap Analysis
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.4 Perform Gap Analysis
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	
	  gap analysis
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.4 Perform Gap Analysis
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.4 Perform Gap Analysis
	
	  general
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.1 General
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.1 General
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.1 General
	
	  goals
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.3 Confirm and Elaborate Business Goals, Business
	              Drivers, and Constraints
	
	  governance
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.2 Confirm Governance and Support Frameworks
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.3 Data Governance
	  -   11. Phase G: Implementation Governance
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.6 Manage Governance Process
	
	  group
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.9 Identify and Group Major Work Packages
	
	  guide
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.3 Guide Development of Solutions Deployment
	
	  guidelines
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.3 ADM and Supporting Guidelines and Techniques
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.3 Guidelines for Maintenance versus Architecture
	              Redesign
	
snippet togaf_ea-capability-and-governance_DOCIX_h "  h"
	
	  -   2. Establishing an Architecture Capability
	      -   2.10 Phase H: Architecture Change Management
	
	  hardware
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.1 Hardware and Operating System Checklist
	
	  hosting
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.4 Hosting, Data Types, and Sharing
	
snippet togaf_introduction_DOCIX_hardware "  hardware"
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.15 Hardware
	
	  how
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.2 How Much Does the TOGAF Standard Cost?
	
snippet togaf_introduction_C_Abbreviations_HIPAA "HIPAA"
	
	Health Insurance Portability and Accountability Act
	
snippet togaf_adm_DOCIX_h "h"
	
	  -   12. Phase H: Architecture Change Management
	
	  ICAM
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  ICOM
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  IDEF
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  identify
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.4 Identify and Establish Architecture Principles
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.2 Identify Stakeholders, Concerns, and Business
	              Requirements
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	              -   4.3.1.3 Identify Required Matrices
	              -   4.3.1.4 Identify Required Diagrams
	              -   4.3.1.5 Identify Types of Requirement to be Collected
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	              -   6.3.1.3 Identify Required Matrices
	              -   6.3.1.4 Identify Required Diagrams
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	              -   7.3.1.3 Identify Required Matrices
	              -   7.3.1.4 Identify Required Diagrams
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	              -   8.3.1.3 Identify Required Matrices
	              -   8.3.1.4 Identify Required Diagrams
	              -   8.3.1.5 Identify Types of Requirement to be Collected
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.9 Identify and Group Major Work Packages
	          -   9.3.10 Identify Transition Architectures
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.2 Identify Deployment Resources and Skills
	
snippet togaf_adm_DOCIX_i "i"
	
	  if
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  impacted
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.1 Scope the Enterprise Organizations Impacted
	
	  impacts
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.6 Resolve Impacts Across the Architecture Landscape
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.6 Resolve Impacts Across the Architecture Landscape
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.6 Resolve Impacts Across the Architecture Landscape
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.6 Resolve Impacts Across the Architecture Landscape
	
	  implement
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.5 Implement Business and IT Operations
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.7 Activate the Process to Implement Change
	
	  implementation
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.2 Determine Business Constraints for Implementation
	          -   9.3.8 Formulate Implementation and Migration Strategy
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	          -   10.3.6 Complete the Implementation and Migration Plan
	  -   11. Phase G: Implementation Governance
	  -   11.3 Steps
	      -   11.3.6 Perform Post-Implementation Review and Close the
	          Implementation
	
	  implementation governance
	
	  -   11. Phase G: Implementation Governance
	
	  in
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	              -   2.3.6.1 Issues in Tools Standardization
	
	  including
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.7 Confirm and Elaborate Architecture Principles,
	              including Business Principles
	
	  incremental change
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  Industry Architectures
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.8 Architecture Repository
	
	  information
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.6 Applying Information Maps
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  information mapping
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	      -   4.5 Approach
	          -   4.5.6 Applying Information Maps
	
	  Information Systems Architecture
	
	  -   5. Phase C: Information Systems Architectures
	
	  inputs
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	      -   2.2.2 Non-Architectural Inputs
	      -   2.2.3 Architectural Inputs
	
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	      -   3.2.2 Non-Architectural Inputs
	      -   3.2.3 Architectural Inputs
	
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	      -   4.2.2 Non-Architectural Inputs
	      -   4.2.3 Architectural Inputs
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	      -   6.2.2 Non-Architectural Inputs
	      -   6.2.3 Architectural Inputs
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	      -   7.2.2 Non-Architectural Inputs
	      -   7.2.3 Architectural Inputs
	
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	      -   8.2.2 Non-Architectural Inputs
	      -   8.2.3 Architectural Inputs
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	      -   9.2.2 Non-Architectural Inputs
	      -   9.2.3 Architectural Inputs
	
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	      -   10.2.2 Non-Architectural Inputs
	      -   10.2.3 Architectural Inputs
	
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	      -   11.2.2 Non-Architectural Inputs
	      -   11.2.3 Architectural Inputs
	
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	      -   12.2.2 Non-Architectural Inputs
	      -   12.2.3 Architectural Inputs
	
	  -   13. ADM Architecture Requirements Management
	      -   13.2 Inputs
	
	  integration
	
	  -   1. Introduction
	      -   1.7 Architecture Integration
	
	  interactions
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	
	  interoperability
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.5 Consolidate and Reconcile Interoperability
	              Requirements
	
	  issues
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	              -   2.3.6.1 Issues in Tools Standardization
	
	  IT
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.5 Implement Business and IT Operations
	
	  ITIL
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
snippet togaf_introduction_C_Abbreviations_ICAM "ICAM"
	
	Integrated Computer Aided Manufacturing
	
snippet togaf_introduction_C_Abbreviations_ICOM "ICOM"
	
	Inputs, Controls, Outputs, and Mechanisms/Resources
	
snippet togaf_introduction_C_Abbreviations_IDEF "IDEF"
	
	Integrated Computer Aided Manufacturing (ICAM) DEFinition
	
snippet togaf_adm-techniques_DOCIX_identification "  identification"
	
	  -   9. Risk Management
	      -   9.3 Risk Identification
	
	  identify
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.1 Identify Stakeholders
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.2 Identify Alternatives
	
	  idiom
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.1 Architecture Patterns and Design Patterns
	
	  implementation
	
	  -   6. Migration Planning Techniques
	      -   6.1 Implementation Factor Catalog
	  -   8. Business Transformation Readiness Assessment
	      -   8.6 Marketing the Implementation Plan
	
	  in
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	          -   10.2.3 Choose from Alternatives and Define in Detail
	
	  increments
	
	  -   6. Migration Planning Techniques
	      -   6.3 Architecture Definition Increments Table
	
	  independence
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 16: Technology Independence
	
	  information
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 3: Information Management is Everybody's
	                  Business
	
	  initial
	
	  -   9. Risk Management
	      -   9.4 Initial Risk Assessment
	
	  initial risk assessment
	
	  -   9. Risk Management
	      -   9.4 Initial Risk Assessment
	
	  intellectual
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 9: Protection of Intellectual Property
	
	  interoperability
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 21: Interoperability
	  -   7. Interoperability Requirements
	  -   7.2 Defining Interoperability
	  -   7.4 Refining Interoperability
	  -   7.5 Determining Interoperability Requirements
	  -   7.6 Reconciling Interoperability Requirements with Potential
	      Solutions
	
	  interoperability, categories
	
	  -   7. Interoperability Requirements
	      -   7.2 Defining Interoperability
	
	  interoperability, refining
	
	  -   7. Interoperability Requirements
	      -   7.4 Refining Interoperability
	
	  interoperability, requirements
	
	  -   7. Interoperability Requirements
	
	  is
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 3: Information Management is Everybody's
	                  Business
	          -   2.6.2 Data Principles
	              -   Principle 10: Data is an Asset
	              -   Principle 11: Data is Shared
	              -   Principle 12: Data is Accessible
	
	  IT
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 8: IT Responsibility
	
snippet togaf_introduction_C_Abbreviations_IEC "IEC"
	
	International Electrotechnical Commission
	
snippet togaf_introduction_C_Abbreviations_IEEE "IEEE"
	
	Institute of Electrical and Electronic Engineers
	
snippet togaf_architecture-content_DOCIX_III-RM "  III-RM"
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Common Systems Architectures
	
	  impact
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.18 Requirements Impact Assessment
	
	  implementation
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.14 Implementation and Migration Plan
	          -   4.2.15 Implementation Governance Model
	
	  Implementation and Migration Plan
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.14 Implementation and Migration Plan
	
	  Implementation Governance Model
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.15 Implementation Governance Model
	
	  in
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.3 TOGAF Enterprise Metamodel in Detail
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.2 Architecture Views and Architecture Viewpoints in
	              Enterprise Architecture
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	              -   5.3.1.1 Building Blocks in Architecture Design
	          -   5.3.2 Building Block Specification Process in the ADM
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	
	  industry
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Industry Architectures
	          -   6.4.2 Solutions Continuum
	              -   Industry Solutions
	
	  Industry Architectures
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Industry Architectures
	
	  Industry Solutions
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Industry Solutions
	
	  information
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Information Map
	
	  information map
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Information Map
	
	  interaction
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Interaction Matrix
	          -   3.6.5 Phase C: Application Architecture
	              -   Application Interaction Matrix
	
	  interface
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Interface Catalog
	
	  Interface catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Interface Catalog
	
	  interoperable
	
	  -   3. Architectural Artifacts
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.3 Need for a Common Language and Interoperable Tools
	              for Architecture Description
	
	  IT4IT Reference Architecture
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Foundation Solutions
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	          -   7.3.1 Overview
	      -   7.7 Solutions Landscape
	
	  ITIL
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Foundation Solutions
	
snippet togaf_introduction_C_Abbreviations_III-RM "III-RM"
	
	Integrated Information Infrastructure Reference Model
	
snippet togaf_digital-technology-adoption_Impact_Factors "Impact Factors"
	
	+-----------------------------------+-----------------------------------+
	| 8                                 | Business Model Adaptability       |
	+-----------------------------------+-----------------------------------+
	| A                                 | The business model and services   |
	|                                   | are flexible and able to adopt    |
	|                                   | new digital technology to gain    |
	|                                   | business benefits.                |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has the          |
	|                                   | turnaround time advantage to      |
	|                                   | acclimatize and enhance the       |
	|                                   | business model according to       |
	|                                   | changing customer demands.        |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | New digital technology helps to   |
	|                                   | modify or define the organization |
	|                                   | business model and services that  |
	|                                   | can provide growth and            |
	|                                   | competitive advantages.           |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 9                                 | Skills and Competence             |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has the right    |
	|                                   | skills and competence to          |
	|                                   | negotiate the steep learning      |
	|                                   | curve needed for adoption.        |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization’s management     |
	|                                   | understands the vision and has    |
	|                                   | the competence to enable the      |
	|                                   | journey towards Digital           |
	|                                   | Transformation.                   |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The digital technology skill is   |
	|                                   | readily available in the market   |
	|                                   | to allow organizations to quickly |
	|                                   | ramp-up and raise the capability. |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 10                                | Technology Maturity               |
	+-----------------------------------+-----------------------------------+
	| A                                 | The technology is at an           |
	|                                   | acceptable maturity level and     |
	|                                   | curve that can be adopted at      |
	|                                   | scale by the organization.        |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The technology has clearly-stated |
	|                                   | principles and clear use-cases    |
	|                                   | which will drive adoption and     |
	|                                   | usage in enterprises.             |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 11                                | Ecosystem                         |
	+-----------------------------------+-----------------------------------+
	| A                                 | There is an availability of an    |
	|                                   | ecosystem and partners (in the    |
	|                                   | value chain) who support the      |
	|                                   | adoption.                         |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The ecosystem is matured enough   |
	|                                   | with respect to standards,        |
	|                                   | protocols, open source            |
	|                                   | availability, and completeness of |
	|                                   | solution.                         |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 12                                | Governance and Compliance         |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has planned the  |
	|                                   | accountability and ownership with |
	|                                   | partners with respect to digital  |
	|                                   | technology.                       |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization meets all the    |
	|                                   | regulatory and geographical       |
	|                                   | compliances for the intended      |
	|                                   | use-cases.                        |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has a            |
	|                                   | well-defined process to govern    |
	|                                   | security and technology-specific  |
	|                                   | challenges to fully utilize the   |
	|                                   | digital technology capability.    |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| D                                 | The organization has              |
	|                                   | well-defined, formulated, tested, |
	|                                   | and practical approaches on       |
	|                                   | regulating the adoption of new    |
	|                                   | digital technology.               |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	
snippet togaf_ea-capability-and-governance_DOCIX_implementation "  implementation"
	
	  -   2. Establishing an Architecture Capability
	      -   2.9 Phase G: Implementation Governance
	
	  in
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	
	  information
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	
	  infrastructure
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.1 Infrastructure (Enterprise Productivity)
	                  Applications
	
	  integration
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.3 Application Integration Approach
	
	  ISACF
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	
	  IT
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	          -   3.1.4.1 An IT Controls Framework — COBIT
	
	  IT governance
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	          -   3.1.4 IT Governance
	
	  IT Governance Institute
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	
snippet togaf_introduction_DOCIX_in "  in"
	
	  -   3. Core Concepts
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	
	  increment
	
	  -   4. Definitions
	      -   4.35 Capability Increment
	
	  indicator
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
	  information
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	  -   4. Definitions
	      -   4.25 Boundaryless Information FlowTM
	      -   4.49 Information
	      -   4.50 Information Technology (IT)
	  -   B. Glossary of Supplementary Definitions
	      -   B.16 Information Domain
	      -   B.17 Information System (IS)
	
	  information domains
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.16 Information Domain
	
	  information system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.17 Information System (IS)
	
	  information technology
	
	  -   4. Definitions
	      -   4.50 Information Technology (IT)
	
	  interaction
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.18 Interaction
	      -   B.19 Interaction Model
	
	  interaction model
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.19 Interaction Model
	
	  interface
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.20 Interface
	
	  interoperability
	
	  -   3. Core Concepts
	      -   3.9 Interoperability
	  -   4. Definitions
	      -   4.51 Interoperability
	
	  is
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What is an enterprise?
	          -   Why is an Enterprise Architecture needed?
	          -   What is an architecture framework?
	  -   3. Core Concepts
	      -   3.1 What is the TOGAF Standard?
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	  -   B. Glossary of Supplementary Definitions
	      -   B.17 Information System (IS)
	
	  ISO/IEC/IEEE 42010:2011
	
	  -   3. Core Concepts
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	
	  IT
	
	  -   4. Definitions
	      -   4.50 Information Technology (IT)
	
	  iteration
	
	  -   3. Core Concepts
	      -   3.18 Enterprise Agility
	
snippet togaf_togaf-leaders-guide_INDEX_INDEX "1 Introduction"
	
	This Guide presents advice on establishing an Enterprise Architecture
	(EA) Capability that aligns to a set of requirements and expectations
	that are specific to each enterprise.[1] It proposes an approach for the
	standing-up and enhancement of an enterprise’s EA Capability based upon
	established best practices. This approach follows a configured path
	through the TOGAF^(®) Architecture Development Method (ADM).
	
	This Guide is written for the EA Capability Leader, the person who is
	tasked to lead the effort to establish or evolve an EA Capability. We
	have selected the term Leader deliberately to reflect the role rather
	than any one of the myriad titles in an enterprise the Leader may have.
	This Guide is structured to provide the context, content, and rationale
	behind choices and steps that an EA Leader can consult at any point in
	time to set up, operate, and improve the value extracted from the
	practice of EA in the organization. A high-functioning EA Capability
	optimizes Boundaryless Information Flow™ within and between enterprises
	based on open standards and global interoperability.
	
	Practicing EA requires in-depth interaction with several specialized
	functions such as strategy development, HR policies, and corporate
	accounting. This Guide:
	
	-   Introduces key topics of concern
	-   Defines the terms related to the topic
	-   Shows the terms that are related to an EA Capability
	-   Discusses what the Leader needs to know
	-   Describes what the Leader should do with this knowledge
	
	This Guide transitions its focus between setting up a new EA Capability
	practice and evolving or re-establishing the practice. It is presented
	this way to reflect the reality of the state of EA prevalent in the
	industry at the time of writing.
	
	This Guide is divided into six parts.
	
	Part 1 (this part) is the introduction, including an assessment of the
	state of EA, definitions, and key concepts used in this Guide.
	
	Parts 2 and 3 present a narrative that leads the reader through a series
	of topics and related steps to assist in stepping back from the current
	operational context to seek a broader perspective. Ideally, the contents
	of these first two parts should form a companion to the TOGAF ADM or
	similar architecture development processes, methods, or frameworks that
	an enterprise may choose to adopt. This Guide takes this approach
	deliberately. It focuses on outcomes without being distracted by
	implementation or evolution. This is done by simply focusing on what
	must be done and what needs to be achieved out of the steps.
	
	Part 4 covers adoption of the EA Capability. This includes preparation
	and initiation activities required to establish or enhance the EA
	Capability that would be relevant to an enterprise.
	
	Part 5 shows a simple mapping of how the TOGAF ADM can be practically
	used. This follows a “configuration” of the TOGAF ADM for architecting
	and establishing an EA Capability. It serves as an example to show how
	the TOGAF ADM could be customized to address the purpose for which an EA
	Capability is being established.
	
	Part 6 contains appendices.
	
	Not all scenarios or related fields discussed in this Guide will be
	relevant for every enterprise, and especially in the first attempts at
	creating an EA Capability. Establishing any capability is an iterative
	process. This Guide is intended as a starting point to create or evolve
	an EA Capability, when the purpose for performing EA changes, or when
	the charter for a team changes.
	
	Even though this Guide has a logical structure, it is not designed as a
	simple task-list. The depth and detail of every step taken by the EA
	Leader is iterative, and the only variable is time spent for each step.
	As with all change work, listing what you need to know is not the same
	as defining the level of detail in documentation. This Guide provides a
	concise summary of what you need to know to establish the EA Capability
	in Table 9.
	
	It is the EA Leader’s judgment to consider the level of depth and
	documentation and how to iterate in a manner that best suits an
	enterprise. The intent of this Guide is that you read Chapter 4
	(Enterprise Context and EA Context) and Chapter 5 (Business Objectives
	for the EA Capability) before making any judgment call on the approach
	to building an EA Capability.
	
	Experience has shown that there is no one right EA Capability model.
	There are numerous examples of EA Capability being focused on strategy
	or portfolio or project or a combination of these. EA Capability has
	been aligned to organizational change leaders, supporting specific
	transformation efforts, or has focused on continuous improvement and
	change or embedded within an IT organization. This Guide will help the
	Leader of an EA Capability to identify an approach that is:
	
	-   Appropriate to the enterprise
	-   Appropriate to the context of the EA Capability
	-   Appropriate to the purpose of the EA Capability
	
	This Guide presents a tailored approach to establish and evolve EA
	Capability, aligned to the TOGAF Preliminary Phase. The EA Capability is
	designed to deliver architectures for a purpose and to drive effective
	change. However, when presenting the concepts supporting each of the
	steps, the Guide presents a few leading alternative techniques and
	approaches. It is up to the Leader to identify and employ concepts or
	school of thought that best meets the needs of the enterprise.
	
	The importance of aligning an enterprise’s context to its purpose is
	paramount. It is dubious to suggest that there is a single, correct
	approach to align context to purpose and this Guide makes no
	suppositions to that effect.
	
snippet togaf_ea-capability-and-governance_INDEX_INDEX "Enterprise Architecture Capability and Governance"
	
snippet togaf_architecture-content_INDEX_INDEX "Architecture Content"
	
snippet togaf_applying-the-adm_INDEX_INDEX "Applying the ADM"
	
snippet togaf_adm-practitioners_INDEX_INDEX "1 Introduction"
	
snippet togaf_adm_INDEX_INDEX "-   1. Introduction"
	    -   1.1 ADM Overview
	        -   1.1.1 The ADM, Enterprise Continuum, and Architecture
	            Repository
	        -   1.1.2 The ADM and the Foundation Architecture
	        -   1.1.3 ADM and Supporting Guidelines and Techniques
	    -   1.2 Architecture Development Cycle
	        -   1.2.1 Key Points
	        -   1.2.2 Basic Structure
	    -   1.3 Adapting the ADM
	    -   1.4 Architecture Governance
	    -   1.5 Scoping the Architecture
	        -   1.5.1 Breadth
	        -   1.5.2 Depth
	        -   1.5.3 Time Period
	        -   1.5.4 Architecture Domains
	    -   1.6 Architecture Alternatives
	        -   1.6.1 Method
	    -   1.7 Architecture Integration
	    -   1.8 Summary
snippet togaf_applying-the-adm_DOCIX_integration "  integration"
	
	  -   4. Architecture Partitioning
	      -   4.3 Integration
	
	  iteration
	
	  -   2. Applying Iteration to the ADM
	  -   2.2 Iteration Cycles
	  -   2.5 Iteration Considerations
	  -   2.5.1 Iteration between ADM Cycles
	  -   2.5.2 Iteration within an ADM Cycle
	
	  iteration cycles
	
	  -   2. Applying Iteration to the ADM
	      -   2.2 Iteration Cycles
	
	  iteration of the ADM
	
	  -   2. Applying Iteration to the ADM
	
snippet togaf_introduction_C_Abbreviations_IoT "IoT"
	
	Internet of Things
	
snippet togaf_introduction_C_Abbreviations_ISACA "ISACA"
	
	Information Systems Audit and Control Association
	
snippet togaf_introduction_C_Abbreviations_ISACF "ISACF"
	
	Information Systems Audit and Control Foundation
	
snippet togaf_introduction_C_Abbreviations_ISO "ISO"
	
	International Standards Organization
	
snippet togaf_introduction_C_Abbreviations_IT "IT"
	
	Information Technology
	
snippet togaf_introduction_C_Abbreviations_ITGI "ITGI"
	
	IT Governance Institute
	
snippet togaf_introduction_C_Abbreviations_ITIL "ITIL"
	
	Information Technology Infrastructure Library
	
snippet togaf_introduction_C_Abbreviations_ITPMF "ITPMF"
	
	IT Portfolio Management Facility
	
snippet togaf_introduction_C_Abbreviations_J2EE "J2EE"
	
	Java 2 Platform, Enterprise Edition
	
snippet togaf_adm-techniques_DOCIX_Java "  Java"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 16: Technology Independence
	
snippet togaf_introduction_DOCIX_join "  join"
	
	  -   1. Introduction
	      -   1.4 Why Join The Open Group?
	
snippet togaf_adm_DOCIX_k "k"
	
	  key
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	          -   1.2.1 Key Points
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.1 Determine/Confirm Key Corporate Change Attributes
	
	  KPIs
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.9 Define the Target Architecture Value Propositions
	              and KPIs
	
snippet togaf_introduction_DOCIX_key "  key"
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
	  Key Performance Indicator
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
	  kind
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	  -   4. Definitions
	      -   4.57 Model Kind
	
	  KPI
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
snippet togaf_ea-capability-and-governance_DOCIX_key "  key"
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   3.2.1.1 Key Concepts
	              -   3.2.1.2 Key Architecture Governance Processes
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	              -   3.2.2.2 Key Areas
	      -   3.3 Architecture Governance in Practice
	          -   3.3.1 Architecture Governance — Key Success Factors
	
	  known
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Dispensation (also known as Waiver)
	
snippet togaf_introduction_C_Abbreviations_KPI "KPI"
	
	Key Performance Indicator
	
snippet togaf_adm_DOCIX_l "l"
	
	  landscape
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.6 Resolve Impacts Across the Architecture Landscape
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.6 Resolve Impacts Across the Architecture Landscape
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.6 Resolve Impacts Across the Architecture Landscape
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.6 Resolve Impacts Across the Architecture Landscape
	
	  learned
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	
	  lessons
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.7 Complete the Architecture Development Cycle and
	              Document Lessons Learned
	
	  lessons learned process
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.1 Drivers for Change
	
	  logical data component
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.1 Data Structure
	
	  logical data model
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
snippet togaf_introduction_C_Abbreviations_LAN "LAN"
	
	Local Area Network
	
snippet togaf_introduction_DOCIX_landscape "  landscape"
	
	  -   4. Definitions
	      -   4.15 Architecture Landscape
	
	  level
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.1 Contextual Abstraction Level
	          -   3.7.2 Conceptual Abstraction Level
	          -   3.7.3 Logical Abstraction Level
	          -   3.7.4 Physical Abstraction Level
	      -   3.18 Enterprise Agility
	  -   4. Definitions
	      -   4.16 Architecture Level
	
	  library
	
	  -   2. The TOGAF Documentation Set
	      -   2.1 Structure of the TOGAF Documentation Set
	          -   The TOGAF Library
	      -   2.3 The TOGAF Library
	  -   4. Definitions
	      -   4.76 Standards Library
	      -   4.87 Viewpoint Library
	
	  lifecycle
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.22 Lifecycle
	
	  logical
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.3 Logical Abstraction Level
	  -   4. Definitions
	      -   4.52 Logical
	
snippet togaf_architecture-content_DOCIX_landscape "  landscape"
	
	  -   7. Architecture Repository
	      -   7.2 Architecture Landscape
	      -   7.7 Solutions Landscape
	
	  language
	
	  -   3. Architectural Artifacts
	      -   3.3 Views, Tools, and Languages
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.3 Need for a Common Language and Interoperable Tools
	              for Architecture Description
	
	  library
	
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	      -   7.4 Standards Library
	      -   7.4.4 Standards Classification within the Standards Library
	
	  lifecycle
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Product Lifecycle Diagram
	          -   3.6.4 Phase C: Data Architecture
	              -   Data Lifecycle Diagram
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.3 Standards Lifecycle
	
	  location
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Location Catalog
	          -   3.6.5 Phase C: Application Architecture
	              -   Application and User Location Diagram
	
	  Location catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Location Catalog
	
	  Location diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Environments and Locations Diagram
	
	  locations
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Environments and Locations Diagram
	
	  logical
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Logical Data Diagram
	
	  Logical Data diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Logical Data Diagram
	
snippet togaf_applying-the-adm_DOCIX_landscape "  landscape"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	  -   3.2 Architecture Landscape
	  -   3.4 Organizing the Architecture Landscape to Understand the State
	      of the Enterprise
	
	  levels
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.3 Developing Architectures at Different Levels
	
snippet togaf_adm-techniques_DOCIX_law "  law"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 7: Compliance with Law
	
snippet togaf_ea-capability-and-governance_DOCIX_levels "  levels"
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	
snippet togaf_adm_DOCIX_m "m"
	
	  maintenance
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.3 Guidelines for Maintenance versus Architecture
	              Redesign
	
	  major
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.9 Identify and Group Major Work Packages
	
	  manage
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.3 Manage Risks
	          -   12.3.6 Manage Governance Process
	
	  management
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.5 Management Frameworks
	          -   2.5.6 Relating the Management Frameworks
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.1 Data Management
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	  -   12. Phase H: Architecture Change Management
	  -   12.3 Steps
	      -   12.3.4 Provide Analysis for Architecture Change Management
	  -   12.5 Approach
	      -   12.5.2 Enterprise Architecture Change Management Process
	
	  -   13. ADM Architecture Requirements Management
	
	  management frameworks
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  map
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.5 Applying the Organization Map
	          -   4.5.6 Applying Information Maps
	
	  materials
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.1 Reference Materials External to the Enterprise
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.1 Reference Materials External to the Enterprise
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.1 Reference Materials External to the Enterprise
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.1 Reference Materials External to the Enterprise
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.1 Reference Materials External to the Enterprise
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.1 Reference Materials External to the Enterprise
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.1 Reference Materials External to the Enterprise
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.1 Reference Materials External to the Enterprise
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.1 Reference Materials External to the Enterprise
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.1 Reference Materials External to the Enterprise
	
	  matrices
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.3 Identify Required Matrices
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.3 Identify Required Matrices
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.3 Identify Required Matrices
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.3 Identify Required Matrices
	
	  maturity
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	
	  MDA
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	
	  mdash
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  meet
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.5 Develop Change Requirements to Meet Performance
	              Targets
	
	  method
	
	  -   1. Introduction
	      -   1.6 Architecture Alternatives
	          -   1.6.1 Method
	
	  migration
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.2 Key Considerations for Data Architecture
	              -   6.5.2.2 Data Migration
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.8 Formulate Implementation and Migration Strategy
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	  -   10. Phase F: Migration Planning
	  -   10.3 Steps
	      -   10.3.1 Confirm Management Framework Interactions for the
	          Implementation and Migration Plan
	      -   10.3.4 Prioritize the Migration Projects through the Conduct
	          of a Cost/Benefit Assessment and Risk Validation
	      -   10.3.6 Complete the Implementation and Migration Plan
	
	  Migration Planning
	
	  -   10. Phase F: Migration Planning
	
	  mitigation
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	
	  Model-Driven Architecture
	
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	
	  modeling
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.1 Determine Overall Modeling Process
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.1 Determine Overall Modeling Process
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.1 Determine Overall Modeling Process
	
	  modeling process
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  modeling techniques
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  models
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	
	  monitoring
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.2 Deploy Monitoring Tools
	
snippet togaf_introduction_DOCIX_maintaining "  maintaining"
	
	  -   3. Core Concepts
	      -   3.13 Establishing and Maintaining an Enterprise Architecture
	          Capability
	
	  management
	
	  -   3. Core Concepts
	      -   3.19 Risk Management
	  -   4. Definitions
	      -   4.36 Communications and Stakeholder Management
	  -   B. Glossary of Supplementary Definitions
	      -   B.7 Configuration Management
	      -   B.12 Database Management System
	      -   B.34 Risk Management
	      -   B.40 Supplier Management
	
	  managing
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	
	  Managing Successful Programs
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	
	  matrix
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.24 Matrix
	
	  metadata
	
	  -   4. Definitions
	      -   4.53 Metadata
	
	  metamodel
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	      -   3.12.3 Enterprise Metamodel
	      -   3.12.4 Developing the Enterprise Metamodel
	
	  -   4. Definitions
	      -   4.54 Metamodel
	
	  metaview
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.25 Metaview
	
	  method
	
	  -   3. Core Concepts
	      -   3.4 Architecture Development Method
	  -   4. Definitions
	      -   4.11 Architecture Development Method (ADM)
	      -   4.55 Method
	
	  model
	
	  -   4. Definitions
	      -   4.17 Architecture Model
	      -   4.31 Business Model
	      -   4.56 Modeling
	      -   4.57 Model Kind
	      -   4.63 Reference Model (RM)
	  -   B. Glossary of Supplementary Definitions
	      -   B.19 Interaction Model
	
	  model kind
	
	  -   4. Definitions
	      -   4.57 Model Kind
	
	  modeling
	
	  -   4. Definitions
	      -   4.56 Modeling
	
	  MSP
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	
	  much
	
	  -   1. Introduction
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.2 How Much Does the TOGAF Standard Cost?
	
	  MVA
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.2 Design Support Services
	
snippet togaf_architecture-content_DOCIX_manageability "  manageability"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Enterprise Manageability Diagram
	
	  management
	
	  -   3. Architectural Artifacts
	      -   -   3.6.8 Requirements Management
	
	  map
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Capability Map
	              -   Value Stream Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Business Capability Map
	              -   Value Stream Map
	              -   Organization Map
	              -   Information Map
	
	  matrices
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
	  matrix
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   Catalog, Matrix, and Diagram Concept
	
	          -   3.6.3 Phase B: Business Architecture
	              -   Business Interaction Matrix
	              -   Actor/Role Matrix
	              -   Value Stream/Capability Matrix
	              -   Strategy/Capability Matrix
	              -   Capability/Organization Matrix
	          -   3.6.4 Phase C: Data Architecture
	              -   Data Entity/Business Function Matrix
	              -   Application/Data Matrix
	          -   3.6.5 Phase C: Application Architecture
	              -   Application/Organization Matrix
	              -   Role/Application Matrix
	              -   Application/Function Matrix
	              -   Application Interaction Matrix
	          -   3.6.6 Phase D: Technology Architecture
	              -   Application/Technology Matrix
	
	  metamodel
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.3 Enterprise Metamodel
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	  -   2.2 TOGAF Enterprise Metamodel Vision
	  -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	
	  -   2.3 TOGAF Enterprise Metamodel in Detail
	  -   2.4 TOGAF Enterprise Metamodel Entities
	  -   2.5 TOGAF Enterprise Metamodel Attributes
	  -   2.6 TOGAF Enterprise Metamodel Relationships
	
	  migration
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Migration Diagram
	          -   3.6.5 Phase C: Application Architecture
	              -   Application Migration Diagram
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.14 Implementation and Migration Plan
	
	  model
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Business Model Diagram
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.15 Implementation Governance Model
	          -   4.2.16 Organizational Model for Enterprise Architecture
	
	  model kind
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	
	  models
	
	  -   7. Architecture Repository
	      -   7.9 External Repositories
	          -   7.9.1 External Reference Models
	
	  MSP
	
	  -   4. Architecture Deliverables
	      -   4.1 Introduction
	
snippet togaf_ea-capability-and-governance_DOCIX_management "  management"
	
	  -   2. Establishing an Architecture Capability
	      -   2.10 Phase H: Architecture Change Management
	      -   2.11 Requirements Management
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Policy Management and Take-On
	              -   Environment Management
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Contract Documentation Management
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	          -   6.5.6 System Management Checklist
	
	  mdash
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.4 IT Governance
	              -   3.1.4.1 An IT Controls Framework — COBIT
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	      -   3.3 Architecture Governance in Practice
	          -   3.3.1 Architecture Governance — Key Success Factors
	
	  meaning
	
	  -   6. Architecture Compliance
	      -   6.2 Terminology: The Meaning of Architecture Compliance
	
	  meeting
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Minutes of Previous Meeting
	              -   Schedule of Meetings
	
	  method
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.6 Access Method
	
	  middleware
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.2 Software Services and Middleware Checklist
	
	  migration
	
	  -   2. Establishing an Architecture Capability
	      -   2.8 Phase F: Migration Planning
	
	  minutes
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Minutes of Previous Meeting
	
	  monitoring
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Monitoring and Reporting
	
snippet togaf_adm-techniques_DOCIX_management "  management"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 3: Information Management is Everybody's
	                  Business
	          -   2.6.4 Technology Principles
	              -   Principle 19: Responsive Change Management
	  -   3. Stakeholder Management
	  -   3.2 Approach to Stakeholder Management
	  -   3.3 Steps in the Stakeholder Management Process
	  -   3.3.3 Determine Stakeholder Management Approach
	
	  -   9. Risk Management
	
	  map
	
	  -   3. Stakeholder Management
	      -   3.4 Template Stakeholder Map
	
	  marketing
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.6 Marketing the Implementation Plan
	
	  matrix
	
	  -   6. Migration Planning Techniques
	      -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	
	  maturity model
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.3 Present Readiness Factors
	
	  maximize
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 2: Maximize Benefit to the Enterprise
	
	  method
	
	  -   10. Architecture Alternatives and Trade-Offs
	      -   10.2 Method
	
	  migration
	
	  -   6. Migration Planning Techniques
	  -   8. Business Transformation Readiness Assessment
	      -   8.5 Readiness and Migration Planning
	
	  Migration Planning
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.5 Readiness and Migration Planning
	
	  mitigation
	
	  -   9. Risk Management
	      -   9.5 Risk Mitigation and Residual Risk Assessment
	
	  model
	
	  -   7. Interoperability Requirements
	      -   7.3 Enterprise Operating Model
	
	  monitoring
	
	  -   9. Risk Management
	      -   9.7 Risk Monitoring and Governance (Phase G)
	
snippet togaf_introduction_C_Abbreviations_MDA "MDA"
	
	Model-Driven Architecture
	
snippet togaf_introduction_C_Abbreviations_MSA "MSA"
	
	Microservices Architecture
	
snippet togaf_introduction_C_Abbreviations_MSP "MSP"
	
	Managing Successful Programs
	
snippet togaf_introduction_C_Abbreviations_MVA "MVA"
	
	Minimum Viable Architecture
	
snippet togaf_adm_DOCIX_n "n"
	
	  NASCIO
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	
	  Non-Architectural
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.2 Non-Architectural Inputs
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.2 Non-Architectural Inputs
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.2 Non-Architectural Inputs
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.2 Non-Architectural Inputs
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.2 Non-Architectural Inputs
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.2 Non-Architectural Inputs
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.2 Non-Architectural Inputs
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.2 Non-Architectural Inputs
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.2 Non-Architectural Inputs
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.2 Non-Architectural Inputs
	
snippet togaf_introduction_C_Abbreviations_NAF "NAF"
	
	NATO Architecture Framework
	
snippet togaf_introduction_C_Abbreviations_NASCIO "NASCIO"
	
	National Association of State Chief Information Officers
	
snippet togaf_ea-capability-and-governance_DOCIX_nature "  nature"
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.2 Nature of Governance
	
snippet togaf_architecture-content_DOCIX_need "  need"
	
	  -   3. Architectural Artifacts
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.3 Need for a Common Language and Interoperable Tools
	              for Architecture Description
	
	  network
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Network and Communications Diagram
	
	  Network and Communications diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Network and Communications Diagram
	
	  networked
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Networked Computing/Hardware Diagram
	
	  Networked Computing/Hardware diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Networked Computing/Hardware Diagram
	
snippet togaf_introduction_DOCIX_needed "  needed"
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why is an Enterprise Architecture needed?
	
	  objective
	
	  -   4. Definitions
	      -   4.58 Objective
	
snippet togaf_adm_DOCIX_o "o"
	
	  objectives
	
	  -   2. Preliminary Phase
	      -   2.1 Objectives
	  -   3. Phase A: Architecture Vision
	      -   3.1 Objectives
	  -   4. Phase B: Business Architecture
	      -   4.1 Objectives
	  -   5. Phase C: Information Systems Architectures
	      -   5.1 Objectives
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.1 Objectives
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.1 Objectives
	  -   8. Phase D: Technology Architecture
	      -   8.1 Objectives
	  -   9. Phase E: Opportunities & Solutions
	      -   9.1 Objectives
	  -   10. Phase F: Migration Planning
	      -   10.1 Objectives
	  -   11. Phase G: Implementation Governance
	      -   11.1 Objectives
	  -   12. Phase H: Architecture Change Management
	      -   12.1 Objectives
	  -   13. ADM Architecture Requirements Management
	      -   13.1 Objectives
	
	  OMG
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	
	  operations
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.5 Implement Business and IT Operations
	
	  operations management
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  opportunities
	
	  -   9. Phase E: Opportunities & Solutions
	
	  Opportunities & Solutions
	
	  -   9. Phase E: Opportunities & Solutions
	
	  organization
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.5 Applying the Organization Map
	
	  organization map
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.2 Creating the Architecture Vision
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.5 Applying the Organization Map
	
	  organization mapping
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  organizational
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.2 Organizational Context
	
	  organizations
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.1 Scope the Enterprise Organizations Impacted
	
	  outputs
	
	  -   2. Preliminary Phase
	      -   2.4 Outputs
	  -   3. Phase A: Architecture Vision
	      -   3.4 Outputs
	  -   4. Phase B: Business Architecture
	      -   4.4 Outputs
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.4 Outputs
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.4 Outputs
	  -   8. Phase D: Technology Architecture
	      -   8.4 Outputs
	  -   9. Phase E: Opportunities & Solutions
	      -   9.4 Outputs
	  -   10. Phase F: Migration Planning
	      -   10.4 Outputs
	  -   11. Phase G: Implementation Governance
	      -   11.4 Outputs
	  -   12. Phase H: Architecture Change Management
	      -   12.4 Outputs
	  -   13. ADM Architecture Requirements Management
	      -   13.4 Outputs
	
	  overall
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.1 Determine Overall Modeling Process
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.1 Determine Overall Modeling Process
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.1 Determine Overall Modeling Process
	
	  overview
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	
snippet togaf_introduction_C_Abbreviations_OECD "OECD"
	
	Organization for Economic Co-operation and Development
	
snippet togaf_introduction_C_Abbreviations_OGC "OGC"
	
	UK Office of Government Commerce
	
snippet togaf_ea-capability-and-governance_DOCIX_OLA "  OLA"
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Compliance
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Compliance Assessments
	
	  operating
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.1 Hardware and Operating System Checklist
	
	  operation
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	
	  operational
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	              -   3.2.2.3 Operational Benefits
	
	  operational-level agreement
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Compliance
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Compliance Assessments
	
	  opportunities
	
	  -   2. Establishing an Architecture Capability
	      -   2.7 Phase E: Opportunities & Solutions
	
	  ORB
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.3 Application Integration Approach
	
	  organizational
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	
	  overview
	
	  -   2. Establishing an Architecture Capability
	      -   2.1 Overview
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.5 Architecture Governance: Overview
	      -   3.2 Architecture Governance Framework
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	              -   3.2.2.1 Overview
	  -   6. Architecture Compliance
	      -   6.4 Architecture Compliance Review Process
	          -   6.4.1 Overview
	
snippet togaf_introduction_C_Abbreviations_OLA "OLA"
	
	Operational-Level Agreement
	
snippet togaf_introduction_C_Abbreviations_OMB "OMB"
	
	Office of Management and Budget
	
snippet togaf_introduction_C_Abbreviations_OMG "OMG"
	
	Object Management Group
	
snippet togaf_introduction_DOCIX_open "  open"
	
	  -   1. Introduction
	      -   1.4 Why Join The Open Group?
	  -   A. Referenced Documents
	      -   The Open Group TOGAF Series Guides
	      -   Other Publications from The Open Group
	  -   B. Glossary of Supplementary Definitions
	      -   B.26 Open System
	
	  open system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.26 Open System
	
	  operational
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   B. Glossary of Supplementary Definitions
	      -   B.27 Operational Governance
	
	  operational governance
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.27 Operational Governance
	
	  orientation
	
	  -   4. Definitions
	      -   4.69 Service Orientation
	
	  overview
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	          -   3.12.1 Overview
	
snippet togaf_adm-techniques_DOCIX_operating "  operating"
	
	  -   7. Interoperability Requirements
	      -   7.3 Enterprise Operating Model
	
	  orientation
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 6: Service Orientation
	
	  overview
	
	  -   7. Interoperability Requirements
	      -   7.1 Overview
	
snippet togaf_architecture-content_DOCIX_opportunities "  opportunities"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	
	  organization
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Organization Decomposition Diagram
	              -   Organization Map
	  -   6. Enterprise Continuum
	      -   6.6 The Enterprise Continuum and Your Organization
	
	  Organization Decomposition diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Organization Decomposition Diagram
	
	  organization map
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Organization Map
	
	  Organization-Specific
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Organization-Specific Architectures
	          -   6.4.2 Solutions Continuum
	              -   Organization-Specific Solutions
	
	  Organization-Specific Architectures
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Organization-Specific Architectures
	
	  Organization-Specific Solutions
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	              -   Organization-Specific Solutions
	
	  Organization/Actor
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Organization/Actor Catalog
	
	  Organization/Actor catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Organization/Actor Catalog
	
	  organizational
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.16 Organizational Model for Enterprise Architecture
	
	  Organizational Model
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.16 Organizational Model for Enterprise Architecture
	
	  overview
	
	  -   1. Introduction
	      -   1.1 Overview
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	          -   1.2.1 Overview
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.1 Overview
	      -   2.2 TOGAF Enterprise Metamodel Vision
	          -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	  -   3. Architectural Artifacts
	      -   3.3 Views, Tools, and Languages
	          -   3.3.1 Overview
	  -   5. Building Blocks
	      -   5.1 Overview
	      -   5.2 Introduction to Building Blocks
	          -   5.2.1 Overview
	  -   6. Enterprise Continuum
	      -   6.1 Overview
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.3 Reference Library
	          -   7.3.1 Overview
	      -   7.4 Standards Library
	          -   7.4.1 Overview
	      -   7.5 Governance Repository
	          -   7.5.1 Overview
	      -   7.6 The Architecture Requirements Repository
	          -   7.6.1 Overview
	
snippet togaf_introduction_C_Abbreviations_ORB "ORB"
	
	Object Request Broker
	
snippet togaf_applying-the-adm_DOCIX_organizing "  organizing"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
	  overview
	
	  -   2. Applying Iteration to the ADM
	      -   2.1 Overview
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.1 Overview
	  -   4. Architecture Partitioning
	      -   4.1 Overview
	
snippet togaf_introduction_C_Abbreviations_OSI "OSI"
	
	Open Systems Interconnection
	
snippet togaf_introduction_C_Abbreviations_OSOA "OSOA"
	
	Open Service-Oriented Architecture
	
snippet togaf_introduction_A_Referenced_Documents_Other_Publications_from_The_Open_Group "Other Publications from The Open Group"
	
	-   A Practical Approach to Application Portfolio Consolidation using
	    the TOGAF® Standard, The Open Group Guide, July 2018 (G18B),
	    published by The Open Group; refer to www.opengroup.org/library/g18b
	-   Archi Banking Group: Combining the BIAN Reference Model, ArchiMate®
	    Modeling Notation, and the TOGAF® Framework, Case Study, March 2020
	    (Y201), published by The Open Group; refer to
	    www.opengroup.org/library/y201
	-   ArchiMate® 3.1 Specification, The Open Group Standard, November 2019
	    (C197), published by The Open Group; refer to
	    www.opengroup.org/library/c197
	-   Digital Practitioner Body of Knowledge^(TM) Standard (also known as
	    the DPBoK^(TM) Standard), The Open Group Standard, January 2020
	    (C196), published by The Open Group; refer to
	    www.opengroup.org/library/c196
	-   Exploring Synergies between TOGAF® and Frameworx, White Paper, May
	    2011 (W114), published by The Open Group; refer to
	    www.opengroup.org/library/w114
	-   Information Architecture: Business Intelligence & Analytics and
	    Metadata Management Reference Models, The Open Group Guide, January
	    2020 (G201), published by The Open Group; refer to
	    www.opengroup.org/library/g201
	-   Open Risk Analysis (O-RA), Version 2.0, The Open Group Standard,
	    November 2020 (C20A), published by The Open Group; refer to
	    www.opengroup.org/library/c20a
	-   Open Risk Taxonomy (O-RT), Version 3.0, The Open Group Standard,
	    November 2020 (C20B), published by The Open Group; refer to
	    www.opengroup.org/library/c20b
	-   The Open Agile Architecture^(TM) Standard, The Open Group Standard,
	    September 2020 (C208), published by The Open Group; refer to
	    www.opengroup.org/library/c208
	-   The Open Group IT4IT^(TM) Reference Architecture, Version 2.1, The
	    Open Group Standard, January 2017 (C171), published by The Open
	    Group; refer to www.opengroup.org/library/c171
	-   TOGAF® 9 and DoDAF 2.0, White Paper, July 2010 (W105), published by
	    The Open Group; refer to www.opengroup.org/library/w105
	-   TOGAF® and SABSA® Integration, White Paper, October 2011 (W117),
	    published by The Open Group; refer to www.opengroup.org/library/w117
	
snippet togaf_introduction_A_Referenced_Documents_Other_Referenced_Documents "Other Referenced Documents"
	
	-   A Guide to the Project Management Body of Knowledge (PMBOK®) Guide),
	    Project Management Institute; refer to
	    www.pmi.org/pmbok-guide-standards
	-   A Method for Identifying Process Re-Use Opportunities to Enhance the
	    Operating Model, M. de Vries, A. van der Merwe, P. Kotze, A. Gerber,
	    in proceedings of the 2011 IEEE International Conference on
	    Industrial Engineering and Engineering Management (IEEM)
	-   Analysis Patterns — Reusable Object Models, M. Fowler,
	    ISBN: 0-201-89542-0, Addison-Wesley
	-   ANSI/IEEE Std 1471-2000: Systems and Software Engineering —
	    Recommended Practice for Architectural Description of
	    Software-intensive Systems
	-   A Pattern Language: Towns, Buildings, Construction, Christopher
	    Alexander, ISBN: 0-19-501919-9, Oxford University Press, 1979
	-   Business Motivation Model^(TM) (BMM^(TM)), Object Management Group
	    (OMG); refer to www.omg.org/spec/BMM/About-BMM
	-   Business Process Modeling Notation^(TM) (BPMN^(TM)) Specification,
	    Object Management Group (OMG); refer to www.bpmn.org
	-   Business Transformation Enablement Program (BTEP), Canadian
	    Government; refer to https://purl.org/theopengroup/btep
	-   Control Objectives for Information and related Technology (COBIT®),
	    Version 4.0, IT Governance Institute, 2005
	-   Corporate Governance, Ranami Naidoo, ISBN: 1-919-903-0086, Double
	    Storey, 2002
	-   Design Patterns: Elements of Reusable Object-Oriented Software,
	    Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides,
	    ISBN: 0-201-63361-2, Addison-Wesley, October 1994
	-   Enterprise Architecture as Strategy, Jeanne Ross, Peter Weill,
	    David C. Robertson, ISBN: 1-59139-839-8, Harvard Business School
	    Press, 2006
	-   Enterprise Architecture Capability Maturity Model (ACMM), Version
	    1.2, United States Department of Commerce, December 2007
	-   Enterprise Architecture Maturity Model, Version 1.3, National
	    Association of State CIOs (NASCIO), December 2003
	-   Enterprise Architecture Planning (EAP): Developing a Blueprint for
	    Data, Applications, and Technology, Steven H. Spewak, Steven C.
	    Hill, ISBN: 0-47-159985-9, John Wiley & Sons, 1993
	-   Headquarters Air Force Principles for Information Management, US Air
	    Force, June 29, 1998
	-   ISO/IEC 20000:2011, Information Technology — Service Management
	-   ISO/IEC/IEEE 15288:2015, Systems and Software Engineering — System
	    Life Cycle Processes
	-   ISO/IEC/IEEE 42010:2011, Systems and Software Engineering —
	    Architecture Description
	-   IT Portfolio Management Facility^(TM) (ITPMF^(TM)) Specification,
	    Object Management Group (OMG); refer to www.omg.org/spec/ITPMF
	-   Manifesto for Agile Software Development, 2001; refer to
	    www.agilemanifesto.org
	-   Merriam-Webster Collegiate Dictionary, Merriam-Webster, English
	    Language, 11th Edition, April 2008, ISBN-10: 0877798095, ISBN-13:
	    978-0877798095; refer to www.merriam-webster.com
	-   Model-Driven Architecture® (MDA®) Specification, Object Management
	    (OMG); refer to www.omg.org/mda
	-   OECD Principles of Corporate Governance, Organization for Economic
	    Co-operation and Development, December 2001; refer to www.oecd.org
	-   Organigraphs: Drawing How Companies Really Work, H. Mintzberg and L.
	    Van der Heyden, Harvard Business Review, October 1999; refer to
	    https://hbr.org/1999/09/organigraphs-drawing-how-companies-really-work
	-   Pattern-Oriented Software Architecture: A System of Patterns, F.
	    Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, M. Stal,
	    ISBN: 0-471-95869-7, John Wiley & Sons, 1996
	-   Patterns and Software: Essential Concepts and Terminology, Brad
	    Appleton, 2000; refer to www.bradapp.com/docs/patterns-intro.html
	-   Re-usable Asset Specification (RAS), Version 2.2, Object Management
	    Group (OMG), November 2005; refer to www.omg.org/spec/RAS
	-   Service Component Architecture (SCA) Specification, developed by the
	    Open Service Oriented Architecture (OSOA) collaboration; refer to
	    www.oasis-opencsa.org/sca
	-   Service Data Objects (SDO) Specification, developed by the Open
	    Service Oriented Architecture (OSOA) collaboration; refer to
	    www.oasis-opencsa.org/sdo
	-   Software Processing Engineering Metamodel (SPEM^(TM)) Specification,
	    Version 2.0, Object Management Group (OMG), April 2008; refer to
	    www.omg.org/spec/SPEM
	-   Systems Modeling Language^(TM) (SysML®), Object Management Group
	    (OMG); refer to www.sysml.org
	-   The Art of Systems Architecting, Eberhardt Rechtin, Mark W. Maier,
	    2000
	-   The Oregon Experiment, Christopher Alexander, ISBN: 0-19-501824-9,
	    Oxford University Press, 1975
	-   The Timeless Way of Building, Christopher Alexander,
	    ISBN: 0-19-502402-8, Oxford University Press, 1979
	-   The Zachman® Framework, Zachman International; refer to
	    www.zachman.com
	-   UML Profile and Metamodel for Services (UPMS) RFP (OMG
	    soa/2006-09-09), Object Management Group (OMG), June 2007
	-   Unified Modeling Language^(TM) (UML®) Specification, Object
	    Management Group (OMG); refer to www.uml.org
	
snippet togaf_adm_DOCIX_p "p"
	
	  package
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.9 Identify and Group Major Work Packages
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	
	  perform
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.4 Perform Gap Analysis
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.4 Perform Gap Analysis
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.4 Perform Gap Analysis
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.4 Perform Gap Analysis
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	          -   11.3.6 Perform Post-Implementation Review and Close the
	              Implementation
	
	  performance
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.5 Develop Change Requirements to Meet Performance
	              Targets
	
	  period
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.3 Time Period
	
	  phase
	
	  -   2. Preliminary Phase
	  -   3. Phase A: Architecture Vision
	  -   4. Phase B: Business Architecture
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	  -   8. Phase D: Technology Architecture
	  -   9. Phase E: Opportunities & Solutions
	  -   10. Phase F: Migration Planning
	  -   11. Phase G: Implementation Governance
	  -   12. Phase H: Architecture Change Management
	
	  Phase A
	
	  -   3. Phase A: Architecture Vision
	
	  Phase B
	
	  -   4. Phase B: Business Architecture
	
	  Phase C
	
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  Phase D
	
	  -   8. Phase D: Technology Architecture
	
	  Phase E
	
	  -   9. Phase E: Opportunities & Solutions
	
	  Phase F
	
	  -   10. Phase F: Migration Planning
	
	  Phase G
	
	  -   11. Phase G: Implementation Governance
	
	  Phase H
	
	  -   12. Phase H: Architecture Change Management
	
	  phases
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	
	  physical data component
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.1 Data Structure
	
	  plan
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.1 Confirm Management Framework Interactions for the
	              Implementation and Migration Plan
	          -   10.3.6 Complete the Implementation and Migration Plan
	
	  planning
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.7 Planning for Enterprise Architecture/Business Change
	              Maturity Evaluation
	  -   10. Phase F: Migration Planning
	
	  points
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	          -   1.2.1 Key Points
	
	  portfolio management
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  Post-Implementation
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.6 Perform Post-Implementation Review and Close the
	              Implementation
	
	  preliminary
	
	  -   2. Preliminary Phase
	
	  Preliminary Phase
	
	  -   2. Preliminary Phase
	
	  PRINCE2
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  principles
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.4 Identify and Establish Architecture Principles
	      -   2.5 Approach
	          -   2.5.4 Principles
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.7 Confirm and Elaborate Architecture Principles,
	              including Business Principles
	
	  priorities
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	
	  prioritize
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  process
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.1 Determine Overall Modeling Process
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.1 Determine Overall Modeling Process
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.1 Determine Overall Modeling Process
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.1 Establish Value Realization Process
	          -   12.3.6 Manage Governance Process
	          -   12.3.7 Activate the Process to Implement Change
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  process modeling
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  process status
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	
	  process tailoring
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  Product Line Architecture
	
	  -   1. Introduction
	      -   1.3 Adapting the ADM
	
	  project
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.1 Establish the Architecture Project
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	
	  project management
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  projects
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  propositions
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.9 Define the Target Architecture Value Propositions
	              and KPIs
	
	  provide
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.4 Provide Analysis for Architecture Change Management
	
snippet togaf_introduction_DOCIX_package "  package"
	
	  -   4. Definitions
	      -   4.88 Work Package
	
	  packaged
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.28 Packaged Services
	
	  packaged services
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.28 Packaged Services
	
	  partition
	
	  -   3. Core Concepts
	      -   3.18 Enterprise Agility
	  -   4. Definitions
	      -   4.18 Architecture Partition
	
	  pattern
	
	  -   4. Definitions
	      -   4.59 Pattern
	
	  performance
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.21 Key Performance Indicator (KPI)
	
	  performance management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  period
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.42 Time Period
	
	  physical
	
	  -   3. Core Concepts
	      -   3.7 Architecture Abstraction
	          -   3.7.4 Physical Abstraction Level
	  -   4. Definitions
	      -   4.60 Physical
	
	  planning
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.5 Architecture Planning Services
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  platform
	
	  -   4. Definitions
	      -   4.5 Application Platform
	
	  portability
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.29 Portability
	
	  portfolio
	
	  -   4. Definitions
	      -   4.71 Service Portfolio
	  -   B. Glossary of Supplementary Definitions
	      -   B.30 Portfolio
	
	  practice
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.6 Enterprise Architecture Practice Development Support
	              Services
	
	  PRINCE2
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.31 PRINCE2
	
	  principle
	
	  -   3. Core Concepts
	      -   3.8 Architecture Principles
	  -   4. Definitions
	      -   4.19 Architecture Principle
	      -   4.61 Principle
	
	  product
	
	  -   4. Definitions
	      -   4.62 Product
	
	  program
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	      -   B.32 Program
	
	  project
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.33 Project
	
	  prompt
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	
	  publications
	
	  -   A. Referenced Documents
	      -   Other Publications from The Open Group
	
snippet togaf_applying-the-adm_DOCIX_partitioned "  partitioned"
	
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	
	  partitioning
	
	  -   4. Architecture Partitioning
	
	  phase
	
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	          -   4.2.1 Activities within the Preliminary Phase
	
	  preliminary
	
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	          -   4.2.1 Activities within the Preliminary Phase
	
snippet togaf_ea-capability-and-governance_DOCIX_partners "  partners"
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.2 Contract between Architecture Design and Development
	              Partners
	
	  personnel
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.3 Governance and Personnel Scenarios
	
	  perspective
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.2 Nature of Governance
	              -   3.1.2.1 Governance: A Generic Perspective
	
	  phase
	
	  -   2. Establishing an Architecture Capability
	      -   2.2 Phase A: Architecture Vision
	      -   2.3 Phase B: Business Architecture
	      -   2.4 Phase C: Data Architecture
	      -   2.5 Phase C: Application Architecture
	      -   2.6 Phase D: Technology Architecture
	      -   2.7 Phase E: Opportunities & Solutions
	      -   2.8 Phase F: Migration Planning
	      -   2.9 Phase G: Implementation Governance
	      -   2.10 Phase H: Architecture Change Management
	
	  planning
	
	  -   2. Establishing an Architecture Capability
	      -   2.8 Phase F: Migration Planning
	
	  policy
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Policy Management and Take-On
	
	  politics
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.2 Elements of an Effective Architecture Governance
	              Strategy
	              -   3.3.2.1 Architecture Governance and Corporate Politics
	
	  practice
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	
	  preparation
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.2 Preparation
	
	  previous
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Minutes of Previous Meeting
	
	  process
	
	  -   6. Architecture Compliance
	      -   6.4 Architecture Compliance Review Process
	
	  processes
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   3.2.1.2 Key Architecture Governance Processes
	
	  Processors/Servers/Clients
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.2 Processors/Servers/Clients
	
	  productivity
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.3 Applications Checklists
	              -   6.5.3.1 Infrastructure (Enterprise Productivity)
	                  Applications
	
	  purpose
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.1 Purpose
	
snippet togaf_adm-techniques_DOCIX_pattern "  pattern"
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.2 Content of a Pattern
	      -   4.2 Some Pattern Resources
	
	  pattern resources
	
	  -   4. Architecture Patterns
	      -   4.2 Some Pattern Resources
	
	  patterns
	
	  -   4. Architecture Patterns
	  -   4.1 Introduction
	      -   4.1.3 Terminology
	          -   4.1.3.1 Architecture Patterns and Design Patterns
	          -   4.1.3.2 Patterns and the Architecture Continuum
	          -   4.1.3.3 Patterns and Views
	          -   4.1.3.4 Patterns and Business Scenarios
	
	  patterns home page
	
	  -   4. Architecture Patterns
	      -   4.2 Some Pattern Resources
	
	  patterns-discussion FAQ
	
	  -   4. Architecture Patterns
	      -   4.2 Some Pattern Resources
	
	  phase
	
	  -   9. Risk Management
	      -   9.7 Risk Monitoring and Governance (Phase G)
	
	  plan
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.6 Marketing the Implementation Plan
	
	  planning
	
	  -   6. Migration Planning Techniques
	  -   8. Business Transformation Readiness Assessment
	      -   8.5 Readiness and Migration Planning
	
	  positions
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.2 Classify Stakeholder Positions
	
	  potential
	
	  -   7. Interoperability Requirements
	      -   7.6 Reconciling Interoperability Requirements with Potential
	          Solutions
	
	  present
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.3 Present Readiness Factors
	
	  primacy
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 1: Primacy of Principles
	
	  principle
	
	  -   2. Architecture Principles
	  -   2.2 Characteristics of Architecture Principles
	  -   2.3 Components of Architecture Principles
	  -   2.4 Developing Architecture Principles
	  -   2.4.1 Qualities of Principles
	
	  -   2.5 Applying Architecture Principles
	  -   2.6 Example Set of Architecture Principles
	  -   2.6.1 Business Principles
	  -   Principle 1: Primacy of Principles
	  -   Principle 2: Maximize Benefit to the Enterprise
	  -   Principle 3: Information Management is Everybody's Business
	  -   Principle 4: Business Continuity
	  -   Principle 5: Common Use Applications
	  -   Principle 6: Service Orientation
	  -   Principle 7: Compliance with Law
	  -   Principle 8: IT Responsibility
	  -   Principle 9: Protection of Intellectual Property
	
	  -   2.6.2 Data Principles
	  -   Principle 10: Data is an Asset
	  -   Principle 11: Data is Shared
	  -   Principle 12: Data is Accessible
	  -   Principle 13: Data Trustee
	  -   Principle 14: Common Vocabulary and Data Definitions
	  -   Principle 15: Data Security
	
	  -   2.6.3 Application Principles
	  -   Principle 16: Technology Independence
	  -   Principle 17: Ease-of-Use
	
	  -   2.6.4 Technology Principles
	  -   Principle 18: Requirements-Based Change
	  -   Principle 19: Responsive Change Management
	  -   Principle 20: Control Technical Diversity
	  -   Principle 21: Interoperability
	
	  process
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	
	  program
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.1 Introduction
	          -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  property
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 9: Protection of Intellectual Property
	
	  protection
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 9: Protection of Intellectual Property
	
snippet togaf_introduction_C_Abbreviations_PDF "PDF"
	
	Portable Document Format
	
snippet togaf_architecture-content_DOCIX_performance_measurement "  performance measurement"
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  phase
	
	  -   3. Architectural Artifacts
	      -   3.6 Architectural Artifacts by ADM Phase
	          -   3.6.1 Preliminary Phase
	          -   3.6.2 Phase A: Architecture Vision
	          -   3.6.3 Phase B: Business Architecture
	          -   3.6.4 Phase C: Data Architecture
	          -   3.6.5 Phase C: Application Architecture
	          -   3.6.6 Phase D: Technology Architecture
	          -   3.6.7 Phase E: Opportunities and Solutions
	
	  plan
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.12 Communications Plan
	          -   4.2.14 Implementation and Migration Plan
	
	  platform
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Platform Decomposition Diagram
	
	  Platform Decomposition diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Platform Decomposition Diagram
	
	  PMBOK
	
	  -   4. Architecture Deliverables
	      -   4.1 Introduction
	
	  portfolio
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Application Portfolio Catalog
	          -   3.6.6 Phase D: Technology Architecture
	              -   Technology Portfolio Catalog
	
	  preliminary
	
	  -   3. Architectural Artifacts
	      -   -   3.6.1 Preliminary Phase
	
	  PRINCE2
	
	  -   4. Architecture Deliverables
	      -   4.1 Introduction
	
	  principles
	
	  -   3. Architectural Artifacts
	      -   -   3.6.1 Preliminary Phase
	              -   Principles Catalog
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.4 Architecture Principles
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.1 Basic Principles
	
	  Principles catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.1 Preliminary Phase
	              -   Principles Catalog
	
	  process
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	          -   3.2.2 Architecture View Creation Process
	
	          -   3.6.3 Phase B: Business Architecture
	              -   Process Flow Diagram
	  -   5. Building Blocks
	      -   5.3 Building Blocks and the ADM
	          -   5.3.2 Building Block Specification Process in the ADM
	
	  Process Flow diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Process Flow Diagram
	
	  Process/Application
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Process/Application Realization Diagram
	
	  Process/Application Realization diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Process/Application Realization Diagram
	
	  Process/Event/Control/Product
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Process/Event/Control/Product Catalog
	
	  Process/Event/Control/Product catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Process/Event/Control/Product Catalog
	
	  processing
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Processing Diagram
	
	  Processing diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Processing Diagram
	
	  product
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Product Lifecycle Diagram
	
	  Product Lifecycle diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Product Lifecycle Diagram
	
	  project
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	              -   Project Context Diagram
	
	  Project Context diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	              -   Project Context Diagram
	
	  Project Portfolio
	
	  -   7. Architecture Repository
	      -   7.5 Governance Repository
	          -   7.5.2 Contents of the Governance Repository
	
	  purpose
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.2 Architecture Contract
	              -   Purpose
	          -   4.2.3 Architecture Definition Document
	              -   Purpose
	          -   4.2.4 Architecture Principles
	              -   Purpose
	          -   4.2.5 Architecture Repository
	              -   Purpose
	          -   4.2.6 Architecture Requirements Specification
	              -   Purpose
	          -   4.2.7 Architecture Roadmap
	              -   Purpose
	          -   4.2.8 Architecture Vision
	              -   Purpose
	          -   4.2.9 Business Principles, Business Goals, and Business
	              Drivers
	              -   Purpose
	          -   4.2.10 Capability Assessment
	              -   Purpose
	          -   4.2.11 Change Request
	              -   Purpose
	          -   4.2.12 Communications Plan
	              -   Purpose
	          -   4.2.13 Compliance Assessment
	              -   Purpose
	          -   4.2.14 Implementation and Migration Plan
	              -   Purpose
	          -   4.2.15 Implementation Governance Model
	              -   Purpose
	          -   4.2.16 Organizational Model for Enterprise Architecture
	              -   Purpose
	          -   4.2.17 Request for Architecture Work
	              -   Purpose
	          -   4.2.18 Requirements Impact Assessment
	              -   Purpose
	          -   4.2.20 Statement of Architecture Work
	              -   Purpose
	          -   4.2.21 Tailored Architecture Framework
	              -   Purpose
	
snippet togaf_introduction_C_Abbreviations_PMBOK "PMBOK"
	
	Project Management Body of Knowledge
	
snippet togaf_introduction_C_Abbreviations_PRINCE "PRINCE"
	
	PRojects in Controlled Environments
	
snippet togaf_introduction_C_Abbreviations_QoS "QoS"
	
	Quality of Service
	
snippet togaf_adm-techniques_DOCIX_qualities "  qualities"
	
	  -   2. Architecture Principles
	      -   2.4 Developing Architecture Principles
	          -   2.4.1 Qualities of Principles
	
snippet togaf_introduction_DOCIX_quality "  quality"
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.38 Service Quality
	
	  quality management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
snippet togaf_adm_DOCIX_r "r"
	
	  re-architecting change
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  readiness
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.5 Assess Readiness for Business Transformation
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.7 Confirm Readiness and Risk for Business
	              Transformation
	
	  realization
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.1 Establish Value Realization Process
	
	  reconcile
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.5 Consolidate and Reconcile Interoperability
	              Requirements
	
	  redesign
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.3 Guidelines for Maintenance versus Architecture
	              Redesign
	
	  reference
	
	  -   2. Preliminary Phase
	      -   2.2 Inputs
	          -   2.2.1 Reference Materials External to the Enterprise
	  -   3. Phase A: Architecture Vision
	      -   3.2 Inputs
	          -   3.2.1 Reference Materials External to the Enterprise
	  -   4. Phase B: Business Architecture
	      -   4.2 Inputs
	          -   4.2.1 Reference Materials External to the Enterprise
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.2 Inputs
	          -   6.2.1 Reference Materials External to the Enterprise
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.2 Inputs
	          -   7.2.1 Reference Materials External to the Enterprise
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.2 Inputs
	          -   8.2.1 Reference Materials External to the Enterprise
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	  -   9. Phase E: Opportunities & Solutions
	      -   9.2 Inputs
	          -   9.2.1 Reference Materials External to the Enterprise
	  -   10. Phase F: Migration Planning
	      -   10.2 Inputs
	          -   10.2.1 Reference Materials External to the Enterprise
	  -   11. Phase G: Implementation Governance
	      -   11.2 Inputs
	          -   11.2.1 Reference Materials External to the Enterprise
	  -   12. Phase H: Architecture Change Management
	      -   12.2 Inputs
	          -   12.2.1 Reference Materials External to the Enterprise
	
	  reference data
	
	  -   1. Introduction
	      -   1.4 Architecture Governance
	
	  reference models
	
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	
	  refine
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.6 Refine and Validate Dependencies
	
	  related
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	
	  relating
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.6 Relating the Management Frameworks
	
	  repository
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.1 The ADM, Enterprise Continuum, and Architecture
	              Repository
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.8 Architecture Repository
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.3 Architecture Repository
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.5 Approach
	          -   7.5.1 Architecture Repository
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	          -   8.5.2 Architecture Repository
	
	  Request for Architecture Work
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.1 General
	
	  required
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.2 Identify Required Catalogs of Business
	                  Building Blocks
	              -   4.3.1.3 Identify Required Matrices
	              -   4.3.1.4 Identify Required Diagrams
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.2 Identify Required Catalogs of Data Building
	                  Blocks
	              -   6.3.1.3 Identify Required Matrices
	              -   6.3.1.4 Identify Required Diagrams
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.2 Identify Required Catalogs of Application
	                  Building Blocks
	              -   7.3.1.3 Identify Required Matrices
	              -   7.3.1.4 Identify Required Diagrams
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	              -   8.3.1.3 Identify Required Matrices
	              -   8.3.1.4 Identify Required Diagrams
	
	  requirement
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.5 Identify Types of Requirement to be Collected
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.5 Identify Types of Requirement to be Collected
	
	  Requirement for Architecture Work
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.3 Requirements for Architecture Work
	
	  requirements
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.3 Requirements for Architecture Work
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.2 Identify Stakeholders, Concerns, and Business
	              Requirements
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	          -   9.3.5 Consolidate and Reconcile Interoperability
	              Requirements
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.5 Develop Change Requirements to Meet Performance
	              Targets
	  -   13. ADM Architecture Requirements Management
	  -   13.5 Approach
	      -   13.5.2 Requirements Development
	      -   13.5.3 Resources
	          -   13.5.3.2 Requirements Tools
	
	  requirements tools
	
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.2 Requirements Tools
	
	  resolve
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.6 Resolve Impacts Across the Architecture Landscape
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.6 Resolve Impacts Across the Architecture Landscape
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.6 Resolve Impacts Across the Architecture Landscape
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.6 Resolve Impacts Across the Architecture Landscape
	
	  resource
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.2 Identify Deployment Resources and Skills
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	
	  results
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	
	  review
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.7 Conduct Formal Stakeholder Review
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.7 Conduct Formal Stakeholder Review
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.7 Conduct Formal Stakeholder Review
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.7 Conduct Formal Stakeholder Review
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.3 Review and Consolidate Gap Analysis Results from
	              Phases B to D
	          -   9.3.4 Review Consolidated Requirements Across Related
	              Business Functions
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.4 Perform Enterprise Architecture Compliance Reviews
	          -   11.3.6 Perform Post-Implementation Review and Close the
	              Implementation
	
	  risk
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.7 Confirm Readiness and Risk for Business
	              Transformation
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.3 Manage Risks
	
	  roadmap
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.5 Define Candidate Roadmap Components
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.5 Define Candidate Roadmap Components
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.5 Define Candidate Roadmap Components
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.5 Define Candidate Roadmap Components
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.11 Create the Architecture Roadmap & Implementation
	              and Migration Plan
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	
	  roadmap components
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.5 Define Candidate Roadmap Components
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.5 Define Candidate Roadmap Components
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.5 Define Candidate Roadmap Components
	
snippet togaf_introduction_C_Abbreviations_RAS "RAS"
	
	Remote Access Services
	
snippet togaf_adm-techniques_DOCIX_rating "  rating"
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.4 Assess Readiness Factors
	          -   8.4.2 Readiness Factor Rating
	
	  readiness
	
	  -   8. Business Transformation Readiness Assessment
	  -   8.2 Determine Readiness Factors
	  -   8.3 Present Readiness Factors
	  -   8.4 Assess Readiness Factors
	  -   8.4.1 Readiness Factor Vision
	  -   8.4.2 Readiness Factor Rating
	  -   8.4.3 Readiness Factor Risks & Actions
	
	  -   8.5 Readiness and Migration Planning
	
	  readiness factors
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.2 Determine Readiness Factors
	
	  readiness planning
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.5 Readiness and Migration Planning
	
	  reconciling
	
	  -   7. Interoperability Requirements
	      -   7.6 Reconciling Interoperability Requirements with Potential
	          Solutions
	
	  refining
	
	  -   7. Interoperability Requirements
	      -   7.4 Refining Interoperability
	
	  requirements
	
	  -   7. Interoperability Requirements
	  -   7.5 Determining Interoperability Requirements
	  -   7.6 Reconciling Interoperability Requirements with Potential
	      Solutions
	
	  Requirements-Based
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 18: Requirements-Based Change
	
	  residual
	
	  -   9. Risk Management
	      -   9.5 Risk Mitigation and Residual Risk Assessment
	      -   9.6 Conduct Residual Risk Assessment
	
	  residual risk assessment
	
	  -   9. Risk Management
	      -   9.6 Conduct Residual Risk Assessment
	
	  resources
	
	  -   4. Architecture Patterns
	      -   4.2 Some Pattern Resources
	
	  responsibility
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 8: IT Responsibility
	
	  responsive
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 19: Responsive Change Management
	
	  risk
	
	  -   9. Risk Management
	  -   9.2 Risk Classification
	  -   9.3 Risk Identification
	  -   9.4 Initial Risk Assessment
	  -   9.5 Risk Mitigation and Residual Risk Assessment
	  -   9.6 Conduct Residual Risk Assessment
	  -   9.7 Risk Monitoring and Governance (Phase G)
	
	  risk assessment
	
	  -   9. Risk Management
	      -   9.4 Initial Risk Assessment
	
	  risk classification
	
	  -   9. Risk Management
	      -   9.2 Risk Classification
	
	  risk identification
	
	  -   9. Risk Management
	      -   9.3 Risk Identification
	
	  risk management
	
	  -   9. Risk Management
	
	  Risk Management Plan
	
	  -   9. Risk Management
	      -   9.3 Risk Identification
	
	  risk management, best practice
	
	  -   9. Risk Management
	      -   9.4 Initial Risk Assessment
	
	  risk monitoring
	
	  -   9. Risk Management
	      -   9.7 Risk Monitoring and Governance (Phase G)
	
	  risks
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.4 Assess Readiness Factors
	          -   8.4.3 Readiness Factor Risks & Actions
	
snippet togaf_architecture-content_DOCIX_Re-Use "  Re-Use"
	
	  -   6. Enterprise Continuum
	      -   6.2 Enterprise Continuum and Architecture Re-Use
	
	  realization
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Process/Application Realization Diagram
	
	  reference
	
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	      -   7.9 External Repositories
	          -   7.9.1 External Reference Models
	
	  Reference Library
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.3 Reference Library
	
	  relationships
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.6 TOGAF Enterprise Metamodel Relationships
	  -   6. Enterprise Continuum
	      -   6.6 The Enterprise Continuum and Your Organization
	          -   6.6.1 Relationships
	
	  repositories
	
	  -   7. Architecture Repository
	      -   7.9 External Repositories
	
	  repository
	
	  -   1. Introduction
	      -   1.5 The Architecture Repository
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.5 Architecture Repository
	  -   7. Architecture Repository
	  -   7.5 Governance Repository
	  -   7.5.2 Contents of the Governance Repository
	
	  -   7.6 The Architecture Requirements Repository
	  -   7.6.2 Contents of the Architecture Requirements Repository
	
	  -   7.8 The Enterprise Repository
	
	  request
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.11 Change Request
	          -   4.2.17 Request for Architecture Work
	
	  Request for Architecture Work
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.17 Request for Architecture Work
	
	  requirements
	
	  -   3. Architectural Artifacts
	      -   -   3.6.8 Requirements Management
	          -   Requirements Catalog
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.6 Architecture Requirements Specification
	          -   4.2.18 Requirements Impact Assessment
	  -   7. Architecture Repository
	      -   7.6 The Architecture Requirements Repository
	      -   7.6.2 Contents of the Architecture Requirements Repository
	
	  Requirements catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.8 Requirements Management
	              -   Requirements Catalog
	
	  Requirements Impact Assessment
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.18 Requirements Impact Assessment
	
	  roadmap
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.7 Architecture Roadmap
	
	  role
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Role Catalog
	
	  Role catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Role Catalog
	
	  Role/Application
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Role/Application Matrix
	
	  Role/Application matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Role/Application Matrix
	
snippet togaf_applying-the-adm_DOCIX_recency "  recency"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
snippet togaf_guides_index_Reference "Reference"
	
	1. SAFe/Agile definitions taken from the Agile Alliance Glossary; refer
	to: https://www.agilealliance.org/agile101/agile-glossary
	
	Last updated 2021-10-04 14:29:55 UTC
snippet togaf_introduction_DOCIX_reference "  reference"
	
	  -   4. Definitions
	      -   4.63 Reference Model (RM)
	
	  Reference Library
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  reference models
	
	  -   4. Definitions
	      -   4.63 Reference Model (RM)
	
	  referenced
	
	  -   A. Referenced Documents
	  -   Other Referenced Documents
	
	  repository
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  requirement
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.4 Requirements Elicitation and Understanding Services
	  -   4. Definitions
	      -   4.64 Requirement
	
	  resource
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.14 Enterprise Resource Planning (ERP) System
	
	  resource management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  risk
	
	  -   3. Core Concepts
	      -   3.19 Risk Management
	  -   B. Glossary of Supplementary Definitions
	      -   B.34 Risk Management
	
	  risk management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	      -   3.19 Risk Management
	  -   B. Glossary of Supplementary Definitions
	      -   B.34 Risk Management
	
	  RM
	
	  -   4. Definitions
	      -   4.63 Reference Model (RM)
	
	  roadmap
	
	  -   4. Definitions
	      -   4.65 Roadmap
	
	  role
	
	  -   4. Definitions
	      -   4.66 Role
	
snippet togaf_guides_using-the-togaf-standard-in-the-digital-enterprise_Reference "Reference"
	
	1. The DPBoK Standard, Section 5.2.
	
	2. The DPBoK Standard, Section 6.6.2.2.9, “Cost of Delay”.
	
	3. The DPBoK Standard, Section 6.2.2.2.3, “Front Load the Development
	Process”: “Poor decisions made early in the development process have
	negative consequences that increase exponentially over time because
	reversing them later in the lifecycle becomes more and more difficult”.
	
	4. Terms taken from the DPBoK Standard, Chapter 2: “Definitions” unless
	otherwise stated.
	
	5. Terms taken from the TOGAF Standard – Introduction and Core Concepts,
	Chapter 4: “Definitions” unless otherwise stated.
	
	6. More details about the factors and consideration for the adoption of
	new technologies can be found in the TOGAF^(®) Series Guide: Digital
	Technology Adoption: A Guide to Readiness Assessment and Roadmap
	Development; see Referenced Documents.
	
	7. Team Topologies: Organizing Business and Technology Teams for Fast
	Flow; see Referenced Documents, Chapter 5.
	
	Last updated 2021-11-23 09:50:36 UTC
snippet togaf_info_refmodels_Reference_Models_and_Method_Guidance "Reference Models and Method Guidance"
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document introduces the concept of     |
	| Architecture Maturity  | Architecture Capability Maturity Models,    |
	| Models                 | techniques for evaluating and quantifying   |
	|                        | an organization’s maturity in Enterprise    |
	|                        | Architecture, including a publicly          |
	|                        | available framework as an example, which    |
	|                        | can be used by any enterprise to develop    |
	|                        | their own organization-specific maturity    |
	|                        | model.                                      |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document provides guidelines for TOGAF |
	| Architecture Project   | architects on how to manage an Architecture |
	| Management             | Project using an approach that supplements  |
	|                        | the TOGAF ADM with selected Project         |
	|                        | Management techniques. The goal of this     |
	|                        | approach is to enhance an Architecture      |
	|                        | Project’s chances of success through better |
	|                        | planning, monitoring, and communication.    |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document provides a set of role,       |
	| Architecture Skills    | skill, and experience norms for staff       |
	| Framework              | undertaking Enterprise Architecture work.   |
	|                        | It provides a view of the competency levels |
	|                        | for specific roles within the Enterprise    |
	|                        | Architecture team, defining specific roles, |
	|                        | the skills required by those roles, and the |
	|                        | depth of knowledge required to fulfill each |
	|                        | role successfully.                          |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document provides an                   |
	| Digital Business       | industry-independent outline of common core |
	| Reference Model (DBRM) | components that are essential building      |
	|                        | blocks for the modern digital enterprise.   |
	|                        | It enables organizations to develop an      |
	|                        | appropriate digital architecture blueprint  |
	|                        | in response to their changing strategies,   |
	|                        | business model, operating model, and        |
	|                        | operations.                                 |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document provides a standard reference |
	| Government Reference   | model template that can be used to describe |
	| Model (GRM)            | any business in the public sector and allow |
	|                        | for different architecture approaches and   |
	|                        | analysis techniques. It gives public sector |
	|                        | organizations a common way to view          |
	|                        | themselves in order to plan and execute     |
	|                        | effective transformational change.          |
	+------------------------+---------------------------------------------+
	| TOGAF Series Guide:    | This document provides guidance on how the  |
	| Microservices          | architect can use the TOGAF Standard to     |
	| Architecture (MSA)     | develop, manage, and govern Microservices   |
	|                        | Architecture (MSA) or any architecture      |
	|                        | where MSA is part of the scope.             |
	+------------------------+---------------------------------------------+
	
snippet togaf_ea-capability-and-governance_DOCIX_relationship "  relationship"
	
	  -   5. Architecture Contracts
	      -   5.3 Relationship to Architecture Governance
	
	  reporting
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Monitoring and Reporting
	
	  requests
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Requests for Change
	
	  requirements
	
	  -   2. Establishing an Architecture Capability
	      -   2.11 Requirements Management
	
	  resolution
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Dispute Resolution
	
	  responsibilities
	
	  -   4. Architecture Board
	      -   4.2 Responsibilities
	
	  responsibility
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.5 Architecture Governance: Overview
	              -   3.1.5.2 Architecture Governance as a Board-Level
	                  Responsibility
	
	  review
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	      -   6.4 Architecture Compliance Review Process
	      -   6.5 Architecture Compliance Review Checklists
	      -   6.6 Architecture Compliance Review Guidelines
	      -   6.6.2 Conducting Architecture Compliance Reviews
	
	  role
	
	  -   4. Architecture Board
	      -   4.1 Role
	  -   5. Architecture Contracts
	      -   5.1 Role
	  -   6. Architecture Compliance
	      -   6.4 Architecture Compliance Review Process
	          -   6.4.2 Roles
	
snippet togaf_introduction_C_Abbreviations_RFC "RFC"
	
	Request For Change
	
snippet togaf_introduction_C_Abbreviations_RFI "RFI"
	
	Request for Information
	
snippet togaf_introduction_C_Abbreviations_RFP "RFP"
	
	Request for Proposal
	
snippet togaf_introduction_C_Abbreviations_RM "RM"
	
	Reference Model
	
snippet togaf_adm_DOCIX_s "s"
	
	  scenarios
	
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.1 Business Scenarios
	
	  scope
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.1 Scope the Enterprise Organizations Impacted
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.6 Define Scope
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.1 Confirm Scope and Priorities for Deployment with
	              Development Management
	
	  scoping
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	
	  scoping the architecture
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	
	  secure
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.11 Develop Statement of Architecture Work; Secure
	              Approval
	
	  select
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	          -   8.3.1.6 Select Services
	
	  selected
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  services
	
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.6 Select Services
	
	  simplification change
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.2 Enterprise Architecture Change Management Process
	
	  skills
	
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.2 Identify Deployment Resources and Skills
	
	  SOA
	
	  -   1. Introduction
	      -   1.7 Architecture Integration
	
	  solutions
	
	  -   9. Phase E: Opportunities & Solutions
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	          -   11.3.3 Guide Development of Solutions Deployment
	
	  stakeholder
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.2 Identify Stakeholders, Concerns, and Business
	              Requirements
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.7 Conduct Formal Stakeholder Review
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.7 Conduct Formal Stakeholder Review
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.7 Conduct Formal Stakeholder Review
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.7 Conduct Formal Stakeholder Review
	
	  standardization
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	              -   2.3.6.1 Issues in Tools Standardization
	
	  statement
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.11 Develop Statement of Architecture Work; Secure
	              Approval
	
	  Statement of Architecture Work
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.2 Creating the Architecture Vision
	
	  steps
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	  -   11. Phase G: Implementation Governance
	      -   11.3 Steps
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	  -   13. ADM Architecture Requirements Management
	      -   13.3 Steps
	
	  strategy
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.8 Formulate Implementation and Migration Strategy
	
	  streams
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.4 Applying Value Streams
	
	  structure
	
	  -   1. Introduction
	      -   1.2 Architecture Development Cycle
	          -   1.2.2 Basic Structure
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.5 Approach
	          -   6.5.1 Data Structure
	
	  structured analysis
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  summary
	
	  -   1. Introduction
	      -   1.8 Summary
	
	  support
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.2 Confirm Governance and Support Frameworks
	
	  supporting
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.3 ADM and Supporting Guidelines and Techniques
	
	  systems
	
	  -   5. Phase C: Information Systems Architectures
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	
	  tailor
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
snippet togaf_adm-techniques_DOCIX_sample "  sample"
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.1 Identify Stakeholders
	              -   3.3.1.1 Sample Stakeholder Analysis
	
	  SANS Institute
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 9: Protection of Intellectual Property
	
	  SBB
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.1 Background
	
	  scenarios
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.4 Patterns and Business Scenarios
	
	  security
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 15: Data Security
	
	  service
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 6: Service Orientation
	
	  set
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	
	  shared
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 11: Data is Shared
	
	  SMART
	
	  -   7. Interoperability Requirements
	      -   7.4 Refining Interoperability
	
	  solutions
	
	  -   6. Migration Planning Techniques
	      -   6.2 Consolidated Gaps, Solutions, & Dependencies Matrix
	  -   7. Interoperability Requirements
	      -   7.6 Reconciling Interoperability Requirements with Potential
	          Solutions
	
	  some
	
	  -   4. Architecture Patterns
	      -   4.2 Some Pattern Resources
	
	  stakeholder
	
	  -   3. Stakeholder Management
	  -   3.2 Approach to Stakeholder Management
	  -   3.3 Steps in the Stakeholder Management Process
	  -   3.3.1 Identify Stakeholders
	      -   3.3.1.1 Sample Stakeholder Analysis
	  -   3.3.2 Classify Stakeholder Positions
	  -   3.3.3 Determine Stakeholder Management Approach
	
	  -   3.4 Template Stakeholder Map
	
	  stakeholder management
	
	  -   3. Stakeholder Management
	
	  stakeholder management, process steps
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	
	  stakeholders
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.1 Identify Stakeholders
	
	  state
	
	  -   6. Migration Planning Techniques
	      -   6.4 Transition Architecture State Evolution Table
	
	  steps
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	  -   5. Gap Analysis
	      -   5.2 Suggested Steps
	
	  steward
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 13: Data Trustee
	
	  suggested
	
	  -   5. Gap Analysis
	      -   5.2 Suggested Steps
	
	  summary
	
	  -   9. Risk Management
	      -   9.8 Summary
	
snippet togaf_introduction_DOCIX_SBB "  SBB"
	
	  -   4. Definitions
	      -   4.73 Solution Building Block (SBB)
	
	  scalability
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.35 Scalability
	
	  security
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.36 Security
	
	  segment
	
	  -   4. Definitions
	      -   4.67 Segment Architecture
	
	  Segment Architecture
	
	  -   4. Definitions
	      -   4.67 Segment Architecture
	
	  series
	
	  -   A. Referenced Documents
	      -   The Open Group TOGAF Series Guides
	
	  server
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.37 Server
	
	  service
	
	  -   4. Definitions
	      -   4.6 Application Service
	      -   4.32 Business Service
	      -   4.43 Enterprise Architecture Service
	      -   4.68 Service
	      -   4.69 Service Orientation
	      -   4.71 Service Portfolio
	      -   4.82 Technology Service
	  -   B. Glossary of Supplementary Definitions
	      -   B.38 Service Quality
	
	  service categories
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	
	  service delivery model
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	
	  service management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	
	  service orientation
	
	  -   4. Definitions
	      -   4.69 Service Orientation
	
	  service portfolio
	
	  -   4. Definitions
	      -   4.71 Service Portfolio
	
	  service qualities
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.38 Service Quality
	
	  Service-Oriented
	
	  -   4. Definitions
	      -   4.70 Service-Oriented Architecture (SOA)
	
	  Service-Oriented Architecture
	
	  -   4. Definitions
	      -   4.70 Service-Oriented Architecture (SOA)
	
	  services
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	      -   3.5.1 Enterprise Support Services
	      -   3.5.2 Design Support Services
	      -   3.5.3 Development Support Services
	      -   3.5.4 Requirements Elicitation and Understanding Services
	      -   3.5.5 Architecture Planning Services
	      -   3.5.6 Enterprise Architecture Practice Development Support
	          Services
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.28 Packaged Services
	
	  set
	
	  -   2. The TOGAF Documentation Set
	  -   2.1 Structure of the TOGAF Documentation Set
	
	  should
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   When should Enterprise Architecture be done?
	
	  SMART
	
	  -   4. Definitions
	      -   4.58 Objective
	  -   B. Glossary of Supplementary Definitions
	      -   B.39 SMART
	
	  SOA
	
	  -   4. Definitions
	      -   4.70 Service-Oriented Architecture (SOA)
	
	  software
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.1 Application Software
	
	  solution
	
	  -   4. Definitions
	      -   4.72 Solution Architecture
	      -   4.73 Solution Building Block (SBB)
	
	  Solution Architecture
	
	  -   4. Definitions
	      -   4.72 Solution Architecture
	
	  solution building block
	
	  -   4. Definitions
	      -   4.73 Solution Building Block (SBB)
	
	  solutions
	
	  -   4. Definitions
	      -   4.74 Solutions Continuum
	
	  Solutions Continuum
	
	  -   3. Core Concepts
	      -   3.10 Enterprise Continuum
	  -   4. Definitions
	      -   4.74 Solutions Continuum
	
	  Solutions Landscape
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	
	  specifically
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	
	  stakeholder
	
	  -   4. Definitions
	      -   4.36 Communications and Stakeholder Management
	      -   4.75 Stakeholder
	
	  stakeholder management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   4. Definitions
	      -   4.36 Communications and Stakeholder Management
	
	  standard
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	          -   Who would benefit from using the TOGAF Standard?
	      -   1.3 Information on Using the TOGAF Standard
	      -   1.3.2 How Much Does the TOGAF Standard Cost?
	
	  -   2. The TOGAF Documentation Set
	      -   2.1 Structure of the TOGAF Documentation Set
	          -   The TOGAF Standard
	      -   2.2 The TOGAF Standard
	  -   3. Core Concepts
	      -   3.1 What is the TOGAF Standard?
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	      -   3.15 Using the TOGAF Standard with Other Frameworks
	  -   4. Definitions
	      -   4.76 Standards Library
	
	  Standards Library
	
	  -   3. Core Concepts
	      -   3.11 Architecture Repository
	  -   4. Definitions
	      -   4.76 Standards Library
	
	  strategic
	
	  -   4. Definitions
	      -   4.77 Strategic Architecture
	
	  Strategic Architecture
	
	  -   4. Definitions
	      -   4.77 Strategic Architecture
	
	  stream
	
	  -   4. Definitions
	      -   4.84 Value Stream
	
	  structure
	
	  -   1. Introduction
	      -   1.2 Structure of this Document
	  -   2. The TOGAF Documentation Set
	      -   2.1 Structure of the TOGAF Documentation Set
	
	  style
	
	  -   3. Core Concepts
	      -   3.16 Using the TOGAF Framework with Different Architecture
	          Styles
	  -   4. Definitions
	      -   4.7 Architectural Style
	
	  successful
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.23 Managing Successful Programs (MSP)
	
	  supplementary
	
	  -   B. Glossary of Supplementary Definitions
	
	  supplier
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.40 Supplier Management
	
	  supplier management
	
	  -   3. Core Concepts
	      -   3.14 Establishing the Architecture Capability as an
	          Operational Entity
	  -   B. Glossary of Supplementary Definitions
	      -   B.40 Supplier Management
	
	  support
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.1 Enterprise Support Services
	          -   3.5.2 Design Support Services
	          -   3.5.3 Development Support Services
	          -   3.5.6 Enterprise Architecture Practice Development Support
	              Services
	
	  system
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.3 Business System
	      -   B.12 Database Management System
	      -   B.14 Enterprise Resource Planning (ERP) System
	      -   B.17 Information System (IS)
	      -   B.26 Open System
	      -   B.41 System
	
snippet togaf_architecture-content_DOCIX_SBB "  SBB"
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.19 Solution Building Blocks
	  -   5. Building Blocks
	      -   5.1 Overview
	      -   5.2 Introduction to Building Blocks
	          -   5.2.4 Solution Building Blocks
	
	  security
	
	  -   3. Architectural Artifacts
	      -   -   3.6.4 Phase C: Data Architecture
	              -   Data Security Diagram
	
	  Segment Architecture
	
	  -   7. Architecture Repository
	      -   7.2 Architecture Landscape
	
	  Segment Architecture Requirements
	
	  -   7. Architecture Repository
	      -   7.6 The Architecture Requirements Repository
	          -   7.6.2 Contents of the Architecture Requirements Repository
	
	  service
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Goal/Objective/Business Service Diagram
	
	  Service Management Repository
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	
	  Service/Function
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Service/Function Catalog
	
	  Service/Information
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Service/Information Diagram
	
	  SID
	
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	          -   7.3.1 Overview
	
	  simple
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	          -   3.1.1 Simple Example of an Architecture Viewpoint and
	              Architecture View
	
	  SMART
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.4 TOGAF Enterprise Metamodel Entities
	
	  software
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Software Engineering Diagram
	              -   Software Distribution Diagram
	
	  Software Distribution diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Software Distribution Diagram
	
	  Software Engineering diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Software Engineering Diagram
	
	  solution
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Solution Concept Diagram
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.19 Solution Building Blocks
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.4 Solution Building Blocks
	
	  solution building blocks
	
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.4 Solution Building Blocks
	
	  Solution Concept diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Solution Concept Diagram
	
	  solutions
	
	  -   3. Architectural Artifacts
	      -   -   3.6.7 Phase E: Opportunities and Solutions
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	          -   Foundation Solutions
	          -   Common Systems Solutions
	          -   Industry Solutions
	          -   Organization-Specific Solutions
	
	  -   7. Architecture Repository
	      -   7.7 Solutions Landscape
	
	  Solutions Continuum
	
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.4 Solution Building Blocks
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.2 Solutions Continuum
	
	  Solutions Landscape
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.7 Solutions Landscape
	
	  specification
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.6 Architecture Requirements Specification
	  -   5. Building Blocks
	      -   5.2 Introduction to Building Blocks
	          -   5.2.3 Architecture Building Blocks
	              -   5.2.3.2 Specification Content
	          -   5.2.4 Solution Building Blocks
	              -   5.2.4.2 Specification Content
	      -   5.3 Building Blocks and the ADM
	          -   5.3.2 Building Block Specification Process in the ADM
	
	  stages
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Stages Catalog
	
	  stakeholder
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	          -   3.6.2 Phase A: Architecture Vision
	              -   Stakeholder Catalog
	
	  Stakeholder catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Stakeholder Catalog
	
	  standard
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Technology Standards Catalog
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	      -   7.4.2 Types of Standard
	      -   7.4.3 Standards Lifecycle
	      -   7.4.4 Standards Classification within the Standards Library
	  -   7.9 External Repositories
	      -   7.9.2 External Standards
	
	  Standards Library
	
	  -   7. Architecture Repository
	      -   7.1 Overview
	      -   7.4 Standards Library
	      -   7.4.4 Standards Classification within the Standards Library
	
	  standards, classification
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  standards, lifecycle
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.3 Standards Lifecycle
	
	  standards, types of
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.2 Types of Standard
	
	  statement
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.20 Statement of Architecture Work
	
	  Statement of Architecture Work
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.20 Statement of Architecture Work
	
	  Strategic Architecture
	
	  -   7. Architecture Repository
	      -   7.2 Architecture Landscape
	
	  Strategic Architecture Requirements
	
	  -   7. Architecture Repository
	      -   7.6 The Architecture Requirements Repository
	          -   7.6.2 Contents of the Architecture Requirements Repository
	
	  Strategy/Capability
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Strategy/Capability Matrix
	
	  Strategy/Capability matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Strategy/Capability Matrix
	
	  stream
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Value Stream Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Catalog
	              -   Value Stream Stages Catalog
	              -   Value Stream Map
	
	  Stream/Capability
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Value Stream/Capability Matrix
	
	  systems
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Common Systems Architectures
	          -   6.4.2 Solutions Continuum
	              -   Common Systems Solutions
	
snippet togaf_introduction_C_Abbreviations_SBB "SBB"
	
	Solution Building Block
	
snippet togaf_introduction_C_Abbreviations_SCA "SCA"
	
	Service Component Architecture
	
snippet togaf_ea-capability-and-governance_DOCIX_scenarios "  scenarios"
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.3 Governance and Personnel Scenarios
	
	  schedule
	
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Schedule of Meetings
	
	  security
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.5 Security Checklist
	
	  Security/Protection
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.3 Security/Protection
	
	  server
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.4 Application Server
	              -   6.5.7.5 Data Server
	
	  service-level agreement
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Compliance
	
	  services
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.2 Software Services and Middleware Checklist
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.5 Common Services
	
	  setting
	
	  -   4. Architecture Board
	      -   4.3 Setting Up the Architecture Board
	
	  sharing
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.4 Hosting, Data Types, and Sharing
	
	  size
	
	  -   4. Architecture Board
	      -   4.3 Setting Up the Architecture Board
	          -   4.3.2 Size of the Board
	
	  SLA
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Compliance
	  -   4. Architecture Board
	      -   4.2 Responsibilities
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.3 Contract between Architecting Function and Business
	              Stakeholders
	
	  software
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.2 Software Services and Middleware Checklist
	
	  solutions
	
	  -   2. Establishing an Architecture Capability
	      -   2.7 Phase E: Opportunities & Solutions
	
	  stakeholders
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.3 Contract between Architecting Function and Business
	              Stakeholders
	
	  standard
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.5 Architecture Governance: Overview
	              -   3.1.5.3 The TOGAF Standard and Architecture Governance
	
	  statement
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.1 Statement of Architecture Work
	
	  Statement of Architecture Work
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.1 Statement of Architecture Work
	
	  steps
	
	  -   6. Architecture Compliance
	      -   6.4 Architecture Compliance Review Process
	          -   6.4.3 Steps
	
	  strategy
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.2 Elements of an Effective Architecture Governance
	              Strategy
	  -   4. Architecture Board
	      -   4.4 Operation of the Architecture Board
	          -   4.4.3 Agenda
	              -   Architecture Strategy and Direction Documentation
	
	  structure
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	          -   3.2.2 Architecture Governance Framework — Organizational
	              Structure
	  -   4. Architecture Board
	      -   4.3 Setting Up the Architecture Board
	          -   4.3.3 Board Structure
	
	  success
	
	  -   3. Architecture Governance
	      -   3.3 Architecture Governance in Practice
	          -   3.3.1 Architecture Governance — Key Success Factors
	
	  system
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.1 Hardware and Operating System Checklist
	          -   6.5.6 System Management Checklist
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	          -   6.5.8 System Engineering/Methods & Tools Checklist
	
snippet togaf_introduction_C_Abbreviations_SDO "SDO"
	
	Service Data Objects
	
snippet togaf_info_domains_Security_Architecture "Security Architecture"
	
	+------------------------+---------------------------------------------+
	| Document               | Summary                                     |
	+========================+=============================================+
	| TOGAF Series Guide:    | This document provides guidance for         |
	| Integrating Risk and   | security practitioners and Enterprise       |
	| Security within a      | Architects who need to work with the TOGAF  |
	| TOGAF® Enterprise      | Standard to develop an Enterprise           |
	| Architecture           | Architecture. It describes how to integrate |
	|                        | risk and security into an Enterprise        |
	|                        | Architecture, and introduces a common       |
	|                        | language for Security Architects and        |
	|                        | Enterprise Architects.                      |
	+------------------------+---------------------------------------------+
	
snippet togaf_applying-the-adm_DOCIX_Segment_Architecture "  Segment Architecture"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.2 Architecture Landscape
	
	  state
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
	  Strategic Architecture
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.2 Architecture Landscape
	
	  styles
	
	  -   1. Introduction
	      -   1.1 Using the TOGAF Framework with Different Architecture
	          Styles
	
	  target first
	
	  -   2. Applying Iteration to the ADM
	      -   2.4 Approaches to Architecture Development
	
snippet togaf_introduction_C_Abbreviations_SEI "SEI"
	
	Software Engineering Institute
	
snippet togaf_introduction_C_Abbreviations_SGML "SGML"
	
	Standard Generalized Markup Language
	
snippet togaf_introduction_C_Abbreviations_SLA "SLA"
	
	Service-Level Agreement
	
snippet togaf_introduction_C_Abbreviations_SMART "SMART"
	
	Specific, Measurable, Actionable, Realistic, and Timebound
	
snippet togaf_introduction_C_Abbreviations_SOA "SOA"
	
	Service-Oriented Architecture
	
snippet togaf_introduction_C_Abbreviations_SPEM "SPEM"
	
	Software Processing Engineering Metamodel
	
snippet togaf_digital-technology-adoption_Sustaining_Factors "Sustaining Factors"
	
	+-----------------------------------+-----------------------------------+
	| 13                                | Value Realization                 |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has a clear      |
	|                                   | understanding of the target user  |
	|                                   | to create a positive impact with  |
	|                                   | digital adoption.                 |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has an outlined  |
	|                                   | methodology to understand the way |
	|                                   | to quantify Return on Investment  |
	|                                   | (ROI).                            |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has outlined     |
	|                                   | clear Key Performance Indicators  |
	|                                   | (KPIs) to effectively measure the |
	|                                   | value coming out of the new       |
	|                                   | digital technology.               |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 14                                | Policy and Regulations            |
	+-----------------------------------+-----------------------------------+
	| A                                 | The government regulations are    |
	|                                   | conducive for the organization to |
	|                                   | adopt the digital technology.     |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | Policies by the government would  |
	|                                   | act as a catalyst for the         |
	|                                   | adoption and create a positive    |
	|                                   | chain reaction in the ecosystem.  |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| 15                                | Funding and Resources             |
	+-----------------------------------+-----------------------------------+
	| A                                 | The organization has the right    |
	|                                   | funding and budgets allocated for |
	|                                   | the Digital Transformation        |
	|                                   | program and subsequent rollouts.  |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| B                                 | The organization has top-down     |
	|                                   | funding/investors and support for |
	|                                   | the planned digital adoption.     |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	| C                                 | The organization has resources    |
	|                                   | (time, material, people, etc.) to |
	|                                   | enable the digital technology     |
	|                                   | adoption.                         |
	|                                   |                                   |
	|                                   | []                                |
	+-----------------------------------+-----------------------------------+
	
	------------------------------------------------------------------------
	
	Footnotes
	
	[1] Refer to the TOGAF Standard – Enterprise Architecture Capability and
	Governance (Architecture Board).
	
snippet togaf_introduction_C_Abbreviations_SysML "SysML"
	
	Systems Modeling Language
	
snippet togaf_adm_DOCIX_t "t"
	
	  target
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.9 Define the Target Architecture Value Propositions
	              and KPIs
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.3 Develop Target Business Architecture Description
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.3 Develop Target Data Architecture Description
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.3 Develop Target Application Architecture Description
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.3 Develop Target Technology Architecture Description
	
	  Target Architecture Description
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.3 Time Period
	
	  targets
	
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.5 Develop Change Requirements to Meet Performance
	              Targets
	
	  team
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.3 Define and Establish Enterprise Architecture Team
	              and Organization
	
	  techniques
	
	  -   1. Introduction
	      -   1.1 ADM Overview
	          -   1.1.3 ADM and Supporting Guidelines and Techniques
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  technologies
	
	  -   8. Phase D: Technology Architecture
	      -   8.5 Approach
	          -   8.5.1 Emerging Technologies
	
	  technology
	
	  -   8. Phase D: Technology Architecture
	  -   8.3 Steps
	      -   8.3.1 Select Reference Models, Viewpoints, and Tools
	          -   8.3.1.2 Identify Required Catalogs of Technology Building
	              Blocks
	      -   8.3.2 Develop Baseline Technology Architecture Description
	      -   8.3.3 Develop Target Technology Architecture Description
	      -   8.3.8 Finalize the Technology Architecture
	
	  Technology Architecture
	
	  -   8. Phase D: Technology Architecture
	
	  technology building blocks
	
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.2 Identify Required Catalogs of Technology
	                  Building Blocks
	
	  terminology tailoring
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  through
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  time
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.3 Time Period
	
	  time period
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.3 Time Period
	
	  time period, enterprise
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	
	  timings
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	
	  TOGAF
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.5 Tailor the TOGAF Framework and, if any, Other
	              Selected Architecture Framework(s)
	
	  TOGAF ADM
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	
	  tools
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	          -   2.3.6.1 Issues in Tools Standardization
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.2 Deploy Monitoring Tools
	  -   13. ADM Architecture Requirements Management
	      -   13.5 Approach
	          -   13.5.3 Resources
	              -   13.5.3.2 Requirements Tools
	
	  tools standardization
	
	  -   2. Preliminary Phase
	      -   2.3 Steps
	          -   2.3.6 Develop a Strategy and Implementation Plan for Tools
	              and Techniques
	              -   2.3.6.1 Issues in Tools Standardization
	
	  transformation
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.5 Assess Readiness for Business Transformation
	          -   3.3.10 Identify the Business Transformation Risks and
	              Mitigation Activities
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.7 Confirm Readiness and Risk for Business
	              Transformation
	
	  transition
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.10 Identify Transition Architectures
	
	  Transition Architecture Description
	
	  -   1. Introduction
	      -   1.5 Scoping the Architecture
	          -   1.5.3 Time Period
	
	  types
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.5 Identify Types of Requirement to be Collected
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	              -   6.3.1.5 Identify Types of Requirement to be Collected
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	              -   7.3.1.5 Identify Types of Requirement to be Collected
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	              -   8.3.1.5 Identify Types of Requirement to be Collected
	
snippet togaf_adm-techniques_DOCIX_table "  table"
	
	  -   6. Migration Planning Techniques
	      -   6.3 Architecture Definition Increments Table
	      -   6.4 Transition Architecture State Evolution Table
	
	  tailor
	
	  -   3. Stakeholder Management
	      -   3.3 Steps in the Stakeholder Management Process
	          -   3.3.4 Tailor Engagement Deliverables
	
	  technical
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	              -   Principle 20: Control Technical Diversity
	
	  technique
	
	  -   6. Migration Planning Techniques
	  -   6.5 Business Value Assessment Technique
	
	  technology
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.3 Application Principles
	              -   Principle 16: Technology Independence
	          -   2.6.4 Technology Principles
	
	  technology principles, examples
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.4 Technology Principles
	
	  template
	
	  -   3. Stakeholder Management
	      -   3.4 Template Stakeholder Map
	
	  terminology
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	
	  Trade-Offs
	
	  -   10. Architecture Alternatives and Trade-Offs
	
	  transformation
	
	  -   8. Business Transformation Readiness Assessment
	  -   8.1 Introduction
	      -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  transformation readiness assessment
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.1 Introduction
	          -   8.1.1 Business Transformation Enablement Program (BTEP)
	
	  transition
	
	  -   6. Migration Planning Techniques
	      -   6.4 Transition Architecture State Evolution Table
	
	  TRM
	
	  -   5. Gap Analysis
	      -   5.3 Example
	
	  trustee
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 13: Data Trustee
	
snippet togaf_introduction_DOCIX_TAFIM "  TAFIM"
	
	  -   1. Introduction
	
	  target
	
	  -   4. Definitions
	      -   4.78 Target Architecture
	
	  Target Architecture
	
	  -   4. Definitions
	      -   4.78 Target Architecture
	
	  taxonomy
	
	  -   4. Definitions
	      -   4.79 Taxonomy of Architecture Views
	
	  taxonomy of architecture views
	
	  -   4. Definitions
	      -   4.79 Taxonomy of Architecture Views
	
	  technology
	
	  -   4. Definitions
	      -   4.50 Information Technology (IT)
	      -   4.80 Technology Architecture
	      -   4.81 Technology Component
	      -   4.82 Technology Service
	
	  Technology Architecture
	
	  -   3. Core Concepts
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	  -   4. Definitions
	      -   4.80 Technology Architecture
	
	  technology component
	
	  -   4. Definitions
	      -   4.81 Technology Component
	
	  technology service
	
	  -   4. Definitions
	      -   4.82 Technology Service
	
	  The Open Group
	
	  -   1. Introduction
	      -   1.4 Why Join The Open Group?
	
	  this
	
	  -   1. Introduction
	      -   1.2 Structure of this Document
	
	  time
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.42 Time Period
	
	  time period
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.42 Time Period
	
	  TOGAF
	
	  -   1. Introduction
	  -   1.1 Executive Overview
	      -   Why use the TOGAF Standard as a framework for Enterprise
	          Architecture?
	      -   Who would benefit from using the TOGAF Standard?
	  -   1.3 Information on Using the TOGAF Standard
	  -   1.3.2 How Much Does the TOGAF Standard Cost?
	
	  -   2. The TOGAF Documentation Set
	  -   2.1 Structure of the TOGAF Documentation Set
	  -   The TOGAF Standard
	  -   The TOGAF Library
	
	  -   2.2 The TOGAF Standard
	  -   2.3 The TOGAF Library
	
	  -   3. Core Concepts
	      -   3.1 What is the TOGAF Standard?
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	      -   3.15 Using the TOGAF Standard with Other Frameworks
	      -   3.16 Using the TOGAF Framework with Different Architecture
	          Styles
	  -   A. Referenced Documents
	      -   The Open Group TOGAF Series Guides
	
	  TOGAF ADM
	
	  -   3. Core Concepts
	      -   3.9 Interoperability
	
	  TOGAF Content Framework
	
	  -   3. Core Concepts
	      -   3.12 TOGAF Content Framework and Enterprise Metamodel
	
	  TOGAF Library
	
	  -   2. The TOGAF Documentation Set
	      -   2.1 Structure of the TOGAF Documentation Set
	          -   The TOGAF Library
	      -   2.3 The TOGAF Library
	
	  TOGAF Standard
	
	  -   2. The TOGAF Documentation Set
	      -   2.1 Structure of the TOGAF Documentation Set
	          -   The TOGAF Standard
	      -   2.2 The TOGAF Standard
	
	  transition
	
	  -   4. Definitions
	      -   4.83 Transition Architecture
	
	  Transition Architecture
	
	  -   4. Definitions
	      -   4.83 Transition Architecture
	
snippet togaf_introduction_C_Abbreviations_TAFIM "TAFIM"
	
	Technical Architecture Framework for Information Management
	
snippet togaf_architecture-content_DOCIX_tailored "  tailored"
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.21 Tailored Architecture Framework
	
	  Tailored Architecture Framework
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.21 Tailored Architecture Framework
	
	  technology
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	          -   Technology Standards Catalog
	          -   Technology Portfolio Catalog
	
	  Technology Portfolio catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Technology Portfolio Catalog
	
	  Technology Standards
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  Technology Standards catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.6 Phase D: Technology Architecture
	              -   Technology Standards Catalog
	
	  TM Forum
	
	  -   7. Architecture Repository
	      -   7.3 Reference Library
	          -   7.3.1 Overview
	
	  TOGAF
	
	  -   1. Introduction
	      -   1.2 TOGAF Content Framework and Enterprise Metamodel
	      -   1.2.4 The TOGAF Content Framework
	  -   1.3 Content Framework and the TOGAF ADM
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	  -   2.2 TOGAF Enterprise Metamodel Vision
	  -   2.2.1 Overview of the TOGAF Enterprise Metamodel
	
	  -   2.3 TOGAF Enterprise Metamodel in Detail
	  -   2.4 TOGAF Enterprise Metamodel Entities
	  -   2.5 TOGAF Enterprise Metamodel Attributes
	  -   2.6 TOGAF Enterprise Metamodel Relationships
	
	  TOGAF ADM
	
	  -   4. Architecture Deliverables
	  -   6. Enterprise Continuum
	      -   6.5 The Enterprise Continuum and the ADM
	
	  TOGAF TRM
	
	  -   6. Enterprise Continuum
	      -   6.4 Enterprise Continuum in Detail
	          -   6.4.1 Architecture Continuum
	              -   Foundation Architecture
	
	  tools
	
	  -   3. Architectural Artifacts
	      -   3.3 Views, Tools, and Languages
	      -   3.4 Architecture Views and Architecture Viewpoints
	          -   3.4.3 Need for a Common Language and Interoperable Tools
	              for Architecture Description
	
	  types
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.2 Types of Standard
	
snippet togaf_ea-capability-and-governance_DOCIX_tailoring "  tailoring"
	
	  -   6. Architecture Compliance
	      -   6.6 Architecture Compliance Review Guidelines
	          -   6.6.1 Tailoring the Checklists
	
	  Take-On
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Policy Management and Take-On
	
	  technology
	
	  -   2. Establishing an Architecture Capability
	      -   2.6 Phase D: Technology Architecture
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.3 Technology Governance
	
	  technology governance
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	          -   3.1.3 Technology Governance
	
	  terminology
	
	  -   6. Architecture Compliance
	      -   6.2 Terminology: The Meaning of Architecture Compliance
	
	  timing
	
	  -   6. Architecture Compliance
	      -   6.3 Architecture Compliance Reviews
	          -   6.3.2 Timing
	
	  TOGAF
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.5 Architecture Governance: Overview
	              -   3.1.5.3 The TOGAF Standard and Architecture Governance
	
	  tools
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.8 System Engineering/Methods & Tools Checklist
	
	  triggers
	
	  -   4. Architecture Board
	      -   4.3 Setting Up the Architecture Board
	          -   4.3.1 Triggers
	
	  types
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.4 Hosting, Data Types, and Sharing
	
snippet togaf_introduction_A_Referenced_Documents_The_following_websites_provide_useful_reference_material "The following websites provide useful reference material:"
	
	-   The Cloud Computing Design Patterns community website (refer to
	    www.cloudpatterns.org)
	
	-   The Information Technology Governance Institute:
	    www.isaca.org/About-ISACA/IT-Governance-Institute
	
	    This website has many resources that can help with corporate
	    assessment of both IT and governance in general.
	
	-   The Patterns-Discussion FAQ: http://purl.org/theopengroup/pd-FAQ
	
	    This website is maintained by Doug Lea and provides a thorough and
	    highly readable FAQ about patterns.
	
	-   The Patterns Home Page: hillside.net/patterns
	
	    This website is hosted by The Hillside Group and provides
	    information about patterns, links to online patterns, papers, and
	    books dealing with patterns, and patterns-related mailing lists.
	
	-   The SOA Patterns community website (refer to www.soapatterns.org/),
	    dedicated to the ongoing development and expansion of the SOA design
	    pattern catalog
	
snippet togaf_introduction_A_Referenced_Documents_The_Open_Group_TOGAF_Series_Guides "The Open Group TOGAF Series Guides"
	
	-   TOGAF® Series Guide: Applying the ADM Using Agile Sprints, April
	    2022 (G210), published by The Open Group; refer to
	    www.opengroup.org/library/g210
	-   TOGAF® Series Guide: A Practitioners' Approach to Developing
	    Enterprise Architecture Following the TOGAF ADM, April 2022 (G186),
	    published by The Open Group; refer to www.opengroup.org/library/g186
	-   TOGAF® Series Guide: Architecture Maturity Models, April 2022
	    (G203), published by The Open Group; refer to
	    www.opengroup.org/library/g203
	-   TOGAF® Series Guide: Architecture Project Management, April 2022
	    (G188), published by The Open Group; refer to
	    www.opengroup.org/library/g188
	-   TOGAF® Series Guide: Architecture Skills Framework, April 2022
	    (G198), published by The Open Group; refer to
	    www.opengroup.org/library/g198
	-   TOGAF® Series Guide: Business Capabilities, Version 2, April 2022
	    (G211), published by The Open Group; refer to
	    www.opengroup.org/library/g211
	-   TOGAF® Series Guide: Business Models, April 2022 (G18A), published
	    by The Open Group; refer to www.opengroup.org/library/g18a
	-   TOGAF® Series Guide: Business Scenarios, April 2022 (G176),
	    published by The Open Group; refer to www.opengroup.org/library/g176
	-   TOGAF® Series Guide: Digital Technology Adoption — A Guide to
	    Readiness Assessment and Roadmap Development, April 2022 (G212),
	    published by The Open Group; refer to www.opengroup.org/library/g212
	-   TOGAF® Series Guide: Information Architecture — Customer Master Data
	    Management, April 2022 (G21B), published by The Open Group; refer to
	    www.opengroup.org/library/g21b
	-   TOGAF® Series Guide: Information Mapping, April 2022 (G190),
	    published by The Open Group; refer to www.opengroup.org/library/g190
	-   TOGAF® Series Guide: Integrating Risk and Security within a TOGAF®
	    Enterprise Architecture, April 2022 (G152), published by The Open
	    Group; refer to www.opengroup.org/library/g152
	-   TOGAF® Series Guide: Organization Mapping, April 2022 (G206),
	    published by The Open Group; refer to www.opengroup.org/library/g206
	-   TOGAF® Series Guide: Enabling Enterprise Agility, April 2022 (G20F),
	    published by The Open Group; refer to www.opengroup.org/library/g20f
	-   TOGAF® Series Guide: The TOGAF Integrated Information Infrastructure
	    Reference Model (III-RM): An Architected Approach to Boundaryless
	    Information Flow^(TM), November 2017 (G179), published by The Open
	    Group; refer to www.opengroup.org/library/g179
	-   TOGAF® Series Guide: The TOGAF Leader's Guide to Establishing and
	    Evolving an EA Capability, April 2022 (G184), published by The Open
	    Group; refer to www.opengroup.org/library/g184
	-   TOGAF® Series Guide: The TOGAF Technical Reference Model (TRM),
	    September 2017 (G175), published by The Open Group; refer to
	    www.opengroup.org/library/g175
	-   TOGAF® Series Guide: Using the TOGAF® Framework to Define and Govern
	    Service-Oriented Architectures, September 2017 (G174), published by
	    The Open Group; refer to www.opengroup.org/library/g174
	-   TOGAF® Series Guide: Value Streams, April 2022 (G178), published by
	    The Open Group; refer to www.opengroup.org/library/g178
	
snippet togaf_applying-the-adm_DOCIX_time "  time"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
	  TOGAF
	
	  -   1. Introduction
	      -   1.1 Using the TOGAF Framework with Different Architecture
	          Styles
	
	  Transition Planning
	
	  -   2. Applying Iteration to the ADM
	      -   2.2 Iteration Cycles
	
snippet togaf_introduction_C_Abbreviations_TRM "TRM"
	
	Technical Reference Model
	
snippet togaf_adm_DOCIX_u "u"
	
	  UML
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
	  update
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.5 Confirm Architecture Roadmap and Update
	              Architecture Definition Document
	
	  use-case analysis
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  use-case model
	
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.7 Applying Modeling Techniques
	
snippet togaf_introduction_C_Abbreviations_UML "UML"
	
	Unified Modeling Language
	
snippet togaf_applying-the-adm_DOCIX_understand "  understand"
	
	  -   3. Applying the ADM Across the Architecture Landscape
	      -   3.4 Organizing the Architecture Landscape to Understand the
	          State of the Enterprise
	
	  using
	
	  -   1. Introduction
	      -   1.1 Using the TOGAF Framework with Different Architecture
	          Styles
	
snippet togaf_introduction_DOCIX_understanding "  understanding"
	
	  -   3. Core Concepts
	      -   3.5 Enterprise Architecture Services
	          -   3.5.4 Requirements Elicitation and Understanding Services
	
	  US DoD
	
	  -   1. Introduction
	
	  use
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	      -   1.3 Information on Using the TOGAF Standard
	          -   1.3.1 Conditions of Use
	
	  Use-Case
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.43 Use-Case
	
	  user
	
	  -   B. Glossary of Supplementary Definitions
	      -   B.13 End User
	      -   B.44 User
	
	  using
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Who would benefit from using the TOGAF Standard?
	      -   1.3 Information on Using the TOGAF Standard
	  -   3. Core Concepts
	      -   3.15 Using the TOGAF Standard with Other Frameworks
	      -   3.16 Using the TOGAF Framework with Different Architecture
	          Styles
	
snippet togaf_ea-capability-and-governance_DOCIX_up "  up"
	
	  -   4. Architecture Board
	      -   4.3 Setting Up the Architecture Board
	
snippet togaf_architecture-content_DOCIX_Use-Case "  Use-Case"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Business Use-Case Diagram
	          -   3.6.5 Phase C: Application Architecture
	              -   Application Use-Case Diagram
	
	  user
	
	  -   3. Architectural Artifacts
	      -   -   3.6.5 Phase C: Application Architecture
	              -   Application and User Location Diagram
	
snippet togaf_adm-techniques_DOCIX_use "  use"
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.1 Business Principles
	              -   Principle 5: Common Use Applications
	
	  value
	
	  -   6. Migration Planning Techniques
	      -   6.5 Business Value Assessment Technique
	
	  views
	
	  -   4. Architecture Patterns
	      -   4.1 Introduction
	          -   4.1.3 Terminology
	              -   4.1.3.3 Patterns and Views
	
snippet togaf_adm_DOCIX_v "v"
	
	  validate
	
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.6 Refine and Validate Dependencies
	
	  validation
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.4 Prioritize the Migration Projects through the
	              Conduct of a Cost/Benefit Assessment and Risk Validation
	
	  value
	
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.9 Define the Target Architecture Value Propositions
	              and KPIs
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.4 Applying Value Streams
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	  -   12. Phase H: Architecture Change Management
	      -   12.3 Steps
	          -   12.3.1 Establish Value Realization Process
	
	  value stream mapping
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	              -   4.3.1.1 Determine Overall Modeling Process
	
	  value streams
	
	  -   3. Phase A: Architecture Vision
	      -   3.5 Approach
	          -   3.5.2 Creating the Architecture Vision
	  -   4. Phase B: Business Architecture
	      -   4.5 Approach
	          -   4.5.4 Applying Value Streams
	
	  vehicle
	
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.3 Estimate Resource Requirements, Project Timings,
	              and Availability/Delivery Vehicle
	
	  versus
	
	  -   12. Phase H: Architecture Change Management
	      -   12.5 Approach
	          -   12.5.3 Guidelines for Maintenance versus Architecture
	              Redesign
	
	  viewpoints
	
	  -   4. Phase B: Business Architecture
	      -   4.3 Steps
	          -   4.3.1 Select Reference Models, Viewpoints, and Tools
	  -   6. Phase C: Information Systems Architectures — Data Architecture
	      -   6.3 Steps
	          -   6.3.1 Select Reference Models, Viewpoints, and Tools
	  -   7. Phase C: Information Systems Architectures — Application
	      Architecture
	      -   7.3 Steps
	          -   7.3.1 Select Reference Models, Viewpoints, and Tools
	  -   8. Phase D: Technology Architecture
	      -   8.3 Steps
	          -   8.3.1 Select Reference Models, Viewpoints, and Tools
	
	  vision
	
	  -   3. Phase A: Architecture Vision
	  -   3.3 Steps
	      -   3.3.8 Develop Architecture Vision
	  -   3.5 Approach
	      -   3.5.2 Creating the Architecture Vision
	
snippet togaf_introduction_DOCIX_value "  value"
	
	  -   4. Definitions
	      -   4.84 Value Stream
	
	  value stream
	
	  -   4. Definitions
	      -   4.84 Value Stream
	
	  view
	
	  -   4. Definitions
	      -   4.20 Architecture View
	      -   4.85 View
	
	  viewpoint
	
	  -   4. Definitions
	      -   4.21 Architecture Viewpoint
	      -   4.86 Viewpoint
	      -   4.87 Viewpoint Library
	
	  viewpoint library
	
	  -   4. Definitions
	      -   4.87 Viewpoint Library
	
	  viewpoints
	
	  -   3. Core Concepts
	      -   3.17 Architecture Views and Viewpoints
	
	  views
	
	  -   3. Core Concepts
	      -   3.17 Architecture Views and Viewpoints
	  -   4. Definitions
	      -   4.79 Taxonomy of Architecture Views
	
	  vision
	
	  -   4. Definitions
	      -   4.22 Architecture Vision
	
snippet togaf_ea-capability-and-governance_DOCIX_values "  values"
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.4 Information Management Checklists
	              -   6.5.4.1 Data Values
	
	  vision
	
	  -   2. Establishing an Architecture Capability
	      -   2.2 Phase A: Architecture Vision
	
snippet togaf_architecture-content_DOCIX_value "  value"
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Value Chain Diagram
	              -   Value Stream Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Catalog
	              -   Value Stream Stages Catalog
	              -   Value Stream/Capability Matrix
	              -   Value Stream Map
	
	  Value Chain diagram
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Value Chain Diagram
	
	  Value Stream catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Catalog
	
	  value stream map
	
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	              -   Value Stream Map
	          -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Map
	
	  Value Stream Stages catalog
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Value Stream Stages Catalog
	
	  Value Stream/Capability matrix
	
	  -   3. Architectural Artifacts
	      -   -   3.6.3 Phase B: Business Architecture
	              -   Value Stream/Capability Matrix
	
	  view
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	          -   3.1.1 Simple Example of an Architecture Viewpoint and
	              Architecture View
	      -   3.2 Developing Architecture Views in the ADM
	          -   3.2.2 Architecture View Creation Process
	
	  viewpoint
	
	  -   3. Architectural Artifacts
	      -   3.1 Basic Concepts
	          -   3.1.1 Simple Example of an Architecture Viewpoint and
	              Architecture View
	      -   3.4 Architecture Views and Architecture Viewpoints
	      -   3.4.1 Example of Architecture Views and Architecture
	          Viewpoints
	      -   3.4.2 Architecture Views and Architecture Viewpoints in
	          Enterprise Architecture
	
	  views
	
	  -   3. Architectural Artifacts
	      -   3.2 Developing Architecture Views in the ADM
	      -   3.3 Views, Tools, and Languages
	      -   3.4 Architecture Views and Architecture Viewpoints
	      -   3.4.1 Example of Architecture Views and Architecture
	          Viewpoints
	      -   3.4.2 Architecture Views and Architecture Viewpoints in
	          Enterprise Architecture
	
	  vision
	
	  -   2. TOGAF Content Framework and Enterprise Metamodel
	      -   2.2 TOGAF Enterprise Metamodel Vision
	  -   3. Architectural Artifacts
	      -   -   3.6.2 Phase A: Architecture Vision
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.8 Architecture Vision
	
snippet togaf_adm-techniques_DOCIX_vision "  vision"
	
	  -   8. Business Transformation Readiness Assessment
	      -   8.4 Assess Readiness Factors
	          -   8.4.1 Readiness Factor Vision
	
	  vocabulary
	
	  -   2. Architecture Principles
	      -   2.6 Example Set of Architecture Principles
	          -   2.6.2 Data Principles
	              -   Principle 14: Common Vocabulary and Data Definitions
	
snippet togaf_adm_DOCIX_w "w"
	
	  work
	
	  -   2. Preliminary Phase
	      -   2.5 Approach
	          -   2.5.3 Requirements for Architecture Work
	  -   3. Phase A: Architecture Vision
	      -   3.3 Steps
	          -   3.3.11 Develop Statement of Architecture Work; Secure
	              Approval
	  -   9. Phase E: Opportunities & Solutions
	      -   9.3 Steps
	          -   9.3.9 Identify and Group Major Work Packages
	  -   10. Phase F: Migration Planning
	      -   10.3 Steps
	          -   10.3.2 Assign a Business Value to Each Work Package
	
snippet togaf_ea-capability-and-governance_DOCIX_waiver "  waiver"
	
	  -   3. Architecture Governance
	      -   3.2 Architecture Governance Framework
	          -   3.2.1 Architecture Governance Framework — Conceptual
	              Structure
	              -   Dispensation (also known as Waiver)
	
	  where
	
	  -   6. Architecture Compliance
	      -   6.5 Architecture Compliance Review Checklists
	          -   6.5.7 System Engineering/Overall Architecture Checklists
	              -   6.5.7.6 COTS (where applicable)
	
	  within
	
	  -   3. Architecture Governance
	      -   3.1 Introduction
	          -   3.1.1 Levels of Governance within the Enterprise
	
	  work
	
	  -   5. Architecture Contracts
	      -   5.2 Contents
	          -   5.2.1 Statement of Architecture Work
	
snippet togaf_introduction_C_Abbreviations_WAN "WAN"
	
	Wide Area Network
	
snippet togaf_introduction_DOCIX_what "  what"
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What is an enterprise?
	          -   What are the benefits of an Enterprise Architecture?
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	          -   What is an architecture framework?
	  -   3. Core Concepts
	      -   3.1 What is the TOGAF Standard?
	      -   3.2 What is Architecture in the Context of the TOGAF Standard?
	      -   3.3 What Kind of Architecture Does the TOGAF Standard Deal
	          With?
	
	  when
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   When should Enterprise Architecture be done?
	
	  who
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Who would benefit from using the TOGAF Standard?
	
	  why
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   Why is an Enterprise Architecture needed?
	          -   Why use the TOGAF Standard as a framework for Enterprise
	              Architecture?
	      -   1.4 Why Join The Open Group?
	
	  work
	
	  -   4. Definitions
	      -   4.88 Work Package
	
	  work package
	
	  -   4. Definitions
	      -   4.88 Work Package
	
	  would
	
	  -   1. Introduction
	      -   1.1 Executive Overview
	          -   What specifically would prompt the development of an
	              Enterprise Architecture?
	          -   Who would benefit from using the TOGAF Standard?
	
snippet togaf_architecture-content_DOCIX_within "  within"
	
	  -   7. Architecture Repository
	      -   7.4 Standards Library
	          -   7.4.4 Standards Classification within the Standards
	              Library
	
	  work
	
	  -   4. Architecture Deliverables
	      -   4.2 Deliverable Descriptions
	          -   4.2.17 Request for Architecture Work
	          -   4.2.20 Statement of Architecture Work
	
snippet togaf_applying-the-adm_DOCIX_within "  within"
	
	  -   2. Applying Iteration to the ADM
	      -   2.5 Iteration Considerations
	          -   2.5.2 Iteration within an ADM Cycle
	  -   4. Architecture Partitioning
	      -   4.2 Applying Classification to Create Partitioned
	          Architectures
	          -   4.2.1 Activities within the Preliminary Phase
	
snippet togaf_introduction_C_Abbreviations_XML "XML"
	
	Extensible Markup Language
snippet togaf_architecture-content_DOCIX_your "  your"
	
	  -   6. Enterprise Continuum
	      -   6.6 The Enterprise Continuum and Your Organization
	      -   6.6.2 Your Enterprise
	
snippet togaf_adm_DOCIX_z "z"
	
	  Zachman Framework
	
	  -   1. Introduction
	      -   1.3 Adapting the ADM
	